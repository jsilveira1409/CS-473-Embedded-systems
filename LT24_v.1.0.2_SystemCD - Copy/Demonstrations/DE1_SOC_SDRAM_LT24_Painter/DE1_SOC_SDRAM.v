
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE1_SOC_SDRAM(

	//////////// ADC //////////
	inout 		          		ADC_CS_N,
	output		          		ADC_DIN,
	input 		          		ADC_DOUT,
	output		          		ADC_SCLK,

	//////////// Audio //////////
	input 		          		AUD_ADCDAT,
	inout 		          		AUD_ADCLRCK,
	inout 		          		AUD_BCLK,
	output		          		AUD_DACDAT,
	inout 		          		AUD_DACLRCK,
	output		          		AUD_XCK,

	//////////// CLOCK //////////
	input 		          		CLOCK_50,
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,

	//////////// SDRAM //////////
	output		    [12:0]		DRAM_ADDR,
	output		     [1:0]		DRAM_BA,
	output		          		DRAM_CAS_N,
	output		          		DRAM_CKE,
	output		          		DRAM_CLK,
	output		          		DRAM_CS_N,
	inout 		    [15:0]		DRAM_DQ,
	output		          		DRAM_LDQM,
	output		          		DRAM_RAS_N,
	output		          		DRAM_UDQM,
	output		          		DRAM_WE_N,

	//////////// I2C for Audio and Video-In //////////
	output		          		FPGA_I2C_SCLK,
	inout 		          		FPGA_I2C_SDAT,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// IR //////////
	input 		          		IRDA_RXD,
	output		          		IRDA_TXD,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// PS2 //////////
	inout 		          		PS2_CLK,
	inout 		          		PS2_CLK2,
	inout 		          		PS2_DAT,
	inout 		          		PS2_DAT2,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// Video-In //////////
	input 		          		TD_CLK27,
	input 		     [7:0]		TD_DATA,
	input 		          		TD_HS,
	output		          		TD_RESET_N,
	input 		          		TD_VS,

	//////////// VGA //////////
	output		     [7:0]		VGA_B,
	output		          		VGA_BLANK_N,
	output		          		VGA_CLK,
	output		     [7:0]		VGA_G,
	output		          		VGA_HS,
	output		     [7:0]		VGA_R,
	output		          		VGA_SYNC_N,
	output		          		VGA_VS,

	//////////// GPIO_1, GPIO_1 connect to LT24 - 2.4" LCD and Touch //////////
	input 		          		LT24_ADC_BUSY,
	output		          		LT24_ADC_CS_N,
	output		          		LT24_ADC_DCLK,
	output		          		LT24_ADC_DIN,
	input 		          		LT24_ADC_DOUT,
	input 		          		LT24_ADC_PENIRQ_N,
	output		          		LT24_CS_N,
	output		    [15:0]		LT24_D,
	output		          		LT24_LCD_ON,
	output		          		LT24_RD_N,
	output		          		LT24_RESET_N,
	output		          		LT24_RS,
	output		          		LT24_WR_N
);



//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================
assign LT24_LCD_ON = 1'b1; //default on


 lt24_qsys u0 (
	  .clk_clk            (CLOCK_50),            //         clk.clk
	  
	  .reset_reset_n      (1'b1),      //       reset.reset_n
	  .key_external_connection_export                  (KEY),                    //                   key_external_connection.export
	  .lcd_reset_n_export                              (LT24_RESET_N), // lcd_reset_n.export
	  ////touch panel interface
	  .touch_panel_spi_external_MISO                    (LT24_ADC_DOUT),                    //                  touch_panel_spi_external.MISO
	  .touch_panel_spi_external_MOSI                    (LT24_ADC_DIN),                    //                                          .MOSI
	  .touch_panel_spi_external_SCLK                    (LT24_ADC_DCLK),                    //                                          .SCLK
	  .touch_panel_spi_external_SS_n                    (LT24_ADC_CS_N),                    //                                          .SS_n
	  .touch_panel_pen_irq_n_external_connection_export (LT24_ADC_PENIRQ_N), // touch_panel_pen_irq_n_external_connection.export
	  .touch_panel_busy_external_connection_export      (LT24_ADC_BUSY),       //      touch_panel_busy_external_connection.export
     .lt24_controller_0_conduit_end_cs                 (LT24_CS_N ),                 //                                          .cs
     .lt24_controller_0_conduit_end_rs                 (LT24_RS ),                 //                                          .rs
     .lt24_controller_0_conduit_end_rd                 (LT24_RD_N ),                 //                                          .rd
     .lt24_controller_0_conduit_end_wr                 (LT24_WR_N),                 //                                          .wr
     .lt24_controller_0_conduit_end_data               (LT24_D ),               //                                          .data

	  .pll_0_locked_export(),
	  .pll_outclk1_clk(DRAM_CLK),                  //               clk_sdram.clk
	  .sdram_wire_addr(DRAM_ADDR),                //              sdram_wire.addr
	  .sdram_wire_ba(DRAM_BA),                  //                        .ba
	  .sdram_wire_cas_n(DRAM_CAS_N),               //                        .cas_n
	  .sdram_wire_cke(DRAM_CKE),                 //                        .cke
	  .sdram_wire_cs_n(DRAM_CS_N),                //                        .cs_n
	  .sdram_wire_dq(DRAM_DQ),                  //                        .dq
	  .sdram_wire_dqm({DRAM_UDQM,DRAM_LDQM}),                 //                        .dqm
	  .sdram_wire_ras_n(DRAM_RAS_N),               //                        .ras_n
	  .sdram_wire_we_n(DRAM_WE_N)                 //                        .we_n
);


endmodule
