
lab.elf:     file format elf32-littlenios2
lab.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10100230

Program Header:
    LOAD off    0x00001000 vaddr 0x10100000 paddr 0x10100000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10100020 paddr 0x10100020 align 2**12
         filesz 0x000109ac memsz 0x000109ac flags r-x
    LOAD off    0x000119cc vaddr 0x101109cc paddr 0x10112528 align 2**12
         filesz 0x00001b5c memsz 0x00001b5c flags rw-
    LOAD off    0x00014084 vaddr 0x10114084 paddr 0x10114084 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10100000  10100000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  10100020  10100020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010414  10100230  10100230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000388  10110644  10110644  00011644  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b5c  101109cc  10112528  000119cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10114084  10114084  00014084  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  101141e4  101141e4  00013528  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00013528  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ed8  00000000  00000000  00013550  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00024142  00000000  00000000  00014428  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000091f5  00000000  00000000  0003856a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b800  00000000  00000000  0004175f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000022bc  00000000  00000000  0004cf60  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003a2c  00000000  00000000  0004f21c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001786c  00000000  00000000  00052c48  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0006a4b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018d0  00000000  00000000  0006a4c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006f00e  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006f011  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006f01d  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006f01e  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006f01f  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006f02a  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006f035  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  0006f040  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000034  00000000  00000000  0006f04a  2**0
                  CONTENTS, READONLY
 26 .jdi          0000512a  00000000  00000000  0006f07e  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0027dc41  00000000  00000000  000741a8  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10100000 l    d  .entry	00000000 .entry
10100020 l    d  .exceptions	00000000 .exceptions
10100230 l    d  .text	00000000 .text
10110644 l    d  .rodata	00000000 .rodata
101109cc l    d  .rwdata	00000000 .rwdata
10114084 l    d  .bss	00000000 .bss
101141e4 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../lab_bsp//obj/HAL/src/crt0.o
10100268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
10110706 l     O .rodata	00000010 zeroes.4404
10103354 l     F .text	000000bc __sbprintf
10110716 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
10103564 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
101050bc l     F .text	00000008 __fp_unlock
101050d0 l     F .text	0000019c __sinit.part.1
1010526c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
101109cc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
10110e10 l     O .rwdata	00000020 lc_ctype_charset
10110df0 l     O .rwdata	00000020 lc_message_charset
10110e30 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
10110748 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
101085f8 l     F .text	000000fc __sprint_r.part.0
1011086c l     O .rodata	00000010 zeroes.4349
10109c34 l     F .text	000000bc __sbprintf
1011087c l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
1010daa0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1010dbb4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1010dbe0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
1010dcd4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1010ddbc l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1010dea8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
1010e084 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
101124d0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
1010e2f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1010e434 l     F .text	00000034 alt_dev_reg
10111418 l     O .rwdata	00001060 jtag_uart_0
10112478 l     O .rwdata	00000028 altera_hostfs
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1010e718 l     F .text	0000020c altera_avalon_jtag_uart_irq
1010e924 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_hostfs.c
101124d4 l     O .rwdata	00000009 hcinfo.2538
101124e0 l     O .rwdata	0000000a hcinfo.2551
101124ec l     O .rwdata	00000009 hcinfo.2560
101124f8 l     O .rwdata	0000000a hcinfo.2573
10112504 l     O .rwdata	0000000a hcinfo.2586
10112510 l     O .rwdata	0000000a hcinfo.2612
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1010f52c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1010fa0c l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1010fb6c l     F .text	0000003c alt_get_errno
1010fba8 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
101140b8 g     O .bss	00000004 alt_instruction_exception_handler
10107c3c g     F .text	00000074 _mprec_log10
10107d28 g     F .text	0000008c __any_on
1010a1e8 g     F .text	00000054 _isatty_r
10110754 g     O .rodata	00000028 __mprec_tinytens
1010dfc0 g     F .text	0000007c alt_main
10100ef0 g     F .text	000000c0 _puts_r
101140e4 g     O .bss	00000100 alt_irq
1010a23c g     F .text	00000060 _lseek_r
10112528 g       *ABS*	00000000 __flash_rwdata_start
1010c478 g     F .text	00000088 .hidden __eqdf2
101141e4 g       *ABS*	00000000 __alt_heap_start
10100eb4 g     F .text	0000003c printf
1010a454 g     F .text	0000009c _wcrtomb_r
101084b8 g     F .text	0000005c __sseek
1010541c g     F .text	00000010 __sinit
1010a2fc g     F .text	00000140 __swbuf_r
10105ef0 g     F .text	0000007c _setlocale_r
10105274 g     F .text	00000078 __sfmoreglue
1010e060 g     F .text	00000024 __malloc_unlock
1010ef5c g     F .text	0000011c alt_hostfs_open
10106a78 g     F .text	0000015c memmove
10105404 g     F .text	00000018 _cleanup
10106cfc g     F .text	000000a8 _Balloc
1010c500 g     F .text	000000dc .hidden __gtdf2
1010ff94 g     F .text	00000024 altera_nios2_gen2_irq_init
10100000 g     F .entry	0000000c __reset
10100020 g       *ABS*	00000000 __flash_exceptions_start
1010a18c g     F .text	0000005c _fstat_r
1011409c g     O .bss	00000004 errno
10108434 g     F .text	00000008 __seofread
101140a4 g     O .bss	00000004 alt_argv
1011a4a0 g       *ABS*	00000000 _gp
10111298 g     O .rwdata	00000180 alt_fd_list
1010f194 g     F .text	00000068 alt_hostfs_seek
1010ffb8 g     F .text	00000090 alt_find_dev
10100d3c g     F .text	00000148 memcpy
101050c4 g     F .text	0000000c _cleanup_r
1010d8b8 g     F .text	000000dc .hidden __floatsidf
1010f6cc g     F .text	00000080 alt_fs_reg
1010faf0 g     F .text	0000007c alt_io_redirect
1010c5dc g     F .text	000000f4 .hidden __ltdf2
10110644 g       *ABS*	00000000 __DTOR_END__
10100fb0 g     F .text	00000014 puts
10110214 g     F .text	0000009c alt_exception_cause_generated_bad_addr
10108318 g     F .text	00000074 __fpclassifyd
10107b98 g     F .text	000000a4 __ratio
10109c18 g     F .text	0000001c __vfiprintf_internal
1010eb1c g     F .text	0000021c altera_avalon_jtag_uart_read
10100e84 g     F .text	00000030 _printf_r
10100000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
10100c58 g     F .text	00000064 .hidden __udivsi3
1010dd10 g     F .text	000000ac isatty
101107a4 g     O .rodata	000000c8 __mprec_tens
10105f6c g     F .text	0000000c __locale_charset
10114098 g     O .bss	00000004 __malloc_top_pad
101124a8 g     O .rwdata	00000004 __mb_cur_max
10105f9c g     F .text	0000000c _localeconv_r
10107130 g     F .text	0000003c __i2b
101058a0 g     F .text	000004c8 __sfvwrite_r
1010838c g     F .text	00000054 _sbrk_r
1010f0bc g     F .text	0000006c alt_hostfs_read
1010a29c g     F .text	00000060 _read_r
101124c8 g     O .rwdata	00000004 alt_max_fd
10109e80 g     F .text	000000f0 _fclose_r
1010508c g     F .text	00000030 fflush
10114094 g     O .bss	00000004 __malloc_max_sbrked_mem
1010b1fc g     F .text	000008ac .hidden __adddf3
10107940 g     F .text	0000010c __b2d
1010ac38 g     F .text	000005c4 .hidden __umoddi3
1010dee4 g     F .text	000000dc lseek
101124a0 g     O .rwdata	00000004 _global_impure_ptr
10107db4 g     F .text	00000564 _realloc_r
101141e4 g       *ABS*	00000000 __bss_end
1010f91c g     F .text	000000f0 alt_iic_isr_register
1010fe8c g     F .text	00000108 alt_tick
1010a63c g     F .text	000005fc .hidden __udivdi3
1010a0e8 g     F .text	00000024 _fputwc_r
1011077c g     O .rodata	00000028 __mprec_bigtens
10106f14 g     F .text	00000104 __s2b
1010d994 g     F .text	000000a8 .hidden __floatunsidf
10107680 g     F .text	00000060 __mcmp
1010543c g     F .text	00000018 __fp_lock_all
1010f8d0 g     F .text	0000004c alt_ic_irq_enabled
1010fdf0 g     F .text	0000009c alt_alarm_stop
101140ac g     O .bss	00000004 alt_irq_active
1010f078 g     F .text	00000044 alt_hostfs_close
101000fc g     F .exceptions	000000d4 alt_irq_handler
10111270 g     O .rwdata	00000028 alt_dev_null
1010f50c g     F .text	00000020 alt_dcache_flush_all
10107018 g     F .text	00000068 __hi0bits
1010d838 g     F .text	00000080 .hidden __fixdfsi
10112528 g       *ABS*	00000000 __ram_rwdata_end
101124c0 g     O .rwdata	00000008 alt_dev_list
1010e334 g     F .text	00000100 write
101109cc g       *ABS*	00000000 __ram_rodata_end
1010dc1c g     F .text	000000b8 fstat
1010c5dc g     F .text	000000f4 .hidden __ledf2
10100364 g     F .text	00000064 lcd_flag_set
101073f8 g     F .text	00000140 __pow5mult
1010870c g     F .text	0000150c ___vfiprintf_internal_r
1011408c g     O .bss	00000004 __nlocale_changed
10100cbc g     F .text	00000058 .hidden __umodsi3
101141e4 g       *ABS*	00000000 end
1010e658 g     F .text	000000c0 altera_avalon_jtag_uart_init
101001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
10110644 g       *ABS*	00000000 __CTOR_LIST__
10120000 g       *ABS*	00000000 __alt_stack_pointer
1010da3c g     F .text	00000064 .hidden __clzsi2
1010ed38 g     F .text	00000224 altera_avalon_jtag_uart_write
1010542c g     F .text	00000004 __sfp_lock_acquire
10106994 g     F .text	000000e4 memchr
1010105c g     F .text	000022dc ___vfprintf_internal_r
10105590 g     F .text	00000310 _free_r
10105f78 g     F .text	00000010 __locale_mb_cur_max
10110490 g     F .text	00000180 __call_exitprocs
10114088 g     O .bss	00000004 __mlocale_changed
101124ac g     O .rwdata	00000004 __malloc_sbrk_base
10100230 g     F .text	0000003c _start
101140b0 g     O .bss	00000004 _alt_tick_rate
10107538 g     F .text	00000148 __lshift
101140b4 g     O .bss	00000004 _alt_nticks
1010e0c0 g     F .text	00000104 read
1010e4a0 g     F .text	00000054 alt_sys_init
10110378 g     F .text	00000118 __register_exitproc
10100458 g     F .text	00000114 cmd_send
1010716c g     F .text	0000028c __multiply
1010e9c4 g     F .text	00000068 altera_avalon_jtag_uart_close
10100d14 g     F .text	00000028 .hidden __mulsi3
101109cc g       *ABS*	00000000 __ram_rwdata_start
10110644 g       *ABS*	00000000 __ram_rodata_start
101140bc g     O .bss	00000028 __malloc_current_mallinfo
10107a4c g     F .text	0000014c __d2b
1010e4f4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
10110150 g     F .text	000000c4 alt_get_fd
10109d50 g     F .text	00000054 _close_r
101102fc g     F .text	0000007c memcmp
1010e5b4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
101141e4 g       *ABS*	00000000 __alt_stack_base
1010e604 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10103410 g     F .text	00000154 __swsetup_r
1010baa8 g     F .text	000009d0 .hidden __divdf3
101052ec g     F .text	00000118 __sfp
10107cb0 g     F .text	00000078 __copybits
10110e68 g     O .rwdata	00000408 __malloc_av_
10105438 g     F .text	00000004 __sinit_lock_release
1010c6d0 g     F .text	0000086c .hidden __muldf3
101083e0 g     F .text	00000054 __sread
10110048 g     F .text	00000108 alt_find_file
1010f568 g     F .text	000000a4 alt_dev_llist_insert
1010e03c g     F .text	00000024 __malloc_lock
1010e248 g     F .text	000000b0 sbrk
10105030 g     F .text	0000005c _fflush_r
10109da4 g     F .text	000000dc _calloc_r
10114084 g       *ABS*	00000000 __bss_start
10106bd4 g     F .text	00000128 memset
1010026c g     F .text	0000006c main
101140a8 g     O .bss	00000004 alt_envp
10114090 g     O .bss	00000004 __malloc_max_total_mem
1010e554 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
1010a43c g     F .text	00000018 __swbuf
10108514 g     F .text	00000008 __sclose
10120000 g       *ABS*	00000000 __alt_heap_limit
10109f70 g     F .text	00000014 fclose
1010378c g     F .text	00001688 _dtoa_r
10106188 g     F .text	0000080c _malloc_r
1010a5b0 g     F .text	00000030 __ascii_wctomb
101124cc g     O .rwdata	00000004 alt_errno
10105d68 g     F .text	000000c4 _fwalk
10100b60 g     F .text	00000084 .hidden __divsi3
1010546c g     F .text	00000124 _malloc_trim_r
10110644 g       *ABS*	00000000 __CTOR_END__
1010851c g     F .text	000000dc strcmp
10110644 g       *ABS*	00000000 __flash_rodata_start
10110644 g       *ABS*	00000000 __DTOR_LIST__
101002d8 g     F .text	00000048 delay
1010c478 g     F .text	00000088 .hidden __nedf2
1010e468 g     F .text	00000038 alt_irq_init
1010e1c4 g     F .text	00000084 alt_release_fd
1011088c g     O .rodata	00000100 .hidden __clz_tab
10114084 g     O .bss	00000004 _PathLocale
1010056c g     F .text	00000068 start_lcd
101102b0 g     F .text	00000014 atexit
10109cf0 g     F .text	00000060 _write_r
10105fa8 g     F .text	00000018 setlocale
10100a74 g     F .text	000000ec init_image
101124a4 g     O .rwdata	00000004 _impure_ptr
101140a0 g     O .bss	00000004 alt_argc
10104e14 g     F .text	0000021c __sflush_r
1010f66c g     F .text	00000060 _do_dtors
10105f94 g     F .text	00000008 __locale_cjk_lang
10100020 g       .exceptions	00000000 alt_irq_entry
101003c8 g     F .text	00000090 lcd_reset
101078dc g     F .text	00000064 __ulp
10105454 g     F .text	00000018 __fp_unlock_all
101124b8 g     O .rwdata	00000008 alt_fs_list
1010f128 g     F .text	0000006c alt_hostfs_write
10100020 g       *ABS*	00000000 __ram_exceptions_start
10105fc0 g     F .text	0000000c localeconv
10100320 g     F .text	00000044 small_delay
1010f76c g     F .text	00000050 alt_ic_isr_register
10112528 g       *ABS*	00000000 _edata
101141e4 g       *ABS*	00000000 _end
101009d0 g     F .text	000000a4 configure_image
10109f84 g     F .text	00000164 __fputwc
10100230 g       *ABS*	00000000 __ram_exceptions_end
1010ea2c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
1010f844 g     F .text	0000008c alt_ic_irq_disable
1010843c g     F .text	0000007c __swrite
101124b0 g     O .rwdata	00000004 __malloc_trim_threshold
10105f88 g     F .text	0000000c __locale_msgcharset
101102c4 g     F .text	00000038 exit
10105e2c g     F .text	000000c4 _fwalk_reent
101076e0 g     F .text	000001fc __mdiff
10100be4 g     F .text	00000074 .hidden __modsi3
101005d4 g     F .text	000003fc init_lcd
10120000 g       *ABS*	00000000 __alt_data_end
10100020 g     F .exceptions	00000000 alt_exception
10105430 g     F .text	00000004 __sfp_lock_release
10110610 g     F .text	00000034 _exit
1010f3e0 g     F .text	0000012c alt_alarm_start
10105fcc g     F .text	000001bc __smakebuf_r
10100fc4 g     F .text	00000098 strlen
1010fc94 g     F .text	0000015c open
1010c500 g     F .text	000000dc .hidden __gedf2
101124b4 g     O .rwdata	00000004 __wctomb
101086f4 g     F .text	00000018 __sprint_r
1010f74c g     F .text	00000020 alt_icache_flush_all
1011251c g     O .rwdata	00000004 alt_priority_mask
1010f7bc g     F .text	00000088 alt_ic_irq_enable
10103338 g     F .text	0000001c __vfprintf_internal
1010a5e0 g     F .text	0000005c _wctomb_r
1010cf3c g     F .text	000008fc .hidden __subdf3
10107080 g     F .text	000000b0 __lo0bits
10112520 g     O .rwdata	00000008 alt_alarm_list
1010f60c g     F .text	00000060 _do_ctors
1010a4f0 g     F .text	000000c0 wcrtomb
1010dadc g     F .text	000000d8 close
1010de24 g     F .text	00000084 alt_load
1010a10c g     F .text	00000080 fputwc
10105434 g     F .text	00000004 __sinit_lock_acquire
10106dcc g     F .text	00000148 __multadd
10106da4 g     F .text	00000028 _Bfree
1010f1fc g     F .text	000001e4 alt_hostfs_fstat



Disassembly of section .entry:

10100000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10100000:	00440434 	movhi	at,4112
    ori r1, r1, %lo(_start)
10100004:	08408c14 	ori	at,at,560
    jmp r1
10100008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

10100020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10100020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10100024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10100028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1010002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10100030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10100034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10100038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1010003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10100040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10100044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10100048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1010004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10100050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10100054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10100058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1010005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10100060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10100064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10100068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1010006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10100070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10100074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10100078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1010007c:	10000326 	beq	r2,zero,1010008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10100080:	20000226 	beq	r4,zero,1010008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10100084:	01000fc0 	call	101000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10100088:	00000706 	br	101000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1010008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10100090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10100094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10100098:	01001d00 	call	101001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1010009c:	1000021e 	bne	r2,zero,101000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
101000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
101000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
101000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
101000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
101000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
101000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
101000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
101000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
101000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
101000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
101000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
101000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
101000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
101000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
101000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
101000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
101000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
101000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
101000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
101000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
101000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
101000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
101000f8:	ef80083a 	eret

101000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
101000fc:	defff904 	addi	sp,sp,-28
10100100:	dfc00615 	stw	ra,24(sp)
10100104:	df000515 	stw	fp,20(sp)
10100108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1010010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10100110:	0005313a 	rdctl	r2,ipending
10100114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10100118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1010011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10100120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10100124:	00800044 	movi	r2,1
10100128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1010012c:	e0fffb17 	ldw	r3,-20(fp)
10100130:	e0bffc17 	ldw	r2,-16(fp)
10100134:	1884703a 	and	r2,r3,r2
10100138:	10001426 	beq	r2,zero,1010018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1010013c:	00840474 	movhi	r2,4113
10100140:	10903904 	addi	r2,r2,16612
10100144:	e0fffd17 	ldw	r3,-12(fp)
10100148:	180690fa 	slli	r3,r3,3
1010014c:	10c5883a 	add	r2,r2,r3
10100150:	10c00017 	ldw	r3,0(r2)
10100154:	00840474 	movhi	r2,4113
10100158:	10903904 	addi	r2,r2,16612
1010015c:	e13ffd17 	ldw	r4,-12(fp)
10100160:	200890fa 	slli	r4,r4,3
10100164:	1105883a 	add	r2,r2,r4
10100168:	10800104 	addi	r2,r2,4
1010016c:	10800017 	ldw	r2,0(r2)
10100170:	1009883a 	mov	r4,r2
10100174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10100178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1010017c:	0005313a 	rdctl	r2,ipending
10100180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10100184:	e0bfff17 	ldw	r2,-4(fp)
10100188:	00000706 	br	101001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1010018c:	e0bffc17 	ldw	r2,-16(fp)
10100190:	1085883a 	add	r2,r2,r2
10100194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10100198:	e0bffd17 	ldw	r2,-12(fp)
1010019c:	10800044 	addi	r2,r2,1
101001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
101001a4:	003fe106 	br	1010012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
101001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
101001ac:	e0bffb17 	ldw	r2,-20(fp)
101001b0:	103fdb1e 	bne	r2,zero,10100120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
101001b4:	0001883a 	nop
}
101001b8:	0001883a 	nop
101001bc:	e037883a 	mov	sp,fp
101001c0:	dfc00117 	ldw	ra,4(sp)
101001c4:	df000017 	ldw	fp,0(sp)
101001c8:	dec00204 	addi	sp,sp,8
101001cc:	f800283a 	ret

101001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
101001d0:	defffb04 	addi	sp,sp,-20
101001d4:	dfc00415 	stw	ra,16(sp)
101001d8:	df000315 	stw	fp,12(sp)
101001dc:	df000304 	addi	fp,sp,12
101001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
101001e4:	00bfffc4 	movi	r2,-1
101001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
101001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
101001f0:	d0a70617 	ldw	r2,-25576(gp)
101001f4:	10000726 	beq	r2,zero,10100214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
101001f8:	d0a70617 	ldw	r2,-25576(gp)
101001fc:	e0fffd17 	ldw	r3,-12(fp)
10100200:	e1bffe17 	ldw	r6,-8(fp)
10100204:	e17fff17 	ldw	r5,-4(fp)
10100208:	1809883a 	mov	r4,r3
1010020c:	103ee83a 	callr	r2
10100210:	00000206 	br	1010021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10100214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10100218:	0005883a 	mov	r2,zero
}
1010021c:	e037883a 	mov	sp,fp
10100220:	dfc00117 	ldw	ra,4(sp)
10100224:	df000017 	ldw	fp,0(sp)
10100228:	dec00204 	addi	sp,sp,8
1010022c:	f800283a 	ret

Disassembly of section .text:

10100230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10100230:	06c404b4 	movhi	sp,4114
    ori sp, sp, %lo(__alt_stack_pointer)
10100234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10100238:	06840474 	movhi	gp,4113
    ori gp, gp, %lo(_gp)
1010023c:	d6a92814 	ori	gp,gp,42144
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10100240:	00840474 	movhi	r2,4113
    ori r2, r2, %lo(__bss_start)
10100244:	10902114 	ori	r2,r2,16516

    movhi r3, %hi(__bss_end)
10100248:	00c40474 	movhi	r3,4113
    ori r3, r3, %lo(__bss_end)
1010024c:	18d07914 	ori	r3,r3,16868

    beq r2, r3, 1f
10100250:	10c00326 	beq	r2,r3,10100260 <_start+0x30>

0:
    stw zero, (r2)
10100254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10100258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
1010025c:	10fffd36 	bltu	r2,r3,10100254 <__alt_data_end+0xfffe0254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10100260:	010de240 	call	1010de24 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10100264:	010dfc00 	call	1010dfc0 <alt_main>

10100268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10100268:	003fff06 	br	10100268 <__alt_data_end+0xfffe0268>

1010026c <main>:
void cmd_send(uint16_t cmd, uint16_t n, uint16_t* params);
void start_lcd();
void init_lcd();


int main(){
1010026c:	defffc04 	addi	sp,sp,-16
10100270:	dfc00315 	stw	ra,12(sp)
10100274:	df000215 	stw	fp,8(sp)
10100278:	df000204 	addi	fp,sp,8
	uint32_t img_address = HPS_0_BRIDGES_BASE;
1010027c:	e03ffe15 	stw	zero,-8(fp)
	uint32_t img_length = 240 * 320 * 2;
10100280:	008000b4 	movhi	r2,2
10100284:	10960004 	addi	r2,r2,22528
10100288:	e0bfff15 	stw	r2,-4(fp)

	printf("Hello from Nios II!");
1010028c:	01040474 	movhi	r4,4113
10100290:	21019104 	addi	r4,r4,1604
10100294:	0100eb40 	call	10100eb4 <printf>
	// reset lcd
	lcd_reset();
10100298:	01003c80 	call	101003c8 <lcd_reset>
	// init lcd
	init_lcd();
1010029c:	01005d40 	call	101005d4 <init_lcd>
	// set image in memory
	init_image(img_address, 320, 240);
101002a0:	01803c04 	movi	r6,240
101002a4:	01405004 	movi	r5,320
101002a8:	e13ffe17 	ldw	r4,-8(fp)
101002ac:	0100a740 	call	10100a74 <init_image>
	// configure image
	configure_image(img_address, img_length);
101002b0:	e17fff17 	ldw	r5,-4(fp)
101002b4:	e13ffe17 	ldw	r4,-8(fp)
101002b8:	01009d00 	call	101009d0 <configure_image>
	// start lcd
	start_lcd();
101002bc:	010056c0 	call	1010056c <start_lcd>
	return 0;
101002c0:	0005883a 	mov	r2,zero
}
101002c4:	e037883a 	mov	sp,fp
101002c8:	dfc00117 	ldw	ra,4(sp)
101002cc:	df000017 	ldw	fp,0(sp)
101002d0:	dec00204 	addi	sp,sp,8
101002d4:	f800283a 	ret

101002d8 <delay>:



void delay(){
101002d8:	defffe04 	addi	sp,sp,-8
101002dc:	df000115 	stw	fp,4(sp)
101002e0:	df000104 	addi	fp,sp,4
	uint32_t c;
	for (c = 1; c <= 3000000; c++){}
101002e4:	00800044 	movi	r2,1
101002e8:	e0bfff15 	stw	r2,-4(fp)
101002ec:	00000306 	br	101002fc <delay+0x24>
101002f0:	e0bfff17 	ldw	r2,-4(fp)
101002f4:	10800044 	addi	r2,r2,1
101002f8:	e0bfff15 	stw	r2,-4(fp)
101002fc:	e0ffff17 	ldw	r3,-4(fp)
10100300:	00800bb4 	movhi	r2,46
10100304:	10b1b004 	addi	r2,r2,-14656
10100308:	10fff92e 	bgeu	r2,r3,101002f0 <__alt_data_end+0xfffe02f0>
}
1010030c:	0001883a 	nop
10100310:	e037883a 	mov	sp,fp
10100314:	df000017 	ldw	fp,0(sp)
10100318:	dec00104 	addi	sp,sp,4
1010031c:	f800283a 	ret

10100320 <small_delay>:

void small_delay(){
10100320:	defffe04 	addi	sp,sp,-8
10100324:	df000115 	stw	fp,4(sp)
10100328:	df000104 	addi	fp,sp,4
	uint32_t c;
	for (c = 1; c <= 1000; c++){}
1010032c:	00800044 	movi	r2,1
10100330:	e0bfff15 	stw	r2,-4(fp)
10100334:	00000306 	br	10100344 <small_delay+0x24>
10100338:	e0bfff17 	ldw	r2,-4(fp)
1010033c:	10800044 	addi	r2,r2,1
10100340:	e0bfff15 	stw	r2,-4(fp)
10100344:	e0bfff17 	ldw	r2,-4(fp)
10100348:	1080fa70 	cmpltui	r2,r2,1001
1010034c:	103ffa1e 	bne	r2,zero,10100338 <__alt_data_end+0xfffe0338>
}
10100350:	0001883a 	nop
10100354:	e037883a 	mov	sp,fp
10100358:	df000017 	ldw	fp,0(sp)
1010035c:	dec00104 	addi	sp,sp,4
10100360:	f800283a 	ret

10100364 <lcd_flag_set>:


void lcd_flag_set (uint16_t flag){
10100364:	defffc04 	addi	sp,sp,-16
10100368:	dfc00315 	stw	ra,12(sp)
1010036c:	df000215 	stw	fp,8(sp)
10100370:	df000204 	addi	fp,sp,8
10100374:	2005883a 	mov	r2,r4
10100378:	e0bfff0d 	sth	r2,-4(fp)
	uint16_t reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
1010037c:	008400b4 	movhi	r2,4098
10100380:	10800104 	addi	r2,r2,4
10100384:	1080002b 	ldhuio	r2,0(r2)
10100388:	10bfffcc 	andi	r2,r2,65535
1010038c:	e0bffe0d 	sth	r2,-8(fp)
	delay();
10100390:	01002d80 	call	101002d8 <delay>
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS, (reg_flag_val | flag));
10100394:	e0fffe0b 	ldhu	r3,-8(fp)
10100398:	e0bfff0b 	ldhu	r2,-4(fp)
1010039c:	1884b03a 	or	r2,r3,r2
101003a0:	10ffffcc 	andi	r3,r2,65535
101003a4:	008400b4 	movhi	r2,4098
101003a8:	10800104 	addi	r2,r2,4
101003ac:	10c0002d 	sthio	r3,0(r2)
}
101003b0:	0001883a 	nop
101003b4:	e037883a 	mov	sp,fp
101003b8:	dfc00117 	ldw	ra,4(sp)
101003bc:	df000017 	ldw	fp,0(sp)
101003c0:	dec00204 	addi	sp,sp,8
101003c4:	f800283a 	ret

101003c8 <lcd_reset>:

void lcd_reset(){
101003c8:	defffd04 	addi	sp,sp,-12
101003cc:	dfc00215 	stw	ra,8(sp)
101003d0:	df000115 	stw	fp,4(sp)
101003d4:	df000104 	addi	fp,sp,4
	lcd_flag_set(0x04);
101003d8:	01000104 	movi	r4,4
101003dc:	01003640 	call	10100364 <lcd_flag_set>

	delay();
101003e0:	01002d80 	call	101002d8 <delay>

	uint16_t reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
101003e4:	008400b4 	movhi	r2,4098
101003e8:	10800104 	addi	r2,r2,4
101003ec:	1080002b 	ldhuio	r2,0(r2)
101003f0:	10bfffcc 	andi	r2,r2,65535
101003f4:	e0bfff0d 	sth	r2,-4(fp)

	printf("%lu  \n", (unsigned long)reg_flag_val);
101003f8:	e0bfff0b 	ldhu	r2,-4(fp)
101003fc:	100b883a 	mov	r5,r2
10100400:	01040474 	movhi	r4,4113
10100404:	21019604 	addi	r4,r4,1624
10100408:	0100eb40 	call	10100eb4 <printf>

	delay();
1010040c:	01002d80 	call	101002d8 <delay>

	while( reg_flag_val & 0x04){
10100410:	00000506 	br	10100428 <lcd_reset+0x60>
		reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
10100414:	008400b4 	movhi	r2,4098
10100418:	10800104 	addi	r2,r2,4
1010041c:	1080002b 	ldhuio	r2,0(r2)
10100420:	10bfffcc 	andi	r2,r2,65535
10100424:	e0bfff0d 	sth	r2,-4(fp)

	printf("%lu  \n", (unsigned long)reg_flag_val);

	delay();

	while( reg_flag_val & 0x04){
10100428:	e0bfff0b 	ldhu	r2,-4(fp)
1010042c:	1080010c 	andi	r2,r2,4
10100430:	103ff81e 	bne	r2,zero,10100414 <__alt_data_end+0xfffe0414>
		reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	}
	printf("reset finished \n");
10100434:	01040474 	movhi	r4,4113
10100438:	21019804 	addi	r4,r4,1632
1010043c:	0100fb00 	call	10100fb0 <puts>

}
10100440:	0001883a 	nop
10100444:	e037883a 	mov	sp,fp
10100448:	dfc00117 	ldw	ra,4(sp)
1010044c:	df000017 	ldw	fp,0(sp)
10100450:	dec00204 	addi	sp,sp,8
10100454:	f800283a 	ret

10100458 <cmd_send>:

void cmd_send(uint16_t cmd, uint16_t n, uint16_t* params){
10100458:	defffa04 	addi	sp,sp,-24
1010045c:	dfc00515 	stw	ra,20(sp)
10100460:	df000415 	stw	fp,16(sp)
10100464:	df000404 	addi	fp,sp,16
10100468:	2007883a 	mov	r3,r4
1010046c:	2805883a 	mov	r2,r5
10100470:	e1bfff15 	stw	r6,-4(fp)
10100474:	e0fffd0d 	sth	r3,-12(fp)
10100478:	e0bffe0d 	sth	r2,-8(fp)
	uint16_t index = 0;
1010047c:	e03ffc0d 	sth	zero,-16(fp)

	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_CMD_REG, cmd);
10100480:	e0fffd0b 	ldhu	r3,-12(fp)
10100484:	008400b4 	movhi	r2,4098
10100488:	10800144 	addi	r2,r2,5
1010048c:	10c0002d 	sthio	r3,0(r2)
	small_delay();
10100490:	01003200 	call	10100320 <small_delay>
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_NB_PARAM, n);
10100494:	e0fffe0b 	ldhu	r3,-8(fp)
10100498:	008400b4 	movhi	r2,4098
1010049c:	10800184 	addi	r2,r2,6
101004a0:	10c0002d 	sthio	r3,0(r2)


	while(index < n){
101004a4:	00000f06 	br	101004e4 <cmd_send+0x8c>
		IOWR_16DIRECT(LCD_0_BASE, LCD_REG_PARAM(index), params[index]);
101004a8:	e0fffc0b 	ldhu	r3,-16(fp)
101004ac:	008400b4 	movhi	r2,4098
101004b0:	1887883a 	add	r3,r3,r2
101004b4:	e0bffc0b 	ldhu	r2,-16(fp)
101004b8:	1085883a 	add	r2,r2,r2
101004bc:	1009883a 	mov	r4,r2
101004c0:	e0bfff17 	ldw	r2,-4(fp)
101004c4:	1105883a 	add	r2,r2,r4
101004c8:	1080000b 	ldhu	r2,0(r2)
101004cc:	10bfffcc 	andi	r2,r2,65535
101004d0:	1880002d 	sthio	r2,0(r3)
		small_delay();
101004d4:	01003200 	call	10100320 <small_delay>
		++index;
101004d8:	e0bffc0b 	ldhu	r2,-16(fp)
101004dc:	10800044 	addi	r2,r2,1
101004e0:	e0bffc0d 	sth	r2,-16(fp)
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_CMD_REG, cmd);
	small_delay();
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_NB_PARAM, n);


	while(index < n){
101004e4:	e0fffc0b 	ldhu	r3,-16(fp)
101004e8:	e0bffe0b 	ldhu	r2,-8(fp)
101004ec:	18bfee36 	bltu	r3,r2,101004a8 <__alt_data_end+0xfffe04a8>
		IOWR_16DIRECT(LCD_0_BASE, LCD_REG_PARAM(index), params[index]);
		small_delay();
		++index;
	}

	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS, 0x2);
101004f0:	00c00084 	movi	r3,2
101004f4:	008400b4 	movhi	r2,4098
101004f8:	10800104 	addi	r2,r2,4
101004fc:	10c0002d 	sthio	r3,0(r2)
	uint16_t reg_flags = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
10100500:	008400b4 	movhi	r2,4098
10100504:	10800104 	addi	r2,r2,4
10100508:	1080002b 	ldhuio	r2,0(r2)
1010050c:	10bfffcc 	andi	r2,r2,65535
10100510:	e0bffc8d 	sth	r2,-14(fp)
	while(reg_flags & 0x2){
10100514:	00000506 	br	1010052c <cmd_send+0xd4>
		reg_flags = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
10100518:	008400b4 	movhi	r2,4098
1010051c:	10800104 	addi	r2,r2,4
10100520:	1080002b 	ldhuio	r2,0(r2)
10100524:	10bfffcc 	andi	r2,r2,65535
10100528:	e0bffc8d 	sth	r2,-14(fp)
		++index;
	}

	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS, 0x2);
	uint16_t reg_flags = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	while(reg_flags & 0x2){
1010052c:	e0bffc8b 	ldhu	r2,-14(fp)
10100530:	1080008c 	andi	r2,r2,2
10100534:	103ff81e 	bne	r2,zero,10100518 <__alt_data_end+0xfffe0518>
		reg_flags = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	}
	printf("command sent \n", (unsigned long)reg_flags,"\n");
10100538:	e0bffc8b 	ldhu	r2,-14(fp)
1010053c:	01840474 	movhi	r6,4113
10100540:	31819c04 	addi	r6,r6,1648
10100544:	100b883a 	mov	r5,r2
10100548:	01040474 	movhi	r4,4113
1010054c:	21019d04 	addi	r4,r4,1652
10100550:	0100eb40 	call	10100eb4 <printf>
}
10100554:	0001883a 	nop
10100558:	e037883a 	mov	sp,fp
1010055c:	dfc00117 	ldw	ra,4(sp)
10100560:	df000017 	ldw	fp,0(sp)
10100564:	dec00204 	addi	sp,sp,8
10100568:	f800283a 	ret

1010056c <start_lcd>:

void start_lcd(){
1010056c:	defffd04 	addi	sp,sp,-12
10100570:	dfc00215 	stw	ra,8(sp)
10100574:	df000115 	stw	fp,4(sp)
10100578:	df000104 	addi	fp,sp,4
	lcd_flag_set(0x01);
1010057c:	01000044 	movi	r4,1
10100580:	01003640 	call	10100364 <lcd_flag_set>
	uint16_t reg_flags_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
10100584:	008400b4 	movhi	r2,4098
10100588:	10800104 	addi	r2,r2,4
1010058c:	1080002b 	ldhuio	r2,0(r2)
10100590:	10bfffcc 	andi	r2,r2,65535
10100594:	e0bfff0d 	sth	r2,-4(fp)

	while(reg_flags_val & 0x1){
10100598:	00000506 	br	101005b0 <start_lcd+0x44>
		reg_flags_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
1010059c:	008400b4 	movhi	r2,4098
101005a0:	10800104 	addi	r2,r2,4
101005a4:	1080002b 	ldhuio	r2,0(r2)
101005a8:	10bfffcc 	andi	r2,r2,65535
101005ac:	e0bfff0d 	sth	r2,-4(fp)

void start_lcd(){
	lcd_flag_set(0x01);
	uint16_t reg_flags_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);

	while(reg_flags_val & 0x1){
101005b0:	e0bfff0b 	ldhu	r2,-4(fp)
101005b4:	1080004c 	andi	r2,r2,1
101005b8:	103ff81e 	bne	r2,zero,1010059c <__alt_data_end+0xfffe059c>
		reg_flags_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	}
}
101005bc:	0001883a 	nop
101005c0:	e037883a 	mov	sp,fp
101005c4:	dfc00117 	ldw	ra,4(sp)
101005c8:	df000017 	ldw	fp,0(sp)
101005cc:	dec00204 	addi	sp,sp,8
101005d0:	f800283a 	ret

101005d4 <init_lcd>:
void init_lcd(){
101005d4:	deffd704 	addi	sp,sp,-164
101005d8:	dfc02815 	stw	ra,160(sp)
101005dc:	df002715 	stw	fp,156(sp)
101005e0:	df002704 	addi	fp,sp,156
	cmd_send(0x11, 0, (uint16_t []){ 0x09, 0x0a});
101005e4:	00800244 	movi	r2,9
101005e8:	e0bfff0d 	sth	r2,-4(fp)
101005ec:	00800284 	movi	r2,10
101005f0:	e0bfff8d 	sth	r2,-2(fp)
101005f4:	e0bfff04 	addi	r2,fp,-4
101005f8:	100d883a 	mov	r6,r2
101005fc:	000b883a 	mov	r5,zero
10100600:	01000444 	movi	r4,17
10100604:	01004580 	call	10100458 <cmd_send>
	small_delay();
10100608:	01003200 	call	10100320 <small_delay>
	cmd_send(0xcf, 3, (uint16_t []){ 0x0, 0x81, 0xc0});
1010060c:	e03ffd8d 	sth	zero,-10(fp)
10100610:	00802044 	movi	r2,129
10100614:	e0bffe0d 	sth	r2,-8(fp)
10100618:	00803004 	movi	r2,192
1010061c:	e0bffe8d 	sth	r2,-6(fp)
10100620:	e0bffd84 	addi	r2,fp,-10
10100624:	100d883a 	mov	r6,r2
10100628:	014000c4 	movi	r5,3
1010062c:	010033c4 	movi	r4,207
10100630:	01004580 	call	10100458 <cmd_send>
	small_delay();
10100634:	01003200 	call	10100320 <small_delay>
	cmd_send(0xed, 4, (uint16_t []){ 0x64, 0x03, 0x12, 0x81});
10100638:	00801904 	movi	r2,100
1010063c:	e0bffb8d 	sth	r2,-18(fp)
10100640:	008000c4 	movi	r2,3
10100644:	e0bffc0d 	sth	r2,-16(fp)
10100648:	00800484 	movi	r2,18
1010064c:	e0bffc8d 	sth	r2,-14(fp)
10100650:	00802044 	movi	r2,129
10100654:	e0bffd0d 	sth	r2,-12(fp)
10100658:	e0bffb84 	addi	r2,fp,-18
1010065c:	100d883a 	mov	r6,r2
10100660:	01400104 	movi	r5,4
10100664:	01003b44 	movi	r4,237
10100668:	01004580 	call	10100458 <cmd_send>
	small_delay();
1010066c:	01003200 	call	10100320 <small_delay>
	cmd_send(0xe8, 3, (uint16_t []){ 0x85, 0x01, 0x0798});
10100670:	00802144 	movi	r2,133
10100674:	e0bffa0d 	sth	r2,-24(fp)
10100678:	00800044 	movi	r2,1
1010067c:	e0bffa8d 	sth	r2,-22(fp)
10100680:	0081e604 	movi	r2,1944
10100684:	e0bffb0d 	sth	r2,-20(fp)
10100688:	e0bffa04 	addi	r2,fp,-24
1010068c:	100d883a 	mov	r6,r2
10100690:	014000c4 	movi	r5,3
10100694:	01003a04 	movi	r4,232
10100698:	01004580 	call	10100458 <cmd_send>
	small_delay();
1010069c:	01003200 	call	10100320 <small_delay>
	cmd_send(0xcb, 5, (uint16_t []){ 0x39, 0x2c, 0x00, 0x34, 0x02});
101006a0:	00800e44 	movi	r2,57
101006a4:	e0bff78d 	sth	r2,-34(fp)
101006a8:	00800b04 	movi	r2,44
101006ac:	e0bff80d 	sth	r2,-32(fp)
101006b0:	e03ff88d 	sth	zero,-30(fp)
101006b4:	00800d04 	movi	r2,52
101006b8:	e0bff90d 	sth	r2,-28(fp)
101006bc:	00800084 	movi	r2,2
101006c0:	e0bff98d 	sth	r2,-26(fp)
101006c4:	e0bff784 	addi	r2,fp,-34
101006c8:	100d883a 	mov	r6,r2
101006cc:	01400144 	movi	r5,5
101006d0:	010032c4 	movi	r4,203
101006d4:	01004580 	call	10100458 <cmd_send>
	small_delay();
101006d8:	01003200 	call	10100320 <small_delay>
	cmd_send(0xf7, 1, (uint16_t []){ 0x20});
101006dc:	00800804 	movi	r2,32
101006e0:	e0bff70d 	sth	r2,-36(fp)
101006e4:	e0bff704 	addi	r2,fp,-36
101006e8:	100d883a 	mov	r6,r2
101006ec:	01400044 	movi	r5,1
101006f0:	01003dc4 	movi	r4,247
101006f4:	01004580 	call	10100458 <cmd_send>
	small_delay();
101006f8:	01003200 	call	10100320 <small_delay>
	cmd_send(0xea, 2, (uint16_t []){ 0x00, 0x00});
101006fc:	e03ff60d 	sth	zero,-40(fp)
10100700:	e03ff68d 	sth	zero,-38(fp)
10100704:	e0bff604 	addi	r2,fp,-40
10100708:	100d883a 	mov	r6,r2
1010070c:	01400084 	movi	r5,2
10100710:	01003a84 	movi	r4,234
10100714:	01004580 	call	10100458 <cmd_send>
	small_delay();
10100718:	01003200 	call	10100320 <small_delay>
	cmd_send(0xb1, 2, (uint16_t []){ 0x00, 0x1b});
1010071c:	e03ff50d 	sth	zero,-44(fp)
10100720:	008006c4 	movi	r2,27
10100724:	e0bff58d 	sth	r2,-42(fp)
10100728:	e0bff504 	addi	r2,fp,-44
1010072c:	100d883a 	mov	r6,r2
10100730:	01400084 	movi	r5,2
10100734:	01002c44 	movi	r4,177
10100738:	01004580 	call	10100458 <cmd_send>
	small_delay();
1010073c:	01003200 	call	10100320 <small_delay>
	cmd_send(0xb6, 2, (uint16_t []){ 0x0a, 0xa2});
10100740:	00800284 	movi	r2,10
10100744:	e0bff40d 	sth	r2,-48(fp)
10100748:	00802884 	movi	r2,162
1010074c:	e0bff48d 	sth	r2,-46(fp)
10100750:	e0bff404 	addi	r2,fp,-48
10100754:	100d883a 	mov	r6,r2
10100758:	01400084 	movi	r5,2
1010075c:	01002d84 	movi	r4,182
10100760:	01004580 	call	10100458 <cmd_send>
	small_delay();
10100764:	01003200 	call	10100320 <small_delay>
	cmd_send(0xc0, 1, (uint16_t []){ 0x05});
10100768:	00800144 	movi	r2,5
1010076c:	e0bff38d 	sth	r2,-50(fp)
10100770:	e0bff384 	addi	r2,fp,-50
10100774:	100d883a 	mov	r6,r2
10100778:	01400044 	movi	r5,1
1010077c:	01003004 	movi	r4,192
10100780:	01004580 	call	10100458 <cmd_send>
	small_delay();
10100784:	01003200 	call	10100320 <small_delay>
	cmd_send(0xc1, 1, (uint16_t []){ 0x11});
10100788:	00800444 	movi	r2,17
1010078c:	e0bff30d 	sth	r2,-52(fp)
10100790:	e0bff304 	addi	r2,fp,-52
10100794:	100d883a 	mov	r6,r2
10100798:	01400044 	movi	r5,1
1010079c:	01003044 	movi	r4,193
101007a0:	01004580 	call	10100458 <cmd_send>
	small_delay();
101007a4:	01003200 	call	10100320 <small_delay>
	cmd_send(0xc5, 2, (uint16_t []){ 0x45, 0x45});
101007a8:	00801144 	movi	r2,69
101007ac:	e0bff20d 	sth	r2,-56(fp)
101007b0:	00801144 	movi	r2,69
101007b4:	e0bff28d 	sth	r2,-54(fp)
101007b8:	e0bff204 	addi	r2,fp,-56
101007bc:	100d883a 	mov	r6,r2
101007c0:	01400084 	movi	r5,2
101007c4:	01003144 	movi	r4,197
101007c8:	01004580 	call	10100458 <cmd_send>
	small_delay();
101007cc:	01003200 	call	10100320 <small_delay>
	cmd_send(0xc7, 1, (uint16_t []){ 0xa2});
101007d0:	00802884 	movi	r2,162
101007d4:	e0bff18d 	sth	r2,-58(fp)
101007d8:	e0bff184 	addi	r2,fp,-58
101007dc:	100d883a 	mov	r6,r2
101007e0:	01400044 	movi	r5,1
101007e4:	010031c4 	movi	r4,199
101007e8:	01004580 	call	10100458 <cmd_send>
	small_delay();
101007ec:	01003200 	call	10100320 <small_delay>
	cmd_send(0x36, 1, (uint16_t []){ 0x08}); //BGR (originally rgb with 0x48)
101007f0:	00800204 	movi	r2,8
101007f4:	e0bff10d 	sth	r2,-60(fp)
101007f8:	e0bff104 	addi	r2,fp,-60
101007fc:	100d883a 	mov	r6,r2
10100800:	01400044 	movi	r5,1
10100804:	01000d84 	movi	r4,54
10100808:	01004580 	call	10100458 <cmd_send>
	small_delay();
1010080c:	01003200 	call	10100320 <small_delay>
	cmd_send(0xf2, 1, (uint16_t []){ 0x00});
10100810:	e03ff08d 	sth	zero,-62(fp)
10100814:	e0bff084 	addi	r2,fp,-62
10100818:	100d883a 	mov	r6,r2
1010081c:	01400044 	movi	r5,1
10100820:	01003c84 	movi	r4,242
10100824:	01004580 	call	10100458 <cmd_send>
	small_delay();
10100828:	01003200 	call	10100320 <small_delay>
	cmd_send(0x26, 1, (uint16_t []){ 0x01});
1010082c:	00800044 	movi	r2,1
10100830:	e0bff00d 	sth	r2,-64(fp)
10100834:	e0bff004 	addi	r2,fp,-64
10100838:	100d883a 	mov	r6,r2
1010083c:	01400044 	movi	r5,1
10100840:	01000984 	movi	r4,38
10100844:	01004580 	call	10100458 <cmd_send>
	small_delay();
10100848:	01003200 	call	10100320 <small_delay>
	cmd_send(0xe0, 15, (uint16_t []){ 0xf, 0x26, 0x24, 0xb, 0xe, 0x8, 0x4b, 0xa8, 0x3b, 0x0a, 0x14, 0x06, 0x10, 0x09, 0x00});
1010084c:	00840474 	movhi	r2,4113
10100850:	1081a104 	addi	r2,r2,1668
10100854:	e0ffe884 	addi	r3,fp,-94
10100858:	1009883a 	mov	r4,r2
1010085c:	00800784 	movi	r2,30
10100860:	100d883a 	mov	r6,r2
10100864:	200b883a 	mov	r5,r4
10100868:	1809883a 	mov	r4,r3
1010086c:	0100d3c0 	call	10100d3c <memcpy>
10100870:	e0bfe884 	addi	r2,fp,-94
10100874:	100d883a 	mov	r6,r2
10100878:	014003c4 	movi	r5,15
1010087c:	01003804 	movi	r4,224
10100880:	01004580 	call	10100458 <cmd_send>
	small_delay();
10100884:	01003200 	call	10100320 <small_delay>
	cmd_send(0xe1, 15, (uint16_t []){ 0x0, 0x1c, 0x20, 0x4, 0x10, 0x8, 0x34, 0x47, 0x44, 0x05, 0xb, 0x9, 0x2f, 0x36, 0x0f});
10100888:	00840474 	movhi	r2,4113
1010088c:	1081a884 	addi	r2,r2,1698
10100890:	e0ffe104 	addi	r3,fp,-124
10100894:	1009883a 	mov	r4,r2
10100898:	00800784 	movi	r2,30
1010089c:	100d883a 	mov	r6,r2
101008a0:	200b883a 	mov	r5,r4
101008a4:	1809883a 	mov	r4,r3
101008a8:	0100d3c0 	call	10100d3c <memcpy>
101008ac:	e0bfe104 	addi	r2,fp,-124
101008b0:	100d883a 	mov	r6,r2
101008b4:	014003c4 	movi	r5,15
101008b8:	01003844 	movi	r4,225
101008bc:	01004580 	call	10100458 <cmd_send>
	small_delay();
101008c0:	01003200 	call	10100320 <small_delay>
	cmd_send(0x2a, 4, (uint16_t []){ 0x0, 0x0, 0x0, 0xef});
101008c4:	e03fdf0d 	sth	zero,-132(fp)
101008c8:	e03fdf8d 	sth	zero,-130(fp)
101008cc:	e03fe00d 	sth	zero,-128(fp)
101008d0:	00803bc4 	movi	r2,239
101008d4:	e0bfe08d 	sth	r2,-126(fp)
101008d8:	e0bfdf04 	addi	r2,fp,-132
101008dc:	100d883a 	mov	r6,r2
101008e0:	01400104 	movi	r5,4
101008e4:	01000a84 	movi	r4,42
101008e8:	01004580 	call	10100458 <cmd_send>
	small_delay();
101008ec:	01003200 	call	10100320 <small_delay>
	cmd_send(0x2b, 4, (uint16_t []){ 0x0, 0x0, 0x01, 0x3f});
101008f0:	e03fdd0d 	sth	zero,-140(fp)
101008f4:	e03fdd8d 	sth	zero,-138(fp)
101008f8:	00800044 	movi	r2,1
101008fc:	e0bfde0d 	sth	r2,-136(fp)
10100900:	00800fc4 	movi	r2,63
10100904:	e0bfde8d 	sth	r2,-134(fp)
10100908:	e0bfdd04 	addi	r2,fp,-140
1010090c:	100d883a 	mov	r6,r2
10100910:	01400104 	movi	r5,4
10100914:	01000ac4 	movi	r4,43
10100918:	01004580 	call	10100458 <cmd_send>
	small_delay();
1010091c:	01003200 	call	10100320 <small_delay>
	cmd_send(0x3a, 1, (uint16_t []){ 0x55}); //RGB
10100920:	00801544 	movi	r2,85
10100924:	e0bfdc8d 	sth	r2,-142(fp)
10100928:	e0bfdc84 	addi	r2,fp,-142
1010092c:	100d883a 	mov	r6,r2
10100930:	01400044 	movi	r5,1
10100934:	01000e84 	movi	r4,58
10100938:	01004580 	call	10100458 <cmd_send>
	small_delay();
1010093c:	01003200 	call	10100320 <small_delay>
	cmd_send(0xf6, 3, (uint16_t []){ 0x01, 0x30, 0x0});
10100940:	00800044 	movi	r2,1
10100944:	e0bfdb0d 	sth	r2,-148(fp)
10100948:	00800c04 	movi	r2,48
1010094c:	e0bfdb8d 	sth	r2,-146(fp)
10100950:	e03fdc0d 	sth	zero,-144(fp)
10100954:	e0bfdb04 	addi	r2,fp,-148
10100958:	100d883a 	mov	r6,r2
1010095c:	014000c4 	movi	r5,3
10100960:	01003d84 	movi	r4,246
10100964:	01004580 	call	10100458 <cmd_send>
	small_delay();
10100968:	01003200 	call	10100320 <small_delay>
	cmd_send(0x29, 0, (uint16_t []){ 0x09, 0x0a});
1010096c:	00800244 	movi	r2,9
10100970:	e0bfda0d 	sth	r2,-152(fp)
10100974:	00800284 	movi	r2,10
10100978:	e0bfda8d 	sth	r2,-150(fp)
1010097c:	e0bfda04 	addi	r2,fp,-152
10100980:	100d883a 	mov	r6,r2
10100984:	000b883a 	mov	r5,zero
10100988:	01000a44 	movi	r4,41
1010098c:	01004580 	call	10100458 <cmd_send>
	small_delay();
10100990:	01003200 	call	10100320 <small_delay>
	cmd_send(0x2c, 0, (uint16_t []){ 0x09, 0x0a});
10100994:	00800244 	movi	r2,9
10100998:	e0bfd90d 	sth	r2,-156(fp)
1010099c:	00800284 	movi	r2,10
101009a0:	e0bfd98d 	sth	r2,-154(fp)
101009a4:	e1bfd904 	addi	r6,fp,-156
101009a8:	000b883a 	mov	r5,zero
101009ac:	01000b04 	movi	r4,44
101009b0:	01004580 	call	10100458 <cmd_send>
	small_delay();
101009b4:	01003200 	call	10100320 <small_delay>
}
101009b8:	0001883a 	nop
101009bc:	e037883a 	mov	sp,fp
101009c0:	dfc00117 	ldw	ra,4(sp)
101009c4:	df000017 	ldw	fp,0(sp)
101009c8:	dec00204 	addi	sp,sp,8
101009cc:	f800283a 	ret

101009d0 <configure_image>:

void configure_image(uint32_t image_address, uint32_t image_size){
101009d0:	defffa04 	addi	sp,sp,-24
101009d4:	dfc00515 	stw	ra,20(sp)
101009d8:	df000415 	stw	fp,16(sp)
101009dc:	df000404 	addi	fp,sp,16
101009e0:	e13ffe15 	stw	r4,-8(fp)
101009e4:	e17fff15 	stw	r5,-4(fp)
	uint16_t image_address_low = image_address & 0xFFFF;
101009e8:	e0bffe17 	ldw	r2,-8(fp)
101009ec:	e0bffc0d 	sth	r2,-16(fp)
	uint16_t image_address_high = (image_address >> 16) & 0xFFFF;
101009f0:	e0bffe17 	ldw	r2,-8(fp)
101009f4:	1004d43a 	srli	r2,r2,16
101009f8:	e0bffc8d 	sth	r2,-14(fp)
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_IMG_ADDRESS_LOW,image_address_low);
101009fc:	e0fffc0b 	ldhu	r3,-16(fp)
10100a00:	008400b4 	movhi	r2,4098
10100a04:	10800044 	addi	r2,r2,1
10100a08:	10c0002d 	sthio	r3,0(r2)
	delay();
10100a0c:	01002d80 	call	101002d8 <delay>
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_IMG_ADDRESS_HIGH,image_address_high);
10100a10:	e0fffc8b 	ldhu	r3,-14(fp)
10100a14:	008400b4 	movhi	r2,4098
10100a18:	10c0002d 	sthio	r3,0(r2)
	delay();
10100a1c:	01002d80 	call	101002d8 <delay>
	uint16_t image_size_low = image_size & 0xFFFF;
10100a20:	e0bfff17 	ldw	r2,-4(fp)
10100a24:	e0bffd0d 	sth	r2,-12(fp)
	uint16_t image_size_high = (image_size >> 16) & 0xFFFF;	
10100a28:	e0bfff17 	ldw	r2,-4(fp)
10100a2c:	1004d43a 	srli	r2,r2,16
10100a30:	e0bffd8d 	sth	r2,-10(fp)
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_IMG_LENGTH_LOW, image_size_low);
10100a34:	e0fffd0b 	ldhu	r3,-12(fp)
10100a38:	008400b4 	movhi	r2,4098
10100a3c:	108000c4 	addi	r2,r2,3
10100a40:	10c0002d 	sthio	r3,0(r2)
	delay();
10100a44:	01002d80 	call	101002d8 <delay>
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_IMG_LENGTH_HIGH, image_size_high);
10100a48:	e0fffd8b 	ldhu	r3,-10(fp)
10100a4c:	008400b4 	movhi	r2,4098
10100a50:	10800084 	addi	r2,r2,2
10100a54:	10c0002d 	sthio	r3,0(r2)
	delay();
10100a58:	01002d80 	call	101002d8 <delay>
}
10100a5c:	0001883a 	nop
10100a60:	e037883a 	mov	sp,fp
10100a64:	dfc00117 	ldw	ra,4(sp)
10100a68:	df000017 	ldw	fp,0(sp)
10100a6c:	dec00204 	addi	sp,sp,8
10100a70:	f800283a 	ret

10100a74 <init_image>:


void init_image(uint32_t image_address, uint32_t rows, uint32_t cols){
10100a74:	defff804 	addi	sp,sp,-32
10100a78:	dfc00715 	stw	ra,28(sp)
10100a7c:	df000615 	stw	fp,24(sp)
10100a80:	df000604 	addi	fp,sp,24
10100a84:	e13ffd15 	stw	r4,-12(fp)
10100a88:	e17ffe15 	stw	r5,-8(fp)
10100a8c:	e1bfff15 	stw	r6,-4(fp)
	uint32_t i = 0;
10100a90:	e03ffa15 	stw	zero,-24(fp)
	uint16_t color = 0xA8F0;
10100a94:	00aa3c04 	movi	r2,-22288
10100a98:	e0bffb0d 	sth	r2,-20(fp)

	while(i < (rows * sizeof(uint16_t))){
10100a9c:	00002506 	br	10100b34 <init_image+0xc0>
		uint32_t j = 0;
10100aa0:	e03ffc15 	stw	zero,-16(fp)

		if(i % 30 == 0){
10100aa4:	e0bffa17 	ldw	r2,-24(fp)
10100aa8:	01400784 	movi	r5,30
10100aac:	1009883a 	mov	r4,r2
10100ab0:	0100cbc0 	call	10100cbc <__umodsi3>
10100ab4:	1000171e 	bne	r2,zero,10100b14 <init_image+0xa0>
			color = color == 0xA8F0 ? 0x00AA : 0xA8F0;
10100ab8:	e0fffb0b 	ldhu	r3,-20(fp)
10100abc:	00aa3c14 	movui	r2,43248
10100ac0:	1880021e 	bne	r3,r2,10100acc <init_image+0x58>
10100ac4:	00802a84 	movi	r2,170
10100ac8:	00000106 	br	10100ad0 <init_image+0x5c>
10100acc:	00aa3c04 	movi	r2,-22288
10100ad0:	e0bffb0d 	sth	r2,-20(fp)
		}

		while(j < cols * sizeof(uint16_t)){
10100ad4:	00000f06 	br	10100b14 <init_image+0xa0>
			IOWR_16DIRECT(image_address, i * cols + j, color);
10100ad8:	e17fff17 	ldw	r5,-4(fp)
10100adc:	e13ffa17 	ldw	r4,-24(fp)
10100ae0:	0100d140 	call	10100d14 <__mulsi3>
10100ae4:	1007883a 	mov	r3,r2
10100ae8:	e0bffc17 	ldw	r2,-16(fp)
10100aec:	1887883a 	add	r3,r3,r2
10100af0:	e0bffd17 	ldw	r2,-12(fp)
10100af4:	1885883a 	add	r2,r3,r2
10100af8:	1007883a 	mov	r3,r2
10100afc:	e0bffb0b 	ldhu	r2,-20(fp)
10100b00:	1880002d 	sthio	r2,0(r3)
			small_delay();
10100b04:	01003200 	call	10100320 <small_delay>
			j += 2;
10100b08:	e0bffc17 	ldw	r2,-16(fp)
10100b0c:	10800084 	addi	r2,r2,2
10100b10:	e0bffc15 	stw	r2,-16(fp)

		if(i % 30 == 0){
			color = color == 0xA8F0 ? 0x00AA : 0xA8F0;
		}

		while(j < cols * sizeof(uint16_t)){
10100b14:	e0bfff17 	ldw	r2,-4(fp)
10100b18:	1085883a 	add	r2,r2,r2
10100b1c:	1007883a 	mov	r3,r2
10100b20:	e0bffc17 	ldw	r2,-16(fp)
10100b24:	10ffec36 	bltu	r2,r3,10100ad8 <__alt_data_end+0xfffe0ad8>
			IOWR_16DIRECT(image_address, i * cols + j, color);
			small_delay();
			j += 2;
		}
		i += 2;
10100b28:	e0bffa17 	ldw	r2,-24(fp)
10100b2c:	10800084 	addi	r2,r2,2
10100b30:	e0bffa15 	stw	r2,-24(fp)

void init_image(uint32_t image_address, uint32_t rows, uint32_t cols){
	uint32_t i = 0;
	uint16_t color = 0xA8F0;

	while(i < (rows * sizeof(uint16_t))){
10100b34:	e0bffe17 	ldw	r2,-8(fp)
10100b38:	1085883a 	add	r2,r2,r2
10100b3c:	1007883a 	mov	r3,r2
10100b40:	e0bffa17 	ldw	r2,-24(fp)
10100b44:	10ffd636 	bltu	r2,r3,10100aa0 <__alt_data_end+0xfffe0aa0>
			small_delay();
			j += 2;
		}
		i += 2;
	}
}
10100b48:	0001883a 	nop
10100b4c:	e037883a 	mov	sp,fp
10100b50:	dfc00117 	ldw	ra,4(sp)
10100b54:	df000017 	ldw	fp,0(sp)
10100b58:	dec00204 	addi	sp,sp,8
10100b5c:	f800283a 	ret

10100b60 <__divsi3>:
10100b60:	20001b16 	blt	r4,zero,10100bd0 <__divsi3+0x70>
10100b64:	000f883a 	mov	r7,zero
10100b68:	28001616 	blt	r5,zero,10100bc4 <__divsi3+0x64>
10100b6c:	200d883a 	mov	r6,r4
10100b70:	29001a2e 	bgeu	r5,r4,10100bdc <__divsi3+0x7c>
10100b74:	00800804 	movi	r2,32
10100b78:	00c00044 	movi	r3,1
10100b7c:	00000106 	br	10100b84 <__divsi3+0x24>
10100b80:	10000d26 	beq	r2,zero,10100bb8 <__divsi3+0x58>
10100b84:	294b883a 	add	r5,r5,r5
10100b88:	10bfffc4 	addi	r2,r2,-1
10100b8c:	18c7883a 	add	r3,r3,r3
10100b90:	293ffb36 	bltu	r5,r4,10100b80 <__alt_data_end+0xfffe0b80>
10100b94:	0005883a 	mov	r2,zero
10100b98:	18000726 	beq	r3,zero,10100bb8 <__divsi3+0x58>
10100b9c:	0005883a 	mov	r2,zero
10100ba0:	31400236 	bltu	r6,r5,10100bac <__divsi3+0x4c>
10100ba4:	314dc83a 	sub	r6,r6,r5
10100ba8:	10c4b03a 	or	r2,r2,r3
10100bac:	1806d07a 	srli	r3,r3,1
10100bb0:	280ad07a 	srli	r5,r5,1
10100bb4:	183ffa1e 	bne	r3,zero,10100ba0 <__alt_data_end+0xfffe0ba0>
10100bb8:	38000126 	beq	r7,zero,10100bc0 <__divsi3+0x60>
10100bbc:	0085c83a 	sub	r2,zero,r2
10100bc0:	f800283a 	ret
10100bc4:	014bc83a 	sub	r5,zero,r5
10100bc8:	39c0005c 	xori	r7,r7,1
10100bcc:	003fe706 	br	10100b6c <__alt_data_end+0xfffe0b6c>
10100bd0:	0109c83a 	sub	r4,zero,r4
10100bd4:	01c00044 	movi	r7,1
10100bd8:	003fe306 	br	10100b68 <__alt_data_end+0xfffe0b68>
10100bdc:	00c00044 	movi	r3,1
10100be0:	003fee06 	br	10100b9c <__alt_data_end+0xfffe0b9c>

10100be4 <__modsi3>:
10100be4:	20001716 	blt	r4,zero,10100c44 <__modsi3+0x60>
10100be8:	000f883a 	mov	r7,zero
10100bec:	2005883a 	mov	r2,r4
10100bf0:	28001216 	blt	r5,zero,10100c3c <__modsi3+0x58>
10100bf4:	2900162e 	bgeu	r5,r4,10100c50 <__modsi3+0x6c>
10100bf8:	01800804 	movi	r6,32
10100bfc:	00c00044 	movi	r3,1
10100c00:	00000106 	br	10100c08 <__modsi3+0x24>
10100c04:	30000a26 	beq	r6,zero,10100c30 <__modsi3+0x4c>
10100c08:	294b883a 	add	r5,r5,r5
10100c0c:	31bfffc4 	addi	r6,r6,-1
10100c10:	18c7883a 	add	r3,r3,r3
10100c14:	293ffb36 	bltu	r5,r4,10100c04 <__alt_data_end+0xfffe0c04>
10100c18:	18000526 	beq	r3,zero,10100c30 <__modsi3+0x4c>
10100c1c:	1806d07a 	srli	r3,r3,1
10100c20:	11400136 	bltu	r2,r5,10100c28 <__modsi3+0x44>
10100c24:	1145c83a 	sub	r2,r2,r5
10100c28:	280ad07a 	srli	r5,r5,1
10100c2c:	183ffb1e 	bne	r3,zero,10100c1c <__alt_data_end+0xfffe0c1c>
10100c30:	38000126 	beq	r7,zero,10100c38 <__modsi3+0x54>
10100c34:	0085c83a 	sub	r2,zero,r2
10100c38:	f800283a 	ret
10100c3c:	014bc83a 	sub	r5,zero,r5
10100c40:	003fec06 	br	10100bf4 <__alt_data_end+0xfffe0bf4>
10100c44:	0109c83a 	sub	r4,zero,r4
10100c48:	01c00044 	movi	r7,1
10100c4c:	003fe706 	br	10100bec <__alt_data_end+0xfffe0bec>
10100c50:	00c00044 	movi	r3,1
10100c54:	003ff106 	br	10100c1c <__alt_data_end+0xfffe0c1c>

10100c58 <__udivsi3>:
10100c58:	200d883a 	mov	r6,r4
10100c5c:	2900152e 	bgeu	r5,r4,10100cb4 <__udivsi3+0x5c>
10100c60:	28001416 	blt	r5,zero,10100cb4 <__udivsi3+0x5c>
10100c64:	00800804 	movi	r2,32
10100c68:	00c00044 	movi	r3,1
10100c6c:	00000206 	br	10100c78 <__udivsi3+0x20>
10100c70:	10000e26 	beq	r2,zero,10100cac <__udivsi3+0x54>
10100c74:	28000516 	blt	r5,zero,10100c8c <__udivsi3+0x34>
10100c78:	294b883a 	add	r5,r5,r5
10100c7c:	10bfffc4 	addi	r2,r2,-1
10100c80:	18c7883a 	add	r3,r3,r3
10100c84:	293ffa36 	bltu	r5,r4,10100c70 <__alt_data_end+0xfffe0c70>
10100c88:	18000826 	beq	r3,zero,10100cac <__udivsi3+0x54>
10100c8c:	0005883a 	mov	r2,zero
10100c90:	31400236 	bltu	r6,r5,10100c9c <__udivsi3+0x44>
10100c94:	314dc83a 	sub	r6,r6,r5
10100c98:	10c4b03a 	or	r2,r2,r3
10100c9c:	1806d07a 	srli	r3,r3,1
10100ca0:	280ad07a 	srli	r5,r5,1
10100ca4:	183ffa1e 	bne	r3,zero,10100c90 <__alt_data_end+0xfffe0c90>
10100ca8:	f800283a 	ret
10100cac:	0005883a 	mov	r2,zero
10100cb0:	f800283a 	ret
10100cb4:	00c00044 	movi	r3,1
10100cb8:	003ff406 	br	10100c8c <__alt_data_end+0xfffe0c8c>

10100cbc <__umodsi3>:
10100cbc:	2005883a 	mov	r2,r4
10100cc0:	2900122e 	bgeu	r5,r4,10100d0c <__umodsi3+0x50>
10100cc4:	28001116 	blt	r5,zero,10100d0c <__umodsi3+0x50>
10100cc8:	01800804 	movi	r6,32
10100ccc:	00c00044 	movi	r3,1
10100cd0:	00000206 	br	10100cdc <__umodsi3+0x20>
10100cd4:	30000c26 	beq	r6,zero,10100d08 <__umodsi3+0x4c>
10100cd8:	28000516 	blt	r5,zero,10100cf0 <__umodsi3+0x34>
10100cdc:	294b883a 	add	r5,r5,r5
10100ce0:	31bfffc4 	addi	r6,r6,-1
10100ce4:	18c7883a 	add	r3,r3,r3
10100ce8:	293ffa36 	bltu	r5,r4,10100cd4 <__alt_data_end+0xfffe0cd4>
10100cec:	18000626 	beq	r3,zero,10100d08 <__umodsi3+0x4c>
10100cf0:	1806d07a 	srli	r3,r3,1
10100cf4:	11400136 	bltu	r2,r5,10100cfc <__umodsi3+0x40>
10100cf8:	1145c83a 	sub	r2,r2,r5
10100cfc:	280ad07a 	srli	r5,r5,1
10100d00:	183ffb1e 	bne	r3,zero,10100cf0 <__alt_data_end+0xfffe0cf0>
10100d04:	f800283a 	ret
10100d08:	f800283a 	ret
10100d0c:	00c00044 	movi	r3,1
10100d10:	003ff706 	br	10100cf0 <__alt_data_end+0xfffe0cf0>

10100d14 <__mulsi3>:
10100d14:	0005883a 	mov	r2,zero
10100d18:	20000726 	beq	r4,zero,10100d38 <__mulsi3+0x24>
10100d1c:	20c0004c 	andi	r3,r4,1
10100d20:	2008d07a 	srli	r4,r4,1
10100d24:	18000126 	beq	r3,zero,10100d2c <__mulsi3+0x18>
10100d28:	1145883a 	add	r2,r2,r5
10100d2c:	294b883a 	add	r5,r5,r5
10100d30:	203ffa1e 	bne	r4,zero,10100d1c <__alt_data_end+0xfffe0d1c>
10100d34:	f800283a 	ret
10100d38:	f800283a 	ret

10100d3c <memcpy>:
10100d3c:	defffd04 	addi	sp,sp,-12
10100d40:	dfc00215 	stw	ra,8(sp)
10100d44:	dc400115 	stw	r17,4(sp)
10100d48:	dc000015 	stw	r16,0(sp)
10100d4c:	00c003c4 	movi	r3,15
10100d50:	2005883a 	mov	r2,r4
10100d54:	1980452e 	bgeu	r3,r6,10100e6c <memcpy+0x130>
10100d58:	2906b03a 	or	r3,r5,r4
10100d5c:	18c000cc 	andi	r3,r3,3
10100d60:	1800441e 	bne	r3,zero,10100e74 <memcpy+0x138>
10100d64:	347ffc04 	addi	r17,r6,-16
10100d68:	8822d13a 	srli	r17,r17,4
10100d6c:	28c00104 	addi	r3,r5,4
10100d70:	23400104 	addi	r13,r4,4
10100d74:	8820913a 	slli	r16,r17,4
10100d78:	2b000204 	addi	r12,r5,8
10100d7c:	22c00204 	addi	r11,r4,8
10100d80:	84000504 	addi	r16,r16,20
10100d84:	2a800304 	addi	r10,r5,12
10100d88:	22400304 	addi	r9,r4,12
10100d8c:	2c21883a 	add	r16,r5,r16
10100d90:	2811883a 	mov	r8,r5
10100d94:	200f883a 	mov	r7,r4
10100d98:	41000017 	ldw	r4,0(r8)
10100d9c:	1fc00017 	ldw	ra,0(r3)
10100da0:	63c00017 	ldw	r15,0(r12)
10100da4:	39000015 	stw	r4,0(r7)
10100da8:	53800017 	ldw	r14,0(r10)
10100dac:	6fc00015 	stw	ra,0(r13)
10100db0:	5bc00015 	stw	r15,0(r11)
10100db4:	4b800015 	stw	r14,0(r9)
10100db8:	18c00404 	addi	r3,r3,16
10100dbc:	39c00404 	addi	r7,r7,16
10100dc0:	42000404 	addi	r8,r8,16
10100dc4:	6b400404 	addi	r13,r13,16
10100dc8:	63000404 	addi	r12,r12,16
10100dcc:	5ac00404 	addi	r11,r11,16
10100dd0:	52800404 	addi	r10,r10,16
10100dd4:	4a400404 	addi	r9,r9,16
10100dd8:	1c3fef1e 	bne	r3,r16,10100d98 <__alt_data_end+0xfffe0d98>
10100ddc:	89c00044 	addi	r7,r17,1
10100de0:	380e913a 	slli	r7,r7,4
10100de4:	310003cc 	andi	r4,r6,15
10100de8:	02c000c4 	movi	r11,3
10100dec:	11c7883a 	add	r3,r2,r7
10100df0:	29cb883a 	add	r5,r5,r7
10100df4:	5900212e 	bgeu	r11,r4,10100e7c <memcpy+0x140>
10100df8:	1813883a 	mov	r9,r3
10100dfc:	2811883a 	mov	r8,r5
10100e00:	200f883a 	mov	r7,r4
10100e04:	42800017 	ldw	r10,0(r8)
10100e08:	4a400104 	addi	r9,r9,4
10100e0c:	39ffff04 	addi	r7,r7,-4
10100e10:	4abfff15 	stw	r10,-4(r9)
10100e14:	42000104 	addi	r8,r8,4
10100e18:	59fffa36 	bltu	r11,r7,10100e04 <__alt_data_end+0xfffe0e04>
10100e1c:	213fff04 	addi	r4,r4,-4
10100e20:	2008d0ba 	srli	r4,r4,2
10100e24:	318000cc 	andi	r6,r6,3
10100e28:	21000044 	addi	r4,r4,1
10100e2c:	2109883a 	add	r4,r4,r4
10100e30:	2109883a 	add	r4,r4,r4
10100e34:	1907883a 	add	r3,r3,r4
10100e38:	290b883a 	add	r5,r5,r4
10100e3c:	30000626 	beq	r6,zero,10100e58 <memcpy+0x11c>
10100e40:	198d883a 	add	r6,r3,r6
10100e44:	29c00003 	ldbu	r7,0(r5)
10100e48:	18c00044 	addi	r3,r3,1
10100e4c:	29400044 	addi	r5,r5,1
10100e50:	19ffffc5 	stb	r7,-1(r3)
10100e54:	19bffb1e 	bne	r3,r6,10100e44 <__alt_data_end+0xfffe0e44>
10100e58:	dfc00217 	ldw	ra,8(sp)
10100e5c:	dc400117 	ldw	r17,4(sp)
10100e60:	dc000017 	ldw	r16,0(sp)
10100e64:	dec00304 	addi	sp,sp,12
10100e68:	f800283a 	ret
10100e6c:	2007883a 	mov	r3,r4
10100e70:	003ff206 	br	10100e3c <__alt_data_end+0xfffe0e3c>
10100e74:	2007883a 	mov	r3,r4
10100e78:	003ff106 	br	10100e40 <__alt_data_end+0xfffe0e40>
10100e7c:	200d883a 	mov	r6,r4
10100e80:	003fee06 	br	10100e3c <__alt_data_end+0xfffe0e3c>

10100e84 <_printf_r>:
10100e84:	defffd04 	addi	sp,sp,-12
10100e88:	2805883a 	mov	r2,r5
10100e8c:	dfc00015 	stw	ra,0(sp)
10100e90:	d9800115 	stw	r6,4(sp)
10100e94:	d9c00215 	stw	r7,8(sp)
10100e98:	21400217 	ldw	r5,8(r4)
10100e9c:	d9c00104 	addi	r7,sp,4
10100ea0:	100d883a 	mov	r6,r2
10100ea4:	010105c0 	call	1010105c <___vfprintf_internal_r>
10100ea8:	dfc00017 	ldw	ra,0(sp)
10100eac:	dec00304 	addi	sp,sp,12
10100eb0:	f800283a 	ret

10100eb4 <printf>:
10100eb4:	defffc04 	addi	sp,sp,-16
10100eb8:	dfc00015 	stw	ra,0(sp)
10100ebc:	d9400115 	stw	r5,4(sp)
10100ec0:	d9800215 	stw	r6,8(sp)
10100ec4:	d9c00315 	stw	r7,12(sp)
10100ec8:	00840474 	movhi	r2,4113
10100ecc:	10892904 	addi	r2,r2,9380
10100ed0:	10800017 	ldw	r2,0(r2)
10100ed4:	200b883a 	mov	r5,r4
10100ed8:	d9800104 	addi	r6,sp,4
10100edc:	11000217 	ldw	r4,8(r2)
10100ee0:	01033380 	call	10103338 <__vfprintf_internal>
10100ee4:	dfc00017 	ldw	ra,0(sp)
10100ee8:	dec00404 	addi	sp,sp,16
10100eec:	f800283a 	ret

10100ef0 <_puts_r>:
10100ef0:	defff604 	addi	sp,sp,-40
10100ef4:	dc000715 	stw	r16,28(sp)
10100ef8:	2021883a 	mov	r16,r4
10100efc:	2809883a 	mov	r4,r5
10100f00:	dc400815 	stw	r17,32(sp)
10100f04:	dfc00915 	stw	ra,36(sp)
10100f08:	2823883a 	mov	r17,r5
10100f0c:	0100fc40 	call	10100fc4 <strlen>
10100f10:	10c00044 	addi	r3,r2,1
10100f14:	d8800115 	stw	r2,4(sp)
10100f18:	00840474 	movhi	r2,4113
10100f1c:	1081b004 	addi	r2,r2,1728
10100f20:	d8800215 	stw	r2,8(sp)
10100f24:	00800044 	movi	r2,1
10100f28:	d8800315 	stw	r2,12(sp)
10100f2c:	00800084 	movi	r2,2
10100f30:	dc400015 	stw	r17,0(sp)
10100f34:	d8c00615 	stw	r3,24(sp)
10100f38:	dec00415 	stw	sp,16(sp)
10100f3c:	d8800515 	stw	r2,20(sp)
10100f40:	80000226 	beq	r16,zero,10100f4c <_puts_r+0x5c>
10100f44:	80800e17 	ldw	r2,56(r16)
10100f48:	10001426 	beq	r2,zero,10100f9c <_puts_r+0xac>
10100f4c:	81400217 	ldw	r5,8(r16)
10100f50:	2880030b 	ldhu	r2,12(r5)
10100f54:	10c8000c 	andi	r3,r2,8192
10100f58:	1800061e 	bne	r3,zero,10100f74 <_puts_r+0x84>
10100f5c:	29001917 	ldw	r4,100(r5)
10100f60:	00f7ffc4 	movi	r3,-8193
10100f64:	10880014 	ori	r2,r2,8192
10100f68:	20c6703a 	and	r3,r4,r3
10100f6c:	2880030d 	sth	r2,12(r5)
10100f70:	28c01915 	stw	r3,100(r5)
10100f74:	d9800404 	addi	r6,sp,16
10100f78:	8009883a 	mov	r4,r16
10100f7c:	01058a00 	call	101058a0 <__sfvwrite_r>
10100f80:	1000091e 	bne	r2,zero,10100fa8 <_puts_r+0xb8>
10100f84:	00800284 	movi	r2,10
10100f88:	dfc00917 	ldw	ra,36(sp)
10100f8c:	dc400817 	ldw	r17,32(sp)
10100f90:	dc000717 	ldw	r16,28(sp)
10100f94:	dec00a04 	addi	sp,sp,40
10100f98:	f800283a 	ret
10100f9c:	8009883a 	mov	r4,r16
10100fa0:	010541c0 	call	1010541c <__sinit>
10100fa4:	003fe906 	br	10100f4c <__alt_data_end+0xfffe0f4c>
10100fa8:	00bfffc4 	movi	r2,-1
10100fac:	003ff606 	br	10100f88 <__alt_data_end+0xfffe0f88>

10100fb0 <puts>:
10100fb0:	00840474 	movhi	r2,4113
10100fb4:	10892904 	addi	r2,r2,9380
10100fb8:	200b883a 	mov	r5,r4
10100fbc:	11000017 	ldw	r4,0(r2)
10100fc0:	0100ef01 	jmpi	10100ef0 <_puts_r>

10100fc4 <strlen>:
10100fc4:	208000cc 	andi	r2,r4,3
10100fc8:	10002026 	beq	r2,zero,1010104c <strlen+0x88>
10100fcc:	20800007 	ldb	r2,0(r4)
10100fd0:	10002026 	beq	r2,zero,10101054 <strlen+0x90>
10100fd4:	2005883a 	mov	r2,r4
10100fd8:	00000206 	br	10100fe4 <strlen+0x20>
10100fdc:	10c00007 	ldb	r3,0(r2)
10100fe0:	18001826 	beq	r3,zero,10101044 <strlen+0x80>
10100fe4:	10800044 	addi	r2,r2,1
10100fe8:	10c000cc 	andi	r3,r2,3
10100fec:	183ffb1e 	bne	r3,zero,10100fdc <__alt_data_end+0xfffe0fdc>
10100ff0:	10c00017 	ldw	r3,0(r2)
10100ff4:	01ffbff4 	movhi	r7,65279
10100ff8:	39ffbfc4 	addi	r7,r7,-257
10100ffc:	00ca303a 	nor	r5,zero,r3
10101000:	01a02074 	movhi	r6,32897
10101004:	19c7883a 	add	r3,r3,r7
10101008:	31a02004 	addi	r6,r6,-32640
1010100c:	1946703a 	and	r3,r3,r5
10101010:	1986703a 	and	r3,r3,r6
10101014:	1800091e 	bne	r3,zero,1010103c <strlen+0x78>
10101018:	10800104 	addi	r2,r2,4
1010101c:	10c00017 	ldw	r3,0(r2)
10101020:	19cb883a 	add	r5,r3,r7
10101024:	00c6303a 	nor	r3,zero,r3
10101028:	28c6703a 	and	r3,r5,r3
1010102c:	1986703a 	and	r3,r3,r6
10101030:	183ff926 	beq	r3,zero,10101018 <__alt_data_end+0xfffe1018>
10101034:	00000106 	br	1010103c <strlen+0x78>
10101038:	10800044 	addi	r2,r2,1
1010103c:	10c00007 	ldb	r3,0(r2)
10101040:	183ffd1e 	bne	r3,zero,10101038 <__alt_data_end+0xfffe1038>
10101044:	1105c83a 	sub	r2,r2,r4
10101048:	f800283a 	ret
1010104c:	2005883a 	mov	r2,r4
10101050:	003fe706 	br	10100ff0 <__alt_data_end+0xfffe0ff0>
10101054:	0005883a 	mov	r2,zero
10101058:	f800283a 	ret

1010105c <___vfprintf_internal_r>:
1010105c:	deffb804 	addi	sp,sp,-288
10101060:	dfc04715 	stw	ra,284(sp)
10101064:	ddc04515 	stw	r23,276(sp)
10101068:	dd404315 	stw	r21,268(sp)
1010106c:	d9002d15 	stw	r4,180(sp)
10101070:	282f883a 	mov	r23,r5
10101074:	302b883a 	mov	r21,r6
10101078:	d9c02e15 	stw	r7,184(sp)
1010107c:	df004615 	stw	fp,280(sp)
10101080:	dd804415 	stw	r22,272(sp)
10101084:	dd004215 	stw	r20,264(sp)
10101088:	dcc04115 	stw	r19,260(sp)
1010108c:	dc804015 	stw	r18,256(sp)
10101090:	dc403f15 	stw	r17,252(sp)
10101094:	dc003e15 	stw	r16,248(sp)
10101098:	0105f9c0 	call	10105f9c <_localeconv_r>
1010109c:	10800017 	ldw	r2,0(r2)
101010a0:	1009883a 	mov	r4,r2
101010a4:	d8803415 	stw	r2,208(sp)
101010a8:	0100fc40 	call	10100fc4 <strlen>
101010ac:	d8803715 	stw	r2,220(sp)
101010b0:	d8802d17 	ldw	r2,180(sp)
101010b4:	10000226 	beq	r2,zero,101010c0 <___vfprintf_internal_r+0x64>
101010b8:	10800e17 	ldw	r2,56(r2)
101010bc:	1000fb26 	beq	r2,zero,101014ac <___vfprintf_internal_r+0x450>
101010c0:	b880030b 	ldhu	r2,12(r23)
101010c4:	10c8000c 	andi	r3,r2,8192
101010c8:	1800061e 	bne	r3,zero,101010e4 <___vfprintf_internal_r+0x88>
101010cc:	b9001917 	ldw	r4,100(r23)
101010d0:	00f7ffc4 	movi	r3,-8193
101010d4:	10880014 	ori	r2,r2,8192
101010d8:	20c6703a 	and	r3,r4,r3
101010dc:	b880030d 	sth	r2,12(r23)
101010e0:	b8c01915 	stw	r3,100(r23)
101010e4:	10c0020c 	andi	r3,r2,8
101010e8:	1800c326 	beq	r3,zero,101013f8 <___vfprintf_internal_r+0x39c>
101010ec:	b8c00417 	ldw	r3,16(r23)
101010f0:	1800c126 	beq	r3,zero,101013f8 <___vfprintf_internal_r+0x39c>
101010f4:	1080068c 	andi	r2,r2,26
101010f8:	00c00284 	movi	r3,10
101010fc:	10c0c626 	beq	r2,r3,10101418 <___vfprintf_internal_r+0x3bc>
10101100:	d8c00404 	addi	r3,sp,16
10101104:	05040474 	movhi	r20,4113
10101108:	d9001e04 	addi	r4,sp,120
1010110c:	a501c184 	addi	r20,r20,1798
10101110:	d8c01e15 	stw	r3,120(sp)
10101114:	d8002015 	stw	zero,128(sp)
10101118:	d8001f15 	stw	zero,124(sp)
1010111c:	d8003315 	stw	zero,204(sp)
10101120:	d8003615 	stw	zero,216(sp)
10101124:	d8003815 	stw	zero,224(sp)
10101128:	1811883a 	mov	r8,r3
1010112c:	d8003915 	stw	zero,228(sp)
10101130:	d8003a15 	stw	zero,232(sp)
10101134:	d8002f15 	stw	zero,188(sp)
10101138:	d9002815 	stw	r4,160(sp)
1010113c:	a8800007 	ldb	r2,0(r21)
10101140:	10028b26 	beq	r2,zero,10101b70 <___vfprintf_internal_r+0xb14>
10101144:	00c00944 	movi	r3,37
10101148:	a823883a 	mov	r17,r21
1010114c:	10c0021e 	bne	r2,r3,10101158 <___vfprintf_internal_r+0xfc>
10101150:	00001406 	br	101011a4 <___vfprintf_internal_r+0x148>
10101154:	10c00326 	beq	r2,r3,10101164 <___vfprintf_internal_r+0x108>
10101158:	8c400044 	addi	r17,r17,1
1010115c:	88800007 	ldb	r2,0(r17)
10101160:	103ffc1e 	bne	r2,zero,10101154 <__alt_data_end+0xfffe1154>
10101164:	8d61c83a 	sub	r16,r17,r21
10101168:	80000e26 	beq	r16,zero,101011a4 <___vfprintf_internal_r+0x148>
1010116c:	d8c02017 	ldw	r3,128(sp)
10101170:	d8801f17 	ldw	r2,124(sp)
10101174:	45400015 	stw	r21,0(r8)
10101178:	1c07883a 	add	r3,r3,r16
1010117c:	10800044 	addi	r2,r2,1
10101180:	d8c02015 	stw	r3,128(sp)
10101184:	44000115 	stw	r16,4(r8)
10101188:	d8801f15 	stw	r2,124(sp)
1010118c:	00c001c4 	movi	r3,7
10101190:	1880a916 	blt	r3,r2,10101438 <___vfprintf_internal_r+0x3dc>
10101194:	42000204 	addi	r8,r8,8
10101198:	d9402f17 	ldw	r5,188(sp)
1010119c:	2c0b883a 	add	r5,r5,r16
101011a0:	d9402f15 	stw	r5,188(sp)
101011a4:	88800007 	ldb	r2,0(r17)
101011a8:	1000aa26 	beq	r2,zero,10101454 <___vfprintf_internal_r+0x3f8>
101011ac:	8d400044 	addi	r21,r17,1
101011b0:	8c400047 	ldb	r17,1(r17)
101011b4:	0021883a 	mov	r16,zero
101011b8:	00bfffc4 	movi	r2,-1
101011bc:	0025883a 	mov	r18,zero
101011c0:	dc002905 	stb	r16,164(sp)
101011c4:	d8002785 	stb	zero,158(sp)
101011c8:	d8002b05 	stb	zero,172(sp)
101011cc:	d8802a15 	stw	r2,168(sp)
101011d0:	d8003115 	stw	zero,196(sp)
101011d4:	04c01604 	movi	r19,88
101011d8:	05800244 	movi	r22,9
101011dc:	9021883a 	mov	r16,r18
101011e0:	4039883a 	mov	fp,r8
101011e4:	ad400044 	addi	r21,r21,1
101011e8:	88bff804 	addi	r2,r17,-32
101011ec:	98833236 	bltu	r19,r2,10101eb8 <___vfprintf_internal_r+0xe5c>
101011f0:	100490ba 	slli	r2,r2,2
101011f4:	00c40434 	movhi	r3,4112
101011f8:	18c48204 	addi	r3,r3,4616
101011fc:	10c5883a 	add	r2,r2,r3
10101200:	10800017 	ldw	r2,0(r2)
10101204:	1000683a 	jmp	r2
10101208:	10101db0 	cmpltui	zero,r2,16502
1010120c:	10101eb8 	rdprs	zero,r2,16506
10101210:	10101eb8 	rdprs	zero,r2,16506
10101214:	10101dd0 	cmplti	zero,r2,16503
10101218:	10101eb8 	rdprs	zero,r2,16506
1010121c:	10101eb8 	rdprs	zero,r2,16506
10101220:	10101eb8 	rdprs	zero,r2,16506
10101224:	10101eb8 	rdprs	zero,r2,16506
10101228:	10101eb8 	rdprs	zero,r2,16506
1010122c:	10101eb8 	rdprs	zero,r2,16506
10101230:	101014b8 	rdprs	zero,r2,16466
10101234:	10101cc0 	call	110101cc <__alt_data_end+0xef01cc>
10101238:	10101eb8 	rdprs	zero,r2,16506
1010123c:	1010137c 	xorhi	zero,r2,16461
10101240:	101014dc 	xori	zero,r2,16467
10101244:	10101eb8 	rdprs	zero,r2,16506
10101248:	1010152c 	andhi	zero,r2,16468
1010124c:	10101538 	rdprs	zero,r2,16468
10101250:	10101538 	rdprs	zero,r2,16468
10101254:	10101538 	rdprs	zero,r2,16468
10101258:	10101538 	rdprs	zero,r2,16468
1010125c:	10101538 	rdprs	zero,r2,16468
10101260:	10101538 	rdprs	zero,r2,16468
10101264:	10101538 	rdprs	zero,r2,16468
10101268:	10101538 	rdprs	zero,r2,16468
1010126c:	10101538 	rdprs	zero,r2,16468
10101270:	10101eb8 	rdprs	zero,r2,16506
10101274:	10101eb8 	rdprs	zero,r2,16506
10101278:	10101eb8 	rdprs	zero,r2,16506
1010127c:	10101eb8 	rdprs	zero,r2,16506
10101280:	10101eb8 	rdprs	zero,r2,16506
10101284:	10101eb8 	rdprs	zero,r2,16506
10101288:	10101eb8 	rdprs	zero,r2,16506
1010128c:	10101eb8 	rdprs	zero,r2,16506
10101290:	10101eb8 	rdprs	zero,r2,16506
10101294:	10101eb8 	rdprs	zero,r2,16506
10101298:	10101574 	orhi	zero,r2,16469
1010129c:	1010163c 	xorhi	zero,r2,16472
101012a0:	10101eb8 	rdprs	zero,r2,16506
101012a4:	1010163c 	xorhi	zero,r2,16472
101012a8:	10101eb8 	rdprs	zero,r2,16506
101012ac:	10101eb8 	rdprs	zero,r2,16506
101012b0:	10101eb8 	rdprs	zero,r2,16506
101012b4:	10101eb8 	rdprs	zero,r2,16506
101012b8:	101016e8 	cmpgeui	zero,r2,16475
101012bc:	10101eb8 	rdprs	zero,r2,16506
101012c0:	10101eb8 	rdprs	zero,r2,16506
101012c4:	101016f4 	orhi	zero,r2,16475
101012c8:	10101eb8 	rdprs	zero,r2,16506
101012cc:	10101eb8 	rdprs	zero,r2,16506
101012d0:	10101eb8 	rdprs	zero,r2,16506
101012d4:	10101eb8 	rdprs	zero,r2,16506
101012d8:	10101eb8 	rdprs	zero,r2,16506
101012dc:	10101b78 	rdprs	zero,r2,16493
101012e0:	10101eb8 	rdprs	zero,r2,16506
101012e4:	10101eb8 	rdprs	zero,r2,16506
101012e8:	10101be4 	muli	zero,r2,16495
101012ec:	10101eb8 	rdprs	zero,r2,16506
101012f0:	10101eb8 	rdprs	zero,r2,16506
101012f4:	10101eb8 	rdprs	zero,r2,16506
101012f8:	10101eb8 	rdprs	zero,r2,16506
101012fc:	10101eb8 	rdprs	zero,r2,16506
10101300:	10101eb8 	rdprs	zero,r2,16506
10101304:	10101eb8 	rdprs	zero,r2,16506
10101308:	10101eb8 	rdprs	zero,r2,16506
1010130c:	10101eb8 	rdprs	zero,r2,16506
10101310:	10101eb8 	rdprs	zero,r2,16506
10101314:	10101e5c 	xori	zero,r2,16505
10101318:	10101ddc 	xori	zero,r2,16503
1010131c:	1010163c 	xorhi	zero,r2,16472
10101320:	1010163c 	xorhi	zero,r2,16472
10101324:	1010163c 	xorhi	zero,r2,16472
10101328:	10101dfc 	xorhi	zero,r2,16503
1010132c:	10101ddc 	xori	zero,r2,16503
10101330:	10101eb8 	rdprs	zero,r2,16506
10101334:	10101eb8 	rdprs	zero,r2,16506
10101338:	10101e08 	cmpgei	zero,r2,16504
1010133c:	10101eb8 	rdprs	zero,r2,16506
10101340:	10101e1c 	xori	zero,r2,16504
10101344:	10101ca0 	cmpeqi	zero,r2,16498
10101348:	10101388 	cmpgei	zero,r2,16462
1010134c:	10101cd8 	cmpnei	zero,r2,16499
10101350:	10101eb8 	rdprs	zero,r2,16506
10101354:	10101ce4 	muli	zero,r2,16499
10101358:	10101eb8 	rdprs	zero,r2,16506
1010135c:	10101d48 	cmpgei	zero,r2,16501
10101360:	10101eb8 	rdprs	zero,r2,16506
10101364:	10101eb8 	rdprs	zero,r2,16506
10101368:	10101d68 	cmpgeui	zero,r2,16501
1010136c:	d8c03117 	ldw	r3,196(sp)
10101370:	d8802e15 	stw	r2,184(sp)
10101374:	00c7c83a 	sub	r3,zero,r3
10101378:	d8c03115 	stw	r3,196(sp)
1010137c:	84000114 	ori	r16,r16,4
10101380:	ac400007 	ldb	r17,0(r21)
10101384:	003f9706 	br	101011e4 <__alt_data_end+0xfffe11e4>
10101388:	00800c04 	movi	r2,48
1010138c:	d8802705 	stb	r2,156(sp)
10101390:	00801e04 	movi	r2,120
10101394:	d8802745 	stb	r2,157(sp)
10101398:	d9002a17 	ldw	r4,168(sp)
1010139c:	d8802e17 	ldw	r2,184(sp)
101013a0:	d8002785 	stb	zero,158(sp)
101013a4:	e011883a 	mov	r8,fp
101013a8:	10c00104 	addi	r3,r2,4
101013ac:	14c00017 	ldw	r19,0(r2)
101013b0:	002d883a 	mov	r22,zero
101013b4:	80800094 	ori	r2,r16,2
101013b8:	2002ca16 	blt	r4,zero,10101ee4 <___vfprintf_internal_r+0xe88>
101013bc:	00bfdfc4 	movi	r2,-129
101013c0:	80a4703a 	and	r18,r16,r2
101013c4:	d8c02e15 	stw	r3,184(sp)
101013c8:	94800094 	ori	r18,r18,2
101013cc:	9802b41e 	bne	r19,zero,10101ea0 <___vfprintf_internal_r+0xe44>
101013d0:	01440474 	movhi	r5,4113
101013d4:	2941ba04 	addi	r5,r5,1768
101013d8:	d9403915 	stw	r5,228(sp)
101013dc:	04401e04 	movi	r17,120
101013e0:	d8802a17 	ldw	r2,168(sp)
101013e4:	0039883a 	mov	fp,zero
101013e8:	1001fa26 	beq	r2,zero,10101bd4 <___vfprintf_internal_r+0xb78>
101013ec:	0027883a 	mov	r19,zero
101013f0:	002d883a 	mov	r22,zero
101013f4:	00021906 	br	10101c5c <___vfprintf_internal_r+0xc00>
101013f8:	d9002d17 	ldw	r4,180(sp)
101013fc:	b80b883a 	mov	r5,r23
10101400:	01034100 	call	10103410 <__swsetup_r>
10101404:	1005dc1e 	bne	r2,zero,10102b78 <___vfprintf_internal_r+0x1b1c>
10101408:	b880030b 	ldhu	r2,12(r23)
1010140c:	00c00284 	movi	r3,10
10101410:	1080068c 	andi	r2,r2,26
10101414:	10ff3a1e 	bne	r2,r3,10101100 <__alt_data_end+0xfffe1100>
10101418:	b880038f 	ldh	r2,14(r23)
1010141c:	103f3816 	blt	r2,zero,10101100 <__alt_data_end+0xfffe1100>
10101420:	d9c02e17 	ldw	r7,184(sp)
10101424:	d9002d17 	ldw	r4,180(sp)
10101428:	a80d883a 	mov	r6,r21
1010142c:	b80b883a 	mov	r5,r23
10101430:	01033540 	call	10103354 <__sbprintf>
10101434:	00001106 	br	1010147c <___vfprintf_internal_r+0x420>
10101438:	d9002d17 	ldw	r4,180(sp)
1010143c:	d9801e04 	addi	r6,sp,120
10101440:	b80b883a 	mov	r5,r23
10101444:	01086f40 	call	101086f4 <__sprint_r>
10101448:	1000081e 	bne	r2,zero,1010146c <___vfprintf_internal_r+0x410>
1010144c:	da000404 	addi	r8,sp,16
10101450:	003f5106 	br	10101198 <__alt_data_end+0xfffe1198>
10101454:	d8802017 	ldw	r2,128(sp)
10101458:	10000426 	beq	r2,zero,1010146c <___vfprintf_internal_r+0x410>
1010145c:	d9002d17 	ldw	r4,180(sp)
10101460:	d9801e04 	addi	r6,sp,120
10101464:	b80b883a 	mov	r5,r23
10101468:	01086f40 	call	101086f4 <__sprint_r>
1010146c:	b880030b 	ldhu	r2,12(r23)
10101470:	1080100c 	andi	r2,r2,64
10101474:	1005c01e 	bne	r2,zero,10102b78 <___vfprintf_internal_r+0x1b1c>
10101478:	d8802f17 	ldw	r2,188(sp)
1010147c:	dfc04717 	ldw	ra,284(sp)
10101480:	df004617 	ldw	fp,280(sp)
10101484:	ddc04517 	ldw	r23,276(sp)
10101488:	dd804417 	ldw	r22,272(sp)
1010148c:	dd404317 	ldw	r21,268(sp)
10101490:	dd004217 	ldw	r20,264(sp)
10101494:	dcc04117 	ldw	r19,260(sp)
10101498:	dc804017 	ldw	r18,256(sp)
1010149c:	dc403f17 	ldw	r17,252(sp)
101014a0:	dc003e17 	ldw	r16,248(sp)
101014a4:	dec04804 	addi	sp,sp,288
101014a8:	f800283a 	ret
101014ac:	d9002d17 	ldw	r4,180(sp)
101014b0:	010541c0 	call	1010541c <__sinit>
101014b4:	003f0206 	br	101010c0 <__alt_data_end+0xfffe10c0>
101014b8:	d9002e17 	ldw	r4,184(sp)
101014bc:	d9402e17 	ldw	r5,184(sp)
101014c0:	21000017 	ldw	r4,0(r4)
101014c4:	28800104 	addi	r2,r5,4
101014c8:	d9003115 	stw	r4,196(sp)
101014cc:	203fa716 	blt	r4,zero,1010136c <__alt_data_end+0xfffe136c>
101014d0:	d8802e15 	stw	r2,184(sp)
101014d4:	ac400007 	ldb	r17,0(r21)
101014d8:	003f4206 	br	101011e4 <__alt_data_end+0xfffe11e4>
101014dc:	ac400007 	ldb	r17,0(r21)
101014e0:	01000a84 	movi	r4,42
101014e4:	a8c00044 	addi	r3,r21,1
101014e8:	89075826 	beq	r17,r4,1010324c <___vfprintf_internal_r+0x21f0>
101014ec:	8cbff404 	addi	r18,r17,-48
101014f0:	b486ae36 	bltu	r22,r18,10102fac <___vfprintf_internal_r+0x1f50>
101014f4:	0009883a 	mov	r4,zero
101014f8:	1823883a 	mov	r17,r3
101014fc:	01400284 	movi	r5,10
10101500:	0100d140 	call	10100d14 <__mulsi3>
10101504:	88c00007 	ldb	r3,0(r17)
10101508:	1489883a 	add	r4,r2,r18
1010150c:	8d400044 	addi	r21,r17,1
10101510:	1cbff404 	addi	r18,r3,-48
10101514:	a823883a 	mov	r17,r21
10101518:	b4bff82e 	bgeu	r22,r18,101014fc <__alt_data_end+0xfffe14fc>
1010151c:	1823883a 	mov	r17,r3
10101520:	2005f616 	blt	r4,zero,10102cfc <___vfprintf_internal_r+0x1ca0>
10101524:	d9002a15 	stw	r4,168(sp)
10101528:	003f2f06 	br	101011e8 <__alt_data_end+0xfffe11e8>
1010152c:	84002014 	ori	r16,r16,128
10101530:	ac400007 	ldb	r17,0(r21)
10101534:	003f2b06 	br	101011e4 <__alt_data_end+0xfffe11e4>
10101538:	8cbff404 	addi	r18,r17,-48
1010153c:	d8003115 	stw	zero,196(sp)
10101540:	0009883a 	mov	r4,zero
10101544:	a823883a 	mov	r17,r21
10101548:	01400284 	movi	r5,10
1010154c:	0100d140 	call	10100d14 <__mulsi3>
10101550:	88c00007 	ldb	r3,0(r17)
10101554:	9089883a 	add	r4,r18,r2
10101558:	ad400044 	addi	r21,r21,1
1010155c:	1cbff404 	addi	r18,r3,-48
10101560:	a823883a 	mov	r17,r21
10101564:	b4bff82e 	bgeu	r22,r18,10101548 <__alt_data_end+0xfffe1548>
10101568:	1823883a 	mov	r17,r3
1010156c:	d9003115 	stw	r4,196(sp)
10101570:	003f1d06 	br	101011e8 <__alt_data_end+0xfffe11e8>
10101574:	8025883a 	mov	r18,r16
10101578:	dc002903 	ldbu	r16,164(sp)
1010157c:	e011883a 	mov	r8,fp
10101580:	84003fcc 	andi	r16,r16,255
10101584:	8007531e 	bne	r16,zero,101032d4 <___vfprintf_internal_r+0x2278>
10101588:	94800414 	ori	r18,r18,16
1010158c:	9080080c 	andi	r2,r18,32
10101590:	1003a326 	beq	r2,zero,10102420 <___vfprintf_internal_r+0x13c4>
10101594:	d9002e17 	ldw	r4,184(sp)
10101598:	20800117 	ldw	r2,4(r4)
1010159c:	24c00017 	ldw	r19,0(r4)
101015a0:	21000204 	addi	r4,r4,8
101015a4:	d9002e15 	stw	r4,184(sp)
101015a8:	102d883a 	mov	r22,r2
101015ac:	10047316 	blt	r2,zero,1010277c <___vfprintf_internal_r+0x1720>
101015b0:	d9002a17 	ldw	r4,168(sp)
101015b4:	df002783 	ldbu	fp,158(sp)
101015b8:	2003e416 	blt	r4,zero,1010254c <___vfprintf_internal_r+0x14f0>
101015bc:	00ffdfc4 	movi	r3,-129
101015c0:	9d84b03a 	or	r2,r19,r22
101015c4:	90e4703a 	and	r18,r18,r3
101015c8:	10018026 	beq	r2,zero,10101bcc <___vfprintf_internal_r+0xb70>
101015cc:	b003ab26 	beq	r22,zero,1010247c <___vfprintf_internal_r+0x1420>
101015d0:	dc402915 	stw	r17,164(sp)
101015d4:	dc001e04 	addi	r16,sp,120
101015d8:	b023883a 	mov	r17,r22
101015dc:	402d883a 	mov	r22,r8
101015e0:	9809883a 	mov	r4,r19
101015e4:	880b883a 	mov	r5,r17
101015e8:	01800284 	movi	r6,10
101015ec:	000f883a 	mov	r7,zero
101015f0:	010ac380 	call	1010ac38 <__umoddi3>
101015f4:	10800c04 	addi	r2,r2,48
101015f8:	843fffc4 	addi	r16,r16,-1
101015fc:	9809883a 	mov	r4,r19
10101600:	880b883a 	mov	r5,r17
10101604:	80800005 	stb	r2,0(r16)
10101608:	01800284 	movi	r6,10
1010160c:	000f883a 	mov	r7,zero
10101610:	010a63c0 	call	1010a63c <__udivdi3>
10101614:	1027883a 	mov	r19,r2
10101618:	10c4b03a 	or	r2,r2,r3
1010161c:	1823883a 	mov	r17,r3
10101620:	103fef1e 	bne	r2,zero,101015e0 <__alt_data_end+0xfffe15e0>
10101624:	d8c02817 	ldw	r3,160(sp)
10101628:	dc402917 	ldw	r17,164(sp)
1010162c:	b011883a 	mov	r8,r22
10101630:	1c07c83a 	sub	r3,r3,r16
10101634:	d8c02b15 	stw	r3,172(sp)
10101638:	00005f06 	br	101017b8 <___vfprintf_internal_r+0x75c>
1010163c:	8025883a 	mov	r18,r16
10101640:	dc002903 	ldbu	r16,164(sp)
10101644:	e011883a 	mov	r8,fp
10101648:	84003fcc 	andi	r16,r16,255
1010164c:	80071e1e 	bne	r16,zero,101032c8 <___vfprintf_internal_r+0x226c>
10101650:	9080020c 	andi	r2,r18,8
10101654:	1004af26 	beq	r2,zero,10102914 <___vfprintf_internal_r+0x18b8>
10101658:	d9002e17 	ldw	r4,184(sp)
1010165c:	d9402e17 	ldw	r5,184(sp)
10101660:	d8802e17 	ldw	r2,184(sp)
10101664:	21000017 	ldw	r4,0(r4)
10101668:	29400117 	ldw	r5,4(r5)
1010166c:	10800204 	addi	r2,r2,8
10101670:	d9003615 	stw	r4,216(sp)
10101674:	d9403815 	stw	r5,224(sp)
10101678:	d8802e15 	stw	r2,184(sp)
1010167c:	d9003617 	ldw	r4,216(sp)
10101680:	d9403817 	ldw	r5,224(sp)
10101684:	da003d15 	stw	r8,244(sp)
10101688:	04000044 	movi	r16,1
1010168c:	01083180 	call	10108318 <__fpclassifyd>
10101690:	da003d17 	ldw	r8,244(sp)
10101694:	1404441e 	bne	r2,r16,101027a8 <___vfprintf_internal_r+0x174c>
10101698:	d9003617 	ldw	r4,216(sp)
1010169c:	d9403817 	ldw	r5,224(sp)
101016a0:	000d883a 	mov	r6,zero
101016a4:	000f883a 	mov	r7,zero
101016a8:	010c5dc0 	call	1010c5dc <__ledf2>
101016ac:	da003d17 	ldw	r8,244(sp)
101016b0:	1005e316 	blt	r2,zero,10102e40 <___vfprintf_internal_r+0x1de4>
101016b4:	df002783 	ldbu	fp,158(sp)
101016b8:	008011c4 	movi	r2,71
101016bc:	1445580e 	bge	r2,r17,10102c20 <___vfprintf_internal_r+0x1bc4>
101016c0:	04040474 	movhi	r16,4113
101016c4:	8401b204 	addi	r16,r16,1736
101016c8:	00c000c4 	movi	r3,3
101016cc:	00bfdfc4 	movi	r2,-129
101016d0:	d8c02915 	stw	r3,164(sp)
101016d4:	90a4703a 	and	r18,r18,r2
101016d8:	d8c02b15 	stw	r3,172(sp)
101016dc:	d8002a15 	stw	zero,168(sp)
101016e0:	d8003215 	stw	zero,200(sp)
101016e4:	00003a06 	br	101017d0 <___vfprintf_internal_r+0x774>
101016e8:	84000214 	ori	r16,r16,8
101016ec:	ac400007 	ldb	r17,0(r21)
101016f0:	003ebc06 	br	101011e4 <__alt_data_end+0xfffe11e4>
101016f4:	8025883a 	mov	r18,r16
101016f8:	dc002903 	ldbu	r16,164(sp)
101016fc:	e011883a 	mov	r8,fp
10101700:	84003fcc 	andi	r16,r16,255
10101704:	8007001e 	bne	r16,zero,10103308 <___vfprintf_internal_r+0x22ac>
10101708:	94800414 	ori	r18,r18,16
1010170c:	9080080c 	andi	r2,r18,32
10101710:	1002fa26 	beq	r2,zero,101022fc <___vfprintf_internal_r+0x12a0>
10101714:	d9002e17 	ldw	r4,184(sp)
10101718:	d9402a17 	ldw	r5,168(sp)
1010171c:	d8002785 	stb	zero,158(sp)
10101720:	20800204 	addi	r2,r4,8
10101724:	24c00017 	ldw	r19,0(r4)
10101728:	25800117 	ldw	r22,4(r4)
1010172c:	2804b116 	blt	r5,zero,101029f4 <___vfprintf_internal_r+0x1998>
10101730:	013fdfc4 	movi	r4,-129
10101734:	9d86b03a 	or	r3,r19,r22
10101738:	d8802e15 	stw	r2,184(sp)
1010173c:	9124703a 	and	r18,r18,r4
10101740:	1802fb1e 	bne	r3,zero,10102330 <___vfprintf_internal_r+0x12d4>
10101744:	d8c02a17 	ldw	r3,168(sp)
10101748:	0039883a 	mov	fp,zero
1010174c:	1805e526 	beq	r3,zero,10102ee4 <___vfprintf_internal_r+0x1e88>
10101750:	0027883a 	mov	r19,zero
10101754:	002d883a 	mov	r22,zero
10101758:	dc001e04 	addi	r16,sp,120
1010175c:	9806d0fa 	srli	r3,r19,3
10101760:	b008977a 	slli	r4,r22,29
10101764:	b02cd0fa 	srli	r22,r22,3
10101768:	9cc001cc 	andi	r19,r19,7
1010176c:	98800c04 	addi	r2,r19,48
10101770:	843fffc4 	addi	r16,r16,-1
10101774:	20e6b03a 	or	r19,r4,r3
10101778:	80800005 	stb	r2,0(r16)
1010177c:	9d86b03a 	or	r3,r19,r22
10101780:	183ff61e 	bne	r3,zero,1010175c <__alt_data_end+0xfffe175c>
10101784:	90c0004c 	andi	r3,r18,1
10101788:	18014126 	beq	r3,zero,10101c90 <___vfprintf_internal_r+0xc34>
1010178c:	10803fcc 	andi	r2,r2,255
10101790:	1080201c 	xori	r2,r2,128
10101794:	10bfe004 	addi	r2,r2,-128
10101798:	00c00c04 	movi	r3,48
1010179c:	10c13c26 	beq	r2,r3,10101c90 <___vfprintf_internal_r+0xc34>
101017a0:	80ffffc5 	stb	r3,-1(r16)
101017a4:	d8c02817 	ldw	r3,160(sp)
101017a8:	80bfffc4 	addi	r2,r16,-1
101017ac:	1021883a 	mov	r16,r2
101017b0:	1887c83a 	sub	r3,r3,r2
101017b4:	d8c02b15 	stw	r3,172(sp)
101017b8:	d8802b17 	ldw	r2,172(sp)
101017bc:	d9002a17 	ldw	r4,168(sp)
101017c0:	1100010e 	bge	r2,r4,101017c8 <___vfprintf_internal_r+0x76c>
101017c4:	2005883a 	mov	r2,r4
101017c8:	d8802915 	stw	r2,164(sp)
101017cc:	d8003215 	stw	zero,200(sp)
101017d0:	e7003fcc 	andi	fp,fp,255
101017d4:	e700201c 	xori	fp,fp,128
101017d8:	e73fe004 	addi	fp,fp,-128
101017dc:	e0000326 	beq	fp,zero,101017ec <___vfprintf_internal_r+0x790>
101017e0:	d8c02917 	ldw	r3,164(sp)
101017e4:	18c00044 	addi	r3,r3,1
101017e8:	d8c02915 	stw	r3,164(sp)
101017ec:	90c0008c 	andi	r3,r18,2
101017f0:	d8c02c15 	stw	r3,176(sp)
101017f4:	18000326 	beq	r3,zero,10101804 <___vfprintf_internal_r+0x7a8>
101017f8:	d8c02917 	ldw	r3,164(sp)
101017fc:	18c00084 	addi	r3,r3,2
10101800:	d8c02915 	stw	r3,164(sp)
10101804:	90c0210c 	andi	r3,r18,132
10101808:	d8c03015 	stw	r3,192(sp)
1010180c:	1801c51e 	bne	r3,zero,10101f24 <___vfprintf_internal_r+0xec8>
10101810:	d9003117 	ldw	r4,196(sp)
10101814:	d8c02917 	ldw	r3,164(sp)
10101818:	20e7c83a 	sub	r19,r4,r3
1010181c:	04c1c10e 	bge	zero,r19,10101f24 <___vfprintf_internal_r+0xec8>
10101820:	02400404 	movi	r9,16
10101824:	d8c02017 	ldw	r3,128(sp)
10101828:	d8801f17 	ldw	r2,124(sp)
1010182c:	4cc52f0e 	bge	r9,r19,10102cec <___vfprintf_internal_r+0x1c90>
10101830:	01440474 	movhi	r5,4113
10101834:	2941c584 	addi	r5,r5,1814
10101838:	dc403b15 	stw	r17,236(sp)
1010183c:	d9403515 	stw	r5,212(sp)
10101840:	9823883a 	mov	r17,r19
10101844:	482d883a 	mov	r22,r9
10101848:	9027883a 	mov	r19,r18
1010184c:	070001c4 	movi	fp,7
10101850:	8025883a 	mov	r18,r16
10101854:	dc002d17 	ldw	r16,180(sp)
10101858:	00000306 	br	10101868 <___vfprintf_internal_r+0x80c>
1010185c:	8c7ffc04 	addi	r17,r17,-16
10101860:	42000204 	addi	r8,r8,8
10101864:	b440130e 	bge	r22,r17,101018b4 <___vfprintf_internal_r+0x858>
10101868:	01040474 	movhi	r4,4113
1010186c:	18c00404 	addi	r3,r3,16
10101870:	10800044 	addi	r2,r2,1
10101874:	2101c584 	addi	r4,r4,1814
10101878:	41000015 	stw	r4,0(r8)
1010187c:	45800115 	stw	r22,4(r8)
10101880:	d8c02015 	stw	r3,128(sp)
10101884:	d8801f15 	stw	r2,124(sp)
10101888:	e0bff40e 	bge	fp,r2,1010185c <__alt_data_end+0xfffe185c>
1010188c:	d9801e04 	addi	r6,sp,120
10101890:	b80b883a 	mov	r5,r23
10101894:	8009883a 	mov	r4,r16
10101898:	01086f40 	call	101086f4 <__sprint_r>
1010189c:	103ef31e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
101018a0:	8c7ffc04 	addi	r17,r17,-16
101018a4:	d8c02017 	ldw	r3,128(sp)
101018a8:	d8801f17 	ldw	r2,124(sp)
101018ac:	da000404 	addi	r8,sp,16
101018b0:	b47fed16 	blt	r22,r17,10101868 <__alt_data_end+0xfffe1868>
101018b4:	9021883a 	mov	r16,r18
101018b8:	9825883a 	mov	r18,r19
101018bc:	8827883a 	mov	r19,r17
101018c0:	dc403b17 	ldw	r17,236(sp)
101018c4:	d9403517 	ldw	r5,212(sp)
101018c8:	98c7883a 	add	r3,r19,r3
101018cc:	10800044 	addi	r2,r2,1
101018d0:	41400015 	stw	r5,0(r8)
101018d4:	44c00115 	stw	r19,4(r8)
101018d8:	d8c02015 	stw	r3,128(sp)
101018dc:	d8801f15 	stw	r2,124(sp)
101018e0:	010001c4 	movi	r4,7
101018e4:	2082c516 	blt	r4,r2,101023fc <___vfprintf_internal_r+0x13a0>
101018e8:	df002787 	ldb	fp,158(sp)
101018ec:	42000204 	addi	r8,r8,8
101018f0:	e0000c26 	beq	fp,zero,10101924 <___vfprintf_internal_r+0x8c8>
101018f4:	d8801f17 	ldw	r2,124(sp)
101018f8:	d9002784 	addi	r4,sp,158
101018fc:	18c00044 	addi	r3,r3,1
10101900:	10800044 	addi	r2,r2,1
10101904:	41000015 	stw	r4,0(r8)
10101908:	01000044 	movi	r4,1
1010190c:	41000115 	stw	r4,4(r8)
10101910:	d8c02015 	stw	r3,128(sp)
10101914:	d8801f15 	stw	r2,124(sp)
10101918:	010001c4 	movi	r4,7
1010191c:	20825e16 	blt	r4,r2,10102298 <___vfprintf_internal_r+0x123c>
10101920:	42000204 	addi	r8,r8,8
10101924:	d8802c17 	ldw	r2,176(sp)
10101928:	10000c26 	beq	r2,zero,1010195c <___vfprintf_internal_r+0x900>
1010192c:	d8801f17 	ldw	r2,124(sp)
10101930:	d9002704 	addi	r4,sp,156
10101934:	18c00084 	addi	r3,r3,2
10101938:	10800044 	addi	r2,r2,1
1010193c:	41000015 	stw	r4,0(r8)
10101940:	01000084 	movi	r4,2
10101944:	41000115 	stw	r4,4(r8)
10101948:	d8c02015 	stw	r3,128(sp)
1010194c:	d8801f15 	stw	r2,124(sp)
10101950:	010001c4 	movi	r4,7
10101954:	20825816 	blt	r4,r2,101022b8 <___vfprintf_internal_r+0x125c>
10101958:	42000204 	addi	r8,r8,8
1010195c:	d9003017 	ldw	r4,192(sp)
10101960:	00802004 	movi	r2,128
10101964:	2081bb26 	beq	r4,r2,10102054 <___vfprintf_internal_r+0xff8>
10101968:	d9402a17 	ldw	r5,168(sp)
1010196c:	d8802b17 	ldw	r2,172(sp)
10101970:	28adc83a 	sub	r22,r5,r2
10101974:	0580310e 	bge	zero,r22,10101a3c <___vfprintf_internal_r+0x9e0>
10101978:	07000404 	movi	fp,16
1010197c:	d8801f17 	ldw	r2,124(sp)
10101980:	e584360e 	bge	fp,r22,10102a5c <___vfprintf_internal_r+0x1a00>
10101984:	01440474 	movhi	r5,4113
10101988:	2941c184 	addi	r5,r5,1798
1010198c:	dc402a15 	stw	r17,168(sp)
10101990:	d9402c15 	stw	r5,176(sp)
10101994:	b023883a 	mov	r17,r22
10101998:	04c001c4 	movi	r19,7
1010199c:	a82d883a 	mov	r22,r21
101019a0:	902b883a 	mov	r21,r18
101019a4:	8025883a 	mov	r18,r16
101019a8:	dc002d17 	ldw	r16,180(sp)
101019ac:	00000306 	br	101019bc <___vfprintf_internal_r+0x960>
101019b0:	8c7ffc04 	addi	r17,r17,-16
101019b4:	42000204 	addi	r8,r8,8
101019b8:	e440110e 	bge	fp,r17,10101a00 <___vfprintf_internal_r+0x9a4>
101019bc:	18c00404 	addi	r3,r3,16
101019c0:	10800044 	addi	r2,r2,1
101019c4:	45000015 	stw	r20,0(r8)
101019c8:	47000115 	stw	fp,4(r8)
101019cc:	d8c02015 	stw	r3,128(sp)
101019d0:	d8801f15 	stw	r2,124(sp)
101019d4:	98bff60e 	bge	r19,r2,101019b0 <__alt_data_end+0xfffe19b0>
101019d8:	d9801e04 	addi	r6,sp,120
101019dc:	b80b883a 	mov	r5,r23
101019e0:	8009883a 	mov	r4,r16
101019e4:	01086f40 	call	101086f4 <__sprint_r>
101019e8:	103ea01e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
101019ec:	8c7ffc04 	addi	r17,r17,-16
101019f0:	d8c02017 	ldw	r3,128(sp)
101019f4:	d8801f17 	ldw	r2,124(sp)
101019f8:	da000404 	addi	r8,sp,16
101019fc:	e47fef16 	blt	fp,r17,101019bc <__alt_data_end+0xfffe19bc>
10101a00:	9021883a 	mov	r16,r18
10101a04:	a825883a 	mov	r18,r21
10101a08:	b02b883a 	mov	r21,r22
10101a0c:	882d883a 	mov	r22,r17
10101a10:	dc402a17 	ldw	r17,168(sp)
10101a14:	d9002c17 	ldw	r4,176(sp)
10101a18:	1d87883a 	add	r3,r3,r22
10101a1c:	10800044 	addi	r2,r2,1
10101a20:	41000015 	stw	r4,0(r8)
10101a24:	45800115 	stw	r22,4(r8)
10101a28:	d8c02015 	stw	r3,128(sp)
10101a2c:	d8801f15 	stw	r2,124(sp)
10101a30:	010001c4 	movi	r4,7
10101a34:	20821016 	blt	r4,r2,10102278 <___vfprintf_internal_r+0x121c>
10101a38:	42000204 	addi	r8,r8,8
10101a3c:	9080400c 	andi	r2,r18,256
10101a40:	10013a1e 	bne	r2,zero,10101f2c <___vfprintf_internal_r+0xed0>
10101a44:	d9402b17 	ldw	r5,172(sp)
10101a48:	d8801f17 	ldw	r2,124(sp)
10101a4c:	44000015 	stw	r16,0(r8)
10101a50:	1947883a 	add	r3,r3,r5
10101a54:	10800044 	addi	r2,r2,1
10101a58:	41400115 	stw	r5,4(r8)
10101a5c:	d8c02015 	stw	r3,128(sp)
10101a60:	d8801f15 	stw	r2,124(sp)
10101a64:	010001c4 	movi	r4,7
10101a68:	2081f516 	blt	r4,r2,10102240 <___vfprintf_internal_r+0x11e4>
10101a6c:	42000204 	addi	r8,r8,8
10101a70:	9480010c 	andi	r18,r18,4
10101a74:	90003226 	beq	r18,zero,10101b40 <___vfprintf_internal_r+0xae4>
10101a78:	d9403117 	ldw	r5,196(sp)
10101a7c:	d8802917 	ldw	r2,164(sp)
10101a80:	28a1c83a 	sub	r16,r5,r2
10101a84:	04002e0e 	bge	zero,r16,10101b40 <___vfprintf_internal_r+0xae4>
10101a88:	04400404 	movi	r17,16
10101a8c:	d8801f17 	ldw	r2,124(sp)
10101a90:	8c04c40e 	bge	r17,r16,10102da4 <___vfprintf_internal_r+0x1d48>
10101a94:	01440474 	movhi	r5,4113
10101a98:	2941c584 	addi	r5,r5,1814
10101a9c:	d9403515 	stw	r5,212(sp)
10101aa0:	048001c4 	movi	r18,7
10101aa4:	dcc02d17 	ldw	r19,180(sp)
10101aa8:	00000306 	br	10101ab8 <___vfprintf_internal_r+0xa5c>
10101aac:	843ffc04 	addi	r16,r16,-16
10101ab0:	42000204 	addi	r8,r8,8
10101ab4:	8c00130e 	bge	r17,r16,10101b04 <___vfprintf_internal_r+0xaa8>
10101ab8:	01040474 	movhi	r4,4113
10101abc:	18c00404 	addi	r3,r3,16
10101ac0:	10800044 	addi	r2,r2,1
10101ac4:	2101c584 	addi	r4,r4,1814
10101ac8:	41000015 	stw	r4,0(r8)
10101acc:	44400115 	stw	r17,4(r8)
10101ad0:	d8c02015 	stw	r3,128(sp)
10101ad4:	d8801f15 	stw	r2,124(sp)
10101ad8:	90bff40e 	bge	r18,r2,10101aac <__alt_data_end+0xfffe1aac>
10101adc:	d9801e04 	addi	r6,sp,120
10101ae0:	b80b883a 	mov	r5,r23
10101ae4:	9809883a 	mov	r4,r19
10101ae8:	01086f40 	call	101086f4 <__sprint_r>
10101aec:	103e5f1e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10101af0:	843ffc04 	addi	r16,r16,-16
10101af4:	d8c02017 	ldw	r3,128(sp)
10101af8:	d8801f17 	ldw	r2,124(sp)
10101afc:	da000404 	addi	r8,sp,16
10101b00:	8c3fed16 	blt	r17,r16,10101ab8 <__alt_data_end+0xfffe1ab8>
10101b04:	d9403517 	ldw	r5,212(sp)
10101b08:	1c07883a 	add	r3,r3,r16
10101b0c:	10800044 	addi	r2,r2,1
10101b10:	41400015 	stw	r5,0(r8)
10101b14:	44000115 	stw	r16,4(r8)
10101b18:	d8c02015 	stw	r3,128(sp)
10101b1c:	d8801f15 	stw	r2,124(sp)
10101b20:	010001c4 	movi	r4,7
10101b24:	2080060e 	bge	r4,r2,10101b40 <___vfprintf_internal_r+0xae4>
10101b28:	d9002d17 	ldw	r4,180(sp)
10101b2c:	d9801e04 	addi	r6,sp,120
10101b30:	b80b883a 	mov	r5,r23
10101b34:	01086f40 	call	101086f4 <__sprint_r>
10101b38:	103e4c1e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10101b3c:	d8c02017 	ldw	r3,128(sp)
10101b40:	d8803117 	ldw	r2,196(sp)
10101b44:	d9002917 	ldw	r4,164(sp)
10101b48:	1100010e 	bge	r2,r4,10101b50 <___vfprintf_internal_r+0xaf4>
10101b4c:	2005883a 	mov	r2,r4
10101b50:	d9402f17 	ldw	r5,188(sp)
10101b54:	288b883a 	add	r5,r5,r2
10101b58:	d9402f15 	stw	r5,188(sp)
10101b5c:	1801c01e 	bne	r3,zero,10102260 <___vfprintf_internal_r+0x1204>
10101b60:	a8800007 	ldb	r2,0(r21)
10101b64:	d8001f15 	stw	zero,124(sp)
10101b68:	da000404 	addi	r8,sp,16
10101b6c:	103d751e 	bne	r2,zero,10101144 <__alt_data_end+0xfffe1144>
10101b70:	a823883a 	mov	r17,r21
10101b74:	003d8b06 	br	101011a4 <__alt_data_end+0xfffe11a4>
10101b78:	8025883a 	mov	r18,r16
10101b7c:	dc002903 	ldbu	r16,164(sp)
10101b80:	e011883a 	mov	r8,fp
10101b84:	84003fcc 	andi	r16,r16,255
10101b88:	8005e51e 	bne	r16,zero,10103320 <___vfprintf_internal_r+0x22c4>
10101b8c:	94800414 	ori	r18,r18,16
10101b90:	9080080c 	andi	r2,r18,32
10101b94:	10022b26 	beq	r2,zero,10102444 <___vfprintf_internal_r+0x13e8>
10101b98:	d9002e17 	ldw	r4,184(sp)
10101b9c:	d9402a17 	ldw	r5,168(sp)
10101ba0:	d8002785 	stb	zero,158(sp)
10101ba4:	20c00204 	addi	r3,r4,8
10101ba8:	24c00017 	ldw	r19,0(r4)
10101bac:	25800117 	ldw	r22,4(r4)
10101bb0:	28042e16 	blt	r5,zero,10102c6c <___vfprintf_internal_r+0x1c10>
10101bb4:	013fdfc4 	movi	r4,-129
10101bb8:	9d84b03a 	or	r2,r19,r22
10101bbc:	d8c02e15 	stw	r3,184(sp)
10101bc0:	9124703a 	and	r18,r18,r4
10101bc4:	0039883a 	mov	fp,zero
10101bc8:	103e801e 	bne	r2,zero,101015cc <__alt_data_end+0xfffe15cc>
10101bcc:	d9002a17 	ldw	r4,168(sp)
10101bd0:	2002e01e 	bne	r4,zero,10102754 <___vfprintf_internal_r+0x16f8>
10101bd4:	d8002a15 	stw	zero,168(sp)
10101bd8:	d8002b15 	stw	zero,172(sp)
10101bdc:	dc001e04 	addi	r16,sp,120
10101be0:	003ef506 	br	101017b8 <__alt_data_end+0xfffe17b8>
10101be4:	8025883a 	mov	r18,r16
10101be8:	dc002903 	ldbu	r16,164(sp)
10101bec:	e011883a 	mov	r8,fp
10101bf0:	84003fcc 	andi	r16,r16,255
10101bf4:	8005ba1e 	bne	r16,zero,101032e0 <___vfprintf_internal_r+0x2284>
10101bf8:	01040474 	movhi	r4,4113
10101bfc:	2101b504 	addi	r4,r4,1748
10101c00:	d9003915 	stw	r4,228(sp)
10101c04:	9080080c 	andi	r2,r18,32
10101c08:	10006126 	beq	r2,zero,10101d90 <___vfprintf_internal_r+0xd34>
10101c0c:	d9402e17 	ldw	r5,184(sp)
10101c10:	2cc00017 	ldw	r19,0(r5)
10101c14:	2d800117 	ldw	r22,4(r5)
10101c18:	29400204 	addi	r5,r5,8
10101c1c:	d9402e15 	stw	r5,184(sp)
10101c20:	9080004c 	andi	r2,r18,1
10101c24:	1001ac26 	beq	r2,zero,101022d8 <___vfprintf_internal_r+0x127c>
10101c28:	9d84b03a 	or	r2,r19,r22
10101c2c:	10038526 	beq	r2,zero,10102a44 <___vfprintf_internal_r+0x19e8>
10101c30:	d8c02a17 	ldw	r3,168(sp)
10101c34:	00800c04 	movi	r2,48
10101c38:	d8802705 	stb	r2,156(sp)
10101c3c:	dc402745 	stb	r17,157(sp)
10101c40:	d8002785 	stb	zero,158(sp)
10101c44:	90800094 	ori	r2,r18,2
10101c48:	18047916 	blt	r3,zero,10102e30 <___vfprintf_internal_r+0x1dd4>
10101c4c:	00bfdfc4 	movi	r2,-129
10101c50:	90a4703a 	and	r18,r18,r2
10101c54:	94800094 	ori	r18,r18,2
10101c58:	0039883a 	mov	fp,zero
10101c5c:	d9003917 	ldw	r4,228(sp)
10101c60:	dc001e04 	addi	r16,sp,120
10101c64:	988003cc 	andi	r2,r19,15
10101c68:	b006973a 	slli	r3,r22,28
10101c6c:	2085883a 	add	r2,r4,r2
10101c70:	9826d13a 	srli	r19,r19,4
10101c74:	10800003 	ldbu	r2,0(r2)
10101c78:	b02cd13a 	srli	r22,r22,4
10101c7c:	843fffc4 	addi	r16,r16,-1
10101c80:	1ce6b03a 	or	r19,r3,r19
10101c84:	80800005 	stb	r2,0(r16)
10101c88:	9d84b03a 	or	r2,r19,r22
10101c8c:	103ff51e 	bne	r2,zero,10101c64 <__alt_data_end+0xfffe1c64>
10101c90:	d8c02817 	ldw	r3,160(sp)
10101c94:	1c07c83a 	sub	r3,r3,r16
10101c98:	d8c02b15 	stw	r3,172(sp)
10101c9c:	003ec606 	br	101017b8 <__alt_data_end+0xfffe17b8>
10101ca0:	8025883a 	mov	r18,r16
10101ca4:	dc002903 	ldbu	r16,164(sp)
10101ca8:	e011883a 	mov	r8,fp
10101cac:	84003fcc 	andi	r16,r16,255
10101cb0:	803e9626 	beq	r16,zero,1010170c <__alt_data_end+0xfffe170c>
10101cb4:	d8c02b03 	ldbu	r3,172(sp)
10101cb8:	d8c02785 	stb	r3,158(sp)
10101cbc:	003e9306 	br	1010170c <__alt_data_end+0xfffe170c>
10101cc0:	00c00044 	movi	r3,1
10101cc4:	d8c02905 	stb	r3,164(sp)
10101cc8:	00c00ac4 	movi	r3,43
10101ccc:	d8c02b05 	stb	r3,172(sp)
10101cd0:	ac400007 	ldb	r17,0(r21)
10101cd4:	003d4306 	br	101011e4 <__alt_data_end+0xfffe11e4>
10101cd8:	84000814 	ori	r16,r16,32
10101cdc:	ac400007 	ldb	r17,0(r21)
10101ce0:	003d4006 	br	101011e4 <__alt_data_end+0xfffe11e4>
10101ce4:	d8802e17 	ldw	r2,184(sp)
10101ce8:	8025883a 	mov	r18,r16
10101cec:	d8002785 	stb	zero,158(sp)
10101cf0:	14000017 	ldw	r16,0(r2)
10101cf4:	e011883a 	mov	r8,fp
10101cf8:	14c00104 	addi	r19,r2,4
10101cfc:	80042d26 	beq	r16,zero,10102db4 <___vfprintf_internal_r+0x1d58>
10101d00:	d8c02a17 	ldw	r3,168(sp)
10101d04:	1803e416 	blt	r3,zero,10102c98 <___vfprintf_internal_r+0x1c3c>
10101d08:	180d883a 	mov	r6,r3
10101d0c:	000b883a 	mov	r5,zero
10101d10:	8009883a 	mov	r4,r16
10101d14:	df003d15 	stw	fp,244(sp)
10101d18:	01069940 	call	10106994 <memchr>
10101d1c:	da003d17 	ldw	r8,244(sp)
10101d20:	10046826 	beq	r2,zero,10102ec4 <___vfprintf_internal_r+0x1e68>
10101d24:	1405c83a 	sub	r2,r2,r16
10101d28:	d8802b15 	stw	r2,172(sp)
10101d2c:	1003e016 	blt	r2,zero,10102cb0 <___vfprintf_internal_r+0x1c54>
10101d30:	df002783 	ldbu	fp,158(sp)
10101d34:	d8802915 	stw	r2,164(sp)
10101d38:	dcc02e15 	stw	r19,184(sp)
10101d3c:	d8002a15 	stw	zero,168(sp)
10101d40:	d8003215 	stw	zero,200(sp)
10101d44:	003ea206 	br	101017d0 <__alt_data_end+0xfffe17d0>
10101d48:	8025883a 	mov	r18,r16
10101d4c:	dc002903 	ldbu	r16,164(sp)
10101d50:	e011883a 	mov	r8,fp
10101d54:	84003fcc 	andi	r16,r16,255
10101d58:	803f8d26 	beq	r16,zero,10101b90 <__alt_data_end+0xfffe1b90>
10101d5c:	d8c02b03 	ldbu	r3,172(sp)
10101d60:	d8c02785 	stb	r3,158(sp)
10101d64:	003f8a06 	br	10101b90 <__alt_data_end+0xfffe1b90>
10101d68:	8025883a 	mov	r18,r16
10101d6c:	dc002903 	ldbu	r16,164(sp)
10101d70:	e011883a 	mov	r8,fp
10101d74:	84003fcc 	andi	r16,r16,255
10101d78:	8005661e 	bne	r16,zero,10103314 <___vfprintf_internal_r+0x22b8>
10101d7c:	01040474 	movhi	r4,4113
10101d80:	2101ba04 	addi	r4,r4,1768
10101d84:	d9003915 	stw	r4,228(sp)
10101d88:	9080080c 	andi	r2,r18,32
10101d8c:	103f9f1e 	bne	r2,zero,10101c0c <__alt_data_end+0xfffe1c0c>
10101d90:	9080040c 	andi	r2,r18,16
10101d94:	1002eb26 	beq	r2,zero,10102944 <___vfprintf_internal_r+0x18e8>
10101d98:	d8802e17 	ldw	r2,184(sp)
10101d9c:	002d883a 	mov	r22,zero
10101da0:	14c00017 	ldw	r19,0(r2)
10101da4:	10800104 	addi	r2,r2,4
10101da8:	d8802e15 	stw	r2,184(sp)
10101dac:	003f9c06 	br	10101c20 <__alt_data_end+0xfffe1c20>
10101db0:	d8802b07 	ldb	r2,172(sp)
10101db4:	1002e11e 	bne	r2,zero,1010293c <___vfprintf_internal_r+0x18e0>
10101db8:	00c00044 	movi	r3,1
10101dbc:	d8c02905 	stb	r3,164(sp)
10101dc0:	00c00804 	movi	r3,32
10101dc4:	d8c02b05 	stb	r3,172(sp)
10101dc8:	ac400007 	ldb	r17,0(r21)
10101dcc:	003d0506 	br	101011e4 <__alt_data_end+0xfffe11e4>
10101dd0:	84000054 	ori	r16,r16,1
10101dd4:	ac400007 	ldb	r17,0(r21)
10101dd8:	003d0206 	br	101011e4 <__alt_data_end+0xfffe11e4>
10101ddc:	8025883a 	mov	r18,r16
10101de0:	dc002903 	ldbu	r16,164(sp)
10101de4:	e011883a 	mov	r8,fp
10101de8:	84003fcc 	andi	r16,r16,255
10101dec:	803de726 	beq	r16,zero,1010158c <__alt_data_end+0xfffe158c>
10101df0:	d8c02b03 	ldbu	r3,172(sp)
10101df4:	d8c02785 	stb	r3,158(sp)
10101df8:	003de406 	br	1010158c <__alt_data_end+0xfffe158c>
10101dfc:	84001014 	ori	r16,r16,64
10101e00:	ac400007 	ldb	r17,0(r21)
10101e04:	003cf706 	br	101011e4 <__alt_data_end+0xfffe11e4>
10101e08:	ac400007 	ldb	r17,0(r21)
10101e0c:	00801b04 	movi	r2,108
10101e10:	88838f26 	beq	r17,r2,10102c50 <___vfprintf_internal_r+0x1bf4>
10101e14:	84000414 	ori	r16,r16,16
10101e18:	003cf206 	br	101011e4 <__alt_data_end+0xfffe11e4>
10101e1c:	8025883a 	mov	r18,r16
10101e20:	dc002903 	ldbu	r16,164(sp)
10101e24:	e011883a 	mov	r8,fp
10101e28:	84003fcc 	andi	r16,r16,255
10101e2c:	80053f1e 	bne	r16,zero,1010332c <___vfprintf_internal_r+0x22d0>
10101e30:	9080080c 	andi	r2,r18,32
10101e34:	1002d226 	beq	r2,zero,10102980 <___vfprintf_internal_r+0x1924>
10101e38:	d9002e17 	ldw	r4,184(sp)
10101e3c:	d9402f17 	ldw	r5,188(sp)
10101e40:	20800017 	ldw	r2,0(r4)
10101e44:	2807d7fa 	srai	r3,r5,31
10101e48:	21000104 	addi	r4,r4,4
10101e4c:	d9002e15 	stw	r4,184(sp)
10101e50:	11400015 	stw	r5,0(r2)
10101e54:	10c00115 	stw	r3,4(r2)
10101e58:	003cb806 	br	1010113c <__alt_data_end+0xfffe113c>
10101e5c:	d8c02e17 	ldw	r3,184(sp)
10101e60:	d9002e17 	ldw	r4,184(sp)
10101e64:	8025883a 	mov	r18,r16
10101e68:	18800017 	ldw	r2,0(r3)
10101e6c:	21000104 	addi	r4,r4,4
10101e70:	00c00044 	movi	r3,1
10101e74:	e011883a 	mov	r8,fp
10101e78:	d8c02915 	stw	r3,164(sp)
10101e7c:	d8002785 	stb	zero,158(sp)
10101e80:	d8801405 	stb	r2,80(sp)
10101e84:	d9002e15 	stw	r4,184(sp)
10101e88:	d8c02b15 	stw	r3,172(sp)
10101e8c:	d8002a15 	stw	zero,168(sp)
10101e90:	d8003215 	stw	zero,200(sp)
10101e94:	dc001404 	addi	r16,sp,80
10101e98:	0039883a 	mov	fp,zero
10101e9c:	003e5306 	br	101017ec <__alt_data_end+0xfffe17ec>
10101ea0:	01040474 	movhi	r4,4113
10101ea4:	2101ba04 	addi	r4,r4,1768
10101ea8:	0039883a 	mov	fp,zero
10101eac:	d9003915 	stw	r4,228(sp)
10101eb0:	04401e04 	movi	r17,120
10101eb4:	003f6906 	br	10101c5c <__alt_data_end+0xfffe1c5c>
10101eb8:	8025883a 	mov	r18,r16
10101ebc:	dc002903 	ldbu	r16,164(sp)
10101ec0:	e011883a 	mov	r8,fp
10101ec4:	84003fcc 	andi	r16,r16,255
10101ec8:	8005081e 	bne	r16,zero,101032ec <___vfprintf_internal_r+0x2290>
10101ecc:	883d6126 	beq	r17,zero,10101454 <__alt_data_end+0xfffe1454>
10101ed0:	00c00044 	movi	r3,1
10101ed4:	d8c02915 	stw	r3,164(sp)
10101ed8:	dc401405 	stb	r17,80(sp)
10101edc:	d8002785 	stb	zero,158(sp)
10101ee0:	003fe906 	br	10101e88 <__alt_data_end+0xfffe1e88>
10101ee4:	01440474 	movhi	r5,4113
10101ee8:	2941ba04 	addi	r5,r5,1768
10101eec:	d9403915 	stw	r5,228(sp)
10101ef0:	d8c02e15 	stw	r3,184(sp)
10101ef4:	1025883a 	mov	r18,r2
10101ef8:	04401e04 	movi	r17,120
10101efc:	9d84b03a 	or	r2,r19,r22
10101f00:	1000fc1e 	bne	r2,zero,101022f4 <___vfprintf_internal_r+0x1298>
10101f04:	0039883a 	mov	fp,zero
10101f08:	00800084 	movi	r2,2
10101f0c:	10803fcc 	andi	r2,r2,255
10101f10:	00c00044 	movi	r3,1
10101f14:	10c20f26 	beq	r2,r3,10102754 <___vfprintf_internal_r+0x16f8>
10101f18:	00c00084 	movi	r3,2
10101f1c:	10fd3326 	beq	r2,r3,101013ec <__alt_data_end+0xfffe13ec>
10101f20:	003e0b06 	br	10101750 <__alt_data_end+0xfffe1750>
10101f24:	d8c02017 	ldw	r3,128(sp)
10101f28:	003e7106 	br	101018f0 <__alt_data_end+0xfffe18f0>
10101f2c:	00801944 	movi	r2,101
10101f30:	14407e0e 	bge	r2,r17,1010212c <___vfprintf_internal_r+0x10d0>
10101f34:	d9003617 	ldw	r4,216(sp)
10101f38:	d9403817 	ldw	r5,224(sp)
10101f3c:	000d883a 	mov	r6,zero
10101f40:	000f883a 	mov	r7,zero
10101f44:	d8c03c15 	stw	r3,240(sp)
10101f48:	da003d15 	stw	r8,244(sp)
10101f4c:	010c4780 	call	1010c478 <__eqdf2>
10101f50:	d8c03c17 	ldw	r3,240(sp)
10101f54:	da003d17 	ldw	r8,244(sp)
10101f58:	1000f71e 	bne	r2,zero,10102338 <___vfprintf_internal_r+0x12dc>
10101f5c:	d8801f17 	ldw	r2,124(sp)
10101f60:	01040474 	movhi	r4,4113
10101f64:	2101c104 	addi	r4,r4,1796
10101f68:	18c00044 	addi	r3,r3,1
10101f6c:	10800044 	addi	r2,r2,1
10101f70:	41000015 	stw	r4,0(r8)
10101f74:	01000044 	movi	r4,1
10101f78:	41000115 	stw	r4,4(r8)
10101f7c:	d8c02015 	stw	r3,128(sp)
10101f80:	d8801f15 	stw	r2,124(sp)
10101f84:	010001c4 	movi	r4,7
10101f88:	2082b816 	blt	r4,r2,10102a6c <___vfprintf_internal_r+0x1a10>
10101f8c:	42000204 	addi	r8,r8,8
10101f90:	d8802617 	ldw	r2,152(sp)
10101f94:	d9403317 	ldw	r5,204(sp)
10101f98:	11400216 	blt	r2,r5,10101fa4 <___vfprintf_internal_r+0xf48>
10101f9c:	9080004c 	andi	r2,r18,1
10101fa0:	103eb326 	beq	r2,zero,10101a70 <__alt_data_end+0xfffe1a70>
10101fa4:	d8803717 	ldw	r2,220(sp)
10101fa8:	d9003417 	ldw	r4,208(sp)
10101fac:	d9403717 	ldw	r5,220(sp)
10101fb0:	1887883a 	add	r3,r3,r2
10101fb4:	d8801f17 	ldw	r2,124(sp)
10101fb8:	41000015 	stw	r4,0(r8)
10101fbc:	41400115 	stw	r5,4(r8)
10101fc0:	10800044 	addi	r2,r2,1
10101fc4:	d8c02015 	stw	r3,128(sp)
10101fc8:	d8801f15 	stw	r2,124(sp)
10101fcc:	010001c4 	movi	r4,7
10101fd0:	20832916 	blt	r4,r2,10102c78 <___vfprintf_internal_r+0x1c1c>
10101fd4:	42000204 	addi	r8,r8,8
10101fd8:	d8803317 	ldw	r2,204(sp)
10101fdc:	143fffc4 	addi	r16,r2,-1
10101fe0:	043ea30e 	bge	zero,r16,10101a70 <__alt_data_end+0xfffe1a70>
10101fe4:	04400404 	movi	r17,16
10101fe8:	d8801f17 	ldw	r2,124(sp)
10101fec:	8c00880e 	bge	r17,r16,10102210 <___vfprintf_internal_r+0x11b4>
10101ff0:	01440474 	movhi	r5,4113
10101ff4:	2941c184 	addi	r5,r5,1798
10101ff8:	d9402c15 	stw	r5,176(sp)
10101ffc:	058001c4 	movi	r22,7
10102000:	dcc02d17 	ldw	r19,180(sp)
10102004:	00000306 	br	10102014 <___vfprintf_internal_r+0xfb8>
10102008:	42000204 	addi	r8,r8,8
1010200c:	843ffc04 	addi	r16,r16,-16
10102010:	8c00820e 	bge	r17,r16,1010221c <___vfprintf_internal_r+0x11c0>
10102014:	18c00404 	addi	r3,r3,16
10102018:	10800044 	addi	r2,r2,1
1010201c:	45000015 	stw	r20,0(r8)
10102020:	44400115 	stw	r17,4(r8)
10102024:	d8c02015 	stw	r3,128(sp)
10102028:	d8801f15 	stw	r2,124(sp)
1010202c:	b0bff60e 	bge	r22,r2,10102008 <__alt_data_end+0xfffe2008>
10102030:	d9801e04 	addi	r6,sp,120
10102034:	b80b883a 	mov	r5,r23
10102038:	9809883a 	mov	r4,r19
1010203c:	01086f40 	call	101086f4 <__sprint_r>
10102040:	103d0a1e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102044:	d8c02017 	ldw	r3,128(sp)
10102048:	d8801f17 	ldw	r2,124(sp)
1010204c:	da000404 	addi	r8,sp,16
10102050:	003fee06 	br	1010200c <__alt_data_end+0xfffe200c>
10102054:	d9403117 	ldw	r5,196(sp)
10102058:	d8802917 	ldw	r2,164(sp)
1010205c:	28adc83a 	sub	r22,r5,r2
10102060:	05be410e 	bge	zero,r22,10101968 <__alt_data_end+0xfffe1968>
10102064:	07000404 	movi	fp,16
10102068:	d8801f17 	ldw	r2,124(sp)
1010206c:	e5838f0e 	bge	fp,r22,10102eac <___vfprintf_internal_r+0x1e50>
10102070:	01440474 	movhi	r5,4113
10102074:	2941c184 	addi	r5,r5,1798
10102078:	dc403015 	stw	r17,192(sp)
1010207c:	d9402c15 	stw	r5,176(sp)
10102080:	b023883a 	mov	r17,r22
10102084:	04c001c4 	movi	r19,7
10102088:	a82d883a 	mov	r22,r21
1010208c:	902b883a 	mov	r21,r18
10102090:	8025883a 	mov	r18,r16
10102094:	dc002d17 	ldw	r16,180(sp)
10102098:	00000306 	br	101020a8 <___vfprintf_internal_r+0x104c>
1010209c:	8c7ffc04 	addi	r17,r17,-16
101020a0:	42000204 	addi	r8,r8,8
101020a4:	e440110e 	bge	fp,r17,101020ec <___vfprintf_internal_r+0x1090>
101020a8:	18c00404 	addi	r3,r3,16
101020ac:	10800044 	addi	r2,r2,1
101020b0:	45000015 	stw	r20,0(r8)
101020b4:	47000115 	stw	fp,4(r8)
101020b8:	d8c02015 	stw	r3,128(sp)
101020bc:	d8801f15 	stw	r2,124(sp)
101020c0:	98bff60e 	bge	r19,r2,1010209c <__alt_data_end+0xfffe209c>
101020c4:	d9801e04 	addi	r6,sp,120
101020c8:	b80b883a 	mov	r5,r23
101020cc:	8009883a 	mov	r4,r16
101020d0:	01086f40 	call	101086f4 <__sprint_r>
101020d4:	103ce51e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
101020d8:	8c7ffc04 	addi	r17,r17,-16
101020dc:	d8c02017 	ldw	r3,128(sp)
101020e0:	d8801f17 	ldw	r2,124(sp)
101020e4:	da000404 	addi	r8,sp,16
101020e8:	e47fef16 	blt	fp,r17,101020a8 <__alt_data_end+0xfffe20a8>
101020ec:	9021883a 	mov	r16,r18
101020f0:	a825883a 	mov	r18,r21
101020f4:	b02b883a 	mov	r21,r22
101020f8:	882d883a 	mov	r22,r17
101020fc:	dc403017 	ldw	r17,192(sp)
10102100:	d9002c17 	ldw	r4,176(sp)
10102104:	1d87883a 	add	r3,r3,r22
10102108:	10800044 	addi	r2,r2,1
1010210c:	41000015 	stw	r4,0(r8)
10102110:	45800115 	stw	r22,4(r8)
10102114:	d8c02015 	stw	r3,128(sp)
10102118:	d8801f15 	stw	r2,124(sp)
1010211c:	010001c4 	movi	r4,7
10102120:	20818e16 	blt	r4,r2,1010275c <___vfprintf_internal_r+0x1700>
10102124:	42000204 	addi	r8,r8,8
10102128:	003e0f06 	br	10101968 <__alt_data_end+0xfffe1968>
1010212c:	d9403317 	ldw	r5,204(sp)
10102130:	00800044 	movi	r2,1
10102134:	18c00044 	addi	r3,r3,1
10102138:	1141530e 	bge	r2,r5,10102688 <___vfprintf_internal_r+0x162c>
1010213c:	dc401f17 	ldw	r17,124(sp)
10102140:	00800044 	movi	r2,1
10102144:	40800115 	stw	r2,4(r8)
10102148:	8c400044 	addi	r17,r17,1
1010214c:	44000015 	stw	r16,0(r8)
10102150:	d8c02015 	stw	r3,128(sp)
10102154:	dc401f15 	stw	r17,124(sp)
10102158:	008001c4 	movi	r2,7
1010215c:	14416b16 	blt	r2,r17,1010270c <___vfprintf_internal_r+0x16b0>
10102160:	42000204 	addi	r8,r8,8
10102164:	d8803717 	ldw	r2,220(sp)
10102168:	d9003417 	ldw	r4,208(sp)
1010216c:	8c400044 	addi	r17,r17,1
10102170:	10c7883a 	add	r3,r2,r3
10102174:	40800115 	stw	r2,4(r8)
10102178:	41000015 	stw	r4,0(r8)
1010217c:	d8c02015 	stw	r3,128(sp)
10102180:	dc401f15 	stw	r17,124(sp)
10102184:	008001c4 	movi	r2,7
10102188:	14416916 	blt	r2,r17,10102730 <___vfprintf_internal_r+0x16d4>
1010218c:	45800204 	addi	r22,r8,8
10102190:	d9003617 	ldw	r4,216(sp)
10102194:	d9403817 	ldw	r5,224(sp)
10102198:	000d883a 	mov	r6,zero
1010219c:	000f883a 	mov	r7,zero
101021a0:	d8c03c15 	stw	r3,240(sp)
101021a4:	010c4780 	call	1010c478 <__eqdf2>
101021a8:	d8c03c17 	ldw	r3,240(sp)
101021ac:	1000bc26 	beq	r2,zero,101024a0 <___vfprintf_internal_r+0x1444>
101021b0:	d9403317 	ldw	r5,204(sp)
101021b4:	84000044 	addi	r16,r16,1
101021b8:	8c400044 	addi	r17,r17,1
101021bc:	28bfffc4 	addi	r2,r5,-1
101021c0:	1887883a 	add	r3,r3,r2
101021c4:	b0800115 	stw	r2,4(r22)
101021c8:	b4000015 	stw	r16,0(r22)
101021cc:	d8c02015 	stw	r3,128(sp)
101021d0:	dc401f15 	stw	r17,124(sp)
101021d4:	008001c4 	movi	r2,7
101021d8:	14414316 	blt	r2,r17,101026e8 <___vfprintf_internal_r+0x168c>
101021dc:	b5800204 	addi	r22,r22,8
101021e0:	d9003a17 	ldw	r4,232(sp)
101021e4:	df0022c4 	addi	fp,sp,139
101021e8:	8c400044 	addi	r17,r17,1
101021ec:	20c7883a 	add	r3,r4,r3
101021f0:	b7000015 	stw	fp,0(r22)
101021f4:	b1000115 	stw	r4,4(r22)
101021f8:	d8c02015 	stw	r3,128(sp)
101021fc:	dc401f15 	stw	r17,124(sp)
10102200:	008001c4 	movi	r2,7
10102204:	14400e16 	blt	r2,r17,10102240 <___vfprintf_internal_r+0x11e4>
10102208:	b2000204 	addi	r8,r22,8
1010220c:	003e1806 	br	10101a70 <__alt_data_end+0xfffe1a70>
10102210:	01040474 	movhi	r4,4113
10102214:	2101c184 	addi	r4,r4,1798
10102218:	d9002c15 	stw	r4,176(sp)
1010221c:	d9002c17 	ldw	r4,176(sp)
10102220:	1c07883a 	add	r3,r3,r16
10102224:	44000115 	stw	r16,4(r8)
10102228:	41000015 	stw	r4,0(r8)
1010222c:	10800044 	addi	r2,r2,1
10102230:	d8c02015 	stw	r3,128(sp)
10102234:	d8801f15 	stw	r2,124(sp)
10102238:	010001c4 	movi	r4,7
1010223c:	20be0b0e 	bge	r4,r2,10101a6c <__alt_data_end+0xfffe1a6c>
10102240:	d9002d17 	ldw	r4,180(sp)
10102244:	d9801e04 	addi	r6,sp,120
10102248:	b80b883a 	mov	r5,r23
1010224c:	01086f40 	call	101086f4 <__sprint_r>
10102250:	103c861e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102254:	d8c02017 	ldw	r3,128(sp)
10102258:	da000404 	addi	r8,sp,16
1010225c:	003e0406 	br	10101a70 <__alt_data_end+0xfffe1a70>
10102260:	d9002d17 	ldw	r4,180(sp)
10102264:	d9801e04 	addi	r6,sp,120
10102268:	b80b883a 	mov	r5,r23
1010226c:	01086f40 	call	101086f4 <__sprint_r>
10102270:	103e3b26 	beq	r2,zero,10101b60 <__alt_data_end+0xfffe1b60>
10102274:	003c7d06 	br	1010146c <__alt_data_end+0xfffe146c>
10102278:	d9002d17 	ldw	r4,180(sp)
1010227c:	d9801e04 	addi	r6,sp,120
10102280:	b80b883a 	mov	r5,r23
10102284:	01086f40 	call	101086f4 <__sprint_r>
10102288:	103c781e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
1010228c:	d8c02017 	ldw	r3,128(sp)
10102290:	da000404 	addi	r8,sp,16
10102294:	003de906 	br	10101a3c <__alt_data_end+0xfffe1a3c>
10102298:	d9002d17 	ldw	r4,180(sp)
1010229c:	d9801e04 	addi	r6,sp,120
101022a0:	b80b883a 	mov	r5,r23
101022a4:	01086f40 	call	101086f4 <__sprint_r>
101022a8:	103c701e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
101022ac:	d8c02017 	ldw	r3,128(sp)
101022b0:	da000404 	addi	r8,sp,16
101022b4:	003d9b06 	br	10101924 <__alt_data_end+0xfffe1924>
101022b8:	d9002d17 	ldw	r4,180(sp)
101022bc:	d9801e04 	addi	r6,sp,120
101022c0:	b80b883a 	mov	r5,r23
101022c4:	01086f40 	call	101086f4 <__sprint_r>
101022c8:	103c681e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
101022cc:	d8c02017 	ldw	r3,128(sp)
101022d0:	da000404 	addi	r8,sp,16
101022d4:	003da106 	br	1010195c <__alt_data_end+0xfffe195c>
101022d8:	d9402a17 	ldw	r5,168(sp)
101022dc:	d8002785 	stb	zero,158(sp)
101022e0:	283f0616 	blt	r5,zero,10101efc <__alt_data_end+0xfffe1efc>
101022e4:	00ffdfc4 	movi	r3,-129
101022e8:	9d84b03a 	or	r2,r19,r22
101022ec:	90e4703a 	and	r18,r18,r3
101022f0:	103c3b26 	beq	r2,zero,101013e0 <__alt_data_end+0xfffe13e0>
101022f4:	0039883a 	mov	fp,zero
101022f8:	003e5806 	br	10101c5c <__alt_data_end+0xfffe1c5c>
101022fc:	9080040c 	andi	r2,r18,16
10102300:	1001b326 	beq	r2,zero,101029d0 <___vfprintf_internal_r+0x1974>
10102304:	d8c02e17 	ldw	r3,184(sp)
10102308:	d9002a17 	ldw	r4,168(sp)
1010230c:	d8002785 	stb	zero,158(sp)
10102310:	18800104 	addi	r2,r3,4
10102314:	1cc00017 	ldw	r19,0(r3)
10102318:	002d883a 	mov	r22,zero
1010231c:	2001b516 	blt	r4,zero,101029f4 <___vfprintf_internal_r+0x1998>
10102320:	00ffdfc4 	movi	r3,-129
10102324:	d8802e15 	stw	r2,184(sp)
10102328:	90e4703a 	and	r18,r18,r3
1010232c:	983d0526 	beq	r19,zero,10101744 <__alt_data_end+0xfffe1744>
10102330:	0039883a 	mov	fp,zero
10102334:	003d0806 	br	10101758 <__alt_data_end+0xfffe1758>
10102338:	dc402617 	ldw	r17,152(sp)
1010233c:	0441d30e 	bge	zero,r17,10102a8c <___vfprintf_internal_r+0x1a30>
10102340:	dc403217 	ldw	r17,200(sp)
10102344:	d8803317 	ldw	r2,204(sp)
10102348:	1440010e 	bge	r2,r17,10102350 <___vfprintf_internal_r+0x12f4>
1010234c:	1023883a 	mov	r17,r2
10102350:	04400a0e 	bge	zero,r17,1010237c <___vfprintf_internal_r+0x1320>
10102354:	d8801f17 	ldw	r2,124(sp)
10102358:	1c47883a 	add	r3,r3,r17
1010235c:	44000015 	stw	r16,0(r8)
10102360:	10800044 	addi	r2,r2,1
10102364:	44400115 	stw	r17,4(r8)
10102368:	d8c02015 	stw	r3,128(sp)
1010236c:	d8801f15 	stw	r2,124(sp)
10102370:	010001c4 	movi	r4,7
10102374:	20826516 	blt	r4,r2,10102d0c <___vfprintf_internal_r+0x1cb0>
10102378:	42000204 	addi	r8,r8,8
1010237c:	88026116 	blt	r17,zero,10102d04 <___vfprintf_internal_r+0x1ca8>
10102380:	d9003217 	ldw	r4,200(sp)
10102384:	2463c83a 	sub	r17,r4,r17
10102388:	04407b0e 	bge	zero,r17,10102578 <___vfprintf_internal_r+0x151c>
1010238c:	05800404 	movi	r22,16
10102390:	d8801f17 	ldw	r2,124(sp)
10102394:	b4419d0e 	bge	r22,r17,10102a0c <___vfprintf_internal_r+0x19b0>
10102398:	01040474 	movhi	r4,4113
1010239c:	2101c184 	addi	r4,r4,1798
101023a0:	d9002c15 	stw	r4,176(sp)
101023a4:	070001c4 	movi	fp,7
101023a8:	dcc02d17 	ldw	r19,180(sp)
101023ac:	00000306 	br	101023bc <___vfprintf_internal_r+0x1360>
101023b0:	42000204 	addi	r8,r8,8
101023b4:	8c7ffc04 	addi	r17,r17,-16
101023b8:	b441970e 	bge	r22,r17,10102a18 <___vfprintf_internal_r+0x19bc>
101023bc:	18c00404 	addi	r3,r3,16
101023c0:	10800044 	addi	r2,r2,1
101023c4:	45000015 	stw	r20,0(r8)
101023c8:	45800115 	stw	r22,4(r8)
101023cc:	d8c02015 	stw	r3,128(sp)
101023d0:	d8801f15 	stw	r2,124(sp)
101023d4:	e0bff60e 	bge	fp,r2,101023b0 <__alt_data_end+0xfffe23b0>
101023d8:	d9801e04 	addi	r6,sp,120
101023dc:	b80b883a 	mov	r5,r23
101023e0:	9809883a 	mov	r4,r19
101023e4:	01086f40 	call	101086f4 <__sprint_r>
101023e8:	103c201e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
101023ec:	d8c02017 	ldw	r3,128(sp)
101023f0:	d8801f17 	ldw	r2,124(sp)
101023f4:	da000404 	addi	r8,sp,16
101023f8:	003fee06 	br	101023b4 <__alt_data_end+0xfffe23b4>
101023fc:	d9002d17 	ldw	r4,180(sp)
10102400:	d9801e04 	addi	r6,sp,120
10102404:	b80b883a 	mov	r5,r23
10102408:	01086f40 	call	101086f4 <__sprint_r>
1010240c:	103c171e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102410:	d8c02017 	ldw	r3,128(sp)
10102414:	df002787 	ldb	fp,158(sp)
10102418:	da000404 	addi	r8,sp,16
1010241c:	003d3406 	br	101018f0 <__alt_data_end+0xfffe18f0>
10102420:	9080040c 	andi	r2,r18,16
10102424:	10016126 	beq	r2,zero,101029ac <___vfprintf_internal_r+0x1950>
10102428:	d9402e17 	ldw	r5,184(sp)
1010242c:	2cc00017 	ldw	r19,0(r5)
10102430:	29400104 	addi	r5,r5,4
10102434:	d9402e15 	stw	r5,184(sp)
10102438:	982dd7fa 	srai	r22,r19,31
1010243c:	b005883a 	mov	r2,r22
10102440:	003c5a06 	br	101015ac <__alt_data_end+0xfffe15ac>
10102444:	9080040c 	andi	r2,r18,16
10102448:	10003526 	beq	r2,zero,10102520 <___vfprintf_internal_r+0x14c4>
1010244c:	d8c02e17 	ldw	r3,184(sp)
10102450:	d9002a17 	ldw	r4,168(sp)
10102454:	d8002785 	stb	zero,158(sp)
10102458:	18800104 	addi	r2,r3,4
1010245c:	1cc00017 	ldw	r19,0(r3)
10102460:	002d883a 	mov	r22,zero
10102464:	20003716 	blt	r4,zero,10102544 <___vfprintf_internal_r+0x14e8>
10102468:	00ffdfc4 	movi	r3,-129
1010246c:	d8802e15 	stw	r2,184(sp)
10102470:	90e4703a 	and	r18,r18,r3
10102474:	0039883a 	mov	fp,zero
10102478:	983dd426 	beq	r19,zero,10101bcc <__alt_data_end+0xfffe1bcc>
1010247c:	00800244 	movi	r2,9
10102480:	14fc5336 	bltu	r2,r19,101015d0 <__alt_data_end+0xfffe15d0>
10102484:	d8c02817 	ldw	r3,160(sp)
10102488:	dc001dc4 	addi	r16,sp,119
1010248c:	9cc00c04 	addi	r19,r19,48
10102490:	1c07c83a 	sub	r3,r3,r16
10102494:	dcc01dc5 	stb	r19,119(sp)
10102498:	d8c02b15 	stw	r3,172(sp)
1010249c:	003cc606 	br	101017b8 <__alt_data_end+0xfffe17b8>
101024a0:	d8803317 	ldw	r2,204(sp)
101024a4:	143fffc4 	addi	r16,r2,-1
101024a8:	043f4d0e 	bge	zero,r16,101021e0 <__alt_data_end+0xfffe21e0>
101024ac:	07000404 	movi	fp,16
101024b0:	e400810e 	bge	fp,r16,101026b8 <___vfprintf_internal_r+0x165c>
101024b4:	01440474 	movhi	r5,4113
101024b8:	2941c184 	addi	r5,r5,1798
101024bc:	d9402c15 	stw	r5,176(sp)
101024c0:	01c001c4 	movi	r7,7
101024c4:	dcc02d17 	ldw	r19,180(sp)
101024c8:	00000306 	br	101024d8 <___vfprintf_internal_r+0x147c>
101024cc:	b5800204 	addi	r22,r22,8
101024d0:	843ffc04 	addi	r16,r16,-16
101024d4:	e4007b0e 	bge	fp,r16,101026c4 <___vfprintf_internal_r+0x1668>
101024d8:	18c00404 	addi	r3,r3,16
101024dc:	8c400044 	addi	r17,r17,1
101024e0:	b5000015 	stw	r20,0(r22)
101024e4:	b7000115 	stw	fp,4(r22)
101024e8:	d8c02015 	stw	r3,128(sp)
101024ec:	dc401f15 	stw	r17,124(sp)
101024f0:	3c7ff60e 	bge	r7,r17,101024cc <__alt_data_end+0xfffe24cc>
101024f4:	d9801e04 	addi	r6,sp,120
101024f8:	b80b883a 	mov	r5,r23
101024fc:	9809883a 	mov	r4,r19
10102500:	d9c03c15 	stw	r7,240(sp)
10102504:	01086f40 	call	101086f4 <__sprint_r>
10102508:	d9c03c17 	ldw	r7,240(sp)
1010250c:	103bd71e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102510:	d8c02017 	ldw	r3,128(sp)
10102514:	dc401f17 	ldw	r17,124(sp)
10102518:	dd800404 	addi	r22,sp,16
1010251c:	003fec06 	br	101024d0 <__alt_data_end+0xfffe24d0>
10102520:	9080100c 	andi	r2,r18,64
10102524:	d8002785 	stb	zero,158(sp)
10102528:	10010e26 	beq	r2,zero,10102964 <___vfprintf_internal_r+0x1908>
1010252c:	d9402e17 	ldw	r5,184(sp)
10102530:	d8c02a17 	ldw	r3,168(sp)
10102534:	002d883a 	mov	r22,zero
10102538:	28800104 	addi	r2,r5,4
1010253c:	2cc0000b 	ldhu	r19,0(r5)
10102540:	183fc90e 	bge	r3,zero,10102468 <__alt_data_end+0xfffe2468>
10102544:	d8802e15 	stw	r2,184(sp)
10102548:	0039883a 	mov	fp,zero
1010254c:	9d84b03a 	or	r2,r19,r22
10102550:	103c1e1e 	bne	r2,zero,101015cc <__alt_data_end+0xfffe15cc>
10102554:	00800044 	movi	r2,1
10102558:	003e6c06 	br	10101f0c <__alt_data_end+0xfffe1f0c>
1010255c:	d9002d17 	ldw	r4,180(sp)
10102560:	d9801e04 	addi	r6,sp,120
10102564:	b80b883a 	mov	r5,r23
10102568:	01086f40 	call	101086f4 <__sprint_r>
1010256c:	103bbf1e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102570:	d8c02017 	ldw	r3,128(sp)
10102574:	da000404 	addi	r8,sp,16
10102578:	d9003217 	ldw	r4,200(sp)
1010257c:	d8802617 	ldw	r2,152(sp)
10102580:	d9403317 	ldw	r5,204(sp)
10102584:	8123883a 	add	r17,r16,r4
10102588:	11400216 	blt	r2,r5,10102594 <___vfprintf_internal_r+0x1538>
1010258c:	9100004c 	andi	r4,r18,1
10102590:	20000d26 	beq	r4,zero,101025c8 <___vfprintf_internal_r+0x156c>
10102594:	d9003717 	ldw	r4,220(sp)
10102598:	d9403417 	ldw	r5,208(sp)
1010259c:	1907883a 	add	r3,r3,r4
101025a0:	d9001f17 	ldw	r4,124(sp)
101025a4:	41400015 	stw	r5,0(r8)
101025a8:	d9403717 	ldw	r5,220(sp)
101025ac:	21000044 	addi	r4,r4,1
101025b0:	d8c02015 	stw	r3,128(sp)
101025b4:	41400115 	stw	r5,4(r8)
101025b8:	d9001f15 	stw	r4,124(sp)
101025bc:	014001c4 	movi	r5,7
101025c0:	2901e816 	blt	r5,r4,10102d64 <___vfprintf_internal_r+0x1d08>
101025c4:	42000204 	addi	r8,r8,8
101025c8:	d9003317 	ldw	r4,204(sp)
101025cc:	8121883a 	add	r16,r16,r4
101025d0:	2085c83a 	sub	r2,r4,r2
101025d4:	8461c83a 	sub	r16,r16,r17
101025d8:	1400010e 	bge	r2,r16,101025e0 <___vfprintf_internal_r+0x1584>
101025dc:	1021883a 	mov	r16,r2
101025e0:	04000a0e 	bge	zero,r16,1010260c <___vfprintf_internal_r+0x15b0>
101025e4:	d9001f17 	ldw	r4,124(sp)
101025e8:	1c07883a 	add	r3,r3,r16
101025ec:	44400015 	stw	r17,0(r8)
101025f0:	21000044 	addi	r4,r4,1
101025f4:	44000115 	stw	r16,4(r8)
101025f8:	d8c02015 	stw	r3,128(sp)
101025fc:	d9001f15 	stw	r4,124(sp)
10102600:	014001c4 	movi	r5,7
10102604:	2901fb16 	blt	r5,r4,10102df4 <___vfprintf_internal_r+0x1d98>
10102608:	42000204 	addi	r8,r8,8
1010260c:	8001f716 	blt	r16,zero,10102dec <___vfprintf_internal_r+0x1d90>
10102610:	1421c83a 	sub	r16,r2,r16
10102614:	043d160e 	bge	zero,r16,10101a70 <__alt_data_end+0xfffe1a70>
10102618:	04400404 	movi	r17,16
1010261c:	d8801f17 	ldw	r2,124(sp)
10102620:	8c3efb0e 	bge	r17,r16,10102210 <__alt_data_end+0xfffe2210>
10102624:	01440474 	movhi	r5,4113
10102628:	2941c184 	addi	r5,r5,1798
1010262c:	d9402c15 	stw	r5,176(sp)
10102630:	058001c4 	movi	r22,7
10102634:	dcc02d17 	ldw	r19,180(sp)
10102638:	00000306 	br	10102648 <___vfprintf_internal_r+0x15ec>
1010263c:	42000204 	addi	r8,r8,8
10102640:	843ffc04 	addi	r16,r16,-16
10102644:	8c3ef50e 	bge	r17,r16,1010221c <__alt_data_end+0xfffe221c>
10102648:	18c00404 	addi	r3,r3,16
1010264c:	10800044 	addi	r2,r2,1
10102650:	45000015 	stw	r20,0(r8)
10102654:	44400115 	stw	r17,4(r8)
10102658:	d8c02015 	stw	r3,128(sp)
1010265c:	d8801f15 	stw	r2,124(sp)
10102660:	b0bff60e 	bge	r22,r2,1010263c <__alt_data_end+0xfffe263c>
10102664:	d9801e04 	addi	r6,sp,120
10102668:	b80b883a 	mov	r5,r23
1010266c:	9809883a 	mov	r4,r19
10102670:	01086f40 	call	101086f4 <__sprint_r>
10102674:	103b7d1e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102678:	d8c02017 	ldw	r3,128(sp)
1010267c:	d8801f17 	ldw	r2,124(sp)
10102680:	da000404 	addi	r8,sp,16
10102684:	003fee06 	br	10102640 <__alt_data_end+0xfffe2640>
10102688:	9088703a 	and	r4,r18,r2
1010268c:	203eab1e 	bne	r4,zero,1010213c <__alt_data_end+0xfffe213c>
10102690:	dc401f17 	ldw	r17,124(sp)
10102694:	40800115 	stw	r2,4(r8)
10102698:	44000015 	stw	r16,0(r8)
1010269c:	8c400044 	addi	r17,r17,1
101026a0:	d8c02015 	stw	r3,128(sp)
101026a4:	dc401f15 	stw	r17,124(sp)
101026a8:	008001c4 	movi	r2,7
101026ac:	14400e16 	blt	r2,r17,101026e8 <___vfprintf_internal_r+0x168c>
101026b0:	45800204 	addi	r22,r8,8
101026b4:	003eca06 	br	101021e0 <__alt_data_end+0xfffe21e0>
101026b8:	01040474 	movhi	r4,4113
101026bc:	2101c184 	addi	r4,r4,1798
101026c0:	d9002c15 	stw	r4,176(sp)
101026c4:	d8802c17 	ldw	r2,176(sp)
101026c8:	1c07883a 	add	r3,r3,r16
101026cc:	8c400044 	addi	r17,r17,1
101026d0:	b0800015 	stw	r2,0(r22)
101026d4:	b4000115 	stw	r16,4(r22)
101026d8:	d8c02015 	stw	r3,128(sp)
101026dc:	dc401f15 	stw	r17,124(sp)
101026e0:	008001c4 	movi	r2,7
101026e4:	147ebd0e 	bge	r2,r17,101021dc <__alt_data_end+0xfffe21dc>
101026e8:	d9002d17 	ldw	r4,180(sp)
101026ec:	d9801e04 	addi	r6,sp,120
101026f0:	b80b883a 	mov	r5,r23
101026f4:	01086f40 	call	101086f4 <__sprint_r>
101026f8:	103b5c1e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
101026fc:	d8c02017 	ldw	r3,128(sp)
10102700:	dc401f17 	ldw	r17,124(sp)
10102704:	dd800404 	addi	r22,sp,16
10102708:	003eb506 	br	101021e0 <__alt_data_end+0xfffe21e0>
1010270c:	d9002d17 	ldw	r4,180(sp)
10102710:	d9801e04 	addi	r6,sp,120
10102714:	b80b883a 	mov	r5,r23
10102718:	01086f40 	call	101086f4 <__sprint_r>
1010271c:	103b531e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102720:	d8c02017 	ldw	r3,128(sp)
10102724:	dc401f17 	ldw	r17,124(sp)
10102728:	da000404 	addi	r8,sp,16
1010272c:	003e8d06 	br	10102164 <__alt_data_end+0xfffe2164>
10102730:	d9002d17 	ldw	r4,180(sp)
10102734:	d9801e04 	addi	r6,sp,120
10102738:	b80b883a 	mov	r5,r23
1010273c:	01086f40 	call	101086f4 <__sprint_r>
10102740:	103b4a1e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102744:	d8c02017 	ldw	r3,128(sp)
10102748:	dc401f17 	ldw	r17,124(sp)
1010274c:	dd800404 	addi	r22,sp,16
10102750:	003e8f06 	br	10102190 <__alt_data_end+0xfffe2190>
10102754:	0027883a 	mov	r19,zero
10102758:	003f4a06 	br	10102484 <__alt_data_end+0xfffe2484>
1010275c:	d9002d17 	ldw	r4,180(sp)
10102760:	d9801e04 	addi	r6,sp,120
10102764:	b80b883a 	mov	r5,r23
10102768:	01086f40 	call	101086f4 <__sprint_r>
1010276c:	103b3f1e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102770:	d8c02017 	ldw	r3,128(sp)
10102774:	da000404 	addi	r8,sp,16
10102778:	003c7b06 	br	10101968 <__alt_data_end+0xfffe1968>
1010277c:	d9402a17 	ldw	r5,168(sp)
10102780:	04e7c83a 	sub	r19,zero,r19
10102784:	07000b44 	movi	fp,45
10102788:	9804c03a 	cmpne	r2,r19,zero
1010278c:	05adc83a 	sub	r22,zero,r22
10102790:	df002785 	stb	fp,158(sp)
10102794:	b0adc83a 	sub	r22,r22,r2
10102798:	28017b16 	blt	r5,zero,10102d88 <___vfprintf_internal_r+0x1d2c>
1010279c:	00bfdfc4 	movi	r2,-129
101027a0:	90a4703a 	and	r18,r18,r2
101027a4:	003b8906 	br	101015cc <__alt_data_end+0xfffe15cc>
101027a8:	d9003617 	ldw	r4,216(sp)
101027ac:	d9403817 	ldw	r5,224(sp)
101027b0:	da003d15 	stw	r8,244(sp)
101027b4:	01083180 	call	10108318 <__fpclassifyd>
101027b8:	da003d17 	ldw	r8,244(sp)
101027bc:	1000f026 	beq	r2,zero,10102b80 <___vfprintf_internal_r+0x1b24>
101027c0:	d9002a17 	ldw	r4,168(sp)
101027c4:	05bff7c4 	movi	r22,-33
101027c8:	00bfffc4 	movi	r2,-1
101027cc:	8dac703a 	and	r22,r17,r22
101027d0:	20820026 	beq	r4,r2,10102fd4 <___vfprintf_internal_r+0x1f78>
101027d4:	008011c4 	movi	r2,71
101027d8:	b081f726 	beq	r22,r2,10102fb8 <___vfprintf_internal_r+0x1f5c>
101027dc:	d9003817 	ldw	r4,224(sp)
101027e0:	90c04014 	ori	r3,r18,256
101027e4:	d8c02c15 	stw	r3,176(sp)
101027e8:	20021516 	blt	r4,zero,10103040 <___vfprintf_internal_r+0x1fe4>
101027ec:	dcc03817 	ldw	r19,224(sp)
101027f0:	d8002905 	stb	zero,164(sp)
101027f4:	00801984 	movi	r2,102
101027f8:	8881f926 	beq	r17,r2,10102fe0 <___vfprintf_internal_r+0x1f84>
101027fc:	00801184 	movi	r2,70
10102800:	88821c26 	beq	r17,r2,10103074 <___vfprintf_internal_r+0x2018>
10102804:	00801144 	movi	r2,69
10102808:	b081ef26 	beq	r22,r2,10102fc8 <___vfprintf_internal_r+0x1f6c>
1010280c:	d8c02a17 	ldw	r3,168(sp)
10102810:	d8802104 	addi	r2,sp,132
10102814:	d8800315 	stw	r2,12(sp)
10102818:	d9403617 	ldw	r5,216(sp)
1010281c:	d8802504 	addi	r2,sp,148
10102820:	d9002d17 	ldw	r4,180(sp)
10102824:	d8800215 	stw	r2,8(sp)
10102828:	d8802604 	addi	r2,sp,152
1010282c:	d8c00015 	stw	r3,0(sp)
10102830:	d8800115 	stw	r2,4(sp)
10102834:	01c00084 	movi	r7,2
10102838:	980d883a 	mov	r6,r19
1010283c:	d8c03c15 	stw	r3,240(sp)
10102840:	da003d15 	stw	r8,244(sp)
10102844:	010378c0 	call	1010378c <_dtoa_r>
10102848:	1021883a 	mov	r16,r2
1010284c:	008019c4 	movi	r2,103
10102850:	d8c03c17 	ldw	r3,240(sp)
10102854:	da003d17 	ldw	r8,244(sp)
10102858:	88817126 	beq	r17,r2,10102e20 <___vfprintf_internal_r+0x1dc4>
1010285c:	008011c4 	movi	r2,71
10102860:	88829126 	beq	r17,r2,101032a8 <___vfprintf_internal_r+0x224c>
10102864:	80f9883a 	add	fp,r16,r3
10102868:	d9003617 	ldw	r4,216(sp)
1010286c:	000d883a 	mov	r6,zero
10102870:	000f883a 	mov	r7,zero
10102874:	980b883a 	mov	r5,r19
10102878:	da003d15 	stw	r8,244(sp)
1010287c:	010c4780 	call	1010c478 <__eqdf2>
10102880:	da003d17 	ldw	r8,244(sp)
10102884:	10018d26 	beq	r2,zero,10102ebc <___vfprintf_internal_r+0x1e60>
10102888:	d8802117 	ldw	r2,132(sp)
1010288c:	1700062e 	bgeu	r2,fp,101028a8 <___vfprintf_internal_r+0x184c>
10102890:	01000c04 	movi	r4,48
10102894:	10c00044 	addi	r3,r2,1
10102898:	d8c02115 	stw	r3,132(sp)
1010289c:	11000005 	stb	r4,0(r2)
101028a0:	d8802117 	ldw	r2,132(sp)
101028a4:	173ffb36 	bltu	r2,fp,10102894 <__alt_data_end+0xfffe2894>
101028a8:	1405c83a 	sub	r2,r2,r16
101028ac:	d8803315 	stw	r2,204(sp)
101028b0:	008011c4 	movi	r2,71
101028b4:	b0817626 	beq	r22,r2,10102e90 <___vfprintf_internal_r+0x1e34>
101028b8:	00801944 	movi	r2,101
101028bc:	1442800e 	bge	r2,r17,101032c0 <___vfprintf_internal_r+0x2264>
101028c0:	d8c02617 	ldw	r3,152(sp)
101028c4:	00801984 	movi	r2,102
101028c8:	d8c03215 	stw	r3,200(sp)
101028cc:	8881fe26 	beq	r17,r2,101030c8 <___vfprintf_internal_r+0x206c>
101028d0:	d8c03217 	ldw	r3,200(sp)
101028d4:	d9003317 	ldw	r4,204(sp)
101028d8:	1901dd16 	blt	r3,r4,10103050 <___vfprintf_internal_r+0x1ff4>
101028dc:	9480004c 	andi	r18,r18,1
101028e0:	90022b1e 	bne	r18,zero,10103190 <___vfprintf_internal_r+0x2134>
101028e4:	1805883a 	mov	r2,r3
101028e8:	18028316 	blt	r3,zero,101032f8 <___vfprintf_internal_r+0x229c>
101028ec:	d8c03217 	ldw	r3,200(sp)
101028f0:	044019c4 	movi	r17,103
101028f4:	d8c02b15 	stw	r3,172(sp)
101028f8:	df002907 	ldb	fp,164(sp)
101028fc:	e001531e 	bne	fp,zero,10102e4c <___vfprintf_internal_r+0x1df0>
10102900:	df002783 	ldbu	fp,158(sp)
10102904:	d8802915 	stw	r2,164(sp)
10102908:	dc802c17 	ldw	r18,176(sp)
1010290c:	d8002a15 	stw	zero,168(sp)
10102910:	003baf06 	br	101017d0 <__alt_data_end+0xfffe17d0>
10102914:	d8c02e17 	ldw	r3,184(sp)
10102918:	d9002e17 	ldw	r4,184(sp)
1010291c:	d9402e17 	ldw	r5,184(sp)
10102920:	18c00017 	ldw	r3,0(r3)
10102924:	21000117 	ldw	r4,4(r4)
10102928:	29400204 	addi	r5,r5,8
1010292c:	d8c03615 	stw	r3,216(sp)
10102930:	d9003815 	stw	r4,224(sp)
10102934:	d9402e15 	stw	r5,184(sp)
10102938:	003b5006 	br	1010167c <__alt_data_end+0xfffe167c>
1010293c:	ac400007 	ldb	r17,0(r21)
10102940:	003a2806 	br	101011e4 <__alt_data_end+0xfffe11e4>
10102944:	9080100c 	andi	r2,r18,64
10102948:	1000a826 	beq	r2,zero,10102bec <___vfprintf_internal_r+0x1b90>
1010294c:	d8c02e17 	ldw	r3,184(sp)
10102950:	002d883a 	mov	r22,zero
10102954:	1cc0000b 	ldhu	r19,0(r3)
10102958:	18c00104 	addi	r3,r3,4
1010295c:	d8c02e15 	stw	r3,184(sp)
10102960:	003caf06 	br	10101c20 <__alt_data_end+0xfffe1c20>
10102964:	d9002e17 	ldw	r4,184(sp)
10102968:	d9402a17 	ldw	r5,168(sp)
1010296c:	002d883a 	mov	r22,zero
10102970:	20800104 	addi	r2,r4,4
10102974:	24c00017 	ldw	r19,0(r4)
10102978:	283ebb0e 	bge	r5,zero,10102468 <__alt_data_end+0xfffe2468>
1010297c:	003ef106 	br	10102544 <__alt_data_end+0xfffe2544>
10102980:	9080040c 	andi	r2,r18,16
10102984:	1000921e 	bne	r2,zero,10102bd0 <___vfprintf_internal_r+0x1b74>
10102988:	9480100c 	andi	r18,r18,64
1010298c:	90013926 	beq	r18,zero,10102e74 <___vfprintf_internal_r+0x1e18>
10102990:	d9402e17 	ldw	r5,184(sp)
10102994:	d8c02f17 	ldw	r3,188(sp)
10102998:	28800017 	ldw	r2,0(r5)
1010299c:	29400104 	addi	r5,r5,4
101029a0:	d9402e15 	stw	r5,184(sp)
101029a4:	10c0000d 	sth	r3,0(r2)
101029a8:	0039e406 	br	1010113c <__alt_data_end+0xfffe113c>
101029ac:	9080100c 	andi	r2,r18,64
101029b0:	10008026 	beq	r2,zero,10102bb4 <___vfprintf_internal_r+0x1b58>
101029b4:	d8802e17 	ldw	r2,184(sp)
101029b8:	14c0000f 	ldh	r19,0(r2)
101029bc:	10800104 	addi	r2,r2,4
101029c0:	d8802e15 	stw	r2,184(sp)
101029c4:	982dd7fa 	srai	r22,r19,31
101029c8:	b005883a 	mov	r2,r22
101029cc:	003af706 	br	101015ac <__alt_data_end+0xfffe15ac>
101029d0:	9080100c 	andi	r2,r18,64
101029d4:	d8002785 	stb	zero,158(sp)
101029d8:	10008a1e 	bne	r2,zero,10102c04 <___vfprintf_internal_r+0x1ba8>
101029dc:	d9002e17 	ldw	r4,184(sp)
101029e0:	d9402a17 	ldw	r5,168(sp)
101029e4:	002d883a 	mov	r22,zero
101029e8:	20800104 	addi	r2,r4,4
101029ec:	24c00017 	ldw	r19,0(r4)
101029f0:	283e4b0e 	bge	r5,zero,10102320 <__alt_data_end+0xfffe2320>
101029f4:	9d86b03a 	or	r3,r19,r22
101029f8:	d8802e15 	stw	r2,184(sp)
101029fc:	183e4c1e 	bne	r3,zero,10102330 <__alt_data_end+0xfffe2330>
10102a00:	0039883a 	mov	fp,zero
10102a04:	0005883a 	mov	r2,zero
10102a08:	003d4006 	br	10101f0c <__alt_data_end+0xfffe1f0c>
10102a0c:	01440474 	movhi	r5,4113
10102a10:	2941c184 	addi	r5,r5,1798
10102a14:	d9402c15 	stw	r5,176(sp)
10102a18:	d9402c17 	ldw	r5,176(sp)
10102a1c:	1c47883a 	add	r3,r3,r17
10102a20:	10800044 	addi	r2,r2,1
10102a24:	41400015 	stw	r5,0(r8)
10102a28:	44400115 	stw	r17,4(r8)
10102a2c:	d8c02015 	stw	r3,128(sp)
10102a30:	d8801f15 	stw	r2,124(sp)
10102a34:	010001c4 	movi	r4,7
10102a38:	20bec816 	blt	r4,r2,1010255c <__alt_data_end+0xfffe255c>
10102a3c:	42000204 	addi	r8,r8,8
10102a40:	003ecd06 	br	10102578 <__alt_data_end+0xfffe2578>
10102a44:	d9002a17 	ldw	r4,168(sp)
10102a48:	d8002785 	stb	zero,158(sp)
10102a4c:	203d2d16 	blt	r4,zero,10101f04 <__alt_data_end+0xfffe1f04>
10102a50:	00bfdfc4 	movi	r2,-129
10102a54:	90a4703a 	and	r18,r18,r2
10102a58:	003a6106 	br	101013e0 <__alt_data_end+0xfffe13e0>
10102a5c:	01040474 	movhi	r4,4113
10102a60:	2101c184 	addi	r4,r4,1798
10102a64:	d9002c15 	stw	r4,176(sp)
10102a68:	003bea06 	br	10101a14 <__alt_data_end+0xfffe1a14>
10102a6c:	d9002d17 	ldw	r4,180(sp)
10102a70:	d9801e04 	addi	r6,sp,120
10102a74:	b80b883a 	mov	r5,r23
10102a78:	01086f40 	call	101086f4 <__sprint_r>
10102a7c:	103a7b1e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102a80:	d8c02017 	ldw	r3,128(sp)
10102a84:	da000404 	addi	r8,sp,16
10102a88:	003d4106 	br	10101f90 <__alt_data_end+0xfffe1f90>
10102a8c:	d8801f17 	ldw	r2,124(sp)
10102a90:	01440474 	movhi	r5,4113
10102a94:	01000044 	movi	r4,1
10102a98:	18c00044 	addi	r3,r3,1
10102a9c:	10800044 	addi	r2,r2,1
10102aa0:	2941c104 	addi	r5,r5,1796
10102aa4:	41000115 	stw	r4,4(r8)
10102aa8:	41400015 	stw	r5,0(r8)
10102aac:	d8c02015 	stw	r3,128(sp)
10102ab0:	d8801f15 	stw	r2,124(sp)
10102ab4:	010001c4 	movi	r4,7
10102ab8:	20805c16 	blt	r4,r2,10102c2c <___vfprintf_internal_r+0x1bd0>
10102abc:	42000204 	addi	r8,r8,8
10102ac0:	8800041e 	bne	r17,zero,10102ad4 <___vfprintf_internal_r+0x1a78>
10102ac4:	d8803317 	ldw	r2,204(sp)
10102ac8:	1000021e 	bne	r2,zero,10102ad4 <___vfprintf_internal_r+0x1a78>
10102acc:	9080004c 	andi	r2,r18,1
10102ad0:	103be726 	beq	r2,zero,10101a70 <__alt_data_end+0xfffe1a70>
10102ad4:	d9003717 	ldw	r4,220(sp)
10102ad8:	d8801f17 	ldw	r2,124(sp)
10102adc:	d9403417 	ldw	r5,208(sp)
10102ae0:	20c7883a 	add	r3,r4,r3
10102ae4:	10800044 	addi	r2,r2,1
10102ae8:	41000115 	stw	r4,4(r8)
10102aec:	41400015 	stw	r5,0(r8)
10102af0:	d8c02015 	stw	r3,128(sp)
10102af4:	d8801f15 	stw	r2,124(sp)
10102af8:	010001c4 	movi	r4,7
10102afc:	20812116 	blt	r4,r2,10102f84 <___vfprintf_internal_r+0x1f28>
10102b00:	42000204 	addi	r8,r8,8
10102b04:	0463c83a 	sub	r17,zero,r17
10102b08:	0440730e 	bge	zero,r17,10102cd8 <___vfprintf_internal_r+0x1c7c>
10102b0c:	05800404 	movi	r22,16
10102b10:	b440860e 	bge	r22,r17,10102d2c <___vfprintf_internal_r+0x1cd0>
10102b14:	01440474 	movhi	r5,4113
10102b18:	2941c184 	addi	r5,r5,1798
10102b1c:	d9402c15 	stw	r5,176(sp)
10102b20:	070001c4 	movi	fp,7
10102b24:	dcc02d17 	ldw	r19,180(sp)
10102b28:	00000306 	br	10102b38 <___vfprintf_internal_r+0x1adc>
10102b2c:	42000204 	addi	r8,r8,8
10102b30:	8c7ffc04 	addi	r17,r17,-16
10102b34:	b440800e 	bge	r22,r17,10102d38 <___vfprintf_internal_r+0x1cdc>
10102b38:	18c00404 	addi	r3,r3,16
10102b3c:	10800044 	addi	r2,r2,1
10102b40:	45000015 	stw	r20,0(r8)
10102b44:	45800115 	stw	r22,4(r8)
10102b48:	d8c02015 	stw	r3,128(sp)
10102b4c:	d8801f15 	stw	r2,124(sp)
10102b50:	e0bff60e 	bge	fp,r2,10102b2c <__alt_data_end+0xfffe2b2c>
10102b54:	d9801e04 	addi	r6,sp,120
10102b58:	b80b883a 	mov	r5,r23
10102b5c:	9809883a 	mov	r4,r19
10102b60:	01086f40 	call	101086f4 <__sprint_r>
10102b64:	103a411e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102b68:	d8c02017 	ldw	r3,128(sp)
10102b6c:	d8801f17 	ldw	r2,124(sp)
10102b70:	da000404 	addi	r8,sp,16
10102b74:	003fee06 	br	10102b30 <__alt_data_end+0xfffe2b30>
10102b78:	00bfffc4 	movi	r2,-1
10102b7c:	003a3f06 	br	1010147c <__alt_data_end+0xfffe147c>
10102b80:	008011c4 	movi	r2,71
10102b84:	1440b816 	blt	r2,r17,10102e68 <___vfprintf_internal_r+0x1e0c>
10102b88:	04040474 	movhi	r16,4113
10102b8c:	8401b304 	addi	r16,r16,1740
10102b90:	00c000c4 	movi	r3,3
10102b94:	00bfdfc4 	movi	r2,-129
10102b98:	d8c02915 	stw	r3,164(sp)
10102b9c:	90a4703a 	and	r18,r18,r2
10102ba0:	df002783 	ldbu	fp,158(sp)
10102ba4:	d8c02b15 	stw	r3,172(sp)
10102ba8:	d8002a15 	stw	zero,168(sp)
10102bac:	d8003215 	stw	zero,200(sp)
10102bb0:	003b0706 	br	101017d0 <__alt_data_end+0xfffe17d0>
10102bb4:	d8c02e17 	ldw	r3,184(sp)
10102bb8:	1cc00017 	ldw	r19,0(r3)
10102bbc:	18c00104 	addi	r3,r3,4
10102bc0:	d8c02e15 	stw	r3,184(sp)
10102bc4:	982dd7fa 	srai	r22,r19,31
10102bc8:	b005883a 	mov	r2,r22
10102bcc:	003a7706 	br	101015ac <__alt_data_end+0xfffe15ac>
10102bd0:	d8c02e17 	ldw	r3,184(sp)
10102bd4:	d9002f17 	ldw	r4,188(sp)
10102bd8:	18800017 	ldw	r2,0(r3)
10102bdc:	18c00104 	addi	r3,r3,4
10102be0:	d8c02e15 	stw	r3,184(sp)
10102be4:	11000015 	stw	r4,0(r2)
10102be8:	00395406 	br	1010113c <__alt_data_end+0xfffe113c>
10102bec:	d9002e17 	ldw	r4,184(sp)
10102bf0:	002d883a 	mov	r22,zero
10102bf4:	24c00017 	ldw	r19,0(r4)
10102bf8:	21000104 	addi	r4,r4,4
10102bfc:	d9002e15 	stw	r4,184(sp)
10102c00:	003c0706 	br	10101c20 <__alt_data_end+0xfffe1c20>
10102c04:	d9402e17 	ldw	r5,184(sp)
10102c08:	d8c02a17 	ldw	r3,168(sp)
10102c0c:	002d883a 	mov	r22,zero
10102c10:	28800104 	addi	r2,r5,4
10102c14:	2cc0000b 	ldhu	r19,0(r5)
10102c18:	183dc10e 	bge	r3,zero,10102320 <__alt_data_end+0xfffe2320>
10102c1c:	003f7506 	br	101029f4 <__alt_data_end+0xfffe29f4>
10102c20:	04040474 	movhi	r16,4113
10102c24:	8401b104 	addi	r16,r16,1732
10102c28:	003aa706 	br	101016c8 <__alt_data_end+0xfffe16c8>
10102c2c:	d9002d17 	ldw	r4,180(sp)
10102c30:	d9801e04 	addi	r6,sp,120
10102c34:	b80b883a 	mov	r5,r23
10102c38:	01086f40 	call	101086f4 <__sprint_r>
10102c3c:	103a0b1e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102c40:	dc402617 	ldw	r17,152(sp)
10102c44:	d8c02017 	ldw	r3,128(sp)
10102c48:	da000404 	addi	r8,sp,16
10102c4c:	003f9c06 	br	10102ac0 <__alt_data_end+0xfffe2ac0>
10102c50:	ac400043 	ldbu	r17,1(r21)
10102c54:	84000814 	ori	r16,r16,32
10102c58:	ad400044 	addi	r21,r21,1
10102c5c:	8c403fcc 	andi	r17,r17,255
10102c60:	8c40201c 	xori	r17,r17,128
10102c64:	8c7fe004 	addi	r17,r17,-128
10102c68:	00395e06 	br	101011e4 <__alt_data_end+0xfffe11e4>
10102c6c:	d8c02e15 	stw	r3,184(sp)
10102c70:	0039883a 	mov	fp,zero
10102c74:	003e3506 	br	1010254c <__alt_data_end+0xfffe254c>
10102c78:	d9002d17 	ldw	r4,180(sp)
10102c7c:	d9801e04 	addi	r6,sp,120
10102c80:	b80b883a 	mov	r5,r23
10102c84:	01086f40 	call	101086f4 <__sprint_r>
10102c88:	1039f81e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102c8c:	d8c02017 	ldw	r3,128(sp)
10102c90:	da000404 	addi	r8,sp,16
10102c94:	003cd006 	br	10101fd8 <__alt_data_end+0xfffe1fd8>
10102c98:	8009883a 	mov	r4,r16
10102c9c:	df003d15 	stw	fp,244(sp)
10102ca0:	0100fc40 	call	10100fc4 <strlen>
10102ca4:	d8802b15 	stw	r2,172(sp)
10102ca8:	da003d17 	ldw	r8,244(sp)
10102cac:	103c200e 	bge	r2,zero,10101d30 <__alt_data_end+0xfffe1d30>
10102cb0:	0005883a 	mov	r2,zero
10102cb4:	003c1e06 	br	10101d30 <__alt_data_end+0xfffe1d30>
10102cb8:	d9002d17 	ldw	r4,180(sp)
10102cbc:	d9801e04 	addi	r6,sp,120
10102cc0:	b80b883a 	mov	r5,r23
10102cc4:	01086f40 	call	101086f4 <__sprint_r>
10102cc8:	1039e81e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102ccc:	d8c02017 	ldw	r3,128(sp)
10102cd0:	d8801f17 	ldw	r2,124(sp)
10102cd4:	da000404 	addi	r8,sp,16
10102cd8:	d9403317 	ldw	r5,204(sp)
10102cdc:	10800044 	addi	r2,r2,1
10102ce0:	44000015 	stw	r16,0(r8)
10102ce4:	28c7883a 	add	r3,r5,r3
10102ce8:	003b5b06 	br	10101a58 <__alt_data_end+0xfffe1a58>
10102cec:	01040474 	movhi	r4,4113
10102cf0:	2101c584 	addi	r4,r4,1814
10102cf4:	d9003515 	stw	r4,212(sp)
10102cf8:	003af206 	br	101018c4 <__alt_data_end+0xfffe18c4>
10102cfc:	013fffc4 	movi	r4,-1
10102d00:	003a0806 	br	10101524 <__alt_data_end+0xfffe1524>
10102d04:	0023883a 	mov	r17,zero
10102d08:	003d9d06 	br	10102380 <__alt_data_end+0xfffe2380>
10102d0c:	d9002d17 	ldw	r4,180(sp)
10102d10:	d9801e04 	addi	r6,sp,120
10102d14:	b80b883a 	mov	r5,r23
10102d18:	01086f40 	call	101086f4 <__sprint_r>
10102d1c:	1039d31e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102d20:	d8c02017 	ldw	r3,128(sp)
10102d24:	da000404 	addi	r8,sp,16
10102d28:	003d9406 	br	1010237c <__alt_data_end+0xfffe237c>
10102d2c:	01040474 	movhi	r4,4113
10102d30:	2101c184 	addi	r4,r4,1798
10102d34:	d9002c15 	stw	r4,176(sp)
10102d38:	d9002c17 	ldw	r4,176(sp)
10102d3c:	1c47883a 	add	r3,r3,r17
10102d40:	10800044 	addi	r2,r2,1
10102d44:	41000015 	stw	r4,0(r8)
10102d48:	44400115 	stw	r17,4(r8)
10102d4c:	d8c02015 	stw	r3,128(sp)
10102d50:	d8801f15 	stw	r2,124(sp)
10102d54:	010001c4 	movi	r4,7
10102d58:	20bfd716 	blt	r4,r2,10102cb8 <__alt_data_end+0xfffe2cb8>
10102d5c:	42000204 	addi	r8,r8,8
10102d60:	003fdd06 	br	10102cd8 <__alt_data_end+0xfffe2cd8>
10102d64:	d9002d17 	ldw	r4,180(sp)
10102d68:	d9801e04 	addi	r6,sp,120
10102d6c:	b80b883a 	mov	r5,r23
10102d70:	01086f40 	call	101086f4 <__sprint_r>
10102d74:	1039bd1e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102d78:	d8802617 	ldw	r2,152(sp)
10102d7c:	d8c02017 	ldw	r3,128(sp)
10102d80:	da000404 	addi	r8,sp,16
10102d84:	003e1006 	br	101025c8 <__alt_data_end+0xfffe25c8>
10102d88:	00800044 	movi	r2,1
10102d8c:	10803fcc 	andi	r2,r2,255
10102d90:	00c00044 	movi	r3,1
10102d94:	10fa0d26 	beq	r2,r3,101015cc <__alt_data_end+0xfffe15cc>
10102d98:	00c00084 	movi	r3,2
10102d9c:	10fbaf26 	beq	r2,r3,10101c5c <__alt_data_end+0xfffe1c5c>
10102da0:	003a6d06 	br	10101758 <__alt_data_end+0xfffe1758>
10102da4:	01040474 	movhi	r4,4113
10102da8:	2101c584 	addi	r4,r4,1814
10102dac:	d9003515 	stw	r4,212(sp)
10102db0:	003b5406 	br	10101b04 <__alt_data_end+0xfffe1b04>
10102db4:	d8802a17 	ldw	r2,168(sp)
10102db8:	00c00184 	movi	r3,6
10102dbc:	1880012e 	bgeu	r3,r2,10102dc4 <___vfprintf_internal_r+0x1d68>
10102dc0:	1805883a 	mov	r2,r3
10102dc4:	d8802b15 	stw	r2,172(sp)
10102dc8:	1000ef16 	blt	r2,zero,10103188 <___vfprintf_internal_r+0x212c>
10102dcc:	04040474 	movhi	r16,4113
10102dd0:	d8802915 	stw	r2,164(sp)
10102dd4:	dcc02e15 	stw	r19,184(sp)
10102dd8:	d8002a15 	stw	zero,168(sp)
10102ddc:	d8003215 	stw	zero,200(sp)
10102de0:	8401bf04 	addi	r16,r16,1788
10102de4:	0039883a 	mov	fp,zero
10102de8:	003a8006 	br	101017ec <__alt_data_end+0xfffe17ec>
10102dec:	0021883a 	mov	r16,zero
10102df0:	003e0706 	br	10102610 <__alt_data_end+0xfffe2610>
10102df4:	d9002d17 	ldw	r4,180(sp)
10102df8:	d9801e04 	addi	r6,sp,120
10102dfc:	b80b883a 	mov	r5,r23
10102e00:	01086f40 	call	101086f4 <__sprint_r>
10102e04:	1039991e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102e08:	d8802617 	ldw	r2,152(sp)
10102e0c:	d9403317 	ldw	r5,204(sp)
10102e10:	d8c02017 	ldw	r3,128(sp)
10102e14:	da000404 	addi	r8,sp,16
10102e18:	2885c83a 	sub	r2,r5,r2
10102e1c:	003dfb06 	br	1010260c <__alt_data_end+0xfffe260c>
10102e20:	9080004c 	andi	r2,r18,1
10102e24:	103e8f1e 	bne	r2,zero,10102864 <__alt_data_end+0xfffe2864>
10102e28:	d8802117 	ldw	r2,132(sp)
10102e2c:	003e9e06 	br	101028a8 <__alt_data_end+0xfffe28a8>
10102e30:	1025883a 	mov	r18,r2
10102e34:	0039883a 	mov	fp,zero
10102e38:	00800084 	movi	r2,2
10102e3c:	003fd306 	br	10102d8c <__alt_data_end+0xfffe2d8c>
10102e40:	07000b44 	movi	fp,45
10102e44:	df002785 	stb	fp,158(sp)
10102e48:	003a1b06 	br	101016b8 <__alt_data_end+0xfffe16b8>
10102e4c:	00c00b44 	movi	r3,45
10102e50:	d8c02785 	stb	r3,158(sp)
10102e54:	d8802915 	stw	r2,164(sp)
10102e58:	dc802c17 	ldw	r18,176(sp)
10102e5c:	d8002a15 	stw	zero,168(sp)
10102e60:	07000b44 	movi	fp,45
10102e64:	003a5e06 	br	101017e0 <__alt_data_end+0xfffe17e0>
10102e68:	04040474 	movhi	r16,4113
10102e6c:	8401b404 	addi	r16,r16,1744
10102e70:	003f4706 	br	10102b90 <__alt_data_end+0xfffe2b90>
10102e74:	d9002e17 	ldw	r4,184(sp)
10102e78:	d9402f17 	ldw	r5,188(sp)
10102e7c:	20800017 	ldw	r2,0(r4)
10102e80:	21000104 	addi	r4,r4,4
10102e84:	d9002e15 	stw	r4,184(sp)
10102e88:	11400015 	stw	r5,0(r2)
10102e8c:	0038ab06 	br	1010113c <__alt_data_end+0xfffe113c>
10102e90:	dd802617 	ldw	r22,152(sp)
10102e94:	00bfff44 	movi	r2,-3
10102e98:	b0801c16 	blt	r22,r2,10102f0c <___vfprintf_internal_r+0x1eb0>
10102e9c:	d9402a17 	ldw	r5,168(sp)
10102ea0:	2d801a16 	blt	r5,r22,10102f0c <___vfprintf_internal_r+0x1eb0>
10102ea4:	dd803215 	stw	r22,200(sp)
10102ea8:	003e8906 	br	101028d0 <__alt_data_end+0xfffe28d0>
10102eac:	01040474 	movhi	r4,4113
10102eb0:	2101c184 	addi	r4,r4,1798
10102eb4:	d9002c15 	stw	r4,176(sp)
10102eb8:	003c9106 	br	10102100 <__alt_data_end+0xfffe2100>
10102ebc:	e005883a 	mov	r2,fp
10102ec0:	003e7906 	br	101028a8 <__alt_data_end+0xfffe28a8>
10102ec4:	d9002a17 	ldw	r4,168(sp)
10102ec8:	df002783 	ldbu	fp,158(sp)
10102ecc:	dcc02e15 	stw	r19,184(sp)
10102ed0:	d9002915 	stw	r4,164(sp)
10102ed4:	d9002b15 	stw	r4,172(sp)
10102ed8:	d8002a15 	stw	zero,168(sp)
10102edc:	d8003215 	stw	zero,200(sp)
10102ee0:	003a3b06 	br	101017d0 <__alt_data_end+0xfffe17d0>
10102ee4:	9080004c 	andi	r2,r18,1
10102ee8:	0039883a 	mov	fp,zero
10102eec:	10000426 	beq	r2,zero,10102f00 <___vfprintf_internal_r+0x1ea4>
10102ef0:	00800c04 	movi	r2,48
10102ef4:	dc001dc4 	addi	r16,sp,119
10102ef8:	d8801dc5 	stb	r2,119(sp)
10102efc:	003b6406 	br	10101c90 <__alt_data_end+0xfffe1c90>
10102f00:	d8002b15 	stw	zero,172(sp)
10102f04:	dc001e04 	addi	r16,sp,120
10102f08:	003a2b06 	br	101017b8 <__alt_data_end+0xfffe17b8>
10102f0c:	8c7fff84 	addi	r17,r17,-2
10102f10:	b5bfffc4 	addi	r22,r22,-1
10102f14:	dd802615 	stw	r22,152(sp)
10102f18:	dc4022c5 	stb	r17,139(sp)
10102f1c:	b000bf16 	blt	r22,zero,1010321c <___vfprintf_internal_r+0x21c0>
10102f20:	00800ac4 	movi	r2,43
10102f24:	d8802305 	stb	r2,140(sp)
10102f28:	00800244 	movi	r2,9
10102f2c:	15807016 	blt	r2,r22,101030f0 <___vfprintf_internal_r+0x2094>
10102f30:	00800c04 	movi	r2,48
10102f34:	b5800c04 	addi	r22,r22,48
10102f38:	d8802345 	stb	r2,141(sp)
10102f3c:	dd802385 	stb	r22,142(sp)
10102f40:	d88023c4 	addi	r2,sp,143
10102f44:	df0022c4 	addi	fp,sp,139
10102f48:	d8c03317 	ldw	r3,204(sp)
10102f4c:	1739c83a 	sub	fp,r2,fp
10102f50:	d9003317 	ldw	r4,204(sp)
10102f54:	e0c7883a 	add	r3,fp,r3
10102f58:	df003a15 	stw	fp,232(sp)
10102f5c:	d8c02b15 	stw	r3,172(sp)
10102f60:	00800044 	movi	r2,1
10102f64:	1100b30e 	bge	r2,r4,10103234 <___vfprintf_internal_r+0x21d8>
10102f68:	d8c02b17 	ldw	r3,172(sp)
10102f6c:	18c00044 	addi	r3,r3,1
10102f70:	d8c02b15 	stw	r3,172(sp)
10102f74:	1805883a 	mov	r2,r3
10102f78:	1800ac16 	blt	r3,zero,1010322c <___vfprintf_internal_r+0x21d0>
10102f7c:	d8003215 	stw	zero,200(sp)
10102f80:	003e5d06 	br	101028f8 <__alt_data_end+0xfffe28f8>
10102f84:	d9002d17 	ldw	r4,180(sp)
10102f88:	d9801e04 	addi	r6,sp,120
10102f8c:	b80b883a 	mov	r5,r23
10102f90:	01086f40 	call	101086f4 <__sprint_r>
10102f94:	1039351e 	bne	r2,zero,1010146c <__alt_data_end+0xfffe146c>
10102f98:	dc402617 	ldw	r17,152(sp)
10102f9c:	d8c02017 	ldw	r3,128(sp)
10102fa0:	d8801f17 	ldw	r2,124(sp)
10102fa4:	da000404 	addi	r8,sp,16
10102fa8:	003ed606 	br	10102b04 <__alt_data_end+0xfffe2b04>
10102fac:	182b883a 	mov	r21,r3
10102fb0:	d8002a15 	stw	zero,168(sp)
10102fb4:	00388c06 	br	101011e8 <__alt_data_end+0xfffe11e8>
10102fb8:	d8802a17 	ldw	r2,168(sp)
10102fbc:	103e071e 	bne	r2,zero,101027dc <__alt_data_end+0xfffe27dc>
10102fc0:	dc002a15 	stw	r16,168(sp)
10102fc4:	003e0506 	br	101027dc <__alt_data_end+0xfffe27dc>
10102fc8:	d9002a17 	ldw	r4,168(sp)
10102fcc:	20c00044 	addi	r3,r4,1
10102fd0:	003e0f06 	br	10102810 <__alt_data_end+0xfffe2810>
10102fd4:	01400184 	movi	r5,6
10102fd8:	d9402a15 	stw	r5,168(sp)
10102fdc:	003dff06 	br	101027dc <__alt_data_end+0xfffe27dc>
10102fe0:	d8802104 	addi	r2,sp,132
10102fe4:	d8800315 	stw	r2,12(sp)
10102fe8:	d8802504 	addi	r2,sp,148
10102fec:	d8800215 	stw	r2,8(sp)
10102ff0:	d8802604 	addi	r2,sp,152
10102ff4:	d8800115 	stw	r2,4(sp)
10102ff8:	d8802a17 	ldw	r2,168(sp)
10102ffc:	d9403617 	ldw	r5,216(sp)
10103000:	d9002d17 	ldw	r4,180(sp)
10103004:	d8800015 	stw	r2,0(sp)
10103008:	01c000c4 	movi	r7,3
1010300c:	980d883a 	mov	r6,r19
10103010:	da003d15 	stw	r8,244(sp)
10103014:	010378c0 	call	1010378c <_dtoa_r>
10103018:	d8c02a17 	ldw	r3,168(sp)
1010301c:	da003d17 	ldw	r8,244(sp)
10103020:	1021883a 	mov	r16,r2
10103024:	10f9883a 	add	fp,r2,r3
10103028:	81000007 	ldb	r4,0(r16)
1010302c:	00800c04 	movi	r2,48
10103030:	20805e26 	beq	r4,r2,101031ac <___vfprintf_internal_r+0x2150>
10103034:	d8c02617 	ldw	r3,152(sp)
10103038:	e0f9883a 	add	fp,fp,r3
1010303c:	003e0a06 	br	10102868 <__alt_data_end+0xfffe2868>
10103040:	00c00b44 	movi	r3,45
10103044:	24e0003c 	xorhi	r19,r4,32768
10103048:	d8c02905 	stb	r3,164(sp)
1010304c:	003de906 	br	101027f4 <__alt_data_end+0xfffe27f4>
10103050:	d8c03217 	ldw	r3,200(sp)
10103054:	00c07a0e 	bge	zero,r3,10103240 <___vfprintf_internal_r+0x21e4>
10103058:	00800044 	movi	r2,1
1010305c:	d9003317 	ldw	r4,204(sp)
10103060:	1105883a 	add	r2,r2,r4
10103064:	d8802b15 	stw	r2,172(sp)
10103068:	10004e16 	blt	r2,zero,101031a4 <___vfprintf_internal_r+0x2148>
1010306c:	044019c4 	movi	r17,103
10103070:	003e2106 	br	101028f8 <__alt_data_end+0xfffe28f8>
10103074:	d9002a17 	ldw	r4,168(sp)
10103078:	d8802104 	addi	r2,sp,132
1010307c:	d8800315 	stw	r2,12(sp)
10103080:	d9000015 	stw	r4,0(sp)
10103084:	d8802504 	addi	r2,sp,148
10103088:	d9403617 	ldw	r5,216(sp)
1010308c:	d9002d17 	ldw	r4,180(sp)
10103090:	d8800215 	stw	r2,8(sp)
10103094:	d8802604 	addi	r2,sp,152
10103098:	d8800115 	stw	r2,4(sp)
1010309c:	01c000c4 	movi	r7,3
101030a0:	980d883a 	mov	r6,r19
101030a4:	da003d15 	stw	r8,244(sp)
101030a8:	010378c0 	call	1010378c <_dtoa_r>
101030ac:	d8c02a17 	ldw	r3,168(sp)
101030b0:	da003d17 	ldw	r8,244(sp)
101030b4:	1021883a 	mov	r16,r2
101030b8:	00801184 	movi	r2,70
101030bc:	80f9883a 	add	fp,r16,r3
101030c0:	88bfd926 	beq	r17,r2,10103028 <__alt_data_end+0xfffe3028>
101030c4:	003de806 	br	10102868 <__alt_data_end+0xfffe2868>
101030c8:	d9002a17 	ldw	r4,168(sp)
101030cc:	00c04d0e 	bge	zero,r3,10103204 <___vfprintf_internal_r+0x21a8>
101030d0:	2000441e 	bne	r4,zero,101031e4 <___vfprintf_internal_r+0x2188>
101030d4:	9480004c 	andi	r18,r18,1
101030d8:	9000421e 	bne	r18,zero,101031e4 <___vfprintf_internal_r+0x2188>
101030dc:	1805883a 	mov	r2,r3
101030e0:	18006f16 	blt	r3,zero,101032a0 <___vfprintf_internal_r+0x2244>
101030e4:	d8c03217 	ldw	r3,200(sp)
101030e8:	d8c02b15 	stw	r3,172(sp)
101030ec:	003e0206 	br	101028f8 <__alt_data_end+0xfffe28f8>
101030f0:	df0022c4 	addi	fp,sp,139
101030f4:	dc002a15 	stw	r16,168(sp)
101030f8:	4027883a 	mov	r19,r8
101030fc:	e021883a 	mov	r16,fp
10103100:	b009883a 	mov	r4,r22
10103104:	01400284 	movi	r5,10
10103108:	0100be40 	call	10100be4 <__modsi3>
1010310c:	10800c04 	addi	r2,r2,48
10103110:	843fffc4 	addi	r16,r16,-1
10103114:	b009883a 	mov	r4,r22
10103118:	01400284 	movi	r5,10
1010311c:	80800005 	stb	r2,0(r16)
10103120:	0100b600 	call	10100b60 <__divsi3>
10103124:	102d883a 	mov	r22,r2
10103128:	00800244 	movi	r2,9
1010312c:	15bff416 	blt	r2,r22,10103100 <__alt_data_end+0xfffe3100>
10103130:	9811883a 	mov	r8,r19
10103134:	b0800c04 	addi	r2,r22,48
10103138:	8027883a 	mov	r19,r16
1010313c:	997fffc4 	addi	r5,r19,-1
10103140:	98bfffc5 	stb	r2,-1(r19)
10103144:	dc002a17 	ldw	r16,168(sp)
10103148:	2f006d2e 	bgeu	r5,fp,10103300 <___vfprintf_internal_r+0x22a4>
1010314c:	d9c02384 	addi	r7,sp,142
10103150:	3ccfc83a 	sub	r7,r7,r19
10103154:	d9002344 	addi	r4,sp,141
10103158:	e1cf883a 	add	r7,fp,r7
1010315c:	00000106 	br	10103164 <___vfprintf_internal_r+0x2108>
10103160:	28800003 	ldbu	r2,0(r5)
10103164:	20800005 	stb	r2,0(r4)
10103168:	21000044 	addi	r4,r4,1
1010316c:	29400044 	addi	r5,r5,1
10103170:	393ffb1e 	bne	r7,r4,10103160 <__alt_data_end+0xfffe3160>
10103174:	d8802304 	addi	r2,sp,140
10103178:	14c5c83a 	sub	r2,r2,r19
1010317c:	d8c02344 	addi	r3,sp,141
10103180:	1885883a 	add	r2,r3,r2
10103184:	003f7006 	br	10102f48 <__alt_data_end+0xfffe2f48>
10103188:	0005883a 	mov	r2,zero
1010318c:	003f0f06 	br	10102dcc <__alt_data_end+0xfffe2dcc>
10103190:	d8c03217 	ldw	r3,200(sp)
10103194:	18c00044 	addi	r3,r3,1
10103198:	d8c02b15 	stw	r3,172(sp)
1010319c:	1805883a 	mov	r2,r3
101031a0:	183fb20e 	bge	r3,zero,1010306c <__alt_data_end+0xfffe306c>
101031a4:	0005883a 	mov	r2,zero
101031a8:	003fb006 	br	1010306c <__alt_data_end+0xfffe306c>
101031ac:	d9003617 	ldw	r4,216(sp)
101031b0:	000d883a 	mov	r6,zero
101031b4:	000f883a 	mov	r7,zero
101031b8:	980b883a 	mov	r5,r19
101031bc:	d8c03c15 	stw	r3,240(sp)
101031c0:	da003d15 	stw	r8,244(sp)
101031c4:	010c4780 	call	1010c478 <__eqdf2>
101031c8:	d8c03c17 	ldw	r3,240(sp)
101031cc:	da003d17 	ldw	r8,244(sp)
101031d0:	103f9826 	beq	r2,zero,10103034 <__alt_data_end+0xfffe3034>
101031d4:	00800044 	movi	r2,1
101031d8:	10c7c83a 	sub	r3,r2,r3
101031dc:	d8c02615 	stw	r3,152(sp)
101031e0:	003f9506 	br	10103038 <__alt_data_end+0xfffe3038>
101031e4:	d9002a17 	ldw	r4,168(sp)
101031e8:	d8c03217 	ldw	r3,200(sp)
101031ec:	20800044 	addi	r2,r4,1
101031f0:	1885883a 	add	r2,r3,r2
101031f4:	d8802b15 	stw	r2,172(sp)
101031f8:	103dbf0e 	bge	r2,zero,101028f8 <__alt_data_end+0xfffe28f8>
101031fc:	0005883a 	mov	r2,zero
10103200:	003dbd06 	br	101028f8 <__alt_data_end+0xfffe28f8>
10103204:	2000201e 	bne	r4,zero,10103288 <___vfprintf_internal_r+0x222c>
10103208:	9480004c 	andi	r18,r18,1
1010320c:	90001e1e 	bne	r18,zero,10103288 <___vfprintf_internal_r+0x222c>
10103210:	00800044 	movi	r2,1
10103214:	d8802b15 	stw	r2,172(sp)
10103218:	003db706 	br	101028f8 <__alt_data_end+0xfffe28f8>
1010321c:	00800b44 	movi	r2,45
10103220:	05adc83a 	sub	r22,zero,r22
10103224:	d8802305 	stb	r2,140(sp)
10103228:	003f3f06 	br	10102f28 <__alt_data_end+0xfffe2f28>
1010322c:	0005883a 	mov	r2,zero
10103230:	003f5206 	br	10102f7c <__alt_data_end+0xfffe2f7c>
10103234:	90a4703a 	and	r18,r18,r2
10103238:	903f4e26 	beq	r18,zero,10102f74 <__alt_data_end+0xfffe2f74>
1010323c:	003f4a06 	br	10102f68 <__alt_data_end+0xfffe2f68>
10103240:	00800084 	movi	r2,2
10103244:	10c5c83a 	sub	r2,r2,r3
10103248:	003f8406 	br	1010305c <__alt_data_end+0xfffe305c>
1010324c:	d9402e17 	ldw	r5,184(sp)
10103250:	d9002e17 	ldw	r4,184(sp)
10103254:	ac400043 	ldbu	r17,1(r21)
10103258:	29400017 	ldw	r5,0(r5)
1010325c:	20800104 	addi	r2,r4,4
10103260:	d8802e15 	stw	r2,184(sp)
10103264:	d9402a15 	stw	r5,168(sp)
10103268:	182b883a 	mov	r21,r3
1010326c:	283e7b0e 	bge	r5,zero,10102c5c <__alt_data_end+0xfffe2c5c>
10103270:	8c403fcc 	andi	r17,r17,255
10103274:	017fffc4 	movi	r5,-1
10103278:	8c40201c 	xori	r17,r17,128
1010327c:	d9402a15 	stw	r5,168(sp)
10103280:	8c7fe004 	addi	r17,r17,-128
10103284:	0037d706 	br	101011e4 <__alt_data_end+0xfffe11e4>
10103288:	d8c02a17 	ldw	r3,168(sp)
1010328c:	18c00084 	addi	r3,r3,2
10103290:	d8c02b15 	stw	r3,172(sp)
10103294:	1805883a 	mov	r2,r3
10103298:	183d970e 	bge	r3,zero,101028f8 <__alt_data_end+0xfffe28f8>
1010329c:	003fd706 	br	101031fc <__alt_data_end+0xfffe31fc>
101032a0:	0005883a 	mov	r2,zero
101032a4:	003f8f06 	br	101030e4 <__alt_data_end+0xfffe30e4>
101032a8:	9080004c 	andi	r2,r18,1
101032ac:	103f821e 	bne	r2,zero,101030b8 <__alt_data_end+0xfffe30b8>
101032b0:	d8802117 	ldw	r2,132(sp)
101032b4:	1405c83a 	sub	r2,r2,r16
101032b8:	d8803315 	stw	r2,204(sp)
101032bc:	b47ef426 	beq	r22,r17,10102e90 <__alt_data_end+0xfffe2e90>
101032c0:	dd802617 	ldw	r22,152(sp)
101032c4:	003f1206 	br	10102f10 <__alt_data_end+0xfffe2f10>
101032c8:	d8c02b03 	ldbu	r3,172(sp)
101032cc:	d8c02785 	stb	r3,158(sp)
101032d0:	0038df06 	br	10101650 <__alt_data_end+0xfffe1650>
101032d4:	d8c02b03 	ldbu	r3,172(sp)
101032d8:	d8c02785 	stb	r3,158(sp)
101032dc:	0038aa06 	br	10101588 <__alt_data_end+0xfffe1588>
101032e0:	d8c02b03 	ldbu	r3,172(sp)
101032e4:	d8c02785 	stb	r3,158(sp)
101032e8:	003a4306 	br	10101bf8 <__alt_data_end+0xfffe1bf8>
101032ec:	d8c02b03 	ldbu	r3,172(sp)
101032f0:	d8c02785 	stb	r3,158(sp)
101032f4:	003af506 	br	10101ecc <__alt_data_end+0xfffe1ecc>
101032f8:	0005883a 	mov	r2,zero
101032fc:	003d7b06 	br	101028ec <__alt_data_end+0xfffe28ec>
10103300:	d8802344 	addi	r2,sp,141
10103304:	003f1006 	br	10102f48 <__alt_data_end+0xfffe2f48>
10103308:	d8c02b03 	ldbu	r3,172(sp)
1010330c:	d8c02785 	stb	r3,158(sp)
10103310:	0038fd06 	br	10101708 <__alt_data_end+0xfffe1708>
10103314:	d8c02b03 	ldbu	r3,172(sp)
10103318:	d8c02785 	stb	r3,158(sp)
1010331c:	003a9706 	br	10101d7c <__alt_data_end+0xfffe1d7c>
10103320:	d8c02b03 	ldbu	r3,172(sp)
10103324:	d8c02785 	stb	r3,158(sp)
10103328:	003a1806 	br	10101b8c <__alt_data_end+0xfffe1b8c>
1010332c:	d8c02b03 	ldbu	r3,172(sp)
10103330:	d8c02785 	stb	r3,158(sp)
10103334:	003abe06 	br	10101e30 <__alt_data_end+0xfffe1e30>

10103338 <__vfprintf_internal>:
10103338:	00840474 	movhi	r2,4113
1010333c:	10892904 	addi	r2,r2,9380
10103340:	300f883a 	mov	r7,r6
10103344:	280d883a 	mov	r6,r5
10103348:	200b883a 	mov	r5,r4
1010334c:	11000017 	ldw	r4,0(r2)
10103350:	010105c1 	jmpi	1010105c <___vfprintf_internal_r>

10103354 <__sbprintf>:
10103354:	2880030b 	ldhu	r2,12(r5)
10103358:	2ac01917 	ldw	r11,100(r5)
1010335c:	2a80038b 	ldhu	r10,14(r5)
10103360:	2a400717 	ldw	r9,28(r5)
10103364:	2a000917 	ldw	r8,36(r5)
10103368:	defee204 	addi	sp,sp,-1144
1010336c:	00c10004 	movi	r3,1024
10103370:	dc011a15 	stw	r16,1128(sp)
10103374:	10bfff4c 	andi	r2,r2,65533
10103378:	2821883a 	mov	r16,r5
1010337c:	d8cb883a 	add	r5,sp,r3
10103380:	dc811c15 	stw	r18,1136(sp)
10103384:	dc411b15 	stw	r17,1132(sp)
10103388:	dfc11d15 	stw	ra,1140(sp)
1010338c:	2025883a 	mov	r18,r4
10103390:	d881030d 	sth	r2,1036(sp)
10103394:	dac11915 	stw	r11,1124(sp)
10103398:	da81038d 	sth	r10,1038(sp)
1010339c:	da410715 	stw	r9,1052(sp)
101033a0:	da010915 	stw	r8,1060(sp)
101033a4:	dec10015 	stw	sp,1024(sp)
101033a8:	dec10415 	stw	sp,1040(sp)
101033ac:	d8c10215 	stw	r3,1032(sp)
101033b0:	d8c10515 	stw	r3,1044(sp)
101033b4:	d8010615 	stw	zero,1048(sp)
101033b8:	010105c0 	call	1010105c <___vfprintf_internal_r>
101033bc:	1023883a 	mov	r17,r2
101033c0:	10000416 	blt	r2,zero,101033d4 <__sbprintf+0x80>
101033c4:	d9410004 	addi	r5,sp,1024
101033c8:	9009883a 	mov	r4,r18
101033cc:	01050300 	call	10105030 <_fflush_r>
101033d0:	10000d1e 	bne	r2,zero,10103408 <__sbprintf+0xb4>
101033d4:	d881030b 	ldhu	r2,1036(sp)
101033d8:	1080100c 	andi	r2,r2,64
101033dc:	10000326 	beq	r2,zero,101033ec <__sbprintf+0x98>
101033e0:	8080030b 	ldhu	r2,12(r16)
101033e4:	10801014 	ori	r2,r2,64
101033e8:	8080030d 	sth	r2,12(r16)
101033ec:	8805883a 	mov	r2,r17
101033f0:	dfc11d17 	ldw	ra,1140(sp)
101033f4:	dc811c17 	ldw	r18,1136(sp)
101033f8:	dc411b17 	ldw	r17,1132(sp)
101033fc:	dc011a17 	ldw	r16,1128(sp)
10103400:	dec11e04 	addi	sp,sp,1144
10103404:	f800283a 	ret
10103408:	047fffc4 	movi	r17,-1
1010340c:	003ff106 	br	101033d4 <__alt_data_end+0xfffe33d4>

10103410 <__swsetup_r>:
10103410:	00840474 	movhi	r2,4113
10103414:	defffd04 	addi	sp,sp,-12
10103418:	10892904 	addi	r2,r2,9380
1010341c:	dc400115 	stw	r17,4(sp)
10103420:	2023883a 	mov	r17,r4
10103424:	11000017 	ldw	r4,0(r2)
10103428:	dc000015 	stw	r16,0(sp)
1010342c:	dfc00215 	stw	ra,8(sp)
10103430:	2821883a 	mov	r16,r5
10103434:	20000226 	beq	r4,zero,10103440 <__swsetup_r+0x30>
10103438:	20800e17 	ldw	r2,56(r4)
1010343c:	10003126 	beq	r2,zero,10103504 <__swsetup_r+0xf4>
10103440:	8080030b 	ldhu	r2,12(r16)
10103444:	10c0020c 	andi	r3,r2,8
10103448:	1009883a 	mov	r4,r2
1010344c:	18000f26 	beq	r3,zero,1010348c <__swsetup_r+0x7c>
10103450:	80c00417 	ldw	r3,16(r16)
10103454:	18001526 	beq	r3,zero,101034ac <__swsetup_r+0x9c>
10103458:	1100004c 	andi	r4,r2,1
1010345c:	20001c1e 	bne	r4,zero,101034d0 <__swsetup_r+0xc0>
10103460:	1080008c 	andi	r2,r2,2
10103464:	1000291e 	bne	r2,zero,1010350c <__swsetup_r+0xfc>
10103468:	80800517 	ldw	r2,20(r16)
1010346c:	80800215 	stw	r2,8(r16)
10103470:	18001c26 	beq	r3,zero,101034e4 <__swsetup_r+0xd4>
10103474:	0005883a 	mov	r2,zero
10103478:	dfc00217 	ldw	ra,8(sp)
1010347c:	dc400117 	ldw	r17,4(sp)
10103480:	dc000017 	ldw	r16,0(sp)
10103484:	dec00304 	addi	sp,sp,12
10103488:	f800283a 	ret
1010348c:	2080040c 	andi	r2,r4,16
10103490:	10002e26 	beq	r2,zero,1010354c <__swsetup_r+0x13c>
10103494:	2080010c 	andi	r2,r4,4
10103498:	10001e1e 	bne	r2,zero,10103514 <__swsetup_r+0x104>
1010349c:	80c00417 	ldw	r3,16(r16)
101034a0:	20800214 	ori	r2,r4,8
101034a4:	8080030d 	sth	r2,12(r16)
101034a8:	183feb1e 	bne	r3,zero,10103458 <__alt_data_end+0xfffe3458>
101034ac:	1100a00c 	andi	r4,r2,640
101034b0:	01408004 	movi	r5,512
101034b4:	217fe826 	beq	r4,r5,10103458 <__alt_data_end+0xfffe3458>
101034b8:	800b883a 	mov	r5,r16
101034bc:	8809883a 	mov	r4,r17
101034c0:	0105fcc0 	call	10105fcc <__smakebuf_r>
101034c4:	8080030b 	ldhu	r2,12(r16)
101034c8:	80c00417 	ldw	r3,16(r16)
101034cc:	003fe206 	br	10103458 <__alt_data_end+0xfffe3458>
101034d0:	80800517 	ldw	r2,20(r16)
101034d4:	80000215 	stw	zero,8(r16)
101034d8:	0085c83a 	sub	r2,zero,r2
101034dc:	80800615 	stw	r2,24(r16)
101034e0:	183fe41e 	bne	r3,zero,10103474 <__alt_data_end+0xfffe3474>
101034e4:	80c0030b 	ldhu	r3,12(r16)
101034e8:	0005883a 	mov	r2,zero
101034ec:	1900200c 	andi	r4,r3,128
101034f0:	203fe126 	beq	r4,zero,10103478 <__alt_data_end+0xfffe3478>
101034f4:	18c01014 	ori	r3,r3,64
101034f8:	80c0030d 	sth	r3,12(r16)
101034fc:	00bfffc4 	movi	r2,-1
10103500:	003fdd06 	br	10103478 <__alt_data_end+0xfffe3478>
10103504:	010541c0 	call	1010541c <__sinit>
10103508:	003fcd06 	br	10103440 <__alt_data_end+0xfffe3440>
1010350c:	0005883a 	mov	r2,zero
10103510:	003fd606 	br	1010346c <__alt_data_end+0xfffe346c>
10103514:	81400c17 	ldw	r5,48(r16)
10103518:	28000626 	beq	r5,zero,10103534 <__swsetup_r+0x124>
1010351c:	80801004 	addi	r2,r16,64
10103520:	28800326 	beq	r5,r2,10103530 <__swsetup_r+0x120>
10103524:	8809883a 	mov	r4,r17
10103528:	01055900 	call	10105590 <_free_r>
1010352c:	8100030b 	ldhu	r4,12(r16)
10103530:	80000c15 	stw	zero,48(r16)
10103534:	80c00417 	ldw	r3,16(r16)
10103538:	00bff6c4 	movi	r2,-37
1010353c:	1108703a 	and	r4,r2,r4
10103540:	80000115 	stw	zero,4(r16)
10103544:	80c00015 	stw	r3,0(r16)
10103548:	003fd506 	br	101034a0 <__alt_data_end+0xfffe34a0>
1010354c:	00800244 	movi	r2,9
10103550:	88800015 	stw	r2,0(r17)
10103554:	20801014 	ori	r2,r4,64
10103558:	8080030d 	sth	r2,12(r16)
1010355c:	00bfffc4 	movi	r2,-1
10103560:	003fc506 	br	10103478 <__alt_data_end+0xfffe3478>

10103564 <quorem>:
10103564:	defff204 	addi	sp,sp,-56
10103568:	ddc00b15 	stw	r23,44(sp)
1010356c:	20800417 	ldw	r2,16(r4)
10103570:	2dc00417 	ldw	r23,16(r5)
10103574:	dfc00d15 	stw	ra,52(sp)
10103578:	df000c15 	stw	fp,48(sp)
1010357c:	dd800a15 	stw	r22,40(sp)
10103580:	dd400915 	stw	r21,36(sp)
10103584:	dd000815 	stw	r20,32(sp)
10103588:	dcc00715 	stw	r19,28(sp)
1010358c:	dc800615 	stw	r18,24(sp)
10103590:	dc400515 	stw	r17,20(sp)
10103594:	dc000415 	stw	r16,16(sp)
10103598:	15c07a16 	blt	r2,r23,10103784 <quorem+0x220>
1010359c:	bdffffc4 	addi	r23,r23,-1
101035a0:	bde9883a 	add	r20,r23,r23
101035a4:	28c00504 	addi	r3,r5,20
101035a8:	a529883a 	add	r20,r20,r20
101035ac:	1d39883a 	add	fp,r3,r20
101035b0:	24c00504 	addi	r19,r4,20
101035b4:	d9400215 	stw	r5,8(sp)
101035b8:	9d29883a 	add	r20,r19,r20
101035bc:	e1400017 	ldw	r5,0(fp)
101035c0:	d9000015 	stw	r4,0(sp)
101035c4:	a1000017 	ldw	r4,0(r20)
101035c8:	29400044 	addi	r5,r5,1
101035cc:	d8c00115 	stw	r3,4(sp)
101035d0:	dd000315 	stw	r20,12(sp)
101035d4:	0100c580 	call	10100c58 <__udivsi3>
101035d8:	1025883a 	mov	r18,r2
101035dc:	10003026 	beq	r2,zero,101036a0 <quorem+0x13c>
101035e0:	dc400117 	ldw	r17,4(sp)
101035e4:	9829883a 	mov	r20,r19
101035e8:	002d883a 	mov	r22,zero
101035ec:	0021883a 	mov	r16,zero
101035f0:	8d400017 	ldw	r21,0(r17)
101035f4:	900b883a 	mov	r5,r18
101035f8:	8c400104 	addi	r17,r17,4
101035fc:	a93fffcc 	andi	r4,r21,65535
10103600:	0100d140 	call	10100d14 <__mulsi3>
10103604:	a808d43a 	srli	r4,r21,16
10103608:	900b883a 	mov	r5,r18
1010360c:	15ad883a 	add	r22,r2,r22
10103610:	0100d140 	call	10100d14 <__mulsi3>
10103614:	a1000017 	ldw	r4,0(r20)
10103618:	b00cd43a 	srli	r6,r22,16
1010361c:	b0ffffcc 	andi	r3,r22,65535
10103620:	217fffcc 	andi	r5,r4,65535
10103624:	2c21883a 	add	r16,r5,r16
10103628:	80c7c83a 	sub	r3,r16,r3
1010362c:	2008d43a 	srli	r4,r4,16
10103630:	1185883a 	add	r2,r2,r6
10103634:	1821d43a 	srai	r16,r3,16
10103638:	117fffcc 	andi	r5,r2,65535
1010363c:	2149c83a 	sub	r4,r4,r5
10103640:	2421883a 	add	r16,r4,r16
10103644:	8008943a 	slli	r4,r16,16
10103648:	18ffffcc 	andi	r3,r3,65535
1010364c:	102cd43a 	srli	r22,r2,16
10103650:	20c8b03a 	or	r4,r4,r3
10103654:	a1000015 	stw	r4,0(r20)
10103658:	8021d43a 	srai	r16,r16,16
1010365c:	a5000104 	addi	r20,r20,4
10103660:	e47fe32e 	bgeu	fp,r17,101035f0 <__alt_data_end+0xfffe35f0>
10103664:	d8c00317 	ldw	r3,12(sp)
10103668:	18800017 	ldw	r2,0(r3)
1010366c:	10000c1e 	bne	r2,zero,101036a0 <quorem+0x13c>
10103670:	18bfff04 	addi	r2,r3,-4
10103674:	9880082e 	bgeu	r19,r2,10103698 <quorem+0x134>
10103678:	18ffff17 	ldw	r3,-4(r3)
1010367c:	18000326 	beq	r3,zero,1010368c <quorem+0x128>
10103680:	00000506 	br	10103698 <quorem+0x134>
10103684:	10c00017 	ldw	r3,0(r2)
10103688:	1800031e 	bne	r3,zero,10103698 <quorem+0x134>
1010368c:	10bfff04 	addi	r2,r2,-4
10103690:	bdffffc4 	addi	r23,r23,-1
10103694:	98bffb36 	bltu	r19,r2,10103684 <__alt_data_end+0xfffe3684>
10103698:	d8c00017 	ldw	r3,0(sp)
1010369c:	1dc00415 	stw	r23,16(r3)
101036a0:	d9400217 	ldw	r5,8(sp)
101036a4:	d9000017 	ldw	r4,0(sp)
101036a8:	01076800 	call	10107680 <__mcmp>
101036ac:	10002816 	blt	r2,zero,10103750 <quorem+0x1ec>
101036b0:	dc400117 	ldw	r17,4(sp)
101036b4:	94800044 	addi	r18,r18,1
101036b8:	980d883a 	mov	r6,r19
101036bc:	0007883a 	mov	r3,zero
101036c0:	31000017 	ldw	r4,0(r6)
101036c4:	89400017 	ldw	r5,0(r17)
101036c8:	31800104 	addi	r6,r6,4
101036cc:	20bfffcc 	andi	r2,r4,65535
101036d0:	10c7883a 	add	r3,r2,r3
101036d4:	28bfffcc 	andi	r2,r5,65535
101036d8:	1885c83a 	sub	r2,r3,r2
101036dc:	280ad43a 	srli	r5,r5,16
101036e0:	2008d43a 	srli	r4,r4,16
101036e4:	1007d43a 	srai	r3,r2,16
101036e8:	10bfffcc 	andi	r2,r2,65535
101036ec:	2149c83a 	sub	r4,r4,r5
101036f0:	20c9883a 	add	r4,r4,r3
101036f4:	200a943a 	slli	r5,r4,16
101036f8:	8c400104 	addi	r17,r17,4
101036fc:	2007d43a 	srai	r3,r4,16
10103700:	2884b03a 	or	r2,r5,r2
10103704:	30bfff15 	stw	r2,-4(r6)
10103708:	e47fed2e 	bgeu	fp,r17,101036c0 <__alt_data_end+0xfffe36c0>
1010370c:	bdc5883a 	add	r2,r23,r23
10103710:	1085883a 	add	r2,r2,r2
10103714:	9887883a 	add	r3,r19,r2
10103718:	18800017 	ldw	r2,0(r3)
1010371c:	10000c1e 	bne	r2,zero,10103750 <quorem+0x1ec>
10103720:	18bfff04 	addi	r2,r3,-4
10103724:	9880082e 	bgeu	r19,r2,10103748 <quorem+0x1e4>
10103728:	18ffff17 	ldw	r3,-4(r3)
1010372c:	18000326 	beq	r3,zero,1010373c <quorem+0x1d8>
10103730:	00000506 	br	10103748 <quorem+0x1e4>
10103734:	10c00017 	ldw	r3,0(r2)
10103738:	1800031e 	bne	r3,zero,10103748 <quorem+0x1e4>
1010373c:	10bfff04 	addi	r2,r2,-4
10103740:	bdffffc4 	addi	r23,r23,-1
10103744:	98bffb36 	bltu	r19,r2,10103734 <__alt_data_end+0xfffe3734>
10103748:	d8c00017 	ldw	r3,0(sp)
1010374c:	1dc00415 	stw	r23,16(r3)
10103750:	9005883a 	mov	r2,r18
10103754:	dfc00d17 	ldw	ra,52(sp)
10103758:	df000c17 	ldw	fp,48(sp)
1010375c:	ddc00b17 	ldw	r23,44(sp)
10103760:	dd800a17 	ldw	r22,40(sp)
10103764:	dd400917 	ldw	r21,36(sp)
10103768:	dd000817 	ldw	r20,32(sp)
1010376c:	dcc00717 	ldw	r19,28(sp)
10103770:	dc800617 	ldw	r18,24(sp)
10103774:	dc400517 	ldw	r17,20(sp)
10103778:	dc000417 	ldw	r16,16(sp)
1010377c:	dec00e04 	addi	sp,sp,56
10103780:	f800283a 	ret
10103784:	0005883a 	mov	r2,zero
10103788:	003ff206 	br	10103754 <__alt_data_end+0xfffe3754>

1010378c <_dtoa_r>:
1010378c:	20801017 	ldw	r2,64(r4)
10103790:	deffde04 	addi	sp,sp,-136
10103794:	df002015 	stw	fp,128(sp)
10103798:	dcc01b15 	stw	r19,108(sp)
1010379c:	dc801a15 	stw	r18,104(sp)
101037a0:	dc401915 	stw	r17,100(sp)
101037a4:	dc001815 	stw	r16,96(sp)
101037a8:	dfc02115 	stw	ra,132(sp)
101037ac:	ddc01f15 	stw	r23,124(sp)
101037b0:	dd801e15 	stw	r22,120(sp)
101037b4:	dd401d15 	stw	r21,116(sp)
101037b8:	dd001c15 	stw	r20,112(sp)
101037bc:	d9c00315 	stw	r7,12(sp)
101037c0:	2039883a 	mov	fp,r4
101037c4:	3023883a 	mov	r17,r6
101037c8:	2825883a 	mov	r18,r5
101037cc:	dc002417 	ldw	r16,144(sp)
101037d0:	3027883a 	mov	r19,r6
101037d4:	10000826 	beq	r2,zero,101037f8 <_dtoa_r+0x6c>
101037d8:	21801117 	ldw	r6,68(r4)
101037dc:	00c00044 	movi	r3,1
101037e0:	100b883a 	mov	r5,r2
101037e4:	1986983a 	sll	r3,r3,r6
101037e8:	11800115 	stw	r6,4(r2)
101037ec:	10c00215 	stw	r3,8(r2)
101037f0:	0106da40 	call	10106da4 <_Bfree>
101037f4:	e0001015 	stw	zero,64(fp)
101037f8:	88002e16 	blt	r17,zero,101038b4 <_dtoa_r+0x128>
101037fc:	80000015 	stw	zero,0(r16)
10103800:	889ffc2c 	andhi	r2,r17,32752
10103804:	00dffc34 	movhi	r3,32752
10103808:	10c01c26 	beq	r2,r3,1010387c <_dtoa_r+0xf0>
1010380c:	000d883a 	mov	r6,zero
10103810:	000f883a 	mov	r7,zero
10103814:	9009883a 	mov	r4,r18
10103818:	980b883a 	mov	r5,r19
1010381c:	010c4780 	call	1010c478 <__eqdf2>
10103820:	10002b1e 	bne	r2,zero,101038d0 <_dtoa_r+0x144>
10103824:	d9c02317 	ldw	r7,140(sp)
10103828:	00800044 	movi	r2,1
1010382c:	38800015 	stw	r2,0(r7)
10103830:	d8802517 	ldw	r2,148(sp)
10103834:	10019e26 	beq	r2,zero,10103eb0 <_dtoa_r+0x724>
10103838:	d8c02517 	ldw	r3,148(sp)
1010383c:	00840474 	movhi	r2,4113
10103840:	1081c144 	addi	r2,r2,1797
10103844:	18800015 	stw	r2,0(r3)
10103848:	10bfffc4 	addi	r2,r2,-1
1010384c:	dfc02117 	ldw	ra,132(sp)
10103850:	df002017 	ldw	fp,128(sp)
10103854:	ddc01f17 	ldw	r23,124(sp)
10103858:	dd801e17 	ldw	r22,120(sp)
1010385c:	dd401d17 	ldw	r21,116(sp)
10103860:	dd001c17 	ldw	r20,112(sp)
10103864:	dcc01b17 	ldw	r19,108(sp)
10103868:	dc801a17 	ldw	r18,104(sp)
1010386c:	dc401917 	ldw	r17,100(sp)
10103870:	dc001817 	ldw	r16,96(sp)
10103874:	dec02204 	addi	sp,sp,136
10103878:	f800283a 	ret
1010387c:	d8c02317 	ldw	r3,140(sp)
10103880:	0089c3c4 	movi	r2,9999
10103884:	18800015 	stw	r2,0(r3)
10103888:	90017726 	beq	r18,zero,10103e68 <_dtoa_r+0x6dc>
1010388c:	00840474 	movhi	r2,4113
10103890:	1081cd04 	addi	r2,r2,1844
10103894:	d9002517 	ldw	r4,148(sp)
10103898:	203fec26 	beq	r4,zero,1010384c <__alt_data_end+0xfffe384c>
1010389c:	10c000c7 	ldb	r3,3(r2)
101038a0:	1801781e 	bne	r3,zero,10103e84 <_dtoa_r+0x6f8>
101038a4:	10c000c4 	addi	r3,r2,3
101038a8:	d9802517 	ldw	r6,148(sp)
101038ac:	30c00015 	stw	r3,0(r6)
101038b0:	003fe606 	br	1010384c <__alt_data_end+0xfffe384c>
101038b4:	04e00034 	movhi	r19,32768
101038b8:	9cffffc4 	addi	r19,r19,-1
101038bc:	00800044 	movi	r2,1
101038c0:	8ce6703a 	and	r19,r17,r19
101038c4:	80800015 	stw	r2,0(r16)
101038c8:	9823883a 	mov	r17,r19
101038cc:	003fcc06 	br	10103800 <__alt_data_end+0xfffe3800>
101038d0:	d8800204 	addi	r2,sp,8
101038d4:	d8800015 	stw	r2,0(sp)
101038d8:	d9c00104 	addi	r7,sp,4
101038dc:	900b883a 	mov	r5,r18
101038e0:	980d883a 	mov	r6,r19
101038e4:	e009883a 	mov	r4,fp
101038e8:	8820d53a 	srli	r16,r17,20
101038ec:	0107a4c0 	call	10107a4c <__d2b>
101038f0:	d8800915 	stw	r2,36(sp)
101038f4:	8001651e 	bne	r16,zero,10103e8c <_dtoa_r+0x700>
101038f8:	dd800217 	ldw	r22,8(sp)
101038fc:	dc000117 	ldw	r16,4(sp)
10103900:	00800804 	movi	r2,32
10103904:	b421883a 	add	r16,r22,r16
10103908:	80c10c84 	addi	r3,r16,1074
1010390c:	10c2d10e 	bge	r2,r3,10104454 <_dtoa_r+0xcc8>
10103910:	00801004 	movi	r2,64
10103914:	81010484 	addi	r4,r16,1042
10103918:	10c7c83a 	sub	r3,r2,r3
1010391c:	9108d83a 	srl	r4,r18,r4
10103920:	88e2983a 	sll	r17,r17,r3
10103924:	2448b03a 	or	r4,r4,r17
10103928:	010d9940 	call	1010d994 <__floatunsidf>
1010392c:	017f8434 	movhi	r5,65040
10103930:	01800044 	movi	r6,1
10103934:	1009883a 	mov	r4,r2
10103938:	194b883a 	add	r5,r3,r5
1010393c:	843fffc4 	addi	r16,r16,-1
10103940:	d9801115 	stw	r6,68(sp)
10103944:	000d883a 	mov	r6,zero
10103948:	01cffe34 	movhi	r7,16376
1010394c:	010cf3c0 	call	1010cf3c <__subdf3>
10103950:	0198dbf4 	movhi	r6,25455
10103954:	01cff4f4 	movhi	r7,16339
10103958:	3190d844 	addi	r6,r6,17249
1010395c:	39e1e9c4 	addi	r7,r7,-30809
10103960:	1009883a 	mov	r4,r2
10103964:	180b883a 	mov	r5,r3
10103968:	010c6d00 	call	1010c6d0 <__muldf3>
1010396c:	01a2d874 	movhi	r6,35681
10103970:	01cff1f4 	movhi	r7,16327
10103974:	31b22cc4 	addi	r6,r6,-14157
10103978:	39e28a04 	addi	r7,r7,-30168
1010397c:	180b883a 	mov	r5,r3
10103980:	1009883a 	mov	r4,r2
10103984:	010b1fc0 	call	1010b1fc <__adddf3>
10103988:	8009883a 	mov	r4,r16
1010398c:	1029883a 	mov	r20,r2
10103990:	1823883a 	mov	r17,r3
10103994:	010d8b80 	call	1010d8b8 <__floatsidf>
10103998:	019427f4 	movhi	r6,20639
1010399c:	01cff4f4 	movhi	r7,16339
101039a0:	319e7ec4 	addi	r6,r6,31227
101039a4:	39d104c4 	addi	r7,r7,17427
101039a8:	1009883a 	mov	r4,r2
101039ac:	180b883a 	mov	r5,r3
101039b0:	010c6d00 	call	1010c6d0 <__muldf3>
101039b4:	100d883a 	mov	r6,r2
101039b8:	180f883a 	mov	r7,r3
101039bc:	a009883a 	mov	r4,r20
101039c0:	880b883a 	mov	r5,r17
101039c4:	010b1fc0 	call	1010b1fc <__adddf3>
101039c8:	1009883a 	mov	r4,r2
101039cc:	180b883a 	mov	r5,r3
101039d0:	1029883a 	mov	r20,r2
101039d4:	1823883a 	mov	r17,r3
101039d8:	010d8380 	call	1010d838 <__fixdfsi>
101039dc:	000d883a 	mov	r6,zero
101039e0:	000f883a 	mov	r7,zero
101039e4:	a009883a 	mov	r4,r20
101039e8:	880b883a 	mov	r5,r17
101039ec:	d8800515 	stw	r2,20(sp)
101039f0:	010c5dc0 	call	1010c5dc <__ledf2>
101039f4:	10028716 	blt	r2,zero,10104414 <_dtoa_r+0xc88>
101039f8:	d8c00517 	ldw	r3,20(sp)
101039fc:	00800584 	movi	r2,22
10103a00:	10c27536 	bltu	r2,r3,101043d8 <_dtoa_r+0xc4c>
10103a04:	180490fa 	slli	r2,r3,3
10103a08:	00c40474 	movhi	r3,4113
10103a0c:	18c1e904 	addi	r3,r3,1956
10103a10:	1885883a 	add	r2,r3,r2
10103a14:	11000017 	ldw	r4,0(r2)
10103a18:	11400117 	ldw	r5,4(r2)
10103a1c:	900d883a 	mov	r6,r18
10103a20:	980f883a 	mov	r7,r19
10103a24:	010c5000 	call	1010c500 <__gedf2>
10103a28:	00828d0e 	bge	zero,r2,10104460 <_dtoa_r+0xcd4>
10103a2c:	d9000517 	ldw	r4,20(sp)
10103a30:	d8000e15 	stw	zero,56(sp)
10103a34:	213fffc4 	addi	r4,r4,-1
10103a38:	d9000515 	stw	r4,20(sp)
10103a3c:	b42dc83a 	sub	r22,r22,r16
10103a40:	b5bfffc4 	addi	r22,r22,-1
10103a44:	b0026f16 	blt	r22,zero,10104404 <_dtoa_r+0xc78>
10103a48:	d8000815 	stw	zero,32(sp)
10103a4c:	d9c00517 	ldw	r7,20(sp)
10103a50:	38026416 	blt	r7,zero,101043e4 <_dtoa_r+0xc58>
10103a54:	b1ed883a 	add	r22,r22,r7
10103a58:	d9c00d15 	stw	r7,52(sp)
10103a5c:	d8000a15 	stw	zero,40(sp)
10103a60:	d9800317 	ldw	r6,12(sp)
10103a64:	00800244 	movi	r2,9
10103a68:	11811436 	bltu	r2,r6,10103ebc <_dtoa_r+0x730>
10103a6c:	00800144 	movi	r2,5
10103a70:	1184e10e 	bge	r2,r6,10104df8 <_dtoa_r+0x166c>
10103a74:	31bfff04 	addi	r6,r6,-4
10103a78:	d9800315 	stw	r6,12(sp)
10103a7c:	0023883a 	mov	r17,zero
10103a80:	d9800317 	ldw	r6,12(sp)
10103a84:	008000c4 	movi	r2,3
10103a88:	30836726 	beq	r6,r2,10104828 <_dtoa_r+0x109c>
10103a8c:	1183410e 	bge	r2,r6,10104794 <_dtoa_r+0x1008>
10103a90:	d9c00317 	ldw	r7,12(sp)
10103a94:	00800104 	movi	r2,4
10103a98:	38827c26 	beq	r7,r2,1010448c <_dtoa_r+0xd00>
10103a9c:	00800144 	movi	r2,5
10103aa0:	3884c41e 	bne	r7,r2,10104db4 <_dtoa_r+0x1628>
10103aa4:	00800044 	movi	r2,1
10103aa8:	d8800b15 	stw	r2,44(sp)
10103aac:	d8c00517 	ldw	r3,20(sp)
10103ab0:	d9002217 	ldw	r4,136(sp)
10103ab4:	1907883a 	add	r3,r3,r4
10103ab8:	19800044 	addi	r6,r3,1
10103abc:	d8c00c15 	stw	r3,48(sp)
10103ac0:	d9800615 	stw	r6,24(sp)
10103ac4:	0183a40e 	bge	zero,r6,10104958 <_dtoa_r+0x11cc>
10103ac8:	d9800617 	ldw	r6,24(sp)
10103acc:	3021883a 	mov	r16,r6
10103ad0:	e0001115 	stw	zero,68(fp)
10103ad4:	008005c4 	movi	r2,23
10103ad8:	1184c92e 	bgeu	r2,r6,10104e00 <_dtoa_r+0x1674>
10103adc:	00c00044 	movi	r3,1
10103ae0:	00800104 	movi	r2,4
10103ae4:	1085883a 	add	r2,r2,r2
10103ae8:	11000504 	addi	r4,r2,20
10103aec:	180b883a 	mov	r5,r3
10103af0:	18c00044 	addi	r3,r3,1
10103af4:	313ffb2e 	bgeu	r6,r4,10103ae4 <__alt_data_end+0xfffe3ae4>
10103af8:	e1401115 	stw	r5,68(fp)
10103afc:	e009883a 	mov	r4,fp
10103b00:	0106cfc0 	call	10106cfc <_Balloc>
10103b04:	d8800715 	stw	r2,28(sp)
10103b08:	e0801015 	stw	r2,64(fp)
10103b0c:	00800384 	movi	r2,14
10103b10:	1400f736 	bltu	r2,r16,10103ef0 <_dtoa_r+0x764>
10103b14:	8800f626 	beq	r17,zero,10103ef0 <_dtoa_r+0x764>
10103b18:	d9c00517 	ldw	r7,20(sp)
10103b1c:	01c39a0e 	bge	zero,r7,10104988 <_dtoa_r+0x11fc>
10103b20:	388003cc 	andi	r2,r7,15
10103b24:	100490fa 	slli	r2,r2,3
10103b28:	382bd13a 	srai	r21,r7,4
10103b2c:	00c40474 	movhi	r3,4113
10103b30:	18c1e904 	addi	r3,r3,1956
10103b34:	1885883a 	add	r2,r3,r2
10103b38:	a8c0040c 	andi	r3,r21,16
10103b3c:	12400017 	ldw	r9,0(r2)
10103b40:	12000117 	ldw	r8,4(r2)
10103b44:	18037926 	beq	r3,zero,1010492c <_dtoa_r+0x11a0>
10103b48:	00840474 	movhi	r2,4113
10103b4c:	1081df04 	addi	r2,r2,1916
10103b50:	11800817 	ldw	r6,32(r2)
10103b54:	11c00917 	ldw	r7,36(r2)
10103b58:	9009883a 	mov	r4,r18
10103b5c:	980b883a 	mov	r5,r19
10103b60:	da001715 	stw	r8,92(sp)
10103b64:	da401615 	stw	r9,88(sp)
10103b68:	010baa80 	call	1010baa8 <__divdf3>
10103b6c:	da001717 	ldw	r8,92(sp)
10103b70:	da401617 	ldw	r9,88(sp)
10103b74:	ad4003cc 	andi	r21,r21,15
10103b78:	040000c4 	movi	r16,3
10103b7c:	1023883a 	mov	r17,r2
10103b80:	1829883a 	mov	r20,r3
10103b84:	a8001126 	beq	r21,zero,10103bcc <_dtoa_r+0x440>
10103b88:	05c40474 	movhi	r23,4113
10103b8c:	bdc1df04 	addi	r23,r23,1916
10103b90:	4805883a 	mov	r2,r9
10103b94:	4007883a 	mov	r3,r8
10103b98:	a980004c 	andi	r6,r21,1
10103b9c:	1009883a 	mov	r4,r2
10103ba0:	a82bd07a 	srai	r21,r21,1
10103ba4:	180b883a 	mov	r5,r3
10103ba8:	30000426 	beq	r6,zero,10103bbc <_dtoa_r+0x430>
10103bac:	b9800017 	ldw	r6,0(r23)
10103bb0:	b9c00117 	ldw	r7,4(r23)
10103bb4:	84000044 	addi	r16,r16,1
10103bb8:	010c6d00 	call	1010c6d0 <__muldf3>
10103bbc:	bdc00204 	addi	r23,r23,8
10103bc0:	a83ff51e 	bne	r21,zero,10103b98 <__alt_data_end+0xfffe3b98>
10103bc4:	1013883a 	mov	r9,r2
10103bc8:	1811883a 	mov	r8,r3
10103bcc:	480d883a 	mov	r6,r9
10103bd0:	400f883a 	mov	r7,r8
10103bd4:	8809883a 	mov	r4,r17
10103bd8:	a00b883a 	mov	r5,r20
10103bdc:	010baa80 	call	1010baa8 <__divdf3>
10103be0:	d8800f15 	stw	r2,60(sp)
10103be4:	d8c01015 	stw	r3,64(sp)
10103be8:	d8c00e17 	ldw	r3,56(sp)
10103bec:	18000626 	beq	r3,zero,10103c08 <_dtoa_r+0x47c>
10103bf0:	d9000f17 	ldw	r4,60(sp)
10103bf4:	d9401017 	ldw	r5,64(sp)
10103bf8:	000d883a 	mov	r6,zero
10103bfc:	01cffc34 	movhi	r7,16368
10103c00:	010c5dc0 	call	1010c5dc <__ledf2>
10103c04:	10040b16 	blt	r2,zero,10104c34 <_dtoa_r+0x14a8>
10103c08:	8009883a 	mov	r4,r16
10103c0c:	010d8b80 	call	1010d8b8 <__floatsidf>
10103c10:	d9800f17 	ldw	r6,60(sp)
10103c14:	d9c01017 	ldw	r7,64(sp)
10103c18:	1009883a 	mov	r4,r2
10103c1c:	180b883a 	mov	r5,r3
10103c20:	010c6d00 	call	1010c6d0 <__muldf3>
10103c24:	000d883a 	mov	r6,zero
10103c28:	01d00734 	movhi	r7,16412
10103c2c:	1009883a 	mov	r4,r2
10103c30:	180b883a 	mov	r5,r3
10103c34:	010b1fc0 	call	1010b1fc <__adddf3>
10103c38:	1021883a 	mov	r16,r2
10103c3c:	d8800617 	ldw	r2,24(sp)
10103c40:	047f3034 	movhi	r17,64704
10103c44:	1c63883a 	add	r17,r3,r17
10103c48:	10031826 	beq	r2,zero,101048ac <_dtoa_r+0x1120>
10103c4c:	d8c00517 	ldw	r3,20(sp)
10103c50:	db000617 	ldw	r12,24(sp)
10103c54:	d8c01315 	stw	r3,76(sp)
10103c58:	d9000b17 	ldw	r4,44(sp)
10103c5c:	20038f26 	beq	r4,zero,10104a9c <_dtoa_r+0x1310>
10103c60:	60bfffc4 	addi	r2,r12,-1
10103c64:	100490fa 	slli	r2,r2,3
10103c68:	00c40474 	movhi	r3,4113
10103c6c:	18c1e904 	addi	r3,r3,1956
10103c70:	1885883a 	add	r2,r3,r2
10103c74:	11800017 	ldw	r6,0(r2)
10103c78:	11c00117 	ldw	r7,4(r2)
10103c7c:	d8800717 	ldw	r2,28(sp)
10103c80:	0009883a 	mov	r4,zero
10103c84:	014ff834 	movhi	r5,16352
10103c88:	db001615 	stw	r12,88(sp)
10103c8c:	15c00044 	addi	r23,r2,1
10103c90:	010baa80 	call	1010baa8 <__divdf3>
10103c94:	800d883a 	mov	r6,r16
10103c98:	880f883a 	mov	r7,r17
10103c9c:	1009883a 	mov	r4,r2
10103ca0:	180b883a 	mov	r5,r3
10103ca4:	010cf3c0 	call	1010cf3c <__subdf3>
10103ca8:	d9401017 	ldw	r5,64(sp)
10103cac:	d9000f17 	ldw	r4,60(sp)
10103cb0:	102b883a 	mov	r21,r2
10103cb4:	d8c01215 	stw	r3,72(sp)
10103cb8:	010d8380 	call	1010d838 <__fixdfsi>
10103cbc:	1009883a 	mov	r4,r2
10103cc0:	1029883a 	mov	r20,r2
10103cc4:	010d8b80 	call	1010d8b8 <__floatsidf>
10103cc8:	d9000f17 	ldw	r4,60(sp)
10103ccc:	d9401017 	ldw	r5,64(sp)
10103cd0:	100d883a 	mov	r6,r2
10103cd4:	180f883a 	mov	r7,r3
10103cd8:	010cf3c0 	call	1010cf3c <__subdf3>
10103cdc:	1823883a 	mov	r17,r3
10103ce0:	d8c00717 	ldw	r3,28(sp)
10103ce4:	d9401217 	ldw	r5,72(sp)
10103ce8:	a2000c04 	addi	r8,r20,48
10103cec:	1021883a 	mov	r16,r2
10103cf0:	1a000005 	stb	r8,0(r3)
10103cf4:	800d883a 	mov	r6,r16
10103cf8:	880f883a 	mov	r7,r17
10103cfc:	a809883a 	mov	r4,r21
10103d00:	4029883a 	mov	r20,r8
10103d04:	010c5000 	call	1010c500 <__gedf2>
10103d08:	00841d16 	blt	zero,r2,10104d80 <_dtoa_r+0x15f4>
10103d0c:	800d883a 	mov	r6,r16
10103d10:	880f883a 	mov	r7,r17
10103d14:	0009883a 	mov	r4,zero
10103d18:	014ffc34 	movhi	r5,16368
10103d1c:	010cf3c0 	call	1010cf3c <__subdf3>
10103d20:	d9401217 	ldw	r5,72(sp)
10103d24:	100d883a 	mov	r6,r2
10103d28:	180f883a 	mov	r7,r3
10103d2c:	a809883a 	mov	r4,r21
10103d30:	010c5000 	call	1010c500 <__gedf2>
10103d34:	db001617 	ldw	r12,88(sp)
10103d38:	00840e16 	blt	zero,r2,10104d74 <_dtoa_r+0x15e8>
10103d3c:	00800044 	movi	r2,1
10103d40:	13006b0e 	bge	r2,r12,10103ef0 <_dtoa_r+0x764>
10103d44:	d9000717 	ldw	r4,28(sp)
10103d48:	dd800f15 	stw	r22,60(sp)
10103d4c:	dcc01015 	stw	r19,64(sp)
10103d50:	2319883a 	add	r12,r4,r12
10103d54:	dcc01217 	ldw	r19,72(sp)
10103d58:	602d883a 	mov	r22,r12
10103d5c:	dc801215 	stw	r18,72(sp)
10103d60:	b825883a 	mov	r18,r23
10103d64:	00000906 	br	10103d8c <_dtoa_r+0x600>
10103d68:	010cf3c0 	call	1010cf3c <__subdf3>
10103d6c:	a80d883a 	mov	r6,r21
10103d70:	980f883a 	mov	r7,r19
10103d74:	1009883a 	mov	r4,r2
10103d78:	180b883a 	mov	r5,r3
10103d7c:	010c5dc0 	call	1010c5dc <__ledf2>
10103d80:	1003e816 	blt	r2,zero,10104d24 <_dtoa_r+0x1598>
10103d84:	b825883a 	mov	r18,r23
10103d88:	bd83e926 	beq	r23,r22,10104d30 <_dtoa_r+0x15a4>
10103d8c:	a809883a 	mov	r4,r21
10103d90:	980b883a 	mov	r5,r19
10103d94:	000d883a 	mov	r6,zero
10103d98:	01d00934 	movhi	r7,16420
10103d9c:	010c6d00 	call	1010c6d0 <__muldf3>
10103da0:	000d883a 	mov	r6,zero
10103da4:	01d00934 	movhi	r7,16420
10103da8:	8009883a 	mov	r4,r16
10103dac:	880b883a 	mov	r5,r17
10103db0:	102b883a 	mov	r21,r2
10103db4:	1827883a 	mov	r19,r3
10103db8:	010c6d00 	call	1010c6d0 <__muldf3>
10103dbc:	180b883a 	mov	r5,r3
10103dc0:	1009883a 	mov	r4,r2
10103dc4:	1821883a 	mov	r16,r3
10103dc8:	1023883a 	mov	r17,r2
10103dcc:	010d8380 	call	1010d838 <__fixdfsi>
10103dd0:	1009883a 	mov	r4,r2
10103dd4:	1029883a 	mov	r20,r2
10103dd8:	010d8b80 	call	1010d8b8 <__floatsidf>
10103ddc:	8809883a 	mov	r4,r17
10103de0:	800b883a 	mov	r5,r16
10103de4:	100d883a 	mov	r6,r2
10103de8:	180f883a 	mov	r7,r3
10103dec:	010cf3c0 	call	1010cf3c <__subdf3>
10103df0:	a5000c04 	addi	r20,r20,48
10103df4:	a80d883a 	mov	r6,r21
10103df8:	980f883a 	mov	r7,r19
10103dfc:	1009883a 	mov	r4,r2
10103e00:	180b883a 	mov	r5,r3
10103e04:	95000005 	stb	r20,0(r18)
10103e08:	1021883a 	mov	r16,r2
10103e0c:	1823883a 	mov	r17,r3
10103e10:	010c5dc0 	call	1010c5dc <__ledf2>
10103e14:	bdc00044 	addi	r23,r23,1
10103e18:	800d883a 	mov	r6,r16
10103e1c:	880f883a 	mov	r7,r17
10103e20:	0009883a 	mov	r4,zero
10103e24:	014ffc34 	movhi	r5,16368
10103e28:	103fcf0e 	bge	r2,zero,10103d68 <__alt_data_end+0xfffe3d68>
10103e2c:	d8c01317 	ldw	r3,76(sp)
10103e30:	d8c00515 	stw	r3,20(sp)
10103e34:	d9400917 	ldw	r5,36(sp)
10103e38:	e009883a 	mov	r4,fp
10103e3c:	0106da40 	call	10106da4 <_Bfree>
10103e40:	d9000517 	ldw	r4,20(sp)
10103e44:	d9802317 	ldw	r6,140(sp)
10103e48:	d9c02517 	ldw	r7,148(sp)
10103e4c:	b8000005 	stb	zero,0(r23)
10103e50:	20800044 	addi	r2,r4,1
10103e54:	30800015 	stw	r2,0(r6)
10103e58:	3802aa26 	beq	r7,zero,10104904 <_dtoa_r+0x1178>
10103e5c:	3dc00015 	stw	r23,0(r7)
10103e60:	d8800717 	ldw	r2,28(sp)
10103e64:	003e7906 	br	1010384c <__alt_data_end+0xfffe384c>
10103e68:	00800434 	movhi	r2,16
10103e6c:	10bfffc4 	addi	r2,r2,-1
10103e70:	88a2703a 	and	r17,r17,r2
10103e74:	883e851e 	bne	r17,zero,1010388c <__alt_data_end+0xfffe388c>
10103e78:	00840474 	movhi	r2,4113
10103e7c:	1081ca04 	addi	r2,r2,1832
10103e80:	003e8406 	br	10103894 <__alt_data_end+0xfffe3894>
10103e84:	10c00204 	addi	r3,r2,8
10103e88:	003e8706 	br	101038a8 <__alt_data_end+0xfffe38a8>
10103e8c:	01400434 	movhi	r5,16
10103e90:	297fffc4 	addi	r5,r5,-1
10103e94:	994a703a 	and	r5,r19,r5
10103e98:	9009883a 	mov	r4,r18
10103e9c:	843f0044 	addi	r16,r16,-1023
10103ea0:	294ffc34 	orhi	r5,r5,16368
10103ea4:	dd800217 	ldw	r22,8(sp)
10103ea8:	d8001115 	stw	zero,68(sp)
10103eac:	003ea506 	br	10103944 <__alt_data_end+0xfffe3944>
10103eb0:	00840474 	movhi	r2,4113
10103eb4:	1081c104 	addi	r2,r2,1796
10103eb8:	003e6406 	br	1010384c <__alt_data_end+0xfffe384c>
10103ebc:	e0001115 	stw	zero,68(fp)
10103ec0:	000b883a 	mov	r5,zero
10103ec4:	e009883a 	mov	r4,fp
10103ec8:	0106cfc0 	call	10106cfc <_Balloc>
10103ecc:	01bfffc4 	movi	r6,-1
10103ed0:	01c00044 	movi	r7,1
10103ed4:	d8800715 	stw	r2,28(sp)
10103ed8:	d9800c15 	stw	r6,48(sp)
10103edc:	e0801015 	stw	r2,64(fp)
10103ee0:	d8000315 	stw	zero,12(sp)
10103ee4:	d9c00b15 	stw	r7,44(sp)
10103ee8:	d9800615 	stw	r6,24(sp)
10103eec:	d8002215 	stw	zero,136(sp)
10103ef0:	d8800117 	ldw	r2,4(sp)
10103ef4:	10008916 	blt	r2,zero,1010411c <_dtoa_r+0x990>
10103ef8:	d9000517 	ldw	r4,20(sp)
10103efc:	00c00384 	movi	r3,14
10103f00:	19008616 	blt	r3,r4,1010411c <_dtoa_r+0x990>
10103f04:	200490fa 	slli	r2,r4,3
10103f08:	00c40474 	movhi	r3,4113
10103f0c:	d9802217 	ldw	r6,136(sp)
10103f10:	18c1e904 	addi	r3,r3,1956
10103f14:	1885883a 	add	r2,r3,r2
10103f18:	14000017 	ldw	r16,0(r2)
10103f1c:	14400117 	ldw	r17,4(r2)
10103f20:	30016316 	blt	r6,zero,101044b0 <_dtoa_r+0xd24>
10103f24:	800d883a 	mov	r6,r16
10103f28:	880f883a 	mov	r7,r17
10103f2c:	9009883a 	mov	r4,r18
10103f30:	980b883a 	mov	r5,r19
10103f34:	010baa80 	call	1010baa8 <__divdf3>
10103f38:	180b883a 	mov	r5,r3
10103f3c:	1009883a 	mov	r4,r2
10103f40:	010d8380 	call	1010d838 <__fixdfsi>
10103f44:	1009883a 	mov	r4,r2
10103f48:	102b883a 	mov	r21,r2
10103f4c:	010d8b80 	call	1010d8b8 <__floatsidf>
10103f50:	800d883a 	mov	r6,r16
10103f54:	880f883a 	mov	r7,r17
10103f58:	1009883a 	mov	r4,r2
10103f5c:	180b883a 	mov	r5,r3
10103f60:	010c6d00 	call	1010c6d0 <__muldf3>
10103f64:	100d883a 	mov	r6,r2
10103f68:	180f883a 	mov	r7,r3
10103f6c:	9009883a 	mov	r4,r18
10103f70:	980b883a 	mov	r5,r19
10103f74:	010cf3c0 	call	1010cf3c <__subdf3>
10103f78:	d9c00717 	ldw	r7,28(sp)
10103f7c:	1009883a 	mov	r4,r2
10103f80:	a8800c04 	addi	r2,r21,48
10103f84:	38800005 	stb	r2,0(r7)
10103f88:	3dc00044 	addi	r23,r7,1
10103f8c:	d9c00617 	ldw	r7,24(sp)
10103f90:	01800044 	movi	r6,1
10103f94:	180b883a 	mov	r5,r3
10103f98:	2005883a 	mov	r2,r4
10103f9c:	39803826 	beq	r7,r6,10104080 <_dtoa_r+0x8f4>
10103fa0:	000d883a 	mov	r6,zero
10103fa4:	01d00934 	movhi	r7,16420
10103fa8:	010c6d00 	call	1010c6d0 <__muldf3>
10103fac:	000d883a 	mov	r6,zero
10103fb0:	000f883a 	mov	r7,zero
10103fb4:	1009883a 	mov	r4,r2
10103fb8:	180b883a 	mov	r5,r3
10103fbc:	1025883a 	mov	r18,r2
10103fc0:	1827883a 	mov	r19,r3
10103fc4:	010c4780 	call	1010c478 <__eqdf2>
10103fc8:	103f9a26 	beq	r2,zero,10103e34 <__alt_data_end+0xfffe3e34>
10103fcc:	d9c00617 	ldw	r7,24(sp)
10103fd0:	d8c00717 	ldw	r3,28(sp)
10103fd4:	b829883a 	mov	r20,r23
10103fd8:	38bfffc4 	addi	r2,r7,-1
10103fdc:	18ad883a 	add	r22,r3,r2
10103fe0:	00000a06 	br	1010400c <_dtoa_r+0x880>
10103fe4:	010c6d00 	call	1010c6d0 <__muldf3>
10103fe8:	000d883a 	mov	r6,zero
10103fec:	000f883a 	mov	r7,zero
10103ff0:	1009883a 	mov	r4,r2
10103ff4:	180b883a 	mov	r5,r3
10103ff8:	1025883a 	mov	r18,r2
10103ffc:	1827883a 	mov	r19,r3
10104000:	b829883a 	mov	r20,r23
10104004:	010c4780 	call	1010c478 <__eqdf2>
10104008:	103f8a26 	beq	r2,zero,10103e34 <__alt_data_end+0xfffe3e34>
1010400c:	800d883a 	mov	r6,r16
10104010:	880f883a 	mov	r7,r17
10104014:	9009883a 	mov	r4,r18
10104018:	980b883a 	mov	r5,r19
1010401c:	010baa80 	call	1010baa8 <__divdf3>
10104020:	180b883a 	mov	r5,r3
10104024:	1009883a 	mov	r4,r2
10104028:	010d8380 	call	1010d838 <__fixdfsi>
1010402c:	1009883a 	mov	r4,r2
10104030:	102b883a 	mov	r21,r2
10104034:	010d8b80 	call	1010d8b8 <__floatsidf>
10104038:	800d883a 	mov	r6,r16
1010403c:	880f883a 	mov	r7,r17
10104040:	1009883a 	mov	r4,r2
10104044:	180b883a 	mov	r5,r3
10104048:	010c6d00 	call	1010c6d0 <__muldf3>
1010404c:	100d883a 	mov	r6,r2
10104050:	180f883a 	mov	r7,r3
10104054:	9009883a 	mov	r4,r18
10104058:	980b883a 	mov	r5,r19
1010405c:	010cf3c0 	call	1010cf3c <__subdf3>
10104060:	aa000c04 	addi	r8,r21,48
10104064:	a2000005 	stb	r8,0(r20)
10104068:	000d883a 	mov	r6,zero
1010406c:	01d00934 	movhi	r7,16420
10104070:	1009883a 	mov	r4,r2
10104074:	180b883a 	mov	r5,r3
10104078:	a5c00044 	addi	r23,r20,1
1010407c:	b53fd91e 	bne	r22,r20,10103fe4 <__alt_data_end+0xfffe3fe4>
10104080:	100d883a 	mov	r6,r2
10104084:	180f883a 	mov	r7,r3
10104088:	1009883a 	mov	r4,r2
1010408c:	180b883a 	mov	r5,r3
10104090:	010b1fc0 	call	1010b1fc <__adddf3>
10104094:	100d883a 	mov	r6,r2
10104098:	180f883a 	mov	r7,r3
1010409c:	8009883a 	mov	r4,r16
101040a0:	880b883a 	mov	r5,r17
101040a4:	1027883a 	mov	r19,r2
101040a8:	1825883a 	mov	r18,r3
101040ac:	010c5dc0 	call	1010c5dc <__ledf2>
101040b0:	10000816 	blt	r2,zero,101040d4 <_dtoa_r+0x948>
101040b4:	980d883a 	mov	r6,r19
101040b8:	900f883a 	mov	r7,r18
101040bc:	8009883a 	mov	r4,r16
101040c0:	880b883a 	mov	r5,r17
101040c4:	010c4780 	call	1010c478 <__eqdf2>
101040c8:	103f5a1e 	bne	r2,zero,10103e34 <__alt_data_end+0xfffe3e34>
101040cc:	ad40004c 	andi	r21,r21,1
101040d0:	a83f5826 	beq	r21,zero,10103e34 <__alt_data_end+0xfffe3e34>
101040d4:	bd3fffc3 	ldbu	r20,-1(r23)
101040d8:	b8bfffc4 	addi	r2,r23,-1
101040dc:	1007883a 	mov	r3,r2
101040e0:	01400e44 	movi	r5,57
101040e4:	d9800717 	ldw	r6,28(sp)
101040e8:	00000506 	br	10104100 <_dtoa_r+0x974>
101040ec:	18ffffc4 	addi	r3,r3,-1
101040f0:	11824726 	beq	r2,r6,10104a10 <_dtoa_r+0x1284>
101040f4:	1d000003 	ldbu	r20,0(r3)
101040f8:	102f883a 	mov	r23,r2
101040fc:	10bfffc4 	addi	r2,r2,-1
10104100:	a1003fcc 	andi	r4,r20,255
10104104:	2100201c 	xori	r4,r4,128
10104108:	213fe004 	addi	r4,r4,-128
1010410c:	217ff726 	beq	r4,r5,101040ec <__alt_data_end+0xfffe40ec>
10104110:	a2000044 	addi	r8,r20,1
10104114:	12000005 	stb	r8,0(r2)
10104118:	003f4606 	br	10103e34 <__alt_data_end+0xfffe3e34>
1010411c:	d9000b17 	ldw	r4,44(sp)
10104120:	2000c826 	beq	r4,zero,10104444 <_dtoa_r+0xcb8>
10104124:	d9800317 	ldw	r6,12(sp)
10104128:	00c00044 	movi	r3,1
1010412c:	1980f90e 	bge	r3,r6,10104514 <_dtoa_r+0xd88>
10104130:	d8800617 	ldw	r2,24(sp)
10104134:	d8c00a17 	ldw	r3,40(sp)
10104138:	157fffc4 	addi	r21,r2,-1
1010413c:	1d41f316 	blt	r3,r21,1010490c <_dtoa_r+0x1180>
10104140:	1d6bc83a 	sub	r21,r3,r21
10104144:	d9c00617 	ldw	r7,24(sp)
10104148:	3802aa16 	blt	r7,zero,10104bf4 <_dtoa_r+0x1468>
1010414c:	dd000817 	ldw	r20,32(sp)
10104150:	d8800617 	ldw	r2,24(sp)
10104154:	d8c00817 	ldw	r3,32(sp)
10104158:	01400044 	movi	r5,1
1010415c:	e009883a 	mov	r4,fp
10104160:	1887883a 	add	r3,r3,r2
10104164:	d8c00815 	stw	r3,32(sp)
10104168:	b0ad883a 	add	r22,r22,r2
1010416c:	01071300 	call	10107130 <__i2b>
10104170:	1023883a 	mov	r17,r2
10104174:	a0000826 	beq	r20,zero,10104198 <_dtoa_r+0xa0c>
10104178:	0580070e 	bge	zero,r22,10104198 <_dtoa_r+0xa0c>
1010417c:	a005883a 	mov	r2,r20
10104180:	b500b916 	blt	r22,r20,10104468 <_dtoa_r+0xcdc>
10104184:	d9000817 	ldw	r4,32(sp)
10104188:	a0a9c83a 	sub	r20,r20,r2
1010418c:	b0adc83a 	sub	r22,r22,r2
10104190:	2089c83a 	sub	r4,r4,r2
10104194:	d9000815 	stw	r4,32(sp)
10104198:	d9800a17 	ldw	r6,40(sp)
1010419c:	0181810e 	bge	zero,r6,101047a4 <_dtoa_r+0x1018>
101041a0:	d9c00b17 	ldw	r7,44(sp)
101041a4:	3800b326 	beq	r7,zero,10104474 <_dtoa_r+0xce8>
101041a8:	a800b226 	beq	r21,zero,10104474 <_dtoa_r+0xce8>
101041ac:	880b883a 	mov	r5,r17
101041b0:	a80d883a 	mov	r6,r21
101041b4:	e009883a 	mov	r4,fp
101041b8:	01073f80 	call	101073f8 <__pow5mult>
101041bc:	d9800917 	ldw	r6,36(sp)
101041c0:	100b883a 	mov	r5,r2
101041c4:	e009883a 	mov	r4,fp
101041c8:	1023883a 	mov	r17,r2
101041cc:	010716c0 	call	1010716c <__multiply>
101041d0:	1021883a 	mov	r16,r2
101041d4:	d8800a17 	ldw	r2,40(sp)
101041d8:	d9400917 	ldw	r5,36(sp)
101041dc:	e009883a 	mov	r4,fp
101041e0:	1545c83a 	sub	r2,r2,r21
101041e4:	d8800a15 	stw	r2,40(sp)
101041e8:	0106da40 	call	10106da4 <_Bfree>
101041ec:	d8c00a17 	ldw	r3,40(sp)
101041f0:	18009f1e 	bne	r3,zero,10104470 <_dtoa_r+0xce4>
101041f4:	05c00044 	movi	r23,1
101041f8:	e009883a 	mov	r4,fp
101041fc:	b80b883a 	mov	r5,r23
10104200:	01071300 	call	10107130 <__i2b>
10104204:	d9000d17 	ldw	r4,52(sp)
10104208:	102b883a 	mov	r21,r2
1010420c:	2000ce26 	beq	r4,zero,10104548 <_dtoa_r+0xdbc>
10104210:	200d883a 	mov	r6,r4
10104214:	100b883a 	mov	r5,r2
10104218:	e009883a 	mov	r4,fp
1010421c:	01073f80 	call	101073f8 <__pow5mult>
10104220:	d9800317 	ldw	r6,12(sp)
10104224:	102b883a 	mov	r21,r2
10104228:	b981810e 	bge	r23,r6,10104830 <_dtoa_r+0x10a4>
1010422c:	0027883a 	mov	r19,zero
10104230:	a8800417 	ldw	r2,16(r21)
10104234:	05c00804 	movi	r23,32
10104238:	10800104 	addi	r2,r2,4
1010423c:	1085883a 	add	r2,r2,r2
10104240:	1085883a 	add	r2,r2,r2
10104244:	a885883a 	add	r2,r21,r2
10104248:	11000017 	ldw	r4,0(r2)
1010424c:	01070180 	call	10107018 <__hi0bits>
10104250:	b885c83a 	sub	r2,r23,r2
10104254:	1585883a 	add	r2,r2,r22
10104258:	108007cc 	andi	r2,r2,31
1010425c:	1000b326 	beq	r2,zero,1010452c <_dtoa_r+0xda0>
10104260:	00c00804 	movi	r3,32
10104264:	1887c83a 	sub	r3,r3,r2
10104268:	01000104 	movi	r4,4
1010426c:	20c2cd0e 	bge	r4,r3,10104da4 <_dtoa_r+0x1618>
10104270:	00c00704 	movi	r3,28
10104274:	1885c83a 	sub	r2,r3,r2
10104278:	d8c00817 	ldw	r3,32(sp)
1010427c:	a0a9883a 	add	r20,r20,r2
10104280:	b0ad883a 	add	r22,r22,r2
10104284:	1887883a 	add	r3,r3,r2
10104288:	d8c00815 	stw	r3,32(sp)
1010428c:	d9800817 	ldw	r6,32(sp)
10104290:	0180040e 	bge	zero,r6,101042a4 <_dtoa_r+0xb18>
10104294:	800b883a 	mov	r5,r16
10104298:	e009883a 	mov	r4,fp
1010429c:	01075380 	call	10107538 <__lshift>
101042a0:	1021883a 	mov	r16,r2
101042a4:	0580050e 	bge	zero,r22,101042bc <_dtoa_r+0xb30>
101042a8:	a80b883a 	mov	r5,r21
101042ac:	b00d883a 	mov	r6,r22
101042b0:	e009883a 	mov	r4,fp
101042b4:	01075380 	call	10107538 <__lshift>
101042b8:	102b883a 	mov	r21,r2
101042bc:	d9c00e17 	ldw	r7,56(sp)
101042c0:	3801211e 	bne	r7,zero,10104748 <_dtoa_r+0xfbc>
101042c4:	d9800617 	ldw	r6,24(sp)
101042c8:	0181380e 	bge	zero,r6,101047ac <_dtoa_r+0x1020>
101042cc:	d8c00b17 	ldw	r3,44(sp)
101042d0:	1800ab1e 	bne	r3,zero,10104580 <_dtoa_r+0xdf4>
101042d4:	dc800717 	ldw	r18,28(sp)
101042d8:	dcc00617 	ldw	r19,24(sp)
101042dc:	9029883a 	mov	r20,r18
101042e0:	00000206 	br	101042ec <_dtoa_r+0xb60>
101042e4:	0106dcc0 	call	10106dcc <__multadd>
101042e8:	1021883a 	mov	r16,r2
101042ec:	a80b883a 	mov	r5,r21
101042f0:	8009883a 	mov	r4,r16
101042f4:	01035640 	call	10103564 <quorem>
101042f8:	10800c04 	addi	r2,r2,48
101042fc:	90800005 	stb	r2,0(r18)
10104300:	94800044 	addi	r18,r18,1
10104304:	9507c83a 	sub	r3,r18,r20
10104308:	000f883a 	mov	r7,zero
1010430c:	01800284 	movi	r6,10
10104310:	800b883a 	mov	r5,r16
10104314:	e009883a 	mov	r4,fp
10104318:	1cfff216 	blt	r3,r19,101042e4 <__alt_data_end+0xfffe42e4>
1010431c:	1011883a 	mov	r8,r2
10104320:	d8800617 	ldw	r2,24(sp)
10104324:	0082370e 	bge	zero,r2,10104c04 <_dtoa_r+0x1478>
10104328:	d9000717 	ldw	r4,28(sp)
1010432c:	0025883a 	mov	r18,zero
10104330:	20af883a 	add	r23,r4,r2
10104334:	01800044 	movi	r6,1
10104338:	800b883a 	mov	r5,r16
1010433c:	e009883a 	mov	r4,fp
10104340:	da001715 	stw	r8,92(sp)
10104344:	01075380 	call	10107538 <__lshift>
10104348:	a80b883a 	mov	r5,r21
1010434c:	1009883a 	mov	r4,r2
10104350:	d8800915 	stw	r2,36(sp)
10104354:	01076800 	call	10107680 <__mcmp>
10104358:	da001717 	ldw	r8,92(sp)
1010435c:	0081800e 	bge	zero,r2,10104960 <_dtoa_r+0x11d4>
10104360:	b93fffc3 	ldbu	r4,-1(r23)
10104364:	b8bfffc4 	addi	r2,r23,-1
10104368:	1007883a 	mov	r3,r2
1010436c:	01800e44 	movi	r6,57
10104370:	d9c00717 	ldw	r7,28(sp)
10104374:	00000506 	br	1010438c <_dtoa_r+0xc00>
10104378:	18ffffc4 	addi	r3,r3,-1
1010437c:	11c12326 	beq	r2,r7,1010480c <_dtoa_r+0x1080>
10104380:	19000003 	ldbu	r4,0(r3)
10104384:	102f883a 	mov	r23,r2
10104388:	10bfffc4 	addi	r2,r2,-1
1010438c:	21403fcc 	andi	r5,r4,255
10104390:	2940201c 	xori	r5,r5,128
10104394:	297fe004 	addi	r5,r5,-128
10104398:	29bff726 	beq	r5,r6,10104378 <__alt_data_end+0xfffe4378>
1010439c:	21000044 	addi	r4,r4,1
101043a0:	11000005 	stb	r4,0(r2)
101043a4:	a80b883a 	mov	r5,r21
101043a8:	e009883a 	mov	r4,fp
101043ac:	0106da40 	call	10106da4 <_Bfree>
101043b0:	883ea026 	beq	r17,zero,10103e34 <__alt_data_end+0xfffe3e34>
101043b4:	90000426 	beq	r18,zero,101043c8 <_dtoa_r+0xc3c>
101043b8:	94400326 	beq	r18,r17,101043c8 <_dtoa_r+0xc3c>
101043bc:	900b883a 	mov	r5,r18
101043c0:	e009883a 	mov	r4,fp
101043c4:	0106da40 	call	10106da4 <_Bfree>
101043c8:	880b883a 	mov	r5,r17
101043cc:	e009883a 	mov	r4,fp
101043d0:	0106da40 	call	10106da4 <_Bfree>
101043d4:	003e9706 	br	10103e34 <__alt_data_end+0xfffe3e34>
101043d8:	01800044 	movi	r6,1
101043dc:	d9800e15 	stw	r6,56(sp)
101043e0:	003d9606 	br	10103a3c <__alt_data_end+0xfffe3a3c>
101043e4:	d8800817 	ldw	r2,32(sp)
101043e8:	d8c00517 	ldw	r3,20(sp)
101043ec:	d8000d15 	stw	zero,52(sp)
101043f0:	10c5c83a 	sub	r2,r2,r3
101043f4:	00c9c83a 	sub	r4,zero,r3
101043f8:	d8800815 	stw	r2,32(sp)
101043fc:	d9000a15 	stw	r4,40(sp)
10104400:	003d9706 	br	10103a60 <__alt_data_end+0xfffe3a60>
10104404:	05adc83a 	sub	r22,zero,r22
10104408:	dd800815 	stw	r22,32(sp)
1010440c:	002d883a 	mov	r22,zero
10104410:	003d8e06 	br	10103a4c <__alt_data_end+0xfffe3a4c>
10104414:	d9000517 	ldw	r4,20(sp)
10104418:	010d8b80 	call	1010d8b8 <__floatsidf>
1010441c:	100d883a 	mov	r6,r2
10104420:	180f883a 	mov	r7,r3
10104424:	a009883a 	mov	r4,r20
10104428:	880b883a 	mov	r5,r17
1010442c:	010c4780 	call	1010c478 <__eqdf2>
10104430:	103d7126 	beq	r2,zero,101039f8 <__alt_data_end+0xfffe39f8>
10104434:	d9c00517 	ldw	r7,20(sp)
10104438:	39ffffc4 	addi	r7,r7,-1
1010443c:	d9c00515 	stw	r7,20(sp)
10104440:	003d6d06 	br	101039f8 <__alt_data_end+0xfffe39f8>
10104444:	dd400a17 	ldw	r21,40(sp)
10104448:	dd000817 	ldw	r20,32(sp)
1010444c:	0023883a 	mov	r17,zero
10104450:	003f4806 	br	10104174 <__alt_data_end+0xfffe4174>
10104454:	10e3c83a 	sub	r17,r2,r3
10104458:	9448983a 	sll	r4,r18,r17
1010445c:	003d3206 	br	10103928 <__alt_data_end+0xfffe3928>
10104460:	d8000e15 	stw	zero,56(sp)
10104464:	003d7506 	br	10103a3c <__alt_data_end+0xfffe3a3c>
10104468:	b005883a 	mov	r2,r22
1010446c:	003f4506 	br	10104184 <__alt_data_end+0xfffe4184>
10104470:	dc000915 	stw	r16,36(sp)
10104474:	d9800a17 	ldw	r6,40(sp)
10104478:	d9400917 	ldw	r5,36(sp)
1010447c:	e009883a 	mov	r4,fp
10104480:	01073f80 	call	101073f8 <__pow5mult>
10104484:	1021883a 	mov	r16,r2
10104488:	003f5a06 	br	101041f4 <__alt_data_end+0xfffe41f4>
1010448c:	01c00044 	movi	r7,1
10104490:	d9c00b15 	stw	r7,44(sp)
10104494:	d8802217 	ldw	r2,136(sp)
10104498:	0081280e 	bge	zero,r2,1010493c <_dtoa_r+0x11b0>
1010449c:	100d883a 	mov	r6,r2
101044a0:	1021883a 	mov	r16,r2
101044a4:	d8800c15 	stw	r2,48(sp)
101044a8:	d8800615 	stw	r2,24(sp)
101044ac:	003d8806 	br	10103ad0 <__alt_data_end+0xfffe3ad0>
101044b0:	d8800617 	ldw	r2,24(sp)
101044b4:	00be9b16 	blt	zero,r2,10103f24 <__alt_data_end+0xfffe3f24>
101044b8:	10010f1e 	bne	r2,zero,101048f8 <_dtoa_r+0x116c>
101044bc:	880b883a 	mov	r5,r17
101044c0:	000d883a 	mov	r6,zero
101044c4:	01d00534 	movhi	r7,16404
101044c8:	8009883a 	mov	r4,r16
101044cc:	010c6d00 	call	1010c6d0 <__muldf3>
101044d0:	900d883a 	mov	r6,r18
101044d4:	980f883a 	mov	r7,r19
101044d8:	1009883a 	mov	r4,r2
101044dc:	180b883a 	mov	r5,r3
101044e0:	010c5000 	call	1010c500 <__gedf2>
101044e4:	002b883a 	mov	r21,zero
101044e8:	0023883a 	mov	r17,zero
101044ec:	1000bf16 	blt	r2,zero,101047ec <_dtoa_r+0x1060>
101044f0:	d9802217 	ldw	r6,136(sp)
101044f4:	ddc00717 	ldw	r23,28(sp)
101044f8:	018c303a 	nor	r6,zero,r6
101044fc:	d9800515 	stw	r6,20(sp)
10104500:	a80b883a 	mov	r5,r21
10104504:	e009883a 	mov	r4,fp
10104508:	0106da40 	call	10106da4 <_Bfree>
1010450c:	883e4926 	beq	r17,zero,10103e34 <__alt_data_end+0xfffe3e34>
10104510:	003fad06 	br	101043c8 <__alt_data_end+0xfffe43c8>
10104514:	d9c01117 	ldw	r7,68(sp)
10104518:	3801bc26 	beq	r7,zero,10104c0c <_dtoa_r+0x1480>
1010451c:	10810cc4 	addi	r2,r2,1075
10104520:	dd400a17 	ldw	r21,40(sp)
10104524:	dd000817 	ldw	r20,32(sp)
10104528:	003f0a06 	br	10104154 <__alt_data_end+0xfffe4154>
1010452c:	00800704 	movi	r2,28
10104530:	d9000817 	ldw	r4,32(sp)
10104534:	a0a9883a 	add	r20,r20,r2
10104538:	b0ad883a 	add	r22,r22,r2
1010453c:	2089883a 	add	r4,r4,r2
10104540:	d9000815 	stw	r4,32(sp)
10104544:	003f5106 	br	1010428c <__alt_data_end+0xfffe428c>
10104548:	d8c00317 	ldw	r3,12(sp)
1010454c:	b8c1fc0e 	bge	r23,r3,10104d40 <_dtoa_r+0x15b4>
10104550:	0027883a 	mov	r19,zero
10104554:	b805883a 	mov	r2,r23
10104558:	003f3e06 	br	10104254 <__alt_data_end+0xfffe4254>
1010455c:	880b883a 	mov	r5,r17
10104560:	e009883a 	mov	r4,fp
10104564:	000f883a 	mov	r7,zero
10104568:	01800284 	movi	r6,10
1010456c:	0106dcc0 	call	10106dcc <__multadd>
10104570:	d9000c17 	ldw	r4,48(sp)
10104574:	1023883a 	mov	r17,r2
10104578:	0102040e 	bge	zero,r4,10104d8c <_dtoa_r+0x1600>
1010457c:	d9000615 	stw	r4,24(sp)
10104580:	0500050e 	bge	zero,r20,10104598 <_dtoa_r+0xe0c>
10104584:	880b883a 	mov	r5,r17
10104588:	a00d883a 	mov	r6,r20
1010458c:	e009883a 	mov	r4,fp
10104590:	01075380 	call	10107538 <__lshift>
10104594:	1023883a 	mov	r17,r2
10104598:	9801241e 	bne	r19,zero,10104a2c <_dtoa_r+0x12a0>
1010459c:	8829883a 	mov	r20,r17
101045a0:	d9000617 	ldw	r4,24(sp)
101045a4:	dcc00717 	ldw	r19,28(sp)
101045a8:	9480004c 	andi	r18,r18,1
101045ac:	20bfffc4 	addi	r2,r4,-1
101045b0:	9885883a 	add	r2,r19,r2
101045b4:	d8800415 	stw	r2,16(sp)
101045b8:	dc800615 	stw	r18,24(sp)
101045bc:	a80b883a 	mov	r5,r21
101045c0:	8009883a 	mov	r4,r16
101045c4:	01035640 	call	10103564 <quorem>
101045c8:	880b883a 	mov	r5,r17
101045cc:	8009883a 	mov	r4,r16
101045d0:	102f883a 	mov	r23,r2
101045d4:	01076800 	call	10107680 <__mcmp>
101045d8:	a80b883a 	mov	r5,r21
101045dc:	a00d883a 	mov	r6,r20
101045e0:	e009883a 	mov	r4,fp
101045e4:	102d883a 	mov	r22,r2
101045e8:	01076e00 	call	101076e0 <__mdiff>
101045ec:	1007883a 	mov	r3,r2
101045f0:	10800317 	ldw	r2,12(r2)
101045f4:	bc800c04 	addi	r18,r23,48
101045f8:	180b883a 	mov	r5,r3
101045fc:	10004e1e 	bne	r2,zero,10104738 <_dtoa_r+0xfac>
10104600:	8009883a 	mov	r4,r16
10104604:	d8c01615 	stw	r3,88(sp)
10104608:	01076800 	call	10107680 <__mcmp>
1010460c:	d8c01617 	ldw	r3,88(sp)
10104610:	e009883a 	mov	r4,fp
10104614:	d8801615 	stw	r2,88(sp)
10104618:	180b883a 	mov	r5,r3
1010461c:	0106da40 	call	10106da4 <_Bfree>
10104620:	d8801617 	ldw	r2,88(sp)
10104624:	1000041e 	bne	r2,zero,10104638 <_dtoa_r+0xeac>
10104628:	d9800317 	ldw	r6,12(sp)
1010462c:	3000021e 	bne	r6,zero,10104638 <_dtoa_r+0xeac>
10104630:	d8c00617 	ldw	r3,24(sp)
10104634:	18003726 	beq	r3,zero,10104714 <_dtoa_r+0xf88>
10104638:	b0002016 	blt	r22,zero,101046bc <_dtoa_r+0xf30>
1010463c:	b000041e 	bne	r22,zero,10104650 <_dtoa_r+0xec4>
10104640:	d9000317 	ldw	r4,12(sp)
10104644:	2000021e 	bne	r4,zero,10104650 <_dtoa_r+0xec4>
10104648:	d8c00617 	ldw	r3,24(sp)
1010464c:	18001b26 	beq	r3,zero,101046bc <_dtoa_r+0xf30>
10104650:	00810716 	blt	zero,r2,10104a70 <_dtoa_r+0x12e4>
10104654:	d8c00417 	ldw	r3,16(sp)
10104658:	9d800044 	addi	r22,r19,1
1010465c:	9c800005 	stb	r18,0(r19)
10104660:	b02f883a 	mov	r23,r22
10104664:	98c10626 	beq	r19,r3,10104a80 <_dtoa_r+0x12f4>
10104668:	800b883a 	mov	r5,r16
1010466c:	000f883a 	mov	r7,zero
10104670:	01800284 	movi	r6,10
10104674:	e009883a 	mov	r4,fp
10104678:	0106dcc0 	call	10106dcc <__multadd>
1010467c:	1021883a 	mov	r16,r2
10104680:	000f883a 	mov	r7,zero
10104684:	01800284 	movi	r6,10
10104688:	880b883a 	mov	r5,r17
1010468c:	e009883a 	mov	r4,fp
10104690:	8d002526 	beq	r17,r20,10104728 <_dtoa_r+0xf9c>
10104694:	0106dcc0 	call	10106dcc <__multadd>
10104698:	a00b883a 	mov	r5,r20
1010469c:	000f883a 	mov	r7,zero
101046a0:	01800284 	movi	r6,10
101046a4:	e009883a 	mov	r4,fp
101046a8:	1023883a 	mov	r17,r2
101046ac:	0106dcc0 	call	10106dcc <__multadd>
101046b0:	1029883a 	mov	r20,r2
101046b4:	b027883a 	mov	r19,r22
101046b8:	003fc006 	br	101045bc <__alt_data_end+0xfffe45bc>
101046bc:	9011883a 	mov	r8,r18
101046c0:	00800e0e 	bge	zero,r2,101046fc <_dtoa_r+0xf70>
101046c4:	800b883a 	mov	r5,r16
101046c8:	01800044 	movi	r6,1
101046cc:	e009883a 	mov	r4,fp
101046d0:	da001715 	stw	r8,92(sp)
101046d4:	01075380 	call	10107538 <__lshift>
101046d8:	a80b883a 	mov	r5,r21
101046dc:	1009883a 	mov	r4,r2
101046e0:	1021883a 	mov	r16,r2
101046e4:	01076800 	call	10107680 <__mcmp>
101046e8:	da001717 	ldw	r8,92(sp)
101046ec:	0081960e 	bge	zero,r2,10104d48 <_dtoa_r+0x15bc>
101046f0:	00800e44 	movi	r2,57
101046f4:	40817026 	beq	r8,r2,10104cb8 <_dtoa_r+0x152c>
101046f8:	ba000c44 	addi	r8,r23,49
101046fc:	8825883a 	mov	r18,r17
10104700:	9dc00044 	addi	r23,r19,1
10104704:	9a000005 	stb	r8,0(r19)
10104708:	a023883a 	mov	r17,r20
1010470c:	dc000915 	stw	r16,36(sp)
10104710:	003f2406 	br	101043a4 <__alt_data_end+0xfffe43a4>
10104714:	00800e44 	movi	r2,57
10104718:	9011883a 	mov	r8,r18
1010471c:	90816626 	beq	r18,r2,10104cb8 <_dtoa_r+0x152c>
10104720:	05bff516 	blt	zero,r22,101046f8 <__alt_data_end+0xfffe46f8>
10104724:	003ff506 	br	101046fc <__alt_data_end+0xfffe46fc>
10104728:	0106dcc0 	call	10106dcc <__multadd>
1010472c:	1023883a 	mov	r17,r2
10104730:	1029883a 	mov	r20,r2
10104734:	003fdf06 	br	101046b4 <__alt_data_end+0xfffe46b4>
10104738:	e009883a 	mov	r4,fp
1010473c:	0106da40 	call	10106da4 <_Bfree>
10104740:	00800044 	movi	r2,1
10104744:	003fbc06 	br	10104638 <__alt_data_end+0xfffe4638>
10104748:	a80b883a 	mov	r5,r21
1010474c:	8009883a 	mov	r4,r16
10104750:	01076800 	call	10107680 <__mcmp>
10104754:	103edb0e 	bge	r2,zero,101042c4 <__alt_data_end+0xfffe42c4>
10104758:	800b883a 	mov	r5,r16
1010475c:	000f883a 	mov	r7,zero
10104760:	01800284 	movi	r6,10
10104764:	e009883a 	mov	r4,fp
10104768:	0106dcc0 	call	10106dcc <__multadd>
1010476c:	1021883a 	mov	r16,r2
10104770:	d8800517 	ldw	r2,20(sp)
10104774:	d8c00b17 	ldw	r3,44(sp)
10104778:	10bfffc4 	addi	r2,r2,-1
1010477c:	d8800515 	stw	r2,20(sp)
10104780:	183f761e 	bne	r3,zero,1010455c <__alt_data_end+0xfffe455c>
10104784:	d9000c17 	ldw	r4,48(sp)
10104788:	0101730e 	bge	zero,r4,10104d58 <_dtoa_r+0x15cc>
1010478c:	d9000615 	stw	r4,24(sp)
10104790:	003ed006 	br	101042d4 <__alt_data_end+0xfffe42d4>
10104794:	00800084 	movi	r2,2
10104798:	3081861e 	bne	r6,r2,10104db4 <_dtoa_r+0x1628>
1010479c:	d8000b15 	stw	zero,44(sp)
101047a0:	003f3c06 	br	10104494 <__alt_data_end+0xfffe4494>
101047a4:	dc000917 	ldw	r16,36(sp)
101047a8:	003e9206 	br	101041f4 <__alt_data_end+0xfffe41f4>
101047ac:	d9c00317 	ldw	r7,12(sp)
101047b0:	00800084 	movi	r2,2
101047b4:	11fec50e 	bge	r2,r7,101042cc <__alt_data_end+0xfffe42cc>
101047b8:	d9000617 	ldw	r4,24(sp)
101047bc:	20013c1e 	bne	r4,zero,10104cb0 <_dtoa_r+0x1524>
101047c0:	a80b883a 	mov	r5,r21
101047c4:	000f883a 	mov	r7,zero
101047c8:	01800144 	movi	r6,5
101047cc:	e009883a 	mov	r4,fp
101047d0:	0106dcc0 	call	10106dcc <__multadd>
101047d4:	100b883a 	mov	r5,r2
101047d8:	8009883a 	mov	r4,r16
101047dc:	102b883a 	mov	r21,r2
101047e0:	01076800 	call	10107680 <__mcmp>
101047e4:	dc000915 	stw	r16,36(sp)
101047e8:	00bf410e 	bge	zero,r2,101044f0 <__alt_data_end+0xfffe44f0>
101047ec:	d9c00717 	ldw	r7,28(sp)
101047f0:	00800c44 	movi	r2,49
101047f4:	38800005 	stb	r2,0(r7)
101047f8:	d8800517 	ldw	r2,20(sp)
101047fc:	3dc00044 	addi	r23,r7,1
10104800:	10800044 	addi	r2,r2,1
10104804:	d8800515 	stw	r2,20(sp)
10104808:	003f3d06 	br	10104500 <__alt_data_end+0xfffe4500>
1010480c:	d9800517 	ldw	r6,20(sp)
10104810:	d9c00717 	ldw	r7,28(sp)
10104814:	00800c44 	movi	r2,49
10104818:	31800044 	addi	r6,r6,1
1010481c:	d9800515 	stw	r6,20(sp)
10104820:	38800005 	stb	r2,0(r7)
10104824:	003edf06 	br	101043a4 <__alt_data_end+0xfffe43a4>
10104828:	d8000b15 	stw	zero,44(sp)
1010482c:	003c9f06 	br	10103aac <__alt_data_end+0xfffe3aac>
10104830:	903e7e1e 	bne	r18,zero,1010422c <__alt_data_end+0xfffe422c>
10104834:	00800434 	movhi	r2,16
10104838:	10bfffc4 	addi	r2,r2,-1
1010483c:	9884703a 	and	r2,r19,r2
10104840:	1000ea1e 	bne	r2,zero,10104bec <_dtoa_r+0x1460>
10104844:	9cdffc2c 	andhi	r19,r19,32752
10104848:	9800e826 	beq	r19,zero,10104bec <_dtoa_r+0x1460>
1010484c:	d9c00817 	ldw	r7,32(sp)
10104850:	b5800044 	addi	r22,r22,1
10104854:	04c00044 	movi	r19,1
10104858:	39c00044 	addi	r7,r7,1
1010485c:	d9c00815 	stw	r7,32(sp)
10104860:	d8800d17 	ldw	r2,52(sp)
10104864:	103e721e 	bne	r2,zero,10104230 <__alt_data_end+0xfffe4230>
10104868:	00800044 	movi	r2,1
1010486c:	003e7906 	br	10104254 <__alt_data_end+0xfffe4254>
10104870:	8009883a 	mov	r4,r16
10104874:	010d8b80 	call	1010d8b8 <__floatsidf>
10104878:	d9800f17 	ldw	r6,60(sp)
1010487c:	d9c01017 	ldw	r7,64(sp)
10104880:	1009883a 	mov	r4,r2
10104884:	180b883a 	mov	r5,r3
10104888:	010c6d00 	call	1010c6d0 <__muldf3>
1010488c:	000d883a 	mov	r6,zero
10104890:	01d00734 	movhi	r7,16412
10104894:	1009883a 	mov	r4,r2
10104898:	180b883a 	mov	r5,r3
1010489c:	010b1fc0 	call	1010b1fc <__adddf3>
101048a0:	047f3034 	movhi	r17,64704
101048a4:	1021883a 	mov	r16,r2
101048a8:	1c63883a 	add	r17,r3,r17
101048ac:	d9000f17 	ldw	r4,60(sp)
101048b0:	d9401017 	ldw	r5,64(sp)
101048b4:	000d883a 	mov	r6,zero
101048b8:	01d00534 	movhi	r7,16404
101048bc:	010cf3c0 	call	1010cf3c <__subdf3>
101048c0:	800d883a 	mov	r6,r16
101048c4:	880f883a 	mov	r7,r17
101048c8:	1009883a 	mov	r4,r2
101048cc:	180b883a 	mov	r5,r3
101048d0:	102b883a 	mov	r21,r2
101048d4:	1829883a 	mov	r20,r3
101048d8:	010c5000 	call	1010c500 <__gedf2>
101048dc:	00806c16 	blt	zero,r2,10104a90 <_dtoa_r+0x1304>
101048e0:	89e0003c 	xorhi	r7,r17,32768
101048e4:	800d883a 	mov	r6,r16
101048e8:	a809883a 	mov	r4,r21
101048ec:	a00b883a 	mov	r5,r20
101048f0:	010c5dc0 	call	1010c5dc <__ledf2>
101048f4:	103d7e0e 	bge	r2,zero,10103ef0 <__alt_data_end+0xfffe3ef0>
101048f8:	002b883a 	mov	r21,zero
101048fc:	0023883a 	mov	r17,zero
10104900:	003efb06 	br	101044f0 <__alt_data_end+0xfffe44f0>
10104904:	d8800717 	ldw	r2,28(sp)
10104908:	003bd006 	br	1010384c <__alt_data_end+0xfffe384c>
1010490c:	d9000a17 	ldw	r4,40(sp)
10104910:	d9800d17 	ldw	r6,52(sp)
10104914:	dd400a15 	stw	r21,40(sp)
10104918:	a905c83a 	sub	r2,r21,r4
1010491c:	308d883a 	add	r6,r6,r2
10104920:	d9800d15 	stw	r6,52(sp)
10104924:	002b883a 	mov	r21,zero
10104928:	003e0606 	br	10104144 <__alt_data_end+0xfffe4144>
1010492c:	9023883a 	mov	r17,r18
10104930:	9829883a 	mov	r20,r19
10104934:	04000084 	movi	r16,2
10104938:	003c9206 	br	10103b84 <__alt_data_end+0xfffe3b84>
1010493c:	04000044 	movi	r16,1
10104940:	dc000c15 	stw	r16,48(sp)
10104944:	dc000615 	stw	r16,24(sp)
10104948:	dc002215 	stw	r16,136(sp)
1010494c:	e0001115 	stw	zero,68(fp)
10104950:	000b883a 	mov	r5,zero
10104954:	003c6906 	br	10103afc <__alt_data_end+0xfffe3afc>
10104958:	3021883a 	mov	r16,r6
1010495c:	003ffb06 	br	1010494c <__alt_data_end+0xfffe494c>
10104960:	1000021e 	bne	r2,zero,1010496c <_dtoa_r+0x11e0>
10104964:	4200004c 	andi	r8,r8,1
10104968:	403e7d1e 	bne	r8,zero,10104360 <__alt_data_end+0xfffe4360>
1010496c:	01000c04 	movi	r4,48
10104970:	00000106 	br	10104978 <_dtoa_r+0x11ec>
10104974:	102f883a 	mov	r23,r2
10104978:	b8bfffc4 	addi	r2,r23,-1
1010497c:	10c00007 	ldb	r3,0(r2)
10104980:	193ffc26 	beq	r3,r4,10104974 <__alt_data_end+0xfffe4974>
10104984:	003e8706 	br	101043a4 <__alt_data_end+0xfffe43a4>
10104988:	d8800517 	ldw	r2,20(sp)
1010498c:	00a3c83a 	sub	r17,zero,r2
10104990:	8800a426 	beq	r17,zero,10104c24 <_dtoa_r+0x1498>
10104994:	888003cc 	andi	r2,r17,15
10104998:	100490fa 	slli	r2,r2,3
1010499c:	00c40474 	movhi	r3,4113
101049a0:	18c1e904 	addi	r3,r3,1956
101049a4:	1885883a 	add	r2,r3,r2
101049a8:	11800017 	ldw	r6,0(r2)
101049ac:	11c00117 	ldw	r7,4(r2)
101049b0:	9009883a 	mov	r4,r18
101049b4:	980b883a 	mov	r5,r19
101049b8:	8823d13a 	srai	r17,r17,4
101049bc:	010c6d00 	call	1010c6d0 <__muldf3>
101049c0:	d8800f15 	stw	r2,60(sp)
101049c4:	d8c01015 	stw	r3,64(sp)
101049c8:	8800e826 	beq	r17,zero,10104d6c <_dtoa_r+0x15e0>
101049cc:	05040474 	movhi	r20,4113
101049d0:	a501df04 	addi	r20,r20,1916
101049d4:	04000084 	movi	r16,2
101049d8:	8980004c 	andi	r6,r17,1
101049dc:	1009883a 	mov	r4,r2
101049e0:	8823d07a 	srai	r17,r17,1
101049e4:	180b883a 	mov	r5,r3
101049e8:	30000426 	beq	r6,zero,101049fc <_dtoa_r+0x1270>
101049ec:	a1800017 	ldw	r6,0(r20)
101049f0:	a1c00117 	ldw	r7,4(r20)
101049f4:	84000044 	addi	r16,r16,1
101049f8:	010c6d00 	call	1010c6d0 <__muldf3>
101049fc:	a5000204 	addi	r20,r20,8
10104a00:	883ff51e 	bne	r17,zero,101049d8 <__alt_data_end+0xfffe49d8>
10104a04:	d8800f15 	stw	r2,60(sp)
10104a08:	d8c01015 	stw	r3,64(sp)
10104a0c:	003c7606 	br	10103be8 <__alt_data_end+0xfffe3be8>
10104a10:	00c00c04 	movi	r3,48
10104a14:	10c00005 	stb	r3,0(r2)
10104a18:	d8c00517 	ldw	r3,20(sp)
10104a1c:	bd3fffc3 	ldbu	r20,-1(r23)
10104a20:	18c00044 	addi	r3,r3,1
10104a24:	d8c00515 	stw	r3,20(sp)
10104a28:	003db906 	br	10104110 <__alt_data_end+0xfffe4110>
10104a2c:	89400117 	ldw	r5,4(r17)
10104a30:	e009883a 	mov	r4,fp
10104a34:	0106cfc0 	call	10106cfc <_Balloc>
10104a38:	89800417 	ldw	r6,16(r17)
10104a3c:	89400304 	addi	r5,r17,12
10104a40:	11000304 	addi	r4,r2,12
10104a44:	31800084 	addi	r6,r6,2
10104a48:	318d883a 	add	r6,r6,r6
10104a4c:	318d883a 	add	r6,r6,r6
10104a50:	1027883a 	mov	r19,r2
10104a54:	0100d3c0 	call	10100d3c <memcpy>
10104a58:	01800044 	movi	r6,1
10104a5c:	980b883a 	mov	r5,r19
10104a60:	e009883a 	mov	r4,fp
10104a64:	01075380 	call	10107538 <__lshift>
10104a68:	1029883a 	mov	r20,r2
10104a6c:	003ecc06 	br	101045a0 <__alt_data_end+0xfffe45a0>
10104a70:	00800e44 	movi	r2,57
10104a74:	90809026 	beq	r18,r2,10104cb8 <_dtoa_r+0x152c>
10104a78:	92000044 	addi	r8,r18,1
10104a7c:	003f1f06 	br	101046fc <__alt_data_end+0xfffe46fc>
10104a80:	9011883a 	mov	r8,r18
10104a84:	8825883a 	mov	r18,r17
10104a88:	a023883a 	mov	r17,r20
10104a8c:	003e2906 	br	10104334 <__alt_data_end+0xfffe4334>
10104a90:	002b883a 	mov	r21,zero
10104a94:	0023883a 	mov	r17,zero
10104a98:	003f5406 	br	101047ec <__alt_data_end+0xfffe47ec>
10104a9c:	61bfffc4 	addi	r6,r12,-1
10104aa0:	300490fa 	slli	r2,r6,3
10104aa4:	00c40474 	movhi	r3,4113
10104aa8:	18c1e904 	addi	r3,r3,1956
10104aac:	1885883a 	add	r2,r3,r2
10104ab0:	11000017 	ldw	r4,0(r2)
10104ab4:	11400117 	ldw	r5,4(r2)
10104ab8:	d8800717 	ldw	r2,28(sp)
10104abc:	880f883a 	mov	r7,r17
10104ac0:	d9801215 	stw	r6,72(sp)
10104ac4:	800d883a 	mov	r6,r16
10104ac8:	db001615 	stw	r12,88(sp)
10104acc:	15c00044 	addi	r23,r2,1
10104ad0:	010c6d00 	call	1010c6d0 <__muldf3>
10104ad4:	d9401017 	ldw	r5,64(sp)
10104ad8:	d9000f17 	ldw	r4,60(sp)
10104adc:	d8c01515 	stw	r3,84(sp)
10104ae0:	d8801415 	stw	r2,80(sp)
10104ae4:	010d8380 	call	1010d838 <__fixdfsi>
10104ae8:	1009883a 	mov	r4,r2
10104aec:	1021883a 	mov	r16,r2
10104af0:	010d8b80 	call	1010d8b8 <__floatsidf>
10104af4:	d9000f17 	ldw	r4,60(sp)
10104af8:	d9401017 	ldw	r5,64(sp)
10104afc:	100d883a 	mov	r6,r2
10104b00:	180f883a 	mov	r7,r3
10104b04:	010cf3c0 	call	1010cf3c <__subdf3>
10104b08:	1829883a 	mov	r20,r3
10104b0c:	d8c00717 	ldw	r3,28(sp)
10104b10:	84000c04 	addi	r16,r16,48
10104b14:	1023883a 	mov	r17,r2
10104b18:	1c000005 	stb	r16,0(r3)
10104b1c:	db001617 	ldw	r12,88(sp)
10104b20:	00800044 	movi	r2,1
10104b24:	60802226 	beq	r12,r2,10104bb0 <_dtoa_r+0x1424>
10104b28:	d9c00717 	ldw	r7,28(sp)
10104b2c:	8805883a 	mov	r2,r17
10104b30:	b82b883a 	mov	r21,r23
10104b34:	3b19883a 	add	r12,r7,r12
10104b38:	6023883a 	mov	r17,r12
10104b3c:	a007883a 	mov	r3,r20
10104b40:	dc800f15 	stw	r18,60(sp)
10104b44:	000d883a 	mov	r6,zero
10104b48:	01d00934 	movhi	r7,16420
10104b4c:	1009883a 	mov	r4,r2
10104b50:	180b883a 	mov	r5,r3
10104b54:	010c6d00 	call	1010c6d0 <__muldf3>
10104b58:	180b883a 	mov	r5,r3
10104b5c:	1009883a 	mov	r4,r2
10104b60:	1829883a 	mov	r20,r3
10104b64:	1025883a 	mov	r18,r2
10104b68:	010d8380 	call	1010d838 <__fixdfsi>
10104b6c:	1009883a 	mov	r4,r2
10104b70:	1021883a 	mov	r16,r2
10104b74:	010d8b80 	call	1010d8b8 <__floatsidf>
10104b78:	100d883a 	mov	r6,r2
10104b7c:	180f883a 	mov	r7,r3
10104b80:	9009883a 	mov	r4,r18
10104b84:	a00b883a 	mov	r5,r20
10104b88:	84000c04 	addi	r16,r16,48
10104b8c:	010cf3c0 	call	1010cf3c <__subdf3>
10104b90:	ad400044 	addi	r21,r21,1
10104b94:	ac3fffc5 	stb	r16,-1(r21)
10104b98:	ac7fea1e 	bne	r21,r17,10104b44 <__alt_data_end+0xfffe4b44>
10104b9c:	1023883a 	mov	r17,r2
10104ba0:	d8801217 	ldw	r2,72(sp)
10104ba4:	dc800f17 	ldw	r18,60(sp)
10104ba8:	1829883a 	mov	r20,r3
10104bac:	b8af883a 	add	r23,r23,r2
10104bb0:	d9001417 	ldw	r4,80(sp)
10104bb4:	d9401517 	ldw	r5,84(sp)
10104bb8:	000d883a 	mov	r6,zero
10104bbc:	01cff834 	movhi	r7,16352
10104bc0:	010b1fc0 	call	1010b1fc <__adddf3>
10104bc4:	880d883a 	mov	r6,r17
10104bc8:	a00f883a 	mov	r7,r20
10104bcc:	1009883a 	mov	r4,r2
10104bd0:	180b883a 	mov	r5,r3
10104bd4:	010c5dc0 	call	1010c5dc <__ledf2>
10104bd8:	10003e0e 	bge	r2,zero,10104cd4 <_dtoa_r+0x1548>
10104bdc:	d9001317 	ldw	r4,76(sp)
10104be0:	bd3fffc3 	ldbu	r20,-1(r23)
10104be4:	d9000515 	stw	r4,20(sp)
10104be8:	003d3b06 	br	101040d8 <__alt_data_end+0xfffe40d8>
10104bec:	0027883a 	mov	r19,zero
10104bf0:	003f1b06 	br	10104860 <__alt_data_end+0xfffe4860>
10104bf4:	d8800817 	ldw	r2,32(sp)
10104bf8:	11e9c83a 	sub	r20,r2,r7
10104bfc:	0005883a 	mov	r2,zero
10104c00:	003d5406 	br	10104154 <__alt_data_end+0xfffe4154>
10104c04:	00800044 	movi	r2,1
10104c08:	003dc706 	br	10104328 <__alt_data_end+0xfffe4328>
10104c0c:	d8c00217 	ldw	r3,8(sp)
10104c10:	00800d84 	movi	r2,54
10104c14:	dd400a17 	ldw	r21,40(sp)
10104c18:	10c5c83a 	sub	r2,r2,r3
10104c1c:	dd000817 	ldw	r20,32(sp)
10104c20:	003d4c06 	br	10104154 <__alt_data_end+0xfffe4154>
10104c24:	dc800f15 	stw	r18,60(sp)
10104c28:	dcc01015 	stw	r19,64(sp)
10104c2c:	04000084 	movi	r16,2
10104c30:	003bed06 	br	10103be8 <__alt_data_end+0xfffe3be8>
10104c34:	d9000617 	ldw	r4,24(sp)
10104c38:	203f0d26 	beq	r4,zero,10104870 <__alt_data_end+0xfffe4870>
10104c3c:	d9800c17 	ldw	r6,48(sp)
10104c40:	01bcab0e 	bge	zero,r6,10103ef0 <__alt_data_end+0xfffe3ef0>
10104c44:	d9401017 	ldw	r5,64(sp)
10104c48:	d9000f17 	ldw	r4,60(sp)
10104c4c:	000d883a 	mov	r6,zero
10104c50:	01d00934 	movhi	r7,16420
10104c54:	010c6d00 	call	1010c6d0 <__muldf3>
10104c58:	81000044 	addi	r4,r16,1
10104c5c:	d8800f15 	stw	r2,60(sp)
10104c60:	d8c01015 	stw	r3,64(sp)
10104c64:	010d8b80 	call	1010d8b8 <__floatsidf>
10104c68:	d9800f17 	ldw	r6,60(sp)
10104c6c:	d9c01017 	ldw	r7,64(sp)
10104c70:	1009883a 	mov	r4,r2
10104c74:	180b883a 	mov	r5,r3
10104c78:	010c6d00 	call	1010c6d0 <__muldf3>
10104c7c:	01d00734 	movhi	r7,16412
10104c80:	000d883a 	mov	r6,zero
10104c84:	1009883a 	mov	r4,r2
10104c88:	180b883a 	mov	r5,r3
10104c8c:	010b1fc0 	call	1010b1fc <__adddf3>
10104c90:	d9c00517 	ldw	r7,20(sp)
10104c94:	047f3034 	movhi	r17,64704
10104c98:	1021883a 	mov	r16,r2
10104c9c:	39ffffc4 	addi	r7,r7,-1
10104ca0:	d9c01315 	stw	r7,76(sp)
10104ca4:	1c63883a 	add	r17,r3,r17
10104ca8:	db000c17 	ldw	r12,48(sp)
10104cac:	003bea06 	br	10103c58 <__alt_data_end+0xfffe3c58>
10104cb0:	dc000915 	stw	r16,36(sp)
10104cb4:	003e0e06 	br	101044f0 <__alt_data_end+0xfffe44f0>
10104cb8:	01000e44 	movi	r4,57
10104cbc:	8825883a 	mov	r18,r17
10104cc0:	9dc00044 	addi	r23,r19,1
10104cc4:	99000005 	stb	r4,0(r19)
10104cc8:	a023883a 	mov	r17,r20
10104ccc:	dc000915 	stw	r16,36(sp)
10104cd0:	003da406 	br	10104364 <__alt_data_end+0xfffe4364>
10104cd4:	d9801417 	ldw	r6,80(sp)
10104cd8:	d9c01517 	ldw	r7,84(sp)
10104cdc:	0009883a 	mov	r4,zero
10104ce0:	014ff834 	movhi	r5,16352
10104ce4:	010cf3c0 	call	1010cf3c <__subdf3>
10104ce8:	880d883a 	mov	r6,r17
10104cec:	a00f883a 	mov	r7,r20
10104cf0:	1009883a 	mov	r4,r2
10104cf4:	180b883a 	mov	r5,r3
10104cf8:	010c5000 	call	1010c500 <__gedf2>
10104cfc:	00bc7c0e 	bge	zero,r2,10103ef0 <__alt_data_end+0xfffe3ef0>
10104d00:	01000c04 	movi	r4,48
10104d04:	00000106 	br	10104d0c <_dtoa_r+0x1580>
10104d08:	102f883a 	mov	r23,r2
10104d0c:	b8bfffc4 	addi	r2,r23,-1
10104d10:	10c00007 	ldb	r3,0(r2)
10104d14:	193ffc26 	beq	r3,r4,10104d08 <__alt_data_end+0xfffe4d08>
10104d18:	d9801317 	ldw	r6,76(sp)
10104d1c:	d9800515 	stw	r6,20(sp)
10104d20:	003c4406 	br	10103e34 <__alt_data_end+0xfffe3e34>
10104d24:	d9801317 	ldw	r6,76(sp)
10104d28:	d9800515 	stw	r6,20(sp)
10104d2c:	003cea06 	br	101040d8 <__alt_data_end+0xfffe40d8>
10104d30:	dd800f17 	ldw	r22,60(sp)
10104d34:	dcc01017 	ldw	r19,64(sp)
10104d38:	dc801217 	ldw	r18,72(sp)
10104d3c:	003c6c06 	br	10103ef0 <__alt_data_end+0xfffe3ef0>
10104d40:	903e031e 	bne	r18,zero,10104550 <__alt_data_end+0xfffe4550>
10104d44:	003ebb06 	br	10104834 <__alt_data_end+0xfffe4834>
10104d48:	103e6c1e 	bne	r2,zero,101046fc <__alt_data_end+0xfffe46fc>
10104d4c:	4080004c 	andi	r2,r8,1
10104d50:	103e6a26 	beq	r2,zero,101046fc <__alt_data_end+0xfffe46fc>
10104d54:	003e6606 	br	101046f0 <__alt_data_end+0xfffe46f0>
10104d58:	d8c00317 	ldw	r3,12(sp)
10104d5c:	00800084 	movi	r2,2
10104d60:	10c02916 	blt	r2,r3,10104e08 <_dtoa_r+0x167c>
10104d64:	d9000c17 	ldw	r4,48(sp)
10104d68:	003e8806 	br	1010478c <__alt_data_end+0xfffe478c>
10104d6c:	04000084 	movi	r16,2
10104d70:	003b9d06 	br	10103be8 <__alt_data_end+0xfffe3be8>
10104d74:	d9001317 	ldw	r4,76(sp)
10104d78:	d9000515 	stw	r4,20(sp)
10104d7c:	003cd606 	br	101040d8 <__alt_data_end+0xfffe40d8>
10104d80:	d8801317 	ldw	r2,76(sp)
10104d84:	d8800515 	stw	r2,20(sp)
10104d88:	003c2a06 	br	10103e34 <__alt_data_end+0xfffe3e34>
10104d8c:	d9800317 	ldw	r6,12(sp)
10104d90:	00800084 	movi	r2,2
10104d94:	11801516 	blt	r2,r6,10104dec <_dtoa_r+0x1660>
10104d98:	d9c00c17 	ldw	r7,48(sp)
10104d9c:	d9c00615 	stw	r7,24(sp)
10104da0:	003df706 	br	10104580 <__alt_data_end+0xfffe4580>
10104da4:	193d3926 	beq	r3,r4,1010428c <__alt_data_end+0xfffe428c>
10104da8:	00c00f04 	movi	r3,60
10104dac:	1885c83a 	sub	r2,r3,r2
10104db0:	003ddf06 	br	10104530 <__alt_data_end+0xfffe4530>
10104db4:	e009883a 	mov	r4,fp
10104db8:	e0001115 	stw	zero,68(fp)
10104dbc:	000b883a 	mov	r5,zero
10104dc0:	0106cfc0 	call	10106cfc <_Balloc>
10104dc4:	d8800715 	stw	r2,28(sp)
10104dc8:	d8c00717 	ldw	r3,28(sp)
10104dcc:	00bfffc4 	movi	r2,-1
10104dd0:	01000044 	movi	r4,1
10104dd4:	d8800c15 	stw	r2,48(sp)
10104dd8:	e0c01015 	stw	r3,64(fp)
10104ddc:	d9000b15 	stw	r4,44(sp)
10104de0:	d8800615 	stw	r2,24(sp)
10104de4:	d8002215 	stw	zero,136(sp)
10104de8:	003c4106 	br	10103ef0 <__alt_data_end+0xfffe3ef0>
10104dec:	d8c00c17 	ldw	r3,48(sp)
10104df0:	d8c00615 	stw	r3,24(sp)
10104df4:	003e7006 	br	101047b8 <__alt_data_end+0xfffe47b8>
10104df8:	04400044 	movi	r17,1
10104dfc:	003b2006 	br	10103a80 <__alt_data_end+0xfffe3a80>
10104e00:	000b883a 	mov	r5,zero
10104e04:	003b3d06 	br	10103afc <__alt_data_end+0xfffe3afc>
10104e08:	d8800c17 	ldw	r2,48(sp)
10104e0c:	d8800615 	stw	r2,24(sp)
10104e10:	003e6906 	br	101047b8 <__alt_data_end+0xfffe47b8>

10104e14 <__sflush_r>:
10104e14:	2880030b 	ldhu	r2,12(r5)
10104e18:	defffb04 	addi	sp,sp,-20
10104e1c:	dcc00315 	stw	r19,12(sp)
10104e20:	dc400115 	stw	r17,4(sp)
10104e24:	dfc00415 	stw	ra,16(sp)
10104e28:	dc800215 	stw	r18,8(sp)
10104e2c:	dc000015 	stw	r16,0(sp)
10104e30:	10c0020c 	andi	r3,r2,8
10104e34:	2823883a 	mov	r17,r5
10104e38:	2027883a 	mov	r19,r4
10104e3c:	1800311e 	bne	r3,zero,10104f04 <__sflush_r+0xf0>
10104e40:	28c00117 	ldw	r3,4(r5)
10104e44:	10820014 	ori	r2,r2,2048
10104e48:	2880030d 	sth	r2,12(r5)
10104e4c:	00c04b0e 	bge	zero,r3,10104f7c <__sflush_r+0x168>
10104e50:	8a000a17 	ldw	r8,40(r17)
10104e54:	40002326 	beq	r8,zero,10104ee4 <__sflush_r+0xd0>
10104e58:	9c000017 	ldw	r16,0(r19)
10104e5c:	10c4000c 	andi	r3,r2,4096
10104e60:	98000015 	stw	zero,0(r19)
10104e64:	18004826 	beq	r3,zero,10104f88 <__sflush_r+0x174>
10104e68:	89801417 	ldw	r6,80(r17)
10104e6c:	10c0010c 	andi	r3,r2,4
10104e70:	18000626 	beq	r3,zero,10104e8c <__sflush_r+0x78>
10104e74:	88c00117 	ldw	r3,4(r17)
10104e78:	88800c17 	ldw	r2,48(r17)
10104e7c:	30cdc83a 	sub	r6,r6,r3
10104e80:	10000226 	beq	r2,zero,10104e8c <__sflush_r+0x78>
10104e84:	88800f17 	ldw	r2,60(r17)
10104e88:	308dc83a 	sub	r6,r6,r2
10104e8c:	89400717 	ldw	r5,28(r17)
10104e90:	000f883a 	mov	r7,zero
10104e94:	9809883a 	mov	r4,r19
10104e98:	403ee83a 	callr	r8
10104e9c:	00ffffc4 	movi	r3,-1
10104ea0:	10c04426 	beq	r2,r3,10104fb4 <__sflush_r+0x1a0>
10104ea4:	88c0030b 	ldhu	r3,12(r17)
10104ea8:	89000417 	ldw	r4,16(r17)
10104eac:	88000115 	stw	zero,4(r17)
10104eb0:	197dffcc 	andi	r5,r3,63487
10104eb4:	8940030d 	sth	r5,12(r17)
10104eb8:	89000015 	stw	r4,0(r17)
10104ebc:	18c4000c 	andi	r3,r3,4096
10104ec0:	18002c1e 	bne	r3,zero,10104f74 <__sflush_r+0x160>
10104ec4:	89400c17 	ldw	r5,48(r17)
10104ec8:	9c000015 	stw	r16,0(r19)
10104ecc:	28000526 	beq	r5,zero,10104ee4 <__sflush_r+0xd0>
10104ed0:	88801004 	addi	r2,r17,64
10104ed4:	28800226 	beq	r5,r2,10104ee0 <__sflush_r+0xcc>
10104ed8:	9809883a 	mov	r4,r19
10104edc:	01055900 	call	10105590 <_free_r>
10104ee0:	88000c15 	stw	zero,48(r17)
10104ee4:	0005883a 	mov	r2,zero
10104ee8:	dfc00417 	ldw	ra,16(sp)
10104eec:	dcc00317 	ldw	r19,12(sp)
10104ef0:	dc800217 	ldw	r18,8(sp)
10104ef4:	dc400117 	ldw	r17,4(sp)
10104ef8:	dc000017 	ldw	r16,0(sp)
10104efc:	dec00504 	addi	sp,sp,20
10104f00:	f800283a 	ret
10104f04:	2c800417 	ldw	r18,16(r5)
10104f08:	903ff626 	beq	r18,zero,10104ee4 <__alt_data_end+0xfffe4ee4>
10104f0c:	2c000017 	ldw	r16,0(r5)
10104f10:	108000cc 	andi	r2,r2,3
10104f14:	2c800015 	stw	r18,0(r5)
10104f18:	84a1c83a 	sub	r16,r16,r18
10104f1c:	1000131e 	bne	r2,zero,10104f6c <__sflush_r+0x158>
10104f20:	28800517 	ldw	r2,20(r5)
10104f24:	88800215 	stw	r2,8(r17)
10104f28:	04000316 	blt	zero,r16,10104f38 <__sflush_r+0x124>
10104f2c:	003fed06 	br	10104ee4 <__alt_data_end+0xfffe4ee4>
10104f30:	90a5883a 	add	r18,r18,r2
10104f34:	043feb0e 	bge	zero,r16,10104ee4 <__alt_data_end+0xfffe4ee4>
10104f38:	88800917 	ldw	r2,36(r17)
10104f3c:	89400717 	ldw	r5,28(r17)
10104f40:	800f883a 	mov	r7,r16
10104f44:	900d883a 	mov	r6,r18
10104f48:	9809883a 	mov	r4,r19
10104f4c:	103ee83a 	callr	r2
10104f50:	80a1c83a 	sub	r16,r16,r2
10104f54:	00bff616 	blt	zero,r2,10104f30 <__alt_data_end+0xfffe4f30>
10104f58:	88c0030b 	ldhu	r3,12(r17)
10104f5c:	00bfffc4 	movi	r2,-1
10104f60:	18c01014 	ori	r3,r3,64
10104f64:	88c0030d 	sth	r3,12(r17)
10104f68:	003fdf06 	br	10104ee8 <__alt_data_end+0xfffe4ee8>
10104f6c:	0005883a 	mov	r2,zero
10104f70:	003fec06 	br	10104f24 <__alt_data_end+0xfffe4f24>
10104f74:	88801415 	stw	r2,80(r17)
10104f78:	003fd206 	br	10104ec4 <__alt_data_end+0xfffe4ec4>
10104f7c:	28c00f17 	ldw	r3,60(r5)
10104f80:	00ffb316 	blt	zero,r3,10104e50 <__alt_data_end+0xfffe4e50>
10104f84:	003fd706 	br	10104ee4 <__alt_data_end+0xfffe4ee4>
10104f88:	89400717 	ldw	r5,28(r17)
10104f8c:	000d883a 	mov	r6,zero
10104f90:	01c00044 	movi	r7,1
10104f94:	9809883a 	mov	r4,r19
10104f98:	403ee83a 	callr	r8
10104f9c:	100d883a 	mov	r6,r2
10104fa0:	00bfffc4 	movi	r2,-1
10104fa4:	30801426 	beq	r6,r2,10104ff8 <__sflush_r+0x1e4>
10104fa8:	8880030b 	ldhu	r2,12(r17)
10104fac:	8a000a17 	ldw	r8,40(r17)
10104fb0:	003fae06 	br	10104e6c <__alt_data_end+0xfffe4e6c>
10104fb4:	98c00017 	ldw	r3,0(r19)
10104fb8:	183fba26 	beq	r3,zero,10104ea4 <__alt_data_end+0xfffe4ea4>
10104fbc:	01000744 	movi	r4,29
10104fc0:	19000626 	beq	r3,r4,10104fdc <__sflush_r+0x1c8>
10104fc4:	01000584 	movi	r4,22
10104fc8:	19000426 	beq	r3,r4,10104fdc <__sflush_r+0x1c8>
10104fcc:	88c0030b 	ldhu	r3,12(r17)
10104fd0:	18c01014 	ori	r3,r3,64
10104fd4:	88c0030d 	sth	r3,12(r17)
10104fd8:	003fc306 	br	10104ee8 <__alt_data_end+0xfffe4ee8>
10104fdc:	8880030b 	ldhu	r2,12(r17)
10104fe0:	88c00417 	ldw	r3,16(r17)
10104fe4:	88000115 	stw	zero,4(r17)
10104fe8:	10bdffcc 	andi	r2,r2,63487
10104fec:	8880030d 	sth	r2,12(r17)
10104ff0:	88c00015 	stw	r3,0(r17)
10104ff4:	003fb306 	br	10104ec4 <__alt_data_end+0xfffe4ec4>
10104ff8:	98800017 	ldw	r2,0(r19)
10104ffc:	103fea26 	beq	r2,zero,10104fa8 <__alt_data_end+0xfffe4fa8>
10105000:	00c00744 	movi	r3,29
10105004:	10c00226 	beq	r2,r3,10105010 <__sflush_r+0x1fc>
10105008:	00c00584 	movi	r3,22
1010500c:	10c0031e 	bne	r2,r3,1010501c <__sflush_r+0x208>
10105010:	9c000015 	stw	r16,0(r19)
10105014:	0005883a 	mov	r2,zero
10105018:	003fb306 	br	10104ee8 <__alt_data_end+0xfffe4ee8>
1010501c:	88c0030b 	ldhu	r3,12(r17)
10105020:	3005883a 	mov	r2,r6
10105024:	18c01014 	ori	r3,r3,64
10105028:	88c0030d 	sth	r3,12(r17)
1010502c:	003fae06 	br	10104ee8 <__alt_data_end+0xfffe4ee8>

10105030 <_fflush_r>:
10105030:	defffd04 	addi	sp,sp,-12
10105034:	dc000115 	stw	r16,4(sp)
10105038:	dfc00215 	stw	ra,8(sp)
1010503c:	2021883a 	mov	r16,r4
10105040:	20000226 	beq	r4,zero,1010504c <_fflush_r+0x1c>
10105044:	20800e17 	ldw	r2,56(r4)
10105048:	10000c26 	beq	r2,zero,1010507c <_fflush_r+0x4c>
1010504c:	2880030f 	ldh	r2,12(r5)
10105050:	1000051e 	bne	r2,zero,10105068 <_fflush_r+0x38>
10105054:	0005883a 	mov	r2,zero
10105058:	dfc00217 	ldw	ra,8(sp)
1010505c:	dc000117 	ldw	r16,4(sp)
10105060:	dec00304 	addi	sp,sp,12
10105064:	f800283a 	ret
10105068:	8009883a 	mov	r4,r16
1010506c:	dfc00217 	ldw	ra,8(sp)
10105070:	dc000117 	ldw	r16,4(sp)
10105074:	dec00304 	addi	sp,sp,12
10105078:	0104e141 	jmpi	10104e14 <__sflush_r>
1010507c:	d9400015 	stw	r5,0(sp)
10105080:	010541c0 	call	1010541c <__sinit>
10105084:	d9400017 	ldw	r5,0(sp)
10105088:	003ff006 	br	1010504c <__alt_data_end+0xfffe504c>

1010508c <fflush>:
1010508c:	20000526 	beq	r4,zero,101050a4 <fflush+0x18>
10105090:	00840474 	movhi	r2,4113
10105094:	10892904 	addi	r2,r2,9380
10105098:	200b883a 	mov	r5,r4
1010509c:	11000017 	ldw	r4,0(r2)
101050a0:	01050301 	jmpi	10105030 <_fflush_r>
101050a4:	00840474 	movhi	r2,4113
101050a8:	10892804 	addi	r2,r2,9376
101050ac:	11000017 	ldw	r4,0(r2)
101050b0:	01440434 	movhi	r5,4112
101050b4:	29540c04 	addi	r5,r5,20528
101050b8:	0105e2c1 	jmpi	10105e2c <_fwalk_reent>

101050bc <__fp_unlock>:
101050bc:	0005883a 	mov	r2,zero
101050c0:	f800283a 	ret

101050c4 <_cleanup_r>:
101050c4:	01440474 	movhi	r5,4113
101050c8:	2967a004 	addi	r5,r5,-24960
101050cc:	0105e2c1 	jmpi	10105e2c <_fwalk_reent>

101050d0 <__sinit.part.1>:
101050d0:	defff704 	addi	sp,sp,-36
101050d4:	00c40434 	movhi	r3,4112
101050d8:	dfc00815 	stw	ra,32(sp)
101050dc:	ddc00715 	stw	r23,28(sp)
101050e0:	dd800615 	stw	r22,24(sp)
101050e4:	dd400515 	stw	r21,20(sp)
101050e8:	dd000415 	stw	r20,16(sp)
101050ec:	dcc00315 	stw	r19,12(sp)
101050f0:	dc800215 	stw	r18,8(sp)
101050f4:	dc400115 	stw	r17,4(sp)
101050f8:	dc000015 	stw	r16,0(sp)
101050fc:	18d43104 	addi	r3,r3,20676
10105100:	24000117 	ldw	r16,4(r4)
10105104:	20c00f15 	stw	r3,60(r4)
10105108:	2080bb04 	addi	r2,r4,748
1010510c:	00c000c4 	movi	r3,3
10105110:	20c0b915 	stw	r3,740(r4)
10105114:	2080ba15 	stw	r2,744(r4)
10105118:	2000b815 	stw	zero,736(r4)
1010511c:	05c00204 	movi	r23,8
10105120:	00800104 	movi	r2,4
10105124:	2025883a 	mov	r18,r4
10105128:	b80d883a 	mov	r6,r23
1010512c:	81001704 	addi	r4,r16,92
10105130:	000b883a 	mov	r5,zero
10105134:	80000015 	stw	zero,0(r16)
10105138:	80000115 	stw	zero,4(r16)
1010513c:	80000215 	stw	zero,8(r16)
10105140:	8080030d 	sth	r2,12(r16)
10105144:	80001915 	stw	zero,100(r16)
10105148:	8000038d 	sth	zero,14(r16)
1010514c:	80000415 	stw	zero,16(r16)
10105150:	80000515 	stw	zero,20(r16)
10105154:	80000615 	stw	zero,24(r16)
10105158:	0106bd40 	call	10106bd4 <memset>
1010515c:	05840474 	movhi	r22,4113
10105160:	94400217 	ldw	r17,8(r18)
10105164:	05440474 	movhi	r21,4113
10105168:	05040474 	movhi	r20,4113
1010516c:	04c40474 	movhi	r19,4113
10105170:	b5a0f804 	addi	r22,r22,-31776
10105174:	ad610f04 	addi	r21,r21,-31684
10105178:	a5212e04 	addi	r20,r20,-31560
1010517c:	9ce14504 	addi	r19,r19,-31468
10105180:	85800815 	stw	r22,32(r16)
10105184:	85400915 	stw	r21,36(r16)
10105188:	85000a15 	stw	r20,40(r16)
1010518c:	84c00b15 	stw	r19,44(r16)
10105190:	84000715 	stw	r16,28(r16)
10105194:	00800284 	movi	r2,10
10105198:	8880030d 	sth	r2,12(r17)
1010519c:	00800044 	movi	r2,1
101051a0:	b80d883a 	mov	r6,r23
101051a4:	89001704 	addi	r4,r17,92
101051a8:	000b883a 	mov	r5,zero
101051ac:	88000015 	stw	zero,0(r17)
101051b0:	88000115 	stw	zero,4(r17)
101051b4:	88000215 	stw	zero,8(r17)
101051b8:	88001915 	stw	zero,100(r17)
101051bc:	8880038d 	sth	r2,14(r17)
101051c0:	88000415 	stw	zero,16(r17)
101051c4:	88000515 	stw	zero,20(r17)
101051c8:	88000615 	stw	zero,24(r17)
101051cc:	0106bd40 	call	10106bd4 <memset>
101051d0:	94000317 	ldw	r16,12(r18)
101051d4:	00800484 	movi	r2,18
101051d8:	8c400715 	stw	r17,28(r17)
101051dc:	8d800815 	stw	r22,32(r17)
101051e0:	8d400915 	stw	r21,36(r17)
101051e4:	8d000a15 	stw	r20,40(r17)
101051e8:	8cc00b15 	stw	r19,44(r17)
101051ec:	8080030d 	sth	r2,12(r16)
101051f0:	00800084 	movi	r2,2
101051f4:	80000015 	stw	zero,0(r16)
101051f8:	80000115 	stw	zero,4(r16)
101051fc:	80000215 	stw	zero,8(r16)
10105200:	80001915 	stw	zero,100(r16)
10105204:	8080038d 	sth	r2,14(r16)
10105208:	80000415 	stw	zero,16(r16)
1010520c:	80000515 	stw	zero,20(r16)
10105210:	80000615 	stw	zero,24(r16)
10105214:	b80d883a 	mov	r6,r23
10105218:	000b883a 	mov	r5,zero
1010521c:	81001704 	addi	r4,r16,92
10105220:	0106bd40 	call	10106bd4 <memset>
10105224:	00800044 	movi	r2,1
10105228:	84000715 	stw	r16,28(r16)
1010522c:	85800815 	stw	r22,32(r16)
10105230:	85400915 	stw	r21,36(r16)
10105234:	85000a15 	stw	r20,40(r16)
10105238:	84c00b15 	stw	r19,44(r16)
1010523c:	90800e15 	stw	r2,56(r18)
10105240:	dfc00817 	ldw	ra,32(sp)
10105244:	ddc00717 	ldw	r23,28(sp)
10105248:	dd800617 	ldw	r22,24(sp)
1010524c:	dd400517 	ldw	r21,20(sp)
10105250:	dd000417 	ldw	r20,16(sp)
10105254:	dcc00317 	ldw	r19,12(sp)
10105258:	dc800217 	ldw	r18,8(sp)
1010525c:	dc400117 	ldw	r17,4(sp)
10105260:	dc000017 	ldw	r16,0(sp)
10105264:	dec00904 	addi	sp,sp,36
10105268:	f800283a 	ret

1010526c <__fp_lock>:
1010526c:	0005883a 	mov	r2,zero
10105270:	f800283a 	ret

10105274 <__sfmoreglue>:
10105274:	defffc04 	addi	sp,sp,-16
10105278:	dc800215 	stw	r18,8(sp)
1010527c:	2825883a 	mov	r18,r5
10105280:	dc000015 	stw	r16,0(sp)
10105284:	01401a04 	movi	r5,104
10105288:	2021883a 	mov	r16,r4
1010528c:	913fffc4 	addi	r4,r18,-1
10105290:	dfc00315 	stw	ra,12(sp)
10105294:	dc400115 	stw	r17,4(sp)
10105298:	0100d140 	call	10100d14 <__mulsi3>
1010529c:	8009883a 	mov	r4,r16
101052a0:	11401d04 	addi	r5,r2,116
101052a4:	1023883a 	mov	r17,r2
101052a8:	01061880 	call	10106188 <_malloc_r>
101052ac:	1021883a 	mov	r16,r2
101052b0:	10000726 	beq	r2,zero,101052d0 <__sfmoreglue+0x5c>
101052b4:	11000304 	addi	r4,r2,12
101052b8:	10000015 	stw	zero,0(r2)
101052bc:	14800115 	stw	r18,4(r2)
101052c0:	11000215 	stw	r4,8(r2)
101052c4:	89801a04 	addi	r6,r17,104
101052c8:	000b883a 	mov	r5,zero
101052cc:	0106bd40 	call	10106bd4 <memset>
101052d0:	8005883a 	mov	r2,r16
101052d4:	dfc00317 	ldw	ra,12(sp)
101052d8:	dc800217 	ldw	r18,8(sp)
101052dc:	dc400117 	ldw	r17,4(sp)
101052e0:	dc000017 	ldw	r16,0(sp)
101052e4:	dec00404 	addi	sp,sp,16
101052e8:	f800283a 	ret

101052ec <__sfp>:
101052ec:	defffb04 	addi	sp,sp,-20
101052f0:	dc000015 	stw	r16,0(sp)
101052f4:	04040474 	movhi	r16,4113
101052f8:	84092804 	addi	r16,r16,9376
101052fc:	dcc00315 	stw	r19,12(sp)
10105300:	2027883a 	mov	r19,r4
10105304:	81000017 	ldw	r4,0(r16)
10105308:	dfc00415 	stw	ra,16(sp)
1010530c:	dc800215 	stw	r18,8(sp)
10105310:	20800e17 	ldw	r2,56(r4)
10105314:	dc400115 	stw	r17,4(sp)
10105318:	1000021e 	bne	r2,zero,10105324 <__sfp+0x38>
1010531c:	01050d00 	call	101050d0 <__sinit.part.1>
10105320:	81000017 	ldw	r4,0(r16)
10105324:	2480b804 	addi	r18,r4,736
10105328:	047fffc4 	movi	r17,-1
1010532c:	91000117 	ldw	r4,4(r18)
10105330:	94000217 	ldw	r16,8(r18)
10105334:	213fffc4 	addi	r4,r4,-1
10105338:	20000a16 	blt	r4,zero,10105364 <__sfp+0x78>
1010533c:	8080030f 	ldh	r2,12(r16)
10105340:	10000c26 	beq	r2,zero,10105374 <__sfp+0x88>
10105344:	80c01d04 	addi	r3,r16,116
10105348:	00000206 	br	10105354 <__sfp+0x68>
1010534c:	18bfe60f 	ldh	r2,-104(r3)
10105350:	10000826 	beq	r2,zero,10105374 <__sfp+0x88>
10105354:	213fffc4 	addi	r4,r4,-1
10105358:	1c3ffd04 	addi	r16,r3,-12
1010535c:	18c01a04 	addi	r3,r3,104
10105360:	247ffa1e 	bne	r4,r17,1010534c <__alt_data_end+0xfffe534c>
10105364:	90800017 	ldw	r2,0(r18)
10105368:	10001d26 	beq	r2,zero,101053e0 <__sfp+0xf4>
1010536c:	1025883a 	mov	r18,r2
10105370:	003fee06 	br	1010532c <__alt_data_end+0xfffe532c>
10105374:	00bfffc4 	movi	r2,-1
10105378:	8080038d 	sth	r2,14(r16)
1010537c:	00800044 	movi	r2,1
10105380:	8080030d 	sth	r2,12(r16)
10105384:	80001915 	stw	zero,100(r16)
10105388:	80000015 	stw	zero,0(r16)
1010538c:	80000215 	stw	zero,8(r16)
10105390:	80000115 	stw	zero,4(r16)
10105394:	80000415 	stw	zero,16(r16)
10105398:	80000515 	stw	zero,20(r16)
1010539c:	80000615 	stw	zero,24(r16)
101053a0:	01800204 	movi	r6,8
101053a4:	000b883a 	mov	r5,zero
101053a8:	81001704 	addi	r4,r16,92
101053ac:	0106bd40 	call	10106bd4 <memset>
101053b0:	8005883a 	mov	r2,r16
101053b4:	80000c15 	stw	zero,48(r16)
101053b8:	80000d15 	stw	zero,52(r16)
101053bc:	80001115 	stw	zero,68(r16)
101053c0:	80001215 	stw	zero,72(r16)
101053c4:	dfc00417 	ldw	ra,16(sp)
101053c8:	dcc00317 	ldw	r19,12(sp)
101053cc:	dc800217 	ldw	r18,8(sp)
101053d0:	dc400117 	ldw	r17,4(sp)
101053d4:	dc000017 	ldw	r16,0(sp)
101053d8:	dec00504 	addi	sp,sp,20
101053dc:	f800283a 	ret
101053e0:	01400104 	movi	r5,4
101053e4:	9809883a 	mov	r4,r19
101053e8:	01052740 	call	10105274 <__sfmoreglue>
101053ec:	90800015 	stw	r2,0(r18)
101053f0:	103fde1e 	bne	r2,zero,1010536c <__alt_data_end+0xfffe536c>
101053f4:	00800304 	movi	r2,12
101053f8:	98800015 	stw	r2,0(r19)
101053fc:	0005883a 	mov	r2,zero
10105400:	003ff006 	br	101053c4 <__alt_data_end+0xfffe53c4>

10105404 <_cleanup>:
10105404:	00840474 	movhi	r2,4113
10105408:	10892804 	addi	r2,r2,9376
1010540c:	11000017 	ldw	r4,0(r2)
10105410:	01440474 	movhi	r5,4113
10105414:	2967a004 	addi	r5,r5,-24960
10105418:	0105e2c1 	jmpi	10105e2c <_fwalk_reent>

1010541c <__sinit>:
1010541c:	20800e17 	ldw	r2,56(r4)
10105420:	10000126 	beq	r2,zero,10105428 <__sinit+0xc>
10105424:	f800283a 	ret
10105428:	01050d01 	jmpi	101050d0 <__sinit.part.1>

1010542c <__sfp_lock_acquire>:
1010542c:	f800283a 	ret

10105430 <__sfp_lock_release>:
10105430:	f800283a 	ret

10105434 <__sinit_lock_acquire>:
10105434:	f800283a 	ret

10105438 <__sinit_lock_release>:
10105438:	f800283a 	ret

1010543c <__fp_lock_all>:
1010543c:	00840474 	movhi	r2,4113
10105440:	10892904 	addi	r2,r2,9380
10105444:	11000017 	ldw	r4,0(r2)
10105448:	01440434 	movhi	r5,4112
1010544c:	29549b04 	addi	r5,r5,21100
10105450:	0105d681 	jmpi	10105d68 <_fwalk>

10105454 <__fp_unlock_all>:
10105454:	00840474 	movhi	r2,4113
10105458:	10892904 	addi	r2,r2,9380
1010545c:	11000017 	ldw	r4,0(r2)
10105460:	01440434 	movhi	r5,4112
10105464:	29542f04 	addi	r5,r5,20668
10105468:	0105d681 	jmpi	10105d68 <_fwalk>

1010546c <_malloc_trim_r>:
1010546c:	defffb04 	addi	sp,sp,-20
10105470:	dcc00315 	stw	r19,12(sp)
10105474:	04c40474 	movhi	r19,4113
10105478:	dc800215 	stw	r18,8(sp)
1010547c:	dc400115 	stw	r17,4(sp)
10105480:	dc000015 	stw	r16,0(sp)
10105484:	dfc00415 	stw	ra,16(sp)
10105488:	2821883a 	mov	r16,r5
1010548c:	9cc39a04 	addi	r19,r19,3688
10105490:	2025883a 	mov	r18,r4
10105494:	010e03c0 	call	1010e03c <__malloc_lock>
10105498:	98800217 	ldw	r2,8(r19)
1010549c:	14400117 	ldw	r17,4(r2)
101054a0:	00bfff04 	movi	r2,-4
101054a4:	88a2703a 	and	r17,r17,r2
101054a8:	8c21c83a 	sub	r16,r17,r16
101054ac:	8403fbc4 	addi	r16,r16,4079
101054b0:	8020d33a 	srli	r16,r16,12
101054b4:	0083ffc4 	movi	r2,4095
101054b8:	843fffc4 	addi	r16,r16,-1
101054bc:	8020933a 	slli	r16,r16,12
101054c0:	1400060e 	bge	r2,r16,101054dc <_malloc_trim_r+0x70>
101054c4:	000b883a 	mov	r5,zero
101054c8:	9009883a 	mov	r4,r18
101054cc:	010838c0 	call	1010838c <_sbrk_r>
101054d0:	98c00217 	ldw	r3,8(r19)
101054d4:	1c47883a 	add	r3,r3,r17
101054d8:	10c00a26 	beq	r2,r3,10105504 <_malloc_trim_r+0x98>
101054dc:	9009883a 	mov	r4,r18
101054e0:	010e0600 	call	1010e060 <__malloc_unlock>
101054e4:	0005883a 	mov	r2,zero
101054e8:	dfc00417 	ldw	ra,16(sp)
101054ec:	dcc00317 	ldw	r19,12(sp)
101054f0:	dc800217 	ldw	r18,8(sp)
101054f4:	dc400117 	ldw	r17,4(sp)
101054f8:	dc000017 	ldw	r16,0(sp)
101054fc:	dec00504 	addi	sp,sp,20
10105500:	f800283a 	ret
10105504:	040bc83a 	sub	r5,zero,r16
10105508:	9009883a 	mov	r4,r18
1010550c:	010838c0 	call	1010838c <_sbrk_r>
10105510:	00ffffc4 	movi	r3,-1
10105514:	10c00d26 	beq	r2,r3,1010554c <_malloc_trim_r+0xe0>
10105518:	00c40474 	movhi	r3,4113
1010551c:	18d02f04 	addi	r3,r3,16572
10105520:	18800017 	ldw	r2,0(r3)
10105524:	99000217 	ldw	r4,8(r19)
10105528:	8c23c83a 	sub	r17,r17,r16
1010552c:	8c400054 	ori	r17,r17,1
10105530:	1421c83a 	sub	r16,r2,r16
10105534:	24400115 	stw	r17,4(r4)
10105538:	9009883a 	mov	r4,r18
1010553c:	1c000015 	stw	r16,0(r3)
10105540:	010e0600 	call	1010e060 <__malloc_unlock>
10105544:	00800044 	movi	r2,1
10105548:	003fe706 	br	101054e8 <__alt_data_end+0xfffe54e8>
1010554c:	000b883a 	mov	r5,zero
10105550:	9009883a 	mov	r4,r18
10105554:	010838c0 	call	1010838c <_sbrk_r>
10105558:	99000217 	ldw	r4,8(r19)
1010555c:	014003c4 	movi	r5,15
10105560:	1107c83a 	sub	r3,r2,r4
10105564:	28ffdd0e 	bge	r5,r3,101054dc <__alt_data_end+0xfffe54dc>
10105568:	01440474 	movhi	r5,4113
1010556c:	29492b04 	addi	r5,r5,9388
10105570:	29400017 	ldw	r5,0(r5)
10105574:	18c00054 	ori	r3,r3,1
10105578:	20c00115 	stw	r3,4(r4)
1010557c:	00c40474 	movhi	r3,4113
10105580:	1145c83a 	sub	r2,r2,r5
10105584:	18d02f04 	addi	r3,r3,16572
10105588:	18800015 	stw	r2,0(r3)
1010558c:	003fd306 	br	101054dc <__alt_data_end+0xfffe54dc>

10105590 <_free_r>:
10105590:	28004126 	beq	r5,zero,10105698 <_free_r+0x108>
10105594:	defffd04 	addi	sp,sp,-12
10105598:	dc400115 	stw	r17,4(sp)
1010559c:	dc000015 	stw	r16,0(sp)
101055a0:	2023883a 	mov	r17,r4
101055a4:	2821883a 	mov	r16,r5
101055a8:	dfc00215 	stw	ra,8(sp)
101055ac:	010e03c0 	call	1010e03c <__malloc_lock>
101055b0:	81ffff17 	ldw	r7,-4(r16)
101055b4:	00bfff84 	movi	r2,-2
101055b8:	01040474 	movhi	r4,4113
101055bc:	81bffe04 	addi	r6,r16,-8
101055c0:	3884703a 	and	r2,r7,r2
101055c4:	21039a04 	addi	r4,r4,3688
101055c8:	308b883a 	add	r5,r6,r2
101055cc:	2a400117 	ldw	r9,4(r5)
101055d0:	22000217 	ldw	r8,8(r4)
101055d4:	00ffff04 	movi	r3,-4
101055d8:	48c6703a 	and	r3,r9,r3
101055dc:	2a005726 	beq	r5,r8,1010573c <_free_r+0x1ac>
101055e0:	28c00115 	stw	r3,4(r5)
101055e4:	39c0004c 	andi	r7,r7,1
101055e8:	3800091e 	bne	r7,zero,10105610 <_free_r+0x80>
101055ec:	823ffe17 	ldw	r8,-8(r16)
101055f0:	22400204 	addi	r9,r4,8
101055f4:	320dc83a 	sub	r6,r6,r8
101055f8:	31c00217 	ldw	r7,8(r6)
101055fc:	1205883a 	add	r2,r2,r8
10105600:	3a406526 	beq	r7,r9,10105798 <_free_r+0x208>
10105604:	32000317 	ldw	r8,12(r6)
10105608:	3a000315 	stw	r8,12(r7)
1010560c:	41c00215 	stw	r7,8(r8)
10105610:	28cf883a 	add	r7,r5,r3
10105614:	39c00117 	ldw	r7,4(r7)
10105618:	39c0004c 	andi	r7,r7,1
1010561c:	38003a26 	beq	r7,zero,10105708 <_free_r+0x178>
10105620:	10c00054 	ori	r3,r2,1
10105624:	30c00115 	stw	r3,4(r6)
10105628:	3087883a 	add	r3,r6,r2
1010562c:	18800015 	stw	r2,0(r3)
10105630:	00c07fc4 	movi	r3,511
10105634:	18801936 	bltu	r3,r2,1010569c <_free_r+0x10c>
10105638:	1004d0fa 	srli	r2,r2,3
1010563c:	01c00044 	movi	r7,1
10105640:	21400117 	ldw	r5,4(r4)
10105644:	10c00044 	addi	r3,r2,1
10105648:	18c7883a 	add	r3,r3,r3
1010564c:	1005d0ba 	srai	r2,r2,2
10105650:	18c7883a 	add	r3,r3,r3
10105654:	18c7883a 	add	r3,r3,r3
10105658:	1907883a 	add	r3,r3,r4
1010565c:	3884983a 	sll	r2,r7,r2
10105660:	19c00017 	ldw	r7,0(r3)
10105664:	1a3ffe04 	addi	r8,r3,-8
10105668:	1144b03a 	or	r2,r2,r5
1010566c:	32000315 	stw	r8,12(r6)
10105670:	31c00215 	stw	r7,8(r6)
10105674:	20800115 	stw	r2,4(r4)
10105678:	19800015 	stw	r6,0(r3)
1010567c:	39800315 	stw	r6,12(r7)
10105680:	8809883a 	mov	r4,r17
10105684:	dfc00217 	ldw	ra,8(sp)
10105688:	dc400117 	ldw	r17,4(sp)
1010568c:	dc000017 	ldw	r16,0(sp)
10105690:	dec00304 	addi	sp,sp,12
10105694:	010e0601 	jmpi	1010e060 <__malloc_unlock>
10105698:	f800283a 	ret
1010569c:	100ad27a 	srli	r5,r2,9
101056a0:	00c00104 	movi	r3,4
101056a4:	19404a36 	bltu	r3,r5,101057d0 <_free_r+0x240>
101056a8:	100ad1ba 	srli	r5,r2,6
101056ac:	28c00e44 	addi	r3,r5,57
101056b0:	18c7883a 	add	r3,r3,r3
101056b4:	29400e04 	addi	r5,r5,56
101056b8:	18c7883a 	add	r3,r3,r3
101056bc:	18c7883a 	add	r3,r3,r3
101056c0:	1909883a 	add	r4,r3,r4
101056c4:	20c00017 	ldw	r3,0(r4)
101056c8:	01c40474 	movhi	r7,4113
101056cc:	213ffe04 	addi	r4,r4,-8
101056d0:	39c39a04 	addi	r7,r7,3688
101056d4:	20c04426 	beq	r4,r3,101057e8 <_free_r+0x258>
101056d8:	01ffff04 	movi	r7,-4
101056dc:	19400117 	ldw	r5,4(r3)
101056e0:	29ca703a 	and	r5,r5,r7
101056e4:	1140022e 	bgeu	r2,r5,101056f0 <_free_r+0x160>
101056e8:	18c00217 	ldw	r3,8(r3)
101056ec:	20fffb1e 	bne	r4,r3,101056dc <__alt_data_end+0xfffe56dc>
101056f0:	19000317 	ldw	r4,12(r3)
101056f4:	31000315 	stw	r4,12(r6)
101056f8:	30c00215 	stw	r3,8(r6)
101056fc:	21800215 	stw	r6,8(r4)
10105700:	19800315 	stw	r6,12(r3)
10105704:	003fde06 	br	10105680 <__alt_data_end+0xfffe5680>
10105708:	29c00217 	ldw	r7,8(r5)
1010570c:	10c5883a 	add	r2,r2,r3
10105710:	00c40474 	movhi	r3,4113
10105714:	18c39c04 	addi	r3,r3,3696
10105718:	38c03b26 	beq	r7,r3,10105808 <_free_r+0x278>
1010571c:	2a000317 	ldw	r8,12(r5)
10105720:	11400054 	ori	r5,r2,1
10105724:	3087883a 	add	r3,r6,r2
10105728:	3a000315 	stw	r8,12(r7)
1010572c:	41c00215 	stw	r7,8(r8)
10105730:	31400115 	stw	r5,4(r6)
10105734:	18800015 	stw	r2,0(r3)
10105738:	003fbd06 	br	10105630 <__alt_data_end+0xfffe5630>
1010573c:	39c0004c 	andi	r7,r7,1
10105740:	10c5883a 	add	r2,r2,r3
10105744:	3800071e 	bne	r7,zero,10105764 <_free_r+0x1d4>
10105748:	81fffe17 	ldw	r7,-8(r16)
1010574c:	31cdc83a 	sub	r6,r6,r7
10105750:	30c00317 	ldw	r3,12(r6)
10105754:	31400217 	ldw	r5,8(r6)
10105758:	11c5883a 	add	r2,r2,r7
1010575c:	28c00315 	stw	r3,12(r5)
10105760:	19400215 	stw	r5,8(r3)
10105764:	10c00054 	ori	r3,r2,1
10105768:	30c00115 	stw	r3,4(r6)
1010576c:	00c40474 	movhi	r3,4113
10105770:	18c92c04 	addi	r3,r3,9392
10105774:	18c00017 	ldw	r3,0(r3)
10105778:	21800215 	stw	r6,8(r4)
1010577c:	10ffc036 	bltu	r2,r3,10105680 <__alt_data_end+0xfffe5680>
10105780:	00840474 	movhi	r2,4113
10105784:	10902604 	addi	r2,r2,16536
10105788:	11400017 	ldw	r5,0(r2)
1010578c:	8809883a 	mov	r4,r17
10105790:	010546c0 	call	1010546c <_malloc_trim_r>
10105794:	003fba06 	br	10105680 <__alt_data_end+0xfffe5680>
10105798:	28c9883a 	add	r4,r5,r3
1010579c:	21000117 	ldw	r4,4(r4)
101057a0:	2100004c 	andi	r4,r4,1
101057a4:	2000391e 	bne	r4,zero,1010588c <_free_r+0x2fc>
101057a8:	29c00217 	ldw	r7,8(r5)
101057ac:	29000317 	ldw	r4,12(r5)
101057b0:	1885883a 	add	r2,r3,r2
101057b4:	10c00054 	ori	r3,r2,1
101057b8:	39000315 	stw	r4,12(r7)
101057bc:	21c00215 	stw	r7,8(r4)
101057c0:	30c00115 	stw	r3,4(r6)
101057c4:	308d883a 	add	r6,r6,r2
101057c8:	30800015 	stw	r2,0(r6)
101057cc:	003fac06 	br	10105680 <__alt_data_end+0xfffe5680>
101057d0:	00c00504 	movi	r3,20
101057d4:	19401536 	bltu	r3,r5,1010582c <_free_r+0x29c>
101057d8:	28c01704 	addi	r3,r5,92
101057dc:	18c7883a 	add	r3,r3,r3
101057e0:	294016c4 	addi	r5,r5,91
101057e4:	003fb406 	br	101056b8 <__alt_data_end+0xfffe56b8>
101057e8:	280bd0ba 	srai	r5,r5,2
101057ec:	00c00044 	movi	r3,1
101057f0:	38800117 	ldw	r2,4(r7)
101057f4:	194a983a 	sll	r5,r3,r5
101057f8:	2007883a 	mov	r3,r4
101057fc:	2884b03a 	or	r2,r5,r2
10105800:	38800115 	stw	r2,4(r7)
10105804:	003fbb06 	br	101056f4 <__alt_data_end+0xfffe56f4>
10105808:	21800515 	stw	r6,20(r4)
1010580c:	21800415 	stw	r6,16(r4)
10105810:	10c00054 	ori	r3,r2,1
10105814:	31c00315 	stw	r7,12(r6)
10105818:	31c00215 	stw	r7,8(r6)
1010581c:	30c00115 	stw	r3,4(r6)
10105820:	308d883a 	add	r6,r6,r2
10105824:	30800015 	stw	r2,0(r6)
10105828:	003f9506 	br	10105680 <__alt_data_end+0xfffe5680>
1010582c:	00c01504 	movi	r3,84
10105830:	19400536 	bltu	r3,r5,10105848 <_free_r+0x2b8>
10105834:	100ad33a 	srli	r5,r2,12
10105838:	28c01bc4 	addi	r3,r5,111
1010583c:	18c7883a 	add	r3,r3,r3
10105840:	29401b84 	addi	r5,r5,110
10105844:	003f9c06 	br	101056b8 <__alt_data_end+0xfffe56b8>
10105848:	00c05504 	movi	r3,340
1010584c:	19400536 	bltu	r3,r5,10105864 <_free_r+0x2d4>
10105850:	100ad3fa 	srli	r5,r2,15
10105854:	28c01e04 	addi	r3,r5,120
10105858:	18c7883a 	add	r3,r3,r3
1010585c:	29401dc4 	addi	r5,r5,119
10105860:	003f9506 	br	101056b8 <__alt_data_end+0xfffe56b8>
10105864:	00c15504 	movi	r3,1364
10105868:	19400536 	bltu	r3,r5,10105880 <_free_r+0x2f0>
1010586c:	100ad4ba 	srli	r5,r2,18
10105870:	28c01f44 	addi	r3,r5,125
10105874:	18c7883a 	add	r3,r3,r3
10105878:	29401f04 	addi	r5,r5,124
1010587c:	003f8e06 	br	101056b8 <__alt_data_end+0xfffe56b8>
10105880:	00c03f84 	movi	r3,254
10105884:	01401f84 	movi	r5,126
10105888:	003f8b06 	br	101056b8 <__alt_data_end+0xfffe56b8>
1010588c:	10c00054 	ori	r3,r2,1
10105890:	30c00115 	stw	r3,4(r6)
10105894:	308d883a 	add	r6,r6,r2
10105898:	30800015 	stw	r2,0(r6)
1010589c:	003f7806 	br	10105680 <__alt_data_end+0xfffe5680>

101058a0 <__sfvwrite_r>:
101058a0:	30800217 	ldw	r2,8(r6)
101058a4:	10006726 	beq	r2,zero,10105a44 <__sfvwrite_r+0x1a4>
101058a8:	28c0030b 	ldhu	r3,12(r5)
101058ac:	defff404 	addi	sp,sp,-48
101058b0:	dd400715 	stw	r21,28(sp)
101058b4:	dd000615 	stw	r20,24(sp)
101058b8:	dc000215 	stw	r16,8(sp)
101058bc:	dfc00b15 	stw	ra,44(sp)
101058c0:	df000a15 	stw	fp,40(sp)
101058c4:	ddc00915 	stw	r23,36(sp)
101058c8:	dd800815 	stw	r22,32(sp)
101058cc:	dcc00515 	stw	r19,20(sp)
101058d0:	dc800415 	stw	r18,16(sp)
101058d4:	dc400315 	stw	r17,12(sp)
101058d8:	1880020c 	andi	r2,r3,8
101058dc:	2821883a 	mov	r16,r5
101058e0:	202b883a 	mov	r21,r4
101058e4:	3029883a 	mov	r20,r6
101058e8:	10002726 	beq	r2,zero,10105988 <__sfvwrite_r+0xe8>
101058ec:	28800417 	ldw	r2,16(r5)
101058f0:	10002526 	beq	r2,zero,10105988 <__sfvwrite_r+0xe8>
101058f4:	1880008c 	andi	r2,r3,2
101058f8:	a4400017 	ldw	r17,0(r20)
101058fc:	10002a26 	beq	r2,zero,101059a8 <__sfvwrite_r+0x108>
10105900:	05a00034 	movhi	r22,32768
10105904:	0027883a 	mov	r19,zero
10105908:	0025883a 	mov	r18,zero
1010590c:	b5bf0004 	addi	r22,r22,-1024
10105910:	980d883a 	mov	r6,r19
10105914:	a809883a 	mov	r4,r21
10105918:	90004626 	beq	r18,zero,10105a34 <__sfvwrite_r+0x194>
1010591c:	900f883a 	mov	r7,r18
10105920:	b480022e 	bgeu	r22,r18,1010592c <__sfvwrite_r+0x8c>
10105924:	01e00034 	movhi	r7,32768
10105928:	39ff0004 	addi	r7,r7,-1024
1010592c:	80800917 	ldw	r2,36(r16)
10105930:	81400717 	ldw	r5,28(r16)
10105934:	103ee83a 	callr	r2
10105938:	00805a0e 	bge	zero,r2,10105aa4 <__sfvwrite_r+0x204>
1010593c:	a0c00217 	ldw	r3,8(r20)
10105940:	98a7883a 	add	r19,r19,r2
10105944:	90a5c83a 	sub	r18,r18,r2
10105948:	1885c83a 	sub	r2,r3,r2
1010594c:	a0800215 	stw	r2,8(r20)
10105950:	103fef1e 	bne	r2,zero,10105910 <__alt_data_end+0xfffe5910>
10105954:	0005883a 	mov	r2,zero
10105958:	dfc00b17 	ldw	ra,44(sp)
1010595c:	df000a17 	ldw	fp,40(sp)
10105960:	ddc00917 	ldw	r23,36(sp)
10105964:	dd800817 	ldw	r22,32(sp)
10105968:	dd400717 	ldw	r21,28(sp)
1010596c:	dd000617 	ldw	r20,24(sp)
10105970:	dcc00517 	ldw	r19,20(sp)
10105974:	dc800417 	ldw	r18,16(sp)
10105978:	dc400317 	ldw	r17,12(sp)
1010597c:	dc000217 	ldw	r16,8(sp)
10105980:	dec00c04 	addi	sp,sp,48
10105984:	f800283a 	ret
10105988:	800b883a 	mov	r5,r16
1010598c:	a809883a 	mov	r4,r21
10105990:	01034100 	call	10103410 <__swsetup_r>
10105994:	1000ee1e 	bne	r2,zero,10105d50 <__sfvwrite_r+0x4b0>
10105998:	80c0030b 	ldhu	r3,12(r16)
1010599c:	a4400017 	ldw	r17,0(r20)
101059a0:	1880008c 	andi	r2,r3,2
101059a4:	103fd61e 	bne	r2,zero,10105900 <__alt_data_end+0xfffe5900>
101059a8:	1880004c 	andi	r2,r3,1
101059ac:	1000421e 	bne	r2,zero,10105ab8 <__sfvwrite_r+0x218>
101059b0:	0039883a 	mov	fp,zero
101059b4:	0025883a 	mov	r18,zero
101059b8:	90001a26 	beq	r18,zero,10105a24 <__sfvwrite_r+0x184>
101059bc:	1880800c 	andi	r2,r3,512
101059c0:	84c00217 	ldw	r19,8(r16)
101059c4:	10002126 	beq	r2,zero,10105a4c <__sfvwrite_r+0x1ac>
101059c8:	982f883a 	mov	r23,r19
101059cc:	94c09636 	bltu	r18,r19,10105c28 <__sfvwrite_r+0x388>
101059d0:	1881200c 	andi	r2,r3,1152
101059d4:	1000a11e 	bne	r2,zero,10105c5c <__sfvwrite_r+0x3bc>
101059d8:	81000017 	ldw	r4,0(r16)
101059dc:	b80d883a 	mov	r6,r23
101059e0:	e00b883a 	mov	r5,fp
101059e4:	0106a780 	call	10106a78 <memmove>
101059e8:	80c00217 	ldw	r3,8(r16)
101059ec:	81000017 	ldw	r4,0(r16)
101059f0:	9005883a 	mov	r2,r18
101059f4:	1ce7c83a 	sub	r19,r3,r19
101059f8:	25cf883a 	add	r7,r4,r23
101059fc:	84c00215 	stw	r19,8(r16)
10105a00:	81c00015 	stw	r7,0(r16)
10105a04:	a0c00217 	ldw	r3,8(r20)
10105a08:	e0b9883a 	add	fp,fp,r2
10105a0c:	90a5c83a 	sub	r18,r18,r2
10105a10:	18a7c83a 	sub	r19,r3,r2
10105a14:	a4c00215 	stw	r19,8(r20)
10105a18:	983fce26 	beq	r19,zero,10105954 <__alt_data_end+0xfffe5954>
10105a1c:	80c0030b 	ldhu	r3,12(r16)
10105a20:	903fe61e 	bne	r18,zero,101059bc <__alt_data_end+0xfffe59bc>
10105a24:	8f000017 	ldw	fp,0(r17)
10105a28:	8c800117 	ldw	r18,4(r17)
10105a2c:	8c400204 	addi	r17,r17,8
10105a30:	003fe106 	br	101059b8 <__alt_data_end+0xfffe59b8>
10105a34:	8cc00017 	ldw	r19,0(r17)
10105a38:	8c800117 	ldw	r18,4(r17)
10105a3c:	8c400204 	addi	r17,r17,8
10105a40:	003fb306 	br	10105910 <__alt_data_end+0xfffe5910>
10105a44:	0005883a 	mov	r2,zero
10105a48:	f800283a 	ret
10105a4c:	81000017 	ldw	r4,0(r16)
10105a50:	80800417 	ldw	r2,16(r16)
10105a54:	11005a36 	bltu	r2,r4,10105bc0 <__sfvwrite_r+0x320>
10105a58:	85c00517 	ldw	r23,20(r16)
10105a5c:	95c05836 	bltu	r18,r23,10105bc0 <__sfvwrite_r+0x320>
10105a60:	00a00034 	movhi	r2,32768
10105a64:	10bfffc4 	addi	r2,r2,-1
10105a68:	9009883a 	mov	r4,r18
10105a6c:	1480012e 	bgeu	r2,r18,10105a74 <__sfvwrite_r+0x1d4>
10105a70:	1009883a 	mov	r4,r2
10105a74:	b80b883a 	mov	r5,r23
10105a78:	0100b600 	call	10100b60 <__divsi3>
10105a7c:	b80b883a 	mov	r5,r23
10105a80:	1009883a 	mov	r4,r2
10105a84:	0100d140 	call	10100d14 <__mulsi3>
10105a88:	81400717 	ldw	r5,28(r16)
10105a8c:	80c00917 	ldw	r3,36(r16)
10105a90:	100f883a 	mov	r7,r2
10105a94:	e00d883a 	mov	r6,fp
10105a98:	a809883a 	mov	r4,r21
10105a9c:	183ee83a 	callr	r3
10105aa0:	00bfd816 	blt	zero,r2,10105a04 <__alt_data_end+0xfffe5a04>
10105aa4:	8080030b 	ldhu	r2,12(r16)
10105aa8:	10801014 	ori	r2,r2,64
10105aac:	8080030d 	sth	r2,12(r16)
10105ab0:	00bfffc4 	movi	r2,-1
10105ab4:	003fa806 	br	10105958 <__alt_data_end+0xfffe5958>
10105ab8:	0027883a 	mov	r19,zero
10105abc:	0011883a 	mov	r8,zero
10105ac0:	0039883a 	mov	fp,zero
10105ac4:	0025883a 	mov	r18,zero
10105ac8:	90001f26 	beq	r18,zero,10105b48 <__sfvwrite_r+0x2a8>
10105acc:	40005a26 	beq	r8,zero,10105c38 <__sfvwrite_r+0x398>
10105ad0:	982d883a 	mov	r22,r19
10105ad4:	94c0012e 	bgeu	r18,r19,10105adc <__sfvwrite_r+0x23c>
10105ad8:	902d883a 	mov	r22,r18
10105adc:	81000017 	ldw	r4,0(r16)
10105ae0:	80800417 	ldw	r2,16(r16)
10105ae4:	b02f883a 	mov	r23,r22
10105ae8:	81c00517 	ldw	r7,20(r16)
10105aec:	1100032e 	bgeu	r2,r4,10105afc <__sfvwrite_r+0x25c>
10105af0:	80c00217 	ldw	r3,8(r16)
10105af4:	38c7883a 	add	r3,r7,r3
10105af8:	1d801816 	blt	r3,r22,10105b5c <__sfvwrite_r+0x2bc>
10105afc:	b1c03e16 	blt	r22,r7,10105bf8 <__sfvwrite_r+0x358>
10105b00:	80800917 	ldw	r2,36(r16)
10105b04:	81400717 	ldw	r5,28(r16)
10105b08:	e00d883a 	mov	r6,fp
10105b0c:	da000115 	stw	r8,4(sp)
10105b10:	a809883a 	mov	r4,r21
10105b14:	103ee83a 	callr	r2
10105b18:	102f883a 	mov	r23,r2
10105b1c:	da000117 	ldw	r8,4(sp)
10105b20:	00bfe00e 	bge	zero,r2,10105aa4 <__alt_data_end+0xfffe5aa4>
10105b24:	9de7c83a 	sub	r19,r19,r23
10105b28:	98001f26 	beq	r19,zero,10105ba8 <__sfvwrite_r+0x308>
10105b2c:	a0800217 	ldw	r2,8(r20)
10105b30:	e5f9883a 	add	fp,fp,r23
10105b34:	95e5c83a 	sub	r18,r18,r23
10105b38:	15efc83a 	sub	r23,r2,r23
10105b3c:	a5c00215 	stw	r23,8(r20)
10105b40:	b83f8426 	beq	r23,zero,10105954 <__alt_data_end+0xfffe5954>
10105b44:	903fe11e 	bne	r18,zero,10105acc <__alt_data_end+0xfffe5acc>
10105b48:	8f000017 	ldw	fp,0(r17)
10105b4c:	8c800117 	ldw	r18,4(r17)
10105b50:	0011883a 	mov	r8,zero
10105b54:	8c400204 	addi	r17,r17,8
10105b58:	003fdb06 	br	10105ac8 <__alt_data_end+0xfffe5ac8>
10105b5c:	180d883a 	mov	r6,r3
10105b60:	e00b883a 	mov	r5,fp
10105b64:	da000115 	stw	r8,4(sp)
10105b68:	d8c00015 	stw	r3,0(sp)
10105b6c:	0106a780 	call	10106a78 <memmove>
10105b70:	d8c00017 	ldw	r3,0(sp)
10105b74:	80800017 	ldw	r2,0(r16)
10105b78:	800b883a 	mov	r5,r16
10105b7c:	a809883a 	mov	r4,r21
10105b80:	10c5883a 	add	r2,r2,r3
10105b84:	80800015 	stw	r2,0(r16)
10105b88:	d8c00015 	stw	r3,0(sp)
10105b8c:	01050300 	call	10105030 <_fflush_r>
10105b90:	d8c00017 	ldw	r3,0(sp)
10105b94:	da000117 	ldw	r8,4(sp)
10105b98:	103fc21e 	bne	r2,zero,10105aa4 <__alt_data_end+0xfffe5aa4>
10105b9c:	182f883a 	mov	r23,r3
10105ba0:	9de7c83a 	sub	r19,r19,r23
10105ba4:	983fe11e 	bne	r19,zero,10105b2c <__alt_data_end+0xfffe5b2c>
10105ba8:	800b883a 	mov	r5,r16
10105bac:	a809883a 	mov	r4,r21
10105bb0:	01050300 	call	10105030 <_fflush_r>
10105bb4:	103fbb1e 	bne	r2,zero,10105aa4 <__alt_data_end+0xfffe5aa4>
10105bb8:	0011883a 	mov	r8,zero
10105bbc:	003fdb06 	br	10105b2c <__alt_data_end+0xfffe5b2c>
10105bc0:	94c0012e 	bgeu	r18,r19,10105bc8 <__sfvwrite_r+0x328>
10105bc4:	9027883a 	mov	r19,r18
10105bc8:	980d883a 	mov	r6,r19
10105bcc:	e00b883a 	mov	r5,fp
10105bd0:	0106a780 	call	10106a78 <memmove>
10105bd4:	80800217 	ldw	r2,8(r16)
10105bd8:	80c00017 	ldw	r3,0(r16)
10105bdc:	14c5c83a 	sub	r2,r2,r19
10105be0:	1cc7883a 	add	r3,r3,r19
10105be4:	80800215 	stw	r2,8(r16)
10105be8:	80c00015 	stw	r3,0(r16)
10105bec:	10004326 	beq	r2,zero,10105cfc <__sfvwrite_r+0x45c>
10105bf0:	9805883a 	mov	r2,r19
10105bf4:	003f8306 	br	10105a04 <__alt_data_end+0xfffe5a04>
10105bf8:	b00d883a 	mov	r6,r22
10105bfc:	e00b883a 	mov	r5,fp
10105c00:	da000115 	stw	r8,4(sp)
10105c04:	0106a780 	call	10106a78 <memmove>
10105c08:	80800217 	ldw	r2,8(r16)
10105c0c:	80c00017 	ldw	r3,0(r16)
10105c10:	da000117 	ldw	r8,4(sp)
10105c14:	1585c83a 	sub	r2,r2,r22
10105c18:	1dad883a 	add	r22,r3,r22
10105c1c:	80800215 	stw	r2,8(r16)
10105c20:	85800015 	stw	r22,0(r16)
10105c24:	003fbf06 	br	10105b24 <__alt_data_end+0xfffe5b24>
10105c28:	81000017 	ldw	r4,0(r16)
10105c2c:	9027883a 	mov	r19,r18
10105c30:	902f883a 	mov	r23,r18
10105c34:	003f6906 	br	101059dc <__alt_data_end+0xfffe59dc>
10105c38:	900d883a 	mov	r6,r18
10105c3c:	01400284 	movi	r5,10
10105c40:	e009883a 	mov	r4,fp
10105c44:	01069940 	call	10106994 <memchr>
10105c48:	10003e26 	beq	r2,zero,10105d44 <__sfvwrite_r+0x4a4>
10105c4c:	10800044 	addi	r2,r2,1
10105c50:	1727c83a 	sub	r19,r2,fp
10105c54:	02000044 	movi	r8,1
10105c58:	003f9d06 	br	10105ad0 <__alt_data_end+0xfffe5ad0>
10105c5c:	80800517 	ldw	r2,20(r16)
10105c60:	81400417 	ldw	r5,16(r16)
10105c64:	81c00017 	ldw	r7,0(r16)
10105c68:	10a7883a 	add	r19,r2,r2
10105c6c:	9885883a 	add	r2,r19,r2
10105c70:	1026d7fa 	srli	r19,r2,31
10105c74:	396dc83a 	sub	r22,r7,r5
10105c78:	b1000044 	addi	r4,r22,1
10105c7c:	9885883a 	add	r2,r19,r2
10105c80:	1027d07a 	srai	r19,r2,1
10105c84:	2485883a 	add	r2,r4,r18
10105c88:	980d883a 	mov	r6,r19
10105c8c:	9880022e 	bgeu	r19,r2,10105c98 <__sfvwrite_r+0x3f8>
10105c90:	1027883a 	mov	r19,r2
10105c94:	100d883a 	mov	r6,r2
10105c98:	18c1000c 	andi	r3,r3,1024
10105c9c:	18001c26 	beq	r3,zero,10105d10 <__sfvwrite_r+0x470>
10105ca0:	300b883a 	mov	r5,r6
10105ca4:	a809883a 	mov	r4,r21
10105ca8:	01061880 	call	10106188 <_malloc_r>
10105cac:	102f883a 	mov	r23,r2
10105cb0:	10002926 	beq	r2,zero,10105d58 <__sfvwrite_r+0x4b8>
10105cb4:	81400417 	ldw	r5,16(r16)
10105cb8:	b00d883a 	mov	r6,r22
10105cbc:	1009883a 	mov	r4,r2
10105cc0:	0100d3c0 	call	10100d3c <memcpy>
10105cc4:	8080030b 	ldhu	r2,12(r16)
10105cc8:	00fedfc4 	movi	r3,-1153
10105ccc:	10c4703a 	and	r2,r2,r3
10105cd0:	10802014 	ori	r2,r2,128
10105cd4:	8080030d 	sth	r2,12(r16)
10105cd8:	bd89883a 	add	r4,r23,r22
10105cdc:	9d8fc83a 	sub	r7,r19,r22
10105ce0:	85c00415 	stw	r23,16(r16)
10105ce4:	84c00515 	stw	r19,20(r16)
10105ce8:	81000015 	stw	r4,0(r16)
10105cec:	9027883a 	mov	r19,r18
10105cf0:	81c00215 	stw	r7,8(r16)
10105cf4:	902f883a 	mov	r23,r18
10105cf8:	003f3806 	br	101059dc <__alt_data_end+0xfffe59dc>
10105cfc:	800b883a 	mov	r5,r16
10105d00:	a809883a 	mov	r4,r21
10105d04:	01050300 	call	10105030 <_fflush_r>
10105d08:	103fb926 	beq	r2,zero,10105bf0 <__alt_data_end+0xfffe5bf0>
10105d0c:	003f6506 	br	10105aa4 <__alt_data_end+0xfffe5aa4>
10105d10:	a809883a 	mov	r4,r21
10105d14:	0107db40 	call	10107db4 <_realloc_r>
10105d18:	102f883a 	mov	r23,r2
10105d1c:	103fee1e 	bne	r2,zero,10105cd8 <__alt_data_end+0xfffe5cd8>
10105d20:	81400417 	ldw	r5,16(r16)
10105d24:	a809883a 	mov	r4,r21
10105d28:	01055900 	call	10105590 <_free_r>
10105d2c:	8080030b 	ldhu	r2,12(r16)
10105d30:	00ffdfc4 	movi	r3,-129
10105d34:	1884703a 	and	r2,r3,r2
10105d38:	00c00304 	movi	r3,12
10105d3c:	a8c00015 	stw	r3,0(r21)
10105d40:	003f5906 	br	10105aa8 <__alt_data_end+0xfffe5aa8>
10105d44:	94c00044 	addi	r19,r18,1
10105d48:	02000044 	movi	r8,1
10105d4c:	003f6006 	br	10105ad0 <__alt_data_end+0xfffe5ad0>
10105d50:	00bfffc4 	movi	r2,-1
10105d54:	003f0006 	br	10105958 <__alt_data_end+0xfffe5958>
10105d58:	00800304 	movi	r2,12
10105d5c:	a8800015 	stw	r2,0(r21)
10105d60:	8080030b 	ldhu	r2,12(r16)
10105d64:	003f5006 	br	10105aa8 <__alt_data_end+0xfffe5aa8>

10105d68 <_fwalk>:
10105d68:	defff704 	addi	sp,sp,-36
10105d6c:	dd000415 	stw	r20,16(sp)
10105d70:	dfc00815 	stw	ra,32(sp)
10105d74:	ddc00715 	stw	r23,28(sp)
10105d78:	dd800615 	stw	r22,24(sp)
10105d7c:	dd400515 	stw	r21,20(sp)
10105d80:	dcc00315 	stw	r19,12(sp)
10105d84:	dc800215 	stw	r18,8(sp)
10105d88:	dc400115 	stw	r17,4(sp)
10105d8c:	dc000015 	stw	r16,0(sp)
10105d90:	2500b804 	addi	r20,r4,736
10105d94:	a0002326 	beq	r20,zero,10105e24 <_fwalk+0xbc>
10105d98:	282b883a 	mov	r21,r5
10105d9c:	002f883a 	mov	r23,zero
10105da0:	05800044 	movi	r22,1
10105da4:	04ffffc4 	movi	r19,-1
10105da8:	a4400117 	ldw	r17,4(r20)
10105dac:	a4800217 	ldw	r18,8(r20)
10105db0:	8c7fffc4 	addi	r17,r17,-1
10105db4:	88000d16 	blt	r17,zero,10105dec <_fwalk+0x84>
10105db8:	94000304 	addi	r16,r18,12
10105dbc:	94800384 	addi	r18,r18,14
10105dc0:	8080000b 	ldhu	r2,0(r16)
10105dc4:	8c7fffc4 	addi	r17,r17,-1
10105dc8:	813ffd04 	addi	r4,r16,-12
10105dcc:	b080042e 	bgeu	r22,r2,10105de0 <_fwalk+0x78>
10105dd0:	9080000f 	ldh	r2,0(r18)
10105dd4:	14c00226 	beq	r2,r19,10105de0 <_fwalk+0x78>
10105dd8:	a83ee83a 	callr	r21
10105ddc:	b8aeb03a 	or	r23,r23,r2
10105de0:	84001a04 	addi	r16,r16,104
10105de4:	94801a04 	addi	r18,r18,104
10105de8:	8cfff51e 	bne	r17,r19,10105dc0 <__alt_data_end+0xfffe5dc0>
10105dec:	a5000017 	ldw	r20,0(r20)
10105df0:	a03fed1e 	bne	r20,zero,10105da8 <__alt_data_end+0xfffe5da8>
10105df4:	b805883a 	mov	r2,r23
10105df8:	dfc00817 	ldw	ra,32(sp)
10105dfc:	ddc00717 	ldw	r23,28(sp)
10105e00:	dd800617 	ldw	r22,24(sp)
10105e04:	dd400517 	ldw	r21,20(sp)
10105e08:	dd000417 	ldw	r20,16(sp)
10105e0c:	dcc00317 	ldw	r19,12(sp)
10105e10:	dc800217 	ldw	r18,8(sp)
10105e14:	dc400117 	ldw	r17,4(sp)
10105e18:	dc000017 	ldw	r16,0(sp)
10105e1c:	dec00904 	addi	sp,sp,36
10105e20:	f800283a 	ret
10105e24:	002f883a 	mov	r23,zero
10105e28:	003ff206 	br	10105df4 <__alt_data_end+0xfffe5df4>

10105e2c <_fwalk_reent>:
10105e2c:	defff704 	addi	sp,sp,-36
10105e30:	dd000415 	stw	r20,16(sp)
10105e34:	dfc00815 	stw	ra,32(sp)
10105e38:	ddc00715 	stw	r23,28(sp)
10105e3c:	dd800615 	stw	r22,24(sp)
10105e40:	dd400515 	stw	r21,20(sp)
10105e44:	dcc00315 	stw	r19,12(sp)
10105e48:	dc800215 	stw	r18,8(sp)
10105e4c:	dc400115 	stw	r17,4(sp)
10105e50:	dc000015 	stw	r16,0(sp)
10105e54:	2500b804 	addi	r20,r4,736
10105e58:	a0002326 	beq	r20,zero,10105ee8 <_fwalk_reent+0xbc>
10105e5c:	282b883a 	mov	r21,r5
10105e60:	2027883a 	mov	r19,r4
10105e64:	002f883a 	mov	r23,zero
10105e68:	05800044 	movi	r22,1
10105e6c:	04bfffc4 	movi	r18,-1
10105e70:	a4400117 	ldw	r17,4(r20)
10105e74:	a4000217 	ldw	r16,8(r20)
10105e78:	8c7fffc4 	addi	r17,r17,-1
10105e7c:	88000c16 	blt	r17,zero,10105eb0 <_fwalk_reent+0x84>
10105e80:	84000304 	addi	r16,r16,12
10105e84:	8080000b 	ldhu	r2,0(r16)
10105e88:	8c7fffc4 	addi	r17,r17,-1
10105e8c:	817ffd04 	addi	r5,r16,-12
10105e90:	b080052e 	bgeu	r22,r2,10105ea8 <_fwalk_reent+0x7c>
10105e94:	8080008f 	ldh	r2,2(r16)
10105e98:	9809883a 	mov	r4,r19
10105e9c:	14800226 	beq	r2,r18,10105ea8 <_fwalk_reent+0x7c>
10105ea0:	a83ee83a 	callr	r21
10105ea4:	b8aeb03a 	or	r23,r23,r2
10105ea8:	84001a04 	addi	r16,r16,104
10105eac:	8cbff51e 	bne	r17,r18,10105e84 <__alt_data_end+0xfffe5e84>
10105eb0:	a5000017 	ldw	r20,0(r20)
10105eb4:	a03fee1e 	bne	r20,zero,10105e70 <__alt_data_end+0xfffe5e70>
10105eb8:	b805883a 	mov	r2,r23
10105ebc:	dfc00817 	ldw	ra,32(sp)
10105ec0:	ddc00717 	ldw	r23,28(sp)
10105ec4:	dd800617 	ldw	r22,24(sp)
10105ec8:	dd400517 	ldw	r21,20(sp)
10105ecc:	dd000417 	ldw	r20,16(sp)
10105ed0:	dcc00317 	ldw	r19,12(sp)
10105ed4:	dc800217 	ldw	r18,8(sp)
10105ed8:	dc400117 	ldw	r17,4(sp)
10105edc:	dc000017 	ldw	r16,0(sp)
10105ee0:	dec00904 	addi	sp,sp,36
10105ee4:	f800283a 	ret
10105ee8:	002f883a 	mov	r23,zero
10105eec:	003ff206 	br	10105eb8 <__alt_data_end+0xfffe5eb8>

10105ef0 <_setlocale_r>:
10105ef0:	30001b26 	beq	r6,zero,10105f60 <_setlocale_r+0x70>
10105ef4:	01440474 	movhi	r5,4113
10105ef8:	defffe04 	addi	sp,sp,-8
10105efc:	2941cf04 	addi	r5,r5,1852
10105f00:	3009883a 	mov	r4,r6
10105f04:	dc000015 	stw	r16,0(sp)
10105f08:	dfc00115 	stw	ra,4(sp)
10105f0c:	3021883a 	mov	r16,r6
10105f10:	010851c0 	call	1010851c <strcmp>
10105f14:	1000061e 	bne	r2,zero,10105f30 <_setlocale_r+0x40>
10105f18:	00840474 	movhi	r2,4113
10105f1c:	1081ce04 	addi	r2,r2,1848
10105f20:	dfc00117 	ldw	ra,4(sp)
10105f24:	dc000017 	ldw	r16,0(sp)
10105f28:	dec00204 	addi	sp,sp,8
10105f2c:	f800283a 	ret
10105f30:	01440474 	movhi	r5,4113
10105f34:	2941ce04 	addi	r5,r5,1848
10105f38:	8009883a 	mov	r4,r16
10105f3c:	010851c0 	call	1010851c <strcmp>
10105f40:	103ff526 	beq	r2,zero,10105f18 <__alt_data_end+0xfffe5f18>
10105f44:	01440474 	movhi	r5,4113
10105f48:	2941b904 	addi	r5,r5,1764
10105f4c:	8009883a 	mov	r4,r16
10105f50:	010851c0 	call	1010851c <strcmp>
10105f54:	103ff026 	beq	r2,zero,10105f18 <__alt_data_end+0xfffe5f18>
10105f58:	0005883a 	mov	r2,zero
10105f5c:	003ff006 	br	10105f20 <__alt_data_end+0xfffe5f20>
10105f60:	00840474 	movhi	r2,4113
10105f64:	1081ce04 	addi	r2,r2,1848
10105f68:	f800283a 	ret

10105f6c <__locale_charset>:
10105f6c:	00840474 	movhi	r2,4113
10105f70:	10838404 	addi	r2,r2,3600
10105f74:	f800283a 	ret

10105f78 <__locale_mb_cur_max>:
10105f78:	00840474 	movhi	r2,4113
10105f7c:	10892a04 	addi	r2,r2,9384
10105f80:	10800017 	ldw	r2,0(r2)
10105f84:	f800283a 	ret

10105f88 <__locale_msgcharset>:
10105f88:	00840474 	movhi	r2,4113
10105f8c:	10837c04 	addi	r2,r2,3568
10105f90:	f800283a 	ret

10105f94 <__locale_cjk_lang>:
10105f94:	0005883a 	mov	r2,zero
10105f98:	f800283a 	ret

10105f9c <_localeconv_r>:
10105f9c:	00840474 	movhi	r2,4113
10105fa0:	10838c04 	addi	r2,r2,3632
10105fa4:	f800283a 	ret

10105fa8 <setlocale>:
10105fa8:	00840474 	movhi	r2,4113
10105fac:	10892904 	addi	r2,r2,9380
10105fb0:	280d883a 	mov	r6,r5
10105fb4:	200b883a 	mov	r5,r4
10105fb8:	11000017 	ldw	r4,0(r2)
10105fbc:	0105ef01 	jmpi	10105ef0 <_setlocale_r>

10105fc0 <localeconv>:
10105fc0:	00840474 	movhi	r2,4113
10105fc4:	10838c04 	addi	r2,r2,3632
10105fc8:	f800283a 	ret

10105fcc <__smakebuf_r>:
10105fcc:	2880030b 	ldhu	r2,12(r5)
10105fd0:	10c0008c 	andi	r3,r2,2
10105fd4:	1800411e 	bne	r3,zero,101060dc <__smakebuf_r+0x110>
10105fd8:	deffec04 	addi	sp,sp,-80
10105fdc:	dc000f15 	stw	r16,60(sp)
10105fe0:	2821883a 	mov	r16,r5
10105fe4:	2940038f 	ldh	r5,14(r5)
10105fe8:	dc401015 	stw	r17,64(sp)
10105fec:	dfc01315 	stw	ra,76(sp)
10105ff0:	dcc01215 	stw	r19,72(sp)
10105ff4:	dc801115 	stw	r18,68(sp)
10105ff8:	2023883a 	mov	r17,r4
10105ffc:	28001c16 	blt	r5,zero,10106070 <__smakebuf_r+0xa4>
10106000:	d80d883a 	mov	r6,sp
10106004:	010a18c0 	call	1010a18c <_fstat_r>
10106008:	10001816 	blt	r2,zero,1010606c <__smakebuf_r+0xa0>
1010600c:	d8800117 	ldw	r2,4(sp)
10106010:	00e00014 	movui	r3,32768
10106014:	10bc000c 	andi	r2,r2,61440
10106018:	14c80020 	cmpeqi	r19,r2,8192
1010601c:	10c03726 	beq	r2,r3,101060fc <__smakebuf_r+0x130>
10106020:	80c0030b 	ldhu	r3,12(r16)
10106024:	18c20014 	ori	r3,r3,2048
10106028:	80c0030d 	sth	r3,12(r16)
1010602c:	00c80004 	movi	r3,8192
10106030:	10c0521e 	bne	r2,r3,1010617c <__smakebuf_r+0x1b0>
10106034:	8140038f 	ldh	r5,14(r16)
10106038:	8809883a 	mov	r4,r17
1010603c:	010a1e80 	call	1010a1e8 <_isatty_r>
10106040:	10004c26 	beq	r2,zero,10106174 <__smakebuf_r+0x1a8>
10106044:	8080030b 	ldhu	r2,12(r16)
10106048:	80c010c4 	addi	r3,r16,67
1010604c:	80c00015 	stw	r3,0(r16)
10106050:	10800054 	ori	r2,r2,1
10106054:	8080030d 	sth	r2,12(r16)
10106058:	00800044 	movi	r2,1
1010605c:	80c00415 	stw	r3,16(r16)
10106060:	80800515 	stw	r2,20(r16)
10106064:	04810004 	movi	r18,1024
10106068:	00000706 	br	10106088 <__smakebuf_r+0xbc>
1010606c:	8080030b 	ldhu	r2,12(r16)
10106070:	10c0200c 	andi	r3,r2,128
10106074:	18001f1e 	bne	r3,zero,101060f4 <__smakebuf_r+0x128>
10106078:	04810004 	movi	r18,1024
1010607c:	10820014 	ori	r2,r2,2048
10106080:	8080030d 	sth	r2,12(r16)
10106084:	0027883a 	mov	r19,zero
10106088:	900b883a 	mov	r5,r18
1010608c:	8809883a 	mov	r4,r17
10106090:	01061880 	call	10106188 <_malloc_r>
10106094:	10002c26 	beq	r2,zero,10106148 <__smakebuf_r+0x17c>
10106098:	80c0030b 	ldhu	r3,12(r16)
1010609c:	01040434 	movhi	r4,4112
101060a0:	21143104 	addi	r4,r4,20676
101060a4:	89000f15 	stw	r4,60(r17)
101060a8:	18c02014 	ori	r3,r3,128
101060ac:	80c0030d 	sth	r3,12(r16)
101060b0:	80800015 	stw	r2,0(r16)
101060b4:	80800415 	stw	r2,16(r16)
101060b8:	84800515 	stw	r18,20(r16)
101060bc:	98001a1e 	bne	r19,zero,10106128 <__smakebuf_r+0x15c>
101060c0:	dfc01317 	ldw	ra,76(sp)
101060c4:	dcc01217 	ldw	r19,72(sp)
101060c8:	dc801117 	ldw	r18,68(sp)
101060cc:	dc401017 	ldw	r17,64(sp)
101060d0:	dc000f17 	ldw	r16,60(sp)
101060d4:	dec01404 	addi	sp,sp,80
101060d8:	f800283a 	ret
101060dc:	288010c4 	addi	r2,r5,67
101060e0:	28800015 	stw	r2,0(r5)
101060e4:	28800415 	stw	r2,16(r5)
101060e8:	00800044 	movi	r2,1
101060ec:	28800515 	stw	r2,20(r5)
101060f0:	f800283a 	ret
101060f4:	04801004 	movi	r18,64
101060f8:	003fe006 	br	1010607c <__alt_data_end+0xfffe607c>
101060fc:	81000a17 	ldw	r4,40(r16)
10106100:	00c40474 	movhi	r3,4113
10106104:	18e12e04 	addi	r3,r3,-31560
10106108:	20ffc51e 	bne	r4,r3,10106020 <__alt_data_end+0xfffe6020>
1010610c:	8080030b 	ldhu	r2,12(r16)
10106110:	04810004 	movi	r18,1024
10106114:	84801315 	stw	r18,76(r16)
10106118:	1484b03a 	or	r2,r2,r18
1010611c:	8080030d 	sth	r2,12(r16)
10106120:	0027883a 	mov	r19,zero
10106124:	003fd806 	br	10106088 <__alt_data_end+0xfffe6088>
10106128:	8140038f 	ldh	r5,14(r16)
1010612c:	8809883a 	mov	r4,r17
10106130:	010a1e80 	call	1010a1e8 <_isatty_r>
10106134:	103fe226 	beq	r2,zero,101060c0 <__alt_data_end+0xfffe60c0>
10106138:	8080030b 	ldhu	r2,12(r16)
1010613c:	10800054 	ori	r2,r2,1
10106140:	8080030d 	sth	r2,12(r16)
10106144:	003fde06 	br	101060c0 <__alt_data_end+0xfffe60c0>
10106148:	8080030b 	ldhu	r2,12(r16)
1010614c:	10c0800c 	andi	r3,r2,512
10106150:	183fdb1e 	bne	r3,zero,101060c0 <__alt_data_end+0xfffe60c0>
10106154:	10800094 	ori	r2,r2,2
10106158:	80c010c4 	addi	r3,r16,67
1010615c:	8080030d 	sth	r2,12(r16)
10106160:	00800044 	movi	r2,1
10106164:	80c00015 	stw	r3,0(r16)
10106168:	80c00415 	stw	r3,16(r16)
1010616c:	80800515 	stw	r2,20(r16)
10106170:	003fd306 	br	101060c0 <__alt_data_end+0xfffe60c0>
10106174:	04810004 	movi	r18,1024
10106178:	003fc306 	br	10106088 <__alt_data_end+0xfffe6088>
1010617c:	0027883a 	mov	r19,zero
10106180:	04810004 	movi	r18,1024
10106184:	003fc006 	br	10106088 <__alt_data_end+0xfffe6088>

10106188 <_malloc_r>:
10106188:	defff504 	addi	sp,sp,-44
1010618c:	dc800315 	stw	r18,12(sp)
10106190:	dfc00a15 	stw	ra,40(sp)
10106194:	df000915 	stw	fp,36(sp)
10106198:	ddc00815 	stw	r23,32(sp)
1010619c:	dd800715 	stw	r22,28(sp)
101061a0:	dd400615 	stw	r21,24(sp)
101061a4:	dd000515 	stw	r20,20(sp)
101061a8:	dcc00415 	stw	r19,16(sp)
101061ac:	dc400215 	stw	r17,8(sp)
101061b0:	dc000115 	stw	r16,4(sp)
101061b4:	288002c4 	addi	r2,r5,11
101061b8:	00c00584 	movi	r3,22
101061bc:	2025883a 	mov	r18,r4
101061c0:	18807f2e 	bgeu	r3,r2,101063c0 <_malloc_r+0x238>
101061c4:	047ffe04 	movi	r17,-8
101061c8:	1462703a 	and	r17,r2,r17
101061cc:	8800a316 	blt	r17,zero,1010645c <_malloc_r+0x2d4>
101061d0:	8940a236 	bltu	r17,r5,1010645c <_malloc_r+0x2d4>
101061d4:	010e03c0 	call	1010e03c <__malloc_lock>
101061d8:	00807dc4 	movi	r2,503
101061dc:	1441e92e 	bgeu	r2,r17,10106984 <_malloc_r+0x7fc>
101061e0:	8804d27a 	srli	r2,r17,9
101061e4:	1000a126 	beq	r2,zero,1010646c <_malloc_r+0x2e4>
101061e8:	00c00104 	movi	r3,4
101061ec:	18811e36 	bltu	r3,r2,10106668 <_malloc_r+0x4e0>
101061f0:	8804d1ba 	srli	r2,r17,6
101061f4:	12000e44 	addi	r8,r2,57
101061f8:	11c00e04 	addi	r7,r2,56
101061fc:	4209883a 	add	r4,r8,r8
10106200:	04c40474 	movhi	r19,4113
10106204:	2109883a 	add	r4,r4,r4
10106208:	9cc39a04 	addi	r19,r19,3688
1010620c:	2109883a 	add	r4,r4,r4
10106210:	9909883a 	add	r4,r19,r4
10106214:	24000117 	ldw	r16,4(r4)
10106218:	213ffe04 	addi	r4,r4,-8
1010621c:	24009726 	beq	r4,r16,1010647c <_malloc_r+0x2f4>
10106220:	80800117 	ldw	r2,4(r16)
10106224:	01bfff04 	movi	r6,-4
10106228:	014003c4 	movi	r5,15
1010622c:	1184703a 	and	r2,r2,r6
10106230:	1447c83a 	sub	r3,r2,r17
10106234:	28c00716 	blt	r5,r3,10106254 <_malloc_r+0xcc>
10106238:	1800920e 	bge	r3,zero,10106484 <_malloc_r+0x2fc>
1010623c:	84000317 	ldw	r16,12(r16)
10106240:	24008e26 	beq	r4,r16,1010647c <_malloc_r+0x2f4>
10106244:	80800117 	ldw	r2,4(r16)
10106248:	1184703a 	and	r2,r2,r6
1010624c:	1447c83a 	sub	r3,r2,r17
10106250:	28fff90e 	bge	r5,r3,10106238 <__alt_data_end+0xfffe6238>
10106254:	3809883a 	mov	r4,r7
10106258:	01840474 	movhi	r6,4113
1010625c:	9c000417 	ldw	r16,16(r19)
10106260:	31839a04 	addi	r6,r6,3688
10106264:	32000204 	addi	r8,r6,8
10106268:	82013426 	beq	r16,r8,1010673c <_malloc_r+0x5b4>
1010626c:	80c00117 	ldw	r3,4(r16)
10106270:	00bfff04 	movi	r2,-4
10106274:	188e703a 	and	r7,r3,r2
10106278:	3c45c83a 	sub	r2,r7,r17
1010627c:	00c003c4 	movi	r3,15
10106280:	18811f16 	blt	r3,r2,10106700 <_malloc_r+0x578>
10106284:	32000515 	stw	r8,20(r6)
10106288:	32000415 	stw	r8,16(r6)
1010628c:	10007f0e 	bge	r2,zero,1010648c <_malloc_r+0x304>
10106290:	00807fc4 	movi	r2,511
10106294:	11c0fd36 	bltu	r2,r7,1010668c <_malloc_r+0x504>
10106298:	3806d0fa 	srli	r3,r7,3
1010629c:	01c00044 	movi	r7,1
101062a0:	30800117 	ldw	r2,4(r6)
101062a4:	19400044 	addi	r5,r3,1
101062a8:	294b883a 	add	r5,r5,r5
101062ac:	1807d0ba 	srai	r3,r3,2
101062b0:	294b883a 	add	r5,r5,r5
101062b4:	294b883a 	add	r5,r5,r5
101062b8:	298b883a 	add	r5,r5,r6
101062bc:	38c6983a 	sll	r3,r7,r3
101062c0:	29c00017 	ldw	r7,0(r5)
101062c4:	2a7ffe04 	addi	r9,r5,-8
101062c8:	1886b03a 	or	r3,r3,r2
101062cc:	82400315 	stw	r9,12(r16)
101062d0:	81c00215 	stw	r7,8(r16)
101062d4:	30c00115 	stw	r3,4(r6)
101062d8:	2c000015 	stw	r16,0(r5)
101062dc:	3c000315 	stw	r16,12(r7)
101062e0:	2005d0ba 	srai	r2,r4,2
101062e4:	01400044 	movi	r5,1
101062e8:	288a983a 	sll	r5,r5,r2
101062ec:	19406f36 	bltu	r3,r5,101064ac <_malloc_r+0x324>
101062f0:	28c4703a 	and	r2,r5,r3
101062f4:	10000a1e 	bne	r2,zero,10106320 <_malloc_r+0x198>
101062f8:	00bfff04 	movi	r2,-4
101062fc:	294b883a 	add	r5,r5,r5
10106300:	2088703a 	and	r4,r4,r2
10106304:	28c4703a 	and	r2,r5,r3
10106308:	21000104 	addi	r4,r4,4
1010630c:	1000041e 	bne	r2,zero,10106320 <_malloc_r+0x198>
10106310:	294b883a 	add	r5,r5,r5
10106314:	28c4703a 	and	r2,r5,r3
10106318:	21000104 	addi	r4,r4,4
1010631c:	103ffc26 	beq	r2,zero,10106310 <__alt_data_end+0xfffe6310>
10106320:	02bfff04 	movi	r10,-4
10106324:	024003c4 	movi	r9,15
10106328:	21800044 	addi	r6,r4,1
1010632c:	318d883a 	add	r6,r6,r6
10106330:	318d883a 	add	r6,r6,r6
10106334:	318d883a 	add	r6,r6,r6
10106338:	998d883a 	add	r6,r19,r6
1010633c:	333ffe04 	addi	r12,r6,-8
10106340:	2017883a 	mov	r11,r4
10106344:	31800104 	addi	r6,r6,4
10106348:	34000017 	ldw	r16,0(r6)
1010634c:	31fffd04 	addi	r7,r6,-12
10106350:	81c0041e 	bne	r16,r7,10106364 <_malloc_r+0x1dc>
10106354:	0000fb06 	br	10106744 <_malloc_r+0x5bc>
10106358:	1801030e 	bge	r3,zero,10106768 <_malloc_r+0x5e0>
1010635c:	84000317 	ldw	r16,12(r16)
10106360:	81c0f826 	beq	r16,r7,10106744 <_malloc_r+0x5bc>
10106364:	80800117 	ldw	r2,4(r16)
10106368:	1284703a 	and	r2,r2,r10
1010636c:	1447c83a 	sub	r3,r2,r17
10106370:	48fff90e 	bge	r9,r3,10106358 <__alt_data_end+0xfffe6358>
10106374:	80800317 	ldw	r2,12(r16)
10106378:	81000217 	ldw	r4,8(r16)
1010637c:	89400054 	ori	r5,r17,1
10106380:	81400115 	stw	r5,4(r16)
10106384:	20800315 	stw	r2,12(r4)
10106388:	11000215 	stw	r4,8(r2)
1010638c:	8463883a 	add	r17,r16,r17
10106390:	9c400515 	stw	r17,20(r19)
10106394:	9c400415 	stw	r17,16(r19)
10106398:	18800054 	ori	r2,r3,1
1010639c:	88800115 	stw	r2,4(r17)
101063a0:	8a000315 	stw	r8,12(r17)
101063a4:	8a000215 	stw	r8,8(r17)
101063a8:	88e3883a 	add	r17,r17,r3
101063ac:	88c00015 	stw	r3,0(r17)
101063b0:	9009883a 	mov	r4,r18
101063b4:	010e0600 	call	1010e060 <__malloc_unlock>
101063b8:	80800204 	addi	r2,r16,8
101063bc:	00001b06 	br	1010642c <_malloc_r+0x2a4>
101063c0:	04400404 	movi	r17,16
101063c4:	89402536 	bltu	r17,r5,1010645c <_malloc_r+0x2d4>
101063c8:	010e03c0 	call	1010e03c <__malloc_lock>
101063cc:	00800184 	movi	r2,6
101063d0:	01000084 	movi	r4,2
101063d4:	04c40474 	movhi	r19,4113
101063d8:	1085883a 	add	r2,r2,r2
101063dc:	9cc39a04 	addi	r19,r19,3688
101063e0:	1085883a 	add	r2,r2,r2
101063e4:	9885883a 	add	r2,r19,r2
101063e8:	14000117 	ldw	r16,4(r2)
101063ec:	10fffe04 	addi	r3,r2,-8
101063f0:	80c0d926 	beq	r16,r3,10106758 <_malloc_r+0x5d0>
101063f4:	80c00117 	ldw	r3,4(r16)
101063f8:	81000317 	ldw	r4,12(r16)
101063fc:	00bfff04 	movi	r2,-4
10106400:	1884703a 	and	r2,r3,r2
10106404:	81400217 	ldw	r5,8(r16)
10106408:	8085883a 	add	r2,r16,r2
1010640c:	10c00117 	ldw	r3,4(r2)
10106410:	29000315 	stw	r4,12(r5)
10106414:	21400215 	stw	r5,8(r4)
10106418:	18c00054 	ori	r3,r3,1
1010641c:	10c00115 	stw	r3,4(r2)
10106420:	9009883a 	mov	r4,r18
10106424:	010e0600 	call	1010e060 <__malloc_unlock>
10106428:	80800204 	addi	r2,r16,8
1010642c:	dfc00a17 	ldw	ra,40(sp)
10106430:	df000917 	ldw	fp,36(sp)
10106434:	ddc00817 	ldw	r23,32(sp)
10106438:	dd800717 	ldw	r22,28(sp)
1010643c:	dd400617 	ldw	r21,24(sp)
10106440:	dd000517 	ldw	r20,20(sp)
10106444:	dcc00417 	ldw	r19,16(sp)
10106448:	dc800317 	ldw	r18,12(sp)
1010644c:	dc400217 	ldw	r17,8(sp)
10106450:	dc000117 	ldw	r16,4(sp)
10106454:	dec00b04 	addi	sp,sp,44
10106458:	f800283a 	ret
1010645c:	00800304 	movi	r2,12
10106460:	90800015 	stw	r2,0(r18)
10106464:	0005883a 	mov	r2,zero
10106468:	003ff006 	br	1010642c <__alt_data_end+0xfffe642c>
1010646c:	01002004 	movi	r4,128
10106470:	02001004 	movi	r8,64
10106474:	01c00fc4 	movi	r7,63
10106478:	003f6106 	br	10106200 <__alt_data_end+0xfffe6200>
1010647c:	4009883a 	mov	r4,r8
10106480:	003f7506 	br	10106258 <__alt_data_end+0xfffe6258>
10106484:	81000317 	ldw	r4,12(r16)
10106488:	003fde06 	br	10106404 <__alt_data_end+0xfffe6404>
1010648c:	81c5883a 	add	r2,r16,r7
10106490:	11400117 	ldw	r5,4(r2)
10106494:	9009883a 	mov	r4,r18
10106498:	29400054 	ori	r5,r5,1
1010649c:	11400115 	stw	r5,4(r2)
101064a0:	010e0600 	call	1010e060 <__malloc_unlock>
101064a4:	80800204 	addi	r2,r16,8
101064a8:	003fe006 	br	1010642c <__alt_data_end+0xfffe642c>
101064ac:	9c000217 	ldw	r16,8(r19)
101064b0:	00bfff04 	movi	r2,-4
101064b4:	85800117 	ldw	r22,4(r16)
101064b8:	b0ac703a 	and	r22,r22,r2
101064bc:	b4400336 	bltu	r22,r17,101064cc <_malloc_r+0x344>
101064c0:	b445c83a 	sub	r2,r22,r17
101064c4:	00c003c4 	movi	r3,15
101064c8:	18805d16 	blt	r3,r2,10106640 <_malloc_r+0x4b8>
101064cc:	05c40474 	movhi	r23,4113
101064d0:	00840474 	movhi	r2,4113
101064d4:	10902604 	addi	r2,r2,16536
101064d8:	bdc92b04 	addi	r23,r23,9388
101064dc:	15400017 	ldw	r21,0(r2)
101064e0:	b8c00017 	ldw	r3,0(r23)
101064e4:	00bfffc4 	movi	r2,-1
101064e8:	858d883a 	add	r6,r16,r22
101064ec:	8d6b883a 	add	r21,r17,r21
101064f0:	1880ea26 	beq	r3,r2,1010689c <_malloc_r+0x714>
101064f4:	ad4403c4 	addi	r21,r21,4111
101064f8:	00bc0004 	movi	r2,-4096
101064fc:	a8aa703a 	and	r21,r21,r2
10106500:	a80b883a 	mov	r5,r21
10106504:	9009883a 	mov	r4,r18
10106508:	d9800015 	stw	r6,0(sp)
1010650c:	010838c0 	call	1010838c <_sbrk_r>
10106510:	1029883a 	mov	r20,r2
10106514:	00bfffc4 	movi	r2,-1
10106518:	d9800017 	ldw	r6,0(sp)
1010651c:	a080e826 	beq	r20,r2,101068c0 <_malloc_r+0x738>
10106520:	a180a636 	bltu	r20,r6,101067bc <_malloc_r+0x634>
10106524:	07040474 	movhi	fp,4113
10106528:	e7102f04 	addi	fp,fp,16572
1010652c:	e0800017 	ldw	r2,0(fp)
10106530:	a887883a 	add	r3,r21,r2
10106534:	e0c00015 	stw	r3,0(fp)
10106538:	3500e626 	beq	r6,r20,101068d4 <_malloc_r+0x74c>
1010653c:	b9000017 	ldw	r4,0(r23)
10106540:	00bfffc4 	movi	r2,-1
10106544:	2080ee26 	beq	r4,r2,10106900 <_malloc_r+0x778>
10106548:	a185c83a 	sub	r2,r20,r6
1010654c:	10c5883a 	add	r2,r2,r3
10106550:	e0800015 	stw	r2,0(fp)
10106554:	a0c001cc 	andi	r3,r20,7
10106558:	1800bc26 	beq	r3,zero,1010684c <_malloc_r+0x6c4>
1010655c:	a0e9c83a 	sub	r20,r20,r3
10106560:	00840204 	movi	r2,4104
10106564:	a5000204 	addi	r20,r20,8
10106568:	10c7c83a 	sub	r3,r2,r3
1010656c:	a545883a 	add	r2,r20,r21
10106570:	1083ffcc 	andi	r2,r2,4095
10106574:	18abc83a 	sub	r21,r3,r2
10106578:	a80b883a 	mov	r5,r21
1010657c:	9009883a 	mov	r4,r18
10106580:	010838c0 	call	1010838c <_sbrk_r>
10106584:	00ffffc4 	movi	r3,-1
10106588:	10c0e126 	beq	r2,r3,10106910 <_malloc_r+0x788>
1010658c:	1505c83a 	sub	r2,r2,r20
10106590:	1545883a 	add	r2,r2,r21
10106594:	10800054 	ori	r2,r2,1
10106598:	e0c00017 	ldw	r3,0(fp)
1010659c:	9d000215 	stw	r20,8(r19)
101065a0:	a0800115 	stw	r2,4(r20)
101065a4:	a8c7883a 	add	r3,r21,r3
101065a8:	e0c00015 	stw	r3,0(fp)
101065ac:	84c00e26 	beq	r16,r19,101065e8 <_malloc_r+0x460>
101065b0:	018003c4 	movi	r6,15
101065b4:	3580a72e 	bgeu	r6,r22,10106854 <_malloc_r+0x6cc>
101065b8:	81400117 	ldw	r5,4(r16)
101065bc:	013ffe04 	movi	r4,-8
101065c0:	b0bffd04 	addi	r2,r22,-12
101065c4:	1104703a 	and	r2,r2,r4
101065c8:	2900004c 	andi	r4,r5,1
101065cc:	2088b03a 	or	r4,r4,r2
101065d0:	81000115 	stw	r4,4(r16)
101065d4:	01400144 	movi	r5,5
101065d8:	8089883a 	add	r4,r16,r2
101065dc:	21400115 	stw	r5,4(r4)
101065e0:	21400215 	stw	r5,8(r4)
101065e4:	3080cd36 	bltu	r6,r2,1010691c <_malloc_r+0x794>
101065e8:	00840474 	movhi	r2,4113
101065ec:	10902504 	addi	r2,r2,16532
101065f0:	11000017 	ldw	r4,0(r2)
101065f4:	20c0012e 	bgeu	r4,r3,101065fc <_malloc_r+0x474>
101065f8:	10c00015 	stw	r3,0(r2)
101065fc:	00840474 	movhi	r2,4113
10106600:	10902404 	addi	r2,r2,16528
10106604:	11000017 	ldw	r4,0(r2)
10106608:	9c000217 	ldw	r16,8(r19)
1010660c:	20c0012e 	bgeu	r4,r3,10106614 <_malloc_r+0x48c>
10106610:	10c00015 	stw	r3,0(r2)
10106614:	80c00117 	ldw	r3,4(r16)
10106618:	00bfff04 	movi	r2,-4
1010661c:	1886703a 	and	r3,r3,r2
10106620:	1c45c83a 	sub	r2,r3,r17
10106624:	1c400236 	bltu	r3,r17,10106630 <_malloc_r+0x4a8>
10106628:	00c003c4 	movi	r3,15
1010662c:	18800416 	blt	r3,r2,10106640 <_malloc_r+0x4b8>
10106630:	9009883a 	mov	r4,r18
10106634:	010e0600 	call	1010e060 <__malloc_unlock>
10106638:	0005883a 	mov	r2,zero
1010663c:	003f7b06 	br	1010642c <__alt_data_end+0xfffe642c>
10106640:	88c00054 	ori	r3,r17,1
10106644:	80c00115 	stw	r3,4(r16)
10106648:	8463883a 	add	r17,r16,r17
1010664c:	10800054 	ori	r2,r2,1
10106650:	9c400215 	stw	r17,8(r19)
10106654:	88800115 	stw	r2,4(r17)
10106658:	9009883a 	mov	r4,r18
1010665c:	010e0600 	call	1010e060 <__malloc_unlock>
10106660:	80800204 	addi	r2,r16,8
10106664:	003f7106 	br	1010642c <__alt_data_end+0xfffe642c>
10106668:	00c00504 	movi	r3,20
1010666c:	18804a2e 	bgeu	r3,r2,10106798 <_malloc_r+0x610>
10106670:	00c01504 	movi	r3,84
10106674:	18806e36 	bltu	r3,r2,10106830 <_malloc_r+0x6a8>
10106678:	8804d33a 	srli	r2,r17,12
1010667c:	12001bc4 	addi	r8,r2,111
10106680:	11c01b84 	addi	r7,r2,110
10106684:	4209883a 	add	r4,r8,r8
10106688:	003edd06 	br	10106200 <__alt_data_end+0xfffe6200>
1010668c:	3804d27a 	srli	r2,r7,9
10106690:	00c00104 	movi	r3,4
10106694:	1880442e 	bgeu	r3,r2,101067a8 <_malloc_r+0x620>
10106698:	00c00504 	movi	r3,20
1010669c:	18808136 	bltu	r3,r2,101068a4 <_malloc_r+0x71c>
101066a0:	11401704 	addi	r5,r2,92
101066a4:	10c016c4 	addi	r3,r2,91
101066a8:	294b883a 	add	r5,r5,r5
101066ac:	294b883a 	add	r5,r5,r5
101066b0:	294b883a 	add	r5,r5,r5
101066b4:	994b883a 	add	r5,r19,r5
101066b8:	28800017 	ldw	r2,0(r5)
101066bc:	01840474 	movhi	r6,4113
101066c0:	297ffe04 	addi	r5,r5,-8
101066c4:	31839a04 	addi	r6,r6,3688
101066c8:	28806526 	beq	r5,r2,10106860 <_malloc_r+0x6d8>
101066cc:	01bfff04 	movi	r6,-4
101066d0:	10c00117 	ldw	r3,4(r2)
101066d4:	1986703a 	and	r3,r3,r6
101066d8:	38c0022e 	bgeu	r7,r3,101066e4 <_malloc_r+0x55c>
101066dc:	10800217 	ldw	r2,8(r2)
101066e0:	28bffb1e 	bne	r5,r2,101066d0 <__alt_data_end+0xfffe66d0>
101066e4:	11400317 	ldw	r5,12(r2)
101066e8:	98c00117 	ldw	r3,4(r19)
101066ec:	81400315 	stw	r5,12(r16)
101066f0:	80800215 	stw	r2,8(r16)
101066f4:	2c000215 	stw	r16,8(r5)
101066f8:	14000315 	stw	r16,12(r2)
101066fc:	003ef806 	br	101062e0 <__alt_data_end+0xfffe62e0>
10106700:	88c00054 	ori	r3,r17,1
10106704:	80c00115 	stw	r3,4(r16)
10106708:	8463883a 	add	r17,r16,r17
1010670c:	34400515 	stw	r17,20(r6)
10106710:	34400415 	stw	r17,16(r6)
10106714:	10c00054 	ori	r3,r2,1
10106718:	8a000315 	stw	r8,12(r17)
1010671c:	8a000215 	stw	r8,8(r17)
10106720:	88c00115 	stw	r3,4(r17)
10106724:	88a3883a 	add	r17,r17,r2
10106728:	88800015 	stw	r2,0(r17)
1010672c:	9009883a 	mov	r4,r18
10106730:	010e0600 	call	1010e060 <__malloc_unlock>
10106734:	80800204 	addi	r2,r16,8
10106738:	003f3c06 	br	1010642c <__alt_data_end+0xfffe642c>
1010673c:	30c00117 	ldw	r3,4(r6)
10106740:	003ee706 	br	101062e0 <__alt_data_end+0xfffe62e0>
10106744:	5ac00044 	addi	r11,r11,1
10106748:	588000cc 	andi	r2,r11,3
1010674c:	31800204 	addi	r6,r6,8
10106750:	103efd1e 	bne	r2,zero,10106348 <__alt_data_end+0xfffe6348>
10106754:	00002406 	br	101067e8 <_malloc_r+0x660>
10106758:	14000317 	ldw	r16,12(r2)
1010675c:	143f251e 	bne	r2,r16,101063f4 <__alt_data_end+0xfffe63f4>
10106760:	21000084 	addi	r4,r4,2
10106764:	003ebc06 	br	10106258 <__alt_data_end+0xfffe6258>
10106768:	8085883a 	add	r2,r16,r2
1010676c:	10c00117 	ldw	r3,4(r2)
10106770:	81000317 	ldw	r4,12(r16)
10106774:	81400217 	ldw	r5,8(r16)
10106778:	18c00054 	ori	r3,r3,1
1010677c:	10c00115 	stw	r3,4(r2)
10106780:	29000315 	stw	r4,12(r5)
10106784:	21400215 	stw	r5,8(r4)
10106788:	9009883a 	mov	r4,r18
1010678c:	010e0600 	call	1010e060 <__malloc_unlock>
10106790:	80800204 	addi	r2,r16,8
10106794:	003f2506 	br	1010642c <__alt_data_end+0xfffe642c>
10106798:	12001704 	addi	r8,r2,92
1010679c:	11c016c4 	addi	r7,r2,91
101067a0:	4209883a 	add	r4,r8,r8
101067a4:	003e9606 	br	10106200 <__alt_data_end+0xfffe6200>
101067a8:	3804d1ba 	srli	r2,r7,6
101067ac:	11400e44 	addi	r5,r2,57
101067b0:	10c00e04 	addi	r3,r2,56
101067b4:	294b883a 	add	r5,r5,r5
101067b8:	003fbc06 	br	101066ac <__alt_data_end+0xfffe66ac>
101067bc:	84ff5926 	beq	r16,r19,10106524 <__alt_data_end+0xfffe6524>
101067c0:	00840474 	movhi	r2,4113
101067c4:	10839a04 	addi	r2,r2,3688
101067c8:	14000217 	ldw	r16,8(r2)
101067cc:	00bfff04 	movi	r2,-4
101067d0:	80c00117 	ldw	r3,4(r16)
101067d4:	1886703a 	and	r3,r3,r2
101067d8:	003f9106 	br	10106620 <__alt_data_end+0xfffe6620>
101067dc:	60800217 	ldw	r2,8(r12)
101067e0:	213fffc4 	addi	r4,r4,-1
101067e4:	1300651e 	bne	r2,r12,1010697c <_malloc_r+0x7f4>
101067e8:	208000cc 	andi	r2,r4,3
101067ec:	633ffe04 	addi	r12,r12,-8
101067f0:	103ffa1e 	bne	r2,zero,101067dc <__alt_data_end+0xfffe67dc>
101067f4:	98800117 	ldw	r2,4(r19)
101067f8:	0146303a 	nor	r3,zero,r5
101067fc:	1884703a 	and	r2,r3,r2
10106800:	98800115 	stw	r2,4(r19)
10106804:	294b883a 	add	r5,r5,r5
10106808:	117f2836 	bltu	r2,r5,101064ac <__alt_data_end+0xfffe64ac>
1010680c:	283f2726 	beq	r5,zero,101064ac <__alt_data_end+0xfffe64ac>
10106810:	2886703a 	and	r3,r5,r2
10106814:	5809883a 	mov	r4,r11
10106818:	183ec31e 	bne	r3,zero,10106328 <__alt_data_end+0xfffe6328>
1010681c:	294b883a 	add	r5,r5,r5
10106820:	2886703a 	and	r3,r5,r2
10106824:	21000104 	addi	r4,r4,4
10106828:	183ffc26 	beq	r3,zero,1010681c <__alt_data_end+0xfffe681c>
1010682c:	003ebe06 	br	10106328 <__alt_data_end+0xfffe6328>
10106830:	00c05504 	movi	r3,340
10106834:	18801236 	bltu	r3,r2,10106880 <_malloc_r+0x6f8>
10106838:	8804d3fa 	srli	r2,r17,15
1010683c:	12001e04 	addi	r8,r2,120
10106840:	11c01dc4 	addi	r7,r2,119
10106844:	4209883a 	add	r4,r8,r8
10106848:	003e6d06 	br	10106200 <__alt_data_end+0xfffe6200>
1010684c:	00c40004 	movi	r3,4096
10106850:	003f4606 	br	1010656c <__alt_data_end+0xfffe656c>
10106854:	00800044 	movi	r2,1
10106858:	a0800115 	stw	r2,4(r20)
1010685c:	003f7406 	br	10106630 <__alt_data_end+0xfffe6630>
10106860:	1805d0ba 	srai	r2,r3,2
10106864:	01c00044 	movi	r7,1
10106868:	30c00117 	ldw	r3,4(r6)
1010686c:	388e983a 	sll	r7,r7,r2
10106870:	2805883a 	mov	r2,r5
10106874:	38c6b03a 	or	r3,r7,r3
10106878:	30c00115 	stw	r3,4(r6)
1010687c:	003f9b06 	br	101066ec <__alt_data_end+0xfffe66ec>
10106880:	00c15504 	movi	r3,1364
10106884:	18801a36 	bltu	r3,r2,101068f0 <_malloc_r+0x768>
10106888:	8804d4ba 	srli	r2,r17,18
1010688c:	12001f44 	addi	r8,r2,125
10106890:	11c01f04 	addi	r7,r2,124
10106894:	4209883a 	add	r4,r8,r8
10106898:	003e5906 	br	10106200 <__alt_data_end+0xfffe6200>
1010689c:	ad400404 	addi	r21,r21,16
101068a0:	003f1706 	br	10106500 <__alt_data_end+0xfffe6500>
101068a4:	00c01504 	movi	r3,84
101068a8:	18802336 	bltu	r3,r2,10106938 <_malloc_r+0x7b0>
101068ac:	3804d33a 	srli	r2,r7,12
101068b0:	11401bc4 	addi	r5,r2,111
101068b4:	10c01b84 	addi	r3,r2,110
101068b8:	294b883a 	add	r5,r5,r5
101068bc:	003f7b06 	br	101066ac <__alt_data_end+0xfffe66ac>
101068c0:	9c000217 	ldw	r16,8(r19)
101068c4:	00bfff04 	movi	r2,-4
101068c8:	80c00117 	ldw	r3,4(r16)
101068cc:	1886703a 	and	r3,r3,r2
101068d0:	003f5306 	br	10106620 <__alt_data_end+0xfffe6620>
101068d4:	3083ffcc 	andi	r2,r6,4095
101068d8:	103f181e 	bne	r2,zero,1010653c <__alt_data_end+0xfffe653c>
101068dc:	99000217 	ldw	r4,8(r19)
101068e0:	b545883a 	add	r2,r22,r21
101068e4:	10800054 	ori	r2,r2,1
101068e8:	20800115 	stw	r2,4(r4)
101068ec:	003f3e06 	br	101065e8 <__alt_data_end+0xfffe65e8>
101068f0:	01003f84 	movi	r4,254
101068f4:	02001fc4 	movi	r8,127
101068f8:	01c01f84 	movi	r7,126
101068fc:	003e4006 	br	10106200 <__alt_data_end+0xfffe6200>
10106900:	00840474 	movhi	r2,4113
10106904:	10892b04 	addi	r2,r2,9388
10106908:	15000015 	stw	r20,0(r2)
1010690c:	003f1106 	br	10106554 <__alt_data_end+0xfffe6554>
10106910:	00800044 	movi	r2,1
10106914:	002b883a 	mov	r21,zero
10106918:	003f1f06 	br	10106598 <__alt_data_end+0xfffe6598>
1010691c:	81400204 	addi	r5,r16,8
10106920:	9009883a 	mov	r4,r18
10106924:	01055900 	call	10105590 <_free_r>
10106928:	00840474 	movhi	r2,4113
1010692c:	10902f04 	addi	r2,r2,16572
10106930:	10c00017 	ldw	r3,0(r2)
10106934:	003f2c06 	br	101065e8 <__alt_data_end+0xfffe65e8>
10106938:	00c05504 	movi	r3,340
1010693c:	18800536 	bltu	r3,r2,10106954 <_malloc_r+0x7cc>
10106940:	3804d3fa 	srli	r2,r7,15
10106944:	11401e04 	addi	r5,r2,120
10106948:	10c01dc4 	addi	r3,r2,119
1010694c:	294b883a 	add	r5,r5,r5
10106950:	003f5606 	br	101066ac <__alt_data_end+0xfffe66ac>
10106954:	00c15504 	movi	r3,1364
10106958:	18800536 	bltu	r3,r2,10106970 <_malloc_r+0x7e8>
1010695c:	3804d4ba 	srli	r2,r7,18
10106960:	11401f44 	addi	r5,r2,125
10106964:	10c01f04 	addi	r3,r2,124
10106968:	294b883a 	add	r5,r5,r5
1010696c:	003f4f06 	br	101066ac <__alt_data_end+0xfffe66ac>
10106970:	01403f84 	movi	r5,254
10106974:	00c01f84 	movi	r3,126
10106978:	003f4c06 	br	101066ac <__alt_data_end+0xfffe66ac>
1010697c:	98800117 	ldw	r2,4(r19)
10106980:	003fa006 	br	10106804 <__alt_data_end+0xfffe6804>
10106984:	8808d0fa 	srli	r4,r17,3
10106988:	20800044 	addi	r2,r4,1
1010698c:	1085883a 	add	r2,r2,r2
10106990:	003e9006 	br	101063d4 <__alt_data_end+0xfffe63d4>

10106994 <memchr>:
10106994:	208000cc 	andi	r2,r4,3
10106998:	280f883a 	mov	r7,r5
1010699c:	10003426 	beq	r2,zero,10106a70 <memchr+0xdc>
101069a0:	30bfffc4 	addi	r2,r6,-1
101069a4:	30001a26 	beq	r6,zero,10106a10 <memchr+0x7c>
101069a8:	20c00003 	ldbu	r3,0(r4)
101069ac:	29803fcc 	andi	r6,r5,255
101069b0:	30c0051e 	bne	r6,r3,101069c8 <memchr+0x34>
101069b4:	00001806 	br	10106a18 <memchr+0x84>
101069b8:	10001526 	beq	r2,zero,10106a10 <memchr+0x7c>
101069bc:	20c00003 	ldbu	r3,0(r4)
101069c0:	10bfffc4 	addi	r2,r2,-1
101069c4:	30c01426 	beq	r6,r3,10106a18 <memchr+0x84>
101069c8:	21000044 	addi	r4,r4,1
101069cc:	20c000cc 	andi	r3,r4,3
101069d0:	183ff91e 	bne	r3,zero,101069b8 <__alt_data_end+0xfffe69b8>
101069d4:	020000c4 	movi	r8,3
101069d8:	40801136 	bltu	r8,r2,10106a20 <memchr+0x8c>
101069dc:	10000c26 	beq	r2,zero,10106a10 <memchr+0x7c>
101069e0:	20c00003 	ldbu	r3,0(r4)
101069e4:	29403fcc 	andi	r5,r5,255
101069e8:	28c00b26 	beq	r5,r3,10106a18 <memchr+0x84>
101069ec:	20c00044 	addi	r3,r4,1
101069f0:	39803fcc 	andi	r6,r7,255
101069f4:	2089883a 	add	r4,r4,r2
101069f8:	00000306 	br	10106a08 <memchr+0x74>
101069fc:	18c00044 	addi	r3,r3,1
10106a00:	197fffc3 	ldbu	r5,-1(r3)
10106a04:	31400526 	beq	r6,r5,10106a1c <memchr+0x88>
10106a08:	1805883a 	mov	r2,r3
10106a0c:	20fffb1e 	bne	r4,r3,101069fc <__alt_data_end+0xfffe69fc>
10106a10:	0005883a 	mov	r2,zero
10106a14:	f800283a 	ret
10106a18:	2005883a 	mov	r2,r4
10106a1c:	f800283a 	ret
10106a20:	28c03fcc 	andi	r3,r5,255
10106a24:	1812923a 	slli	r9,r3,8
10106a28:	02ffbff4 	movhi	r11,65279
10106a2c:	02a02074 	movhi	r10,32897
10106a30:	48d2b03a 	or	r9,r9,r3
10106a34:	4806943a 	slli	r3,r9,16
10106a38:	5affbfc4 	addi	r11,r11,-257
10106a3c:	52a02004 	addi	r10,r10,-32640
10106a40:	48d2b03a 	or	r9,r9,r3
10106a44:	20c00017 	ldw	r3,0(r4)
10106a48:	48c6f03a 	xor	r3,r9,r3
10106a4c:	1acd883a 	add	r6,r3,r11
10106a50:	00c6303a 	nor	r3,zero,r3
10106a54:	30c6703a 	and	r3,r6,r3
10106a58:	1a86703a 	and	r3,r3,r10
10106a5c:	183fe01e 	bne	r3,zero,101069e0 <__alt_data_end+0xfffe69e0>
10106a60:	10bfff04 	addi	r2,r2,-4
10106a64:	21000104 	addi	r4,r4,4
10106a68:	40bff636 	bltu	r8,r2,10106a44 <__alt_data_end+0xfffe6a44>
10106a6c:	003fdb06 	br	101069dc <__alt_data_end+0xfffe69dc>
10106a70:	3005883a 	mov	r2,r6
10106a74:	003fd706 	br	101069d4 <__alt_data_end+0xfffe69d4>

10106a78 <memmove>:
10106a78:	2005883a 	mov	r2,r4
10106a7c:	29000b2e 	bgeu	r5,r4,10106aac <memmove+0x34>
10106a80:	298f883a 	add	r7,r5,r6
10106a84:	21c0092e 	bgeu	r4,r7,10106aac <memmove+0x34>
10106a88:	2187883a 	add	r3,r4,r6
10106a8c:	198bc83a 	sub	r5,r3,r6
10106a90:	30004826 	beq	r6,zero,10106bb4 <memmove+0x13c>
10106a94:	39ffffc4 	addi	r7,r7,-1
10106a98:	39000003 	ldbu	r4,0(r7)
10106a9c:	18ffffc4 	addi	r3,r3,-1
10106aa0:	19000005 	stb	r4,0(r3)
10106aa4:	28fffb1e 	bne	r5,r3,10106a94 <__alt_data_end+0xfffe6a94>
10106aa8:	f800283a 	ret
10106aac:	00c003c4 	movi	r3,15
10106ab0:	1980412e 	bgeu	r3,r6,10106bb8 <memmove+0x140>
10106ab4:	2886b03a 	or	r3,r5,r2
10106ab8:	18c000cc 	andi	r3,r3,3
10106abc:	1800401e 	bne	r3,zero,10106bc0 <memmove+0x148>
10106ac0:	33fffc04 	addi	r15,r6,-16
10106ac4:	781ed13a 	srli	r15,r15,4
10106ac8:	28c00104 	addi	r3,r5,4
10106acc:	13400104 	addi	r13,r2,4
10106ad0:	781c913a 	slli	r14,r15,4
10106ad4:	2b000204 	addi	r12,r5,8
10106ad8:	12c00204 	addi	r11,r2,8
10106adc:	73800504 	addi	r14,r14,20
10106ae0:	2a800304 	addi	r10,r5,12
10106ae4:	12400304 	addi	r9,r2,12
10106ae8:	2b9d883a 	add	r14,r5,r14
10106aec:	2811883a 	mov	r8,r5
10106af0:	100f883a 	mov	r7,r2
10106af4:	41000017 	ldw	r4,0(r8)
10106af8:	39c00404 	addi	r7,r7,16
10106afc:	18c00404 	addi	r3,r3,16
10106b00:	393ffc15 	stw	r4,-16(r7)
10106b04:	193ffc17 	ldw	r4,-16(r3)
10106b08:	6b400404 	addi	r13,r13,16
10106b0c:	5ac00404 	addi	r11,r11,16
10106b10:	693ffc15 	stw	r4,-16(r13)
10106b14:	61000017 	ldw	r4,0(r12)
10106b18:	4a400404 	addi	r9,r9,16
10106b1c:	42000404 	addi	r8,r8,16
10106b20:	593ffc15 	stw	r4,-16(r11)
10106b24:	51000017 	ldw	r4,0(r10)
10106b28:	63000404 	addi	r12,r12,16
10106b2c:	52800404 	addi	r10,r10,16
10106b30:	493ffc15 	stw	r4,-16(r9)
10106b34:	1bbfef1e 	bne	r3,r14,10106af4 <__alt_data_end+0xfffe6af4>
10106b38:	79000044 	addi	r4,r15,1
10106b3c:	2008913a 	slli	r4,r4,4
10106b40:	328003cc 	andi	r10,r6,15
10106b44:	02c000c4 	movi	r11,3
10106b48:	1107883a 	add	r3,r2,r4
10106b4c:	290b883a 	add	r5,r5,r4
10106b50:	5a801e2e 	bgeu	r11,r10,10106bcc <memmove+0x154>
10106b54:	1813883a 	mov	r9,r3
10106b58:	2811883a 	mov	r8,r5
10106b5c:	500f883a 	mov	r7,r10
10106b60:	41000017 	ldw	r4,0(r8)
10106b64:	4a400104 	addi	r9,r9,4
10106b68:	39ffff04 	addi	r7,r7,-4
10106b6c:	493fff15 	stw	r4,-4(r9)
10106b70:	42000104 	addi	r8,r8,4
10106b74:	59fffa36 	bltu	r11,r7,10106b60 <__alt_data_end+0xfffe6b60>
10106b78:	513fff04 	addi	r4,r10,-4
10106b7c:	2008d0ba 	srli	r4,r4,2
10106b80:	318000cc 	andi	r6,r6,3
10106b84:	21000044 	addi	r4,r4,1
10106b88:	2109883a 	add	r4,r4,r4
10106b8c:	2109883a 	add	r4,r4,r4
10106b90:	1907883a 	add	r3,r3,r4
10106b94:	290b883a 	add	r5,r5,r4
10106b98:	30000b26 	beq	r6,zero,10106bc8 <memmove+0x150>
10106b9c:	198d883a 	add	r6,r3,r6
10106ba0:	29c00003 	ldbu	r7,0(r5)
10106ba4:	18c00044 	addi	r3,r3,1
10106ba8:	29400044 	addi	r5,r5,1
10106bac:	19ffffc5 	stb	r7,-1(r3)
10106bb0:	19bffb1e 	bne	r3,r6,10106ba0 <__alt_data_end+0xfffe6ba0>
10106bb4:	f800283a 	ret
10106bb8:	1007883a 	mov	r3,r2
10106bbc:	003ff606 	br	10106b98 <__alt_data_end+0xfffe6b98>
10106bc0:	1007883a 	mov	r3,r2
10106bc4:	003ff506 	br	10106b9c <__alt_data_end+0xfffe6b9c>
10106bc8:	f800283a 	ret
10106bcc:	500d883a 	mov	r6,r10
10106bd0:	003ff106 	br	10106b98 <__alt_data_end+0xfffe6b98>

10106bd4 <memset>:
10106bd4:	20c000cc 	andi	r3,r4,3
10106bd8:	2005883a 	mov	r2,r4
10106bdc:	18004426 	beq	r3,zero,10106cf0 <memset+0x11c>
10106be0:	31ffffc4 	addi	r7,r6,-1
10106be4:	30004026 	beq	r6,zero,10106ce8 <memset+0x114>
10106be8:	2813883a 	mov	r9,r5
10106bec:	200d883a 	mov	r6,r4
10106bf0:	2007883a 	mov	r3,r4
10106bf4:	00000406 	br	10106c08 <memset+0x34>
10106bf8:	3a3fffc4 	addi	r8,r7,-1
10106bfc:	31800044 	addi	r6,r6,1
10106c00:	38003926 	beq	r7,zero,10106ce8 <memset+0x114>
10106c04:	400f883a 	mov	r7,r8
10106c08:	18c00044 	addi	r3,r3,1
10106c0c:	32400005 	stb	r9,0(r6)
10106c10:	1a0000cc 	andi	r8,r3,3
10106c14:	403ff81e 	bne	r8,zero,10106bf8 <__alt_data_end+0xfffe6bf8>
10106c18:	010000c4 	movi	r4,3
10106c1c:	21c02d2e 	bgeu	r4,r7,10106cd4 <memset+0x100>
10106c20:	29003fcc 	andi	r4,r5,255
10106c24:	200c923a 	slli	r6,r4,8
10106c28:	3108b03a 	or	r4,r6,r4
10106c2c:	200c943a 	slli	r6,r4,16
10106c30:	218cb03a 	or	r6,r4,r6
10106c34:	010003c4 	movi	r4,15
10106c38:	21c0182e 	bgeu	r4,r7,10106c9c <memset+0xc8>
10106c3c:	3b3ffc04 	addi	r12,r7,-16
10106c40:	6018d13a 	srli	r12,r12,4
10106c44:	1a000104 	addi	r8,r3,4
10106c48:	1ac00204 	addi	r11,r3,8
10106c4c:	6008913a 	slli	r4,r12,4
10106c50:	1a800304 	addi	r10,r3,12
10106c54:	1813883a 	mov	r9,r3
10106c58:	21000504 	addi	r4,r4,20
10106c5c:	1909883a 	add	r4,r3,r4
10106c60:	49800015 	stw	r6,0(r9)
10106c64:	41800015 	stw	r6,0(r8)
10106c68:	59800015 	stw	r6,0(r11)
10106c6c:	51800015 	stw	r6,0(r10)
10106c70:	42000404 	addi	r8,r8,16
10106c74:	4a400404 	addi	r9,r9,16
10106c78:	5ac00404 	addi	r11,r11,16
10106c7c:	52800404 	addi	r10,r10,16
10106c80:	413ff71e 	bne	r8,r4,10106c60 <__alt_data_end+0xfffe6c60>
10106c84:	63000044 	addi	r12,r12,1
10106c88:	6018913a 	slli	r12,r12,4
10106c8c:	39c003cc 	andi	r7,r7,15
10106c90:	010000c4 	movi	r4,3
10106c94:	1b07883a 	add	r3,r3,r12
10106c98:	21c00e2e 	bgeu	r4,r7,10106cd4 <memset+0x100>
10106c9c:	1813883a 	mov	r9,r3
10106ca0:	3811883a 	mov	r8,r7
10106ca4:	010000c4 	movi	r4,3
10106ca8:	49800015 	stw	r6,0(r9)
10106cac:	423fff04 	addi	r8,r8,-4
10106cb0:	4a400104 	addi	r9,r9,4
10106cb4:	223ffc36 	bltu	r4,r8,10106ca8 <__alt_data_end+0xfffe6ca8>
10106cb8:	393fff04 	addi	r4,r7,-4
10106cbc:	2008d0ba 	srli	r4,r4,2
10106cc0:	39c000cc 	andi	r7,r7,3
10106cc4:	21000044 	addi	r4,r4,1
10106cc8:	2109883a 	add	r4,r4,r4
10106ccc:	2109883a 	add	r4,r4,r4
10106cd0:	1907883a 	add	r3,r3,r4
10106cd4:	38000526 	beq	r7,zero,10106cec <memset+0x118>
10106cd8:	19cf883a 	add	r7,r3,r7
10106cdc:	19400005 	stb	r5,0(r3)
10106ce0:	18c00044 	addi	r3,r3,1
10106ce4:	38fffd1e 	bne	r7,r3,10106cdc <__alt_data_end+0xfffe6cdc>
10106ce8:	f800283a 	ret
10106cec:	f800283a 	ret
10106cf0:	2007883a 	mov	r3,r4
10106cf4:	300f883a 	mov	r7,r6
10106cf8:	003fc706 	br	10106c18 <__alt_data_end+0xfffe6c18>

10106cfc <_Balloc>:
10106cfc:	20801317 	ldw	r2,76(r4)
10106d00:	defffc04 	addi	sp,sp,-16
10106d04:	dc400115 	stw	r17,4(sp)
10106d08:	dc000015 	stw	r16,0(sp)
10106d0c:	dfc00315 	stw	ra,12(sp)
10106d10:	dc800215 	stw	r18,8(sp)
10106d14:	2023883a 	mov	r17,r4
10106d18:	2821883a 	mov	r16,r5
10106d1c:	10000f26 	beq	r2,zero,10106d5c <_Balloc+0x60>
10106d20:	8407883a 	add	r3,r16,r16
10106d24:	18c7883a 	add	r3,r3,r3
10106d28:	10c7883a 	add	r3,r2,r3
10106d2c:	18800017 	ldw	r2,0(r3)
10106d30:	10001126 	beq	r2,zero,10106d78 <_Balloc+0x7c>
10106d34:	11000017 	ldw	r4,0(r2)
10106d38:	19000015 	stw	r4,0(r3)
10106d3c:	10000415 	stw	zero,16(r2)
10106d40:	10000315 	stw	zero,12(r2)
10106d44:	dfc00317 	ldw	ra,12(sp)
10106d48:	dc800217 	ldw	r18,8(sp)
10106d4c:	dc400117 	ldw	r17,4(sp)
10106d50:	dc000017 	ldw	r16,0(sp)
10106d54:	dec00404 	addi	sp,sp,16
10106d58:	f800283a 	ret
10106d5c:	01800844 	movi	r6,33
10106d60:	01400104 	movi	r5,4
10106d64:	0109da40 	call	10109da4 <_calloc_r>
10106d68:	88801315 	stw	r2,76(r17)
10106d6c:	103fec1e 	bne	r2,zero,10106d20 <__alt_data_end+0xfffe6d20>
10106d70:	0005883a 	mov	r2,zero
10106d74:	003ff306 	br	10106d44 <__alt_data_end+0xfffe6d44>
10106d78:	01400044 	movi	r5,1
10106d7c:	2c24983a 	sll	r18,r5,r16
10106d80:	8809883a 	mov	r4,r17
10106d84:	91800144 	addi	r6,r18,5
10106d88:	318d883a 	add	r6,r6,r6
10106d8c:	318d883a 	add	r6,r6,r6
10106d90:	0109da40 	call	10109da4 <_calloc_r>
10106d94:	103ff626 	beq	r2,zero,10106d70 <__alt_data_end+0xfffe6d70>
10106d98:	14000115 	stw	r16,4(r2)
10106d9c:	14800215 	stw	r18,8(r2)
10106da0:	003fe606 	br	10106d3c <__alt_data_end+0xfffe6d3c>

10106da4 <_Bfree>:
10106da4:	28000826 	beq	r5,zero,10106dc8 <_Bfree+0x24>
10106da8:	28c00117 	ldw	r3,4(r5)
10106dac:	20801317 	ldw	r2,76(r4)
10106db0:	18c7883a 	add	r3,r3,r3
10106db4:	18c7883a 	add	r3,r3,r3
10106db8:	10c5883a 	add	r2,r2,r3
10106dbc:	10c00017 	ldw	r3,0(r2)
10106dc0:	28c00015 	stw	r3,0(r5)
10106dc4:	11400015 	stw	r5,0(r2)
10106dc8:	f800283a 	ret

10106dcc <__multadd>:
10106dcc:	defff704 	addi	sp,sp,-36
10106dd0:	dc800215 	stw	r18,8(sp)
10106dd4:	2c800417 	ldw	r18,16(r5)
10106dd8:	dd800615 	stw	r22,24(sp)
10106ddc:	dd400515 	stw	r21,20(sp)
10106de0:	dd000415 	stw	r20,16(sp)
10106de4:	dcc00315 	stw	r19,12(sp)
10106de8:	dc400115 	stw	r17,4(sp)
10106dec:	dc000015 	stw	r16,0(sp)
10106df0:	dfc00815 	stw	ra,32(sp)
10106df4:	ddc00715 	stw	r23,28(sp)
10106df8:	2827883a 	mov	r19,r5
10106dfc:	2029883a 	mov	r20,r4
10106e00:	3023883a 	mov	r17,r6
10106e04:	3821883a 	mov	r16,r7
10106e08:	2d400504 	addi	r21,r5,20
10106e0c:	002d883a 	mov	r22,zero
10106e10:	adc00017 	ldw	r23,0(r21)
10106e14:	880b883a 	mov	r5,r17
10106e18:	ad400104 	addi	r21,r21,4
10106e1c:	b93fffcc 	andi	r4,r23,65535
10106e20:	0100d140 	call	10100d14 <__mulsi3>
10106e24:	b808d43a 	srli	r4,r23,16
10106e28:	880b883a 	mov	r5,r17
10106e2c:	1421883a 	add	r16,r2,r16
10106e30:	0100d140 	call	10100d14 <__mulsi3>
10106e34:	800ed43a 	srli	r7,r16,16
10106e38:	80ffffcc 	andi	r3,r16,65535
10106e3c:	b5800044 	addi	r22,r22,1
10106e40:	11c5883a 	add	r2,r2,r7
10106e44:	100e943a 	slli	r7,r2,16
10106e48:	1020d43a 	srli	r16,r2,16
10106e4c:	38c7883a 	add	r3,r7,r3
10106e50:	a8ffff15 	stw	r3,-4(r21)
10106e54:	b4bfee16 	blt	r22,r18,10106e10 <__alt_data_end+0xfffe6e10>
10106e58:	80000926 	beq	r16,zero,10106e80 <__multadd+0xb4>
10106e5c:	98800217 	ldw	r2,8(r19)
10106e60:	9080130e 	bge	r18,r2,10106eb0 <__multadd+0xe4>
10106e64:	90800144 	addi	r2,r18,5
10106e68:	1085883a 	add	r2,r2,r2
10106e6c:	1085883a 	add	r2,r2,r2
10106e70:	9885883a 	add	r2,r19,r2
10106e74:	14000015 	stw	r16,0(r2)
10106e78:	94800044 	addi	r18,r18,1
10106e7c:	9c800415 	stw	r18,16(r19)
10106e80:	9805883a 	mov	r2,r19
10106e84:	dfc00817 	ldw	ra,32(sp)
10106e88:	ddc00717 	ldw	r23,28(sp)
10106e8c:	dd800617 	ldw	r22,24(sp)
10106e90:	dd400517 	ldw	r21,20(sp)
10106e94:	dd000417 	ldw	r20,16(sp)
10106e98:	dcc00317 	ldw	r19,12(sp)
10106e9c:	dc800217 	ldw	r18,8(sp)
10106ea0:	dc400117 	ldw	r17,4(sp)
10106ea4:	dc000017 	ldw	r16,0(sp)
10106ea8:	dec00904 	addi	sp,sp,36
10106eac:	f800283a 	ret
10106eb0:	99400117 	ldw	r5,4(r19)
10106eb4:	a009883a 	mov	r4,r20
10106eb8:	29400044 	addi	r5,r5,1
10106ebc:	0106cfc0 	call	10106cfc <_Balloc>
10106ec0:	99800417 	ldw	r6,16(r19)
10106ec4:	99400304 	addi	r5,r19,12
10106ec8:	11000304 	addi	r4,r2,12
10106ecc:	31800084 	addi	r6,r6,2
10106ed0:	318d883a 	add	r6,r6,r6
10106ed4:	318d883a 	add	r6,r6,r6
10106ed8:	1023883a 	mov	r17,r2
10106edc:	0100d3c0 	call	10100d3c <memcpy>
10106ee0:	98000a26 	beq	r19,zero,10106f0c <__multadd+0x140>
10106ee4:	98c00117 	ldw	r3,4(r19)
10106ee8:	a0801317 	ldw	r2,76(r20)
10106eec:	18c7883a 	add	r3,r3,r3
10106ef0:	18c7883a 	add	r3,r3,r3
10106ef4:	10c5883a 	add	r2,r2,r3
10106ef8:	10c00017 	ldw	r3,0(r2)
10106efc:	98c00015 	stw	r3,0(r19)
10106f00:	14c00015 	stw	r19,0(r2)
10106f04:	8827883a 	mov	r19,r17
10106f08:	003fd606 	br	10106e64 <__alt_data_end+0xfffe6e64>
10106f0c:	8827883a 	mov	r19,r17
10106f10:	003fd406 	br	10106e64 <__alt_data_end+0xfffe6e64>

10106f14 <__s2b>:
10106f14:	defff904 	addi	sp,sp,-28
10106f18:	dc400115 	stw	r17,4(sp)
10106f1c:	dc000015 	stw	r16,0(sp)
10106f20:	2023883a 	mov	r17,r4
10106f24:	2821883a 	mov	r16,r5
10106f28:	39000204 	addi	r4,r7,8
10106f2c:	01400244 	movi	r5,9
10106f30:	dcc00315 	stw	r19,12(sp)
10106f34:	dc800215 	stw	r18,8(sp)
10106f38:	dfc00615 	stw	ra,24(sp)
10106f3c:	dd400515 	stw	r21,20(sp)
10106f40:	dd000415 	stw	r20,16(sp)
10106f44:	3825883a 	mov	r18,r7
10106f48:	3027883a 	mov	r19,r6
10106f4c:	0100b600 	call	10100b60 <__divsi3>
10106f50:	00c00044 	movi	r3,1
10106f54:	000b883a 	mov	r5,zero
10106f58:	1880030e 	bge	r3,r2,10106f68 <__s2b+0x54>
10106f5c:	18c7883a 	add	r3,r3,r3
10106f60:	29400044 	addi	r5,r5,1
10106f64:	18bffd16 	blt	r3,r2,10106f5c <__alt_data_end+0xfffe6f5c>
10106f68:	8809883a 	mov	r4,r17
10106f6c:	0106cfc0 	call	10106cfc <_Balloc>
10106f70:	d8c00717 	ldw	r3,28(sp)
10106f74:	10c00515 	stw	r3,20(r2)
10106f78:	00c00044 	movi	r3,1
10106f7c:	10c00415 	stw	r3,16(r2)
10106f80:	00c00244 	movi	r3,9
10106f84:	1cc0210e 	bge	r3,r19,1010700c <__s2b+0xf8>
10106f88:	80eb883a 	add	r21,r16,r3
10106f8c:	a829883a 	mov	r20,r21
10106f90:	84e1883a 	add	r16,r16,r19
10106f94:	a1c00007 	ldb	r7,0(r20)
10106f98:	01800284 	movi	r6,10
10106f9c:	a5000044 	addi	r20,r20,1
10106fa0:	100b883a 	mov	r5,r2
10106fa4:	39fff404 	addi	r7,r7,-48
10106fa8:	8809883a 	mov	r4,r17
10106fac:	0106dcc0 	call	10106dcc <__multadd>
10106fb0:	a43ff81e 	bne	r20,r16,10106f94 <__alt_data_end+0xfffe6f94>
10106fb4:	ace1883a 	add	r16,r21,r19
10106fb8:	843ffe04 	addi	r16,r16,-8
10106fbc:	9c800a0e 	bge	r19,r18,10106fe8 <__s2b+0xd4>
10106fc0:	94e5c83a 	sub	r18,r18,r19
10106fc4:	84a5883a 	add	r18,r16,r18
10106fc8:	81c00007 	ldb	r7,0(r16)
10106fcc:	01800284 	movi	r6,10
10106fd0:	84000044 	addi	r16,r16,1
10106fd4:	100b883a 	mov	r5,r2
10106fd8:	39fff404 	addi	r7,r7,-48
10106fdc:	8809883a 	mov	r4,r17
10106fe0:	0106dcc0 	call	10106dcc <__multadd>
10106fe4:	84bff81e 	bne	r16,r18,10106fc8 <__alt_data_end+0xfffe6fc8>
10106fe8:	dfc00617 	ldw	ra,24(sp)
10106fec:	dd400517 	ldw	r21,20(sp)
10106ff0:	dd000417 	ldw	r20,16(sp)
10106ff4:	dcc00317 	ldw	r19,12(sp)
10106ff8:	dc800217 	ldw	r18,8(sp)
10106ffc:	dc400117 	ldw	r17,4(sp)
10107000:	dc000017 	ldw	r16,0(sp)
10107004:	dec00704 	addi	sp,sp,28
10107008:	f800283a 	ret
1010700c:	84000284 	addi	r16,r16,10
10107010:	1827883a 	mov	r19,r3
10107014:	003fe906 	br	10106fbc <__alt_data_end+0xfffe6fbc>

10107018 <__hi0bits>:
10107018:	20bfffec 	andhi	r2,r4,65535
1010701c:	1000141e 	bne	r2,zero,10107070 <__hi0bits+0x58>
10107020:	2008943a 	slli	r4,r4,16
10107024:	00800404 	movi	r2,16
10107028:	20ffc02c 	andhi	r3,r4,65280
1010702c:	1800021e 	bne	r3,zero,10107038 <__hi0bits+0x20>
10107030:	2008923a 	slli	r4,r4,8
10107034:	10800204 	addi	r2,r2,8
10107038:	20fc002c 	andhi	r3,r4,61440
1010703c:	1800021e 	bne	r3,zero,10107048 <__hi0bits+0x30>
10107040:	2008913a 	slli	r4,r4,4
10107044:	10800104 	addi	r2,r2,4
10107048:	20f0002c 	andhi	r3,r4,49152
1010704c:	1800031e 	bne	r3,zero,1010705c <__hi0bits+0x44>
10107050:	2109883a 	add	r4,r4,r4
10107054:	10800084 	addi	r2,r2,2
10107058:	2109883a 	add	r4,r4,r4
1010705c:	20000316 	blt	r4,zero,1010706c <__hi0bits+0x54>
10107060:	2110002c 	andhi	r4,r4,16384
10107064:	2000041e 	bne	r4,zero,10107078 <__hi0bits+0x60>
10107068:	00800804 	movi	r2,32
1010706c:	f800283a 	ret
10107070:	0005883a 	mov	r2,zero
10107074:	003fec06 	br	10107028 <__alt_data_end+0xfffe7028>
10107078:	10800044 	addi	r2,r2,1
1010707c:	f800283a 	ret

10107080 <__lo0bits>:
10107080:	20c00017 	ldw	r3,0(r4)
10107084:	188001cc 	andi	r2,r3,7
10107088:	10000826 	beq	r2,zero,101070ac <__lo0bits+0x2c>
1010708c:	1880004c 	andi	r2,r3,1
10107090:	1000211e 	bne	r2,zero,10107118 <__lo0bits+0x98>
10107094:	1880008c 	andi	r2,r3,2
10107098:	1000211e 	bne	r2,zero,10107120 <__lo0bits+0xa0>
1010709c:	1806d0ba 	srli	r3,r3,2
101070a0:	00800084 	movi	r2,2
101070a4:	20c00015 	stw	r3,0(r4)
101070a8:	f800283a 	ret
101070ac:	18bfffcc 	andi	r2,r3,65535
101070b0:	10001326 	beq	r2,zero,10107100 <__lo0bits+0x80>
101070b4:	0005883a 	mov	r2,zero
101070b8:	19403fcc 	andi	r5,r3,255
101070bc:	2800021e 	bne	r5,zero,101070c8 <__lo0bits+0x48>
101070c0:	1806d23a 	srli	r3,r3,8
101070c4:	10800204 	addi	r2,r2,8
101070c8:	194003cc 	andi	r5,r3,15
101070cc:	2800021e 	bne	r5,zero,101070d8 <__lo0bits+0x58>
101070d0:	1806d13a 	srli	r3,r3,4
101070d4:	10800104 	addi	r2,r2,4
101070d8:	194000cc 	andi	r5,r3,3
101070dc:	2800021e 	bne	r5,zero,101070e8 <__lo0bits+0x68>
101070e0:	1806d0ba 	srli	r3,r3,2
101070e4:	10800084 	addi	r2,r2,2
101070e8:	1940004c 	andi	r5,r3,1
101070ec:	2800081e 	bne	r5,zero,10107110 <__lo0bits+0x90>
101070f0:	1806d07a 	srli	r3,r3,1
101070f4:	1800051e 	bne	r3,zero,1010710c <__lo0bits+0x8c>
101070f8:	00800804 	movi	r2,32
101070fc:	f800283a 	ret
10107100:	1806d43a 	srli	r3,r3,16
10107104:	00800404 	movi	r2,16
10107108:	003feb06 	br	101070b8 <__alt_data_end+0xfffe70b8>
1010710c:	10800044 	addi	r2,r2,1
10107110:	20c00015 	stw	r3,0(r4)
10107114:	f800283a 	ret
10107118:	0005883a 	mov	r2,zero
1010711c:	f800283a 	ret
10107120:	1806d07a 	srli	r3,r3,1
10107124:	00800044 	movi	r2,1
10107128:	20c00015 	stw	r3,0(r4)
1010712c:	f800283a 	ret

10107130 <__i2b>:
10107130:	defffd04 	addi	sp,sp,-12
10107134:	dc000015 	stw	r16,0(sp)
10107138:	04000044 	movi	r16,1
1010713c:	dc400115 	stw	r17,4(sp)
10107140:	2823883a 	mov	r17,r5
10107144:	800b883a 	mov	r5,r16
10107148:	dfc00215 	stw	ra,8(sp)
1010714c:	0106cfc0 	call	10106cfc <_Balloc>
10107150:	14400515 	stw	r17,20(r2)
10107154:	14000415 	stw	r16,16(r2)
10107158:	dfc00217 	ldw	ra,8(sp)
1010715c:	dc400117 	ldw	r17,4(sp)
10107160:	dc000017 	ldw	r16,0(sp)
10107164:	dec00304 	addi	sp,sp,12
10107168:	f800283a 	ret

1010716c <__multiply>:
1010716c:	deffef04 	addi	sp,sp,-68
10107170:	dc400815 	stw	r17,32(sp)
10107174:	dc000715 	stw	r16,28(sp)
10107178:	34400417 	ldw	r17,16(r6)
1010717c:	2c000417 	ldw	r16,16(r5)
10107180:	dd800d15 	stw	r22,52(sp)
10107184:	dc800915 	stw	r18,36(sp)
10107188:	dfc01015 	stw	ra,64(sp)
1010718c:	df000f15 	stw	fp,60(sp)
10107190:	ddc00e15 	stw	r23,56(sp)
10107194:	dd400c15 	stw	r21,48(sp)
10107198:	dd000b15 	stw	r20,44(sp)
1010719c:	dcc00a15 	stw	r19,40(sp)
101071a0:	2825883a 	mov	r18,r5
101071a4:	302d883a 	mov	r22,r6
101071a8:	8440050e 	bge	r16,r17,101071c0 <__multiply+0x54>
101071ac:	8007883a 	mov	r3,r16
101071b0:	3025883a 	mov	r18,r6
101071b4:	8821883a 	mov	r16,r17
101071b8:	282d883a 	mov	r22,r5
101071bc:	1823883a 	mov	r17,r3
101071c0:	90800217 	ldw	r2,8(r18)
101071c4:	8447883a 	add	r3,r16,r17
101071c8:	d8c00215 	stw	r3,8(sp)
101071cc:	91400117 	ldw	r5,4(r18)
101071d0:	10c0010e 	bge	r2,r3,101071d8 <__multiply+0x6c>
101071d4:	29400044 	addi	r5,r5,1
101071d8:	0106cfc0 	call	10106cfc <_Balloc>
101071dc:	d8c00217 	ldw	r3,8(sp)
101071e0:	d8800615 	stw	r2,24(sp)
101071e4:	18eb883a 	add	r21,r3,r3
101071e8:	ad6b883a 	add	r21,r21,r21
101071ec:	10c00504 	addi	r3,r2,20
101071f0:	1d6b883a 	add	r21,r3,r21
101071f4:	d8c00115 	stw	r3,4(sp)
101071f8:	dd400315 	stw	r21,12(sp)
101071fc:	1805883a 	mov	r2,r3
10107200:	1d40042e 	bgeu	r3,r21,10107214 <__multiply+0xa8>
10107204:	d8c00317 	ldw	r3,12(sp)
10107208:	10000015 	stw	zero,0(r2)
1010720c:	10800104 	addi	r2,r2,4
10107210:	10fffc36 	bltu	r2,r3,10107204 <__alt_data_end+0xfffe7204>
10107214:	8c63883a 	add	r17,r17,r17
10107218:	b5800504 	addi	r22,r22,20
1010721c:	8c63883a 	add	r17,r17,r17
10107220:	94800504 	addi	r18,r18,20
10107224:	8421883a 	add	r16,r16,r16
10107228:	b463883a 	add	r17,r22,r17
1010722c:	8421883a 	add	r16,r16,r16
10107230:	dd800015 	stw	r22,0(sp)
10107234:	dc800415 	stw	r18,16(sp)
10107238:	dc400515 	stw	r17,20(sp)
1010723c:	9429883a 	add	r20,r18,r16
10107240:	b4404f2e 	bgeu	r22,r17,10107380 <__multiply+0x214>
10107244:	d8c00017 	ldw	r3,0(sp)
10107248:	1c800017 	ldw	r18,0(r3)
1010724c:	947fffcc 	andi	r17,r18,65535
10107250:	88001e26 	beq	r17,zero,101072cc <__multiply+0x160>
10107254:	dd800117 	ldw	r22,4(sp)
10107258:	dd400417 	ldw	r21,16(sp)
1010725c:	0027883a 	mov	r19,zero
10107260:	ac800017 	ldw	r18,0(r21)
10107264:	b4000017 	ldw	r16,0(r22)
10107268:	880b883a 	mov	r5,r17
1010726c:	913fffcc 	andi	r4,r18,65535
10107270:	0100d140 	call	10100d14 <__mulsi3>
10107274:	9008d43a 	srli	r4,r18,16
10107278:	84bfffcc 	andi	r18,r16,65535
1010727c:	1485883a 	add	r2,r2,r18
10107280:	14e5883a 	add	r18,r2,r19
10107284:	8020d43a 	srli	r16,r16,16
10107288:	9026d43a 	srli	r19,r18,16
1010728c:	880b883a 	mov	r5,r17
10107290:	0100d140 	call	10100d14 <__mulsi3>
10107294:	1405883a 	add	r2,r2,r16
10107298:	14e1883a 	add	r16,r2,r19
1010729c:	90ffffcc 	andi	r3,r18,65535
101072a0:	8024943a 	slli	r18,r16,16
101072a4:	ad400104 	addi	r21,r21,4
101072a8:	b005883a 	mov	r2,r22
101072ac:	90c6b03a 	or	r3,r18,r3
101072b0:	b0c00015 	stw	r3,0(r22)
101072b4:	8026d43a 	srli	r19,r16,16
101072b8:	b5800104 	addi	r22,r22,4
101072bc:	ad3fe836 	bltu	r21,r20,10107260 <__alt_data_end+0xfffe7260>
101072c0:	d8c00017 	ldw	r3,0(sp)
101072c4:	14c00115 	stw	r19,4(r2)
101072c8:	1c800017 	ldw	r18,0(r3)
101072cc:	9024d43a 	srli	r18,r18,16
101072d0:	90002226 	beq	r18,zero,1010735c <__multiply+0x1f0>
101072d4:	d8c00117 	ldw	r3,4(sp)
101072d8:	dd800417 	ldw	r22,16(sp)
101072dc:	002f883a 	mov	r23,zero
101072e0:	1f000017 	ldw	fp,0(r3)
101072e4:	1823883a 	mov	r17,r3
101072e8:	182b883a 	mov	r21,r3
101072ec:	e021883a 	mov	r16,fp
101072f0:	00000106 	br	101072f8 <__multiply+0x18c>
101072f4:	982b883a 	mov	r21,r19
101072f8:	b100000b 	ldhu	r4,0(r22)
101072fc:	8020d43a 	srli	r16,r16,16
10107300:	900b883a 	mov	r5,r18
10107304:	0100d140 	call	10100d14 <__mulsi3>
10107308:	1405883a 	add	r2,r2,r16
1010730c:	15ef883a 	add	r23,r2,r23
10107310:	b804943a 	slli	r2,r23,16
10107314:	e0ffffcc 	andi	r3,fp,65535
10107318:	8c400104 	addi	r17,r17,4
1010731c:	10c6b03a 	or	r3,r2,r3
10107320:	88ffff15 	stw	r3,-4(r17)
10107324:	b5800104 	addi	r22,r22,4
10107328:	b13fff17 	ldw	r4,-4(r22)
1010732c:	acc00104 	addi	r19,r21,4
10107330:	900b883a 	mov	r5,r18
10107334:	2008d43a 	srli	r4,r4,16
10107338:	9c000017 	ldw	r16,0(r19)
1010733c:	0100d140 	call	10100d14 <__mulsi3>
10107340:	b806d43a 	srli	r3,r23,16
10107344:	813fffcc 	andi	r4,r16,65535
10107348:	1105883a 	add	r2,r2,r4
1010734c:	10f9883a 	add	fp,r2,r3
10107350:	e02ed43a 	srli	r23,fp,16
10107354:	b53fe736 	bltu	r22,r20,101072f4 <__alt_data_end+0xfffe72f4>
10107358:	af000115 	stw	fp,4(r21)
1010735c:	d8c00017 	ldw	r3,0(sp)
10107360:	d9000517 	ldw	r4,20(sp)
10107364:	18c00104 	addi	r3,r3,4
10107368:	d8c00015 	stw	r3,0(sp)
1010736c:	d8c00117 	ldw	r3,4(sp)
10107370:	18c00104 	addi	r3,r3,4
10107374:	d8c00115 	stw	r3,4(sp)
10107378:	d8c00017 	ldw	r3,0(sp)
1010737c:	193fb136 	bltu	r3,r4,10107244 <__alt_data_end+0xfffe7244>
10107380:	d8c00217 	ldw	r3,8(sp)
10107384:	00c00c0e 	bge	zero,r3,101073b8 <__multiply+0x24c>
10107388:	d8c00317 	ldw	r3,12(sp)
1010738c:	18bfff17 	ldw	r2,-4(r3)
10107390:	1d7fff04 	addi	r21,r3,-4
10107394:	10000326 	beq	r2,zero,101073a4 <__multiply+0x238>
10107398:	00000706 	br	101073b8 <__multiply+0x24c>
1010739c:	a8800017 	ldw	r2,0(r21)
101073a0:	1000051e 	bne	r2,zero,101073b8 <__multiply+0x24c>
101073a4:	d8c00217 	ldw	r3,8(sp)
101073a8:	ad7fff04 	addi	r21,r21,-4
101073ac:	18ffffc4 	addi	r3,r3,-1
101073b0:	d8c00215 	stw	r3,8(sp)
101073b4:	183ff91e 	bne	r3,zero,1010739c <__alt_data_end+0xfffe739c>
101073b8:	d8c00617 	ldw	r3,24(sp)
101073bc:	d9000217 	ldw	r4,8(sp)
101073c0:	1805883a 	mov	r2,r3
101073c4:	19000415 	stw	r4,16(r3)
101073c8:	dfc01017 	ldw	ra,64(sp)
101073cc:	df000f17 	ldw	fp,60(sp)
101073d0:	ddc00e17 	ldw	r23,56(sp)
101073d4:	dd800d17 	ldw	r22,52(sp)
101073d8:	dd400c17 	ldw	r21,48(sp)
101073dc:	dd000b17 	ldw	r20,44(sp)
101073e0:	dcc00a17 	ldw	r19,40(sp)
101073e4:	dc800917 	ldw	r18,36(sp)
101073e8:	dc400817 	ldw	r17,32(sp)
101073ec:	dc000717 	ldw	r16,28(sp)
101073f0:	dec01104 	addi	sp,sp,68
101073f4:	f800283a 	ret

101073f8 <__pow5mult>:
101073f8:	defffa04 	addi	sp,sp,-24
101073fc:	dcc00315 	stw	r19,12(sp)
10107400:	dc000015 	stw	r16,0(sp)
10107404:	dfc00515 	stw	ra,20(sp)
10107408:	dd000415 	stw	r20,16(sp)
1010740c:	dc800215 	stw	r18,8(sp)
10107410:	dc400115 	stw	r17,4(sp)
10107414:	308000cc 	andi	r2,r6,3
10107418:	3021883a 	mov	r16,r6
1010741c:	2027883a 	mov	r19,r4
10107420:	10002f1e 	bne	r2,zero,101074e0 <__pow5mult+0xe8>
10107424:	2825883a 	mov	r18,r5
10107428:	8021d0ba 	srai	r16,r16,2
1010742c:	80001a26 	beq	r16,zero,10107498 <__pow5mult+0xa0>
10107430:	9c401217 	ldw	r17,72(r19)
10107434:	8800061e 	bne	r17,zero,10107450 <__pow5mult+0x58>
10107438:	00003406 	br	1010750c <__pow5mult+0x114>
1010743c:	8021d07a 	srai	r16,r16,1
10107440:	80001526 	beq	r16,zero,10107498 <__pow5mult+0xa0>
10107444:	88800017 	ldw	r2,0(r17)
10107448:	10001c26 	beq	r2,zero,101074bc <__pow5mult+0xc4>
1010744c:	1023883a 	mov	r17,r2
10107450:	8080004c 	andi	r2,r16,1
10107454:	103ff926 	beq	r2,zero,1010743c <__alt_data_end+0xfffe743c>
10107458:	880d883a 	mov	r6,r17
1010745c:	900b883a 	mov	r5,r18
10107460:	9809883a 	mov	r4,r19
10107464:	010716c0 	call	1010716c <__multiply>
10107468:	90001b26 	beq	r18,zero,101074d8 <__pow5mult+0xe0>
1010746c:	91000117 	ldw	r4,4(r18)
10107470:	98c01317 	ldw	r3,76(r19)
10107474:	8021d07a 	srai	r16,r16,1
10107478:	2109883a 	add	r4,r4,r4
1010747c:	2109883a 	add	r4,r4,r4
10107480:	1907883a 	add	r3,r3,r4
10107484:	19000017 	ldw	r4,0(r3)
10107488:	91000015 	stw	r4,0(r18)
1010748c:	1c800015 	stw	r18,0(r3)
10107490:	1025883a 	mov	r18,r2
10107494:	803feb1e 	bne	r16,zero,10107444 <__alt_data_end+0xfffe7444>
10107498:	9005883a 	mov	r2,r18
1010749c:	dfc00517 	ldw	ra,20(sp)
101074a0:	dd000417 	ldw	r20,16(sp)
101074a4:	dcc00317 	ldw	r19,12(sp)
101074a8:	dc800217 	ldw	r18,8(sp)
101074ac:	dc400117 	ldw	r17,4(sp)
101074b0:	dc000017 	ldw	r16,0(sp)
101074b4:	dec00604 	addi	sp,sp,24
101074b8:	f800283a 	ret
101074bc:	880d883a 	mov	r6,r17
101074c0:	880b883a 	mov	r5,r17
101074c4:	9809883a 	mov	r4,r19
101074c8:	010716c0 	call	1010716c <__multiply>
101074cc:	88800015 	stw	r2,0(r17)
101074d0:	10000015 	stw	zero,0(r2)
101074d4:	003fdd06 	br	1010744c <__alt_data_end+0xfffe744c>
101074d8:	1025883a 	mov	r18,r2
101074dc:	003fd706 	br	1010743c <__alt_data_end+0xfffe743c>
101074e0:	10bfffc4 	addi	r2,r2,-1
101074e4:	1085883a 	add	r2,r2,r2
101074e8:	00c40474 	movhi	r3,4113
101074ec:	18c1d204 	addi	r3,r3,1864
101074f0:	1085883a 	add	r2,r2,r2
101074f4:	1885883a 	add	r2,r3,r2
101074f8:	11800017 	ldw	r6,0(r2)
101074fc:	000f883a 	mov	r7,zero
10107500:	0106dcc0 	call	10106dcc <__multadd>
10107504:	1025883a 	mov	r18,r2
10107508:	003fc706 	br	10107428 <__alt_data_end+0xfffe7428>
1010750c:	05000044 	movi	r20,1
10107510:	a00b883a 	mov	r5,r20
10107514:	9809883a 	mov	r4,r19
10107518:	0106cfc0 	call	10106cfc <_Balloc>
1010751c:	1023883a 	mov	r17,r2
10107520:	00809c44 	movi	r2,625
10107524:	88800515 	stw	r2,20(r17)
10107528:	8d000415 	stw	r20,16(r17)
1010752c:	9c401215 	stw	r17,72(r19)
10107530:	88000015 	stw	zero,0(r17)
10107534:	003fc606 	br	10107450 <__alt_data_end+0xfffe7450>

10107538 <__lshift>:
10107538:	defff904 	addi	sp,sp,-28
1010753c:	dd400515 	stw	r21,20(sp)
10107540:	dcc00315 	stw	r19,12(sp)
10107544:	302bd17a 	srai	r21,r6,5
10107548:	2cc00417 	ldw	r19,16(r5)
1010754c:	28800217 	ldw	r2,8(r5)
10107550:	dd000415 	stw	r20,16(sp)
10107554:	ace7883a 	add	r19,r21,r19
10107558:	dc800215 	stw	r18,8(sp)
1010755c:	dc400115 	stw	r17,4(sp)
10107560:	dc000015 	stw	r16,0(sp)
10107564:	dfc00615 	stw	ra,24(sp)
10107568:	9c000044 	addi	r16,r19,1
1010756c:	2823883a 	mov	r17,r5
10107570:	3029883a 	mov	r20,r6
10107574:	2025883a 	mov	r18,r4
10107578:	29400117 	ldw	r5,4(r5)
1010757c:	1400030e 	bge	r2,r16,1010758c <__lshift+0x54>
10107580:	1085883a 	add	r2,r2,r2
10107584:	29400044 	addi	r5,r5,1
10107588:	143ffd16 	blt	r2,r16,10107580 <__alt_data_end+0xfffe7580>
1010758c:	9009883a 	mov	r4,r18
10107590:	0106cfc0 	call	10106cfc <_Balloc>
10107594:	10c00504 	addi	r3,r2,20
10107598:	0540070e 	bge	zero,r21,101075b8 <__lshift+0x80>
1010759c:	ad6b883a 	add	r21,r21,r21
101075a0:	ad6b883a 	add	r21,r21,r21
101075a4:	1809883a 	mov	r4,r3
101075a8:	1d47883a 	add	r3,r3,r21
101075ac:	20000015 	stw	zero,0(r4)
101075b0:	21000104 	addi	r4,r4,4
101075b4:	193ffd1e 	bne	r3,r4,101075ac <__alt_data_end+0xfffe75ac>
101075b8:	8a000417 	ldw	r8,16(r17)
101075bc:	89000504 	addi	r4,r17,20
101075c0:	a18007cc 	andi	r6,r20,31
101075c4:	4211883a 	add	r8,r8,r8
101075c8:	4211883a 	add	r8,r8,r8
101075cc:	2211883a 	add	r8,r4,r8
101075d0:	30002326 	beq	r6,zero,10107660 <__lshift+0x128>
101075d4:	02400804 	movi	r9,32
101075d8:	4993c83a 	sub	r9,r9,r6
101075dc:	000b883a 	mov	r5,zero
101075e0:	21c00017 	ldw	r7,0(r4)
101075e4:	1815883a 	mov	r10,r3
101075e8:	18c00104 	addi	r3,r3,4
101075ec:	398e983a 	sll	r7,r7,r6
101075f0:	21000104 	addi	r4,r4,4
101075f4:	394ab03a 	or	r5,r7,r5
101075f8:	197fff15 	stw	r5,-4(r3)
101075fc:	217fff17 	ldw	r5,-4(r4)
10107600:	2a4ad83a 	srl	r5,r5,r9
10107604:	223ff636 	bltu	r4,r8,101075e0 <__alt_data_end+0xfffe75e0>
10107608:	51400115 	stw	r5,4(r10)
1010760c:	28001a1e 	bne	r5,zero,10107678 <__lshift+0x140>
10107610:	843fffc4 	addi	r16,r16,-1
10107614:	14000415 	stw	r16,16(r2)
10107618:	88000826 	beq	r17,zero,1010763c <__lshift+0x104>
1010761c:	89000117 	ldw	r4,4(r17)
10107620:	90c01317 	ldw	r3,76(r18)
10107624:	2109883a 	add	r4,r4,r4
10107628:	2109883a 	add	r4,r4,r4
1010762c:	1907883a 	add	r3,r3,r4
10107630:	19000017 	ldw	r4,0(r3)
10107634:	89000015 	stw	r4,0(r17)
10107638:	1c400015 	stw	r17,0(r3)
1010763c:	dfc00617 	ldw	ra,24(sp)
10107640:	dd400517 	ldw	r21,20(sp)
10107644:	dd000417 	ldw	r20,16(sp)
10107648:	dcc00317 	ldw	r19,12(sp)
1010764c:	dc800217 	ldw	r18,8(sp)
10107650:	dc400117 	ldw	r17,4(sp)
10107654:	dc000017 	ldw	r16,0(sp)
10107658:	dec00704 	addi	sp,sp,28
1010765c:	f800283a 	ret
10107660:	21400017 	ldw	r5,0(r4)
10107664:	18c00104 	addi	r3,r3,4
10107668:	21000104 	addi	r4,r4,4
1010766c:	197fff15 	stw	r5,-4(r3)
10107670:	223ffb36 	bltu	r4,r8,10107660 <__alt_data_end+0xfffe7660>
10107674:	003fe606 	br	10107610 <__alt_data_end+0xfffe7610>
10107678:	9c000084 	addi	r16,r19,2
1010767c:	003fe406 	br	10107610 <__alt_data_end+0xfffe7610>

10107680 <__mcmp>:
10107680:	20800417 	ldw	r2,16(r4)
10107684:	28c00417 	ldw	r3,16(r5)
10107688:	10c5c83a 	sub	r2,r2,r3
1010768c:	1000111e 	bne	r2,zero,101076d4 <__mcmp+0x54>
10107690:	18c7883a 	add	r3,r3,r3
10107694:	18c7883a 	add	r3,r3,r3
10107698:	21000504 	addi	r4,r4,20
1010769c:	29400504 	addi	r5,r5,20
101076a0:	20c5883a 	add	r2,r4,r3
101076a4:	28cb883a 	add	r5,r5,r3
101076a8:	00000106 	br	101076b0 <__mcmp+0x30>
101076ac:	20800a2e 	bgeu	r4,r2,101076d8 <__mcmp+0x58>
101076b0:	10bfff04 	addi	r2,r2,-4
101076b4:	297fff04 	addi	r5,r5,-4
101076b8:	11800017 	ldw	r6,0(r2)
101076bc:	28c00017 	ldw	r3,0(r5)
101076c0:	30fffa26 	beq	r6,r3,101076ac <__alt_data_end+0xfffe76ac>
101076c4:	30c00236 	bltu	r6,r3,101076d0 <__mcmp+0x50>
101076c8:	00800044 	movi	r2,1
101076cc:	f800283a 	ret
101076d0:	00bfffc4 	movi	r2,-1
101076d4:	f800283a 	ret
101076d8:	0005883a 	mov	r2,zero
101076dc:	f800283a 	ret

101076e0 <__mdiff>:
101076e0:	28c00417 	ldw	r3,16(r5)
101076e4:	30800417 	ldw	r2,16(r6)
101076e8:	defffa04 	addi	sp,sp,-24
101076ec:	dcc00315 	stw	r19,12(sp)
101076f0:	dc800215 	stw	r18,8(sp)
101076f4:	dfc00515 	stw	ra,20(sp)
101076f8:	dd000415 	stw	r20,16(sp)
101076fc:	dc400115 	stw	r17,4(sp)
10107700:	dc000015 	stw	r16,0(sp)
10107704:	1887c83a 	sub	r3,r3,r2
10107708:	2825883a 	mov	r18,r5
1010770c:	3027883a 	mov	r19,r6
10107710:	1800141e 	bne	r3,zero,10107764 <__mdiff+0x84>
10107714:	1085883a 	add	r2,r2,r2
10107718:	1085883a 	add	r2,r2,r2
1010771c:	2a000504 	addi	r8,r5,20
10107720:	34000504 	addi	r16,r6,20
10107724:	4087883a 	add	r3,r8,r2
10107728:	8085883a 	add	r2,r16,r2
1010772c:	00000106 	br	10107734 <__mdiff+0x54>
10107730:	40c0592e 	bgeu	r8,r3,10107898 <__mdiff+0x1b8>
10107734:	18ffff04 	addi	r3,r3,-4
10107738:	10bfff04 	addi	r2,r2,-4
1010773c:	19c00017 	ldw	r7,0(r3)
10107740:	11400017 	ldw	r5,0(r2)
10107744:	397ffa26 	beq	r7,r5,10107730 <__alt_data_end+0xfffe7730>
10107748:	3940592e 	bgeu	r7,r5,101078b0 <__mdiff+0x1d0>
1010774c:	9005883a 	mov	r2,r18
10107750:	4023883a 	mov	r17,r8
10107754:	9825883a 	mov	r18,r19
10107758:	05000044 	movi	r20,1
1010775c:	1027883a 	mov	r19,r2
10107760:	00000406 	br	10107774 <__mdiff+0x94>
10107764:	18005616 	blt	r3,zero,101078c0 <__mdiff+0x1e0>
10107768:	34400504 	addi	r17,r6,20
1010776c:	2c000504 	addi	r16,r5,20
10107770:	0029883a 	mov	r20,zero
10107774:	91400117 	ldw	r5,4(r18)
10107778:	0106cfc0 	call	10106cfc <_Balloc>
1010777c:	92400417 	ldw	r9,16(r18)
10107780:	9b000417 	ldw	r12,16(r19)
10107784:	12c00504 	addi	r11,r2,20
10107788:	4a51883a 	add	r8,r9,r9
1010778c:	6319883a 	add	r12,r12,r12
10107790:	4211883a 	add	r8,r8,r8
10107794:	6319883a 	add	r12,r12,r12
10107798:	15000315 	stw	r20,12(r2)
1010779c:	8211883a 	add	r8,r16,r8
101077a0:	8b19883a 	add	r12,r17,r12
101077a4:	0007883a 	mov	r3,zero
101077a8:	81400017 	ldw	r5,0(r16)
101077ac:	89c00017 	ldw	r7,0(r17)
101077b0:	59800104 	addi	r6,r11,4
101077b4:	293fffcc 	andi	r4,r5,65535
101077b8:	20c7883a 	add	r3,r4,r3
101077bc:	393fffcc 	andi	r4,r7,65535
101077c0:	1909c83a 	sub	r4,r3,r4
101077c4:	280ad43a 	srli	r5,r5,16
101077c8:	380ed43a 	srli	r7,r7,16
101077cc:	2007d43a 	srai	r3,r4,16
101077d0:	213fffcc 	andi	r4,r4,65535
101077d4:	29cbc83a 	sub	r5,r5,r7
101077d8:	28c7883a 	add	r3,r5,r3
101077dc:	180a943a 	slli	r5,r3,16
101077e0:	8c400104 	addi	r17,r17,4
101077e4:	84000104 	addi	r16,r16,4
101077e8:	2908b03a 	or	r4,r5,r4
101077ec:	59000015 	stw	r4,0(r11)
101077f0:	1807d43a 	srai	r3,r3,16
101077f4:	3015883a 	mov	r10,r6
101077f8:	3017883a 	mov	r11,r6
101077fc:	8b3fea36 	bltu	r17,r12,101077a8 <__alt_data_end+0xfffe77a8>
10107800:	8200162e 	bgeu	r16,r8,1010785c <__mdiff+0x17c>
10107804:	8017883a 	mov	r11,r16
10107808:	59400017 	ldw	r5,0(r11)
1010780c:	31800104 	addi	r6,r6,4
10107810:	5ac00104 	addi	r11,r11,4
10107814:	293fffcc 	andi	r4,r5,65535
10107818:	20c7883a 	add	r3,r4,r3
1010781c:	280ed43a 	srli	r7,r5,16
10107820:	180bd43a 	srai	r5,r3,16
10107824:	193fffcc 	andi	r4,r3,65535
10107828:	3947883a 	add	r3,r7,r5
1010782c:	180a943a 	slli	r5,r3,16
10107830:	1807d43a 	srai	r3,r3,16
10107834:	2908b03a 	or	r4,r5,r4
10107838:	313fff15 	stw	r4,-4(r6)
1010783c:	5a3ff236 	bltu	r11,r8,10107808 <__alt_data_end+0xfffe7808>
10107840:	0406303a 	nor	r3,zero,r16
10107844:	1a07883a 	add	r3,r3,r8
10107848:	1806d0ba 	srli	r3,r3,2
1010784c:	18c00044 	addi	r3,r3,1
10107850:	18c7883a 	add	r3,r3,r3
10107854:	18c7883a 	add	r3,r3,r3
10107858:	50d5883a 	add	r10,r10,r3
1010785c:	50ffff04 	addi	r3,r10,-4
10107860:	2000041e 	bne	r4,zero,10107874 <__mdiff+0x194>
10107864:	18ffff04 	addi	r3,r3,-4
10107868:	19000017 	ldw	r4,0(r3)
1010786c:	4a7fffc4 	addi	r9,r9,-1
10107870:	203ffc26 	beq	r4,zero,10107864 <__alt_data_end+0xfffe7864>
10107874:	12400415 	stw	r9,16(r2)
10107878:	dfc00517 	ldw	ra,20(sp)
1010787c:	dd000417 	ldw	r20,16(sp)
10107880:	dcc00317 	ldw	r19,12(sp)
10107884:	dc800217 	ldw	r18,8(sp)
10107888:	dc400117 	ldw	r17,4(sp)
1010788c:	dc000017 	ldw	r16,0(sp)
10107890:	dec00604 	addi	sp,sp,24
10107894:	f800283a 	ret
10107898:	000b883a 	mov	r5,zero
1010789c:	0106cfc0 	call	10106cfc <_Balloc>
101078a0:	00c00044 	movi	r3,1
101078a4:	10c00415 	stw	r3,16(r2)
101078a8:	10000515 	stw	zero,20(r2)
101078ac:	003ff206 	br	10107878 <__alt_data_end+0xfffe7878>
101078b0:	8023883a 	mov	r17,r16
101078b4:	0029883a 	mov	r20,zero
101078b8:	4021883a 	mov	r16,r8
101078bc:	003fad06 	br	10107774 <__alt_data_end+0xfffe7774>
101078c0:	9005883a 	mov	r2,r18
101078c4:	94400504 	addi	r17,r18,20
101078c8:	9c000504 	addi	r16,r19,20
101078cc:	9825883a 	mov	r18,r19
101078d0:	05000044 	movi	r20,1
101078d4:	1027883a 	mov	r19,r2
101078d8:	003fa606 	br	10107774 <__alt_data_end+0xfffe7774>

101078dc <__ulp>:
101078dc:	295ffc2c 	andhi	r5,r5,32752
101078e0:	00bf3034 	movhi	r2,64704
101078e4:	2887883a 	add	r3,r5,r2
101078e8:	00c0020e 	bge	zero,r3,101078f4 <__ulp+0x18>
101078ec:	0005883a 	mov	r2,zero
101078f0:	f800283a 	ret
101078f4:	00c7c83a 	sub	r3,zero,r3
101078f8:	1807d53a 	srai	r3,r3,20
101078fc:	008004c4 	movi	r2,19
10107900:	10c00b0e 	bge	r2,r3,10107930 <__ulp+0x54>
10107904:	18bffb04 	addi	r2,r3,-20
10107908:	01000784 	movi	r4,30
1010790c:	0007883a 	mov	r3,zero
10107910:	20800516 	blt	r4,r2,10107928 <__ulp+0x4c>
10107914:	010007c4 	movi	r4,31
10107918:	2089c83a 	sub	r4,r4,r2
1010791c:	00800044 	movi	r2,1
10107920:	1104983a 	sll	r2,r2,r4
10107924:	f800283a 	ret
10107928:	00800044 	movi	r2,1
1010792c:	f800283a 	ret
10107930:	01400234 	movhi	r5,8
10107934:	28c7d83a 	sra	r3,r5,r3
10107938:	0005883a 	mov	r2,zero
1010793c:	f800283a 	ret

10107940 <__b2d>:
10107940:	defffa04 	addi	sp,sp,-24
10107944:	dc000015 	stw	r16,0(sp)
10107948:	24000417 	ldw	r16,16(r4)
1010794c:	dc400115 	stw	r17,4(sp)
10107950:	24400504 	addi	r17,r4,20
10107954:	8421883a 	add	r16,r16,r16
10107958:	8421883a 	add	r16,r16,r16
1010795c:	8c21883a 	add	r16,r17,r16
10107960:	dc800215 	stw	r18,8(sp)
10107964:	84bfff17 	ldw	r18,-4(r16)
10107968:	dd000415 	stw	r20,16(sp)
1010796c:	dcc00315 	stw	r19,12(sp)
10107970:	9009883a 	mov	r4,r18
10107974:	2829883a 	mov	r20,r5
10107978:	dfc00515 	stw	ra,20(sp)
1010797c:	01070180 	call	10107018 <__hi0bits>
10107980:	00c00804 	movi	r3,32
10107984:	1889c83a 	sub	r4,r3,r2
10107988:	a1000015 	stw	r4,0(r20)
1010798c:	01000284 	movi	r4,10
10107990:	84ffff04 	addi	r19,r16,-4
10107994:	20801216 	blt	r4,r2,101079e0 <__b2d+0xa0>
10107998:	018002c4 	movi	r6,11
1010799c:	308dc83a 	sub	r6,r6,r2
101079a0:	9186d83a 	srl	r3,r18,r6
101079a4:	18cffc34 	orhi	r3,r3,16368
101079a8:	8cc0212e 	bgeu	r17,r19,10107a30 <__b2d+0xf0>
101079ac:	813ffe17 	ldw	r4,-8(r16)
101079b0:	218cd83a 	srl	r6,r4,r6
101079b4:	10800544 	addi	r2,r2,21
101079b8:	9084983a 	sll	r2,r18,r2
101079bc:	1184b03a 	or	r2,r2,r6
101079c0:	dfc00517 	ldw	ra,20(sp)
101079c4:	dd000417 	ldw	r20,16(sp)
101079c8:	dcc00317 	ldw	r19,12(sp)
101079cc:	dc800217 	ldw	r18,8(sp)
101079d0:	dc400117 	ldw	r17,4(sp)
101079d4:	dc000017 	ldw	r16,0(sp)
101079d8:	dec00604 	addi	sp,sp,24
101079dc:	f800283a 	ret
101079e0:	8cc00f2e 	bgeu	r17,r19,10107a20 <__b2d+0xe0>
101079e4:	117ffd44 	addi	r5,r2,-11
101079e8:	80bffe17 	ldw	r2,-8(r16)
101079ec:	28000e26 	beq	r5,zero,10107a28 <__b2d+0xe8>
101079f0:	1949c83a 	sub	r4,r3,r5
101079f4:	9164983a 	sll	r18,r18,r5
101079f8:	1106d83a 	srl	r3,r2,r4
101079fc:	81bffe04 	addi	r6,r16,-8
10107a00:	948ffc34 	orhi	r18,r18,16368
10107a04:	90c6b03a 	or	r3,r18,r3
10107a08:	89800e2e 	bgeu	r17,r6,10107a44 <__b2d+0x104>
10107a0c:	81bffd17 	ldw	r6,-12(r16)
10107a10:	1144983a 	sll	r2,r2,r5
10107a14:	310ad83a 	srl	r5,r6,r4
10107a18:	2884b03a 	or	r2,r5,r2
10107a1c:	003fe806 	br	101079c0 <__alt_data_end+0xfffe79c0>
10107a20:	10bffd44 	addi	r2,r2,-11
10107a24:	1000041e 	bne	r2,zero,10107a38 <__b2d+0xf8>
10107a28:	90cffc34 	orhi	r3,r18,16368
10107a2c:	003fe406 	br	101079c0 <__alt_data_end+0xfffe79c0>
10107a30:	000d883a 	mov	r6,zero
10107a34:	003fdf06 	br	101079b4 <__alt_data_end+0xfffe79b4>
10107a38:	90a4983a 	sll	r18,r18,r2
10107a3c:	0005883a 	mov	r2,zero
10107a40:	003ff906 	br	10107a28 <__alt_data_end+0xfffe7a28>
10107a44:	1144983a 	sll	r2,r2,r5
10107a48:	003fdd06 	br	101079c0 <__alt_data_end+0xfffe79c0>

10107a4c <__d2b>:
10107a4c:	defff804 	addi	sp,sp,-32
10107a50:	dc000215 	stw	r16,8(sp)
10107a54:	3021883a 	mov	r16,r6
10107a58:	dc400315 	stw	r17,12(sp)
10107a5c:	8022907a 	slli	r17,r16,1
10107a60:	dd000615 	stw	r20,24(sp)
10107a64:	2829883a 	mov	r20,r5
10107a68:	01400044 	movi	r5,1
10107a6c:	dcc00515 	stw	r19,20(sp)
10107a70:	dc800415 	stw	r18,16(sp)
10107a74:	dfc00715 	stw	ra,28(sp)
10107a78:	3825883a 	mov	r18,r7
10107a7c:	8822d57a 	srli	r17,r17,21
10107a80:	0106cfc0 	call	10106cfc <_Balloc>
10107a84:	1027883a 	mov	r19,r2
10107a88:	00800434 	movhi	r2,16
10107a8c:	10bfffc4 	addi	r2,r2,-1
10107a90:	808c703a 	and	r6,r16,r2
10107a94:	88000126 	beq	r17,zero,10107a9c <__d2b+0x50>
10107a98:	31800434 	orhi	r6,r6,16
10107a9c:	d9800015 	stw	r6,0(sp)
10107aa0:	a0002426 	beq	r20,zero,10107b34 <__d2b+0xe8>
10107aa4:	d9000104 	addi	r4,sp,4
10107aa8:	dd000115 	stw	r20,4(sp)
10107aac:	01070800 	call	10107080 <__lo0bits>
10107ab0:	d8c00017 	ldw	r3,0(sp)
10107ab4:	10002f1e 	bne	r2,zero,10107b74 <__d2b+0x128>
10107ab8:	d9000117 	ldw	r4,4(sp)
10107abc:	99000515 	stw	r4,20(r19)
10107ac0:	1821003a 	cmpeq	r16,r3,zero
10107ac4:	01000084 	movi	r4,2
10107ac8:	2421c83a 	sub	r16,r4,r16
10107acc:	98c00615 	stw	r3,24(r19)
10107ad0:	9c000415 	stw	r16,16(r19)
10107ad4:	88001f1e 	bne	r17,zero,10107b54 <__d2b+0x108>
10107ad8:	10bef384 	addi	r2,r2,-1074
10107adc:	90800015 	stw	r2,0(r18)
10107ae0:	00900034 	movhi	r2,16384
10107ae4:	10bfffc4 	addi	r2,r2,-1
10107ae8:	8085883a 	add	r2,r16,r2
10107aec:	1085883a 	add	r2,r2,r2
10107af0:	1085883a 	add	r2,r2,r2
10107af4:	9885883a 	add	r2,r19,r2
10107af8:	11000517 	ldw	r4,20(r2)
10107afc:	8020917a 	slli	r16,r16,5
10107b00:	01070180 	call	10107018 <__hi0bits>
10107b04:	d8c00817 	ldw	r3,32(sp)
10107b08:	8085c83a 	sub	r2,r16,r2
10107b0c:	18800015 	stw	r2,0(r3)
10107b10:	9805883a 	mov	r2,r19
10107b14:	dfc00717 	ldw	ra,28(sp)
10107b18:	dd000617 	ldw	r20,24(sp)
10107b1c:	dcc00517 	ldw	r19,20(sp)
10107b20:	dc800417 	ldw	r18,16(sp)
10107b24:	dc400317 	ldw	r17,12(sp)
10107b28:	dc000217 	ldw	r16,8(sp)
10107b2c:	dec00804 	addi	sp,sp,32
10107b30:	f800283a 	ret
10107b34:	d809883a 	mov	r4,sp
10107b38:	01070800 	call	10107080 <__lo0bits>
10107b3c:	d8c00017 	ldw	r3,0(sp)
10107b40:	04000044 	movi	r16,1
10107b44:	9c000415 	stw	r16,16(r19)
10107b48:	98c00515 	stw	r3,20(r19)
10107b4c:	10800804 	addi	r2,r2,32
10107b50:	883fe126 	beq	r17,zero,10107ad8 <__alt_data_end+0xfffe7ad8>
10107b54:	00c00d44 	movi	r3,53
10107b58:	8c7ef344 	addi	r17,r17,-1075
10107b5c:	88a3883a 	add	r17,r17,r2
10107b60:	1885c83a 	sub	r2,r3,r2
10107b64:	d8c00817 	ldw	r3,32(sp)
10107b68:	94400015 	stw	r17,0(r18)
10107b6c:	18800015 	stw	r2,0(r3)
10107b70:	003fe706 	br	10107b10 <__alt_data_end+0xfffe7b10>
10107b74:	01000804 	movi	r4,32
10107b78:	2089c83a 	sub	r4,r4,r2
10107b7c:	1908983a 	sll	r4,r3,r4
10107b80:	d9400117 	ldw	r5,4(sp)
10107b84:	1886d83a 	srl	r3,r3,r2
10107b88:	2148b03a 	or	r4,r4,r5
10107b8c:	99000515 	stw	r4,20(r19)
10107b90:	d8c00015 	stw	r3,0(sp)
10107b94:	003fca06 	br	10107ac0 <__alt_data_end+0xfffe7ac0>

10107b98 <__ratio>:
10107b98:	defff904 	addi	sp,sp,-28
10107b9c:	dc400315 	stw	r17,12(sp)
10107ba0:	2823883a 	mov	r17,r5
10107ba4:	d9400104 	addi	r5,sp,4
10107ba8:	dfc00615 	stw	ra,24(sp)
10107bac:	dcc00515 	stw	r19,20(sp)
10107bb0:	dc800415 	stw	r18,16(sp)
10107bb4:	2027883a 	mov	r19,r4
10107bb8:	dc000215 	stw	r16,8(sp)
10107bbc:	01079400 	call	10107940 <__b2d>
10107bc0:	d80b883a 	mov	r5,sp
10107bc4:	8809883a 	mov	r4,r17
10107bc8:	1025883a 	mov	r18,r2
10107bcc:	1821883a 	mov	r16,r3
10107bd0:	01079400 	call	10107940 <__b2d>
10107bd4:	8a000417 	ldw	r8,16(r17)
10107bd8:	99000417 	ldw	r4,16(r19)
10107bdc:	d9400117 	ldw	r5,4(sp)
10107be0:	2209c83a 	sub	r4,r4,r8
10107be4:	2010917a 	slli	r8,r4,5
10107be8:	d9000017 	ldw	r4,0(sp)
10107bec:	2909c83a 	sub	r4,r5,r4
10107bf0:	4109883a 	add	r4,r8,r4
10107bf4:	01000e0e 	bge	zero,r4,10107c30 <__ratio+0x98>
10107bf8:	2008953a 	slli	r4,r4,20
10107bfc:	2421883a 	add	r16,r4,r16
10107c00:	100d883a 	mov	r6,r2
10107c04:	180f883a 	mov	r7,r3
10107c08:	9009883a 	mov	r4,r18
10107c0c:	800b883a 	mov	r5,r16
10107c10:	010baa80 	call	1010baa8 <__divdf3>
10107c14:	dfc00617 	ldw	ra,24(sp)
10107c18:	dcc00517 	ldw	r19,20(sp)
10107c1c:	dc800417 	ldw	r18,16(sp)
10107c20:	dc400317 	ldw	r17,12(sp)
10107c24:	dc000217 	ldw	r16,8(sp)
10107c28:	dec00704 	addi	sp,sp,28
10107c2c:	f800283a 	ret
10107c30:	2008953a 	slli	r4,r4,20
10107c34:	1907c83a 	sub	r3,r3,r4
10107c38:	003ff106 	br	10107c00 <__alt_data_end+0xfffe7c00>

10107c3c <_mprec_log10>:
10107c3c:	defffe04 	addi	sp,sp,-8
10107c40:	dc000015 	stw	r16,0(sp)
10107c44:	dfc00115 	stw	ra,4(sp)
10107c48:	008005c4 	movi	r2,23
10107c4c:	2021883a 	mov	r16,r4
10107c50:	11000d0e 	bge	r2,r4,10107c88 <_mprec_log10+0x4c>
10107c54:	0005883a 	mov	r2,zero
10107c58:	00cffc34 	movhi	r3,16368
10107c5c:	843fffc4 	addi	r16,r16,-1
10107c60:	000d883a 	mov	r6,zero
10107c64:	01d00934 	movhi	r7,16420
10107c68:	1009883a 	mov	r4,r2
10107c6c:	180b883a 	mov	r5,r3
10107c70:	010c6d00 	call	1010c6d0 <__muldf3>
10107c74:	803ff91e 	bne	r16,zero,10107c5c <__alt_data_end+0xfffe7c5c>
10107c78:	dfc00117 	ldw	ra,4(sp)
10107c7c:	dc000017 	ldw	r16,0(sp)
10107c80:	dec00204 	addi	sp,sp,8
10107c84:	f800283a 	ret
10107c88:	202090fa 	slli	r16,r4,3
10107c8c:	00840474 	movhi	r2,4113
10107c90:	1081e904 	addi	r2,r2,1956
10107c94:	1421883a 	add	r16,r2,r16
10107c98:	80800017 	ldw	r2,0(r16)
10107c9c:	80c00117 	ldw	r3,4(r16)
10107ca0:	dfc00117 	ldw	ra,4(sp)
10107ca4:	dc000017 	ldw	r16,0(sp)
10107ca8:	dec00204 	addi	sp,sp,8
10107cac:	f800283a 	ret

10107cb0 <__copybits>:
10107cb0:	297fffc4 	addi	r5,r5,-1
10107cb4:	280fd17a 	srai	r7,r5,5
10107cb8:	30c00417 	ldw	r3,16(r6)
10107cbc:	30800504 	addi	r2,r6,20
10107cc0:	39c00044 	addi	r7,r7,1
10107cc4:	18c7883a 	add	r3,r3,r3
10107cc8:	39cf883a 	add	r7,r7,r7
10107ccc:	18c7883a 	add	r3,r3,r3
10107cd0:	39cf883a 	add	r7,r7,r7
10107cd4:	10c7883a 	add	r3,r2,r3
10107cd8:	21cf883a 	add	r7,r4,r7
10107cdc:	10c00d2e 	bgeu	r2,r3,10107d14 <__copybits+0x64>
10107ce0:	200b883a 	mov	r5,r4
10107ce4:	12000017 	ldw	r8,0(r2)
10107ce8:	29400104 	addi	r5,r5,4
10107cec:	10800104 	addi	r2,r2,4
10107cf0:	2a3fff15 	stw	r8,-4(r5)
10107cf4:	10fffb36 	bltu	r2,r3,10107ce4 <__alt_data_end+0xfffe7ce4>
10107cf8:	1985c83a 	sub	r2,r3,r6
10107cfc:	10bffac4 	addi	r2,r2,-21
10107d00:	1004d0ba 	srli	r2,r2,2
10107d04:	10800044 	addi	r2,r2,1
10107d08:	1085883a 	add	r2,r2,r2
10107d0c:	1085883a 	add	r2,r2,r2
10107d10:	2089883a 	add	r4,r4,r2
10107d14:	21c0032e 	bgeu	r4,r7,10107d24 <__copybits+0x74>
10107d18:	20000015 	stw	zero,0(r4)
10107d1c:	21000104 	addi	r4,r4,4
10107d20:	21fffd36 	bltu	r4,r7,10107d18 <__alt_data_end+0xfffe7d18>
10107d24:	f800283a 	ret

10107d28 <__any_on>:
10107d28:	20c00417 	ldw	r3,16(r4)
10107d2c:	2805d17a 	srai	r2,r5,5
10107d30:	21000504 	addi	r4,r4,20
10107d34:	18800d0e 	bge	r3,r2,10107d6c <__any_on+0x44>
10107d38:	18c7883a 	add	r3,r3,r3
10107d3c:	18c7883a 	add	r3,r3,r3
10107d40:	20c7883a 	add	r3,r4,r3
10107d44:	20c0192e 	bgeu	r4,r3,10107dac <__any_on+0x84>
10107d48:	18bfff17 	ldw	r2,-4(r3)
10107d4c:	18ffff04 	addi	r3,r3,-4
10107d50:	1000041e 	bne	r2,zero,10107d64 <__any_on+0x3c>
10107d54:	20c0142e 	bgeu	r4,r3,10107da8 <__any_on+0x80>
10107d58:	18ffff04 	addi	r3,r3,-4
10107d5c:	19400017 	ldw	r5,0(r3)
10107d60:	283ffc26 	beq	r5,zero,10107d54 <__alt_data_end+0xfffe7d54>
10107d64:	00800044 	movi	r2,1
10107d68:	f800283a 	ret
10107d6c:	10c00a0e 	bge	r2,r3,10107d98 <__any_on+0x70>
10107d70:	1085883a 	add	r2,r2,r2
10107d74:	1085883a 	add	r2,r2,r2
10107d78:	294007cc 	andi	r5,r5,31
10107d7c:	2087883a 	add	r3,r4,r2
10107d80:	283ff026 	beq	r5,zero,10107d44 <__alt_data_end+0xfffe7d44>
10107d84:	19800017 	ldw	r6,0(r3)
10107d88:	3144d83a 	srl	r2,r6,r5
10107d8c:	114a983a 	sll	r5,r2,r5
10107d90:	317ff41e 	bne	r6,r5,10107d64 <__alt_data_end+0xfffe7d64>
10107d94:	003feb06 	br	10107d44 <__alt_data_end+0xfffe7d44>
10107d98:	1085883a 	add	r2,r2,r2
10107d9c:	1085883a 	add	r2,r2,r2
10107da0:	2087883a 	add	r3,r4,r2
10107da4:	003fe706 	br	10107d44 <__alt_data_end+0xfffe7d44>
10107da8:	f800283a 	ret
10107dac:	0005883a 	mov	r2,zero
10107db0:	f800283a 	ret

10107db4 <_realloc_r>:
10107db4:	defff604 	addi	sp,sp,-40
10107db8:	dc800215 	stw	r18,8(sp)
10107dbc:	dfc00915 	stw	ra,36(sp)
10107dc0:	df000815 	stw	fp,32(sp)
10107dc4:	ddc00715 	stw	r23,28(sp)
10107dc8:	dd800615 	stw	r22,24(sp)
10107dcc:	dd400515 	stw	r21,20(sp)
10107dd0:	dd000415 	stw	r20,16(sp)
10107dd4:	dcc00315 	stw	r19,12(sp)
10107dd8:	dc400115 	stw	r17,4(sp)
10107ddc:	dc000015 	stw	r16,0(sp)
10107de0:	3025883a 	mov	r18,r6
10107de4:	2800b726 	beq	r5,zero,101080c4 <_realloc_r+0x310>
10107de8:	282b883a 	mov	r21,r5
10107dec:	2029883a 	mov	r20,r4
10107df0:	010e03c0 	call	1010e03c <__malloc_lock>
10107df4:	a8bfff17 	ldw	r2,-4(r21)
10107df8:	043fff04 	movi	r16,-4
10107dfc:	90c002c4 	addi	r3,r18,11
10107e00:	01000584 	movi	r4,22
10107e04:	acfffe04 	addi	r19,r21,-8
10107e08:	1420703a 	and	r16,r2,r16
10107e0c:	20c0332e 	bgeu	r4,r3,10107edc <_realloc_r+0x128>
10107e10:	047ffe04 	movi	r17,-8
10107e14:	1c62703a 	and	r17,r3,r17
10107e18:	8807883a 	mov	r3,r17
10107e1c:	88005816 	blt	r17,zero,10107f80 <_realloc_r+0x1cc>
10107e20:	8c805736 	bltu	r17,r18,10107f80 <_realloc_r+0x1cc>
10107e24:	80c0300e 	bge	r16,r3,10107ee8 <_realloc_r+0x134>
10107e28:	07040474 	movhi	fp,4113
10107e2c:	e7039a04 	addi	fp,fp,3688
10107e30:	e1c00217 	ldw	r7,8(fp)
10107e34:	9c09883a 	add	r4,r19,r16
10107e38:	22000117 	ldw	r8,4(r4)
10107e3c:	21c06326 	beq	r4,r7,10107fcc <_realloc_r+0x218>
10107e40:	017fff84 	movi	r5,-2
10107e44:	414a703a 	and	r5,r8,r5
10107e48:	214b883a 	add	r5,r4,r5
10107e4c:	29800117 	ldw	r6,4(r5)
10107e50:	3180004c 	andi	r6,r6,1
10107e54:	30003f26 	beq	r6,zero,10107f54 <_realloc_r+0x1a0>
10107e58:	1080004c 	andi	r2,r2,1
10107e5c:	10008326 	beq	r2,zero,1010806c <_realloc_r+0x2b8>
10107e60:	900b883a 	mov	r5,r18
10107e64:	a009883a 	mov	r4,r20
10107e68:	01061880 	call	10106188 <_malloc_r>
10107e6c:	1025883a 	mov	r18,r2
10107e70:	10011e26 	beq	r2,zero,101082ec <_realloc_r+0x538>
10107e74:	a93fff17 	ldw	r4,-4(r21)
10107e78:	10fffe04 	addi	r3,r2,-8
10107e7c:	00bfff84 	movi	r2,-2
10107e80:	2084703a 	and	r2,r4,r2
10107e84:	9885883a 	add	r2,r19,r2
10107e88:	1880ee26 	beq	r3,r2,10108244 <_realloc_r+0x490>
10107e8c:	81bfff04 	addi	r6,r16,-4
10107e90:	00800904 	movi	r2,36
10107e94:	1180b836 	bltu	r2,r6,10108178 <_realloc_r+0x3c4>
10107e98:	00c004c4 	movi	r3,19
10107e9c:	19809636 	bltu	r3,r6,101080f8 <_realloc_r+0x344>
10107ea0:	9005883a 	mov	r2,r18
10107ea4:	a807883a 	mov	r3,r21
10107ea8:	19000017 	ldw	r4,0(r3)
10107eac:	11000015 	stw	r4,0(r2)
10107eb0:	19000117 	ldw	r4,4(r3)
10107eb4:	11000115 	stw	r4,4(r2)
10107eb8:	18c00217 	ldw	r3,8(r3)
10107ebc:	10c00215 	stw	r3,8(r2)
10107ec0:	a80b883a 	mov	r5,r21
10107ec4:	a009883a 	mov	r4,r20
10107ec8:	01055900 	call	10105590 <_free_r>
10107ecc:	a009883a 	mov	r4,r20
10107ed0:	010e0600 	call	1010e060 <__malloc_unlock>
10107ed4:	9005883a 	mov	r2,r18
10107ed8:	00001206 	br	10107f24 <_realloc_r+0x170>
10107edc:	00c00404 	movi	r3,16
10107ee0:	1823883a 	mov	r17,r3
10107ee4:	003fce06 	br	10107e20 <__alt_data_end+0xfffe7e20>
10107ee8:	a825883a 	mov	r18,r21
10107eec:	8445c83a 	sub	r2,r16,r17
10107ef0:	00c003c4 	movi	r3,15
10107ef4:	18802636 	bltu	r3,r2,10107f90 <_realloc_r+0x1dc>
10107ef8:	99800117 	ldw	r6,4(r19)
10107efc:	9c07883a 	add	r3,r19,r16
10107f00:	3180004c 	andi	r6,r6,1
10107f04:	3420b03a 	or	r16,r6,r16
10107f08:	9c000115 	stw	r16,4(r19)
10107f0c:	18800117 	ldw	r2,4(r3)
10107f10:	10800054 	ori	r2,r2,1
10107f14:	18800115 	stw	r2,4(r3)
10107f18:	a009883a 	mov	r4,r20
10107f1c:	010e0600 	call	1010e060 <__malloc_unlock>
10107f20:	9005883a 	mov	r2,r18
10107f24:	dfc00917 	ldw	ra,36(sp)
10107f28:	df000817 	ldw	fp,32(sp)
10107f2c:	ddc00717 	ldw	r23,28(sp)
10107f30:	dd800617 	ldw	r22,24(sp)
10107f34:	dd400517 	ldw	r21,20(sp)
10107f38:	dd000417 	ldw	r20,16(sp)
10107f3c:	dcc00317 	ldw	r19,12(sp)
10107f40:	dc800217 	ldw	r18,8(sp)
10107f44:	dc400117 	ldw	r17,4(sp)
10107f48:	dc000017 	ldw	r16,0(sp)
10107f4c:	dec00a04 	addi	sp,sp,40
10107f50:	f800283a 	ret
10107f54:	017fff04 	movi	r5,-4
10107f58:	414a703a 	and	r5,r8,r5
10107f5c:	814d883a 	add	r6,r16,r5
10107f60:	30c01f16 	blt	r6,r3,10107fe0 <_realloc_r+0x22c>
10107f64:	20800317 	ldw	r2,12(r4)
10107f68:	20c00217 	ldw	r3,8(r4)
10107f6c:	a825883a 	mov	r18,r21
10107f70:	3021883a 	mov	r16,r6
10107f74:	18800315 	stw	r2,12(r3)
10107f78:	10c00215 	stw	r3,8(r2)
10107f7c:	003fdb06 	br	10107eec <__alt_data_end+0xfffe7eec>
10107f80:	00800304 	movi	r2,12
10107f84:	a0800015 	stw	r2,0(r20)
10107f88:	0005883a 	mov	r2,zero
10107f8c:	003fe506 	br	10107f24 <__alt_data_end+0xfffe7f24>
10107f90:	98c00117 	ldw	r3,4(r19)
10107f94:	9c4b883a 	add	r5,r19,r17
10107f98:	11000054 	ori	r4,r2,1
10107f9c:	18c0004c 	andi	r3,r3,1
10107fa0:	1c62b03a 	or	r17,r3,r17
10107fa4:	9c400115 	stw	r17,4(r19)
10107fa8:	29000115 	stw	r4,4(r5)
10107fac:	2885883a 	add	r2,r5,r2
10107fb0:	10c00117 	ldw	r3,4(r2)
10107fb4:	29400204 	addi	r5,r5,8
10107fb8:	a009883a 	mov	r4,r20
10107fbc:	18c00054 	ori	r3,r3,1
10107fc0:	10c00115 	stw	r3,4(r2)
10107fc4:	01055900 	call	10105590 <_free_r>
10107fc8:	003fd306 	br	10107f18 <__alt_data_end+0xfffe7f18>
10107fcc:	017fff04 	movi	r5,-4
10107fd0:	414a703a 	and	r5,r8,r5
10107fd4:	89800404 	addi	r6,r17,16
10107fd8:	8151883a 	add	r8,r16,r5
10107fdc:	4180590e 	bge	r8,r6,10108144 <_realloc_r+0x390>
10107fe0:	1080004c 	andi	r2,r2,1
10107fe4:	103f9e1e 	bne	r2,zero,10107e60 <__alt_data_end+0xfffe7e60>
10107fe8:	adbffe17 	ldw	r22,-8(r21)
10107fec:	00bfff04 	movi	r2,-4
10107ff0:	9dadc83a 	sub	r22,r19,r22
10107ff4:	b1800117 	ldw	r6,4(r22)
10107ff8:	3084703a 	and	r2,r6,r2
10107ffc:	20002026 	beq	r4,zero,10108080 <_realloc_r+0x2cc>
10108000:	80af883a 	add	r23,r16,r2
10108004:	b96f883a 	add	r23,r23,r5
10108008:	21c05f26 	beq	r4,r7,10108188 <_realloc_r+0x3d4>
1010800c:	b8c01c16 	blt	r23,r3,10108080 <_realloc_r+0x2cc>
10108010:	20800317 	ldw	r2,12(r4)
10108014:	20c00217 	ldw	r3,8(r4)
10108018:	81bfff04 	addi	r6,r16,-4
1010801c:	01000904 	movi	r4,36
10108020:	18800315 	stw	r2,12(r3)
10108024:	10c00215 	stw	r3,8(r2)
10108028:	b0c00217 	ldw	r3,8(r22)
1010802c:	b0800317 	ldw	r2,12(r22)
10108030:	b4800204 	addi	r18,r22,8
10108034:	18800315 	stw	r2,12(r3)
10108038:	10c00215 	stw	r3,8(r2)
1010803c:	21801b36 	bltu	r4,r6,101080ac <_realloc_r+0x2f8>
10108040:	008004c4 	movi	r2,19
10108044:	1180352e 	bgeu	r2,r6,1010811c <_realloc_r+0x368>
10108048:	a8800017 	ldw	r2,0(r21)
1010804c:	b0800215 	stw	r2,8(r22)
10108050:	a8800117 	ldw	r2,4(r21)
10108054:	b0800315 	stw	r2,12(r22)
10108058:	008006c4 	movi	r2,27
1010805c:	11807f36 	bltu	r2,r6,1010825c <_realloc_r+0x4a8>
10108060:	b0800404 	addi	r2,r22,16
10108064:	ad400204 	addi	r21,r21,8
10108068:	00002d06 	br	10108120 <_realloc_r+0x36c>
1010806c:	adbffe17 	ldw	r22,-8(r21)
10108070:	00bfff04 	movi	r2,-4
10108074:	9dadc83a 	sub	r22,r19,r22
10108078:	b1000117 	ldw	r4,4(r22)
1010807c:	2084703a 	and	r2,r4,r2
10108080:	b03f7726 	beq	r22,zero,10107e60 <__alt_data_end+0xfffe7e60>
10108084:	80af883a 	add	r23,r16,r2
10108088:	b8ff7516 	blt	r23,r3,10107e60 <__alt_data_end+0xfffe7e60>
1010808c:	b0800317 	ldw	r2,12(r22)
10108090:	b0c00217 	ldw	r3,8(r22)
10108094:	81bfff04 	addi	r6,r16,-4
10108098:	01000904 	movi	r4,36
1010809c:	18800315 	stw	r2,12(r3)
101080a0:	10c00215 	stw	r3,8(r2)
101080a4:	b4800204 	addi	r18,r22,8
101080a8:	21bfe52e 	bgeu	r4,r6,10108040 <__alt_data_end+0xfffe8040>
101080ac:	a80b883a 	mov	r5,r21
101080b0:	9009883a 	mov	r4,r18
101080b4:	0106a780 	call	10106a78 <memmove>
101080b8:	b821883a 	mov	r16,r23
101080bc:	b027883a 	mov	r19,r22
101080c0:	003f8a06 	br	10107eec <__alt_data_end+0xfffe7eec>
101080c4:	300b883a 	mov	r5,r6
101080c8:	dfc00917 	ldw	ra,36(sp)
101080cc:	df000817 	ldw	fp,32(sp)
101080d0:	ddc00717 	ldw	r23,28(sp)
101080d4:	dd800617 	ldw	r22,24(sp)
101080d8:	dd400517 	ldw	r21,20(sp)
101080dc:	dd000417 	ldw	r20,16(sp)
101080e0:	dcc00317 	ldw	r19,12(sp)
101080e4:	dc800217 	ldw	r18,8(sp)
101080e8:	dc400117 	ldw	r17,4(sp)
101080ec:	dc000017 	ldw	r16,0(sp)
101080f0:	dec00a04 	addi	sp,sp,40
101080f4:	01061881 	jmpi	10106188 <_malloc_r>
101080f8:	a8c00017 	ldw	r3,0(r21)
101080fc:	90c00015 	stw	r3,0(r18)
10108100:	a8c00117 	ldw	r3,4(r21)
10108104:	90c00115 	stw	r3,4(r18)
10108108:	00c006c4 	movi	r3,27
1010810c:	19804536 	bltu	r3,r6,10108224 <_realloc_r+0x470>
10108110:	90800204 	addi	r2,r18,8
10108114:	a8c00204 	addi	r3,r21,8
10108118:	003f6306 	br	10107ea8 <__alt_data_end+0xfffe7ea8>
1010811c:	9005883a 	mov	r2,r18
10108120:	a8c00017 	ldw	r3,0(r21)
10108124:	b821883a 	mov	r16,r23
10108128:	b027883a 	mov	r19,r22
1010812c:	10c00015 	stw	r3,0(r2)
10108130:	a8c00117 	ldw	r3,4(r21)
10108134:	10c00115 	stw	r3,4(r2)
10108138:	a8c00217 	ldw	r3,8(r21)
1010813c:	10c00215 	stw	r3,8(r2)
10108140:	003f6a06 	br	10107eec <__alt_data_end+0xfffe7eec>
10108144:	9c67883a 	add	r19,r19,r17
10108148:	4445c83a 	sub	r2,r8,r17
1010814c:	e4c00215 	stw	r19,8(fp)
10108150:	10800054 	ori	r2,r2,1
10108154:	98800115 	stw	r2,4(r19)
10108158:	a8bfff17 	ldw	r2,-4(r21)
1010815c:	a009883a 	mov	r4,r20
10108160:	1080004c 	andi	r2,r2,1
10108164:	1462b03a 	or	r17,r2,r17
10108168:	ac7fff15 	stw	r17,-4(r21)
1010816c:	010e0600 	call	1010e060 <__malloc_unlock>
10108170:	a805883a 	mov	r2,r21
10108174:	003f6b06 	br	10107f24 <__alt_data_end+0xfffe7f24>
10108178:	a80b883a 	mov	r5,r21
1010817c:	9009883a 	mov	r4,r18
10108180:	0106a780 	call	10106a78 <memmove>
10108184:	003f4e06 	br	10107ec0 <__alt_data_end+0xfffe7ec0>
10108188:	89000404 	addi	r4,r17,16
1010818c:	b93fbc16 	blt	r23,r4,10108080 <__alt_data_end+0xfffe8080>
10108190:	b0800317 	ldw	r2,12(r22)
10108194:	b0c00217 	ldw	r3,8(r22)
10108198:	81bfff04 	addi	r6,r16,-4
1010819c:	01000904 	movi	r4,36
101081a0:	18800315 	stw	r2,12(r3)
101081a4:	10c00215 	stw	r3,8(r2)
101081a8:	b4800204 	addi	r18,r22,8
101081ac:	21804336 	bltu	r4,r6,101082bc <_realloc_r+0x508>
101081b0:	008004c4 	movi	r2,19
101081b4:	11803f2e 	bgeu	r2,r6,101082b4 <_realloc_r+0x500>
101081b8:	a8800017 	ldw	r2,0(r21)
101081bc:	b0800215 	stw	r2,8(r22)
101081c0:	a8800117 	ldw	r2,4(r21)
101081c4:	b0800315 	stw	r2,12(r22)
101081c8:	008006c4 	movi	r2,27
101081cc:	11803f36 	bltu	r2,r6,101082cc <_realloc_r+0x518>
101081d0:	b0800404 	addi	r2,r22,16
101081d4:	ad400204 	addi	r21,r21,8
101081d8:	a8c00017 	ldw	r3,0(r21)
101081dc:	10c00015 	stw	r3,0(r2)
101081e0:	a8c00117 	ldw	r3,4(r21)
101081e4:	10c00115 	stw	r3,4(r2)
101081e8:	a8c00217 	ldw	r3,8(r21)
101081ec:	10c00215 	stw	r3,8(r2)
101081f0:	b447883a 	add	r3,r22,r17
101081f4:	bc45c83a 	sub	r2,r23,r17
101081f8:	e0c00215 	stw	r3,8(fp)
101081fc:	10800054 	ori	r2,r2,1
10108200:	18800115 	stw	r2,4(r3)
10108204:	b0800117 	ldw	r2,4(r22)
10108208:	a009883a 	mov	r4,r20
1010820c:	1080004c 	andi	r2,r2,1
10108210:	1462b03a 	or	r17,r2,r17
10108214:	b4400115 	stw	r17,4(r22)
10108218:	010e0600 	call	1010e060 <__malloc_unlock>
1010821c:	9005883a 	mov	r2,r18
10108220:	003f4006 	br	10107f24 <__alt_data_end+0xfffe7f24>
10108224:	a8c00217 	ldw	r3,8(r21)
10108228:	90c00215 	stw	r3,8(r18)
1010822c:	a8c00317 	ldw	r3,12(r21)
10108230:	90c00315 	stw	r3,12(r18)
10108234:	30801126 	beq	r6,r2,1010827c <_realloc_r+0x4c8>
10108238:	90800404 	addi	r2,r18,16
1010823c:	a8c00404 	addi	r3,r21,16
10108240:	003f1906 	br	10107ea8 <__alt_data_end+0xfffe7ea8>
10108244:	90ffff17 	ldw	r3,-4(r18)
10108248:	00bfff04 	movi	r2,-4
1010824c:	a825883a 	mov	r18,r21
10108250:	1884703a 	and	r2,r3,r2
10108254:	80a1883a 	add	r16,r16,r2
10108258:	003f2406 	br	10107eec <__alt_data_end+0xfffe7eec>
1010825c:	a8800217 	ldw	r2,8(r21)
10108260:	b0800415 	stw	r2,16(r22)
10108264:	a8800317 	ldw	r2,12(r21)
10108268:	b0800515 	stw	r2,20(r22)
1010826c:	31000a26 	beq	r6,r4,10108298 <_realloc_r+0x4e4>
10108270:	b0800604 	addi	r2,r22,24
10108274:	ad400404 	addi	r21,r21,16
10108278:	003fa906 	br	10108120 <__alt_data_end+0xfffe8120>
1010827c:	a9000417 	ldw	r4,16(r21)
10108280:	90800604 	addi	r2,r18,24
10108284:	a8c00604 	addi	r3,r21,24
10108288:	91000415 	stw	r4,16(r18)
1010828c:	a9000517 	ldw	r4,20(r21)
10108290:	91000515 	stw	r4,20(r18)
10108294:	003f0406 	br	10107ea8 <__alt_data_end+0xfffe7ea8>
10108298:	a8c00417 	ldw	r3,16(r21)
1010829c:	ad400604 	addi	r21,r21,24
101082a0:	b0800804 	addi	r2,r22,32
101082a4:	b0c00615 	stw	r3,24(r22)
101082a8:	a8ffff17 	ldw	r3,-4(r21)
101082ac:	b0c00715 	stw	r3,28(r22)
101082b0:	003f9b06 	br	10108120 <__alt_data_end+0xfffe8120>
101082b4:	9005883a 	mov	r2,r18
101082b8:	003fc706 	br	101081d8 <__alt_data_end+0xfffe81d8>
101082bc:	a80b883a 	mov	r5,r21
101082c0:	9009883a 	mov	r4,r18
101082c4:	0106a780 	call	10106a78 <memmove>
101082c8:	003fc906 	br	101081f0 <__alt_data_end+0xfffe81f0>
101082cc:	a8800217 	ldw	r2,8(r21)
101082d0:	b0800415 	stw	r2,16(r22)
101082d4:	a8800317 	ldw	r2,12(r21)
101082d8:	b0800515 	stw	r2,20(r22)
101082dc:	31000726 	beq	r6,r4,101082fc <_realloc_r+0x548>
101082e0:	b0800604 	addi	r2,r22,24
101082e4:	ad400404 	addi	r21,r21,16
101082e8:	003fbb06 	br	101081d8 <__alt_data_end+0xfffe81d8>
101082ec:	a009883a 	mov	r4,r20
101082f0:	010e0600 	call	1010e060 <__malloc_unlock>
101082f4:	0005883a 	mov	r2,zero
101082f8:	003f0a06 	br	10107f24 <__alt_data_end+0xfffe7f24>
101082fc:	a8c00417 	ldw	r3,16(r21)
10108300:	ad400604 	addi	r21,r21,24
10108304:	b0800804 	addi	r2,r22,32
10108308:	b0c00615 	stw	r3,24(r22)
1010830c:	a8ffff17 	ldw	r3,-4(r21)
10108310:	b0c00715 	stw	r3,28(r22)
10108314:	003fb006 	br	101081d8 <__alt_data_end+0xfffe81d8>

10108318 <__fpclassifyd>:
10108318:	00a00034 	movhi	r2,32768
1010831c:	10bfffc4 	addi	r2,r2,-1
10108320:	2884703a 	and	r2,r5,r2
10108324:	10000726 	beq	r2,zero,10108344 <__fpclassifyd+0x2c>
10108328:	00fffc34 	movhi	r3,65520
1010832c:	019ff834 	movhi	r6,32736
10108330:	28c7883a 	add	r3,r5,r3
10108334:	31bfffc4 	addi	r6,r6,-1
10108338:	30c00536 	bltu	r6,r3,10108350 <__fpclassifyd+0x38>
1010833c:	00800104 	movi	r2,4
10108340:	f800283a 	ret
10108344:	2000021e 	bne	r4,zero,10108350 <__fpclassifyd+0x38>
10108348:	00800084 	movi	r2,2
1010834c:	f800283a 	ret
10108350:	00dffc34 	movhi	r3,32752
10108354:	019ff834 	movhi	r6,32736
10108358:	28cb883a 	add	r5,r5,r3
1010835c:	31bfffc4 	addi	r6,r6,-1
10108360:	317ff62e 	bgeu	r6,r5,1010833c <__alt_data_end+0xfffe833c>
10108364:	01400434 	movhi	r5,16
10108368:	297fffc4 	addi	r5,r5,-1
1010836c:	28800236 	bltu	r5,r2,10108378 <__fpclassifyd+0x60>
10108370:	008000c4 	movi	r2,3
10108374:	f800283a 	ret
10108378:	10c00226 	beq	r2,r3,10108384 <__fpclassifyd+0x6c>
1010837c:	0005883a 	mov	r2,zero
10108380:	f800283a 	ret
10108384:	2005003a 	cmpeq	r2,r4,zero
10108388:	f800283a 	ret

1010838c <_sbrk_r>:
1010838c:	defffd04 	addi	sp,sp,-12
10108390:	dc000015 	stw	r16,0(sp)
10108394:	04040474 	movhi	r16,4113
10108398:	dc400115 	stw	r17,4(sp)
1010839c:	84102704 	addi	r16,r16,16540
101083a0:	2023883a 	mov	r17,r4
101083a4:	2809883a 	mov	r4,r5
101083a8:	dfc00215 	stw	ra,8(sp)
101083ac:	80000015 	stw	zero,0(r16)
101083b0:	010e2480 	call	1010e248 <sbrk>
101083b4:	00ffffc4 	movi	r3,-1
101083b8:	10c00526 	beq	r2,r3,101083d0 <_sbrk_r+0x44>
101083bc:	dfc00217 	ldw	ra,8(sp)
101083c0:	dc400117 	ldw	r17,4(sp)
101083c4:	dc000017 	ldw	r16,0(sp)
101083c8:	dec00304 	addi	sp,sp,12
101083cc:	f800283a 	ret
101083d0:	80c00017 	ldw	r3,0(r16)
101083d4:	183ff926 	beq	r3,zero,101083bc <__alt_data_end+0xfffe83bc>
101083d8:	88c00015 	stw	r3,0(r17)
101083dc:	003ff706 	br	101083bc <__alt_data_end+0xfffe83bc>

101083e0 <__sread>:
101083e0:	defffe04 	addi	sp,sp,-8
101083e4:	dc000015 	stw	r16,0(sp)
101083e8:	2821883a 	mov	r16,r5
101083ec:	2940038f 	ldh	r5,14(r5)
101083f0:	dfc00115 	stw	ra,4(sp)
101083f4:	010a29c0 	call	1010a29c <_read_r>
101083f8:	10000716 	blt	r2,zero,10108418 <__sread+0x38>
101083fc:	80c01417 	ldw	r3,80(r16)
10108400:	1887883a 	add	r3,r3,r2
10108404:	80c01415 	stw	r3,80(r16)
10108408:	dfc00117 	ldw	ra,4(sp)
1010840c:	dc000017 	ldw	r16,0(sp)
10108410:	dec00204 	addi	sp,sp,8
10108414:	f800283a 	ret
10108418:	80c0030b 	ldhu	r3,12(r16)
1010841c:	18fbffcc 	andi	r3,r3,61439
10108420:	80c0030d 	sth	r3,12(r16)
10108424:	dfc00117 	ldw	ra,4(sp)
10108428:	dc000017 	ldw	r16,0(sp)
1010842c:	dec00204 	addi	sp,sp,8
10108430:	f800283a 	ret

10108434 <__seofread>:
10108434:	0005883a 	mov	r2,zero
10108438:	f800283a 	ret

1010843c <__swrite>:
1010843c:	2880030b 	ldhu	r2,12(r5)
10108440:	defffb04 	addi	sp,sp,-20
10108444:	dcc00315 	stw	r19,12(sp)
10108448:	dc800215 	stw	r18,8(sp)
1010844c:	dc400115 	stw	r17,4(sp)
10108450:	dc000015 	stw	r16,0(sp)
10108454:	dfc00415 	stw	ra,16(sp)
10108458:	10c0400c 	andi	r3,r2,256
1010845c:	2821883a 	mov	r16,r5
10108460:	2023883a 	mov	r17,r4
10108464:	3025883a 	mov	r18,r6
10108468:	3827883a 	mov	r19,r7
1010846c:	18000526 	beq	r3,zero,10108484 <__swrite+0x48>
10108470:	2940038f 	ldh	r5,14(r5)
10108474:	01c00084 	movi	r7,2
10108478:	000d883a 	mov	r6,zero
1010847c:	010a23c0 	call	1010a23c <_lseek_r>
10108480:	8080030b 	ldhu	r2,12(r16)
10108484:	8140038f 	ldh	r5,14(r16)
10108488:	10bbffcc 	andi	r2,r2,61439
1010848c:	980f883a 	mov	r7,r19
10108490:	900d883a 	mov	r6,r18
10108494:	8809883a 	mov	r4,r17
10108498:	8080030d 	sth	r2,12(r16)
1010849c:	dfc00417 	ldw	ra,16(sp)
101084a0:	dcc00317 	ldw	r19,12(sp)
101084a4:	dc800217 	ldw	r18,8(sp)
101084a8:	dc400117 	ldw	r17,4(sp)
101084ac:	dc000017 	ldw	r16,0(sp)
101084b0:	dec00504 	addi	sp,sp,20
101084b4:	0109cf01 	jmpi	10109cf0 <_write_r>

101084b8 <__sseek>:
101084b8:	defffe04 	addi	sp,sp,-8
101084bc:	dc000015 	stw	r16,0(sp)
101084c0:	2821883a 	mov	r16,r5
101084c4:	2940038f 	ldh	r5,14(r5)
101084c8:	dfc00115 	stw	ra,4(sp)
101084cc:	010a23c0 	call	1010a23c <_lseek_r>
101084d0:	00ffffc4 	movi	r3,-1
101084d4:	10c00826 	beq	r2,r3,101084f8 <__sseek+0x40>
101084d8:	80c0030b 	ldhu	r3,12(r16)
101084dc:	80801415 	stw	r2,80(r16)
101084e0:	18c40014 	ori	r3,r3,4096
101084e4:	80c0030d 	sth	r3,12(r16)
101084e8:	dfc00117 	ldw	ra,4(sp)
101084ec:	dc000017 	ldw	r16,0(sp)
101084f0:	dec00204 	addi	sp,sp,8
101084f4:	f800283a 	ret
101084f8:	80c0030b 	ldhu	r3,12(r16)
101084fc:	18fbffcc 	andi	r3,r3,61439
10108500:	80c0030d 	sth	r3,12(r16)
10108504:	dfc00117 	ldw	ra,4(sp)
10108508:	dc000017 	ldw	r16,0(sp)
1010850c:	dec00204 	addi	sp,sp,8
10108510:	f800283a 	ret

10108514 <__sclose>:
10108514:	2940038f 	ldh	r5,14(r5)
10108518:	0109d501 	jmpi	10109d50 <_close_r>

1010851c <strcmp>:
1010851c:	2144b03a 	or	r2,r4,r5
10108520:	108000cc 	andi	r2,r2,3
10108524:	1000171e 	bne	r2,zero,10108584 <strcmp+0x68>
10108528:	20800017 	ldw	r2,0(r4)
1010852c:	28c00017 	ldw	r3,0(r5)
10108530:	10c0141e 	bne	r2,r3,10108584 <strcmp+0x68>
10108534:	027fbff4 	movhi	r9,65279
10108538:	4a7fbfc4 	addi	r9,r9,-257
1010853c:	0086303a 	nor	r3,zero,r2
10108540:	02202074 	movhi	r8,32897
10108544:	1245883a 	add	r2,r2,r9
10108548:	42202004 	addi	r8,r8,-32640
1010854c:	10c4703a 	and	r2,r2,r3
10108550:	1204703a 	and	r2,r2,r8
10108554:	10000226 	beq	r2,zero,10108560 <strcmp+0x44>
10108558:	00002306 	br	101085e8 <strcmp+0xcc>
1010855c:	1000221e 	bne	r2,zero,101085e8 <strcmp+0xcc>
10108560:	21000104 	addi	r4,r4,4
10108564:	20c00017 	ldw	r3,0(r4)
10108568:	29400104 	addi	r5,r5,4
1010856c:	29800017 	ldw	r6,0(r5)
10108570:	1a4f883a 	add	r7,r3,r9
10108574:	00c4303a 	nor	r2,zero,r3
10108578:	3884703a 	and	r2,r7,r2
1010857c:	1204703a 	and	r2,r2,r8
10108580:	19bff626 	beq	r3,r6,1010855c <__alt_data_end+0xfffe855c>
10108584:	20800003 	ldbu	r2,0(r4)
10108588:	10c03fcc 	andi	r3,r2,255
1010858c:	18c0201c 	xori	r3,r3,128
10108590:	18ffe004 	addi	r3,r3,-128
10108594:	18000c26 	beq	r3,zero,101085c8 <strcmp+0xac>
10108598:	29800007 	ldb	r6,0(r5)
1010859c:	19800326 	beq	r3,r6,101085ac <strcmp+0x90>
101085a0:	00001306 	br	101085f0 <strcmp+0xd4>
101085a4:	29800007 	ldb	r6,0(r5)
101085a8:	11800b1e 	bne	r2,r6,101085d8 <strcmp+0xbc>
101085ac:	21000044 	addi	r4,r4,1
101085b0:	20c00003 	ldbu	r3,0(r4)
101085b4:	29400044 	addi	r5,r5,1
101085b8:	18803fcc 	andi	r2,r3,255
101085bc:	1080201c 	xori	r2,r2,128
101085c0:	10bfe004 	addi	r2,r2,-128
101085c4:	103ff71e 	bne	r2,zero,101085a4 <__alt_data_end+0xfffe85a4>
101085c8:	0007883a 	mov	r3,zero
101085cc:	28800003 	ldbu	r2,0(r5)
101085d0:	1885c83a 	sub	r2,r3,r2
101085d4:	f800283a 	ret
101085d8:	28800003 	ldbu	r2,0(r5)
101085dc:	18c03fcc 	andi	r3,r3,255
101085e0:	1885c83a 	sub	r2,r3,r2
101085e4:	f800283a 	ret
101085e8:	0005883a 	mov	r2,zero
101085ec:	f800283a 	ret
101085f0:	10c03fcc 	andi	r3,r2,255
101085f4:	003ff506 	br	101085cc <__alt_data_end+0xfffe85cc>

101085f8 <__sprint_r.part.0>:
101085f8:	28801917 	ldw	r2,100(r5)
101085fc:	defff604 	addi	sp,sp,-40
10108600:	dd400515 	stw	r21,20(sp)
10108604:	dfc00915 	stw	ra,36(sp)
10108608:	df000815 	stw	fp,32(sp)
1010860c:	ddc00715 	stw	r23,28(sp)
10108610:	dd800615 	stw	r22,24(sp)
10108614:	dd000415 	stw	r20,16(sp)
10108618:	dcc00315 	stw	r19,12(sp)
1010861c:	dc800215 	stw	r18,8(sp)
10108620:	dc400115 	stw	r17,4(sp)
10108624:	dc000015 	stw	r16,0(sp)
10108628:	1088000c 	andi	r2,r2,8192
1010862c:	302b883a 	mov	r21,r6
10108630:	10002e26 	beq	r2,zero,101086ec <__sprint_r.part.0+0xf4>
10108634:	30800217 	ldw	r2,8(r6)
10108638:	35800017 	ldw	r22,0(r6)
1010863c:	10002926 	beq	r2,zero,101086e4 <__sprint_r.part.0+0xec>
10108640:	2827883a 	mov	r19,r5
10108644:	2029883a 	mov	r20,r4
10108648:	b5c00104 	addi	r23,r22,4
1010864c:	04bfffc4 	movi	r18,-1
10108650:	bc400017 	ldw	r17,0(r23)
10108654:	b4000017 	ldw	r16,0(r22)
10108658:	0039883a 	mov	fp,zero
1010865c:	8822d0ba 	srli	r17,r17,2
10108660:	8800031e 	bne	r17,zero,10108670 <__sprint_r.part.0+0x78>
10108664:	00001806 	br	101086c8 <__sprint_r.part.0+0xd0>
10108668:	84000104 	addi	r16,r16,4
1010866c:	8f001526 	beq	r17,fp,101086c4 <__sprint_r.part.0+0xcc>
10108670:	81400017 	ldw	r5,0(r16)
10108674:	980d883a 	mov	r6,r19
10108678:	a009883a 	mov	r4,r20
1010867c:	010a0e80 	call	1010a0e8 <_fputwc_r>
10108680:	e7000044 	addi	fp,fp,1
10108684:	14bff81e 	bne	r2,r18,10108668 <__alt_data_end+0xfffe8668>
10108688:	9005883a 	mov	r2,r18
1010868c:	a8000215 	stw	zero,8(r21)
10108690:	a8000115 	stw	zero,4(r21)
10108694:	dfc00917 	ldw	ra,36(sp)
10108698:	df000817 	ldw	fp,32(sp)
1010869c:	ddc00717 	ldw	r23,28(sp)
101086a0:	dd800617 	ldw	r22,24(sp)
101086a4:	dd400517 	ldw	r21,20(sp)
101086a8:	dd000417 	ldw	r20,16(sp)
101086ac:	dcc00317 	ldw	r19,12(sp)
101086b0:	dc800217 	ldw	r18,8(sp)
101086b4:	dc400117 	ldw	r17,4(sp)
101086b8:	dc000017 	ldw	r16,0(sp)
101086bc:	dec00a04 	addi	sp,sp,40
101086c0:	f800283a 	ret
101086c4:	a8800217 	ldw	r2,8(r21)
101086c8:	8c63883a 	add	r17,r17,r17
101086cc:	8c63883a 	add	r17,r17,r17
101086d0:	1445c83a 	sub	r2,r2,r17
101086d4:	a8800215 	stw	r2,8(r21)
101086d8:	b5800204 	addi	r22,r22,8
101086dc:	bdc00204 	addi	r23,r23,8
101086e0:	103fdb1e 	bne	r2,zero,10108650 <__alt_data_end+0xfffe8650>
101086e4:	0005883a 	mov	r2,zero
101086e8:	003fe806 	br	1010868c <__alt_data_end+0xfffe868c>
101086ec:	01058a00 	call	101058a0 <__sfvwrite_r>
101086f0:	003fe606 	br	1010868c <__alt_data_end+0xfffe868c>

101086f4 <__sprint_r>:
101086f4:	30c00217 	ldw	r3,8(r6)
101086f8:	18000126 	beq	r3,zero,10108700 <__sprint_r+0xc>
101086fc:	01085f81 	jmpi	101085f8 <__sprint_r.part.0>
10108700:	30000115 	stw	zero,4(r6)
10108704:	0005883a 	mov	r2,zero
10108708:	f800283a 	ret

1010870c <___vfiprintf_internal_r>:
1010870c:	deffca04 	addi	sp,sp,-216
10108710:	dd403115 	stw	r21,196(sp)
10108714:	dfc03515 	stw	ra,212(sp)
10108718:	df003415 	stw	fp,208(sp)
1010871c:	ddc03315 	stw	r23,204(sp)
10108720:	dd803215 	stw	r22,200(sp)
10108724:	dd003015 	stw	r20,192(sp)
10108728:	dcc02f15 	stw	r19,188(sp)
1010872c:	dc802e15 	stw	r18,184(sp)
10108730:	dc402d15 	stw	r17,180(sp)
10108734:	dc002c15 	stw	r16,176(sp)
10108738:	d9002115 	stw	r4,132(sp)
1010873c:	d9402015 	stw	r5,128(sp)
10108740:	d9c02215 	stw	r7,136(sp)
10108744:	302b883a 	mov	r21,r6
10108748:	20000226 	beq	r4,zero,10108754 <___vfiprintf_internal_r+0x48>
1010874c:	20800e17 	ldw	r2,56(r4)
10108750:	1000cf26 	beq	r2,zero,10108a90 <___vfiprintf_internal_r+0x384>
10108754:	d8c02017 	ldw	r3,128(sp)
10108758:	1880030b 	ldhu	r2,12(r3)
1010875c:	10c8000c 	andi	r3,r2,8192
10108760:	1800071e 	bne	r3,zero,10108780 <___vfiprintf_internal_r+0x74>
10108764:	d9402017 	ldw	r5,128(sp)
10108768:	00f7ffc4 	movi	r3,-8193
1010876c:	10880014 	ori	r2,r2,8192
10108770:	29001917 	ldw	r4,100(r5)
10108774:	2880030d 	sth	r2,12(r5)
10108778:	20c6703a 	and	r3,r4,r3
1010877c:	28c01915 	stw	r3,100(r5)
10108780:	10c0020c 	andi	r3,r2,8
10108784:	1800a526 	beq	r3,zero,10108a1c <___vfiprintf_internal_r+0x310>
10108788:	d9002017 	ldw	r4,128(sp)
1010878c:	20c00417 	ldw	r3,16(r4)
10108790:	1800a226 	beq	r3,zero,10108a1c <___vfiprintf_internal_r+0x310>
10108794:	1080068c 	andi	r2,r2,26
10108798:	00c00284 	movi	r3,10
1010879c:	10c0a826 	beq	r2,r3,10108a40 <___vfiprintf_internal_r+0x334>
101087a0:	d9001a04 	addi	r4,sp,104
101087a4:	d94019c4 	addi	r5,sp,103
101087a8:	04840474 	movhi	r18,4113
101087ac:	2145c83a 	sub	r2,r4,r5
101087b0:	94821b04 	addi	r18,r18,2156
101087b4:	d9001e15 	stw	r4,120(sp)
101087b8:	d9401f15 	stw	r5,124(sp)
101087bc:	dec01a15 	stw	sp,104(sp)
101087c0:	d8001c15 	stw	zero,112(sp)
101087c4:	d8001b15 	stw	zero,108(sp)
101087c8:	d811883a 	mov	r8,sp
101087cc:	d8002615 	stw	zero,152(sp)
101087d0:	d8002415 	stw	zero,144(sp)
101087d4:	d8802815 	stw	r2,160(sp)
101087d8:	a82d883a 	mov	r22,r21
101087dc:	b0800007 	ldb	r2,0(r22)
101087e0:	10040d26 	beq	r2,zero,10109818 <___vfiprintf_internal_r+0x110c>
101087e4:	00c00944 	movi	r3,37
101087e8:	b029883a 	mov	r20,r22
101087ec:	10c0021e 	bne	r2,r3,101087f8 <___vfiprintf_internal_r+0xec>
101087f0:	00001606 	br	1010884c <___vfiprintf_internal_r+0x140>
101087f4:	10c00326 	beq	r2,r3,10108804 <___vfiprintf_internal_r+0xf8>
101087f8:	a5000044 	addi	r20,r20,1
101087fc:	a0800007 	ldb	r2,0(r20)
10108800:	103ffc1e 	bne	r2,zero,101087f4 <__alt_data_end+0xfffe87f4>
10108804:	a5a1c83a 	sub	r16,r20,r22
10108808:	80001026 	beq	r16,zero,1010884c <___vfiprintf_internal_r+0x140>
1010880c:	d8c01c17 	ldw	r3,112(sp)
10108810:	d8801b17 	ldw	r2,108(sp)
10108814:	45800015 	stw	r22,0(r8)
10108818:	80c7883a 	add	r3,r16,r3
1010881c:	10800044 	addi	r2,r2,1
10108820:	44000115 	stw	r16,4(r8)
10108824:	d8c01c15 	stw	r3,112(sp)
10108828:	d8801b15 	stw	r2,108(sp)
1010882c:	010001c4 	movi	r4,7
10108830:	2080750e 	bge	r4,r2,10108a08 <___vfiprintf_internal_r+0x2fc>
10108834:	1803951e 	bne	r3,zero,1010968c <___vfiprintf_internal_r+0xf80>
10108838:	d8c02417 	ldw	r3,144(sp)
1010883c:	d8001b15 	stw	zero,108(sp)
10108840:	d811883a 	mov	r8,sp
10108844:	1c07883a 	add	r3,r3,r16
10108848:	d8c02415 	stw	r3,144(sp)
1010884c:	a0800007 	ldb	r2,0(r20)
10108850:	1002e026 	beq	r2,zero,101093d4 <___vfiprintf_internal_r+0xcc8>
10108854:	a5800044 	addi	r22,r20,1
10108858:	a0c00047 	ldb	r3,1(r20)
1010885c:	d8001d85 	stb	zero,118(sp)
10108860:	0027883a 	mov	r19,zero
10108864:	d8002305 	stb	zero,140(sp)
10108868:	043fffc4 	movi	r16,-1
1010886c:	d8002515 	stw	zero,148(sp)
10108870:	0023883a 	mov	r17,zero
10108874:	05001604 	movi	r20,88
10108878:	05400244 	movi	r21,9
1010887c:	402f883a 	mov	r23,r8
10108880:	b5800044 	addi	r22,r22,1
10108884:	18bff804 	addi	r2,r3,-32
10108888:	a0827736 	bltu	r20,r2,10109268 <___vfiprintf_internal_r+0xb5c>
1010888c:	100490ba 	slli	r2,r2,2
10108890:	01040474 	movhi	r4,4113
10108894:	21222904 	addi	r4,r4,-30556
10108898:	1105883a 	add	r2,r2,r4
1010889c:	10800017 	ldw	r2,0(r2)
101088a0:	1000683a 	jmp	r2
101088a4:	10108f68 	cmpgeui	zero,r2,16957
101088a8:	10109268 	cmpgeui	zero,r2,16969
101088ac:	10109268 	cmpgeui	zero,r2,16969
101088b0:	10108f84 	addi	zero,r2,16958
101088b4:	10109268 	cmpgeui	zero,r2,16969
101088b8:	10109268 	cmpgeui	zero,r2,16969
101088bc:	10109268 	cmpgeui	zero,r2,16969
101088c0:	10109268 	cmpgeui	zero,r2,16969
101088c4:	10109268 	cmpgeui	zero,r2,16969
101088c8:	10109268 	cmpgeui	zero,r2,16969
101088cc:	1010918c 	andi	zero,r2,16966
101088d0:	101091b0 	cmpltui	zero,r2,16966
101088d4:	10109268 	cmpgeui	zero,r2,16969
101088d8:	10108aa8 	cmpgeui	zero,r2,16938
101088dc:	101091c4 	addi	zero,r2,16967
101088e0:	10109268 	cmpgeui	zero,r2,16969
101088e4:	10108f90 	cmplti	zero,r2,16958
101088e8:	10108f9c 	xori	zero,r2,16958
101088ec:	10108f9c 	xori	zero,r2,16958
101088f0:	10108f9c 	xori	zero,r2,16958
101088f4:	10108f9c 	xori	zero,r2,16958
101088f8:	10108f9c 	xori	zero,r2,16958
101088fc:	10108f9c 	xori	zero,r2,16958
10108900:	10108f9c 	xori	zero,r2,16958
10108904:	10108f9c 	xori	zero,r2,16958
10108908:	10108f9c 	xori	zero,r2,16958
1010890c:	10109268 	cmpgeui	zero,r2,16969
10108910:	10109268 	cmpgeui	zero,r2,16969
10108914:	10109268 	cmpgeui	zero,r2,16969
10108918:	10109268 	cmpgeui	zero,r2,16969
1010891c:	10109268 	cmpgeui	zero,r2,16969
10108920:	10109268 	cmpgeui	zero,r2,16969
10108924:	10109268 	cmpgeui	zero,r2,16969
10108928:	10109268 	cmpgeui	zero,r2,16969
1010892c:	10109268 	cmpgeui	zero,r2,16969
10108930:	10109268 	cmpgeui	zero,r2,16969
10108934:	10108fdc 	xori	zero,r2,16959
10108938:	10109268 	cmpgeui	zero,r2,16969
1010893c:	10109268 	cmpgeui	zero,r2,16969
10108940:	10109268 	cmpgeui	zero,r2,16969
10108944:	10109268 	cmpgeui	zero,r2,16969
10108948:	10109268 	cmpgeui	zero,r2,16969
1010894c:	10109268 	cmpgeui	zero,r2,16969
10108950:	10109268 	cmpgeui	zero,r2,16969
10108954:	10109268 	cmpgeui	zero,r2,16969
10108958:	10109268 	cmpgeui	zero,r2,16969
1010895c:	10109268 	cmpgeui	zero,r2,16969
10108960:	10109018 	cmpnei	zero,r2,16960
10108964:	10109268 	cmpgeui	zero,r2,16969
10108968:	10109268 	cmpgeui	zero,r2,16969
1010896c:	10109268 	cmpgeui	zero,r2,16969
10108970:	10109268 	cmpgeui	zero,r2,16969
10108974:	10109268 	cmpgeui	zero,r2,16969
10108978:	10109074 	orhi	zero,r2,16961
1010897c:	10109268 	cmpgeui	zero,r2,16969
10108980:	10109268 	cmpgeui	zero,r2,16969
10108984:	101090e8 	cmpgeui	zero,r2,16963
10108988:	10109268 	cmpgeui	zero,r2,16969
1010898c:	10109268 	cmpgeui	zero,r2,16969
10108990:	10109268 	cmpgeui	zero,r2,16969
10108994:	10109268 	cmpgeui	zero,r2,16969
10108998:	10109268 	cmpgeui	zero,r2,16969
1010899c:	10109268 	cmpgeui	zero,r2,16969
101089a0:	10109268 	cmpgeui	zero,r2,16969
101089a4:	10109268 	cmpgeui	zero,r2,16969
101089a8:	10109268 	cmpgeui	zero,r2,16969
101089ac:	10109268 	cmpgeui	zero,r2,16969
101089b0:	10108e90 	cmplti	zero,r2,16954
101089b4:	10108ec0 	call	110108ec <__alt_data_end+0xef08ec>
101089b8:	10109268 	cmpgeui	zero,r2,16969
101089bc:	10109268 	cmpgeui	zero,r2,16969
101089c0:	10109268 	cmpgeui	zero,r2,16969
101089c4:	10109210 	cmplti	zero,r2,16968
101089c8:	10108ec0 	call	110108ec <__alt_data_end+0xef08ec>
101089cc:	10109268 	cmpgeui	zero,r2,16969
101089d0:	10109268 	cmpgeui	zero,r2,16969
101089d4:	10108d68 	cmpgeui	zero,r2,16949
101089d8:	10109268 	cmpgeui	zero,r2,16969
101089dc:	10108d7c 	xorhi	zero,r2,16949
101089e0:	10108db4 	orhi	zero,r2,16950
101089e4:	10108ab4 	orhi	zero,r2,16938
101089e8:	10108d5c 	xori	zero,r2,16949
101089ec:	10109268 	cmpgeui	zero,r2,16969
101089f0:	10109128 	cmpgeui	zero,r2,16964
101089f4:	10109268 	cmpgeui	zero,r2,16969
101089f8:	10109174 	orhi	zero,r2,16965
101089fc:	10109268 	cmpgeui	zero,r2,16969
10108a00:	10109268 	cmpgeui	zero,r2,16969
10108a04:	10108e38 	rdprs	zero,r2,16952
10108a08:	42000204 	addi	r8,r8,8
10108a0c:	d8c02417 	ldw	r3,144(sp)
10108a10:	1c07883a 	add	r3,r3,r16
10108a14:	d8c02415 	stw	r3,144(sp)
10108a18:	003f8c06 	br	1010884c <__alt_data_end+0xfffe884c>
10108a1c:	d9402017 	ldw	r5,128(sp)
10108a20:	d9002117 	ldw	r4,132(sp)
10108a24:	01034100 	call	10103410 <__swsetup_r>
10108a28:	1003c11e 	bne	r2,zero,10109930 <___vfiprintf_internal_r+0x1224>
10108a2c:	d9402017 	ldw	r5,128(sp)
10108a30:	00c00284 	movi	r3,10
10108a34:	2880030b 	ldhu	r2,12(r5)
10108a38:	1080068c 	andi	r2,r2,26
10108a3c:	10ff581e 	bne	r2,r3,101087a0 <__alt_data_end+0xfffe87a0>
10108a40:	d8c02017 	ldw	r3,128(sp)
10108a44:	1880038f 	ldh	r2,14(r3)
10108a48:	103f5516 	blt	r2,zero,101087a0 <__alt_data_end+0xfffe87a0>
10108a4c:	d9c02217 	ldw	r7,136(sp)
10108a50:	d9002117 	ldw	r4,132(sp)
10108a54:	a80d883a 	mov	r6,r21
10108a58:	180b883a 	mov	r5,r3
10108a5c:	0109c340 	call	10109c34 <__sbprintf>
10108a60:	dfc03517 	ldw	ra,212(sp)
10108a64:	df003417 	ldw	fp,208(sp)
10108a68:	ddc03317 	ldw	r23,204(sp)
10108a6c:	dd803217 	ldw	r22,200(sp)
10108a70:	dd403117 	ldw	r21,196(sp)
10108a74:	dd003017 	ldw	r20,192(sp)
10108a78:	dcc02f17 	ldw	r19,188(sp)
10108a7c:	dc802e17 	ldw	r18,184(sp)
10108a80:	dc402d17 	ldw	r17,180(sp)
10108a84:	dc002c17 	ldw	r16,176(sp)
10108a88:	dec03604 	addi	sp,sp,216
10108a8c:	f800283a 	ret
10108a90:	010541c0 	call	1010541c <__sinit>
10108a94:	003f2f06 	br	10108754 <__alt_data_end+0xfffe8754>
10108a98:	d8c02517 	ldw	r3,148(sp)
10108a9c:	d8802215 	stw	r2,136(sp)
10108aa0:	00c7c83a 	sub	r3,zero,r3
10108aa4:	d8c02515 	stw	r3,148(sp)
10108aa8:	8c400114 	ori	r17,r17,4
10108aac:	b0c00007 	ldb	r3,0(r22)
10108ab0:	003f7306 	br	10108880 <__alt_data_end+0xfffe8880>
10108ab4:	00800c04 	movi	r2,48
10108ab8:	d9402217 	ldw	r5,136(sp)
10108abc:	d8801d05 	stb	r2,116(sp)
10108ac0:	00801e04 	movi	r2,120
10108ac4:	d8801d45 	stb	r2,117(sp)
10108ac8:	d8001d85 	stb	zero,118(sp)
10108acc:	b811883a 	mov	r8,r23
10108ad0:	28c00104 	addi	r3,r5,4
10108ad4:	2cc00017 	ldw	r19,0(r5)
10108ad8:	0029883a 	mov	r20,zero
10108adc:	88800094 	ori	r2,r17,2
10108ae0:	80032516 	blt	r16,zero,10109778 <___vfiprintf_internal_r+0x106c>
10108ae4:	00bfdfc4 	movi	r2,-129
10108ae8:	88a2703a 	and	r17,r17,r2
10108aec:	d8c02215 	stw	r3,136(sp)
10108af0:	8c400094 	ori	r17,r17,2
10108af4:	98032a1e 	bne	r19,zero,101097a0 <___vfiprintf_internal_r+0x1094>
10108af8:	00840474 	movhi	r2,4113
10108afc:	1081ba04 	addi	r2,r2,1768
10108b00:	d8802615 	stw	r2,152(sp)
10108b04:	002b883a 	mov	r21,zero
10108b08:	8001741e 	bne	r16,zero,101090dc <___vfiprintf_internal_r+0x9d0>
10108b0c:	0021883a 	mov	r16,zero
10108b10:	0029883a 	mov	r20,zero
10108b14:	ddc01a04 	addi	r23,sp,104
10108b18:	8027883a 	mov	r19,r16
10108b1c:	8500010e 	bge	r16,r20,10108b24 <___vfiprintf_internal_r+0x418>
10108b20:	a027883a 	mov	r19,r20
10108b24:	ad403fcc 	andi	r21,r21,255
10108b28:	ad40201c 	xori	r21,r21,128
10108b2c:	ad7fe004 	addi	r21,r21,-128
10108b30:	a8000126 	beq	r21,zero,10108b38 <___vfiprintf_internal_r+0x42c>
10108b34:	9cc00044 	addi	r19,r19,1
10108b38:	89c0008c 	andi	r7,r17,2
10108b3c:	38000126 	beq	r7,zero,10108b44 <___vfiprintf_internal_r+0x438>
10108b40:	9cc00084 	addi	r19,r19,2
10108b44:	88c0210c 	andi	r3,r17,132
10108b48:	1801dd1e 	bne	r3,zero,101092c0 <___vfiprintf_internal_r+0xbb4>
10108b4c:	d9402517 	ldw	r5,148(sp)
10108b50:	2cebc83a 	sub	r21,r5,r19
10108b54:	0541da0e 	bge	zero,r21,101092c0 <___vfiprintf_internal_r+0xbb4>
10108b58:	07000404 	movi	fp,16
10108b5c:	d8801c17 	ldw	r2,112(sp)
10108b60:	e543be0e 	bge	fp,r21,10109a5c <___vfiprintf_internal_r+0x1350>
10108b64:	01440474 	movhi	r5,4113
10108b68:	29421f04 	addi	r5,r5,2172
10108b6c:	dc002715 	stw	r16,156(sp)
10108b70:	d9801b17 	ldw	r6,108(sp)
10108b74:	a821883a 	mov	r16,r21
10108b78:	d9402315 	stw	r5,140(sp)
10108b7c:	028001c4 	movi	r10,7
10108b80:	d9c02915 	stw	r7,164(sp)
10108b84:	182b883a 	mov	r21,r3
10108b88:	00000506 	br	10108ba0 <___vfiprintf_internal_r+0x494>
10108b8c:	31000084 	addi	r4,r6,2
10108b90:	42000204 	addi	r8,r8,8
10108b94:	180d883a 	mov	r6,r3
10108b98:	843ffc04 	addi	r16,r16,-16
10108b9c:	e4000f0e 	bge	fp,r16,10108bdc <___vfiprintf_internal_r+0x4d0>
10108ba0:	01040474 	movhi	r4,4113
10108ba4:	10800404 	addi	r2,r2,16
10108ba8:	30c00044 	addi	r3,r6,1
10108bac:	21021f04 	addi	r4,r4,2172
10108bb0:	41000015 	stw	r4,0(r8)
10108bb4:	47000115 	stw	fp,4(r8)
10108bb8:	d8801c15 	stw	r2,112(sp)
10108bbc:	d8c01b15 	stw	r3,108(sp)
10108bc0:	50fff20e 	bge	r10,r3,10108b8c <__alt_data_end+0xfffe8b8c>
10108bc4:	1001b21e 	bne	r2,zero,10109290 <___vfiprintf_internal_r+0xb84>
10108bc8:	843ffc04 	addi	r16,r16,-16
10108bcc:	000d883a 	mov	r6,zero
10108bd0:	01000044 	movi	r4,1
10108bd4:	d811883a 	mov	r8,sp
10108bd8:	e43ff116 	blt	fp,r16,10108ba0 <__alt_data_end+0xfffe8ba0>
10108bdc:	a807883a 	mov	r3,r21
10108be0:	d9c02917 	ldw	r7,164(sp)
10108be4:	802b883a 	mov	r21,r16
10108be8:	dc002717 	ldw	r16,156(sp)
10108bec:	d9402317 	ldw	r5,140(sp)
10108bf0:	a885883a 	add	r2,r21,r2
10108bf4:	45400115 	stw	r21,4(r8)
10108bf8:	41400015 	stw	r5,0(r8)
10108bfc:	d8801c15 	stw	r2,112(sp)
10108c00:	d9001b15 	stw	r4,108(sp)
10108c04:	014001c4 	movi	r5,7
10108c08:	29026216 	blt	r5,r4,10109594 <___vfiprintf_internal_r+0xe88>
10108c0c:	d9801d87 	ldb	r6,118(sp)
10108c10:	42000204 	addi	r8,r8,8
10108c14:	21400044 	addi	r5,r4,1
10108c18:	3001ae1e 	bne	r6,zero,101092d4 <___vfiprintf_internal_r+0xbc8>
10108c1c:	3801bb26 	beq	r7,zero,1010930c <___vfiprintf_internal_r+0xc00>
10108c20:	d9001d04 	addi	r4,sp,116
10108c24:	10800084 	addi	r2,r2,2
10108c28:	41000015 	stw	r4,0(r8)
10108c2c:	01000084 	movi	r4,2
10108c30:	41000115 	stw	r4,4(r8)
10108c34:	d8801c15 	stw	r2,112(sp)
10108c38:	d9401b15 	stw	r5,108(sp)
10108c3c:	010001c4 	movi	r4,7
10108c40:	2142680e 	bge	r4,r5,101095e4 <___vfiprintf_internal_r+0xed8>
10108c44:	1002b11e 	bne	r2,zero,1010970c <___vfiprintf_internal_r+0x1000>
10108c48:	01802004 	movi	r6,128
10108c4c:	01400044 	movi	r5,1
10108c50:	0009883a 	mov	r4,zero
10108c54:	d811883a 	mov	r8,sp
10108c58:	1981ae1e 	bne	r3,r6,10109314 <___vfiprintf_internal_r+0xc08>
10108c5c:	d8c02517 	ldw	r3,148(sp)
10108c60:	1cf9c83a 	sub	fp,r3,r19
10108c64:	0701ab0e 	bge	zero,fp,10109314 <___vfiprintf_internal_r+0xc08>
10108c68:	05400404 	movi	r21,16
10108c6c:	af03a90e 	bge	r21,fp,10109b14 <___vfiprintf_internal_r+0x1408>
10108c70:	01440474 	movhi	r5,4113
10108c74:	29421b04 	addi	r5,r5,2156
10108c78:	d9402315 	stw	r5,140(sp)
10108c7c:	01c001c4 	movi	r7,7
10108c80:	00000506 	br	10108c98 <___vfiprintf_internal_r+0x58c>
10108c84:	21800084 	addi	r6,r4,2
10108c88:	42000204 	addi	r8,r8,8
10108c8c:	1809883a 	mov	r4,r3
10108c90:	e73ffc04 	addi	fp,fp,-16
10108c94:	af000d0e 	bge	r21,fp,10108ccc <___vfiprintf_internal_r+0x5c0>
10108c98:	10800404 	addi	r2,r2,16
10108c9c:	20c00044 	addi	r3,r4,1
10108ca0:	44800015 	stw	r18,0(r8)
10108ca4:	45400115 	stw	r21,4(r8)
10108ca8:	d8801c15 	stw	r2,112(sp)
10108cac:	d8c01b15 	stw	r3,108(sp)
10108cb0:	38fff40e 	bge	r7,r3,10108c84 <__alt_data_end+0xfffe8c84>
10108cb4:	10022b1e 	bne	r2,zero,10109564 <___vfiprintf_internal_r+0xe58>
10108cb8:	e73ffc04 	addi	fp,fp,-16
10108cbc:	01800044 	movi	r6,1
10108cc0:	0009883a 	mov	r4,zero
10108cc4:	d811883a 	mov	r8,sp
10108cc8:	af3ff316 	blt	r21,fp,10108c98 <__alt_data_end+0xfffe8c98>
10108ccc:	d8c02317 	ldw	r3,140(sp)
10108cd0:	1705883a 	add	r2,r2,fp
10108cd4:	47000115 	stw	fp,4(r8)
10108cd8:	40c00015 	stw	r3,0(r8)
10108cdc:	d8801c15 	stw	r2,112(sp)
10108ce0:	d9801b15 	stw	r6,108(sp)
10108ce4:	00c001c4 	movi	r3,7
10108ce8:	19829416 	blt	r3,r6,1010973c <___vfiprintf_internal_r+0x1030>
10108cec:	8521c83a 	sub	r16,r16,r20
10108cf0:	42000204 	addi	r8,r8,8
10108cf4:	31400044 	addi	r5,r6,1
10108cf8:	3009883a 	mov	r4,r6
10108cfc:	04018716 	blt	zero,r16,1010931c <___vfiprintf_internal_r+0xc10>
10108d00:	a085883a 	add	r2,r20,r2
10108d04:	45c00015 	stw	r23,0(r8)
10108d08:	45000115 	stw	r20,4(r8)
10108d0c:	d8801c15 	stw	r2,112(sp)
10108d10:	d9401b15 	stw	r5,108(sp)
10108d14:	00c001c4 	movi	r3,7
10108d18:	1941c20e 	bge	r3,r5,10109424 <___vfiprintf_internal_r+0xd18>
10108d1c:	1002531e 	bne	r2,zero,1010966c <___vfiprintf_internal_r+0xf60>
10108d20:	d8001b15 	stw	zero,108(sp)
10108d24:	8c40010c 	andi	r17,r17,4
10108d28:	88023226 	beq	r17,zero,101095f4 <___vfiprintf_internal_r+0xee8>
10108d2c:	d9002517 	ldw	r4,148(sp)
10108d30:	24e3c83a 	sub	r17,r4,r19
10108d34:	04432916 	blt	zero,r17,101099dc <___vfiprintf_internal_r+0x12d0>
10108d38:	d8802517 	ldw	r2,148(sp)
10108d3c:	14c0010e 	bge	r2,r19,10108d44 <___vfiprintf_internal_r+0x638>
10108d40:	9805883a 	mov	r2,r19
10108d44:	d8c02417 	ldw	r3,144(sp)
10108d48:	1887883a 	add	r3,r3,r2
10108d4c:	d8c02415 	stw	r3,144(sp)
10108d50:	d8001b15 	stw	zero,108(sp)
10108d54:	d811883a 	mov	r8,sp
10108d58:	003ea006 	br	101087dc <__alt_data_end+0xfffe87dc>
10108d5c:	8c400814 	ori	r17,r17,32
10108d60:	b0c00007 	ldb	r3,0(r22)
10108d64:	003ec606 	br	10108880 <__alt_data_end+0xfffe8880>
10108d68:	b0c00007 	ldb	r3,0(r22)
10108d6c:	00801b04 	movi	r2,108
10108d70:	18832026 	beq	r3,r2,101099f4 <___vfiprintf_internal_r+0x12e8>
10108d74:	8c400414 	ori	r17,r17,16
10108d78:	003ec106 	br	10108880 <__alt_data_end+0xfffe8880>
10108d7c:	9cc03fcc 	andi	r19,r19,255
10108d80:	b811883a 	mov	r8,r23
10108d84:	9803981e 	bne	r19,zero,10109be8 <___vfiprintf_internal_r+0x14dc>
10108d88:	8880080c 	andi	r2,r17,32
10108d8c:	1002be26 	beq	r2,zero,10109888 <___vfiprintf_internal_r+0x117c>
10108d90:	d9002217 	ldw	r4,136(sp)
10108d94:	d9402417 	ldw	r5,144(sp)
10108d98:	20800017 	ldw	r2,0(r4)
10108d9c:	2807d7fa 	srai	r3,r5,31
10108da0:	21000104 	addi	r4,r4,4
10108da4:	d9002215 	stw	r4,136(sp)
10108da8:	11400015 	stw	r5,0(r2)
10108dac:	10c00115 	stw	r3,4(r2)
10108db0:	003e8a06 	br	101087dc <__alt_data_end+0xfffe87dc>
10108db4:	9cc03fcc 	andi	r19,r19,255
10108db8:	b811883a 	mov	r8,r23
10108dbc:	9803871e 	bne	r19,zero,10109bdc <___vfiprintf_internal_r+0x14d0>
10108dc0:	8880080c 	andi	r2,r17,32
10108dc4:	10009a26 	beq	r2,zero,10109030 <___vfiprintf_internal_r+0x924>
10108dc8:	d9002217 	ldw	r4,136(sp)
10108dcc:	d8001d85 	stb	zero,118(sp)
10108dd0:	20800204 	addi	r2,r4,8
10108dd4:	24c00017 	ldw	r19,0(r4)
10108dd8:	25000117 	ldw	r20,4(r4)
10108ddc:	8002a416 	blt	r16,zero,10109870 <___vfiprintf_internal_r+0x1164>
10108de0:	013fdfc4 	movi	r4,-129
10108de4:	9d06b03a 	or	r3,r19,r20
10108de8:	d8802215 	stw	r2,136(sp)
10108dec:	8922703a 	and	r17,r17,r4
10108df0:	18009b26 	beq	r3,zero,10109060 <___vfiprintf_internal_r+0x954>
10108df4:	002b883a 	mov	r21,zero
10108df8:	ddc01a04 	addi	r23,sp,104
10108dfc:	9806d0fa 	srli	r3,r19,3
10108e00:	a008977a 	slli	r4,r20,29
10108e04:	a028d0fa 	srli	r20,r20,3
10108e08:	9cc001cc 	andi	r19,r19,7
10108e0c:	98800c04 	addi	r2,r19,48
10108e10:	bdffffc4 	addi	r23,r23,-1
10108e14:	20e6b03a 	or	r19,r4,r3
10108e18:	b8800005 	stb	r2,0(r23)
10108e1c:	9d06b03a 	or	r3,r19,r20
10108e20:	183ff61e 	bne	r3,zero,10108dfc <__alt_data_end+0xfffe8dfc>
10108e24:	88c0004c 	andi	r3,r17,1
10108e28:	18021f1e 	bne	r3,zero,101096a8 <___vfiprintf_internal_r+0xf9c>
10108e2c:	d9401e17 	ldw	r5,120(sp)
10108e30:	2de9c83a 	sub	r20,r5,r23
10108e34:	003f3806 	br	10108b18 <__alt_data_end+0xfffe8b18>
10108e38:	9cc03fcc 	andi	r19,r19,255
10108e3c:	b811883a 	mov	r8,r23
10108e40:	98034f1e 	bne	r19,zero,10109b80 <___vfiprintf_internal_r+0x1474>
10108e44:	00840474 	movhi	r2,4113
10108e48:	1081ba04 	addi	r2,r2,1768
10108e4c:	d8802615 	stw	r2,152(sp)
10108e50:	8880080c 	andi	r2,r17,32
10108e54:	1000ac26 	beq	r2,zero,10109108 <___vfiprintf_internal_r+0x9fc>
10108e58:	d9002217 	ldw	r4,136(sp)
10108e5c:	24c00017 	ldw	r19,0(r4)
10108e60:	25000117 	ldw	r20,4(r4)
10108e64:	21000204 	addi	r4,r4,8
10108e68:	d9002215 	stw	r4,136(sp)
10108e6c:	8880004c 	andi	r2,r17,1
10108e70:	1001e726 	beq	r2,zero,10109610 <___vfiprintf_internal_r+0xf04>
10108e74:	9d04b03a 	or	r2,r19,r20
10108e78:	10025c1e 	bne	r2,zero,101097ec <___vfiprintf_internal_r+0x10e0>
10108e7c:	d8001d85 	stb	zero,118(sp)
10108e80:	80024416 	blt	r16,zero,10109794 <___vfiprintf_internal_r+0x1088>
10108e84:	00bfdfc4 	movi	r2,-129
10108e88:	88a2703a 	and	r17,r17,r2
10108e8c:	003f1d06 	br	10108b04 <__alt_data_end+0xfffe8b04>
10108e90:	d8c02217 	ldw	r3,136(sp)
10108e94:	04c00044 	movi	r19,1
10108e98:	b811883a 	mov	r8,r23
10108e9c:	18800017 	ldw	r2,0(r3)
10108ea0:	18c00104 	addi	r3,r3,4
10108ea4:	d8001d85 	stb	zero,118(sp)
10108ea8:	d8801005 	stb	r2,64(sp)
10108eac:	d8c02215 	stw	r3,136(sp)
10108eb0:	9829883a 	mov	r20,r19
10108eb4:	ddc01004 	addi	r23,sp,64
10108eb8:	0021883a 	mov	r16,zero
10108ebc:	003f1e06 	br	10108b38 <__alt_data_end+0xfffe8b38>
10108ec0:	9cc03fcc 	andi	r19,r19,255
10108ec4:	b811883a 	mov	r8,r23
10108ec8:	9803331e 	bne	r19,zero,10109b98 <___vfiprintf_internal_r+0x148c>
10108ecc:	8880080c 	andi	r2,r17,32
10108ed0:	10004826 	beq	r2,zero,10108ff4 <___vfiprintf_internal_r+0x8e8>
10108ed4:	d9002217 	ldw	r4,136(sp)
10108ed8:	20800117 	ldw	r2,4(r4)
10108edc:	24c00017 	ldw	r19,0(r4)
10108ee0:	21000204 	addi	r4,r4,8
10108ee4:	d9002215 	stw	r4,136(sp)
10108ee8:	1029883a 	mov	r20,r2
10108eec:	10024c16 	blt	r2,zero,10109820 <___vfiprintf_internal_r+0x1114>
10108ef0:	dd401d83 	ldbu	r21,118(sp)
10108ef4:	80007116 	blt	r16,zero,101090bc <___vfiprintf_internal_r+0x9b0>
10108ef8:	00ffdfc4 	movi	r3,-129
10108efc:	9d04b03a 	or	r2,r19,r20
10108f00:	88e2703a 	and	r17,r17,r3
10108f04:	1000d126 	beq	r2,zero,1010924c <___vfiprintf_internal_r+0xb40>
10108f08:	a0023526 	beq	r20,zero,101097e0 <___vfiprintf_internal_r+0x10d4>
10108f0c:	ddc01a04 	addi	r23,sp,104
10108f10:	4039883a 	mov	fp,r8
10108f14:	9809883a 	mov	r4,r19
10108f18:	a00b883a 	mov	r5,r20
10108f1c:	01800284 	movi	r6,10
10108f20:	000f883a 	mov	r7,zero
10108f24:	010ac380 	call	1010ac38 <__umoddi3>
10108f28:	10800c04 	addi	r2,r2,48
10108f2c:	bdffffc4 	addi	r23,r23,-1
10108f30:	9809883a 	mov	r4,r19
10108f34:	a00b883a 	mov	r5,r20
10108f38:	b8800005 	stb	r2,0(r23)
10108f3c:	01800284 	movi	r6,10
10108f40:	000f883a 	mov	r7,zero
10108f44:	010a63c0 	call	1010a63c <__udivdi3>
10108f48:	1027883a 	mov	r19,r2
10108f4c:	10c4b03a 	or	r2,r2,r3
10108f50:	1829883a 	mov	r20,r3
10108f54:	103fef1e 	bne	r2,zero,10108f14 <__alt_data_end+0xfffe8f14>
10108f58:	d9001e17 	ldw	r4,120(sp)
10108f5c:	e011883a 	mov	r8,fp
10108f60:	25e9c83a 	sub	r20,r4,r23
10108f64:	003eec06 	br	10108b18 <__alt_data_end+0xfffe8b18>
10108f68:	d8802307 	ldb	r2,140(sp)
10108f6c:	1002361e 	bne	r2,zero,10109848 <___vfiprintf_internal_r+0x113c>
10108f70:	00c00804 	movi	r3,32
10108f74:	d8c02305 	stb	r3,140(sp)
10108f78:	04c00044 	movi	r19,1
10108f7c:	b0c00007 	ldb	r3,0(r22)
10108f80:	003e3f06 	br	10108880 <__alt_data_end+0xfffe8880>
10108f84:	8c400054 	ori	r17,r17,1
10108f88:	b0c00007 	ldb	r3,0(r22)
10108f8c:	003e3c06 	br	10108880 <__alt_data_end+0xfffe8880>
10108f90:	8c402014 	ori	r17,r17,128
10108f94:	b0c00007 	ldb	r3,0(r22)
10108f98:	003e3906 	br	10108880 <__alt_data_end+0xfffe8880>
10108f9c:	dc002715 	stw	r16,156(sp)
10108fa0:	d8002515 	stw	zero,148(sp)
10108fa4:	1f3ff404 	addi	fp,r3,-48
10108fa8:	0009883a 	mov	r4,zero
10108fac:	b021883a 	mov	r16,r22
10108fb0:	01400284 	movi	r5,10
10108fb4:	0100d140 	call	10100d14 <__mulsi3>
10108fb8:	80c00007 	ldb	r3,0(r16)
10108fbc:	e089883a 	add	r4,fp,r2
10108fc0:	b5800044 	addi	r22,r22,1
10108fc4:	1f3ff404 	addi	fp,r3,-48
10108fc8:	b021883a 	mov	r16,r22
10108fcc:	af3ff82e 	bgeu	r21,fp,10108fb0 <__alt_data_end+0xfffe8fb0>
10108fd0:	d9002515 	stw	r4,148(sp)
10108fd4:	dc002717 	ldw	r16,156(sp)
10108fd8:	003e2a06 	br	10108884 <__alt_data_end+0xfffe8884>
10108fdc:	9cc03fcc 	andi	r19,r19,255
10108fe0:	b811883a 	mov	r8,r23
10108fe4:	9802e91e 	bne	r19,zero,10109b8c <___vfiprintf_internal_r+0x1480>
10108fe8:	8c400414 	ori	r17,r17,16
10108fec:	8880080c 	andi	r2,r17,32
10108ff0:	103fb81e 	bne	r2,zero,10108ed4 <__alt_data_end+0xfffe8ed4>
10108ff4:	8880040c 	andi	r2,r17,16
10108ff8:	10022e26 	beq	r2,zero,101098b4 <___vfiprintf_internal_r+0x11a8>
10108ffc:	d9402217 	ldw	r5,136(sp)
10109000:	2cc00017 	ldw	r19,0(r5)
10109004:	29400104 	addi	r5,r5,4
10109008:	d9402215 	stw	r5,136(sp)
1010900c:	9829d7fa 	srai	r20,r19,31
10109010:	a005883a 	mov	r2,r20
10109014:	003fb506 	br	10108eec <__alt_data_end+0xfffe8eec>
10109018:	9cc03fcc 	andi	r19,r19,255
1010901c:	b811883a 	mov	r8,r23
10109020:	9802fa1e 	bne	r19,zero,10109c0c <___vfiprintf_internal_r+0x1500>
10109024:	8c400414 	ori	r17,r17,16
10109028:	8880080c 	andi	r2,r17,32
1010902c:	103f661e 	bne	r2,zero,10108dc8 <__alt_data_end+0xfffe8dc8>
10109030:	8880040c 	andi	r2,r17,16
10109034:	10020626 	beq	r2,zero,10109850 <___vfiprintf_internal_r+0x1144>
10109038:	d9402217 	ldw	r5,136(sp)
1010903c:	d8001d85 	stb	zero,118(sp)
10109040:	0029883a 	mov	r20,zero
10109044:	28800104 	addi	r2,r5,4
10109048:	2cc00017 	ldw	r19,0(r5)
1010904c:	80020816 	blt	r16,zero,10109870 <___vfiprintf_internal_r+0x1164>
10109050:	00ffdfc4 	movi	r3,-129
10109054:	d8802215 	stw	r2,136(sp)
10109058:	88e2703a 	and	r17,r17,r3
1010905c:	983f651e 	bne	r19,zero,10108df4 <__alt_data_end+0xfffe8df4>
10109060:	002b883a 	mov	r21,zero
10109064:	8002cf26 	beq	r16,zero,10109ba4 <___vfiprintf_internal_r+0x1498>
10109068:	0027883a 	mov	r19,zero
1010906c:	0029883a 	mov	r20,zero
10109070:	003f6106 	br	10108df8 <__alt_data_end+0xfffe8df8>
10109074:	9cc03fcc 	andi	r19,r19,255
10109078:	b811883a 	mov	r8,r23
1010907c:	9802e01e 	bne	r19,zero,10109c00 <___vfiprintf_internal_r+0x14f4>
10109080:	8c400414 	ori	r17,r17,16
10109084:	8880080c 	andi	r2,r17,32
10109088:	1000641e 	bne	r2,zero,1010921c <___vfiprintf_internal_r+0xb10>
1010908c:	8880040c 	andi	r2,r17,16
10109090:	1001c81e 	bne	r2,zero,101097b4 <___vfiprintf_internal_r+0x10a8>
10109094:	8880100c 	andi	r2,r17,64
10109098:	d8001d85 	stb	zero,118(sp)
1010909c:	1002281e 	bne	r2,zero,10109940 <___vfiprintf_internal_r+0x1234>
101090a0:	d9002217 	ldw	r4,136(sp)
101090a4:	0029883a 	mov	r20,zero
101090a8:	20800104 	addi	r2,r4,4
101090ac:	24c00017 	ldw	r19,0(r4)
101090b0:	8001c60e 	bge	r16,zero,101097cc <___vfiprintf_internal_r+0x10c0>
101090b4:	d8802215 	stw	r2,136(sp)
101090b8:	002b883a 	mov	r21,zero
101090bc:	9d04b03a 	or	r2,r19,r20
101090c0:	103f911e 	bne	r2,zero,10108f08 <__alt_data_end+0xfffe8f08>
101090c4:	00800044 	movi	r2,1
101090c8:	10803fcc 	andi	r2,r2,255
101090cc:	00c00044 	movi	r3,1
101090d0:	10c05f26 	beq	r2,r3,10109250 <___vfiprintf_internal_r+0xb44>
101090d4:	00c00084 	movi	r3,2
101090d8:	10ffe31e 	bne	r2,r3,10109068 <__alt_data_end+0xfffe9068>
101090dc:	0027883a 	mov	r19,zero
101090e0:	0029883a 	mov	r20,zero
101090e4:	00015106 	br	1010962c <___vfiprintf_internal_r+0xf20>
101090e8:	9cc03fcc 	andi	r19,r19,255
101090ec:	b811883a 	mov	r8,r23
101090f0:	9802c01e 	bne	r19,zero,10109bf4 <___vfiprintf_internal_r+0x14e8>
101090f4:	01440474 	movhi	r5,4113
101090f8:	2941b504 	addi	r5,r5,1748
101090fc:	d9402615 	stw	r5,152(sp)
10109100:	8880080c 	andi	r2,r17,32
10109104:	103f541e 	bne	r2,zero,10108e58 <__alt_data_end+0xfffe8e58>
10109108:	8880040c 	andi	r2,r17,16
1010910c:	1001f226 	beq	r2,zero,101098d8 <___vfiprintf_internal_r+0x11cc>
10109110:	d9402217 	ldw	r5,136(sp)
10109114:	0029883a 	mov	r20,zero
10109118:	2cc00017 	ldw	r19,0(r5)
1010911c:	29400104 	addi	r5,r5,4
10109120:	d9402215 	stw	r5,136(sp)
10109124:	003f5106 	br	10108e6c <__alt_data_end+0xfffe8e6c>
10109128:	d8c02217 	ldw	r3,136(sp)
1010912c:	b811883a 	mov	r8,r23
10109130:	d8001d85 	stb	zero,118(sp)
10109134:	1dc00017 	ldw	r23,0(r3)
10109138:	1f000104 	addi	fp,r3,4
1010913c:	b8025926 	beq	r23,zero,10109aa4 <___vfiprintf_internal_r+0x1398>
10109140:	80023316 	blt	r16,zero,10109a10 <___vfiprintf_internal_r+0x1304>
10109144:	800d883a 	mov	r6,r16
10109148:	000b883a 	mov	r5,zero
1010914c:	b809883a 	mov	r4,r23
10109150:	da002a15 	stw	r8,168(sp)
10109154:	01069940 	call	10106994 <memchr>
10109158:	da002a17 	ldw	r8,168(sp)
1010915c:	10026826 	beq	r2,zero,10109b00 <___vfiprintf_internal_r+0x13f4>
10109160:	15e9c83a 	sub	r20,r2,r23
10109164:	dd401d83 	ldbu	r21,118(sp)
10109168:	df002215 	stw	fp,136(sp)
1010916c:	0021883a 	mov	r16,zero
10109170:	003e6906 	br	10108b18 <__alt_data_end+0xfffe8b18>
10109174:	9cc03fcc 	andi	r19,r19,255
10109178:	b811883a 	mov	r8,r23
1010917c:	983fc126 	beq	r19,zero,10109084 <__alt_data_end+0xfffe9084>
10109180:	d8c02303 	ldbu	r3,140(sp)
10109184:	d8c01d85 	stb	r3,118(sp)
10109188:	003fbe06 	br	10109084 <__alt_data_end+0xfffe9084>
1010918c:	d9002217 	ldw	r4,136(sp)
10109190:	d9402217 	ldw	r5,136(sp)
10109194:	21000017 	ldw	r4,0(r4)
10109198:	28800104 	addi	r2,r5,4
1010919c:	d9002515 	stw	r4,148(sp)
101091a0:	203e3d16 	blt	r4,zero,10108a98 <__alt_data_end+0xfffe8a98>
101091a4:	d8802215 	stw	r2,136(sp)
101091a8:	b0c00007 	ldb	r3,0(r22)
101091ac:	003db406 	br	10108880 <__alt_data_end+0xfffe8880>
101091b0:	00c00ac4 	movi	r3,43
101091b4:	d8c02305 	stb	r3,140(sp)
101091b8:	04c00044 	movi	r19,1
101091bc:	b0c00007 	ldb	r3,0(r22)
101091c0:	003daf06 	br	10108880 <__alt_data_end+0xfffe8880>
101091c4:	b0c00007 	ldb	r3,0(r22)
101091c8:	01000a84 	movi	r4,42
101091cc:	b4000044 	addi	r16,r22,1
101091d0:	19025e26 	beq	r3,r4,10109b4c <___vfiprintf_internal_r+0x1440>
101091d4:	1f3ff404 	addi	fp,r3,-48
101091d8:	0009883a 	mov	r4,zero
101091dc:	af025236 	bltu	r21,fp,10109b28 <___vfiprintf_internal_r+0x141c>
101091e0:	01400284 	movi	r5,10
101091e4:	0100d140 	call	10100d14 <__mulsi3>
101091e8:	80c00007 	ldb	r3,0(r16)
101091ec:	1709883a 	add	r4,r2,fp
101091f0:	85800044 	addi	r22,r16,1
101091f4:	1f3ff404 	addi	fp,r3,-48
101091f8:	b021883a 	mov	r16,r22
101091fc:	af3ff82e 	bgeu	r21,fp,101091e0 <__alt_data_end+0xfffe91e0>
10109200:	2021883a 	mov	r16,r4
10109204:	203d9f0e 	bge	r4,zero,10108884 <__alt_data_end+0xfffe8884>
10109208:	043fffc4 	movi	r16,-1
1010920c:	003d9d06 	br	10108884 <__alt_data_end+0xfffe8884>
10109210:	8c401014 	ori	r17,r17,64
10109214:	b0c00007 	ldb	r3,0(r22)
10109218:	003d9906 	br	10108880 <__alt_data_end+0xfffe8880>
1010921c:	d9002217 	ldw	r4,136(sp)
10109220:	d8001d85 	stb	zero,118(sp)
10109224:	20c00204 	addi	r3,r4,8
10109228:	24c00017 	ldw	r19,0(r4)
1010922c:	25000117 	ldw	r20,4(r4)
10109230:	8001e716 	blt	r16,zero,101099d0 <___vfiprintf_internal_r+0x12c4>
10109234:	013fdfc4 	movi	r4,-129
10109238:	9d04b03a 	or	r2,r19,r20
1010923c:	d8c02215 	stw	r3,136(sp)
10109240:	8922703a 	and	r17,r17,r4
10109244:	002b883a 	mov	r21,zero
10109248:	103f2f1e 	bne	r2,zero,10108f08 <__alt_data_end+0xfffe8f08>
1010924c:	803e2f26 	beq	r16,zero,10108b0c <__alt_data_end+0xfffe8b0c>
10109250:	0027883a 	mov	r19,zero
10109254:	9cc00c04 	addi	r19,r19,48
10109258:	dcc019c5 	stb	r19,103(sp)
1010925c:	dd002817 	ldw	r20,160(sp)
10109260:	ddc019c4 	addi	r23,sp,103
10109264:	003e2c06 	br	10108b18 <__alt_data_end+0xfffe8b18>
10109268:	9cc03fcc 	andi	r19,r19,255
1010926c:	b811883a 	mov	r8,r23
10109270:	9802571e 	bne	r19,zero,10109bd0 <___vfiprintf_internal_r+0x14c4>
10109274:	18005726 	beq	r3,zero,101093d4 <___vfiprintf_internal_r+0xcc8>
10109278:	04c00044 	movi	r19,1
1010927c:	d8c01005 	stb	r3,64(sp)
10109280:	d8001d85 	stb	zero,118(sp)
10109284:	9829883a 	mov	r20,r19
10109288:	ddc01004 	addi	r23,sp,64
1010928c:	003f0a06 	br	10108eb8 <__alt_data_end+0xfffe8eb8>
10109290:	d9402017 	ldw	r5,128(sp)
10109294:	d9002117 	ldw	r4,132(sp)
10109298:	d9801a04 	addi	r6,sp,104
1010929c:	da802a15 	stw	r10,168(sp)
101092a0:	01085f80 	call	101085f8 <__sprint_r.part.0>
101092a4:	da802a17 	ldw	r10,168(sp)
101092a8:	1000501e 	bne	r2,zero,101093ec <___vfiprintf_internal_r+0xce0>
101092ac:	d9801b17 	ldw	r6,108(sp)
101092b0:	d8801c17 	ldw	r2,112(sp)
101092b4:	d811883a 	mov	r8,sp
101092b8:	31000044 	addi	r4,r6,1
101092bc:	003e3606 	br	10108b98 <__alt_data_end+0xfffe8b98>
101092c0:	d9001b17 	ldw	r4,108(sp)
101092c4:	d8801c17 	ldw	r2,112(sp)
101092c8:	21400044 	addi	r5,r4,1
101092cc:	d9801d87 	ldb	r6,118(sp)
101092d0:	303e5226 	beq	r6,zero,10108c1c <__alt_data_end+0xfffe8c1c>
101092d4:	01800044 	movi	r6,1
101092d8:	d9001d84 	addi	r4,sp,118
101092dc:	1185883a 	add	r2,r2,r6
101092e0:	41000015 	stw	r4,0(r8)
101092e4:	41800115 	stw	r6,4(r8)
101092e8:	d8801c15 	stw	r2,112(sp)
101092ec:	d9401b15 	stw	r5,108(sp)
101092f0:	010001c4 	movi	r4,7
101092f4:	2140b00e 	bge	r4,r5,101095b8 <___vfiprintf_internal_r+0xeac>
101092f8:	1000f61e 	bne	r2,zero,101096d4 <___vfiprintf_internal_r+0xfc8>
101092fc:	3800b31e 	bne	r7,zero,101095cc <___vfiprintf_internal_r+0xec0>
10109300:	0009883a 	mov	r4,zero
10109304:	300b883a 	mov	r5,r6
10109308:	d811883a 	mov	r8,sp
1010930c:	01802004 	movi	r6,128
10109310:	19be5226 	beq	r3,r6,10108c5c <__alt_data_end+0xfffe8c5c>
10109314:	8521c83a 	sub	r16,r16,r20
10109318:	043e790e 	bge	zero,r16,10108d00 <__alt_data_end+0xfffe8d00>
1010931c:	05400404 	movi	r21,16
10109320:	ac01b00e 	bge	r21,r16,101099e4 <___vfiprintf_internal_r+0x12d8>
10109324:	01440474 	movhi	r5,4113
10109328:	29421b04 	addi	r5,r5,2156
1010932c:	d9402315 	stw	r5,140(sp)
10109330:	070001c4 	movi	fp,7
10109334:	00000506 	br	1010934c <___vfiprintf_internal_r+0xc40>
10109338:	21400084 	addi	r5,r4,2
1010933c:	42000204 	addi	r8,r8,8
10109340:	1809883a 	mov	r4,r3
10109344:	843ffc04 	addi	r16,r16,-16
10109348:	ac000d0e 	bge	r21,r16,10109380 <___vfiprintf_internal_r+0xc74>
1010934c:	10800404 	addi	r2,r2,16
10109350:	20c00044 	addi	r3,r4,1
10109354:	44800015 	stw	r18,0(r8)
10109358:	45400115 	stw	r21,4(r8)
1010935c:	d8801c15 	stw	r2,112(sp)
10109360:	d8c01b15 	stw	r3,108(sp)
10109364:	e0fff40e 	bge	fp,r3,10109338 <__alt_data_end+0xfffe9338>
10109368:	1000101e 	bne	r2,zero,101093ac <___vfiprintf_internal_r+0xca0>
1010936c:	843ffc04 	addi	r16,r16,-16
10109370:	01400044 	movi	r5,1
10109374:	0009883a 	mov	r4,zero
10109378:	d811883a 	mov	r8,sp
1010937c:	ac3ff316 	blt	r21,r16,1010934c <__alt_data_end+0xfffe934c>
10109380:	d8c02317 	ldw	r3,140(sp)
10109384:	1405883a 	add	r2,r2,r16
10109388:	44000115 	stw	r16,4(r8)
1010938c:	40c00015 	stw	r3,0(r8)
10109390:	d8801c15 	stw	r2,112(sp)
10109394:	d9401b15 	stw	r5,108(sp)
10109398:	00c001c4 	movi	r3,7
1010939c:	19401916 	blt	r3,r5,10109404 <___vfiprintf_internal_r+0xcf8>
101093a0:	42000204 	addi	r8,r8,8
101093a4:	29400044 	addi	r5,r5,1
101093a8:	003e5506 	br	10108d00 <__alt_data_end+0xfffe8d00>
101093ac:	d9402017 	ldw	r5,128(sp)
101093b0:	d9002117 	ldw	r4,132(sp)
101093b4:	d9801a04 	addi	r6,sp,104
101093b8:	01085f80 	call	101085f8 <__sprint_r.part.0>
101093bc:	10000b1e 	bne	r2,zero,101093ec <___vfiprintf_internal_r+0xce0>
101093c0:	d9001b17 	ldw	r4,108(sp)
101093c4:	d8801c17 	ldw	r2,112(sp)
101093c8:	d811883a 	mov	r8,sp
101093cc:	21400044 	addi	r5,r4,1
101093d0:	003fdc06 	br	10109344 <__alt_data_end+0xfffe9344>
101093d4:	d8801c17 	ldw	r2,112(sp)
101093d8:	10000426 	beq	r2,zero,101093ec <___vfiprintf_internal_r+0xce0>
101093dc:	d9402017 	ldw	r5,128(sp)
101093e0:	d9002117 	ldw	r4,132(sp)
101093e4:	d9801a04 	addi	r6,sp,104
101093e8:	01085f80 	call	101085f8 <__sprint_r.part.0>
101093ec:	d9402017 	ldw	r5,128(sp)
101093f0:	2880030b 	ldhu	r2,12(r5)
101093f4:	1080100c 	andi	r2,r2,64
101093f8:	10014d1e 	bne	r2,zero,10109930 <___vfiprintf_internal_r+0x1224>
101093fc:	d8802417 	ldw	r2,144(sp)
10109400:	003d9706 	br	10108a60 <__alt_data_end+0xfffe8a60>
10109404:	1000d21e 	bne	r2,zero,10109750 <___vfiprintf_internal_r+0x1044>
10109408:	00c00044 	movi	r3,1
1010940c:	a005883a 	mov	r2,r20
10109410:	ddc00015 	stw	r23,0(sp)
10109414:	dd000115 	stw	r20,4(sp)
10109418:	dd001c15 	stw	r20,112(sp)
1010941c:	d8c01b15 	stw	r3,108(sp)
10109420:	d811883a 	mov	r8,sp
10109424:	42000204 	addi	r8,r8,8
10109428:	8c40010c 	andi	r17,r17,4
1010942c:	88004026 	beq	r17,zero,10109530 <___vfiprintf_internal_r+0xe24>
10109430:	d9002517 	ldw	r4,148(sp)
10109434:	24e3c83a 	sub	r17,r4,r19
10109438:	04403d0e 	bge	zero,r17,10109530 <___vfiprintf_internal_r+0xe24>
1010943c:	04000404 	movi	r16,16
10109440:	8441a90e 	bge	r16,r17,10109ae8 <___vfiprintf_internal_r+0x13dc>
10109444:	00c40474 	movhi	r3,4113
10109448:	18c21f04 	addi	r3,r3,2172
1010944c:	d9001b17 	ldw	r4,108(sp)
10109450:	d8c02315 	stw	r3,140(sp)
10109454:	050001c4 	movi	r20,7
10109458:	dd402117 	ldw	r21,132(sp)
1010945c:	ddc02017 	ldw	r23,128(sp)
10109460:	00000506 	br	10109478 <___vfiprintf_internal_r+0xd6c>
10109464:	21400084 	addi	r5,r4,2
10109468:	42000204 	addi	r8,r8,8
1010946c:	1809883a 	mov	r4,r3
10109470:	8c7ffc04 	addi	r17,r17,-16
10109474:	84400f0e 	bge	r16,r17,101094b4 <___vfiprintf_internal_r+0xda8>
10109478:	01440474 	movhi	r5,4113
1010947c:	10800404 	addi	r2,r2,16
10109480:	20c00044 	addi	r3,r4,1
10109484:	29421f04 	addi	r5,r5,2172
10109488:	41400015 	stw	r5,0(r8)
1010948c:	44000115 	stw	r16,4(r8)
10109490:	d8801c15 	stw	r2,112(sp)
10109494:	d8c01b15 	stw	r3,108(sp)
10109498:	a0fff20e 	bge	r20,r3,10109464 <__alt_data_end+0xfffe9464>
1010949c:	1000141e 	bne	r2,zero,101094f0 <___vfiprintf_internal_r+0xde4>
101094a0:	8c7ffc04 	addi	r17,r17,-16
101094a4:	01400044 	movi	r5,1
101094a8:	0009883a 	mov	r4,zero
101094ac:	d811883a 	mov	r8,sp
101094b0:	847ff116 	blt	r16,r17,10109478 <__alt_data_end+0xfffe9478>
101094b4:	d8c02317 	ldw	r3,140(sp)
101094b8:	1445883a 	add	r2,r2,r17
101094bc:	44400115 	stw	r17,4(r8)
101094c0:	40c00015 	stw	r3,0(r8)
101094c4:	d8801c15 	stw	r2,112(sp)
101094c8:	d9401b15 	stw	r5,108(sp)
101094cc:	00c001c4 	movi	r3,7
101094d0:	1940170e 	bge	r3,r5,10109530 <___vfiprintf_internal_r+0xe24>
101094d4:	1000101e 	bne	r2,zero,10109518 <___vfiprintf_internal_r+0xe0c>
101094d8:	d8802517 	ldw	r2,148(sp)
101094dc:	14c11616 	blt	r2,r19,10109938 <___vfiprintf_internal_r+0x122c>
101094e0:	d9002417 	ldw	r4,144(sp)
101094e4:	2089883a 	add	r4,r4,r2
101094e8:	d9002415 	stw	r4,144(sp)
101094ec:	003e1806 	br	10108d50 <__alt_data_end+0xfffe8d50>
101094f0:	d9801a04 	addi	r6,sp,104
101094f4:	b80b883a 	mov	r5,r23
101094f8:	a809883a 	mov	r4,r21
101094fc:	01085f80 	call	101085f8 <__sprint_r.part.0>
10109500:	103fba1e 	bne	r2,zero,101093ec <__alt_data_end+0xfffe93ec>
10109504:	d9001b17 	ldw	r4,108(sp)
10109508:	d8801c17 	ldw	r2,112(sp)
1010950c:	d811883a 	mov	r8,sp
10109510:	21400044 	addi	r5,r4,1
10109514:	003fd606 	br	10109470 <__alt_data_end+0xfffe9470>
10109518:	d9402017 	ldw	r5,128(sp)
1010951c:	d9002117 	ldw	r4,132(sp)
10109520:	d9801a04 	addi	r6,sp,104
10109524:	01085f80 	call	101085f8 <__sprint_r.part.0>
10109528:	103fb01e 	bne	r2,zero,101093ec <__alt_data_end+0xfffe93ec>
1010952c:	d8801c17 	ldw	r2,112(sp)
10109530:	d8c02517 	ldw	r3,148(sp)
10109534:	1cc0010e 	bge	r3,r19,1010953c <___vfiprintf_internal_r+0xe30>
10109538:	9807883a 	mov	r3,r19
1010953c:	d9002417 	ldw	r4,144(sp)
10109540:	20c9883a 	add	r4,r4,r3
10109544:	d9002415 	stw	r4,144(sp)
10109548:	103e0126 	beq	r2,zero,10108d50 <__alt_data_end+0xfffe8d50>
1010954c:	d9402017 	ldw	r5,128(sp)
10109550:	d9002117 	ldw	r4,132(sp)
10109554:	d9801a04 	addi	r6,sp,104
10109558:	01085f80 	call	101085f8 <__sprint_r.part.0>
1010955c:	103dfc26 	beq	r2,zero,10108d50 <__alt_data_end+0xfffe8d50>
10109560:	003fa206 	br	101093ec <__alt_data_end+0xfffe93ec>
10109564:	d9402017 	ldw	r5,128(sp)
10109568:	d9002117 	ldw	r4,132(sp)
1010956c:	d9801a04 	addi	r6,sp,104
10109570:	d9c02b15 	stw	r7,172(sp)
10109574:	01085f80 	call	101085f8 <__sprint_r.part.0>
10109578:	d9c02b17 	ldw	r7,172(sp)
1010957c:	103f9b1e 	bne	r2,zero,101093ec <__alt_data_end+0xfffe93ec>
10109580:	d9001b17 	ldw	r4,108(sp)
10109584:	d8801c17 	ldw	r2,112(sp)
10109588:	d811883a 	mov	r8,sp
1010958c:	21800044 	addi	r6,r4,1
10109590:	003dbf06 	br	10108c90 <__alt_data_end+0xfffe8c90>
10109594:	1000d81e 	bne	r2,zero,101098f8 <___vfiprintf_internal_r+0x11ec>
10109598:	d9001d87 	ldb	r4,118(sp)
1010959c:	20000a26 	beq	r4,zero,101095c8 <___vfiprintf_internal_r+0xebc>
101095a0:	00800044 	movi	r2,1
101095a4:	d9001d84 	addi	r4,sp,118
101095a8:	100b883a 	mov	r5,r2
101095ac:	d9000015 	stw	r4,0(sp)
101095b0:	d8800115 	stw	r2,4(sp)
101095b4:	d811883a 	mov	r8,sp
101095b8:	2809883a 	mov	r4,r5
101095bc:	42000204 	addi	r8,r8,8
101095c0:	29400044 	addi	r5,r5,1
101095c4:	003d9506 	br	10108c1c <__alt_data_end+0xfffe8c1c>
101095c8:	3800fd26 	beq	r7,zero,101099c0 <___vfiprintf_internal_r+0x12b4>
101095cc:	00800084 	movi	r2,2
101095d0:	d9001d04 	addi	r4,sp,116
101095d4:	d9000015 	stw	r4,0(sp)
101095d8:	d8800115 	stw	r2,4(sp)
101095dc:	01400044 	movi	r5,1
101095e0:	d811883a 	mov	r8,sp
101095e4:	2809883a 	mov	r4,r5
101095e8:	42000204 	addi	r8,r8,8
101095ec:	29400044 	addi	r5,r5,1
101095f0:	003f4606 	br	1010930c <__alt_data_end+0xfffe930c>
101095f4:	d8802517 	ldw	r2,148(sp)
101095f8:	14c0010e 	bge	r2,r19,10109600 <___vfiprintf_internal_r+0xef4>
101095fc:	9805883a 	mov	r2,r19
10109600:	d9402417 	ldw	r5,144(sp)
10109604:	288b883a 	add	r5,r5,r2
10109608:	d9402415 	stw	r5,144(sp)
1010960c:	003dd006 	br	10108d50 <__alt_data_end+0xfffe8d50>
10109610:	d8001d85 	stb	zero,118(sp)
10109614:	80005d16 	blt	r16,zero,1010978c <___vfiprintf_internal_r+0x1080>
10109618:	00ffdfc4 	movi	r3,-129
1010961c:	9d04b03a 	or	r2,r19,r20
10109620:	88e2703a 	and	r17,r17,r3
10109624:	103d3726 	beq	r2,zero,10108b04 <__alt_data_end+0xfffe8b04>
10109628:	002b883a 	mov	r21,zero
1010962c:	d9002617 	ldw	r4,152(sp)
10109630:	ddc01a04 	addi	r23,sp,104
10109634:	988003cc 	andi	r2,r19,15
10109638:	a006973a 	slli	r3,r20,28
1010963c:	2085883a 	add	r2,r4,r2
10109640:	9826d13a 	srli	r19,r19,4
10109644:	10800003 	ldbu	r2,0(r2)
10109648:	a028d13a 	srli	r20,r20,4
1010964c:	bdffffc4 	addi	r23,r23,-1
10109650:	1ce6b03a 	or	r19,r3,r19
10109654:	b8800005 	stb	r2,0(r23)
10109658:	9d04b03a 	or	r2,r19,r20
1010965c:	103ff51e 	bne	r2,zero,10109634 <__alt_data_end+0xfffe9634>
10109660:	d8801e17 	ldw	r2,120(sp)
10109664:	15e9c83a 	sub	r20,r2,r23
10109668:	003d2b06 	br	10108b18 <__alt_data_end+0xfffe8b18>
1010966c:	d9402017 	ldw	r5,128(sp)
10109670:	d9002117 	ldw	r4,132(sp)
10109674:	d9801a04 	addi	r6,sp,104
10109678:	01085f80 	call	101085f8 <__sprint_r.part.0>
1010967c:	103f5b1e 	bne	r2,zero,101093ec <__alt_data_end+0xfffe93ec>
10109680:	d8801c17 	ldw	r2,112(sp)
10109684:	d811883a 	mov	r8,sp
10109688:	003f6706 	br	10109428 <__alt_data_end+0xfffe9428>
1010968c:	d9402017 	ldw	r5,128(sp)
10109690:	d9002117 	ldw	r4,132(sp)
10109694:	d9801a04 	addi	r6,sp,104
10109698:	01085f80 	call	101085f8 <__sprint_r.part.0>
1010969c:	103f531e 	bne	r2,zero,101093ec <__alt_data_end+0xfffe93ec>
101096a0:	d811883a 	mov	r8,sp
101096a4:	003cd906 	br	10108a0c <__alt_data_end+0xfffe8a0c>
101096a8:	10803fcc 	andi	r2,r2,255
101096ac:	1080201c 	xori	r2,r2,128
101096b0:	10bfe004 	addi	r2,r2,-128
101096b4:	00c00c04 	movi	r3,48
101096b8:	10ffe926 	beq	r2,r3,10109660 <__alt_data_end+0xfffe9660>
101096bc:	b8ffffc5 	stb	r3,-1(r23)
101096c0:	d8c01e17 	ldw	r3,120(sp)
101096c4:	b8bfffc4 	addi	r2,r23,-1
101096c8:	102f883a 	mov	r23,r2
101096cc:	18a9c83a 	sub	r20,r3,r2
101096d0:	003d1106 	br	10108b18 <__alt_data_end+0xfffe8b18>
101096d4:	d9402017 	ldw	r5,128(sp)
101096d8:	d9002117 	ldw	r4,132(sp)
101096dc:	d9801a04 	addi	r6,sp,104
101096e0:	d8c02a15 	stw	r3,168(sp)
101096e4:	d9c02b15 	stw	r7,172(sp)
101096e8:	01085f80 	call	101085f8 <__sprint_r.part.0>
101096ec:	d8c02a17 	ldw	r3,168(sp)
101096f0:	d9c02b17 	ldw	r7,172(sp)
101096f4:	103f3d1e 	bne	r2,zero,101093ec <__alt_data_end+0xfffe93ec>
101096f8:	d9001b17 	ldw	r4,108(sp)
101096fc:	d8801c17 	ldw	r2,112(sp)
10109700:	d811883a 	mov	r8,sp
10109704:	21400044 	addi	r5,r4,1
10109708:	003d4406 	br	10108c1c <__alt_data_end+0xfffe8c1c>
1010970c:	d9402017 	ldw	r5,128(sp)
10109710:	d9002117 	ldw	r4,132(sp)
10109714:	d9801a04 	addi	r6,sp,104
10109718:	d8c02a15 	stw	r3,168(sp)
1010971c:	01085f80 	call	101085f8 <__sprint_r.part.0>
10109720:	d8c02a17 	ldw	r3,168(sp)
10109724:	103f311e 	bne	r2,zero,101093ec <__alt_data_end+0xfffe93ec>
10109728:	d9001b17 	ldw	r4,108(sp)
1010972c:	d8801c17 	ldw	r2,112(sp)
10109730:	d811883a 	mov	r8,sp
10109734:	21400044 	addi	r5,r4,1
10109738:	003ef406 	br	1010930c <__alt_data_end+0xfffe930c>
1010973c:	1000bd1e 	bne	r2,zero,10109a34 <___vfiprintf_internal_r+0x1328>
10109740:	01400044 	movi	r5,1
10109744:	0009883a 	mov	r4,zero
10109748:	d811883a 	mov	r8,sp
1010974c:	003ef106 	br	10109314 <__alt_data_end+0xfffe9314>
10109750:	d9402017 	ldw	r5,128(sp)
10109754:	d9002117 	ldw	r4,132(sp)
10109758:	d9801a04 	addi	r6,sp,104
1010975c:	01085f80 	call	101085f8 <__sprint_r.part.0>
10109760:	103f221e 	bne	r2,zero,101093ec <__alt_data_end+0xfffe93ec>
10109764:	d9401b17 	ldw	r5,108(sp)
10109768:	d8801c17 	ldw	r2,112(sp)
1010976c:	d811883a 	mov	r8,sp
10109770:	29400044 	addi	r5,r5,1
10109774:	003d6206 	br	10108d00 <__alt_data_end+0xfffe8d00>
10109778:	01440474 	movhi	r5,4113
1010977c:	2941ba04 	addi	r5,r5,1768
10109780:	d9402615 	stw	r5,152(sp)
10109784:	d8c02215 	stw	r3,136(sp)
10109788:	1023883a 	mov	r17,r2
1010978c:	9d04b03a 	or	r2,r19,r20
10109790:	103fa51e 	bne	r2,zero,10109628 <__alt_data_end+0xfffe9628>
10109794:	002b883a 	mov	r21,zero
10109798:	00800084 	movi	r2,2
1010979c:	003e4a06 	br	101090c8 <__alt_data_end+0xfffe90c8>
101097a0:	01440474 	movhi	r5,4113
101097a4:	2941ba04 	addi	r5,r5,1768
101097a8:	002b883a 	mov	r21,zero
101097ac:	d9402615 	stw	r5,152(sp)
101097b0:	003f9e06 	br	1010962c <__alt_data_end+0xfffe962c>
101097b4:	d9402217 	ldw	r5,136(sp)
101097b8:	d8001d85 	stb	zero,118(sp)
101097bc:	0029883a 	mov	r20,zero
101097c0:	28800104 	addi	r2,r5,4
101097c4:	2cc00017 	ldw	r19,0(r5)
101097c8:	803e3a16 	blt	r16,zero,101090b4 <__alt_data_end+0xfffe90b4>
101097cc:	00ffdfc4 	movi	r3,-129
101097d0:	d8802215 	stw	r2,136(sp)
101097d4:	88e2703a 	and	r17,r17,r3
101097d8:	002b883a 	mov	r21,zero
101097dc:	983e9b26 	beq	r19,zero,1010924c <__alt_data_end+0xfffe924c>
101097e0:	00800244 	movi	r2,9
101097e4:	14fdc936 	bltu	r2,r19,10108f0c <__alt_data_end+0xfffe8f0c>
101097e8:	003e9a06 	br	10109254 <__alt_data_end+0xfffe9254>
101097ec:	00800c04 	movi	r2,48
101097f0:	d8c01d45 	stb	r3,117(sp)
101097f4:	d8801d05 	stb	r2,116(sp)
101097f8:	d8001d85 	stb	zero,118(sp)
101097fc:	88c00094 	ori	r3,r17,2
10109800:	80009c16 	blt	r16,zero,10109a74 <___vfiprintf_internal_r+0x1368>
10109804:	00bfdfc4 	movi	r2,-129
10109808:	88a2703a 	and	r17,r17,r2
1010980c:	8c400094 	ori	r17,r17,2
10109810:	002b883a 	mov	r21,zero
10109814:	003f8506 	br	1010962c <__alt_data_end+0xfffe962c>
10109818:	b029883a 	mov	r20,r22
1010981c:	003c0b06 	br	1010884c <__alt_data_end+0xfffe884c>
10109820:	04e7c83a 	sub	r19,zero,r19
10109824:	05400b44 	movi	r21,45
10109828:	9804c03a 	cmpne	r2,r19,zero
1010982c:	0529c83a 	sub	r20,zero,r20
10109830:	dd401d85 	stb	r21,118(sp)
10109834:	a0a9c83a 	sub	r20,r20,r2
10109838:	80009716 	blt	r16,zero,10109a98 <___vfiprintf_internal_r+0x138c>
1010983c:	00bfdfc4 	movi	r2,-129
10109840:	88a2703a 	and	r17,r17,r2
10109844:	003db006 	br	10108f08 <__alt_data_end+0xfffe8f08>
10109848:	b0c00007 	ldb	r3,0(r22)
1010984c:	003c0c06 	br	10108880 <__alt_data_end+0xfffe8880>
10109850:	8880100c 	andi	r2,r17,64
10109854:	d8001d85 	stb	zero,118(sp)
10109858:	1000461e 	bne	r2,zero,10109974 <___vfiprintf_internal_r+0x1268>
1010985c:	d9002217 	ldw	r4,136(sp)
10109860:	0029883a 	mov	r20,zero
10109864:	20800104 	addi	r2,r4,4
10109868:	24c00017 	ldw	r19,0(r4)
1010986c:	803df80e 	bge	r16,zero,10109050 <__alt_data_end+0xfffe9050>
10109870:	9d06b03a 	or	r3,r19,r20
10109874:	d8802215 	stw	r2,136(sp)
10109878:	183d5e1e 	bne	r3,zero,10108df4 <__alt_data_end+0xfffe8df4>
1010987c:	002b883a 	mov	r21,zero
10109880:	0005883a 	mov	r2,zero
10109884:	003e1006 	br	101090c8 <__alt_data_end+0xfffe90c8>
10109888:	8880040c 	andi	r2,r17,16
1010988c:	1000321e 	bne	r2,zero,10109958 <___vfiprintf_internal_r+0x124c>
10109890:	8c40100c 	andi	r17,r17,64
10109894:	88008d26 	beq	r17,zero,10109acc <___vfiprintf_internal_r+0x13c0>
10109898:	d9402217 	ldw	r5,136(sp)
1010989c:	d8c02417 	ldw	r3,144(sp)
101098a0:	28800017 	ldw	r2,0(r5)
101098a4:	29400104 	addi	r5,r5,4
101098a8:	d9402215 	stw	r5,136(sp)
101098ac:	10c0000d 	sth	r3,0(r2)
101098b0:	003bca06 	br	101087dc <__alt_data_end+0xfffe87dc>
101098b4:	8880100c 	andi	r2,r17,64
101098b8:	10003a26 	beq	r2,zero,101099a4 <___vfiprintf_internal_r+0x1298>
101098bc:	d8802217 	ldw	r2,136(sp)
101098c0:	14c0000f 	ldh	r19,0(r2)
101098c4:	10800104 	addi	r2,r2,4
101098c8:	d8802215 	stw	r2,136(sp)
101098cc:	9829d7fa 	srai	r20,r19,31
101098d0:	a005883a 	mov	r2,r20
101098d4:	003d8506 	br	10108eec <__alt_data_end+0xfffe8eec>
101098d8:	8880100c 	andi	r2,r17,64
101098dc:	10002b26 	beq	r2,zero,1010998c <___vfiprintf_internal_r+0x1280>
101098e0:	d8802217 	ldw	r2,136(sp)
101098e4:	0029883a 	mov	r20,zero
101098e8:	14c0000b 	ldhu	r19,0(r2)
101098ec:	10800104 	addi	r2,r2,4
101098f0:	d8802215 	stw	r2,136(sp)
101098f4:	003d5d06 	br	10108e6c <__alt_data_end+0xfffe8e6c>
101098f8:	d9402017 	ldw	r5,128(sp)
101098fc:	d9002117 	ldw	r4,132(sp)
10109900:	d9801a04 	addi	r6,sp,104
10109904:	d8c02a15 	stw	r3,168(sp)
10109908:	d9c02b15 	stw	r7,172(sp)
1010990c:	01085f80 	call	101085f8 <__sprint_r.part.0>
10109910:	d8c02a17 	ldw	r3,168(sp)
10109914:	d9c02b17 	ldw	r7,172(sp)
10109918:	103eb41e 	bne	r2,zero,101093ec <__alt_data_end+0xfffe93ec>
1010991c:	d9001b17 	ldw	r4,108(sp)
10109920:	d8801c17 	ldw	r2,112(sp)
10109924:	d811883a 	mov	r8,sp
10109928:	21400044 	addi	r5,r4,1
1010992c:	003e6706 	br	101092cc <__alt_data_end+0xfffe92cc>
10109930:	00bfffc4 	movi	r2,-1
10109934:	003c4a06 	br	10108a60 <__alt_data_end+0xfffe8a60>
10109938:	9805883a 	mov	r2,r19
1010993c:	003ee806 	br	101094e0 <__alt_data_end+0xfffe94e0>
10109940:	d8c02217 	ldw	r3,136(sp)
10109944:	0029883a 	mov	r20,zero
10109948:	18800104 	addi	r2,r3,4
1010994c:	1cc0000b 	ldhu	r19,0(r3)
10109950:	803f9e0e 	bge	r16,zero,101097cc <__alt_data_end+0xfffe97cc>
10109954:	003dd706 	br	101090b4 <__alt_data_end+0xfffe90b4>
10109958:	d8c02217 	ldw	r3,136(sp)
1010995c:	d9002417 	ldw	r4,144(sp)
10109960:	18800017 	ldw	r2,0(r3)
10109964:	18c00104 	addi	r3,r3,4
10109968:	d8c02215 	stw	r3,136(sp)
1010996c:	11000015 	stw	r4,0(r2)
10109970:	003b9a06 	br	101087dc <__alt_data_end+0xfffe87dc>
10109974:	d8c02217 	ldw	r3,136(sp)
10109978:	0029883a 	mov	r20,zero
1010997c:	18800104 	addi	r2,r3,4
10109980:	1cc0000b 	ldhu	r19,0(r3)
10109984:	803db20e 	bge	r16,zero,10109050 <__alt_data_end+0xfffe9050>
10109988:	003fb906 	br	10109870 <__alt_data_end+0xfffe9870>
1010998c:	d9002217 	ldw	r4,136(sp)
10109990:	0029883a 	mov	r20,zero
10109994:	24c00017 	ldw	r19,0(r4)
10109998:	21000104 	addi	r4,r4,4
1010999c:	d9002215 	stw	r4,136(sp)
101099a0:	003d3206 	br	10108e6c <__alt_data_end+0xfffe8e6c>
101099a4:	d8c02217 	ldw	r3,136(sp)
101099a8:	1cc00017 	ldw	r19,0(r3)
101099ac:	18c00104 	addi	r3,r3,4
101099b0:	d8c02215 	stw	r3,136(sp)
101099b4:	9829d7fa 	srai	r20,r19,31
101099b8:	a005883a 	mov	r2,r20
101099bc:	003d4b06 	br	10108eec <__alt_data_end+0xfffe8eec>
101099c0:	0009883a 	mov	r4,zero
101099c4:	01400044 	movi	r5,1
101099c8:	d811883a 	mov	r8,sp
101099cc:	003e4f06 	br	1010930c <__alt_data_end+0xfffe930c>
101099d0:	d8c02215 	stw	r3,136(sp)
101099d4:	002b883a 	mov	r21,zero
101099d8:	003db806 	br	101090bc <__alt_data_end+0xfffe90bc>
101099dc:	d811883a 	mov	r8,sp
101099e0:	003e9606 	br	1010943c <__alt_data_end+0xfffe943c>
101099e4:	01040474 	movhi	r4,4113
101099e8:	21021b04 	addi	r4,r4,2156
101099ec:	d9002315 	stw	r4,140(sp)
101099f0:	003e6306 	br	10109380 <__alt_data_end+0xfffe9380>
101099f4:	b0c00043 	ldbu	r3,1(r22)
101099f8:	8c400814 	ori	r17,r17,32
101099fc:	b5800044 	addi	r22,r22,1
10109a00:	18c03fcc 	andi	r3,r3,255
10109a04:	18c0201c 	xori	r3,r3,128
10109a08:	18ffe004 	addi	r3,r3,-128
10109a0c:	003b9c06 	br	10108880 <__alt_data_end+0xfffe8880>
10109a10:	b809883a 	mov	r4,r23
10109a14:	da002a15 	stw	r8,168(sp)
10109a18:	0100fc40 	call	10100fc4 <strlen>
10109a1c:	1029883a 	mov	r20,r2
10109a20:	dd401d83 	ldbu	r21,118(sp)
10109a24:	df002215 	stw	fp,136(sp)
10109a28:	0021883a 	mov	r16,zero
10109a2c:	da002a17 	ldw	r8,168(sp)
10109a30:	003c3906 	br	10108b18 <__alt_data_end+0xfffe8b18>
10109a34:	d9402017 	ldw	r5,128(sp)
10109a38:	d9002117 	ldw	r4,132(sp)
10109a3c:	d9801a04 	addi	r6,sp,104
10109a40:	01085f80 	call	101085f8 <__sprint_r.part.0>
10109a44:	103e691e 	bne	r2,zero,101093ec <__alt_data_end+0xfffe93ec>
10109a48:	d9001b17 	ldw	r4,108(sp)
10109a4c:	d8801c17 	ldw	r2,112(sp)
10109a50:	d811883a 	mov	r8,sp
10109a54:	21400044 	addi	r5,r4,1
10109a58:	003e2e06 	br	10109314 <__alt_data_end+0xfffe9314>
10109a5c:	01040474 	movhi	r4,4113
10109a60:	21021f04 	addi	r4,r4,2172
10109a64:	d9002315 	stw	r4,140(sp)
10109a68:	d9001b17 	ldw	r4,108(sp)
10109a6c:	21000044 	addi	r4,r4,1
10109a70:	003c5e06 	br	10108bec <__alt_data_end+0xfffe8bec>
10109a74:	002b883a 	mov	r21,zero
10109a78:	00800084 	movi	r2,2
10109a7c:	10803fcc 	andi	r2,r2,255
10109a80:	01000044 	movi	r4,1
10109a84:	11002b26 	beq	r2,r4,10109b34 <___vfiprintf_internal_r+0x1428>
10109a88:	01000084 	movi	r4,2
10109a8c:	11002b1e 	bne	r2,r4,10109b3c <___vfiprintf_internal_r+0x1430>
10109a90:	1823883a 	mov	r17,r3
10109a94:	003ee506 	br	1010962c <__alt_data_end+0xfffe962c>
10109a98:	8807883a 	mov	r3,r17
10109a9c:	00800044 	movi	r2,1
10109aa0:	003ff606 	br	10109a7c <__alt_data_end+0xfffe9a7c>
10109aa4:	00800184 	movi	r2,6
10109aa8:	1400012e 	bgeu	r2,r16,10109ab0 <___vfiprintf_internal_r+0x13a4>
10109aac:	1021883a 	mov	r16,r2
10109ab0:	8029883a 	mov	r20,r16
10109ab4:	8027883a 	mov	r19,r16
10109ab8:	80002216 	blt	r16,zero,10109b44 <___vfiprintf_internal_r+0x1438>
10109abc:	05c40474 	movhi	r23,4113
10109ac0:	df002215 	stw	fp,136(sp)
10109ac4:	bdc1bf04 	addi	r23,r23,1788
10109ac8:	003cfb06 	br	10108eb8 <__alt_data_end+0xfffe8eb8>
10109acc:	d9002217 	ldw	r4,136(sp)
10109ad0:	d9402417 	ldw	r5,144(sp)
10109ad4:	20800017 	ldw	r2,0(r4)
10109ad8:	21000104 	addi	r4,r4,4
10109adc:	d9002215 	stw	r4,136(sp)
10109ae0:	11400015 	stw	r5,0(r2)
10109ae4:	003b3d06 	br	101087dc <__alt_data_end+0xfffe87dc>
10109ae8:	01440474 	movhi	r5,4113
10109aec:	29421f04 	addi	r5,r5,2172
10109af0:	d9402315 	stw	r5,140(sp)
10109af4:	d9401b17 	ldw	r5,108(sp)
10109af8:	29400044 	addi	r5,r5,1
10109afc:	003e6d06 	br	101094b4 <__alt_data_end+0xfffe94b4>
10109b00:	8029883a 	mov	r20,r16
10109b04:	dd401d83 	ldbu	r21,118(sp)
10109b08:	df002215 	stw	fp,136(sp)
10109b0c:	0021883a 	mov	r16,zero
10109b10:	003c0106 	br	10108b18 <__alt_data_end+0xfffe8b18>
10109b14:	00c40474 	movhi	r3,4113
10109b18:	18c21b04 	addi	r3,r3,2156
10109b1c:	d8c02315 	stw	r3,140(sp)
10109b20:	280d883a 	mov	r6,r5
10109b24:	003c6906 	br	10108ccc <__alt_data_end+0xfffe8ccc>
10109b28:	802d883a 	mov	r22,r16
10109b2c:	0021883a 	mov	r16,zero
10109b30:	003b5406 	br	10108884 <__alt_data_end+0xfffe8884>
10109b34:	1823883a 	mov	r17,r3
10109b38:	003cf306 	br	10108f08 <__alt_data_end+0xfffe8f08>
10109b3c:	1823883a 	mov	r17,r3
10109b40:	003cad06 	br	10108df8 <__alt_data_end+0xfffe8df8>
10109b44:	0027883a 	mov	r19,zero
10109b48:	003fdc06 	br	10109abc <__alt_data_end+0xfffe9abc>
10109b4c:	d9402217 	ldw	r5,136(sp)
10109b50:	8005883a 	mov	r2,r16
10109b54:	b0c00043 	ldbu	r3,1(r22)
10109b58:	2c000017 	ldw	r16,0(r5)
10109b5c:	29000104 	addi	r4,r5,4
10109b60:	d9002215 	stw	r4,136(sp)
10109b64:	102d883a 	mov	r22,r2
10109b68:	803fa50e 	bge	r16,zero,10109a00 <__alt_data_end+0xfffe9a00>
10109b6c:	18c03fcc 	andi	r3,r3,255
10109b70:	18c0201c 	xori	r3,r3,128
10109b74:	043fffc4 	movi	r16,-1
10109b78:	18ffe004 	addi	r3,r3,-128
10109b7c:	003b4006 	br	10108880 <__alt_data_end+0xfffe8880>
10109b80:	d9402303 	ldbu	r5,140(sp)
10109b84:	d9401d85 	stb	r5,118(sp)
10109b88:	003cae06 	br	10108e44 <__alt_data_end+0xfffe8e44>
10109b8c:	d8c02303 	ldbu	r3,140(sp)
10109b90:	d8c01d85 	stb	r3,118(sp)
10109b94:	003d1406 	br	10108fe8 <__alt_data_end+0xfffe8fe8>
10109b98:	d8c02303 	ldbu	r3,140(sp)
10109b9c:	d8c01d85 	stb	r3,118(sp)
10109ba0:	003cca06 	br	10108ecc <__alt_data_end+0xfffe8ecc>
10109ba4:	8880004c 	andi	r2,r17,1
10109ba8:	002b883a 	mov	r21,zero
10109bac:	10000526 	beq	r2,zero,10109bc4 <___vfiprintf_internal_r+0x14b8>
10109bb0:	00800c04 	movi	r2,48
10109bb4:	d88019c5 	stb	r2,103(sp)
10109bb8:	dd002817 	ldw	r20,160(sp)
10109bbc:	ddc019c4 	addi	r23,sp,103
10109bc0:	003bd506 	br	10108b18 <__alt_data_end+0xfffe8b18>
10109bc4:	0029883a 	mov	r20,zero
10109bc8:	ddc01a04 	addi	r23,sp,104
10109bcc:	003bd206 	br	10108b18 <__alt_data_end+0xfffe8b18>
10109bd0:	d9002303 	ldbu	r4,140(sp)
10109bd4:	d9001d85 	stb	r4,118(sp)
10109bd8:	003da606 	br	10109274 <__alt_data_end+0xfffe9274>
10109bdc:	d8c02303 	ldbu	r3,140(sp)
10109be0:	d8c01d85 	stb	r3,118(sp)
10109be4:	003c7606 	br	10108dc0 <__alt_data_end+0xfffe8dc0>
10109be8:	d8c02303 	ldbu	r3,140(sp)
10109bec:	d8c01d85 	stb	r3,118(sp)
10109bf0:	003c6506 	br	10108d88 <__alt_data_end+0xfffe8d88>
10109bf4:	d9002303 	ldbu	r4,140(sp)
10109bf8:	d9001d85 	stb	r4,118(sp)
10109bfc:	003d3d06 	br	101090f4 <__alt_data_end+0xfffe90f4>
10109c00:	d8c02303 	ldbu	r3,140(sp)
10109c04:	d8c01d85 	stb	r3,118(sp)
10109c08:	003d1d06 	br	10109080 <__alt_data_end+0xfffe9080>
10109c0c:	d8c02303 	ldbu	r3,140(sp)
10109c10:	d8c01d85 	stb	r3,118(sp)
10109c14:	003d0306 	br	10109024 <__alt_data_end+0xfffe9024>

10109c18 <__vfiprintf_internal>:
10109c18:	00840474 	movhi	r2,4113
10109c1c:	10892904 	addi	r2,r2,9380
10109c20:	300f883a 	mov	r7,r6
10109c24:	280d883a 	mov	r6,r5
10109c28:	200b883a 	mov	r5,r4
10109c2c:	11000017 	ldw	r4,0(r2)
10109c30:	010870c1 	jmpi	1010870c <___vfiprintf_internal_r>

10109c34 <__sbprintf>:
10109c34:	2880030b 	ldhu	r2,12(r5)
10109c38:	2ac01917 	ldw	r11,100(r5)
10109c3c:	2a80038b 	ldhu	r10,14(r5)
10109c40:	2a400717 	ldw	r9,28(r5)
10109c44:	2a000917 	ldw	r8,36(r5)
10109c48:	defee204 	addi	sp,sp,-1144
10109c4c:	00c10004 	movi	r3,1024
10109c50:	dc011a15 	stw	r16,1128(sp)
10109c54:	10bfff4c 	andi	r2,r2,65533
10109c58:	2821883a 	mov	r16,r5
10109c5c:	d8cb883a 	add	r5,sp,r3
10109c60:	dc811c15 	stw	r18,1136(sp)
10109c64:	dc411b15 	stw	r17,1132(sp)
10109c68:	dfc11d15 	stw	ra,1140(sp)
10109c6c:	2025883a 	mov	r18,r4
10109c70:	d881030d 	sth	r2,1036(sp)
10109c74:	dac11915 	stw	r11,1124(sp)
10109c78:	da81038d 	sth	r10,1038(sp)
10109c7c:	da410715 	stw	r9,1052(sp)
10109c80:	da010915 	stw	r8,1060(sp)
10109c84:	dec10015 	stw	sp,1024(sp)
10109c88:	dec10415 	stw	sp,1040(sp)
10109c8c:	d8c10215 	stw	r3,1032(sp)
10109c90:	d8c10515 	stw	r3,1044(sp)
10109c94:	d8010615 	stw	zero,1048(sp)
10109c98:	010870c0 	call	1010870c <___vfiprintf_internal_r>
10109c9c:	1023883a 	mov	r17,r2
10109ca0:	10000416 	blt	r2,zero,10109cb4 <__sbprintf+0x80>
10109ca4:	d9410004 	addi	r5,sp,1024
10109ca8:	9009883a 	mov	r4,r18
10109cac:	01050300 	call	10105030 <_fflush_r>
10109cb0:	10000d1e 	bne	r2,zero,10109ce8 <__sbprintf+0xb4>
10109cb4:	d881030b 	ldhu	r2,1036(sp)
10109cb8:	1080100c 	andi	r2,r2,64
10109cbc:	10000326 	beq	r2,zero,10109ccc <__sbprintf+0x98>
10109cc0:	8080030b 	ldhu	r2,12(r16)
10109cc4:	10801014 	ori	r2,r2,64
10109cc8:	8080030d 	sth	r2,12(r16)
10109ccc:	8805883a 	mov	r2,r17
10109cd0:	dfc11d17 	ldw	ra,1140(sp)
10109cd4:	dc811c17 	ldw	r18,1136(sp)
10109cd8:	dc411b17 	ldw	r17,1132(sp)
10109cdc:	dc011a17 	ldw	r16,1128(sp)
10109ce0:	dec11e04 	addi	sp,sp,1144
10109ce4:	f800283a 	ret
10109ce8:	047fffc4 	movi	r17,-1
10109cec:	003ff106 	br	10109cb4 <__alt_data_end+0xfffe9cb4>

10109cf0 <_write_r>:
10109cf0:	defffd04 	addi	sp,sp,-12
10109cf4:	2805883a 	mov	r2,r5
10109cf8:	dc000015 	stw	r16,0(sp)
10109cfc:	04040474 	movhi	r16,4113
10109d00:	dc400115 	stw	r17,4(sp)
10109d04:	300b883a 	mov	r5,r6
10109d08:	84102704 	addi	r16,r16,16540
10109d0c:	2023883a 	mov	r17,r4
10109d10:	380d883a 	mov	r6,r7
10109d14:	1009883a 	mov	r4,r2
10109d18:	dfc00215 	stw	ra,8(sp)
10109d1c:	80000015 	stw	zero,0(r16)
10109d20:	010e3340 	call	1010e334 <write>
10109d24:	00ffffc4 	movi	r3,-1
10109d28:	10c00526 	beq	r2,r3,10109d40 <_write_r+0x50>
10109d2c:	dfc00217 	ldw	ra,8(sp)
10109d30:	dc400117 	ldw	r17,4(sp)
10109d34:	dc000017 	ldw	r16,0(sp)
10109d38:	dec00304 	addi	sp,sp,12
10109d3c:	f800283a 	ret
10109d40:	80c00017 	ldw	r3,0(r16)
10109d44:	183ff926 	beq	r3,zero,10109d2c <__alt_data_end+0xfffe9d2c>
10109d48:	88c00015 	stw	r3,0(r17)
10109d4c:	003ff706 	br	10109d2c <__alt_data_end+0xfffe9d2c>

10109d50 <_close_r>:
10109d50:	defffd04 	addi	sp,sp,-12
10109d54:	dc000015 	stw	r16,0(sp)
10109d58:	04040474 	movhi	r16,4113
10109d5c:	dc400115 	stw	r17,4(sp)
10109d60:	84102704 	addi	r16,r16,16540
10109d64:	2023883a 	mov	r17,r4
10109d68:	2809883a 	mov	r4,r5
10109d6c:	dfc00215 	stw	ra,8(sp)
10109d70:	80000015 	stw	zero,0(r16)
10109d74:	010dadc0 	call	1010dadc <close>
10109d78:	00ffffc4 	movi	r3,-1
10109d7c:	10c00526 	beq	r2,r3,10109d94 <_close_r+0x44>
10109d80:	dfc00217 	ldw	ra,8(sp)
10109d84:	dc400117 	ldw	r17,4(sp)
10109d88:	dc000017 	ldw	r16,0(sp)
10109d8c:	dec00304 	addi	sp,sp,12
10109d90:	f800283a 	ret
10109d94:	80c00017 	ldw	r3,0(r16)
10109d98:	183ff926 	beq	r3,zero,10109d80 <__alt_data_end+0xfffe9d80>
10109d9c:	88c00015 	stw	r3,0(r17)
10109da0:	003ff706 	br	10109d80 <__alt_data_end+0xfffe9d80>

10109da4 <_calloc_r>:
10109da4:	defffe04 	addi	sp,sp,-8
10109da8:	2805883a 	mov	r2,r5
10109dac:	dc000015 	stw	r16,0(sp)
10109db0:	300b883a 	mov	r5,r6
10109db4:	2021883a 	mov	r16,r4
10109db8:	1009883a 	mov	r4,r2
10109dbc:	dfc00115 	stw	ra,4(sp)
10109dc0:	0100d140 	call	10100d14 <__mulsi3>
10109dc4:	100b883a 	mov	r5,r2
10109dc8:	8009883a 	mov	r4,r16
10109dcc:	01061880 	call	10106188 <_malloc_r>
10109dd0:	10002926 	beq	r2,zero,10109e78 <_calloc_r+0xd4>
10109dd4:	11bfff17 	ldw	r6,-4(r2)
10109dd8:	1021883a 	mov	r16,r2
10109ddc:	00bfff04 	movi	r2,-4
10109de0:	308c703a 	and	r6,r6,r2
10109de4:	00c00904 	movi	r3,36
10109de8:	308d883a 	add	r6,r6,r2
10109dec:	19801636 	bltu	r3,r6,10109e48 <_calloc_r+0xa4>
10109df0:	008004c4 	movi	r2,19
10109df4:	11800b2e 	bgeu	r2,r6,10109e24 <_calloc_r+0x80>
10109df8:	80000015 	stw	zero,0(r16)
10109dfc:	80000115 	stw	zero,4(r16)
10109e00:	008006c4 	movi	r2,27
10109e04:	11801a2e 	bgeu	r2,r6,10109e70 <_calloc_r+0xcc>
10109e08:	80000215 	stw	zero,8(r16)
10109e0c:	80000315 	stw	zero,12(r16)
10109e10:	30c0151e 	bne	r6,r3,10109e68 <_calloc_r+0xc4>
10109e14:	80000415 	stw	zero,16(r16)
10109e18:	80800604 	addi	r2,r16,24
10109e1c:	80000515 	stw	zero,20(r16)
10109e20:	00000106 	br	10109e28 <_calloc_r+0x84>
10109e24:	8005883a 	mov	r2,r16
10109e28:	10000015 	stw	zero,0(r2)
10109e2c:	10000115 	stw	zero,4(r2)
10109e30:	10000215 	stw	zero,8(r2)
10109e34:	8005883a 	mov	r2,r16
10109e38:	dfc00117 	ldw	ra,4(sp)
10109e3c:	dc000017 	ldw	r16,0(sp)
10109e40:	dec00204 	addi	sp,sp,8
10109e44:	f800283a 	ret
10109e48:	000b883a 	mov	r5,zero
10109e4c:	8009883a 	mov	r4,r16
10109e50:	0106bd40 	call	10106bd4 <memset>
10109e54:	8005883a 	mov	r2,r16
10109e58:	dfc00117 	ldw	ra,4(sp)
10109e5c:	dc000017 	ldw	r16,0(sp)
10109e60:	dec00204 	addi	sp,sp,8
10109e64:	f800283a 	ret
10109e68:	80800404 	addi	r2,r16,16
10109e6c:	003fee06 	br	10109e28 <__alt_data_end+0xfffe9e28>
10109e70:	80800204 	addi	r2,r16,8
10109e74:	003fec06 	br	10109e28 <__alt_data_end+0xfffe9e28>
10109e78:	0005883a 	mov	r2,zero
10109e7c:	003fee06 	br	10109e38 <__alt_data_end+0xfffe9e38>

10109e80 <_fclose_r>:
10109e80:	28003926 	beq	r5,zero,10109f68 <_fclose_r+0xe8>
10109e84:	defffc04 	addi	sp,sp,-16
10109e88:	dc400115 	stw	r17,4(sp)
10109e8c:	dc000015 	stw	r16,0(sp)
10109e90:	dfc00315 	stw	ra,12(sp)
10109e94:	dc800215 	stw	r18,8(sp)
10109e98:	2023883a 	mov	r17,r4
10109e9c:	2821883a 	mov	r16,r5
10109ea0:	20000226 	beq	r4,zero,10109eac <_fclose_r+0x2c>
10109ea4:	20800e17 	ldw	r2,56(r4)
10109ea8:	10002726 	beq	r2,zero,10109f48 <_fclose_r+0xc8>
10109eac:	8080030f 	ldh	r2,12(r16)
10109eb0:	1000071e 	bne	r2,zero,10109ed0 <_fclose_r+0x50>
10109eb4:	0005883a 	mov	r2,zero
10109eb8:	dfc00317 	ldw	ra,12(sp)
10109ebc:	dc800217 	ldw	r18,8(sp)
10109ec0:	dc400117 	ldw	r17,4(sp)
10109ec4:	dc000017 	ldw	r16,0(sp)
10109ec8:	dec00404 	addi	sp,sp,16
10109ecc:	f800283a 	ret
10109ed0:	800b883a 	mov	r5,r16
10109ed4:	8809883a 	mov	r4,r17
10109ed8:	0104e140 	call	10104e14 <__sflush_r>
10109edc:	1025883a 	mov	r18,r2
10109ee0:	80800b17 	ldw	r2,44(r16)
10109ee4:	10000426 	beq	r2,zero,10109ef8 <_fclose_r+0x78>
10109ee8:	81400717 	ldw	r5,28(r16)
10109eec:	8809883a 	mov	r4,r17
10109ef0:	103ee83a 	callr	r2
10109ef4:	10001616 	blt	r2,zero,10109f50 <_fclose_r+0xd0>
10109ef8:	8080030b 	ldhu	r2,12(r16)
10109efc:	1080200c 	andi	r2,r2,128
10109f00:	1000151e 	bne	r2,zero,10109f58 <_fclose_r+0xd8>
10109f04:	81400c17 	ldw	r5,48(r16)
10109f08:	28000526 	beq	r5,zero,10109f20 <_fclose_r+0xa0>
10109f0c:	80801004 	addi	r2,r16,64
10109f10:	28800226 	beq	r5,r2,10109f1c <_fclose_r+0x9c>
10109f14:	8809883a 	mov	r4,r17
10109f18:	01055900 	call	10105590 <_free_r>
10109f1c:	80000c15 	stw	zero,48(r16)
10109f20:	81401117 	ldw	r5,68(r16)
10109f24:	28000326 	beq	r5,zero,10109f34 <_fclose_r+0xb4>
10109f28:	8809883a 	mov	r4,r17
10109f2c:	01055900 	call	10105590 <_free_r>
10109f30:	80001115 	stw	zero,68(r16)
10109f34:	010542c0 	call	1010542c <__sfp_lock_acquire>
10109f38:	8000030d 	sth	zero,12(r16)
10109f3c:	01054300 	call	10105430 <__sfp_lock_release>
10109f40:	9005883a 	mov	r2,r18
10109f44:	003fdc06 	br	10109eb8 <__alt_data_end+0xfffe9eb8>
10109f48:	010541c0 	call	1010541c <__sinit>
10109f4c:	003fd706 	br	10109eac <__alt_data_end+0xfffe9eac>
10109f50:	04bfffc4 	movi	r18,-1
10109f54:	003fe806 	br	10109ef8 <__alt_data_end+0xfffe9ef8>
10109f58:	81400417 	ldw	r5,16(r16)
10109f5c:	8809883a 	mov	r4,r17
10109f60:	01055900 	call	10105590 <_free_r>
10109f64:	003fe706 	br	10109f04 <__alt_data_end+0xfffe9f04>
10109f68:	0005883a 	mov	r2,zero
10109f6c:	f800283a 	ret

10109f70 <fclose>:
10109f70:	00840474 	movhi	r2,4113
10109f74:	10892904 	addi	r2,r2,9380
10109f78:	200b883a 	mov	r5,r4
10109f7c:	11000017 	ldw	r4,0(r2)
10109f80:	0109e801 	jmpi	10109e80 <_fclose_r>

10109f84 <__fputwc>:
10109f84:	defff804 	addi	sp,sp,-32
10109f88:	dcc00415 	stw	r19,16(sp)
10109f8c:	dc800315 	stw	r18,12(sp)
10109f90:	dc000115 	stw	r16,4(sp)
10109f94:	dfc00715 	stw	ra,28(sp)
10109f98:	dd400615 	stw	r21,24(sp)
10109f9c:	dd000515 	stw	r20,20(sp)
10109fa0:	dc400215 	stw	r17,8(sp)
10109fa4:	2027883a 	mov	r19,r4
10109fa8:	2825883a 	mov	r18,r5
10109fac:	3021883a 	mov	r16,r6
10109fb0:	0105f780 	call	10105f78 <__locale_mb_cur_max>
10109fb4:	00c00044 	movi	r3,1
10109fb8:	10c03e26 	beq	r2,r3,1010a0b4 <__fputwc+0x130>
10109fbc:	81c01704 	addi	r7,r16,92
10109fc0:	900d883a 	mov	r6,r18
10109fc4:	d80b883a 	mov	r5,sp
10109fc8:	9809883a 	mov	r4,r19
10109fcc:	010a4540 	call	1010a454 <_wcrtomb_r>
10109fd0:	1029883a 	mov	r20,r2
10109fd4:	00bfffc4 	movi	r2,-1
10109fd8:	a0802026 	beq	r20,r2,1010a05c <__fputwc+0xd8>
10109fdc:	d9400003 	ldbu	r5,0(sp)
10109fe0:	a0001c26 	beq	r20,zero,1010a054 <__fputwc+0xd0>
10109fe4:	0023883a 	mov	r17,zero
10109fe8:	05400284 	movi	r21,10
10109fec:	00000906 	br	1010a014 <__fputwc+0x90>
10109ff0:	80800017 	ldw	r2,0(r16)
10109ff4:	11400005 	stb	r5,0(r2)
10109ff8:	80c00017 	ldw	r3,0(r16)
10109ffc:	18c00044 	addi	r3,r3,1
1010a000:	80c00015 	stw	r3,0(r16)
1010a004:	8c400044 	addi	r17,r17,1
1010a008:	dc45883a 	add	r2,sp,r17
1010a00c:	8d00112e 	bgeu	r17,r20,1010a054 <__fputwc+0xd0>
1010a010:	11400003 	ldbu	r5,0(r2)
1010a014:	80c00217 	ldw	r3,8(r16)
1010a018:	18ffffc4 	addi	r3,r3,-1
1010a01c:	80c00215 	stw	r3,8(r16)
1010a020:	183ff30e 	bge	r3,zero,10109ff0 <__alt_data_end+0xfffe9ff0>
1010a024:	80800617 	ldw	r2,24(r16)
1010a028:	18801916 	blt	r3,r2,1010a090 <__fputwc+0x10c>
1010a02c:	80800017 	ldw	r2,0(r16)
1010a030:	11400005 	stb	r5,0(r2)
1010a034:	80800017 	ldw	r2,0(r16)
1010a038:	10c00003 	ldbu	r3,0(r2)
1010a03c:	10800044 	addi	r2,r2,1
1010a040:	1d402326 	beq	r3,r21,1010a0d0 <__fputwc+0x14c>
1010a044:	80800015 	stw	r2,0(r16)
1010a048:	8c400044 	addi	r17,r17,1
1010a04c:	dc45883a 	add	r2,sp,r17
1010a050:	8d3fef36 	bltu	r17,r20,1010a010 <__alt_data_end+0xfffea010>
1010a054:	9005883a 	mov	r2,r18
1010a058:	00000406 	br	1010a06c <__fputwc+0xe8>
1010a05c:	80c0030b 	ldhu	r3,12(r16)
1010a060:	a005883a 	mov	r2,r20
1010a064:	18c01014 	ori	r3,r3,64
1010a068:	80c0030d 	sth	r3,12(r16)
1010a06c:	dfc00717 	ldw	ra,28(sp)
1010a070:	dd400617 	ldw	r21,24(sp)
1010a074:	dd000517 	ldw	r20,20(sp)
1010a078:	dcc00417 	ldw	r19,16(sp)
1010a07c:	dc800317 	ldw	r18,12(sp)
1010a080:	dc400217 	ldw	r17,8(sp)
1010a084:	dc000117 	ldw	r16,4(sp)
1010a088:	dec00804 	addi	sp,sp,32
1010a08c:	f800283a 	ret
1010a090:	800d883a 	mov	r6,r16
1010a094:	29403fcc 	andi	r5,r5,255
1010a098:	9809883a 	mov	r4,r19
1010a09c:	010a2fc0 	call	1010a2fc <__swbuf_r>
1010a0a0:	10bfffe0 	cmpeqi	r2,r2,-1
1010a0a4:	10803fcc 	andi	r2,r2,255
1010a0a8:	103fd626 	beq	r2,zero,1010a004 <__alt_data_end+0xfffea004>
1010a0ac:	00bfffc4 	movi	r2,-1
1010a0b0:	003fee06 	br	1010a06c <__alt_data_end+0xfffea06c>
1010a0b4:	90ffffc4 	addi	r3,r18,-1
1010a0b8:	01003f84 	movi	r4,254
1010a0bc:	20ffbf36 	bltu	r4,r3,10109fbc <__alt_data_end+0xfffe9fbc>
1010a0c0:	900b883a 	mov	r5,r18
1010a0c4:	dc800005 	stb	r18,0(sp)
1010a0c8:	1029883a 	mov	r20,r2
1010a0cc:	003fc506 	br	10109fe4 <__alt_data_end+0xfffe9fe4>
1010a0d0:	800d883a 	mov	r6,r16
1010a0d4:	a80b883a 	mov	r5,r21
1010a0d8:	9809883a 	mov	r4,r19
1010a0dc:	010a2fc0 	call	1010a2fc <__swbuf_r>
1010a0e0:	10bfffe0 	cmpeqi	r2,r2,-1
1010a0e4:	003fef06 	br	1010a0a4 <__alt_data_end+0xfffea0a4>

1010a0e8 <_fputwc_r>:
1010a0e8:	3080030b 	ldhu	r2,12(r6)
1010a0ec:	10c8000c 	andi	r3,r2,8192
1010a0f0:	1800051e 	bne	r3,zero,1010a108 <_fputwc_r+0x20>
1010a0f4:	30c01917 	ldw	r3,100(r6)
1010a0f8:	10880014 	ori	r2,r2,8192
1010a0fc:	3080030d 	sth	r2,12(r6)
1010a100:	18880014 	ori	r2,r3,8192
1010a104:	30801915 	stw	r2,100(r6)
1010a108:	0109f841 	jmpi	10109f84 <__fputwc>

1010a10c <fputwc>:
1010a10c:	00840474 	movhi	r2,4113
1010a110:	defffc04 	addi	sp,sp,-16
1010a114:	10892904 	addi	r2,r2,9380
1010a118:	dc000115 	stw	r16,4(sp)
1010a11c:	14000017 	ldw	r16,0(r2)
1010a120:	dc400215 	stw	r17,8(sp)
1010a124:	dfc00315 	stw	ra,12(sp)
1010a128:	2023883a 	mov	r17,r4
1010a12c:	80000226 	beq	r16,zero,1010a138 <fputwc+0x2c>
1010a130:	80800e17 	ldw	r2,56(r16)
1010a134:	10001026 	beq	r2,zero,1010a178 <fputwc+0x6c>
1010a138:	2880030b 	ldhu	r2,12(r5)
1010a13c:	10c8000c 	andi	r3,r2,8192
1010a140:	1800051e 	bne	r3,zero,1010a158 <fputwc+0x4c>
1010a144:	28c01917 	ldw	r3,100(r5)
1010a148:	10880014 	ori	r2,r2,8192
1010a14c:	2880030d 	sth	r2,12(r5)
1010a150:	18880014 	ori	r2,r3,8192
1010a154:	28801915 	stw	r2,100(r5)
1010a158:	280d883a 	mov	r6,r5
1010a15c:	8009883a 	mov	r4,r16
1010a160:	880b883a 	mov	r5,r17
1010a164:	dfc00317 	ldw	ra,12(sp)
1010a168:	dc400217 	ldw	r17,8(sp)
1010a16c:	dc000117 	ldw	r16,4(sp)
1010a170:	dec00404 	addi	sp,sp,16
1010a174:	0109f841 	jmpi	10109f84 <__fputwc>
1010a178:	8009883a 	mov	r4,r16
1010a17c:	d9400015 	stw	r5,0(sp)
1010a180:	010541c0 	call	1010541c <__sinit>
1010a184:	d9400017 	ldw	r5,0(sp)
1010a188:	003feb06 	br	1010a138 <__alt_data_end+0xfffea138>

1010a18c <_fstat_r>:
1010a18c:	defffd04 	addi	sp,sp,-12
1010a190:	2805883a 	mov	r2,r5
1010a194:	dc000015 	stw	r16,0(sp)
1010a198:	04040474 	movhi	r16,4113
1010a19c:	dc400115 	stw	r17,4(sp)
1010a1a0:	84102704 	addi	r16,r16,16540
1010a1a4:	2023883a 	mov	r17,r4
1010a1a8:	300b883a 	mov	r5,r6
1010a1ac:	1009883a 	mov	r4,r2
1010a1b0:	dfc00215 	stw	ra,8(sp)
1010a1b4:	80000015 	stw	zero,0(r16)
1010a1b8:	010dc1c0 	call	1010dc1c <fstat>
1010a1bc:	00ffffc4 	movi	r3,-1
1010a1c0:	10c00526 	beq	r2,r3,1010a1d8 <_fstat_r+0x4c>
1010a1c4:	dfc00217 	ldw	ra,8(sp)
1010a1c8:	dc400117 	ldw	r17,4(sp)
1010a1cc:	dc000017 	ldw	r16,0(sp)
1010a1d0:	dec00304 	addi	sp,sp,12
1010a1d4:	f800283a 	ret
1010a1d8:	80c00017 	ldw	r3,0(r16)
1010a1dc:	183ff926 	beq	r3,zero,1010a1c4 <__alt_data_end+0xfffea1c4>
1010a1e0:	88c00015 	stw	r3,0(r17)
1010a1e4:	003ff706 	br	1010a1c4 <__alt_data_end+0xfffea1c4>

1010a1e8 <_isatty_r>:
1010a1e8:	defffd04 	addi	sp,sp,-12
1010a1ec:	dc000015 	stw	r16,0(sp)
1010a1f0:	04040474 	movhi	r16,4113
1010a1f4:	dc400115 	stw	r17,4(sp)
1010a1f8:	84102704 	addi	r16,r16,16540
1010a1fc:	2023883a 	mov	r17,r4
1010a200:	2809883a 	mov	r4,r5
1010a204:	dfc00215 	stw	ra,8(sp)
1010a208:	80000015 	stw	zero,0(r16)
1010a20c:	010dd100 	call	1010dd10 <isatty>
1010a210:	00ffffc4 	movi	r3,-1
1010a214:	10c00526 	beq	r2,r3,1010a22c <_isatty_r+0x44>
1010a218:	dfc00217 	ldw	ra,8(sp)
1010a21c:	dc400117 	ldw	r17,4(sp)
1010a220:	dc000017 	ldw	r16,0(sp)
1010a224:	dec00304 	addi	sp,sp,12
1010a228:	f800283a 	ret
1010a22c:	80c00017 	ldw	r3,0(r16)
1010a230:	183ff926 	beq	r3,zero,1010a218 <__alt_data_end+0xfffea218>
1010a234:	88c00015 	stw	r3,0(r17)
1010a238:	003ff706 	br	1010a218 <__alt_data_end+0xfffea218>

1010a23c <_lseek_r>:
1010a23c:	defffd04 	addi	sp,sp,-12
1010a240:	2805883a 	mov	r2,r5
1010a244:	dc000015 	stw	r16,0(sp)
1010a248:	04040474 	movhi	r16,4113
1010a24c:	dc400115 	stw	r17,4(sp)
1010a250:	300b883a 	mov	r5,r6
1010a254:	84102704 	addi	r16,r16,16540
1010a258:	2023883a 	mov	r17,r4
1010a25c:	380d883a 	mov	r6,r7
1010a260:	1009883a 	mov	r4,r2
1010a264:	dfc00215 	stw	ra,8(sp)
1010a268:	80000015 	stw	zero,0(r16)
1010a26c:	010dee40 	call	1010dee4 <lseek>
1010a270:	00ffffc4 	movi	r3,-1
1010a274:	10c00526 	beq	r2,r3,1010a28c <_lseek_r+0x50>
1010a278:	dfc00217 	ldw	ra,8(sp)
1010a27c:	dc400117 	ldw	r17,4(sp)
1010a280:	dc000017 	ldw	r16,0(sp)
1010a284:	dec00304 	addi	sp,sp,12
1010a288:	f800283a 	ret
1010a28c:	80c00017 	ldw	r3,0(r16)
1010a290:	183ff926 	beq	r3,zero,1010a278 <__alt_data_end+0xfffea278>
1010a294:	88c00015 	stw	r3,0(r17)
1010a298:	003ff706 	br	1010a278 <__alt_data_end+0xfffea278>

1010a29c <_read_r>:
1010a29c:	defffd04 	addi	sp,sp,-12
1010a2a0:	2805883a 	mov	r2,r5
1010a2a4:	dc000015 	stw	r16,0(sp)
1010a2a8:	04040474 	movhi	r16,4113
1010a2ac:	dc400115 	stw	r17,4(sp)
1010a2b0:	300b883a 	mov	r5,r6
1010a2b4:	84102704 	addi	r16,r16,16540
1010a2b8:	2023883a 	mov	r17,r4
1010a2bc:	380d883a 	mov	r6,r7
1010a2c0:	1009883a 	mov	r4,r2
1010a2c4:	dfc00215 	stw	ra,8(sp)
1010a2c8:	80000015 	stw	zero,0(r16)
1010a2cc:	010e0c00 	call	1010e0c0 <read>
1010a2d0:	00ffffc4 	movi	r3,-1
1010a2d4:	10c00526 	beq	r2,r3,1010a2ec <_read_r+0x50>
1010a2d8:	dfc00217 	ldw	ra,8(sp)
1010a2dc:	dc400117 	ldw	r17,4(sp)
1010a2e0:	dc000017 	ldw	r16,0(sp)
1010a2e4:	dec00304 	addi	sp,sp,12
1010a2e8:	f800283a 	ret
1010a2ec:	80c00017 	ldw	r3,0(r16)
1010a2f0:	183ff926 	beq	r3,zero,1010a2d8 <__alt_data_end+0xfffea2d8>
1010a2f4:	88c00015 	stw	r3,0(r17)
1010a2f8:	003ff706 	br	1010a2d8 <__alt_data_end+0xfffea2d8>

1010a2fc <__swbuf_r>:
1010a2fc:	defffb04 	addi	sp,sp,-20
1010a300:	dcc00315 	stw	r19,12(sp)
1010a304:	dc800215 	stw	r18,8(sp)
1010a308:	dc000015 	stw	r16,0(sp)
1010a30c:	dfc00415 	stw	ra,16(sp)
1010a310:	dc400115 	stw	r17,4(sp)
1010a314:	2025883a 	mov	r18,r4
1010a318:	2827883a 	mov	r19,r5
1010a31c:	3021883a 	mov	r16,r6
1010a320:	20000226 	beq	r4,zero,1010a32c <__swbuf_r+0x30>
1010a324:	20800e17 	ldw	r2,56(r4)
1010a328:	10004226 	beq	r2,zero,1010a434 <__swbuf_r+0x138>
1010a32c:	80800617 	ldw	r2,24(r16)
1010a330:	8100030b 	ldhu	r4,12(r16)
1010a334:	80800215 	stw	r2,8(r16)
1010a338:	2080020c 	andi	r2,r4,8
1010a33c:	10003626 	beq	r2,zero,1010a418 <__swbuf_r+0x11c>
1010a340:	80c00417 	ldw	r3,16(r16)
1010a344:	18003426 	beq	r3,zero,1010a418 <__swbuf_r+0x11c>
1010a348:	2088000c 	andi	r2,r4,8192
1010a34c:	9c403fcc 	andi	r17,r19,255
1010a350:	10001a26 	beq	r2,zero,1010a3bc <__swbuf_r+0xc0>
1010a354:	80800017 	ldw	r2,0(r16)
1010a358:	81000517 	ldw	r4,20(r16)
1010a35c:	10c7c83a 	sub	r3,r2,r3
1010a360:	1900200e 	bge	r3,r4,1010a3e4 <__swbuf_r+0xe8>
1010a364:	18c00044 	addi	r3,r3,1
1010a368:	81000217 	ldw	r4,8(r16)
1010a36c:	11400044 	addi	r5,r2,1
1010a370:	81400015 	stw	r5,0(r16)
1010a374:	213fffc4 	addi	r4,r4,-1
1010a378:	81000215 	stw	r4,8(r16)
1010a37c:	14c00005 	stb	r19,0(r2)
1010a380:	80800517 	ldw	r2,20(r16)
1010a384:	10c01e26 	beq	r2,r3,1010a400 <__swbuf_r+0x104>
1010a388:	8080030b 	ldhu	r2,12(r16)
1010a38c:	1080004c 	andi	r2,r2,1
1010a390:	10000226 	beq	r2,zero,1010a39c <__swbuf_r+0xa0>
1010a394:	00800284 	movi	r2,10
1010a398:	88801926 	beq	r17,r2,1010a400 <__swbuf_r+0x104>
1010a39c:	8805883a 	mov	r2,r17
1010a3a0:	dfc00417 	ldw	ra,16(sp)
1010a3a4:	dcc00317 	ldw	r19,12(sp)
1010a3a8:	dc800217 	ldw	r18,8(sp)
1010a3ac:	dc400117 	ldw	r17,4(sp)
1010a3b0:	dc000017 	ldw	r16,0(sp)
1010a3b4:	dec00504 	addi	sp,sp,20
1010a3b8:	f800283a 	ret
1010a3bc:	81401917 	ldw	r5,100(r16)
1010a3c0:	00b7ffc4 	movi	r2,-8193
1010a3c4:	21080014 	ori	r4,r4,8192
1010a3c8:	2884703a 	and	r2,r5,r2
1010a3cc:	80801915 	stw	r2,100(r16)
1010a3d0:	80800017 	ldw	r2,0(r16)
1010a3d4:	8100030d 	sth	r4,12(r16)
1010a3d8:	81000517 	ldw	r4,20(r16)
1010a3dc:	10c7c83a 	sub	r3,r2,r3
1010a3e0:	193fe016 	blt	r3,r4,1010a364 <__alt_data_end+0xfffea364>
1010a3e4:	800b883a 	mov	r5,r16
1010a3e8:	9009883a 	mov	r4,r18
1010a3ec:	01050300 	call	10105030 <_fflush_r>
1010a3f0:	1000071e 	bne	r2,zero,1010a410 <__swbuf_r+0x114>
1010a3f4:	80800017 	ldw	r2,0(r16)
1010a3f8:	00c00044 	movi	r3,1
1010a3fc:	003fda06 	br	1010a368 <__alt_data_end+0xfffea368>
1010a400:	800b883a 	mov	r5,r16
1010a404:	9009883a 	mov	r4,r18
1010a408:	01050300 	call	10105030 <_fflush_r>
1010a40c:	103fe326 	beq	r2,zero,1010a39c <__alt_data_end+0xfffea39c>
1010a410:	00bfffc4 	movi	r2,-1
1010a414:	003fe206 	br	1010a3a0 <__alt_data_end+0xfffea3a0>
1010a418:	800b883a 	mov	r5,r16
1010a41c:	9009883a 	mov	r4,r18
1010a420:	01034100 	call	10103410 <__swsetup_r>
1010a424:	103ffa1e 	bne	r2,zero,1010a410 <__alt_data_end+0xfffea410>
1010a428:	8100030b 	ldhu	r4,12(r16)
1010a42c:	80c00417 	ldw	r3,16(r16)
1010a430:	003fc506 	br	1010a348 <__alt_data_end+0xfffea348>
1010a434:	010541c0 	call	1010541c <__sinit>
1010a438:	003fbc06 	br	1010a32c <__alt_data_end+0xfffea32c>

1010a43c <__swbuf>:
1010a43c:	00840474 	movhi	r2,4113
1010a440:	10892904 	addi	r2,r2,9380
1010a444:	280d883a 	mov	r6,r5
1010a448:	200b883a 	mov	r5,r4
1010a44c:	11000017 	ldw	r4,0(r2)
1010a450:	010a2fc1 	jmpi	1010a2fc <__swbuf_r>

1010a454 <_wcrtomb_r>:
1010a454:	defff604 	addi	sp,sp,-40
1010a458:	00840474 	movhi	r2,4113
1010a45c:	dc800815 	stw	r18,32(sp)
1010a460:	dc400715 	stw	r17,28(sp)
1010a464:	dc000615 	stw	r16,24(sp)
1010a468:	10892d04 	addi	r2,r2,9396
1010a46c:	dfc00915 	stw	ra,36(sp)
1010a470:	2021883a 	mov	r16,r4
1010a474:	3823883a 	mov	r17,r7
1010a478:	14800017 	ldw	r18,0(r2)
1010a47c:	28001426 	beq	r5,zero,1010a4d0 <_wcrtomb_r+0x7c>
1010a480:	d9400415 	stw	r5,16(sp)
1010a484:	d9800515 	stw	r6,20(sp)
1010a488:	0105f6c0 	call	10105f6c <__locale_charset>
1010a48c:	d9800517 	ldw	r6,20(sp)
1010a490:	d9400417 	ldw	r5,16(sp)
1010a494:	100f883a 	mov	r7,r2
1010a498:	dc400015 	stw	r17,0(sp)
1010a49c:	8009883a 	mov	r4,r16
1010a4a0:	903ee83a 	callr	r18
1010a4a4:	00ffffc4 	movi	r3,-1
1010a4a8:	10c0031e 	bne	r2,r3,1010a4b8 <_wcrtomb_r+0x64>
1010a4ac:	88000015 	stw	zero,0(r17)
1010a4b0:	00c02284 	movi	r3,138
1010a4b4:	80c00015 	stw	r3,0(r16)
1010a4b8:	dfc00917 	ldw	ra,36(sp)
1010a4bc:	dc800817 	ldw	r18,32(sp)
1010a4c0:	dc400717 	ldw	r17,28(sp)
1010a4c4:	dc000617 	ldw	r16,24(sp)
1010a4c8:	dec00a04 	addi	sp,sp,40
1010a4cc:	f800283a 	ret
1010a4d0:	0105f6c0 	call	10105f6c <__locale_charset>
1010a4d4:	100f883a 	mov	r7,r2
1010a4d8:	dc400015 	stw	r17,0(sp)
1010a4dc:	000d883a 	mov	r6,zero
1010a4e0:	d9400104 	addi	r5,sp,4
1010a4e4:	8009883a 	mov	r4,r16
1010a4e8:	903ee83a 	callr	r18
1010a4ec:	003fed06 	br	1010a4a4 <__alt_data_end+0xfffea4a4>

1010a4f0 <wcrtomb>:
1010a4f0:	defff604 	addi	sp,sp,-40
1010a4f4:	00840474 	movhi	r2,4113
1010a4f8:	dc800615 	stw	r18,24(sp)
1010a4fc:	dc400515 	stw	r17,20(sp)
1010a500:	10892904 	addi	r2,r2,9380
1010a504:	dfc00915 	stw	ra,36(sp)
1010a508:	dd000815 	stw	r20,32(sp)
1010a50c:	dcc00715 	stw	r19,28(sp)
1010a510:	dc000415 	stw	r16,16(sp)
1010a514:	3025883a 	mov	r18,r6
1010a518:	14400017 	ldw	r17,0(r2)
1010a51c:	20001926 	beq	r4,zero,1010a584 <wcrtomb+0x94>
1010a520:	00840474 	movhi	r2,4113
1010a524:	10892d04 	addi	r2,r2,9396
1010a528:	15000017 	ldw	r20,0(r2)
1010a52c:	2021883a 	mov	r16,r4
1010a530:	2827883a 	mov	r19,r5
1010a534:	0105f6c0 	call	10105f6c <__locale_charset>
1010a538:	100f883a 	mov	r7,r2
1010a53c:	dc800015 	stw	r18,0(sp)
1010a540:	980d883a 	mov	r6,r19
1010a544:	800b883a 	mov	r5,r16
1010a548:	8809883a 	mov	r4,r17
1010a54c:	a03ee83a 	callr	r20
1010a550:	00ffffc4 	movi	r3,-1
1010a554:	10c0031e 	bne	r2,r3,1010a564 <wcrtomb+0x74>
1010a558:	90000015 	stw	zero,0(r18)
1010a55c:	00c02284 	movi	r3,138
1010a560:	88c00015 	stw	r3,0(r17)
1010a564:	dfc00917 	ldw	ra,36(sp)
1010a568:	dd000817 	ldw	r20,32(sp)
1010a56c:	dcc00717 	ldw	r19,28(sp)
1010a570:	dc800617 	ldw	r18,24(sp)
1010a574:	dc400517 	ldw	r17,20(sp)
1010a578:	dc000417 	ldw	r16,16(sp)
1010a57c:	dec00a04 	addi	sp,sp,40
1010a580:	f800283a 	ret
1010a584:	00840474 	movhi	r2,4113
1010a588:	10892d04 	addi	r2,r2,9396
1010a58c:	14000017 	ldw	r16,0(r2)
1010a590:	0105f6c0 	call	10105f6c <__locale_charset>
1010a594:	100f883a 	mov	r7,r2
1010a598:	dc800015 	stw	r18,0(sp)
1010a59c:	000d883a 	mov	r6,zero
1010a5a0:	d9400104 	addi	r5,sp,4
1010a5a4:	8809883a 	mov	r4,r17
1010a5a8:	803ee83a 	callr	r16
1010a5ac:	003fe806 	br	1010a550 <__alt_data_end+0xfffea550>

1010a5b0 <__ascii_wctomb>:
1010a5b0:	28000526 	beq	r5,zero,1010a5c8 <__ascii_wctomb+0x18>
1010a5b4:	00803fc4 	movi	r2,255
1010a5b8:	11800536 	bltu	r2,r6,1010a5d0 <__ascii_wctomb+0x20>
1010a5bc:	29800005 	stb	r6,0(r5)
1010a5c0:	00800044 	movi	r2,1
1010a5c4:	f800283a 	ret
1010a5c8:	0005883a 	mov	r2,zero
1010a5cc:	f800283a 	ret
1010a5d0:	00802284 	movi	r2,138
1010a5d4:	20800015 	stw	r2,0(r4)
1010a5d8:	00bfffc4 	movi	r2,-1
1010a5dc:	f800283a 	ret

1010a5e0 <_wctomb_r>:
1010a5e0:	00840474 	movhi	r2,4113
1010a5e4:	defff904 	addi	sp,sp,-28
1010a5e8:	10892d04 	addi	r2,r2,9396
1010a5ec:	dfc00615 	stw	ra,24(sp)
1010a5f0:	dc400515 	stw	r17,20(sp)
1010a5f4:	dc000415 	stw	r16,16(sp)
1010a5f8:	3823883a 	mov	r17,r7
1010a5fc:	14000017 	ldw	r16,0(r2)
1010a600:	d9000115 	stw	r4,4(sp)
1010a604:	d9400215 	stw	r5,8(sp)
1010a608:	d9800315 	stw	r6,12(sp)
1010a60c:	0105f6c0 	call	10105f6c <__locale_charset>
1010a610:	d9800317 	ldw	r6,12(sp)
1010a614:	d9400217 	ldw	r5,8(sp)
1010a618:	d9000117 	ldw	r4,4(sp)
1010a61c:	100f883a 	mov	r7,r2
1010a620:	dc400015 	stw	r17,0(sp)
1010a624:	803ee83a 	callr	r16
1010a628:	dfc00617 	ldw	ra,24(sp)
1010a62c:	dc400517 	ldw	r17,20(sp)
1010a630:	dc000417 	ldw	r16,16(sp)
1010a634:	dec00704 	addi	sp,sp,28
1010a638:	f800283a 	ret

1010a63c <__udivdi3>:
1010a63c:	defff404 	addi	sp,sp,-48
1010a640:	dcc00515 	stw	r19,20(sp)
1010a644:	dc000215 	stw	r16,8(sp)
1010a648:	dfc00b15 	stw	ra,44(sp)
1010a64c:	df000a15 	stw	fp,40(sp)
1010a650:	ddc00915 	stw	r23,36(sp)
1010a654:	dd800815 	stw	r22,32(sp)
1010a658:	dd400715 	stw	r21,28(sp)
1010a65c:	dd000615 	stw	r20,24(sp)
1010a660:	dc800415 	stw	r18,16(sp)
1010a664:	dc400315 	stw	r17,12(sp)
1010a668:	2027883a 	mov	r19,r4
1010a66c:	2821883a 	mov	r16,r5
1010a670:	3800461e 	bne	r7,zero,1010a78c <__udivdi3+0x150>
1010a674:	3023883a 	mov	r17,r6
1010a678:	2025883a 	mov	r18,r4
1010a67c:	2980572e 	bgeu	r5,r6,1010a7dc <__udivdi3+0x1a0>
1010a680:	00bfffd4 	movui	r2,65535
1010a684:	282d883a 	mov	r22,r5
1010a688:	1180b236 	bltu	r2,r6,1010a954 <__udivdi3+0x318>
1010a68c:	00803fc4 	movi	r2,255
1010a690:	1185803a 	cmpltu	r2,r2,r6
1010a694:	100490fa 	slli	r2,r2,3
1010a698:	3086d83a 	srl	r3,r6,r2
1010a69c:	01040474 	movhi	r4,4113
1010a6a0:	21022304 	addi	r4,r4,2188
1010a6a4:	20c7883a 	add	r3,r4,r3
1010a6a8:	18c00003 	ldbu	r3,0(r3)
1010a6ac:	1885883a 	add	r2,r3,r2
1010a6b0:	00c00804 	movi	r3,32
1010a6b4:	1887c83a 	sub	r3,r3,r2
1010a6b8:	18000526 	beq	r3,zero,1010a6d0 <__udivdi3+0x94>
1010a6bc:	80e0983a 	sll	r16,r16,r3
1010a6c0:	9884d83a 	srl	r2,r19,r2
1010a6c4:	30e2983a 	sll	r17,r6,r3
1010a6c8:	98e4983a 	sll	r18,r19,r3
1010a6cc:	142cb03a 	or	r22,r2,r16
1010a6d0:	882ad43a 	srli	r21,r17,16
1010a6d4:	b009883a 	mov	r4,r22
1010a6d8:	8d3fffcc 	andi	r20,r17,65535
1010a6dc:	a80b883a 	mov	r5,r21
1010a6e0:	0100cbc0 	call	10100cbc <__umodsi3>
1010a6e4:	b009883a 	mov	r4,r22
1010a6e8:	a80b883a 	mov	r5,r21
1010a6ec:	1027883a 	mov	r19,r2
1010a6f0:	0100c580 	call	10100c58 <__udivsi3>
1010a6f4:	100b883a 	mov	r5,r2
1010a6f8:	a009883a 	mov	r4,r20
1010a6fc:	102d883a 	mov	r22,r2
1010a700:	0100d140 	call	10100d14 <__mulsi3>
1010a704:	9826943a 	slli	r19,r19,16
1010a708:	9006d43a 	srli	r3,r18,16
1010a70c:	1cc6b03a 	or	r3,r3,r19
1010a710:	1880052e 	bgeu	r3,r2,1010a728 <__udivdi3+0xec>
1010a714:	1c47883a 	add	r3,r3,r17
1010a718:	b13fffc4 	addi	r4,r22,-1
1010a71c:	1c400136 	bltu	r3,r17,1010a724 <__udivdi3+0xe8>
1010a720:	18814236 	bltu	r3,r2,1010ac2c <__udivdi3+0x5f0>
1010a724:	202d883a 	mov	r22,r4
1010a728:	18a1c83a 	sub	r16,r3,r2
1010a72c:	8009883a 	mov	r4,r16
1010a730:	a80b883a 	mov	r5,r21
1010a734:	0100cbc0 	call	10100cbc <__umodsi3>
1010a738:	1027883a 	mov	r19,r2
1010a73c:	8009883a 	mov	r4,r16
1010a740:	a80b883a 	mov	r5,r21
1010a744:	9826943a 	slli	r19,r19,16
1010a748:	0100c580 	call	10100c58 <__udivsi3>
1010a74c:	100b883a 	mov	r5,r2
1010a750:	a009883a 	mov	r4,r20
1010a754:	94bfffcc 	andi	r18,r18,65535
1010a758:	1021883a 	mov	r16,r2
1010a75c:	94e4b03a 	or	r18,r18,r19
1010a760:	0100d140 	call	10100d14 <__mulsi3>
1010a764:	9080052e 	bgeu	r18,r2,1010a77c <__udivdi3+0x140>
1010a768:	8ca5883a 	add	r18,r17,r18
1010a76c:	80ffffc4 	addi	r3,r16,-1
1010a770:	94410c36 	bltu	r18,r17,1010aba4 <__udivdi3+0x568>
1010a774:	90810b2e 	bgeu	r18,r2,1010aba4 <__udivdi3+0x568>
1010a778:	843fff84 	addi	r16,r16,-2
1010a77c:	b004943a 	slli	r2,r22,16
1010a780:	0007883a 	mov	r3,zero
1010a784:	1404b03a 	or	r2,r2,r16
1010a788:	00005e06 	br	1010a904 <__udivdi3+0x2c8>
1010a78c:	29c05b36 	bltu	r5,r7,1010a8fc <__udivdi3+0x2c0>
1010a790:	00bfffd4 	movui	r2,65535
1010a794:	11c0672e 	bgeu	r2,r7,1010a934 <__udivdi3+0x2f8>
1010a798:	00804034 	movhi	r2,256
1010a79c:	10bfffc4 	addi	r2,r2,-1
1010a7a0:	11c10a36 	bltu	r2,r7,1010abcc <__udivdi3+0x590>
1010a7a4:	00800404 	movi	r2,16
1010a7a8:	3886d83a 	srl	r3,r7,r2
1010a7ac:	01040474 	movhi	r4,4113
1010a7b0:	21022304 	addi	r4,r4,2188
1010a7b4:	20c7883a 	add	r3,r4,r3
1010a7b8:	18c00003 	ldbu	r3,0(r3)
1010a7bc:	05c00804 	movi	r23,32
1010a7c0:	1885883a 	add	r2,r3,r2
1010a7c4:	b8afc83a 	sub	r23,r23,r2
1010a7c8:	b800671e 	bne	r23,zero,1010a968 <__udivdi3+0x32c>
1010a7cc:	3c010536 	bltu	r7,r16,1010abe4 <__udivdi3+0x5a8>
1010a7d0:	9985403a 	cmpgeu	r2,r19,r6
1010a7d4:	0007883a 	mov	r3,zero
1010a7d8:	00004a06 	br	1010a904 <__udivdi3+0x2c8>
1010a7dc:	3000041e 	bne	r6,zero,1010a7f0 <__udivdi3+0x1b4>
1010a7e0:	000b883a 	mov	r5,zero
1010a7e4:	01000044 	movi	r4,1
1010a7e8:	0100c580 	call	10100c58 <__udivsi3>
1010a7ec:	1023883a 	mov	r17,r2
1010a7f0:	00bfffd4 	movui	r2,65535
1010a7f4:	1440532e 	bgeu	r2,r17,1010a944 <__udivdi3+0x308>
1010a7f8:	00804034 	movhi	r2,256
1010a7fc:	10bfffc4 	addi	r2,r2,-1
1010a800:	1440f436 	bltu	r2,r17,1010abd4 <__udivdi3+0x598>
1010a804:	00800404 	movi	r2,16
1010a808:	8886d83a 	srl	r3,r17,r2
1010a80c:	01040474 	movhi	r4,4113
1010a810:	21022304 	addi	r4,r4,2188
1010a814:	20c7883a 	add	r3,r4,r3
1010a818:	18c00003 	ldbu	r3,0(r3)
1010a81c:	1885883a 	add	r2,r3,r2
1010a820:	00c00804 	movi	r3,32
1010a824:	1887c83a 	sub	r3,r3,r2
1010a828:	1800a51e 	bne	r3,zero,1010aac0 <__udivdi3+0x484>
1010a82c:	882ad43a 	srli	r21,r17,16
1010a830:	8461c83a 	sub	r16,r16,r17
1010a834:	8d3fffcc 	andi	r20,r17,65535
1010a838:	00c00044 	movi	r3,1
1010a83c:	a80b883a 	mov	r5,r21
1010a840:	8009883a 	mov	r4,r16
1010a844:	d8c00115 	stw	r3,4(sp)
1010a848:	0100cbc0 	call	10100cbc <__umodsi3>
1010a84c:	a80b883a 	mov	r5,r21
1010a850:	8009883a 	mov	r4,r16
1010a854:	1027883a 	mov	r19,r2
1010a858:	0100c580 	call	10100c58 <__udivsi3>
1010a85c:	a00b883a 	mov	r5,r20
1010a860:	1009883a 	mov	r4,r2
1010a864:	102d883a 	mov	r22,r2
1010a868:	0100d140 	call	10100d14 <__mulsi3>
1010a86c:	9826943a 	slli	r19,r19,16
1010a870:	900ed43a 	srli	r7,r18,16
1010a874:	d8c00117 	ldw	r3,4(sp)
1010a878:	3cceb03a 	or	r7,r7,r19
1010a87c:	3880052e 	bgeu	r7,r2,1010a894 <__udivdi3+0x258>
1010a880:	3c4f883a 	add	r7,r7,r17
1010a884:	b13fffc4 	addi	r4,r22,-1
1010a888:	3c400136 	bltu	r7,r17,1010a890 <__udivdi3+0x254>
1010a88c:	3880e436 	bltu	r7,r2,1010ac20 <__udivdi3+0x5e4>
1010a890:	202d883a 	mov	r22,r4
1010a894:	38a1c83a 	sub	r16,r7,r2
1010a898:	8009883a 	mov	r4,r16
1010a89c:	a80b883a 	mov	r5,r21
1010a8a0:	d8c00115 	stw	r3,4(sp)
1010a8a4:	0100cbc0 	call	10100cbc <__umodsi3>
1010a8a8:	1027883a 	mov	r19,r2
1010a8ac:	8009883a 	mov	r4,r16
1010a8b0:	a80b883a 	mov	r5,r21
1010a8b4:	9826943a 	slli	r19,r19,16
1010a8b8:	0100c580 	call	10100c58 <__udivsi3>
1010a8bc:	a00b883a 	mov	r5,r20
1010a8c0:	1009883a 	mov	r4,r2
1010a8c4:	94bfffcc 	andi	r18,r18,65535
1010a8c8:	1021883a 	mov	r16,r2
1010a8cc:	94e4b03a 	or	r18,r18,r19
1010a8d0:	0100d140 	call	10100d14 <__mulsi3>
1010a8d4:	d8c00117 	ldw	r3,4(sp)
1010a8d8:	9080052e 	bgeu	r18,r2,1010a8f0 <__udivdi3+0x2b4>
1010a8dc:	8ca5883a 	add	r18,r17,r18
1010a8e0:	813fffc4 	addi	r4,r16,-1
1010a8e4:	9440ad36 	bltu	r18,r17,1010ab9c <__udivdi3+0x560>
1010a8e8:	9080ac2e 	bgeu	r18,r2,1010ab9c <__udivdi3+0x560>
1010a8ec:	843fff84 	addi	r16,r16,-2
1010a8f0:	b004943a 	slli	r2,r22,16
1010a8f4:	1404b03a 	or	r2,r2,r16
1010a8f8:	00000206 	br	1010a904 <__udivdi3+0x2c8>
1010a8fc:	0007883a 	mov	r3,zero
1010a900:	0005883a 	mov	r2,zero
1010a904:	dfc00b17 	ldw	ra,44(sp)
1010a908:	df000a17 	ldw	fp,40(sp)
1010a90c:	ddc00917 	ldw	r23,36(sp)
1010a910:	dd800817 	ldw	r22,32(sp)
1010a914:	dd400717 	ldw	r21,28(sp)
1010a918:	dd000617 	ldw	r20,24(sp)
1010a91c:	dcc00517 	ldw	r19,20(sp)
1010a920:	dc800417 	ldw	r18,16(sp)
1010a924:	dc400317 	ldw	r17,12(sp)
1010a928:	dc000217 	ldw	r16,8(sp)
1010a92c:	dec00c04 	addi	sp,sp,48
1010a930:	f800283a 	ret
1010a934:	00803fc4 	movi	r2,255
1010a938:	11c5803a 	cmpltu	r2,r2,r7
1010a93c:	100490fa 	slli	r2,r2,3
1010a940:	003f9906 	br	1010a7a8 <__alt_data_end+0xfffea7a8>
1010a944:	00803fc4 	movi	r2,255
1010a948:	1445803a 	cmpltu	r2,r2,r17
1010a94c:	100490fa 	slli	r2,r2,3
1010a950:	003fad06 	br	1010a808 <__alt_data_end+0xfffea808>
1010a954:	00804034 	movhi	r2,256
1010a958:	10bfffc4 	addi	r2,r2,-1
1010a95c:	11809f36 	bltu	r2,r6,1010abdc <__udivdi3+0x5a0>
1010a960:	00800404 	movi	r2,16
1010a964:	003f4c06 	br	1010a698 <__alt_data_end+0xfffea698>
1010a968:	3dce983a 	sll	r7,r7,r23
1010a96c:	30b8d83a 	srl	fp,r6,r2
1010a970:	80a2d83a 	srl	r17,r16,r2
1010a974:	35cc983a 	sll	r6,r6,r23
1010a978:	3f38b03a 	or	fp,r7,fp
1010a97c:	e024d43a 	srli	r18,fp,16
1010a980:	9884d83a 	srl	r2,r19,r2
1010a984:	85e0983a 	sll	r16,r16,r23
1010a988:	8809883a 	mov	r4,r17
1010a98c:	900b883a 	mov	r5,r18
1010a990:	d9800015 	stw	r6,0(sp)
1010a994:	1420b03a 	or	r16,r2,r16
1010a998:	0100cbc0 	call	10100cbc <__umodsi3>
1010a99c:	900b883a 	mov	r5,r18
1010a9a0:	8809883a 	mov	r4,r17
1010a9a4:	1029883a 	mov	r20,r2
1010a9a8:	e5bfffcc 	andi	r22,fp,65535
1010a9ac:	0100c580 	call	10100c58 <__udivsi3>
1010a9b0:	100b883a 	mov	r5,r2
1010a9b4:	b009883a 	mov	r4,r22
1010a9b8:	102b883a 	mov	r21,r2
1010a9bc:	0100d140 	call	10100d14 <__mulsi3>
1010a9c0:	a028943a 	slli	r20,r20,16
1010a9c4:	8006d43a 	srli	r3,r16,16
1010a9c8:	1d06b03a 	or	r3,r3,r20
1010a9cc:	1880042e 	bgeu	r3,r2,1010a9e0 <__udivdi3+0x3a4>
1010a9d0:	1f07883a 	add	r3,r3,fp
1010a9d4:	a93fffc4 	addi	r4,r21,-1
1010a9d8:	1f00892e 	bgeu	r3,fp,1010ac00 <__udivdi3+0x5c4>
1010a9dc:	202b883a 	mov	r21,r4
1010a9e0:	18a3c83a 	sub	r17,r3,r2
1010a9e4:	8809883a 	mov	r4,r17
1010a9e8:	900b883a 	mov	r5,r18
1010a9ec:	0100cbc0 	call	10100cbc <__umodsi3>
1010a9f0:	1029883a 	mov	r20,r2
1010a9f4:	8809883a 	mov	r4,r17
1010a9f8:	900b883a 	mov	r5,r18
1010a9fc:	a028943a 	slli	r20,r20,16
1010aa00:	0100c580 	call	10100c58 <__udivsi3>
1010aa04:	100b883a 	mov	r5,r2
1010aa08:	b009883a 	mov	r4,r22
1010aa0c:	843fffcc 	andi	r16,r16,65535
1010aa10:	1023883a 	mov	r17,r2
1010aa14:	8520b03a 	or	r16,r16,r20
1010aa18:	0100d140 	call	10100d14 <__mulsi3>
1010aa1c:	8080042e 	bgeu	r16,r2,1010aa30 <__udivdi3+0x3f4>
1010aa20:	8721883a 	add	r16,r16,fp
1010aa24:	88ffffc4 	addi	r3,r17,-1
1010aa28:	8700712e 	bgeu	r16,fp,1010abf0 <__udivdi3+0x5b4>
1010aa2c:	1823883a 	mov	r17,r3
1010aa30:	a80e943a 	slli	r7,r21,16
1010aa34:	d8c00017 	ldw	r3,0(sp)
1010aa38:	80a1c83a 	sub	r16,r16,r2
1010aa3c:	3c64b03a 	or	r18,r7,r17
1010aa40:	1d3fffcc 	andi	r20,r3,65535
1010aa44:	9022d43a 	srli	r17,r18,16
1010aa48:	95bfffcc 	andi	r22,r18,65535
1010aa4c:	a00b883a 	mov	r5,r20
1010aa50:	b009883a 	mov	r4,r22
1010aa54:	182ad43a 	srli	r21,r3,16
1010aa58:	0100d140 	call	10100d14 <__mulsi3>
1010aa5c:	a00b883a 	mov	r5,r20
1010aa60:	8809883a 	mov	r4,r17
1010aa64:	1039883a 	mov	fp,r2
1010aa68:	0100d140 	call	10100d14 <__mulsi3>
1010aa6c:	8809883a 	mov	r4,r17
1010aa70:	a80b883a 	mov	r5,r21
1010aa74:	1029883a 	mov	r20,r2
1010aa78:	0100d140 	call	10100d14 <__mulsi3>
1010aa7c:	a80b883a 	mov	r5,r21
1010aa80:	b009883a 	mov	r4,r22
1010aa84:	1023883a 	mov	r17,r2
1010aa88:	0100d140 	call	10100d14 <__mulsi3>
1010aa8c:	e006d43a 	srli	r3,fp,16
1010aa90:	1505883a 	add	r2,r2,r20
1010aa94:	1887883a 	add	r3,r3,r2
1010aa98:	1d00022e 	bgeu	r3,r20,1010aaa4 <__udivdi3+0x468>
1010aa9c:	00800074 	movhi	r2,1
1010aaa0:	88a3883a 	add	r17,r17,r2
1010aaa4:	1804d43a 	srli	r2,r3,16
1010aaa8:	1463883a 	add	r17,r2,r17
1010aaac:	84404436 	bltu	r16,r17,1010abc0 <__udivdi3+0x584>
1010aab0:	84403e26 	beq	r16,r17,1010abac <__udivdi3+0x570>
1010aab4:	9005883a 	mov	r2,r18
1010aab8:	0007883a 	mov	r3,zero
1010aabc:	003f9106 	br	1010a904 <__alt_data_end+0xfffea904>
1010aac0:	88e2983a 	sll	r17,r17,r3
1010aac4:	80aed83a 	srl	r23,r16,r2
1010aac8:	80e0983a 	sll	r16,r16,r3
1010aacc:	882ad43a 	srli	r21,r17,16
1010aad0:	9884d83a 	srl	r2,r19,r2
1010aad4:	b809883a 	mov	r4,r23
1010aad8:	a80b883a 	mov	r5,r21
1010aadc:	98e4983a 	sll	r18,r19,r3
1010aae0:	142cb03a 	or	r22,r2,r16
1010aae4:	0100cbc0 	call	10100cbc <__umodsi3>
1010aae8:	b809883a 	mov	r4,r23
1010aaec:	a80b883a 	mov	r5,r21
1010aaf0:	1027883a 	mov	r19,r2
1010aaf4:	8d3fffcc 	andi	r20,r17,65535
1010aaf8:	0100c580 	call	10100c58 <__udivsi3>
1010aafc:	a009883a 	mov	r4,r20
1010ab00:	100b883a 	mov	r5,r2
1010ab04:	102f883a 	mov	r23,r2
1010ab08:	0100d140 	call	10100d14 <__mulsi3>
1010ab0c:	9826943a 	slli	r19,r19,16
1010ab10:	b008d43a 	srli	r4,r22,16
1010ab14:	24c8b03a 	or	r4,r4,r19
1010ab18:	2080062e 	bgeu	r4,r2,1010ab34 <__udivdi3+0x4f8>
1010ab1c:	2449883a 	add	r4,r4,r17
1010ab20:	b8ffffc4 	addi	r3,r23,-1
1010ab24:	24403c36 	bltu	r4,r17,1010ac18 <__udivdi3+0x5dc>
1010ab28:	20803b2e 	bgeu	r4,r2,1010ac18 <__udivdi3+0x5dc>
1010ab2c:	bdffff84 	addi	r23,r23,-2
1010ab30:	2449883a 	add	r4,r4,r17
1010ab34:	20a1c83a 	sub	r16,r4,r2
1010ab38:	a80b883a 	mov	r5,r21
1010ab3c:	8009883a 	mov	r4,r16
1010ab40:	0100cbc0 	call	10100cbc <__umodsi3>
1010ab44:	a80b883a 	mov	r5,r21
1010ab48:	8009883a 	mov	r4,r16
1010ab4c:	1027883a 	mov	r19,r2
1010ab50:	0100c580 	call	10100c58 <__udivsi3>
1010ab54:	a009883a 	mov	r4,r20
1010ab58:	100b883a 	mov	r5,r2
1010ab5c:	9826943a 	slli	r19,r19,16
1010ab60:	1039883a 	mov	fp,r2
1010ab64:	0100d140 	call	10100d14 <__mulsi3>
1010ab68:	b13fffcc 	andi	r4,r22,65535
1010ab6c:	24c8b03a 	or	r4,r4,r19
1010ab70:	2080062e 	bgeu	r4,r2,1010ab8c <__udivdi3+0x550>
1010ab74:	2449883a 	add	r4,r4,r17
1010ab78:	e0ffffc4 	addi	r3,fp,-1
1010ab7c:	24402436 	bltu	r4,r17,1010ac10 <__udivdi3+0x5d4>
1010ab80:	2080232e 	bgeu	r4,r2,1010ac10 <__udivdi3+0x5d4>
1010ab84:	e73fff84 	addi	fp,fp,-2
1010ab88:	2449883a 	add	r4,r4,r17
1010ab8c:	b82e943a 	slli	r23,r23,16
1010ab90:	20a1c83a 	sub	r16,r4,r2
1010ab94:	bf06b03a 	or	r3,r23,fp
1010ab98:	003f2806 	br	1010a83c <__alt_data_end+0xfffea83c>
1010ab9c:	2021883a 	mov	r16,r4
1010aba0:	003f5306 	br	1010a8f0 <__alt_data_end+0xfffea8f0>
1010aba4:	1821883a 	mov	r16,r3
1010aba8:	003ef406 	br	1010a77c <__alt_data_end+0xfffea77c>
1010abac:	1806943a 	slli	r3,r3,16
1010abb0:	9de6983a 	sll	r19,r19,r23
1010abb4:	e73fffcc 	andi	fp,fp,65535
1010abb8:	1f07883a 	add	r3,r3,fp
1010abbc:	98ffbd2e 	bgeu	r19,r3,1010aab4 <__alt_data_end+0xfffeaab4>
1010abc0:	90bfffc4 	addi	r2,r18,-1
1010abc4:	0007883a 	mov	r3,zero
1010abc8:	003f4e06 	br	1010a904 <__alt_data_end+0xfffea904>
1010abcc:	00800604 	movi	r2,24
1010abd0:	003ef506 	br	1010a7a8 <__alt_data_end+0xfffea7a8>
1010abd4:	00800604 	movi	r2,24
1010abd8:	003f0b06 	br	1010a808 <__alt_data_end+0xfffea808>
1010abdc:	00800604 	movi	r2,24
1010abe0:	003ead06 	br	1010a698 <__alt_data_end+0xfffea698>
1010abe4:	0007883a 	mov	r3,zero
1010abe8:	00800044 	movi	r2,1
1010abec:	003f4506 	br	1010a904 <__alt_data_end+0xfffea904>
1010abf0:	80bf8e2e 	bgeu	r16,r2,1010aa2c <__alt_data_end+0xfffeaa2c>
1010abf4:	8c7fff84 	addi	r17,r17,-2
1010abf8:	8721883a 	add	r16,r16,fp
1010abfc:	003f8c06 	br	1010aa30 <__alt_data_end+0xfffeaa30>
1010ac00:	18bf762e 	bgeu	r3,r2,1010a9dc <__alt_data_end+0xfffea9dc>
1010ac04:	ad7fff84 	addi	r21,r21,-2
1010ac08:	1f07883a 	add	r3,r3,fp
1010ac0c:	003f7406 	br	1010a9e0 <__alt_data_end+0xfffea9e0>
1010ac10:	1839883a 	mov	fp,r3
1010ac14:	003fdd06 	br	1010ab8c <__alt_data_end+0xfffeab8c>
1010ac18:	182f883a 	mov	r23,r3
1010ac1c:	003fc506 	br	1010ab34 <__alt_data_end+0xfffeab34>
1010ac20:	b5bfff84 	addi	r22,r22,-2
1010ac24:	3c4f883a 	add	r7,r7,r17
1010ac28:	003f1a06 	br	1010a894 <__alt_data_end+0xfffea894>
1010ac2c:	b5bfff84 	addi	r22,r22,-2
1010ac30:	1c47883a 	add	r3,r3,r17
1010ac34:	003ebc06 	br	1010a728 <__alt_data_end+0xfffea728>

1010ac38 <__umoddi3>:
1010ac38:	defff304 	addi	sp,sp,-52
1010ac3c:	df000b15 	stw	fp,44(sp)
1010ac40:	dc400415 	stw	r17,16(sp)
1010ac44:	dc000315 	stw	r16,12(sp)
1010ac48:	dfc00c15 	stw	ra,48(sp)
1010ac4c:	ddc00a15 	stw	r23,40(sp)
1010ac50:	dd800915 	stw	r22,36(sp)
1010ac54:	dd400815 	stw	r21,32(sp)
1010ac58:	dd000715 	stw	r20,28(sp)
1010ac5c:	dcc00615 	stw	r19,24(sp)
1010ac60:	dc800515 	stw	r18,20(sp)
1010ac64:	2021883a 	mov	r16,r4
1010ac68:	2823883a 	mov	r17,r5
1010ac6c:	2839883a 	mov	fp,r5
1010ac70:	3800401e 	bne	r7,zero,1010ad74 <__umoddi3+0x13c>
1010ac74:	3027883a 	mov	r19,r6
1010ac78:	2029883a 	mov	r20,r4
1010ac7c:	2980552e 	bgeu	r5,r6,1010add4 <__umoddi3+0x19c>
1010ac80:	00bfffd4 	movui	r2,65535
1010ac84:	1180a236 	bltu	r2,r6,1010af10 <__umoddi3+0x2d8>
1010ac88:	01003fc4 	movi	r4,255
1010ac8c:	2189803a 	cmpltu	r4,r4,r6
1010ac90:	200890fa 	slli	r4,r4,3
1010ac94:	3104d83a 	srl	r2,r6,r4
1010ac98:	00c40474 	movhi	r3,4113
1010ac9c:	18c22304 	addi	r3,r3,2188
1010aca0:	1885883a 	add	r2,r3,r2
1010aca4:	10c00003 	ldbu	r3,0(r2)
1010aca8:	00800804 	movi	r2,32
1010acac:	1909883a 	add	r4,r3,r4
1010acb0:	1125c83a 	sub	r18,r2,r4
1010acb4:	90000526 	beq	r18,zero,1010accc <__umoddi3+0x94>
1010acb8:	8ca2983a 	sll	r17,r17,r18
1010acbc:	8108d83a 	srl	r4,r16,r4
1010acc0:	34a6983a 	sll	r19,r6,r18
1010acc4:	84a8983a 	sll	r20,r16,r18
1010acc8:	2478b03a 	or	fp,r4,r17
1010accc:	982cd43a 	srli	r22,r19,16
1010acd0:	e009883a 	mov	r4,fp
1010acd4:	9dffffcc 	andi	r23,r19,65535
1010acd8:	b00b883a 	mov	r5,r22
1010acdc:	0100cbc0 	call	10100cbc <__umodsi3>
1010ace0:	b00b883a 	mov	r5,r22
1010ace4:	e009883a 	mov	r4,fp
1010ace8:	102b883a 	mov	r21,r2
1010acec:	0100c580 	call	10100c58 <__udivsi3>
1010acf0:	100b883a 	mov	r5,r2
1010acf4:	b809883a 	mov	r4,r23
1010acf8:	0100d140 	call	10100d14 <__mulsi3>
1010acfc:	a82a943a 	slli	r21,r21,16
1010ad00:	a006d43a 	srli	r3,r20,16
1010ad04:	1d46b03a 	or	r3,r3,r21
1010ad08:	1880032e 	bgeu	r3,r2,1010ad18 <__umoddi3+0xe0>
1010ad0c:	1cc7883a 	add	r3,r3,r19
1010ad10:	1cc00136 	bltu	r3,r19,1010ad18 <__umoddi3+0xe0>
1010ad14:	18813136 	bltu	r3,r2,1010b1dc <__umoddi3+0x5a4>
1010ad18:	18a1c83a 	sub	r16,r3,r2
1010ad1c:	b00b883a 	mov	r5,r22
1010ad20:	8009883a 	mov	r4,r16
1010ad24:	0100cbc0 	call	10100cbc <__umodsi3>
1010ad28:	b00b883a 	mov	r5,r22
1010ad2c:	8009883a 	mov	r4,r16
1010ad30:	1023883a 	mov	r17,r2
1010ad34:	0100c580 	call	10100c58 <__udivsi3>
1010ad38:	100b883a 	mov	r5,r2
1010ad3c:	b809883a 	mov	r4,r23
1010ad40:	8822943a 	slli	r17,r17,16
1010ad44:	0100d140 	call	10100d14 <__mulsi3>
1010ad48:	a0ffffcc 	andi	r3,r20,65535
1010ad4c:	1c46b03a 	or	r3,r3,r17
1010ad50:	1880042e 	bgeu	r3,r2,1010ad64 <__umoddi3+0x12c>
1010ad54:	1cc7883a 	add	r3,r3,r19
1010ad58:	1cc00236 	bltu	r3,r19,1010ad64 <__umoddi3+0x12c>
1010ad5c:	1880012e 	bgeu	r3,r2,1010ad64 <__umoddi3+0x12c>
1010ad60:	1cc7883a 	add	r3,r3,r19
1010ad64:	1885c83a 	sub	r2,r3,r2
1010ad68:	1484d83a 	srl	r2,r2,r18
1010ad6c:	0007883a 	mov	r3,zero
1010ad70:	00005306 	br	1010aec0 <__umoddi3+0x288>
1010ad74:	29c05036 	bltu	r5,r7,1010aeb8 <__umoddi3+0x280>
1010ad78:	00bfffd4 	movui	r2,65535
1010ad7c:	11c05c2e 	bgeu	r2,r7,1010aef0 <__umoddi3+0x2b8>
1010ad80:	00804034 	movhi	r2,256
1010ad84:	10bfffc4 	addi	r2,r2,-1
1010ad88:	11c10636 	bltu	r2,r7,1010b1a4 <__umoddi3+0x56c>
1010ad8c:	01000404 	movi	r4,16
1010ad90:	3904d83a 	srl	r2,r7,r4
1010ad94:	00c40474 	movhi	r3,4113
1010ad98:	18c22304 	addi	r3,r3,2188
1010ad9c:	1885883a 	add	r2,r3,r2
1010ada0:	14c00003 	ldbu	r19,0(r2)
1010ada4:	00c00804 	movi	r3,32
1010ada8:	9927883a 	add	r19,r19,r4
1010adac:	1ce9c83a 	sub	r20,r3,r19
1010adb0:	a0005c1e 	bne	r20,zero,1010af24 <__umoddi3+0x2ec>
1010adb4:	3c400136 	bltu	r7,r17,1010adbc <__umoddi3+0x184>
1010adb8:	81810a36 	bltu	r16,r6,1010b1e4 <__umoddi3+0x5ac>
1010adbc:	8185c83a 	sub	r2,r16,r6
1010adc0:	89e3c83a 	sub	r17,r17,r7
1010adc4:	8089803a 	cmpltu	r4,r16,r2
1010adc8:	8939c83a 	sub	fp,r17,r4
1010adcc:	e007883a 	mov	r3,fp
1010add0:	00003b06 	br	1010aec0 <__umoddi3+0x288>
1010add4:	3000041e 	bne	r6,zero,1010ade8 <__umoddi3+0x1b0>
1010add8:	000b883a 	mov	r5,zero
1010addc:	01000044 	movi	r4,1
1010ade0:	0100c580 	call	10100c58 <__udivsi3>
1010ade4:	1027883a 	mov	r19,r2
1010ade8:	00bfffd4 	movui	r2,65535
1010adec:	14c0442e 	bgeu	r2,r19,1010af00 <__umoddi3+0x2c8>
1010adf0:	00804034 	movhi	r2,256
1010adf4:	10bfffc4 	addi	r2,r2,-1
1010adf8:	14c0ec36 	bltu	r2,r19,1010b1ac <__umoddi3+0x574>
1010adfc:	00800404 	movi	r2,16
1010ae00:	9886d83a 	srl	r3,r19,r2
1010ae04:	01040474 	movhi	r4,4113
1010ae08:	21022304 	addi	r4,r4,2188
1010ae0c:	20c7883a 	add	r3,r4,r3
1010ae10:	18c00003 	ldbu	r3,0(r3)
1010ae14:	1887883a 	add	r3,r3,r2
1010ae18:	00800804 	movi	r2,32
1010ae1c:	10e5c83a 	sub	r18,r2,r3
1010ae20:	9000ab1e 	bne	r18,zero,1010b0d0 <__umoddi3+0x498>
1010ae24:	982cd43a 	srli	r22,r19,16
1010ae28:	8ce3c83a 	sub	r17,r17,r19
1010ae2c:	9dffffcc 	andi	r23,r19,65535
1010ae30:	b00b883a 	mov	r5,r22
1010ae34:	8809883a 	mov	r4,r17
1010ae38:	0100cbc0 	call	10100cbc <__umodsi3>
1010ae3c:	b00b883a 	mov	r5,r22
1010ae40:	8809883a 	mov	r4,r17
1010ae44:	102b883a 	mov	r21,r2
1010ae48:	0100c580 	call	10100c58 <__udivsi3>
1010ae4c:	b80b883a 	mov	r5,r23
1010ae50:	1009883a 	mov	r4,r2
1010ae54:	0100d140 	call	10100d14 <__mulsi3>
1010ae58:	a82a943a 	slli	r21,r21,16
1010ae5c:	a006d43a 	srli	r3,r20,16
1010ae60:	1d46b03a 	or	r3,r3,r21
1010ae64:	1880042e 	bgeu	r3,r2,1010ae78 <__umoddi3+0x240>
1010ae68:	1cc7883a 	add	r3,r3,r19
1010ae6c:	1cc00236 	bltu	r3,r19,1010ae78 <__umoddi3+0x240>
1010ae70:	1880012e 	bgeu	r3,r2,1010ae78 <__umoddi3+0x240>
1010ae74:	1cc7883a 	add	r3,r3,r19
1010ae78:	18a1c83a 	sub	r16,r3,r2
1010ae7c:	b00b883a 	mov	r5,r22
1010ae80:	8009883a 	mov	r4,r16
1010ae84:	0100cbc0 	call	10100cbc <__umodsi3>
1010ae88:	1023883a 	mov	r17,r2
1010ae8c:	b00b883a 	mov	r5,r22
1010ae90:	8009883a 	mov	r4,r16
1010ae94:	0100c580 	call	10100c58 <__udivsi3>
1010ae98:	8822943a 	slli	r17,r17,16
1010ae9c:	b80b883a 	mov	r5,r23
1010aea0:	1009883a 	mov	r4,r2
1010aea4:	0100d140 	call	10100d14 <__mulsi3>
1010aea8:	a53fffcc 	andi	r20,r20,65535
1010aeac:	a446b03a 	or	r3,r20,r17
1010aeb0:	18bfac2e 	bgeu	r3,r2,1010ad64 <__alt_data_end+0xfffead64>
1010aeb4:	003fa706 	br	1010ad54 <__alt_data_end+0xfffead54>
1010aeb8:	2005883a 	mov	r2,r4
1010aebc:	2807883a 	mov	r3,r5
1010aec0:	dfc00c17 	ldw	ra,48(sp)
1010aec4:	df000b17 	ldw	fp,44(sp)
1010aec8:	ddc00a17 	ldw	r23,40(sp)
1010aecc:	dd800917 	ldw	r22,36(sp)
1010aed0:	dd400817 	ldw	r21,32(sp)
1010aed4:	dd000717 	ldw	r20,28(sp)
1010aed8:	dcc00617 	ldw	r19,24(sp)
1010aedc:	dc800517 	ldw	r18,20(sp)
1010aee0:	dc400417 	ldw	r17,16(sp)
1010aee4:	dc000317 	ldw	r16,12(sp)
1010aee8:	dec00d04 	addi	sp,sp,52
1010aeec:	f800283a 	ret
1010aef0:	04c03fc4 	movi	r19,255
1010aef4:	99c9803a 	cmpltu	r4,r19,r7
1010aef8:	200890fa 	slli	r4,r4,3
1010aefc:	003fa406 	br	1010ad90 <__alt_data_end+0xfffead90>
1010af00:	00803fc4 	movi	r2,255
1010af04:	14c5803a 	cmpltu	r2,r2,r19
1010af08:	100490fa 	slli	r2,r2,3
1010af0c:	003fbc06 	br	1010ae00 <__alt_data_end+0xfffeae00>
1010af10:	00804034 	movhi	r2,256
1010af14:	10bfffc4 	addi	r2,r2,-1
1010af18:	1180a636 	bltu	r2,r6,1010b1b4 <__umoddi3+0x57c>
1010af1c:	01000404 	movi	r4,16
1010af20:	003f5c06 	br	1010ac94 <__alt_data_end+0xfffeac94>
1010af24:	3d0e983a 	sll	r7,r7,r20
1010af28:	34ead83a 	srl	r21,r6,r19
1010af2c:	8cc6d83a 	srl	r3,r17,r19
1010af30:	8d10983a 	sll	r8,r17,r20
1010af34:	3d6ab03a 	or	r21,r7,r21
1010af38:	a82cd43a 	srli	r22,r21,16
1010af3c:	84e2d83a 	srl	r17,r16,r19
1010af40:	1809883a 	mov	r4,r3
1010af44:	b00b883a 	mov	r5,r22
1010af48:	8a22b03a 	or	r17,r17,r8
1010af4c:	3524983a 	sll	r18,r6,r20
1010af50:	dc400015 	stw	r17,0(sp)
1010af54:	d8c00115 	stw	r3,4(sp)
1010af58:	0100cbc0 	call	10100cbc <__umodsi3>
1010af5c:	d8c00117 	ldw	r3,4(sp)
1010af60:	b00b883a 	mov	r5,r22
1010af64:	1039883a 	mov	fp,r2
1010af68:	1809883a 	mov	r4,r3
1010af6c:	0100c580 	call	10100c58 <__udivsi3>
1010af70:	adffffcc 	andi	r23,r21,65535
1010af74:	100b883a 	mov	r5,r2
1010af78:	b809883a 	mov	r4,r23
1010af7c:	1023883a 	mov	r17,r2
1010af80:	0100d140 	call	10100d14 <__mulsi3>
1010af84:	d9400017 	ldw	r5,0(sp)
1010af88:	e008943a 	slli	r4,fp,16
1010af8c:	8520983a 	sll	r16,r16,r20
1010af90:	2806d43a 	srli	r3,r5,16
1010af94:	1906b03a 	or	r3,r3,r4
1010af98:	1880042e 	bgeu	r3,r2,1010afac <__umoddi3+0x374>
1010af9c:	1d47883a 	add	r3,r3,r21
1010afa0:	893fffc4 	addi	r4,r17,-1
1010afa4:	1d40892e 	bgeu	r3,r21,1010b1cc <__umoddi3+0x594>
1010afa8:	2023883a 	mov	r17,r4
1010afac:	18b9c83a 	sub	fp,r3,r2
1010afb0:	b00b883a 	mov	r5,r22
1010afb4:	e009883a 	mov	r4,fp
1010afb8:	0100cbc0 	call	10100cbc <__umodsi3>
1010afbc:	b00b883a 	mov	r5,r22
1010afc0:	e009883a 	mov	r4,fp
1010afc4:	d8800215 	stw	r2,8(sp)
1010afc8:	0100c580 	call	10100c58 <__udivsi3>
1010afcc:	100b883a 	mov	r5,r2
1010afd0:	b809883a 	mov	r4,r23
1010afd4:	102d883a 	mov	r22,r2
1010afd8:	0100d140 	call	10100d14 <__mulsi3>
1010afdc:	d9800217 	ldw	r6,8(sp)
1010afe0:	d8c00017 	ldw	r3,0(sp)
1010afe4:	300c943a 	slli	r6,r6,16
1010afe8:	1a3fffcc 	andi	r8,r3,65535
1010afec:	4190b03a 	or	r8,r8,r6
1010aff0:	4080042e 	bgeu	r8,r2,1010b004 <__umoddi3+0x3cc>
1010aff4:	4551883a 	add	r8,r8,r21
1010aff8:	b0ffffc4 	addi	r3,r22,-1
1010affc:	45406f2e 	bgeu	r8,r21,1010b1bc <__umoddi3+0x584>
1010b000:	182d883a 	mov	r22,r3
1010b004:	880e943a 	slli	r7,r17,16
1010b008:	9006d43a 	srli	r3,r18,16
1010b00c:	91bfffcc 	andi	r6,r18,65535
1010b010:	3dacb03a 	or	r22,r7,r22
1010b014:	b02ed43a 	srli	r23,r22,16
1010b018:	b5bfffcc 	andi	r22,r22,65535
1010b01c:	300b883a 	mov	r5,r6
1010b020:	b009883a 	mov	r4,r22
1010b024:	40a3c83a 	sub	r17,r8,r2
1010b028:	d8c00115 	stw	r3,4(sp)
1010b02c:	d9800215 	stw	r6,8(sp)
1010b030:	0100d140 	call	10100d14 <__mulsi3>
1010b034:	d9800217 	ldw	r6,8(sp)
1010b038:	b809883a 	mov	r4,r23
1010b03c:	1039883a 	mov	fp,r2
1010b040:	300b883a 	mov	r5,r6
1010b044:	0100d140 	call	10100d14 <__mulsi3>
1010b048:	d8c00117 	ldw	r3,4(sp)
1010b04c:	b809883a 	mov	r4,r23
1010b050:	d8800215 	stw	r2,8(sp)
1010b054:	180b883a 	mov	r5,r3
1010b058:	0100d140 	call	10100d14 <__mulsi3>
1010b05c:	d8c00117 	ldw	r3,4(sp)
1010b060:	b009883a 	mov	r4,r22
1010b064:	102f883a 	mov	r23,r2
1010b068:	180b883a 	mov	r5,r3
1010b06c:	0100d140 	call	10100d14 <__mulsi3>
1010b070:	d9800217 	ldw	r6,8(sp)
1010b074:	e006d43a 	srli	r3,fp,16
1010b078:	1185883a 	add	r2,r2,r6
1010b07c:	1885883a 	add	r2,r3,r2
1010b080:	1180022e 	bgeu	r2,r6,1010b08c <__umoddi3+0x454>
1010b084:	00c00074 	movhi	r3,1
1010b088:	b8ef883a 	add	r23,r23,r3
1010b08c:	1006d43a 	srli	r3,r2,16
1010b090:	1004943a 	slli	r2,r2,16
1010b094:	e73fffcc 	andi	fp,fp,65535
1010b098:	1dc7883a 	add	r3,r3,r23
1010b09c:	1739883a 	add	fp,r2,fp
1010b0a0:	88c03a36 	bltu	r17,r3,1010b18c <__umoddi3+0x554>
1010b0a4:	88c05126 	beq	r17,r3,1010b1ec <__umoddi3+0x5b4>
1010b0a8:	88c9c83a 	sub	r4,r17,r3
1010b0ac:	e00f883a 	mov	r7,fp
1010b0b0:	81cfc83a 	sub	r7,r16,r7
1010b0b4:	81c7803a 	cmpltu	r3,r16,r7
1010b0b8:	20c7c83a 	sub	r3,r4,r3
1010b0bc:	1cc4983a 	sll	r2,r3,r19
1010b0c0:	3d0ed83a 	srl	r7,r7,r20
1010b0c4:	1d06d83a 	srl	r3,r3,r20
1010b0c8:	11c4b03a 	or	r2,r2,r7
1010b0cc:	003f7c06 	br	1010aec0 <__alt_data_end+0xfffeaec0>
1010b0d0:	9ca6983a 	sll	r19,r19,r18
1010b0d4:	88f8d83a 	srl	fp,r17,r3
1010b0d8:	80c4d83a 	srl	r2,r16,r3
1010b0dc:	982cd43a 	srli	r22,r19,16
1010b0e0:	8ca2983a 	sll	r17,r17,r18
1010b0e4:	e009883a 	mov	r4,fp
1010b0e8:	b00b883a 	mov	r5,r22
1010b0ec:	146ab03a 	or	r21,r2,r17
1010b0f0:	0100cbc0 	call	10100cbc <__umodsi3>
1010b0f4:	b00b883a 	mov	r5,r22
1010b0f8:	e009883a 	mov	r4,fp
1010b0fc:	1029883a 	mov	r20,r2
1010b100:	9dffffcc 	andi	r23,r19,65535
1010b104:	0100c580 	call	10100c58 <__udivsi3>
1010b108:	b809883a 	mov	r4,r23
1010b10c:	100b883a 	mov	r5,r2
1010b110:	0100d140 	call	10100d14 <__mulsi3>
1010b114:	a008943a 	slli	r4,r20,16
1010b118:	a806d43a 	srli	r3,r21,16
1010b11c:	84a8983a 	sll	r20,r16,r18
1010b120:	1906b03a 	or	r3,r3,r4
1010b124:	1880042e 	bgeu	r3,r2,1010b138 <__umoddi3+0x500>
1010b128:	1cc7883a 	add	r3,r3,r19
1010b12c:	1cc00236 	bltu	r3,r19,1010b138 <__umoddi3+0x500>
1010b130:	1880012e 	bgeu	r3,r2,1010b138 <__umoddi3+0x500>
1010b134:	1cc7883a 	add	r3,r3,r19
1010b138:	18a3c83a 	sub	r17,r3,r2
1010b13c:	b00b883a 	mov	r5,r22
1010b140:	8809883a 	mov	r4,r17
1010b144:	0100cbc0 	call	10100cbc <__umodsi3>
1010b148:	b00b883a 	mov	r5,r22
1010b14c:	8809883a 	mov	r4,r17
1010b150:	1021883a 	mov	r16,r2
1010b154:	0100c580 	call	10100c58 <__udivsi3>
1010b158:	100b883a 	mov	r5,r2
1010b15c:	b809883a 	mov	r4,r23
1010b160:	8020943a 	slli	r16,r16,16
1010b164:	0100d140 	call	10100d14 <__mulsi3>
1010b168:	a8ffffcc 	andi	r3,r21,65535
1010b16c:	1c06b03a 	or	r3,r3,r16
1010b170:	1880042e 	bgeu	r3,r2,1010b184 <__umoddi3+0x54c>
1010b174:	1cc7883a 	add	r3,r3,r19
1010b178:	1cc00236 	bltu	r3,r19,1010b184 <__umoddi3+0x54c>
1010b17c:	1880012e 	bgeu	r3,r2,1010b184 <__umoddi3+0x54c>
1010b180:	1cc7883a 	add	r3,r3,r19
1010b184:	18a3c83a 	sub	r17,r3,r2
1010b188:	003f2906 	br	1010ae30 <__alt_data_end+0xfffeae30>
1010b18c:	e48fc83a 	sub	r7,fp,r18
1010b190:	1d49c83a 	sub	r4,r3,r21
1010b194:	e1f9803a 	cmpltu	fp,fp,r7
1010b198:	2739c83a 	sub	fp,r4,fp
1010b19c:	8f09c83a 	sub	r4,r17,fp
1010b1a0:	003fc306 	br	1010b0b0 <__alt_data_end+0xfffeb0b0>
1010b1a4:	01000604 	movi	r4,24
1010b1a8:	003ef906 	br	1010ad90 <__alt_data_end+0xfffead90>
1010b1ac:	00800604 	movi	r2,24
1010b1b0:	003f1306 	br	1010ae00 <__alt_data_end+0xfffeae00>
1010b1b4:	01000604 	movi	r4,24
1010b1b8:	003eb606 	br	1010ac94 <__alt_data_end+0xfffeac94>
1010b1bc:	40bf902e 	bgeu	r8,r2,1010b000 <__alt_data_end+0xfffeb000>
1010b1c0:	b5bfff84 	addi	r22,r22,-2
1010b1c4:	4551883a 	add	r8,r8,r21
1010b1c8:	003f8e06 	br	1010b004 <__alt_data_end+0xfffeb004>
1010b1cc:	18bf762e 	bgeu	r3,r2,1010afa8 <__alt_data_end+0xfffeafa8>
1010b1d0:	8c7fff84 	addi	r17,r17,-2
1010b1d4:	1d47883a 	add	r3,r3,r21
1010b1d8:	003f7406 	br	1010afac <__alt_data_end+0xfffeafac>
1010b1dc:	1cc7883a 	add	r3,r3,r19
1010b1e0:	003ecd06 	br	1010ad18 <__alt_data_end+0xfffead18>
1010b1e4:	8005883a 	mov	r2,r16
1010b1e8:	003ef806 	br	1010adcc <__alt_data_end+0xfffeadcc>
1010b1ec:	873fe736 	bltu	r16,fp,1010b18c <__alt_data_end+0xfffeb18c>
1010b1f0:	e00f883a 	mov	r7,fp
1010b1f4:	0009883a 	mov	r4,zero
1010b1f8:	003fad06 	br	1010b0b0 <__alt_data_end+0xfffeb0b0>

1010b1fc <__adddf3>:
1010b1fc:	02c00434 	movhi	r11,16
1010b200:	5affffc4 	addi	r11,r11,-1
1010b204:	2806d7fa 	srli	r3,r5,31
1010b208:	2ad4703a 	and	r10,r5,r11
1010b20c:	3ad2703a 	and	r9,r7,r11
1010b210:	3804d53a 	srli	r2,r7,20
1010b214:	3018d77a 	srli	r12,r6,29
1010b218:	280ad53a 	srli	r5,r5,20
1010b21c:	501490fa 	slli	r10,r10,3
1010b220:	2010d77a 	srli	r8,r4,29
1010b224:	481290fa 	slli	r9,r9,3
1010b228:	380ed7fa 	srli	r7,r7,31
1010b22c:	defffb04 	addi	sp,sp,-20
1010b230:	dc800215 	stw	r18,8(sp)
1010b234:	dc400115 	stw	r17,4(sp)
1010b238:	dc000015 	stw	r16,0(sp)
1010b23c:	dfc00415 	stw	ra,16(sp)
1010b240:	dcc00315 	stw	r19,12(sp)
1010b244:	1c803fcc 	andi	r18,r3,255
1010b248:	2c01ffcc 	andi	r16,r5,2047
1010b24c:	5210b03a 	or	r8,r10,r8
1010b250:	202290fa 	slli	r17,r4,3
1010b254:	1081ffcc 	andi	r2,r2,2047
1010b258:	4b12b03a 	or	r9,r9,r12
1010b25c:	300c90fa 	slli	r6,r6,3
1010b260:	91c07526 	beq	r18,r7,1010b438 <__adddf3+0x23c>
1010b264:	8087c83a 	sub	r3,r16,r2
1010b268:	00c0ab0e 	bge	zero,r3,1010b518 <__adddf3+0x31c>
1010b26c:	10002a1e 	bne	r2,zero,1010b318 <__adddf3+0x11c>
1010b270:	4984b03a 	or	r2,r9,r6
1010b274:	1000961e 	bne	r2,zero,1010b4d0 <__adddf3+0x2d4>
1010b278:	888001cc 	andi	r2,r17,7
1010b27c:	10000726 	beq	r2,zero,1010b29c <__adddf3+0xa0>
1010b280:	888003cc 	andi	r2,r17,15
1010b284:	00c00104 	movi	r3,4
1010b288:	10c00426 	beq	r2,r3,1010b29c <__adddf3+0xa0>
1010b28c:	88c7883a 	add	r3,r17,r3
1010b290:	1c63803a 	cmpltu	r17,r3,r17
1010b294:	4451883a 	add	r8,r8,r17
1010b298:	1823883a 	mov	r17,r3
1010b29c:	4080202c 	andhi	r2,r8,128
1010b2a0:	10005926 	beq	r2,zero,1010b408 <__adddf3+0x20c>
1010b2a4:	84000044 	addi	r16,r16,1
1010b2a8:	0081ffc4 	movi	r2,2047
1010b2ac:	8080ba26 	beq	r16,r2,1010b598 <__adddf3+0x39c>
1010b2b0:	00bfe034 	movhi	r2,65408
1010b2b4:	10bfffc4 	addi	r2,r2,-1
1010b2b8:	4090703a 	and	r8,r8,r2
1010b2bc:	4004977a 	slli	r2,r8,29
1010b2c0:	4010927a 	slli	r8,r8,9
1010b2c4:	8822d0fa 	srli	r17,r17,3
1010b2c8:	8401ffcc 	andi	r16,r16,2047
1010b2cc:	4010d33a 	srli	r8,r8,12
1010b2d0:	9007883a 	mov	r3,r18
1010b2d4:	1444b03a 	or	r2,r2,r17
1010b2d8:	8401ffcc 	andi	r16,r16,2047
1010b2dc:	8020953a 	slli	r16,r16,20
1010b2e0:	18c03fcc 	andi	r3,r3,255
1010b2e4:	01000434 	movhi	r4,16
1010b2e8:	213fffc4 	addi	r4,r4,-1
1010b2ec:	180697fa 	slli	r3,r3,31
1010b2f0:	4110703a 	and	r8,r8,r4
1010b2f4:	4410b03a 	or	r8,r8,r16
1010b2f8:	40c6b03a 	or	r3,r8,r3
1010b2fc:	dfc00417 	ldw	ra,16(sp)
1010b300:	dcc00317 	ldw	r19,12(sp)
1010b304:	dc800217 	ldw	r18,8(sp)
1010b308:	dc400117 	ldw	r17,4(sp)
1010b30c:	dc000017 	ldw	r16,0(sp)
1010b310:	dec00504 	addi	sp,sp,20
1010b314:	f800283a 	ret
1010b318:	0081ffc4 	movi	r2,2047
1010b31c:	80bfd626 	beq	r16,r2,1010b278 <__alt_data_end+0xfffeb278>
1010b320:	4a402034 	orhi	r9,r9,128
1010b324:	00800e04 	movi	r2,56
1010b328:	10c09f16 	blt	r2,r3,1010b5a8 <__adddf3+0x3ac>
1010b32c:	008007c4 	movi	r2,31
1010b330:	10c0c216 	blt	r2,r3,1010b63c <__adddf3+0x440>
1010b334:	00800804 	movi	r2,32
1010b338:	10c5c83a 	sub	r2,r2,r3
1010b33c:	488a983a 	sll	r5,r9,r2
1010b340:	30c8d83a 	srl	r4,r6,r3
1010b344:	3084983a 	sll	r2,r6,r2
1010b348:	48c6d83a 	srl	r3,r9,r3
1010b34c:	290cb03a 	or	r6,r5,r4
1010b350:	1004c03a 	cmpne	r2,r2,zero
1010b354:	308cb03a 	or	r6,r6,r2
1010b358:	898dc83a 	sub	r6,r17,r6
1010b35c:	89a3803a 	cmpltu	r17,r17,r6
1010b360:	40d1c83a 	sub	r8,r8,r3
1010b364:	4451c83a 	sub	r8,r8,r17
1010b368:	3023883a 	mov	r17,r6
1010b36c:	4080202c 	andhi	r2,r8,128
1010b370:	10002326 	beq	r2,zero,1010b400 <__adddf3+0x204>
1010b374:	04c02034 	movhi	r19,128
1010b378:	9cffffc4 	addi	r19,r19,-1
1010b37c:	44e6703a 	and	r19,r8,r19
1010b380:	98007626 	beq	r19,zero,1010b55c <__adddf3+0x360>
1010b384:	9809883a 	mov	r4,r19
1010b388:	010da3c0 	call	1010da3c <__clzsi2>
1010b38c:	10fffe04 	addi	r3,r2,-8
1010b390:	010007c4 	movi	r4,31
1010b394:	20c07716 	blt	r4,r3,1010b574 <__adddf3+0x378>
1010b398:	00800804 	movi	r2,32
1010b39c:	10c5c83a 	sub	r2,r2,r3
1010b3a0:	8884d83a 	srl	r2,r17,r2
1010b3a4:	98d0983a 	sll	r8,r19,r3
1010b3a8:	88e2983a 	sll	r17,r17,r3
1010b3ac:	1204b03a 	or	r2,r2,r8
1010b3b0:	1c007416 	blt	r3,r16,1010b584 <__adddf3+0x388>
1010b3b4:	1c21c83a 	sub	r16,r3,r16
1010b3b8:	82000044 	addi	r8,r16,1
1010b3bc:	00c007c4 	movi	r3,31
1010b3c0:	1a009116 	blt	r3,r8,1010b608 <__adddf3+0x40c>
1010b3c4:	00c00804 	movi	r3,32
1010b3c8:	1a07c83a 	sub	r3,r3,r8
1010b3cc:	8a08d83a 	srl	r4,r17,r8
1010b3d0:	88e2983a 	sll	r17,r17,r3
1010b3d4:	10c6983a 	sll	r3,r2,r3
1010b3d8:	1210d83a 	srl	r8,r2,r8
1010b3dc:	8804c03a 	cmpne	r2,r17,zero
1010b3e0:	1906b03a 	or	r3,r3,r4
1010b3e4:	18a2b03a 	or	r17,r3,r2
1010b3e8:	0021883a 	mov	r16,zero
1010b3ec:	003fa206 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b3f0:	1890b03a 	or	r8,r3,r2
1010b3f4:	40017d26 	beq	r8,zero,1010b9ec <__adddf3+0x7f0>
1010b3f8:	1011883a 	mov	r8,r2
1010b3fc:	1823883a 	mov	r17,r3
1010b400:	888001cc 	andi	r2,r17,7
1010b404:	103f9e1e 	bne	r2,zero,1010b280 <__alt_data_end+0xfffeb280>
1010b408:	4004977a 	slli	r2,r8,29
1010b40c:	8822d0fa 	srli	r17,r17,3
1010b410:	4010d0fa 	srli	r8,r8,3
1010b414:	9007883a 	mov	r3,r18
1010b418:	1444b03a 	or	r2,r2,r17
1010b41c:	0101ffc4 	movi	r4,2047
1010b420:	81002426 	beq	r16,r4,1010b4b4 <__adddf3+0x2b8>
1010b424:	8120703a 	and	r16,r16,r4
1010b428:	01000434 	movhi	r4,16
1010b42c:	213fffc4 	addi	r4,r4,-1
1010b430:	4110703a 	and	r8,r8,r4
1010b434:	003fa806 	br	1010b2d8 <__alt_data_end+0xfffeb2d8>
1010b438:	8089c83a 	sub	r4,r16,r2
1010b43c:	01005e0e 	bge	zero,r4,1010b5b8 <__adddf3+0x3bc>
1010b440:	10002b26 	beq	r2,zero,1010b4f0 <__adddf3+0x2f4>
1010b444:	0081ffc4 	movi	r2,2047
1010b448:	80bf8b26 	beq	r16,r2,1010b278 <__alt_data_end+0xfffeb278>
1010b44c:	4a402034 	orhi	r9,r9,128
1010b450:	00800e04 	movi	r2,56
1010b454:	1100a40e 	bge	r2,r4,1010b6e8 <__adddf3+0x4ec>
1010b458:	498cb03a 	or	r6,r9,r6
1010b45c:	300ac03a 	cmpne	r5,r6,zero
1010b460:	0013883a 	mov	r9,zero
1010b464:	2c4b883a 	add	r5,r5,r17
1010b468:	2c63803a 	cmpltu	r17,r5,r17
1010b46c:	4a11883a 	add	r8,r9,r8
1010b470:	8a11883a 	add	r8,r17,r8
1010b474:	2823883a 	mov	r17,r5
1010b478:	4080202c 	andhi	r2,r8,128
1010b47c:	103fe026 	beq	r2,zero,1010b400 <__alt_data_end+0xfffeb400>
1010b480:	84000044 	addi	r16,r16,1
1010b484:	0081ffc4 	movi	r2,2047
1010b488:	8080d226 	beq	r16,r2,1010b7d4 <__adddf3+0x5d8>
1010b48c:	00bfe034 	movhi	r2,65408
1010b490:	10bfffc4 	addi	r2,r2,-1
1010b494:	4090703a 	and	r8,r8,r2
1010b498:	880ad07a 	srli	r5,r17,1
1010b49c:	400897fa 	slli	r4,r8,31
1010b4a0:	88c0004c 	andi	r3,r17,1
1010b4a4:	28e2b03a 	or	r17,r5,r3
1010b4a8:	4010d07a 	srli	r8,r8,1
1010b4ac:	2462b03a 	or	r17,r4,r17
1010b4b0:	003f7106 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b4b4:	4088b03a 	or	r4,r8,r2
1010b4b8:	20014526 	beq	r4,zero,1010b9d0 <__adddf3+0x7d4>
1010b4bc:	01000434 	movhi	r4,16
1010b4c0:	42000234 	orhi	r8,r8,8
1010b4c4:	213fffc4 	addi	r4,r4,-1
1010b4c8:	4110703a 	and	r8,r8,r4
1010b4cc:	003f8206 	br	1010b2d8 <__alt_data_end+0xfffeb2d8>
1010b4d0:	18ffffc4 	addi	r3,r3,-1
1010b4d4:	1800491e 	bne	r3,zero,1010b5fc <__adddf3+0x400>
1010b4d8:	898bc83a 	sub	r5,r17,r6
1010b4dc:	8963803a 	cmpltu	r17,r17,r5
1010b4e0:	4251c83a 	sub	r8,r8,r9
1010b4e4:	4451c83a 	sub	r8,r8,r17
1010b4e8:	2823883a 	mov	r17,r5
1010b4ec:	003f9f06 	br	1010b36c <__alt_data_end+0xfffeb36c>
1010b4f0:	4984b03a 	or	r2,r9,r6
1010b4f4:	103f6026 	beq	r2,zero,1010b278 <__alt_data_end+0xfffeb278>
1010b4f8:	213fffc4 	addi	r4,r4,-1
1010b4fc:	2000931e 	bne	r4,zero,1010b74c <__adddf3+0x550>
1010b500:	898d883a 	add	r6,r17,r6
1010b504:	3463803a 	cmpltu	r17,r6,r17
1010b508:	4251883a 	add	r8,r8,r9
1010b50c:	8a11883a 	add	r8,r17,r8
1010b510:	3023883a 	mov	r17,r6
1010b514:	003fd806 	br	1010b478 <__alt_data_end+0xfffeb478>
1010b518:	1800541e 	bne	r3,zero,1010b66c <__adddf3+0x470>
1010b51c:	80800044 	addi	r2,r16,1
1010b520:	1081ffcc 	andi	r2,r2,2047
1010b524:	00c00044 	movi	r3,1
1010b528:	1880a00e 	bge	r3,r2,1010b7ac <__adddf3+0x5b0>
1010b52c:	8989c83a 	sub	r4,r17,r6
1010b530:	8905803a 	cmpltu	r2,r17,r4
1010b534:	4267c83a 	sub	r19,r8,r9
1010b538:	98a7c83a 	sub	r19,r19,r2
1010b53c:	9880202c 	andhi	r2,r19,128
1010b540:	10006326 	beq	r2,zero,1010b6d0 <__adddf3+0x4d4>
1010b544:	3463c83a 	sub	r17,r6,r17
1010b548:	4a07c83a 	sub	r3,r9,r8
1010b54c:	344d803a 	cmpltu	r6,r6,r17
1010b550:	19a7c83a 	sub	r19,r3,r6
1010b554:	3825883a 	mov	r18,r7
1010b558:	983f8a1e 	bne	r19,zero,1010b384 <__alt_data_end+0xfffeb384>
1010b55c:	8809883a 	mov	r4,r17
1010b560:	010da3c0 	call	1010da3c <__clzsi2>
1010b564:	10800804 	addi	r2,r2,32
1010b568:	10fffe04 	addi	r3,r2,-8
1010b56c:	010007c4 	movi	r4,31
1010b570:	20ff890e 	bge	r4,r3,1010b398 <__alt_data_end+0xfffeb398>
1010b574:	10bff604 	addi	r2,r2,-40
1010b578:	8884983a 	sll	r2,r17,r2
1010b57c:	0023883a 	mov	r17,zero
1010b580:	1c3f8c0e 	bge	r3,r16,1010b3b4 <__alt_data_end+0xfffeb3b4>
1010b584:	023fe034 	movhi	r8,65408
1010b588:	423fffc4 	addi	r8,r8,-1
1010b58c:	80e1c83a 	sub	r16,r16,r3
1010b590:	1210703a 	and	r8,r2,r8
1010b594:	003f3806 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b598:	9007883a 	mov	r3,r18
1010b59c:	0011883a 	mov	r8,zero
1010b5a0:	0005883a 	mov	r2,zero
1010b5a4:	003f4c06 	br	1010b2d8 <__alt_data_end+0xfffeb2d8>
1010b5a8:	498cb03a 	or	r6,r9,r6
1010b5ac:	300cc03a 	cmpne	r6,r6,zero
1010b5b0:	0007883a 	mov	r3,zero
1010b5b4:	003f6806 	br	1010b358 <__alt_data_end+0xfffeb358>
1010b5b8:	20009c1e 	bne	r4,zero,1010b82c <__adddf3+0x630>
1010b5bc:	80800044 	addi	r2,r16,1
1010b5c0:	1141ffcc 	andi	r5,r2,2047
1010b5c4:	01000044 	movi	r4,1
1010b5c8:	2140670e 	bge	r4,r5,1010b768 <__adddf3+0x56c>
1010b5cc:	0101ffc4 	movi	r4,2047
1010b5d0:	11007f26 	beq	r2,r4,1010b7d0 <__adddf3+0x5d4>
1010b5d4:	898d883a 	add	r6,r17,r6
1010b5d8:	4247883a 	add	r3,r8,r9
1010b5dc:	3451803a 	cmpltu	r8,r6,r17
1010b5e0:	40d1883a 	add	r8,r8,r3
1010b5e4:	402297fa 	slli	r17,r8,31
1010b5e8:	300cd07a 	srli	r6,r6,1
1010b5ec:	4010d07a 	srli	r8,r8,1
1010b5f0:	1021883a 	mov	r16,r2
1010b5f4:	89a2b03a 	or	r17,r17,r6
1010b5f8:	003f1f06 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b5fc:	0081ffc4 	movi	r2,2047
1010b600:	80bf481e 	bne	r16,r2,1010b324 <__alt_data_end+0xfffeb324>
1010b604:	003f1c06 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b608:	843ff844 	addi	r16,r16,-31
1010b60c:	01000804 	movi	r4,32
1010b610:	1406d83a 	srl	r3,r2,r16
1010b614:	41005026 	beq	r8,r4,1010b758 <__adddf3+0x55c>
1010b618:	01001004 	movi	r4,64
1010b61c:	2211c83a 	sub	r8,r4,r8
1010b620:	1204983a 	sll	r2,r2,r8
1010b624:	88a2b03a 	or	r17,r17,r2
1010b628:	8822c03a 	cmpne	r17,r17,zero
1010b62c:	1c62b03a 	or	r17,r3,r17
1010b630:	0011883a 	mov	r8,zero
1010b634:	0021883a 	mov	r16,zero
1010b638:	003f7106 	br	1010b400 <__alt_data_end+0xfffeb400>
1010b63c:	193ff804 	addi	r4,r3,-32
1010b640:	00800804 	movi	r2,32
1010b644:	4908d83a 	srl	r4,r9,r4
1010b648:	18804526 	beq	r3,r2,1010b760 <__adddf3+0x564>
1010b64c:	00801004 	movi	r2,64
1010b650:	10c5c83a 	sub	r2,r2,r3
1010b654:	4886983a 	sll	r3,r9,r2
1010b658:	198cb03a 	or	r6,r3,r6
1010b65c:	300cc03a 	cmpne	r6,r6,zero
1010b660:	218cb03a 	or	r6,r4,r6
1010b664:	0007883a 	mov	r3,zero
1010b668:	003f3b06 	br	1010b358 <__alt_data_end+0xfffeb358>
1010b66c:	80002a26 	beq	r16,zero,1010b718 <__adddf3+0x51c>
1010b670:	0101ffc4 	movi	r4,2047
1010b674:	11006826 	beq	r2,r4,1010b818 <__adddf3+0x61c>
1010b678:	00c7c83a 	sub	r3,zero,r3
1010b67c:	42002034 	orhi	r8,r8,128
1010b680:	01000e04 	movi	r4,56
1010b684:	20c07c16 	blt	r4,r3,1010b878 <__adddf3+0x67c>
1010b688:	010007c4 	movi	r4,31
1010b68c:	20c0da16 	blt	r4,r3,1010b9f8 <__adddf3+0x7fc>
1010b690:	01000804 	movi	r4,32
1010b694:	20c9c83a 	sub	r4,r4,r3
1010b698:	4114983a 	sll	r10,r8,r4
1010b69c:	88cad83a 	srl	r5,r17,r3
1010b6a0:	8908983a 	sll	r4,r17,r4
1010b6a4:	40c6d83a 	srl	r3,r8,r3
1010b6a8:	5162b03a 	or	r17,r10,r5
1010b6ac:	2008c03a 	cmpne	r4,r4,zero
1010b6b0:	8922b03a 	or	r17,r17,r4
1010b6b4:	3463c83a 	sub	r17,r6,r17
1010b6b8:	48c7c83a 	sub	r3,r9,r3
1010b6bc:	344d803a 	cmpltu	r6,r6,r17
1010b6c0:	1991c83a 	sub	r8,r3,r6
1010b6c4:	1021883a 	mov	r16,r2
1010b6c8:	3825883a 	mov	r18,r7
1010b6cc:	003f2706 	br	1010b36c <__alt_data_end+0xfffeb36c>
1010b6d0:	24d0b03a 	or	r8,r4,r19
1010b6d4:	40001b1e 	bne	r8,zero,1010b744 <__adddf3+0x548>
1010b6d8:	0005883a 	mov	r2,zero
1010b6dc:	0007883a 	mov	r3,zero
1010b6e0:	0021883a 	mov	r16,zero
1010b6e4:	003f4d06 	br	1010b41c <__alt_data_end+0xfffeb41c>
1010b6e8:	008007c4 	movi	r2,31
1010b6ec:	11003c16 	blt	r2,r4,1010b7e0 <__adddf3+0x5e4>
1010b6f0:	00800804 	movi	r2,32
1010b6f4:	1105c83a 	sub	r2,r2,r4
1010b6f8:	488e983a 	sll	r7,r9,r2
1010b6fc:	310ad83a 	srl	r5,r6,r4
1010b700:	3084983a 	sll	r2,r6,r2
1010b704:	4912d83a 	srl	r9,r9,r4
1010b708:	394ab03a 	or	r5,r7,r5
1010b70c:	1004c03a 	cmpne	r2,r2,zero
1010b710:	288ab03a 	or	r5,r5,r2
1010b714:	003f5306 	br	1010b464 <__alt_data_end+0xfffeb464>
1010b718:	4448b03a 	or	r4,r8,r17
1010b71c:	20003e26 	beq	r4,zero,1010b818 <__adddf3+0x61c>
1010b720:	00c6303a 	nor	r3,zero,r3
1010b724:	18003a1e 	bne	r3,zero,1010b810 <__adddf3+0x614>
1010b728:	3463c83a 	sub	r17,r6,r17
1010b72c:	4a07c83a 	sub	r3,r9,r8
1010b730:	344d803a 	cmpltu	r6,r6,r17
1010b734:	1991c83a 	sub	r8,r3,r6
1010b738:	1021883a 	mov	r16,r2
1010b73c:	3825883a 	mov	r18,r7
1010b740:	003f0a06 	br	1010b36c <__alt_data_end+0xfffeb36c>
1010b744:	2023883a 	mov	r17,r4
1010b748:	003f0d06 	br	1010b380 <__alt_data_end+0xfffeb380>
1010b74c:	0081ffc4 	movi	r2,2047
1010b750:	80bf3f1e 	bne	r16,r2,1010b450 <__alt_data_end+0xfffeb450>
1010b754:	003ec806 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b758:	0005883a 	mov	r2,zero
1010b75c:	003fb106 	br	1010b624 <__alt_data_end+0xfffeb624>
1010b760:	0007883a 	mov	r3,zero
1010b764:	003fbc06 	br	1010b658 <__alt_data_end+0xfffeb658>
1010b768:	4444b03a 	or	r2,r8,r17
1010b76c:	8000871e 	bne	r16,zero,1010b98c <__adddf3+0x790>
1010b770:	1000ba26 	beq	r2,zero,1010ba5c <__adddf3+0x860>
1010b774:	4984b03a 	or	r2,r9,r6
1010b778:	103ebf26 	beq	r2,zero,1010b278 <__alt_data_end+0xfffeb278>
1010b77c:	8985883a 	add	r2,r17,r6
1010b780:	4247883a 	add	r3,r8,r9
1010b784:	1451803a 	cmpltu	r8,r2,r17
1010b788:	40d1883a 	add	r8,r8,r3
1010b78c:	40c0202c 	andhi	r3,r8,128
1010b790:	1023883a 	mov	r17,r2
1010b794:	183f1a26 	beq	r3,zero,1010b400 <__alt_data_end+0xfffeb400>
1010b798:	00bfe034 	movhi	r2,65408
1010b79c:	10bfffc4 	addi	r2,r2,-1
1010b7a0:	2021883a 	mov	r16,r4
1010b7a4:	4090703a 	and	r8,r8,r2
1010b7a8:	003eb306 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b7ac:	4444b03a 	or	r2,r8,r17
1010b7b0:	8000291e 	bne	r16,zero,1010b858 <__adddf3+0x65c>
1010b7b4:	10004b1e 	bne	r2,zero,1010b8e4 <__adddf3+0x6e8>
1010b7b8:	4990b03a 	or	r8,r9,r6
1010b7bc:	40008b26 	beq	r8,zero,1010b9ec <__adddf3+0x7f0>
1010b7c0:	4811883a 	mov	r8,r9
1010b7c4:	3023883a 	mov	r17,r6
1010b7c8:	3825883a 	mov	r18,r7
1010b7cc:	003eaa06 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b7d0:	1021883a 	mov	r16,r2
1010b7d4:	0011883a 	mov	r8,zero
1010b7d8:	0005883a 	mov	r2,zero
1010b7dc:	003f0f06 	br	1010b41c <__alt_data_end+0xfffeb41c>
1010b7e0:	217ff804 	addi	r5,r4,-32
1010b7e4:	00800804 	movi	r2,32
1010b7e8:	494ad83a 	srl	r5,r9,r5
1010b7ec:	20807d26 	beq	r4,r2,1010b9e4 <__adddf3+0x7e8>
1010b7f0:	00801004 	movi	r2,64
1010b7f4:	1109c83a 	sub	r4,r2,r4
1010b7f8:	4912983a 	sll	r9,r9,r4
1010b7fc:	498cb03a 	or	r6,r9,r6
1010b800:	300cc03a 	cmpne	r6,r6,zero
1010b804:	298ab03a 	or	r5,r5,r6
1010b808:	0013883a 	mov	r9,zero
1010b80c:	003f1506 	br	1010b464 <__alt_data_end+0xfffeb464>
1010b810:	0101ffc4 	movi	r4,2047
1010b814:	113f9a1e 	bne	r2,r4,1010b680 <__alt_data_end+0xfffeb680>
1010b818:	4811883a 	mov	r8,r9
1010b81c:	3023883a 	mov	r17,r6
1010b820:	1021883a 	mov	r16,r2
1010b824:	3825883a 	mov	r18,r7
1010b828:	003e9306 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b82c:	8000161e 	bne	r16,zero,1010b888 <__adddf3+0x68c>
1010b830:	444ab03a 	or	r5,r8,r17
1010b834:	28005126 	beq	r5,zero,1010b97c <__adddf3+0x780>
1010b838:	0108303a 	nor	r4,zero,r4
1010b83c:	20004d1e 	bne	r4,zero,1010b974 <__adddf3+0x778>
1010b840:	89a3883a 	add	r17,r17,r6
1010b844:	4253883a 	add	r9,r8,r9
1010b848:	898d803a 	cmpltu	r6,r17,r6
1010b84c:	3251883a 	add	r8,r6,r9
1010b850:	1021883a 	mov	r16,r2
1010b854:	003f0806 	br	1010b478 <__alt_data_end+0xfffeb478>
1010b858:	1000301e 	bne	r2,zero,1010b91c <__adddf3+0x720>
1010b85c:	4984b03a 	or	r2,r9,r6
1010b860:	10007126 	beq	r2,zero,1010ba28 <__adddf3+0x82c>
1010b864:	4811883a 	mov	r8,r9
1010b868:	3023883a 	mov	r17,r6
1010b86c:	3825883a 	mov	r18,r7
1010b870:	0401ffc4 	movi	r16,2047
1010b874:	003e8006 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b878:	4462b03a 	or	r17,r8,r17
1010b87c:	8822c03a 	cmpne	r17,r17,zero
1010b880:	0007883a 	mov	r3,zero
1010b884:	003f8b06 	br	1010b6b4 <__alt_data_end+0xfffeb6b4>
1010b888:	0141ffc4 	movi	r5,2047
1010b88c:	11403b26 	beq	r2,r5,1010b97c <__adddf3+0x780>
1010b890:	0109c83a 	sub	r4,zero,r4
1010b894:	42002034 	orhi	r8,r8,128
1010b898:	01400e04 	movi	r5,56
1010b89c:	29006716 	blt	r5,r4,1010ba3c <__adddf3+0x840>
1010b8a0:	014007c4 	movi	r5,31
1010b8a4:	29007016 	blt	r5,r4,1010ba68 <__adddf3+0x86c>
1010b8a8:	01400804 	movi	r5,32
1010b8ac:	290bc83a 	sub	r5,r5,r4
1010b8b0:	4154983a 	sll	r10,r8,r5
1010b8b4:	890ed83a 	srl	r7,r17,r4
1010b8b8:	894a983a 	sll	r5,r17,r5
1010b8bc:	4108d83a 	srl	r4,r8,r4
1010b8c0:	51e2b03a 	or	r17,r10,r7
1010b8c4:	280ac03a 	cmpne	r5,r5,zero
1010b8c8:	8962b03a 	or	r17,r17,r5
1010b8cc:	89a3883a 	add	r17,r17,r6
1010b8d0:	2253883a 	add	r9,r4,r9
1010b8d4:	898d803a 	cmpltu	r6,r17,r6
1010b8d8:	3251883a 	add	r8,r6,r9
1010b8dc:	1021883a 	mov	r16,r2
1010b8e0:	003ee506 	br	1010b478 <__alt_data_end+0xfffeb478>
1010b8e4:	4984b03a 	or	r2,r9,r6
1010b8e8:	103e6326 	beq	r2,zero,1010b278 <__alt_data_end+0xfffeb278>
1010b8ec:	8987c83a 	sub	r3,r17,r6
1010b8f0:	88c9803a 	cmpltu	r4,r17,r3
1010b8f4:	4245c83a 	sub	r2,r8,r9
1010b8f8:	1105c83a 	sub	r2,r2,r4
1010b8fc:	1100202c 	andhi	r4,r2,128
1010b900:	203ebb26 	beq	r4,zero,1010b3f0 <__alt_data_end+0xfffeb3f0>
1010b904:	3463c83a 	sub	r17,r6,r17
1010b908:	4a07c83a 	sub	r3,r9,r8
1010b90c:	344d803a 	cmpltu	r6,r6,r17
1010b910:	1991c83a 	sub	r8,r3,r6
1010b914:	3825883a 	mov	r18,r7
1010b918:	003e5706 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b91c:	4984b03a 	or	r2,r9,r6
1010b920:	10002e26 	beq	r2,zero,1010b9dc <__adddf3+0x7e0>
1010b924:	4004d0fa 	srli	r2,r8,3
1010b928:	8822d0fa 	srli	r17,r17,3
1010b92c:	4010977a 	slli	r8,r8,29
1010b930:	10c0022c 	andhi	r3,r2,8
1010b934:	4462b03a 	or	r17,r8,r17
1010b938:	18000826 	beq	r3,zero,1010b95c <__adddf3+0x760>
1010b93c:	4808d0fa 	srli	r4,r9,3
1010b940:	20c0022c 	andhi	r3,r4,8
1010b944:	1800051e 	bne	r3,zero,1010b95c <__adddf3+0x760>
1010b948:	300cd0fa 	srli	r6,r6,3
1010b94c:	4806977a 	slli	r3,r9,29
1010b950:	2005883a 	mov	r2,r4
1010b954:	3825883a 	mov	r18,r7
1010b958:	19a2b03a 	or	r17,r3,r6
1010b95c:	8810d77a 	srli	r8,r17,29
1010b960:	100490fa 	slli	r2,r2,3
1010b964:	882290fa 	slli	r17,r17,3
1010b968:	0401ffc4 	movi	r16,2047
1010b96c:	4090b03a 	or	r8,r8,r2
1010b970:	003e4106 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b974:	0141ffc4 	movi	r5,2047
1010b978:	117fc71e 	bne	r2,r5,1010b898 <__alt_data_end+0xfffeb898>
1010b97c:	4811883a 	mov	r8,r9
1010b980:	3023883a 	mov	r17,r6
1010b984:	1021883a 	mov	r16,r2
1010b988:	003e3b06 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b98c:	10002f26 	beq	r2,zero,1010ba4c <__adddf3+0x850>
1010b990:	4984b03a 	or	r2,r9,r6
1010b994:	10001126 	beq	r2,zero,1010b9dc <__adddf3+0x7e0>
1010b998:	4004d0fa 	srli	r2,r8,3
1010b99c:	8822d0fa 	srli	r17,r17,3
1010b9a0:	4010977a 	slli	r8,r8,29
1010b9a4:	10c0022c 	andhi	r3,r2,8
1010b9a8:	4462b03a 	or	r17,r8,r17
1010b9ac:	183feb26 	beq	r3,zero,1010b95c <__alt_data_end+0xfffeb95c>
1010b9b0:	4808d0fa 	srli	r4,r9,3
1010b9b4:	20c0022c 	andhi	r3,r4,8
1010b9b8:	183fe81e 	bne	r3,zero,1010b95c <__alt_data_end+0xfffeb95c>
1010b9bc:	300cd0fa 	srli	r6,r6,3
1010b9c0:	4806977a 	slli	r3,r9,29
1010b9c4:	2005883a 	mov	r2,r4
1010b9c8:	19a2b03a 	or	r17,r3,r6
1010b9cc:	003fe306 	br	1010b95c <__alt_data_end+0xfffeb95c>
1010b9d0:	0011883a 	mov	r8,zero
1010b9d4:	0005883a 	mov	r2,zero
1010b9d8:	003e3f06 	br	1010b2d8 <__alt_data_end+0xfffeb2d8>
1010b9dc:	0401ffc4 	movi	r16,2047
1010b9e0:	003e2506 	br	1010b278 <__alt_data_end+0xfffeb278>
1010b9e4:	0013883a 	mov	r9,zero
1010b9e8:	003f8406 	br	1010b7fc <__alt_data_end+0xfffeb7fc>
1010b9ec:	0005883a 	mov	r2,zero
1010b9f0:	0007883a 	mov	r3,zero
1010b9f4:	003e8906 	br	1010b41c <__alt_data_end+0xfffeb41c>
1010b9f8:	197ff804 	addi	r5,r3,-32
1010b9fc:	01000804 	movi	r4,32
1010ba00:	414ad83a 	srl	r5,r8,r5
1010ba04:	19002426 	beq	r3,r4,1010ba98 <__adddf3+0x89c>
1010ba08:	01001004 	movi	r4,64
1010ba0c:	20c7c83a 	sub	r3,r4,r3
1010ba10:	40c6983a 	sll	r3,r8,r3
1010ba14:	1c46b03a 	or	r3,r3,r17
1010ba18:	1806c03a 	cmpne	r3,r3,zero
1010ba1c:	28e2b03a 	or	r17,r5,r3
1010ba20:	0007883a 	mov	r3,zero
1010ba24:	003f2306 	br	1010b6b4 <__alt_data_end+0xfffeb6b4>
1010ba28:	0007883a 	mov	r3,zero
1010ba2c:	5811883a 	mov	r8,r11
1010ba30:	00bfffc4 	movi	r2,-1
1010ba34:	0401ffc4 	movi	r16,2047
1010ba38:	003e7806 	br	1010b41c <__alt_data_end+0xfffeb41c>
1010ba3c:	4462b03a 	or	r17,r8,r17
1010ba40:	8822c03a 	cmpne	r17,r17,zero
1010ba44:	0009883a 	mov	r4,zero
1010ba48:	003fa006 	br	1010b8cc <__alt_data_end+0xfffeb8cc>
1010ba4c:	4811883a 	mov	r8,r9
1010ba50:	3023883a 	mov	r17,r6
1010ba54:	0401ffc4 	movi	r16,2047
1010ba58:	003e0706 	br	1010b278 <__alt_data_end+0xfffeb278>
1010ba5c:	4811883a 	mov	r8,r9
1010ba60:	3023883a 	mov	r17,r6
1010ba64:	003e0406 	br	1010b278 <__alt_data_end+0xfffeb278>
1010ba68:	21fff804 	addi	r7,r4,-32
1010ba6c:	01400804 	movi	r5,32
1010ba70:	41ced83a 	srl	r7,r8,r7
1010ba74:	21400a26 	beq	r4,r5,1010baa0 <__adddf3+0x8a4>
1010ba78:	01401004 	movi	r5,64
1010ba7c:	2909c83a 	sub	r4,r5,r4
1010ba80:	4108983a 	sll	r4,r8,r4
1010ba84:	2448b03a 	or	r4,r4,r17
1010ba88:	2008c03a 	cmpne	r4,r4,zero
1010ba8c:	3922b03a 	or	r17,r7,r4
1010ba90:	0009883a 	mov	r4,zero
1010ba94:	003f8d06 	br	1010b8cc <__alt_data_end+0xfffeb8cc>
1010ba98:	0007883a 	mov	r3,zero
1010ba9c:	003fdd06 	br	1010ba14 <__alt_data_end+0xfffeba14>
1010baa0:	0009883a 	mov	r4,zero
1010baa4:	003ff706 	br	1010ba84 <__alt_data_end+0xfffeba84>

1010baa8 <__divdf3>:
1010baa8:	defff004 	addi	sp,sp,-64
1010baac:	dc800815 	stw	r18,32(sp)
1010bab0:	2824d53a 	srli	r18,r5,20
1010bab4:	dd800c15 	stw	r22,48(sp)
1010bab8:	282cd7fa 	srli	r22,r5,31
1010babc:	dc000615 	stw	r16,24(sp)
1010bac0:	04000434 	movhi	r16,16
1010bac4:	843fffc4 	addi	r16,r16,-1
1010bac8:	dfc00f15 	stw	ra,60(sp)
1010bacc:	df000e15 	stw	fp,56(sp)
1010bad0:	ddc00d15 	stw	r23,52(sp)
1010bad4:	dd400b15 	stw	r21,44(sp)
1010bad8:	dd000a15 	stw	r20,40(sp)
1010badc:	dcc00915 	stw	r19,36(sp)
1010bae0:	dc400715 	stw	r17,28(sp)
1010bae4:	9481ffcc 	andi	r18,r18,2047
1010bae8:	2c20703a 	and	r16,r5,r16
1010baec:	b2003fcc 	andi	r8,r22,255
1010baf0:	90006126 	beq	r18,zero,1010bc78 <__divdf3+0x1d0>
1010baf4:	0081ffc4 	movi	r2,2047
1010baf8:	202b883a 	mov	r21,r4
1010bafc:	90803726 	beq	r18,r2,1010bbdc <__divdf3+0x134>
1010bb00:	80800434 	orhi	r2,r16,16
1010bb04:	100490fa 	slli	r2,r2,3
1010bb08:	2020d77a 	srli	r16,r4,29
1010bb0c:	202a90fa 	slli	r21,r4,3
1010bb10:	94bf0044 	addi	r18,r18,-1023
1010bb14:	80a0b03a 	or	r16,r16,r2
1010bb18:	0013883a 	mov	r9,zero
1010bb1c:	000b883a 	mov	r5,zero
1010bb20:	3806d53a 	srli	r3,r7,20
1010bb24:	382ed7fa 	srli	r23,r7,31
1010bb28:	04400434 	movhi	r17,16
1010bb2c:	8c7fffc4 	addi	r17,r17,-1
1010bb30:	18c1ffcc 	andi	r3,r3,2047
1010bb34:	3029883a 	mov	r20,r6
1010bb38:	3c62703a 	and	r17,r7,r17
1010bb3c:	bf003fcc 	andi	fp,r23,255
1010bb40:	18006e26 	beq	r3,zero,1010bcfc <__divdf3+0x254>
1010bb44:	0081ffc4 	movi	r2,2047
1010bb48:	18806626 	beq	r3,r2,1010bce4 <__divdf3+0x23c>
1010bb4c:	88800434 	orhi	r2,r17,16
1010bb50:	100490fa 	slli	r2,r2,3
1010bb54:	3022d77a 	srli	r17,r6,29
1010bb58:	302890fa 	slli	r20,r6,3
1010bb5c:	18ff0044 	addi	r3,r3,-1023
1010bb60:	88a2b03a 	or	r17,r17,r2
1010bb64:	000f883a 	mov	r7,zero
1010bb68:	b5e6f03a 	xor	r19,r22,r23
1010bb6c:	3a4cb03a 	or	r6,r7,r9
1010bb70:	008003c4 	movi	r2,15
1010bb74:	9809883a 	mov	r4,r19
1010bb78:	90c7c83a 	sub	r3,r18,r3
1010bb7c:	9cc03fcc 	andi	r19,r19,255
1010bb80:	11809636 	bltu	r2,r6,1010bddc <__divdf3+0x334>
1010bb84:	300c90ba 	slli	r6,r6,2
1010bb88:	00840474 	movhi	r2,4113
1010bb8c:	10aee704 	addi	r2,r2,-17508
1010bb90:	308d883a 	add	r6,r6,r2
1010bb94:	30800017 	ldw	r2,0(r6)
1010bb98:	1000683a 	jmp	r2
1010bb9c:	1010bddc 	xori	zero,r2,17143
1010bba0:	1010bc14 	ori	zero,r2,17136
1010bba4:	1010bdcc 	andi	zero,r2,17143
1010bba8:	1010bc08 	cmpgei	zero,r2,17136
1010bbac:	1010bdcc 	andi	zero,r2,17143
1010bbb0:	1010bda0 	cmpeqi	zero,r2,17142
1010bbb4:	1010bdcc 	andi	zero,r2,17143
1010bbb8:	1010bc08 	cmpgei	zero,r2,17136
1010bbbc:	1010bc14 	ori	zero,r2,17136
1010bbc0:	1010bc14 	ori	zero,r2,17136
1010bbc4:	1010bda0 	cmpeqi	zero,r2,17142
1010bbc8:	1010bc08 	cmpgei	zero,r2,17136
1010bbcc:	1010bbf8 	rdprs	zero,r2,17135
1010bbd0:	1010bbf8 	rdprs	zero,r2,17135
1010bbd4:	1010bbf8 	rdprs	zero,r2,17135
1010bbd8:	1010c164 	muli	zero,r2,17157
1010bbdc:	2404b03a 	or	r2,r4,r16
1010bbe0:	10006c1e 	bne	r2,zero,1010bd94 <__divdf3+0x2ec>
1010bbe4:	02400204 	movi	r9,8
1010bbe8:	0021883a 	mov	r16,zero
1010bbec:	002b883a 	mov	r21,zero
1010bbf0:	01400084 	movi	r5,2
1010bbf4:	003fca06 	br	1010bb20 <__alt_data_end+0xfffebb20>
1010bbf8:	8023883a 	mov	r17,r16
1010bbfc:	a829883a 	mov	r20,r21
1010bc00:	4039883a 	mov	fp,r8
1010bc04:	280f883a 	mov	r7,r5
1010bc08:	00800084 	movi	r2,2
1010bc0c:	3881601e 	bne	r7,r2,1010c190 <__divdf3+0x6e8>
1010bc10:	e027883a 	mov	r19,fp
1010bc14:	9900004c 	andi	r4,r19,1
1010bc18:	0081ffc4 	movi	r2,2047
1010bc1c:	0021883a 	mov	r16,zero
1010bc20:	002b883a 	mov	r21,zero
1010bc24:	1004953a 	slli	r2,r2,20
1010bc28:	20c03fcc 	andi	r3,r4,255
1010bc2c:	01400434 	movhi	r5,16
1010bc30:	297fffc4 	addi	r5,r5,-1
1010bc34:	180697fa 	slli	r3,r3,31
1010bc38:	8160703a 	and	r16,r16,r5
1010bc3c:	80a0b03a 	or	r16,r16,r2
1010bc40:	80c6b03a 	or	r3,r16,r3
1010bc44:	a805883a 	mov	r2,r21
1010bc48:	dfc00f17 	ldw	ra,60(sp)
1010bc4c:	df000e17 	ldw	fp,56(sp)
1010bc50:	ddc00d17 	ldw	r23,52(sp)
1010bc54:	dd800c17 	ldw	r22,48(sp)
1010bc58:	dd400b17 	ldw	r21,44(sp)
1010bc5c:	dd000a17 	ldw	r20,40(sp)
1010bc60:	dcc00917 	ldw	r19,36(sp)
1010bc64:	dc800817 	ldw	r18,32(sp)
1010bc68:	dc400717 	ldw	r17,28(sp)
1010bc6c:	dc000617 	ldw	r16,24(sp)
1010bc70:	dec01004 	addi	sp,sp,64
1010bc74:	f800283a 	ret
1010bc78:	2404b03a 	or	r2,r4,r16
1010bc7c:	2023883a 	mov	r17,r4
1010bc80:	10003f26 	beq	r2,zero,1010bd80 <__divdf3+0x2d8>
1010bc84:	80015e26 	beq	r16,zero,1010c200 <__divdf3+0x758>
1010bc88:	8009883a 	mov	r4,r16
1010bc8c:	d9800215 	stw	r6,8(sp)
1010bc90:	d9c00515 	stw	r7,20(sp)
1010bc94:	da000415 	stw	r8,16(sp)
1010bc98:	010da3c0 	call	1010da3c <__clzsi2>
1010bc9c:	d9800217 	ldw	r6,8(sp)
1010bca0:	d9c00517 	ldw	r7,20(sp)
1010bca4:	da000417 	ldw	r8,16(sp)
1010bca8:	113ffd44 	addi	r4,r2,-11
1010bcac:	00c00704 	movi	r3,28
1010bcb0:	19014f16 	blt	r3,r4,1010c1f0 <__divdf3+0x748>
1010bcb4:	00c00744 	movi	r3,29
1010bcb8:	157ffe04 	addi	r21,r2,-8
1010bcbc:	1907c83a 	sub	r3,r3,r4
1010bcc0:	8560983a 	sll	r16,r16,r21
1010bcc4:	88c6d83a 	srl	r3,r17,r3
1010bcc8:	8d6a983a 	sll	r21,r17,r21
1010bccc:	1c20b03a 	or	r16,r3,r16
1010bcd0:	1080fcc4 	addi	r2,r2,1011
1010bcd4:	00a5c83a 	sub	r18,zero,r2
1010bcd8:	0013883a 	mov	r9,zero
1010bcdc:	000b883a 	mov	r5,zero
1010bce0:	003f8f06 	br	1010bb20 <__alt_data_end+0xfffebb20>
1010bce4:	3444b03a 	or	r2,r6,r17
1010bce8:	1000231e 	bne	r2,zero,1010bd78 <__divdf3+0x2d0>
1010bcec:	0023883a 	mov	r17,zero
1010bcf0:	0029883a 	mov	r20,zero
1010bcf4:	01c00084 	movi	r7,2
1010bcf8:	003f9b06 	br	1010bb68 <__alt_data_end+0xfffebb68>
1010bcfc:	3444b03a 	or	r2,r6,r17
1010bd00:	10001926 	beq	r2,zero,1010bd68 <__divdf3+0x2c0>
1010bd04:	88014b26 	beq	r17,zero,1010c234 <__divdf3+0x78c>
1010bd08:	8809883a 	mov	r4,r17
1010bd0c:	d9400115 	stw	r5,4(sp)
1010bd10:	d9800215 	stw	r6,8(sp)
1010bd14:	da000415 	stw	r8,16(sp)
1010bd18:	da400315 	stw	r9,12(sp)
1010bd1c:	010da3c0 	call	1010da3c <__clzsi2>
1010bd20:	d9400117 	ldw	r5,4(sp)
1010bd24:	d9800217 	ldw	r6,8(sp)
1010bd28:	da000417 	ldw	r8,16(sp)
1010bd2c:	da400317 	ldw	r9,12(sp)
1010bd30:	113ffd44 	addi	r4,r2,-11
1010bd34:	00c00704 	movi	r3,28
1010bd38:	19013a16 	blt	r3,r4,1010c224 <__divdf3+0x77c>
1010bd3c:	00c00744 	movi	r3,29
1010bd40:	153ffe04 	addi	r20,r2,-8
1010bd44:	1907c83a 	sub	r3,r3,r4
1010bd48:	8d22983a 	sll	r17,r17,r20
1010bd4c:	30c6d83a 	srl	r3,r6,r3
1010bd50:	3528983a 	sll	r20,r6,r20
1010bd54:	1c62b03a 	or	r17,r3,r17
1010bd58:	1080fcc4 	addi	r2,r2,1011
1010bd5c:	0087c83a 	sub	r3,zero,r2
1010bd60:	000f883a 	mov	r7,zero
1010bd64:	003f8006 	br	1010bb68 <__alt_data_end+0xfffebb68>
1010bd68:	0023883a 	mov	r17,zero
1010bd6c:	0029883a 	mov	r20,zero
1010bd70:	01c00044 	movi	r7,1
1010bd74:	003f7c06 	br	1010bb68 <__alt_data_end+0xfffebb68>
1010bd78:	01c000c4 	movi	r7,3
1010bd7c:	003f7a06 	br	1010bb68 <__alt_data_end+0xfffebb68>
1010bd80:	02400104 	movi	r9,4
1010bd84:	0021883a 	mov	r16,zero
1010bd88:	002b883a 	mov	r21,zero
1010bd8c:	01400044 	movi	r5,1
1010bd90:	003f6306 	br	1010bb20 <__alt_data_end+0xfffebb20>
1010bd94:	02400304 	movi	r9,12
1010bd98:	014000c4 	movi	r5,3
1010bd9c:	003f6006 	br	1010bb20 <__alt_data_end+0xfffebb20>
1010bda0:	04000434 	movhi	r16,16
1010bda4:	0009883a 	mov	r4,zero
1010bda8:	843fffc4 	addi	r16,r16,-1
1010bdac:	057fffc4 	movi	r21,-1
1010bdb0:	0081ffc4 	movi	r2,2047
1010bdb4:	003f9b06 	br	1010bc24 <__alt_data_end+0xfffebc24>
1010bdb8:	00c00044 	movi	r3,1
1010bdbc:	1887c83a 	sub	r3,r3,r2
1010bdc0:	01000e04 	movi	r4,56
1010bdc4:	20c1530e 	bge	r4,r3,1010c314 <__divdf3+0x86c>
1010bdc8:	9900004c 	andi	r4,r19,1
1010bdcc:	0005883a 	mov	r2,zero
1010bdd0:	0021883a 	mov	r16,zero
1010bdd4:	002b883a 	mov	r21,zero
1010bdd8:	003f9206 	br	1010bc24 <__alt_data_end+0xfffebc24>
1010bddc:	8c012e36 	bltu	r17,r16,1010c298 <__divdf3+0x7f0>
1010bde0:	84412c26 	beq	r16,r17,1010c294 <__divdf3+0x7ec>
1010bde4:	a82f883a 	mov	r23,r21
1010bde8:	18ffffc4 	addi	r3,r3,-1
1010bdec:	002b883a 	mov	r21,zero
1010bdf0:	a004d63a 	srli	r2,r20,24
1010bdf4:	8822923a 	slli	r17,r17,8
1010bdf8:	a028923a 	slli	r20,r20,8
1010bdfc:	8009883a 	mov	r4,r16
1010be00:	88acb03a 	or	r22,r17,r2
1010be04:	dd000015 	stw	r20,0(sp)
1010be08:	b028d43a 	srli	r20,r22,16
1010be0c:	d8c00215 	stw	r3,8(sp)
1010be10:	b4bfffcc 	andi	r18,r22,65535
1010be14:	a00b883a 	mov	r5,r20
1010be18:	0100c580 	call	10100c58 <__udivsi3>
1010be1c:	100b883a 	mov	r5,r2
1010be20:	9009883a 	mov	r4,r18
1010be24:	1023883a 	mov	r17,r2
1010be28:	0100d140 	call	10100d14 <__mulsi3>
1010be2c:	8009883a 	mov	r4,r16
1010be30:	a00b883a 	mov	r5,r20
1010be34:	1039883a 	mov	fp,r2
1010be38:	0100cbc0 	call	10100cbc <__umodsi3>
1010be3c:	1004943a 	slli	r2,r2,16
1010be40:	b808d43a 	srli	r4,r23,16
1010be44:	d8c00217 	ldw	r3,8(sp)
1010be48:	2084b03a 	or	r2,r4,r2
1010be4c:	1700062e 	bgeu	r2,fp,1010be68 <__divdf3+0x3c0>
1010be50:	1585883a 	add	r2,r2,r22
1010be54:	893fffc4 	addi	r4,r17,-1
1010be58:	15811d36 	bltu	r2,r22,1010c2d0 <__divdf3+0x828>
1010be5c:	17011c2e 	bgeu	r2,fp,1010c2d0 <__divdf3+0x828>
1010be60:	8c7fff84 	addi	r17,r17,-2
1010be64:	1585883a 	add	r2,r2,r22
1010be68:	1739c83a 	sub	fp,r2,fp
1010be6c:	a00b883a 	mov	r5,r20
1010be70:	e009883a 	mov	r4,fp
1010be74:	d8c00215 	stw	r3,8(sp)
1010be78:	0100c580 	call	10100c58 <__udivsi3>
1010be7c:	100b883a 	mov	r5,r2
1010be80:	9009883a 	mov	r4,r18
1010be84:	1021883a 	mov	r16,r2
1010be88:	0100d140 	call	10100d14 <__mulsi3>
1010be8c:	a00b883a 	mov	r5,r20
1010be90:	e009883a 	mov	r4,fp
1010be94:	d8800415 	stw	r2,16(sp)
1010be98:	0100cbc0 	call	10100cbc <__umodsi3>
1010be9c:	1004943a 	slli	r2,r2,16
1010bea0:	da000417 	ldw	r8,16(sp)
1010bea4:	bdffffcc 	andi	r23,r23,65535
1010bea8:	b884b03a 	or	r2,r23,r2
1010beac:	d8c00217 	ldw	r3,8(sp)
1010beb0:	1200062e 	bgeu	r2,r8,1010becc <__divdf3+0x424>
1010beb4:	1585883a 	add	r2,r2,r22
1010beb8:	813fffc4 	addi	r4,r16,-1
1010bebc:	15810236 	bltu	r2,r22,1010c2c8 <__divdf3+0x820>
1010bec0:	1201012e 	bgeu	r2,r8,1010c2c8 <__divdf3+0x820>
1010bec4:	843fff84 	addi	r16,r16,-2
1010bec8:	1585883a 	add	r2,r2,r22
1010becc:	8822943a 	slli	r17,r17,16
1010bed0:	d9800017 	ldw	r6,0(sp)
1010bed4:	1211c83a 	sub	r8,r2,r8
1010bed8:	8c22b03a 	or	r17,r17,r16
1010bedc:	373fffcc 	andi	fp,r6,65535
1010bee0:	8abfffcc 	andi	r10,r17,65535
1010bee4:	8820d43a 	srli	r16,r17,16
1010bee8:	5009883a 	mov	r4,r10
1010beec:	e00b883a 	mov	r5,fp
1010bef0:	302ed43a 	srli	r23,r6,16
1010bef4:	d8c00215 	stw	r3,8(sp)
1010bef8:	da000415 	stw	r8,16(sp)
1010befc:	da800115 	stw	r10,4(sp)
1010bf00:	0100d140 	call	10100d14 <__mulsi3>
1010bf04:	800b883a 	mov	r5,r16
1010bf08:	e009883a 	mov	r4,fp
1010bf0c:	d8800515 	stw	r2,20(sp)
1010bf10:	0100d140 	call	10100d14 <__mulsi3>
1010bf14:	8009883a 	mov	r4,r16
1010bf18:	b80b883a 	mov	r5,r23
1010bf1c:	d8800315 	stw	r2,12(sp)
1010bf20:	0100d140 	call	10100d14 <__mulsi3>
1010bf24:	da800117 	ldw	r10,4(sp)
1010bf28:	b80b883a 	mov	r5,r23
1010bf2c:	1021883a 	mov	r16,r2
1010bf30:	5009883a 	mov	r4,r10
1010bf34:	0100d140 	call	10100d14 <__mulsi3>
1010bf38:	d9c00517 	ldw	r7,20(sp)
1010bf3c:	da400317 	ldw	r9,12(sp)
1010bf40:	d8c00217 	ldw	r3,8(sp)
1010bf44:	3808d43a 	srli	r4,r7,16
1010bf48:	1245883a 	add	r2,r2,r9
1010bf4c:	da000417 	ldw	r8,16(sp)
1010bf50:	2085883a 	add	r2,r4,r2
1010bf54:	1240022e 	bgeu	r2,r9,1010bf60 <__divdf3+0x4b8>
1010bf58:	01000074 	movhi	r4,1
1010bf5c:	8121883a 	add	r16,r16,r4
1010bf60:	1008d43a 	srli	r4,r2,16
1010bf64:	1004943a 	slli	r2,r2,16
1010bf68:	39ffffcc 	andi	r7,r7,65535
1010bf6c:	2409883a 	add	r4,r4,r16
1010bf70:	11c5883a 	add	r2,r2,r7
1010bf74:	4100bb36 	bltu	r8,r4,1010c264 <__divdf3+0x7bc>
1010bf78:	4100d726 	beq	r8,r4,1010c2d8 <__divdf3+0x830>
1010bf7c:	4109c83a 	sub	r4,r8,r4
1010bf80:	a8a1c83a 	sub	r16,r21,r2
1010bf84:	ac2b803a 	cmpltu	r21,r21,r16
1010bf88:	256bc83a 	sub	r21,r4,r21
1010bf8c:	b540d926 	beq	r22,r21,1010c2f4 <__divdf3+0x84c>
1010bf90:	a00b883a 	mov	r5,r20
1010bf94:	a809883a 	mov	r4,r21
1010bf98:	d8c00215 	stw	r3,8(sp)
1010bf9c:	0100c580 	call	10100c58 <__udivsi3>
1010bfa0:	100b883a 	mov	r5,r2
1010bfa4:	9009883a 	mov	r4,r18
1010bfa8:	d8800515 	stw	r2,20(sp)
1010bfac:	0100d140 	call	10100d14 <__mulsi3>
1010bfb0:	a809883a 	mov	r4,r21
1010bfb4:	a00b883a 	mov	r5,r20
1010bfb8:	d8800415 	stw	r2,16(sp)
1010bfbc:	0100cbc0 	call	10100cbc <__umodsi3>
1010bfc0:	1004943a 	slli	r2,r2,16
1010bfc4:	8008d43a 	srli	r4,r16,16
1010bfc8:	da000417 	ldw	r8,16(sp)
1010bfcc:	d8c00217 	ldw	r3,8(sp)
1010bfd0:	2084b03a 	or	r2,r4,r2
1010bfd4:	d9c00517 	ldw	r7,20(sp)
1010bfd8:	1200062e 	bgeu	r2,r8,1010bff4 <__divdf3+0x54c>
1010bfdc:	1585883a 	add	r2,r2,r22
1010bfe0:	393fffc4 	addi	r4,r7,-1
1010bfe4:	1580c536 	bltu	r2,r22,1010c2fc <__divdf3+0x854>
1010bfe8:	1200c42e 	bgeu	r2,r8,1010c2fc <__divdf3+0x854>
1010bfec:	39ffff84 	addi	r7,r7,-2
1010bff0:	1585883a 	add	r2,r2,r22
1010bff4:	122bc83a 	sub	r21,r2,r8
1010bff8:	a00b883a 	mov	r5,r20
1010bffc:	a809883a 	mov	r4,r21
1010c000:	d8c00215 	stw	r3,8(sp)
1010c004:	d9c00515 	stw	r7,20(sp)
1010c008:	0100c580 	call	10100c58 <__udivsi3>
1010c00c:	9009883a 	mov	r4,r18
1010c010:	100b883a 	mov	r5,r2
1010c014:	d8800415 	stw	r2,16(sp)
1010c018:	0100d140 	call	10100d14 <__mulsi3>
1010c01c:	a809883a 	mov	r4,r21
1010c020:	a00b883a 	mov	r5,r20
1010c024:	1025883a 	mov	r18,r2
1010c028:	0100cbc0 	call	10100cbc <__umodsi3>
1010c02c:	1004943a 	slli	r2,r2,16
1010c030:	813fffcc 	andi	r4,r16,65535
1010c034:	d8c00217 	ldw	r3,8(sp)
1010c038:	20a0b03a 	or	r16,r4,r2
1010c03c:	d9c00517 	ldw	r7,20(sp)
1010c040:	da000417 	ldw	r8,16(sp)
1010c044:	8480062e 	bgeu	r16,r18,1010c060 <__divdf3+0x5b8>
1010c048:	85a1883a 	add	r16,r16,r22
1010c04c:	40bfffc4 	addi	r2,r8,-1
1010c050:	8580ac36 	bltu	r16,r22,1010c304 <__divdf3+0x85c>
1010c054:	8480ab2e 	bgeu	r16,r18,1010c304 <__divdf3+0x85c>
1010c058:	423fff84 	addi	r8,r8,-2
1010c05c:	85a1883a 	add	r16,r16,r22
1010c060:	3804943a 	slli	r2,r7,16
1010c064:	84a1c83a 	sub	r16,r16,r18
1010c068:	e009883a 	mov	r4,fp
1010c06c:	1228b03a 	or	r20,r2,r8
1010c070:	a1ffffcc 	andi	r7,r20,65535
1010c074:	a024d43a 	srli	r18,r20,16
1010c078:	380b883a 	mov	r5,r7
1010c07c:	d8c00215 	stw	r3,8(sp)
1010c080:	d9c00515 	stw	r7,20(sp)
1010c084:	0100d140 	call	10100d14 <__mulsi3>
1010c088:	900b883a 	mov	r5,r18
1010c08c:	e009883a 	mov	r4,fp
1010c090:	102b883a 	mov	r21,r2
1010c094:	0100d140 	call	10100d14 <__mulsi3>
1010c098:	900b883a 	mov	r5,r18
1010c09c:	b809883a 	mov	r4,r23
1010c0a0:	1039883a 	mov	fp,r2
1010c0a4:	0100d140 	call	10100d14 <__mulsi3>
1010c0a8:	d9c00517 	ldw	r7,20(sp)
1010c0ac:	b80b883a 	mov	r5,r23
1010c0b0:	1025883a 	mov	r18,r2
1010c0b4:	3809883a 	mov	r4,r7
1010c0b8:	0100d140 	call	10100d14 <__mulsi3>
1010c0bc:	a808d43a 	srli	r4,r21,16
1010c0c0:	1705883a 	add	r2,r2,fp
1010c0c4:	d8c00217 	ldw	r3,8(sp)
1010c0c8:	2085883a 	add	r2,r4,r2
1010c0cc:	1700022e 	bgeu	r2,fp,1010c0d8 <__divdf3+0x630>
1010c0d0:	01000074 	movhi	r4,1
1010c0d4:	9125883a 	add	r18,r18,r4
1010c0d8:	1008d43a 	srli	r4,r2,16
1010c0dc:	1004943a 	slli	r2,r2,16
1010c0e0:	ad7fffcc 	andi	r21,r21,65535
1010c0e4:	2489883a 	add	r4,r4,r18
1010c0e8:	1545883a 	add	r2,r2,r21
1010c0ec:	81003836 	bltu	r16,r4,1010c1d0 <__divdf3+0x728>
1010c0f0:	81003626 	beq	r16,r4,1010c1cc <__divdf3+0x724>
1010c0f4:	a5000054 	ori	r20,r20,1
1010c0f8:	1880ffc4 	addi	r2,r3,1023
1010c0fc:	00bf2e0e 	bge	zero,r2,1010bdb8 <__alt_data_end+0xfffebdb8>
1010c100:	a10001cc 	andi	r4,r20,7
1010c104:	20000726 	beq	r4,zero,1010c124 <__divdf3+0x67c>
1010c108:	a10003cc 	andi	r4,r20,15
1010c10c:	01400104 	movi	r5,4
1010c110:	21400426 	beq	r4,r5,1010c124 <__divdf3+0x67c>
1010c114:	a149883a 	add	r4,r20,r5
1010c118:	2529803a 	cmpltu	r20,r4,r20
1010c11c:	8d23883a 	add	r17,r17,r20
1010c120:	2029883a 	mov	r20,r4
1010c124:	8900402c 	andhi	r4,r17,256
1010c128:	20000426 	beq	r4,zero,1010c13c <__divdf3+0x694>
1010c12c:	18810004 	addi	r2,r3,1024
1010c130:	00ffc034 	movhi	r3,65280
1010c134:	18ffffc4 	addi	r3,r3,-1
1010c138:	88e2703a 	and	r17,r17,r3
1010c13c:	00c1ff84 	movi	r3,2046
1010c140:	18beb416 	blt	r3,r2,1010bc14 <__alt_data_end+0xfffebc14>
1010c144:	a028d0fa 	srli	r20,r20,3
1010c148:	882a977a 	slli	r21,r17,29
1010c14c:	8820927a 	slli	r16,r17,9
1010c150:	1081ffcc 	andi	r2,r2,2047
1010c154:	ad2ab03a 	or	r21,r21,r20
1010c158:	8020d33a 	srli	r16,r16,12
1010c15c:	9900004c 	andi	r4,r19,1
1010c160:	003eb006 	br	1010bc24 <__alt_data_end+0xfffebc24>
1010c164:	8080022c 	andhi	r2,r16,8
1010c168:	10001226 	beq	r2,zero,1010c1b4 <__divdf3+0x70c>
1010c16c:	8880022c 	andhi	r2,r17,8
1010c170:	1000101e 	bne	r2,zero,1010c1b4 <__divdf3+0x70c>
1010c174:	00800434 	movhi	r2,16
1010c178:	8c000234 	orhi	r16,r17,8
1010c17c:	10bfffc4 	addi	r2,r2,-1
1010c180:	b809883a 	mov	r4,r23
1010c184:	80a0703a 	and	r16,r16,r2
1010c188:	a02b883a 	mov	r21,r20
1010c18c:	003f0806 	br	1010bdb0 <__alt_data_end+0xfffebdb0>
1010c190:	008000c4 	movi	r2,3
1010c194:	3880b126 	beq	r7,r2,1010c45c <__divdf3+0x9b4>
1010c198:	00800044 	movi	r2,1
1010c19c:	38805b1e 	bne	r7,r2,1010c30c <__divdf3+0x864>
1010c1a0:	e009883a 	mov	r4,fp
1010c1a4:	0005883a 	mov	r2,zero
1010c1a8:	0021883a 	mov	r16,zero
1010c1ac:	002b883a 	mov	r21,zero
1010c1b0:	003e9c06 	br	1010bc24 <__alt_data_end+0xfffebc24>
1010c1b4:	00800434 	movhi	r2,16
1010c1b8:	84000234 	orhi	r16,r16,8
1010c1bc:	10bfffc4 	addi	r2,r2,-1
1010c1c0:	b009883a 	mov	r4,r22
1010c1c4:	80a0703a 	and	r16,r16,r2
1010c1c8:	003ef906 	br	1010bdb0 <__alt_data_end+0xfffebdb0>
1010c1cc:	103fca26 	beq	r2,zero,1010c0f8 <__alt_data_end+0xfffec0f8>
1010c1d0:	b421883a 	add	r16,r22,r16
1010c1d4:	a17fffc4 	addi	r5,r20,-1
1010c1d8:	8580422e 	bgeu	r16,r22,1010c2e4 <__divdf3+0x83c>
1010c1dc:	2829883a 	mov	r20,r5
1010c1e0:	813fc41e 	bne	r16,r4,1010c0f4 <__alt_data_end+0xfffec0f4>
1010c1e4:	d9800017 	ldw	r6,0(sp)
1010c1e8:	30bfc21e 	bne	r6,r2,1010c0f4 <__alt_data_end+0xfffec0f4>
1010c1ec:	003fc206 	br	1010c0f8 <__alt_data_end+0xfffec0f8>
1010c1f0:	143ff604 	addi	r16,r2,-40
1010c1f4:	8c20983a 	sll	r16,r17,r16
1010c1f8:	002b883a 	mov	r21,zero
1010c1fc:	003eb406 	br	1010bcd0 <__alt_data_end+0xfffebcd0>
1010c200:	d9800215 	stw	r6,8(sp)
1010c204:	d9c00515 	stw	r7,20(sp)
1010c208:	da000415 	stw	r8,16(sp)
1010c20c:	010da3c0 	call	1010da3c <__clzsi2>
1010c210:	10800804 	addi	r2,r2,32
1010c214:	da000417 	ldw	r8,16(sp)
1010c218:	d9c00517 	ldw	r7,20(sp)
1010c21c:	d9800217 	ldw	r6,8(sp)
1010c220:	003ea106 	br	1010bca8 <__alt_data_end+0xfffebca8>
1010c224:	147ff604 	addi	r17,r2,-40
1010c228:	3462983a 	sll	r17,r6,r17
1010c22c:	0029883a 	mov	r20,zero
1010c230:	003ec906 	br	1010bd58 <__alt_data_end+0xfffebd58>
1010c234:	3009883a 	mov	r4,r6
1010c238:	d9400115 	stw	r5,4(sp)
1010c23c:	d9800215 	stw	r6,8(sp)
1010c240:	da000415 	stw	r8,16(sp)
1010c244:	da400315 	stw	r9,12(sp)
1010c248:	010da3c0 	call	1010da3c <__clzsi2>
1010c24c:	10800804 	addi	r2,r2,32
1010c250:	da400317 	ldw	r9,12(sp)
1010c254:	da000417 	ldw	r8,16(sp)
1010c258:	d9800217 	ldw	r6,8(sp)
1010c25c:	d9400117 	ldw	r5,4(sp)
1010c260:	003eb306 	br	1010bd30 <__alt_data_end+0xfffebd30>
1010c264:	d9800017 	ldw	r6,0(sp)
1010c268:	a9ab883a 	add	r21,r21,r6
1010c26c:	a98b803a 	cmpltu	r5,r21,r6
1010c270:	2d8b883a 	add	r5,r5,r22
1010c274:	2a11883a 	add	r8,r5,r8
1010c278:	897fffc4 	addi	r5,r17,-1
1010c27c:	b2000c2e 	bgeu	r22,r8,1010c2b0 <__divdf3+0x808>
1010c280:	41003f36 	bltu	r8,r4,1010c380 <__divdf3+0x8d8>
1010c284:	22006c26 	beq	r4,r8,1010c438 <__divdf3+0x990>
1010c288:	4109c83a 	sub	r4,r8,r4
1010c28c:	2823883a 	mov	r17,r5
1010c290:	003f3b06 	br	1010bf80 <__alt_data_end+0xfffebf80>
1010c294:	ad3ed336 	bltu	r21,r20,1010bde4 <__alt_data_end+0xfffebde4>
1010c298:	a804d07a 	srli	r2,r21,1
1010c29c:	802e97fa 	slli	r23,r16,31
1010c2a0:	a82a97fa 	slli	r21,r21,31
1010c2a4:	8020d07a 	srli	r16,r16,1
1010c2a8:	b8aeb03a 	or	r23,r23,r2
1010c2ac:	003ed006 	br	1010bdf0 <__alt_data_end+0xfffebdf0>
1010c2b0:	b23ff51e 	bne	r22,r8,1010c288 <__alt_data_end+0xfffec288>
1010c2b4:	d9800017 	ldw	r6,0(sp)
1010c2b8:	a9bff12e 	bgeu	r21,r6,1010c280 <__alt_data_end+0xfffec280>
1010c2bc:	b109c83a 	sub	r4,r22,r4
1010c2c0:	2823883a 	mov	r17,r5
1010c2c4:	003f2e06 	br	1010bf80 <__alt_data_end+0xfffebf80>
1010c2c8:	2021883a 	mov	r16,r4
1010c2cc:	003eff06 	br	1010becc <__alt_data_end+0xfffebecc>
1010c2d0:	2023883a 	mov	r17,r4
1010c2d4:	003ee406 	br	1010be68 <__alt_data_end+0xfffebe68>
1010c2d8:	a8bfe236 	bltu	r21,r2,1010c264 <__alt_data_end+0xfffec264>
1010c2dc:	0009883a 	mov	r4,zero
1010c2e0:	003f2706 	br	1010bf80 <__alt_data_end+0xfffebf80>
1010c2e4:	81002d36 	bltu	r16,r4,1010c39c <__divdf3+0x8f4>
1010c2e8:	24005626 	beq	r4,r16,1010c444 <__divdf3+0x99c>
1010c2ec:	2829883a 	mov	r20,r5
1010c2f0:	003f8006 	br	1010c0f4 <__alt_data_end+0xfffec0f4>
1010c2f4:	053fffc4 	movi	r20,-1
1010c2f8:	003f7f06 	br	1010c0f8 <__alt_data_end+0xfffec0f8>
1010c2fc:	200f883a 	mov	r7,r4
1010c300:	003f3c06 	br	1010bff4 <__alt_data_end+0xfffebff4>
1010c304:	1011883a 	mov	r8,r2
1010c308:	003f5506 	br	1010c060 <__alt_data_end+0xfffec060>
1010c30c:	e027883a 	mov	r19,fp
1010c310:	003f7906 	br	1010c0f8 <__alt_data_end+0xfffec0f8>
1010c314:	010007c4 	movi	r4,31
1010c318:	20c02816 	blt	r4,r3,1010c3bc <__divdf3+0x914>
1010c31c:	00800804 	movi	r2,32
1010c320:	10c5c83a 	sub	r2,r2,r3
1010c324:	888a983a 	sll	r5,r17,r2
1010c328:	a0c8d83a 	srl	r4,r20,r3
1010c32c:	a084983a 	sll	r2,r20,r2
1010c330:	88e2d83a 	srl	r17,r17,r3
1010c334:	2906b03a 	or	r3,r5,r4
1010c338:	1004c03a 	cmpne	r2,r2,zero
1010c33c:	1886b03a 	or	r3,r3,r2
1010c340:	188001cc 	andi	r2,r3,7
1010c344:	10000726 	beq	r2,zero,1010c364 <__divdf3+0x8bc>
1010c348:	188003cc 	andi	r2,r3,15
1010c34c:	01000104 	movi	r4,4
1010c350:	11000426 	beq	r2,r4,1010c364 <__divdf3+0x8bc>
1010c354:	1805883a 	mov	r2,r3
1010c358:	10c00104 	addi	r3,r2,4
1010c35c:	1885803a 	cmpltu	r2,r3,r2
1010c360:	88a3883a 	add	r17,r17,r2
1010c364:	8880202c 	andhi	r2,r17,128
1010c368:	10002926 	beq	r2,zero,1010c410 <__divdf3+0x968>
1010c36c:	9900004c 	andi	r4,r19,1
1010c370:	00800044 	movi	r2,1
1010c374:	0021883a 	mov	r16,zero
1010c378:	002b883a 	mov	r21,zero
1010c37c:	003e2906 	br	1010bc24 <__alt_data_end+0xfffebc24>
1010c380:	d9800017 	ldw	r6,0(sp)
1010c384:	8c7fff84 	addi	r17,r17,-2
1010c388:	a9ab883a 	add	r21,r21,r6
1010c38c:	a98b803a 	cmpltu	r5,r21,r6
1010c390:	2d8b883a 	add	r5,r5,r22
1010c394:	2a11883a 	add	r8,r5,r8
1010c398:	003ef806 	br	1010bf7c <__alt_data_end+0xfffebf7c>
1010c39c:	d9800017 	ldw	r6,0(sp)
1010c3a0:	318f883a 	add	r7,r6,r6
1010c3a4:	398b803a 	cmpltu	r5,r7,r6
1010c3a8:	2d8d883a 	add	r6,r5,r22
1010c3ac:	81a1883a 	add	r16,r16,r6
1010c3b0:	a17fff84 	addi	r5,r20,-2
1010c3b4:	d9c00015 	stw	r7,0(sp)
1010c3b8:	003f8806 	br	1010c1dc <__alt_data_end+0xfffec1dc>
1010c3bc:	013ff844 	movi	r4,-31
1010c3c0:	2085c83a 	sub	r2,r4,r2
1010c3c4:	8888d83a 	srl	r4,r17,r2
1010c3c8:	00800804 	movi	r2,32
1010c3cc:	18802126 	beq	r3,r2,1010c454 <__divdf3+0x9ac>
1010c3d0:	04001004 	movi	r16,64
1010c3d4:	80c7c83a 	sub	r3,r16,r3
1010c3d8:	88e0983a 	sll	r16,r17,r3
1010c3dc:	8504b03a 	or	r2,r16,r20
1010c3e0:	1004c03a 	cmpne	r2,r2,zero
1010c3e4:	2084b03a 	or	r2,r4,r2
1010c3e8:	144001cc 	andi	r17,r2,7
1010c3ec:	88000d1e 	bne	r17,zero,1010c424 <__divdf3+0x97c>
1010c3f0:	0021883a 	mov	r16,zero
1010c3f4:	102ad0fa 	srli	r21,r2,3
1010c3f8:	9900004c 	andi	r4,r19,1
1010c3fc:	0005883a 	mov	r2,zero
1010c400:	ac6ab03a 	or	r21,r21,r17
1010c404:	003e0706 	br	1010bc24 <__alt_data_end+0xfffebc24>
1010c408:	1007883a 	mov	r3,r2
1010c40c:	0023883a 	mov	r17,zero
1010c410:	8820927a 	slli	r16,r17,9
1010c414:	1805883a 	mov	r2,r3
1010c418:	8822977a 	slli	r17,r17,29
1010c41c:	8020d33a 	srli	r16,r16,12
1010c420:	003ff406 	br	1010c3f4 <__alt_data_end+0xfffec3f4>
1010c424:	10c003cc 	andi	r3,r2,15
1010c428:	01000104 	movi	r4,4
1010c42c:	193ff626 	beq	r3,r4,1010c408 <__alt_data_end+0xfffec408>
1010c430:	0023883a 	mov	r17,zero
1010c434:	003fc806 	br	1010c358 <__alt_data_end+0xfffec358>
1010c438:	a8bfd136 	bltu	r21,r2,1010c380 <__alt_data_end+0xfffec380>
1010c43c:	2823883a 	mov	r17,r5
1010c440:	003fa606 	br	1010c2dc <__alt_data_end+0xfffec2dc>
1010c444:	d9800017 	ldw	r6,0(sp)
1010c448:	30bfd436 	bltu	r6,r2,1010c39c <__alt_data_end+0xfffec39c>
1010c44c:	2829883a 	mov	r20,r5
1010c450:	003f6406 	br	1010c1e4 <__alt_data_end+0xfffec1e4>
1010c454:	0021883a 	mov	r16,zero
1010c458:	003fe006 	br	1010c3dc <__alt_data_end+0xfffec3dc>
1010c45c:	00800434 	movhi	r2,16
1010c460:	8c000234 	orhi	r16,r17,8
1010c464:	10bfffc4 	addi	r2,r2,-1
1010c468:	e009883a 	mov	r4,fp
1010c46c:	80a0703a 	and	r16,r16,r2
1010c470:	a02b883a 	mov	r21,r20
1010c474:	003e4e06 	br	1010bdb0 <__alt_data_end+0xfffebdb0>

1010c478 <__eqdf2>:
1010c478:	2804d53a 	srli	r2,r5,20
1010c47c:	3806d53a 	srli	r3,r7,20
1010c480:	02000434 	movhi	r8,16
1010c484:	423fffc4 	addi	r8,r8,-1
1010c488:	1081ffcc 	andi	r2,r2,2047
1010c48c:	0281ffc4 	movi	r10,2047
1010c490:	2a12703a 	and	r9,r5,r8
1010c494:	18c1ffcc 	andi	r3,r3,2047
1010c498:	3a10703a 	and	r8,r7,r8
1010c49c:	280ad7fa 	srli	r5,r5,31
1010c4a0:	380ed7fa 	srli	r7,r7,31
1010c4a4:	12801026 	beq	r2,r10,1010c4e8 <__eqdf2+0x70>
1010c4a8:	0281ffc4 	movi	r10,2047
1010c4ac:	1a800a26 	beq	r3,r10,1010c4d8 <__eqdf2+0x60>
1010c4b0:	10c00226 	beq	r2,r3,1010c4bc <__eqdf2+0x44>
1010c4b4:	00800044 	movi	r2,1
1010c4b8:	f800283a 	ret
1010c4bc:	4a3ffd1e 	bne	r9,r8,1010c4b4 <__alt_data_end+0xfffec4b4>
1010c4c0:	21bffc1e 	bne	r4,r6,1010c4b4 <__alt_data_end+0xfffec4b4>
1010c4c4:	29c00c26 	beq	r5,r7,1010c4f8 <__eqdf2+0x80>
1010c4c8:	103ffa1e 	bne	r2,zero,1010c4b4 <__alt_data_end+0xfffec4b4>
1010c4cc:	2244b03a 	or	r2,r4,r9
1010c4d0:	1004c03a 	cmpne	r2,r2,zero
1010c4d4:	f800283a 	ret
1010c4d8:	3214b03a 	or	r10,r6,r8
1010c4dc:	503ff426 	beq	r10,zero,1010c4b0 <__alt_data_end+0xfffec4b0>
1010c4e0:	00800044 	movi	r2,1
1010c4e4:	f800283a 	ret
1010c4e8:	2254b03a 	or	r10,r4,r9
1010c4ec:	503fee26 	beq	r10,zero,1010c4a8 <__alt_data_end+0xfffec4a8>
1010c4f0:	00800044 	movi	r2,1
1010c4f4:	f800283a 	ret
1010c4f8:	0005883a 	mov	r2,zero
1010c4fc:	f800283a 	ret

1010c500 <__gedf2>:
1010c500:	2804d53a 	srli	r2,r5,20
1010c504:	3806d53a 	srli	r3,r7,20
1010c508:	02000434 	movhi	r8,16
1010c50c:	423fffc4 	addi	r8,r8,-1
1010c510:	1081ffcc 	andi	r2,r2,2047
1010c514:	0241ffc4 	movi	r9,2047
1010c518:	2a14703a 	and	r10,r5,r8
1010c51c:	18c1ffcc 	andi	r3,r3,2047
1010c520:	3a10703a 	and	r8,r7,r8
1010c524:	280ad7fa 	srli	r5,r5,31
1010c528:	380ed7fa 	srli	r7,r7,31
1010c52c:	12401d26 	beq	r2,r9,1010c5a4 <__gedf2+0xa4>
1010c530:	0241ffc4 	movi	r9,2047
1010c534:	1a401226 	beq	r3,r9,1010c580 <__gedf2+0x80>
1010c538:	1000081e 	bne	r2,zero,1010c55c <__gedf2+0x5c>
1010c53c:	2296b03a 	or	r11,r4,r10
1010c540:	5813003a 	cmpeq	r9,r11,zero
1010c544:	1800091e 	bne	r3,zero,1010c56c <__gedf2+0x6c>
1010c548:	3218b03a 	or	r12,r6,r8
1010c54c:	6000071e 	bne	r12,zero,1010c56c <__gedf2+0x6c>
1010c550:	0005883a 	mov	r2,zero
1010c554:	5800101e 	bne	r11,zero,1010c598 <__gedf2+0x98>
1010c558:	f800283a 	ret
1010c55c:	18000c1e 	bne	r3,zero,1010c590 <__gedf2+0x90>
1010c560:	3212b03a 	or	r9,r6,r8
1010c564:	48000c26 	beq	r9,zero,1010c598 <__gedf2+0x98>
1010c568:	0013883a 	mov	r9,zero
1010c56c:	39c03fcc 	andi	r7,r7,255
1010c570:	48000826 	beq	r9,zero,1010c594 <__gedf2+0x94>
1010c574:	38000926 	beq	r7,zero,1010c59c <__gedf2+0x9c>
1010c578:	00800044 	movi	r2,1
1010c57c:	f800283a 	ret
1010c580:	3212b03a 	or	r9,r6,r8
1010c584:	483fec26 	beq	r9,zero,1010c538 <__alt_data_end+0xfffec538>
1010c588:	00bfff84 	movi	r2,-2
1010c58c:	f800283a 	ret
1010c590:	39c03fcc 	andi	r7,r7,255
1010c594:	29c00626 	beq	r5,r7,1010c5b0 <__gedf2+0xb0>
1010c598:	283ff726 	beq	r5,zero,1010c578 <__alt_data_end+0xfffec578>
1010c59c:	00bfffc4 	movi	r2,-1
1010c5a0:	f800283a 	ret
1010c5a4:	2292b03a 	or	r9,r4,r10
1010c5a8:	483fe126 	beq	r9,zero,1010c530 <__alt_data_end+0xfffec530>
1010c5ac:	003ff606 	br	1010c588 <__alt_data_end+0xfffec588>
1010c5b0:	18bff916 	blt	r3,r2,1010c598 <__alt_data_end+0xfffec598>
1010c5b4:	10c00316 	blt	r2,r3,1010c5c4 <__gedf2+0xc4>
1010c5b8:	42bff736 	bltu	r8,r10,1010c598 <__alt_data_end+0xfffec598>
1010c5bc:	52000326 	beq	r10,r8,1010c5cc <__gedf2+0xcc>
1010c5c0:	5200042e 	bgeu	r10,r8,1010c5d4 <__gedf2+0xd4>
1010c5c4:	283fec1e 	bne	r5,zero,1010c578 <__alt_data_end+0xfffec578>
1010c5c8:	003ff406 	br	1010c59c <__alt_data_end+0xfffec59c>
1010c5cc:	313ff236 	bltu	r6,r4,1010c598 <__alt_data_end+0xfffec598>
1010c5d0:	21bffc36 	bltu	r4,r6,1010c5c4 <__alt_data_end+0xfffec5c4>
1010c5d4:	0005883a 	mov	r2,zero
1010c5d8:	f800283a 	ret

1010c5dc <__ledf2>:
1010c5dc:	2804d53a 	srli	r2,r5,20
1010c5e0:	3810d53a 	srli	r8,r7,20
1010c5e4:	00c00434 	movhi	r3,16
1010c5e8:	18ffffc4 	addi	r3,r3,-1
1010c5ec:	1081ffcc 	andi	r2,r2,2047
1010c5f0:	0241ffc4 	movi	r9,2047
1010c5f4:	28d4703a 	and	r10,r5,r3
1010c5f8:	4201ffcc 	andi	r8,r8,2047
1010c5fc:	38c6703a 	and	r3,r7,r3
1010c600:	280ad7fa 	srli	r5,r5,31
1010c604:	380ed7fa 	srli	r7,r7,31
1010c608:	12401f26 	beq	r2,r9,1010c688 <__ledf2+0xac>
1010c60c:	0241ffc4 	movi	r9,2047
1010c610:	42401426 	beq	r8,r9,1010c664 <__ledf2+0x88>
1010c614:	1000091e 	bne	r2,zero,1010c63c <__ledf2+0x60>
1010c618:	2296b03a 	or	r11,r4,r10
1010c61c:	5813003a 	cmpeq	r9,r11,zero
1010c620:	29403fcc 	andi	r5,r5,255
1010c624:	40000a1e 	bne	r8,zero,1010c650 <__ledf2+0x74>
1010c628:	30d8b03a 	or	r12,r6,r3
1010c62c:	6000081e 	bne	r12,zero,1010c650 <__ledf2+0x74>
1010c630:	0005883a 	mov	r2,zero
1010c634:	5800111e 	bne	r11,zero,1010c67c <__ledf2+0xa0>
1010c638:	f800283a 	ret
1010c63c:	29403fcc 	andi	r5,r5,255
1010c640:	40000c1e 	bne	r8,zero,1010c674 <__ledf2+0x98>
1010c644:	30d2b03a 	or	r9,r6,r3
1010c648:	48000c26 	beq	r9,zero,1010c67c <__ledf2+0xa0>
1010c64c:	0013883a 	mov	r9,zero
1010c650:	39c03fcc 	andi	r7,r7,255
1010c654:	48000826 	beq	r9,zero,1010c678 <__ledf2+0x9c>
1010c658:	38001126 	beq	r7,zero,1010c6a0 <__ledf2+0xc4>
1010c65c:	00800044 	movi	r2,1
1010c660:	f800283a 	ret
1010c664:	30d2b03a 	or	r9,r6,r3
1010c668:	483fea26 	beq	r9,zero,1010c614 <__alt_data_end+0xfffec614>
1010c66c:	00800084 	movi	r2,2
1010c670:	f800283a 	ret
1010c674:	39c03fcc 	andi	r7,r7,255
1010c678:	39400726 	beq	r7,r5,1010c698 <__ledf2+0xbc>
1010c67c:	2800081e 	bne	r5,zero,1010c6a0 <__ledf2+0xc4>
1010c680:	00800044 	movi	r2,1
1010c684:	f800283a 	ret
1010c688:	2292b03a 	or	r9,r4,r10
1010c68c:	483fdf26 	beq	r9,zero,1010c60c <__alt_data_end+0xfffec60c>
1010c690:	00800084 	movi	r2,2
1010c694:	f800283a 	ret
1010c698:	4080030e 	bge	r8,r2,1010c6a8 <__ledf2+0xcc>
1010c69c:	383fef26 	beq	r7,zero,1010c65c <__alt_data_end+0xfffec65c>
1010c6a0:	00bfffc4 	movi	r2,-1
1010c6a4:	f800283a 	ret
1010c6a8:	123feb16 	blt	r2,r8,1010c658 <__alt_data_end+0xfffec658>
1010c6ac:	1abff336 	bltu	r3,r10,1010c67c <__alt_data_end+0xfffec67c>
1010c6b0:	50c00326 	beq	r10,r3,1010c6c0 <__ledf2+0xe4>
1010c6b4:	50c0042e 	bgeu	r10,r3,1010c6c8 <__ledf2+0xec>
1010c6b8:	283fe81e 	bne	r5,zero,1010c65c <__alt_data_end+0xfffec65c>
1010c6bc:	003ff806 	br	1010c6a0 <__alt_data_end+0xfffec6a0>
1010c6c0:	313fee36 	bltu	r6,r4,1010c67c <__alt_data_end+0xfffec67c>
1010c6c4:	21bffc36 	bltu	r4,r6,1010c6b8 <__alt_data_end+0xfffec6b8>
1010c6c8:	0005883a 	mov	r2,zero
1010c6cc:	f800283a 	ret

1010c6d0 <__muldf3>:
1010c6d0:	deffee04 	addi	sp,sp,-72
1010c6d4:	dd000c15 	stw	r20,48(sp)
1010c6d8:	2828d53a 	srli	r20,r5,20
1010c6dc:	ddc00f15 	stw	r23,60(sp)
1010c6e0:	282ed7fa 	srli	r23,r5,31
1010c6e4:	dc000815 	stw	r16,32(sp)
1010c6e8:	04000434 	movhi	r16,16
1010c6ec:	dcc00b15 	stw	r19,44(sp)
1010c6f0:	843fffc4 	addi	r16,r16,-1
1010c6f4:	dfc01115 	stw	ra,68(sp)
1010c6f8:	df001015 	stw	fp,64(sp)
1010c6fc:	dd800e15 	stw	r22,56(sp)
1010c700:	dd400d15 	stw	r21,52(sp)
1010c704:	dc800a15 	stw	r18,40(sp)
1010c708:	dc400915 	stw	r17,36(sp)
1010c70c:	a501ffcc 	andi	r20,r20,2047
1010c710:	2c20703a 	and	r16,r5,r16
1010c714:	b827883a 	mov	r19,r23
1010c718:	ba403fcc 	andi	r9,r23,255
1010c71c:	a0006026 	beq	r20,zero,1010c8a0 <__muldf3+0x1d0>
1010c720:	0081ffc4 	movi	r2,2047
1010c724:	202d883a 	mov	r22,r4
1010c728:	a0803626 	beq	r20,r2,1010c804 <__muldf3+0x134>
1010c72c:	84000434 	orhi	r16,r16,16
1010c730:	200ad77a 	srli	r5,r4,29
1010c734:	800490fa 	slli	r2,r16,3
1010c738:	202c90fa 	slli	r22,r4,3
1010c73c:	a53f0044 	addi	r20,r20,-1023
1010c740:	28a0b03a 	or	r16,r5,r2
1010c744:	002b883a 	mov	r21,zero
1010c748:	000b883a 	mov	r5,zero
1010c74c:	3804d53a 	srli	r2,r7,20
1010c750:	3838d7fa 	srli	fp,r7,31
1010c754:	04400434 	movhi	r17,16
1010c758:	8c7fffc4 	addi	r17,r17,-1
1010c75c:	1081ffcc 	andi	r2,r2,2047
1010c760:	3025883a 	mov	r18,r6
1010c764:	3c62703a 	and	r17,r7,r17
1010c768:	e2803fcc 	andi	r10,fp,255
1010c76c:	10006d26 	beq	r2,zero,1010c924 <__muldf3+0x254>
1010c770:	00c1ffc4 	movi	r3,2047
1010c774:	10c06526 	beq	r2,r3,1010c90c <__muldf3+0x23c>
1010c778:	8c400434 	orhi	r17,r17,16
1010c77c:	300ed77a 	srli	r7,r6,29
1010c780:	880690fa 	slli	r3,r17,3
1010c784:	302490fa 	slli	r18,r6,3
1010c788:	10bf0044 	addi	r2,r2,-1023
1010c78c:	38e2b03a 	or	r17,r7,r3
1010c790:	000f883a 	mov	r7,zero
1010c794:	a087883a 	add	r3,r20,r2
1010c798:	010003c4 	movi	r4,15
1010c79c:	3d44b03a 	or	r2,r7,r21
1010c7a0:	e5ccf03a 	xor	r6,fp,r23
1010c7a4:	1a000044 	addi	r8,r3,1
1010c7a8:	20809b36 	bltu	r4,r2,1010ca18 <__muldf3+0x348>
1010c7ac:	100490ba 	slli	r2,r2,2
1010c7b0:	01040474 	movhi	r4,4113
1010c7b4:	2131f104 	addi	r4,r4,-14396
1010c7b8:	1105883a 	add	r2,r2,r4
1010c7bc:	10800017 	ldw	r2,0(r2)
1010c7c0:	1000683a 	jmp	r2
1010c7c4:	1010ca18 	cmpnei	zero,r2,17192
1010c7c8:	1010c824 	muli	zero,r2,17184
1010c7cc:	1010c824 	muli	zero,r2,17184
1010c7d0:	1010c820 	cmpeqi	zero,r2,17184
1010c7d4:	1010c9f4 	orhi	zero,r2,17191
1010c7d8:	1010c9f4 	orhi	zero,r2,17191
1010c7dc:	1010c9dc 	xori	zero,r2,17191
1010c7e0:	1010c820 	cmpeqi	zero,r2,17184
1010c7e4:	1010c9f4 	orhi	zero,r2,17191
1010c7e8:	1010c9dc 	xori	zero,r2,17191
1010c7ec:	1010c9f4 	orhi	zero,r2,17191
1010c7f0:	1010c820 	cmpeqi	zero,r2,17184
1010c7f4:	1010ca04 	addi	zero,r2,17192
1010c7f8:	1010ca04 	addi	zero,r2,17192
1010c7fc:	1010ca04 	addi	zero,r2,17192
1010c800:	1010cd64 	muli	zero,r2,17205
1010c804:	2404b03a 	or	r2,r4,r16
1010c808:	1000711e 	bne	r2,zero,1010c9d0 <__muldf3+0x300>
1010c80c:	05400204 	movi	r21,8
1010c810:	0021883a 	mov	r16,zero
1010c814:	002d883a 	mov	r22,zero
1010c818:	01400084 	movi	r5,2
1010c81c:	003fcb06 	br	1010c74c <__alt_data_end+0xfffec74c>
1010c820:	500d883a 	mov	r6,r10
1010c824:	00800084 	movi	r2,2
1010c828:	38805926 	beq	r7,r2,1010c990 <__muldf3+0x2c0>
1010c82c:	008000c4 	movi	r2,3
1010c830:	3881bb26 	beq	r7,r2,1010cf20 <__muldf3+0x850>
1010c834:	00800044 	movi	r2,1
1010c838:	3881961e 	bne	r7,r2,1010ce94 <__muldf3+0x7c4>
1010c83c:	3027883a 	mov	r19,r6
1010c840:	0005883a 	mov	r2,zero
1010c844:	0021883a 	mov	r16,zero
1010c848:	002d883a 	mov	r22,zero
1010c84c:	1004953a 	slli	r2,r2,20
1010c850:	98c03fcc 	andi	r3,r19,255
1010c854:	04400434 	movhi	r17,16
1010c858:	8c7fffc4 	addi	r17,r17,-1
1010c85c:	180697fa 	slli	r3,r3,31
1010c860:	8460703a 	and	r16,r16,r17
1010c864:	80a0b03a 	or	r16,r16,r2
1010c868:	80c6b03a 	or	r3,r16,r3
1010c86c:	b005883a 	mov	r2,r22
1010c870:	dfc01117 	ldw	ra,68(sp)
1010c874:	df001017 	ldw	fp,64(sp)
1010c878:	ddc00f17 	ldw	r23,60(sp)
1010c87c:	dd800e17 	ldw	r22,56(sp)
1010c880:	dd400d17 	ldw	r21,52(sp)
1010c884:	dd000c17 	ldw	r20,48(sp)
1010c888:	dcc00b17 	ldw	r19,44(sp)
1010c88c:	dc800a17 	ldw	r18,40(sp)
1010c890:	dc400917 	ldw	r17,36(sp)
1010c894:	dc000817 	ldw	r16,32(sp)
1010c898:	dec01204 	addi	sp,sp,72
1010c89c:	f800283a 	ret
1010c8a0:	2404b03a 	or	r2,r4,r16
1010c8a4:	202b883a 	mov	r21,r4
1010c8a8:	10004426 	beq	r2,zero,1010c9bc <__muldf3+0x2ec>
1010c8ac:	80015126 	beq	r16,zero,1010cdf4 <__muldf3+0x724>
1010c8b0:	8009883a 	mov	r4,r16
1010c8b4:	d9800715 	stw	r6,28(sp)
1010c8b8:	d9c00215 	stw	r7,8(sp)
1010c8bc:	da400415 	stw	r9,16(sp)
1010c8c0:	010da3c0 	call	1010da3c <__clzsi2>
1010c8c4:	d9800717 	ldw	r6,28(sp)
1010c8c8:	d9c00217 	ldw	r7,8(sp)
1010c8cc:	da400417 	ldw	r9,16(sp)
1010c8d0:	113ffd44 	addi	r4,r2,-11
1010c8d4:	00c00704 	movi	r3,28
1010c8d8:	19014216 	blt	r3,r4,1010cde4 <__muldf3+0x714>
1010c8dc:	00c00744 	movi	r3,29
1010c8e0:	15bffe04 	addi	r22,r2,-8
1010c8e4:	1907c83a 	sub	r3,r3,r4
1010c8e8:	85a0983a 	sll	r16,r16,r22
1010c8ec:	a8c6d83a 	srl	r3,r21,r3
1010c8f0:	adac983a 	sll	r22,r21,r22
1010c8f4:	1c20b03a 	or	r16,r3,r16
1010c8f8:	1080fcc4 	addi	r2,r2,1011
1010c8fc:	00a9c83a 	sub	r20,zero,r2
1010c900:	002b883a 	mov	r21,zero
1010c904:	000b883a 	mov	r5,zero
1010c908:	003f9006 	br	1010c74c <__alt_data_end+0xfffec74c>
1010c90c:	3446b03a 	or	r3,r6,r17
1010c910:	1800281e 	bne	r3,zero,1010c9b4 <__muldf3+0x2e4>
1010c914:	0023883a 	mov	r17,zero
1010c918:	0025883a 	mov	r18,zero
1010c91c:	01c00084 	movi	r7,2
1010c920:	003f9c06 	br	1010c794 <__alt_data_end+0xfffec794>
1010c924:	3446b03a 	or	r3,r6,r17
1010c928:	18001e26 	beq	r3,zero,1010c9a4 <__muldf3+0x2d4>
1010c92c:	88012126 	beq	r17,zero,1010cdb4 <__muldf3+0x6e4>
1010c930:	8809883a 	mov	r4,r17
1010c934:	d9400215 	stw	r5,8(sp)
1010c938:	d9800715 	stw	r6,28(sp)
1010c93c:	da400415 	stw	r9,16(sp)
1010c940:	da800315 	stw	r10,12(sp)
1010c944:	010da3c0 	call	1010da3c <__clzsi2>
1010c948:	d9400217 	ldw	r5,8(sp)
1010c94c:	d9800717 	ldw	r6,28(sp)
1010c950:	da400417 	ldw	r9,16(sp)
1010c954:	da800317 	ldw	r10,12(sp)
1010c958:	113ffd44 	addi	r4,r2,-11
1010c95c:	00c00704 	movi	r3,28
1010c960:	19011016 	blt	r3,r4,1010cda4 <__muldf3+0x6d4>
1010c964:	00c00744 	movi	r3,29
1010c968:	14bffe04 	addi	r18,r2,-8
1010c96c:	1907c83a 	sub	r3,r3,r4
1010c970:	8ca2983a 	sll	r17,r17,r18
1010c974:	30c6d83a 	srl	r3,r6,r3
1010c978:	34a4983a 	sll	r18,r6,r18
1010c97c:	1c62b03a 	or	r17,r3,r17
1010c980:	1080fcc4 	addi	r2,r2,1011
1010c984:	0085c83a 	sub	r2,zero,r2
1010c988:	000f883a 	mov	r7,zero
1010c98c:	003f8106 	br	1010c794 <__alt_data_end+0xfffec794>
1010c990:	3027883a 	mov	r19,r6
1010c994:	0081ffc4 	movi	r2,2047
1010c998:	0021883a 	mov	r16,zero
1010c99c:	002d883a 	mov	r22,zero
1010c9a0:	003faa06 	br	1010c84c <__alt_data_end+0xfffec84c>
1010c9a4:	0023883a 	mov	r17,zero
1010c9a8:	0025883a 	mov	r18,zero
1010c9ac:	01c00044 	movi	r7,1
1010c9b0:	003f7806 	br	1010c794 <__alt_data_end+0xfffec794>
1010c9b4:	01c000c4 	movi	r7,3
1010c9b8:	003f7606 	br	1010c794 <__alt_data_end+0xfffec794>
1010c9bc:	05400104 	movi	r21,4
1010c9c0:	0021883a 	mov	r16,zero
1010c9c4:	002d883a 	mov	r22,zero
1010c9c8:	01400044 	movi	r5,1
1010c9cc:	003f5f06 	br	1010c74c <__alt_data_end+0xfffec74c>
1010c9d0:	05400304 	movi	r21,12
1010c9d4:	014000c4 	movi	r5,3
1010c9d8:	003f5c06 	br	1010c74c <__alt_data_end+0xfffec74c>
1010c9dc:	04000434 	movhi	r16,16
1010c9e0:	0027883a 	mov	r19,zero
1010c9e4:	843fffc4 	addi	r16,r16,-1
1010c9e8:	05bfffc4 	movi	r22,-1
1010c9ec:	0081ffc4 	movi	r2,2047
1010c9f0:	003f9606 	br	1010c84c <__alt_data_end+0xfffec84c>
1010c9f4:	8023883a 	mov	r17,r16
1010c9f8:	b025883a 	mov	r18,r22
1010c9fc:	280f883a 	mov	r7,r5
1010ca00:	003f8806 	br	1010c824 <__alt_data_end+0xfffec824>
1010ca04:	8023883a 	mov	r17,r16
1010ca08:	b025883a 	mov	r18,r22
1010ca0c:	480d883a 	mov	r6,r9
1010ca10:	280f883a 	mov	r7,r5
1010ca14:	003f8306 	br	1010c824 <__alt_data_end+0xfffec824>
1010ca18:	b026d43a 	srli	r19,r22,16
1010ca1c:	902ed43a 	srli	r23,r18,16
1010ca20:	b5bfffcc 	andi	r22,r22,65535
1010ca24:	94bfffcc 	andi	r18,r18,65535
1010ca28:	b00b883a 	mov	r5,r22
1010ca2c:	9009883a 	mov	r4,r18
1010ca30:	d8c00515 	stw	r3,20(sp)
1010ca34:	d9800715 	stw	r6,28(sp)
1010ca38:	da000615 	stw	r8,24(sp)
1010ca3c:	0100d140 	call	10100d14 <__mulsi3>
1010ca40:	980b883a 	mov	r5,r19
1010ca44:	9009883a 	mov	r4,r18
1010ca48:	1029883a 	mov	r20,r2
1010ca4c:	0100d140 	call	10100d14 <__mulsi3>
1010ca50:	b80b883a 	mov	r5,r23
1010ca54:	9809883a 	mov	r4,r19
1010ca58:	102b883a 	mov	r21,r2
1010ca5c:	0100d140 	call	10100d14 <__mulsi3>
1010ca60:	b809883a 	mov	r4,r23
1010ca64:	b00b883a 	mov	r5,r22
1010ca68:	1039883a 	mov	fp,r2
1010ca6c:	0100d140 	call	10100d14 <__mulsi3>
1010ca70:	a008d43a 	srli	r4,r20,16
1010ca74:	1545883a 	add	r2,r2,r21
1010ca78:	d8c00517 	ldw	r3,20(sp)
1010ca7c:	2085883a 	add	r2,r4,r2
1010ca80:	d9800717 	ldw	r6,28(sp)
1010ca84:	da000617 	ldw	r8,24(sp)
1010ca88:	1540022e 	bgeu	r2,r21,1010ca94 <__muldf3+0x3c4>
1010ca8c:	01000074 	movhi	r4,1
1010ca90:	e139883a 	add	fp,fp,r4
1010ca94:	100e943a 	slli	r7,r2,16
1010ca98:	1004d43a 	srli	r2,r2,16
1010ca9c:	882ad43a 	srli	r21,r17,16
1010caa0:	a53fffcc 	andi	r20,r20,65535
1010caa4:	8c7fffcc 	andi	r17,r17,65535
1010caa8:	3d29883a 	add	r20,r7,r20
1010caac:	b00b883a 	mov	r5,r22
1010cab0:	8809883a 	mov	r4,r17
1010cab4:	d8c00515 	stw	r3,20(sp)
1010cab8:	d9800715 	stw	r6,28(sp)
1010cabc:	da000615 	stw	r8,24(sp)
1010cac0:	dd000115 	stw	r20,4(sp)
1010cac4:	d8800015 	stw	r2,0(sp)
1010cac8:	0100d140 	call	10100d14 <__mulsi3>
1010cacc:	980b883a 	mov	r5,r19
1010cad0:	8809883a 	mov	r4,r17
1010cad4:	d8800215 	stw	r2,8(sp)
1010cad8:	0100d140 	call	10100d14 <__mulsi3>
1010cadc:	9809883a 	mov	r4,r19
1010cae0:	a80b883a 	mov	r5,r21
1010cae4:	1029883a 	mov	r20,r2
1010cae8:	0100d140 	call	10100d14 <__mulsi3>
1010caec:	b00b883a 	mov	r5,r22
1010caf0:	a809883a 	mov	r4,r21
1010caf4:	d8800415 	stw	r2,16(sp)
1010caf8:	0100d140 	call	10100d14 <__mulsi3>
1010cafc:	d9c00217 	ldw	r7,8(sp)
1010cb00:	1505883a 	add	r2,r2,r20
1010cb04:	d8c00517 	ldw	r3,20(sp)
1010cb08:	3826d43a 	srli	r19,r7,16
1010cb0c:	d9800717 	ldw	r6,28(sp)
1010cb10:	da000617 	ldw	r8,24(sp)
1010cb14:	9885883a 	add	r2,r19,r2
1010cb18:	da400417 	ldw	r9,16(sp)
1010cb1c:	1500022e 	bgeu	r2,r20,1010cb28 <__muldf3+0x458>
1010cb20:	01000074 	movhi	r4,1
1010cb24:	4913883a 	add	r9,r9,r4
1010cb28:	1028d43a 	srli	r20,r2,16
1010cb2c:	1004943a 	slli	r2,r2,16
1010cb30:	802cd43a 	srli	r22,r16,16
1010cb34:	843fffcc 	andi	r16,r16,65535
1010cb38:	3cffffcc 	andi	r19,r7,65535
1010cb3c:	9009883a 	mov	r4,r18
1010cb40:	800b883a 	mov	r5,r16
1010cb44:	a269883a 	add	r20,r20,r9
1010cb48:	d8c00515 	stw	r3,20(sp)
1010cb4c:	d9800715 	stw	r6,28(sp)
1010cb50:	da000615 	stw	r8,24(sp)
1010cb54:	14e7883a 	add	r19,r2,r19
1010cb58:	0100d140 	call	10100d14 <__mulsi3>
1010cb5c:	9009883a 	mov	r4,r18
1010cb60:	b00b883a 	mov	r5,r22
1010cb64:	d8800315 	stw	r2,12(sp)
1010cb68:	0100d140 	call	10100d14 <__mulsi3>
1010cb6c:	b809883a 	mov	r4,r23
1010cb70:	b00b883a 	mov	r5,r22
1010cb74:	d8800215 	stw	r2,8(sp)
1010cb78:	0100d140 	call	10100d14 <__mulsi3>
1010cb7c:	b80b883a 	mov	r5,r23
1010cb80:	8009883a 	mov	r4,r16
1010cb84:	d8800415 	stw	r2,16(sp)
1010cb88:	0100d140 	call	10100d14 <__mulsi3>
1010cb8c:	da800317 	ldw	r10,12(sp)
1010cb90:	d9c00217 	ldw	r7,8(sp)
1010cb94:	d9000017 	ldw	r4,0(sp)
1010cb98:	502ed43a 	srli	r23,r10,16
1010cb9c:	11c5883a 	add	r2,r2,r7
1010cba0:	24e5883a 	add	r18,r4,r19
1010cba4:	b885883a 	add	r2,r23,r2
1010cba8:	d8c00517 	ldw	r3,20(sp)
1010cbac:	d9800717 	ldw	r6,28(sp)
1010cbb0:	da000617 	ldw	r8,24(sp)
1010cbb4:	da400417 	ldw	r9,16(sp)
1010cbb8:	11c0022e 	bgeu	r2,r7,1010cbc4 <__muldf3+0x4f4>
1010cbbc:	01000074 	movhi	r4,1
1010cbc0:	4913883a 	add	r9,r9,r4
1010cbc4:	100ed43a 	srli	r7,r2,16
1010cbc8:	1004943a 	slli	r2,r2,16
1010cbcc:	55ffffcc 	andi	r23,r10,65535
1010cbd0:	3a53883a 	add	r9,r7,r9
1010cbd4:	8809883a 	mov	r4,r17
1010cbd8:	800b883a 	mov	r5,r16
1010cbdc:	d8c00515 	stw	r3,20(sp)
1010cbe0:	d9800715 	stw	r6,28(sp)
1010cbe4:	da000615 	stw	r8,24(sp)
1010cbe8:	da400415 	stw	r9,16(sp)
1010cbec:	15ef883a 	add	r23,r2,r23
1010cbf0:	0100d140 	call	10100d14 <__mulsi3>
1010cbf4:	8809883a 	mov	r4,r17
1010cbf8:	b00b883a 	mov	r5,r22
1010cbfc:	d8800215 	stw	r2,8(sp)
1010cc00:	0100d140 	call	10100d14 <__mulsi3>
1010cc04:	b00b883a 	mov	r5,r22
1010cc08:	a809883a 	mov	r4,r21
1010cc0c:	d8800315 	stw	r2,12(sp)
1010cc10:	0100d140 	call	10100d14 <__mulsi3>
1010cc14:	8009883a 	mov	r4,r16
1010cc18:	a80b883a 	mov	r5,r21
1010cc1c:	1023883a 	mov	r17,r2
1010cc20:	0100d140 	call	10100d14 <__mulsi3>
1010cc24:	d9c00217 	ldw	r7,8(sp)
1010cc28:	da800317 	ldw	r10,12(sp)
1010cc2c:	d8c00517 	ldw	r3,20(sp)
1010cc30:	3808d43a 	srli	r4,r7,16
1010cc34:	1285883a 	add	r2,r2,r10
1010cc38:	d9800717 	ldw	r6,28(sp)
1010cc3c:	2085883a 	add	r2,r4,r2
1010cc40:	da000617 	ldw	r8,24(sp)
1010cc44:	da400417 	ldw	r9,16(sp)
1010cc48:	1280022e 	bgeu	r2,r10,1010cc54 <__muldf3+0x584>
1010cc4c:	01000074 	movhi	r4,1
1010cc50:	8923883a 	add	r17,r17,r4
1010cc54:	1008943a 	slli	r4,r2,16
1010cc58:	39ffffcc 	andi	r7,r7,65535
1010cc5c:	e4b9883a 	add	fp,fp,r18
1010cc60:	21cf883a 	add	r7,r4,r7
1010cc64:	e4e7803a 	cmpltu	r19,fp,r19
1010cc68:	3d0f883a 	add	r7,r7,r20
1010cc6c:	bf39883a 	add	fp,r23,fp
1010cc70:	99c9883a 	add	r4,r19,r7
1010cc74:	e5ef803a 	cmpltu	r23,fp,r23
1010cc78:	490b883a 	add	r5,r9,r4
1010cc7c:	1004d43a 	srli	r2,r2,16
1010cc80:	b965883a 	add	r18,r23,r5
1010cc84:	24c9803a 	cmpltu	r4,r4,r19
1010cc88:	3d29803a 	cmpltu	r20,r7,r20
1010cc8c:	a128b03a 	or	r20,r20,r4
1010cc90:	95ef803a 	cmpltu	r23,r18,r23
1010cc94:	2a53803a 	cmpltu	r9,r5,r9
1010cc98:	a0a9883a 	add	r20,r20,r2
1010cc9c:	4deeb03a 	or	r23,r9,r23
1010cca0:	a5ef883a 	add	r23,r20,r23
1010cca4:	bc63883a 	add	r17,r23,r17
1010cca8:	e004927a 	slli	r2,fp,9
1010ccac:	d9000117 	ldw	r4,4(sp)
1010ccb0:	882e927a 	slli	r23,r17,9
1010ccb4:	9022d5fa 	srli	r17,r18,23
1010ccb8:	e038d5fa 	srli	fp,fp,23
1010ccbc:	1104b03a 	or	r2,r2,r4
1010ccc0:	9024927a 	slli	r18,r18,9
1010ccc4:	1004c03a 	cmpne	r2,r2,zero
1010ccc8:	bc62b03a 	or	r17,r23,r17
1010cccc:	1738b03a 	or	fp,r2,fp
1010ccd0:	8880402c 	andhi	r2,r17,256
1010ccd4:	e4a4b03a 	or	r18,fp,r18
1010ccd8:	10000726 	beq	r2,zero,1010ccf8 <__muldf3+0x628>
1010ccdc:	9006d07a 	srli	r3,r18,1
1010cce0:	880497fa 	slli	r2,r17,31
1010cce4:	9480004c 	andi	r18,r18,1
1010cce8:	8822d07a 	srli	r17,r17,1
1010ccec:	1ca4b03a 	or	r18,r3,r18
1010ccf0:	14a4b03a 	or	r18,r2,r18
1010ccf4:	4007883a 	mov	r3,r8
1010ccf8:	1880ffc4 	addi	r2,r3,1023
1010ccfc:	0080460e 	bge	zero,r2,1010ce18 <__muldf3+0x748>
1010cd00:	910001cc 	andi	r4,r18,7
1010cd04:	20000726 	beq	r4,zero,1010cd24 <__muldf3+0x654>
1010cd08:	910003cc 	andi	r4,r18,15
1010cd0c:	01400104 	movi	r5,4
1010cd10:	21400426 	beq	r4,r5,1010cd24 <__muldf3+0x654>
1010cd14:	9149883a 	add	r4,r18,r5
1010cd18:	24a5803a 	cmpltu	r18,r4,r18
1010cd1c:	8ca3883a 	add	r17,r17,r18
1010cd20:	2025883a 	mov	r18,r4
1010cd24:	8900402c 	andhi	r4,r17,256
1010cd28:	20000426 	beq	r4,zero,1010cd3c <__muldf3+0x66c>
1010cd2c:	18810004 	addi	r2,r3,1024
1010cd30:	00ffc034 	movhi	r3,65280
1010cd34:	18ffffc4 	addi	r3,r3,-1
1010cd38:	88e2703a 	and	r17,r17,r3
1010cd3c:	00c1ff84 	movi	r3,2046
1010cd40:	18bf1316 	blt	r3,r2,1010c990 <__alt_data_end+0xfffec990>
1010cd44:	882c977a 	slli	r22,r17,29
1010cd48:	9024d0fa 	srli	r18,r18,3
1010cd4c:	8822927a 	slli	r17,r17,9
1010cd50:	1081ffcc 	andi	r2,r2,2047
1010cd54:	b4acb03a 	or	r22,r22,r18
1010cd58:	8820d33a 	srli	r16,r17,12
1010cd5c:	3027883a 	mov	r19,r6
1010cd60:	003eba06 	br	1010c84c <__alt_data_end+0xfffec84c>
1010cd64:	8080022c 	andhi	r2,r16,8
1010cd68:	10000926 	beq	r2,zero,1010cd90 <__muldf3+0x6c0>
1010cd6c:	8880022c 	andhi	r2,r17,8
1010cd70:	1000071e 	bne	r2,zero,1010cd90 <__muldf3+0x6c0>
1010cd74:	00800434 	movhi	r2,16
1010cd78:	8c000234 	orhi	r16,r17,8
1010cd7c:	10bfffc4 	addi	r2,r2,-1
1010cd80:	e027883a 	mov	r19,fp
1010cd84:	80a0703a 	and	r16,r16,r2
1010cd88:	902d883a 	mov	r22,r18
1010cd8c:	003f1706 	br	1010c9ec <__alt_data_end+0xfffec9ec>
1010cd90:	00800434 	movhi	r2,16
1010cd94:	84000234 	orhi	r16,r16,8
1010cd98:	10bfffc4 	addi	r2,r2,-1
1010cd9c:	80a0703a 	and	r16,r16,r2
1010cda0:	003f1206 	br	1010c9ec <__alt_data_end+0xfffec9ec>
1010cda4:	147ff604 	addi	r17,r2,-40
1010cda8:	3462983a 	sll	r17,r6,r17
1010cdac:	0025883a 	mov	r18,zero
1010cdb0:	003ef306 	br	1010c980 <__alt_data_end+0xfffec980>
1010cdb4:	3009883a 	mov	r4,r6
1010cdb8:	d9400215 	stw	r5,8(sp)
1010cdbc:	d9800715 	stw	r6,28(sp)
1010cdc0:	da400415 	stw	r9,16(sp)
1010cdc4:	da800315 	stw	r10,12(sp)
1010cdc8:	010da3c0 	call	1010da3c <__clzsi2>
1010cdcc:	10800804 	addi	r2,r2,32
1010cdd0:	da800317 	ldw	r10,12(sp)
1010cdd4:	da400417 	ldw	r9,16(sp)
1010cdd8:	d9800717 	ldw	r6,28(sp)
1010cddc:	d9400217 	ldw	r5,8(sp)
1010cde0:	003edd06 	br	1010c958 <__alt_data_end+0xfffec958>
1010cde4:	143ff604 	addi	r16,r2,-40
1010cde8:	ac20983a 	sll	r16,r21,r16
1010cdec:	002d883a 	mov	r22,zero
1010cdf0:	003ec106 	br	1010c8f8 <__alt_data_end+0xfffec8f8>
1010cdf4:	d9800715 	stw	r6,28(sp)
1010cdf8:	d9c00215 	stw	r7,8(sp)
1010cdfc:	da400415 	stw	r9,16(sp)
1010ce00:	010da3c0 	call	1010da3c <__clzsi2>
1010ce04:	10800804 	addi	r2,r2,32
1010ce08:	da400417 	ldw	r9,16(sp)
1010ce0c:	d9c00217 	ldw	r7,8(sp)
1010ce10:	d9800717 	ldw	r6,28(sp)
1010ce14:	003eae06 	br	1010c8d0 <__alt_data_end+0xfffec8d0>
1010ce18:	00c00044 	movi	r3,1
1010ce1c:	1887c83a 	sub	r3,r3,r2
1010ce20:	01000e04 	movi	r4,56
1010ce24:	20fe8516 	blt	r4,r3,1010c83c <__alt_data_end+0xfffec83c>
1010ce28:	010007c4 	movi	r4,31
1010ce2c:	20c01b16 	blt	r4,r3,1010ce9c <__muldf3+0x7cc>
1010ce30:	00800804 	movi	r2,32
1010ce34:	10c5c83a 	sub	r2,r2,r3
1010ce38:	888a983a 	sll	r5,r17,r2
1010ce3c:	90c8d83a 	srl	r4,r18,r3
1010ce40:	9084983a 	sll	r2,r18,r2
1010ce44:	88e2d83a 	srl	r17,r17,r3
1010ce48:	2906b03a 	or	r3,r5,r4
1010ce4c:	1004c03a 	cmpne	r2,r2,zero
1010ce50:	1886b03a 	or	r3,r3,r2
1010ce54:	188001cc 	andi	r2,r3,7
1010ce58:	10000726 	beq	r2,zero,1010ce78 <__muldf3+0x7a8>
1010ce5c:	188003cc 	andi	r2,r3,15
1010ce60:	01000104 	movi	r4,4
1010ce64:	11000426 	beq	r2,r4,1010ce78 <__muldf3+0x7a8>
1010ce68:	1805883a 	mov	r2,r3
1010ce6c:	10c00104 	addi	r3,r2,4
1010ce70:	1885803a 	cmpltu	r2,r3,r2
1010ce74:	88a3883a 	add	r17,r17,r2
1010ce78:	8880202c 	andhi	r2,r17,128
1010ce7c:	10001c26 	beq	r2,zero,1010cef0 <__muldf3+0x820>
1010ce80:	3027883a 	mov	r19,r6
1010ce84:	00800044 	movi	r2,1
1010ce88:	0021883a 	mov	r16,zero
1010ce8c:	002d883a 	mov	r22,zero
1010ce90:	003e6e06 	br	1010c84c <__alt_data_end+0xfffec84c>
1010ce94:	4007883a 	mov	r3,r8
1010ce98:	003f9706 	br	1010ccf8 <__alt_data_end+0xfffeccf8>
1010ce9c:	017ff844 	movi	r5,-31
1010cea0:	2885c83a 	sub	r2,r5,r2
1010cea4:	888ad83a 	srl	r5,r17,r2
1010cea8:	00800804 	movi	r2,32
1010ceac:	18801a26 	beq	r3,r2,1010cf18 <__muldf3+0x848>
1010ceb0:	01001004 	movi	r4,64
1010ceb4:	20c7c83a 	sub	r3,r4,r3
1010ceb8:	88e2983a 	sll	r17,r17,r3
1010cebc:	8ca4b03a 	or	r18,r17,r18
1010cec0:	9004c03a 	cmpne	r2,r18,zero
1010cec4:	2884b03a 	or	r2,r5,r2
1010cec8:	144001cc 	andi	r17,r2,7
1010cecc:	88000d1e 	bne	r17,zero,1010cf04 <__muldf3+0x834>
1010ced0:	0021883a 	mov	r16,zero
1010ced4:	102cd0fa 	srli	r22,r2,3
1010ced8:	3027883a 	mov	r19,r6
1010cedc:	0005883a 	mov	r2,zero
1010cee0:	b46cb03a 	or	r22,r22,r17
1010cee4:	003e5906 	br	1010c84c <__alt_data_end+0xfffec84c>
1010cee8:	1007883a 	mov	r3,r2
1010ceec:	0023883a 	mov	r17,zero
1010cef0:	8820927a 	slli	r16,r17,9
1010cef4:	1805883a 	mov	r2,r3
1010cef8:	8822977a 	slli	r17,r17,29
1010cefc:	8020d33a 	srli	r16,r16,12
1010cf00:	003ff406 	br	1010ced4 <__alt_data_end+0xfffeced4>
1010cf04:	10c003cc 	andi	r3,r2,15
1010cf08:	01000104 	movi	r4,4
1010cf0c:	193ff626 	beq	r3,r4,1010cee8 <__alt_data_end+0xfffecee8>
1010cf10:	0023883a 	mov	r17,zero
1010cf14:	003fd506 	br	1010ce6c <__alt_data_end+0xfffece6c>
1010cf18:	0023883a 	mov	r17,zero
1010cf1c:	003fe706 	br	1010cebc <__alt_data_end+0xfffecebc>
1010cf20:	00800434 	movhi	r2,16
1010cf24:	8c000234 	orhi	r16,r17,8
1010cf28:	10bfffc4 	addi	r2,r2,-1
1010cf2c:	3027883a 	mov	r19,r6
1010cf30:	80a0703a 	and	r16,r16,r2
1010cf34:	902d883a 	mov	r22,r18
1010cf38:	003eac06 	br	1010c9ec <__alt_data_end+0xfffec9ec>

1010cf3c <__subdf3>:
1010cf3c:	02000434 	movhi	r8,16
1010cf40:	423fffc4 	addi	r8,r8,-1
1010cf44:	defffb04 	addi	sp,sp,-20
1010cf48:	2a14703a 	and	r10,r5,r8
1010cf4c:	3812d53a 	srli	r9,r7,20
1010cf50:	3a10703a 	and	r8,r7,r8
1010cf54:	2006d77a 	srli	r3,r4,29
1010cf58:	3004d77a 	srli	r2,r6,29
1010cf5c:	dc000015 	stw	r16,0(sp)
1010cf60:	501490fa 	slli	r10,r10,3
1010cf64:	2820d53a 	srli	r16,r5,20
1010cf68:	401090fa 	slli	r8,r8,3
1010cf6c:	dc800215 	stw	r18,8(sp)
1010cf70:	dc400115 	stw	r17,4(sp)
1010cf74:	dfc00415 	stw	ra,16(sp)
1010cf78:	202290fa 	slli	r17,r4,3
1010cf7c:	dcc00315 	stw	r19,12(sp)
1010cf80:	4a41ffcc 	andi	r9,r9,2047
1010cf84:	0101ffc4 	movi	r4,2047
1010cf88:	2824d7fa 	srli	r18,r5,31
1010cf8c:	8401ffcc 	andi	r16,r16,2047
1010cf90:	50c6b03a 	or	r3,r10,r3
1010cf94:	380ed7fa 	srli	r7,r7,31
1010cf98:	408ab03a 	or	r5,r8,r2
1010cf9c:	300c90fa 	slli	r6,r6,3
1010cfa0:	49009626 	beq	r9,r4,1010d1fc <__subdf3+0x2c0>
1010cfa4:	39c0005c 	xori	r7,r7,1
1010cfa8:	8245c83a 	sub	r2,r16,r9
1010cfac:	3c807426 	beq	r7,r18,1010d180 <__subdf3+0x244>
1010cfb0:	0080af0e 	bge	zero,r2,1010d270 <__subdf3+0x334>
1010cfb4:	48002a1e 	bne	r9,zero,1010d060 <__subdf3+0x124>
1010cfb8:	2988b03a 	or	r4,r5,r6
1010cfbc:	20009a1e 	bne	r4,zero,1010d228 <__subdf3+0x2ec>
1010cfc0:	888001cc 	andi	r2,r17,7
1010cfc4:	10000726 	beq	r2,zero,1010cfe4 <__subdf3+0xa8>
1010cfc8:	888003cc 	andi	r2,r17,15
1010cfcc:	01000104 	movi	r4,4
1010cfd0:	11000426 	beq	r2,r4,1010cfe4 <__subdf3+0xa8>
1010cfd4:	890b883a 	add	r5,r17,r4
1010cfd8:	2c63803a 	cmpltu	r17,r5,r17
1010cfdc:	1c47883a 	add	r3,r3,r17
1010cfe0:	2823883a 	mov	r17,r5
1010cfe4:	1880202c 	andhi	r2,r3,128
1010cfe8:	10005926 	beq	r2,zero,1010d150 <__subdf3+0x214>
1010cfec:	84000044 	addi	r16,r16,1
1010cff0:	0081ffc4 	movi	r2,2047
1010cff4:	8080be26 	beq	r16,r2,1010d2f0 <__subdf3+0x3b4>
1010cff8:	017fe034 	movhi	r5,65408
1010cffc:	297fffc4 	addi	r5,r5,-1
1010d000:	1946703a 	and	r3,r3,r5
1010d004:	1804977a 	slli	r2,r3,29
1010d008:	1806927a 	slli	r3,r3,9
1010d00c:	8822d0fa 	srli	r17,r17,3
1010d010:	8401ffcc 	andi	r16,r16,2047
1010d014:	180ad33a 	srli	r5,r3,12
1010d018:	9100004c 	andi	r4,r18,1
1010d01c:	1444b03a 	or	r2,r2,r17
1010d020:	80c1ffcc 	andi	r3,r16,2047
1010d024:	1820953a 	slli	r16,r3,20
1010d028:	20c03fcc 	andi	r3,r4,255
1010d02c:	180897fa 	slli	r4,r3,31
1010d030:	00c00434 	movhi	r3,16
1010d034:	18ffffc4 	addi	r3,r3,-1
1010d038:	28c6703a 	and	r3,r5,r3
1010d03c:	1c06b03a 	or	r3,r3,r16
1010d040:	1906b03a 	or	r3,r3,r4
1010d044:	dfc00417 	ldw	ra,16(sp)
1010d048:	dcc00317 	ldw	r19,12(sp)
1010d04c:	dc800217 	ldw	r18,8(sp)
1010d050:	dc400117 	ldw	r17,4(sp)
1010d054:	dc000017 	ldw	r16,0(sp)
1010d058:	dec00504 	addi	sp,sp,20
1010d05c:	f800283a 	ret
1010d060:	0101ffc4 	movi	r4,2047
1010d064:	813fd626 	beq	r16,r4,1010cfc0 <__alt_data_end+0xfffecfc0>
1010d068:	29402034 	orhi	r5,r5,128
1010d06c:	01000e04 	movi	r4,56
1010d070:	2080a316 	blt	r4,r2,1010d300 <__subdf3+0x3c4>
1010d074:	010007c4 	movi	r4,31
1010d078:	2080c616 	blt	r4,r2,1010d394 <__subdf3+0x458>
1010d07c:	01000804 	movi	r4,32
1010d080:	2089c83a 	sub	r4,r4,r2
1010d084:	2910983a 	sll	r8,r5,r4
1010d088:	308ed83a 	srl	r7,r6,r2
1010d08c:	3108983a 	sll	r4,r6,r4
1010d090:	2884d83a 	srl	r2,r5,r2
1010d094:	41ccb03a 	or	r6,r8,r7
1010d098:	2008c03a 	cmpne	r4,r4,zero
1010d09c:	310cb03a 	or	r6,r6,r4
1010d0a0:	898dc83a 	sub	r6,r17,r6
1010d0a4:	89a3803a 	cmpltu	r17,r17,r6
1010d0a8:	1887c83a 	sub	r3,r3,r2
1010d0ac:	1c47c83a 	sub	r3,r3,r17
1010d0b0:	3023883a 	mov	r17,r6
1010d0b4:	1880202c 	andhi	r2,r3,128
1010d0b8:	10002326 	beq	r2,zero,1010d148 <__subdf3+0x20c>
1010d0bc:	04c02034 	movhi	r19,128
1010d0c0:	9cffffc4 	addi	r19,r19,-1
1010d0c4:	1ce6703a 	and	r19,r3,r19
1010d0c8:	98007a26 	beq	r19,zero,1010d2b4 <__subdf3+0x378>
1010d0cc:	9809883a 	mov	r4,r19
1010d0d0:	010da3c0 	call	1010da3c <__clzsi2>
1010d0d4:	113ffe04 	addi	r4,r2,-8
1010d0d8:	00c007c4 	movi	r3,31
1010d0dc:	19007b16 	blt	r3,r4,1010d2cc <__subdf3+0x390>
1010d0e0:	00800804 	movi	r2,32
1010d0e4:	1105c83a 	sub	r2,r2,r4
1010d0e8:	8884d83a 	srl	r2,r17,r2
1010d0ec:	9906983a 	sll	r3,r19,r4
1010d0f0:	8922983a 	sll	r17,r17,r4
1010d0f4:	10c4b03a 	or	r2,r2,r3
1010d0f8:	24007816 	blt	r4,r16,1010d2dc <__subdf3+0x3a0>
1010d0fc:	2421c83a 	sub	r16,r4,r16
1010d100:	80c00044 	addi	r3,r16,1
1010d104:	010007c4 	movi	r4,31
1010d108:	20c09516 	blt	r4,r3,1010d360 <__subdf3+0x424>
1010d10c:	01400804 	movi	r5,32
1010d110:	28cbc83a 	sub	r5,r5,r3
1010d114:	88c8d83a 	srl	r4,r17,r3
1010d118:	8962983a 	sll	r17,r17,r5
1010d11c:	114a983a 	sll	r5,r2,r5
1010d120:	10c6d83a 	srl	r3,r2,r3
1010d124:	8804c03a 	cmpne	r2,r17,zero
1010d128:	290ab03a 	or	r5,r5,r4
1010d12c:	28a2b03a 	or	r17,r5,r2
1010d130:	0021883a 	mov	r16,zero
1010d134:	003fa206 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d138:	2090b03a 	or	r8,r4,r2
1010d13c:	40018e26 	beq	r8,zero,1010d778 <__subdf3+0x83c>
1010d140:	1007883a 	mov	r3,r2
1010d144:	2023883a 	mov	r17,r4
1010d148:	888001cc 	andi	r2,r17,7
1010d14c:	103f9e1e 	bne	r2,zero,1010cfc8 <__alt_data_end+0xfffecfc8>
1010d150:	1804977a 	slli	r2,r3,29
1010d154:	8822d0fa 	srli	r17,r17,3
1010d158:	1810d0fa 	srli	r8,r3,3
1010d15c:	9100004c 	andi	r4,r18,1
1010d160:	1444b03a 	or	r2,r2,r17
1010d164:	00c1ffc4 	movi	r3,2047
1010d168:	80c02826 	beq	r16,r3,1010d20c <__subdf3+0x2d0>
1010d16c:	01400434 	movhi	r5,16
1010d170:	297fffc4 	addi	r5,r5,-1
1010d174:	80e0703a 	and	r16,r16,r3
1010d178:	414a703a 	and	r5,r8,r5
1010d17c:	003fa806 	br	1010d020 <__alt_data_end+0xfffed020>
1010d180:	0080630e 	bge	zero,r2,1010d310 <__subdf3+0x3d4>
1010d184:	48003026 	beq	r9,zero,1010d248 <__subdf3+0x30c>
1010d188:	0101ffc4 	movi	r4,2047
1010d18c:	813f8c26 	beq	r16,r4,1010cfc0 <__alt_data_end+0xfffecfc0>
1010d190:	29402034 	orhi	r5,r5,128
1010d194:	01000e04 	movi	r4,56
1010d198:	2080a90e 	bge	r4,r2,1010d440 <__subdf3+0x504>
1010d19c:	298cb03a 	or	r6,r5,r6
1010d1a0:	3012c03a 	cmpne	r9,r6,zero
1010d1a4:	0005883a 	mov	r2,zero
1010d1a8:	4c53883a 	add	r9,r9,r17
1010d1ac:	4c63803a 	cmpltu	r17,r9,r17
1010d1b0:	10c7883a 	add	r3,r2,r3
1010d1b4:	88c7883a 	add	r3,r17,r3
1010d1b8:	4823883a 	mov	r17,r9
1010d1bc:	1880202c 	andhi	r2,r3,128
1010d1c0:	1000d026 	beq	r2,zero,1010d504 <__subdf3+0x5c8>
1010d1c4:	84000044 	addi	r16,r16,1
1010d1c8:	0081ffc4 	movi	r2,2047
1010d1cc:	8080fe26 	beq	r16,r2,1010d5c8 <__subdf3+0x68c>
1010d1d0:	00bfe034 	movhi	r2,65408
1010d1d4:	10bfffc4 	addi	r2,r2,-1
1010d1d8:	1886703a 	and	r3,r3,r2
1010d1dc:	880ad07a 	srli	r5,r17,1
1010d1e0:	180497fa 	slli	r2,r3,31
1010d1e4:	8900004c 	andi	r4,r17,1
1010d1e8:	2922b03a 	or	r17,r5,r4
1010d1ec:	1806d07a 	srli	r3,r3,1
1010d1f0:	1462b03a 	or	r17,r2,r17
1010d1f4:	3825883a 	mov	r18,r7
1010d1f8:	003f7106 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d1fc:	2984b03a 	or	r2,r5,r6
1010d200:	103f6826 	beq	r2,zero,1010cfa4 <__alt_data_end+0xfffecfa4>
1010d204:	39c03fcc 	andi	r7,r7,255
1010d208:	003f6706 	br	1010cfa8 <__alt_data_end+0xfffecfa8>
1010d20c:	4086b03a 	or	r3,r8,r2
1010d210:	18015226 	beq	r3,zero,1010d75c <__subdf3+0x820>
1010d214:	00c00434 	movhi	r3,16
1010d218:	41400234 	orhi	r5,r8,8
1010d21c:	18ffffc4 	addi	r3,r3,-1
1010d220:	28ca703a 	and	r5,r5,r3
1010d224:	003f7e06 	br	1010d020 <__alt_data_end+0xfffed020>
1010d228:	10bfffc4 	addi	r2,r2,-1
1010d22c:	1000491e 	bne	r2,zero,1010d354 <__subdf3+0x418>
1010d230:	898fc83a 	sub	r7,r17,r6
1010d234:	89e3803a 	cmpltu	r17,r17,r7
1010d238:	1947c83a 	sub	r3,r3,r5
1010d23c:	1c47c83a 	sub	r3,r3,r17
1010d240:	3823883a 	mov	r17,r7
1010d244:	003f9b06 	br	1010d0b4 <__alt_data_end+0xfffed0b4>
1010d248:	2988b03a 	or	r4,r5,r6
1010d24c:	203f5c26 	beq	r4,zero,1010cfc0 <__alt_data_end+0xfffecfc0>
1010d250:	10bfffc4 	addi	r2,r2,-1
1010d254:	1000931e 	bne	r2,zero,1010d4a4 <__subdf3+0x568>
1010d258:	898d883a 	add	r6,r17,r6
1010d25c:	3463803a 	cmpltu	r17,r6,r17
1010d260:	1947883a 	add	r3,r3,r5
1010d264:	88c7883a 	add	r3,r17,r3
1010d268:	3023883a 	mov	r17,r6
1010d26c:	003fd306 	br	1010d1bc <__alt_data_end+0xfffed1bc>
1010d270:	1000541e 	bne	r2,zero,1010d3c4 <__subdf3+0x488>
1010d274:	80800044 	addi	r2,r16,1
1010d278:	1081ffcc 	andi	r2,r2,2047
1010d27c:	01000044 	movi	r4,1
1010d280:	2080a20e 	bge	r4,r2,1010d50c <__subdf3+0x5d0>
1010d284:	8989c83a 	sub	r4,r17,r6
1010d288:	8905803a 	cmpltu	r2,r17,r4
1010d28c:	1967c83a 	sub	r19,r3,r5
1010d290:	98a7c83a 	sub	r19,r19,r2
1010d294:	9880202c 	andhi	r2,r19,128
1010d298:	10006326 	beq	r2,zero,1010d428 <__subdf3+0x4ec>
1010d29c:	3463c83a 	sub	r17,r6,r17
1010d2a0:	28c7c83a 	sub	r3,r5,r3
1010d2a4:	344d803a 	cmpltu	r6,r6,r17
1010d2a8:	19a7c83a 	sub	r19,r3,r6
1010d2ac:	3825883a 	mov	r18,r7
1010d2b0:	983f861e 	bne	r19,zero,1010d0cc <__alt_data_end+0xfffed0cc>
1010d2b4:	8809883a 	mov	r4,r17
1010d2b8:	010da3c0 	call	1010da3c <__clzsi2>
1010d2bc:	10800804 	addi	r2,r2,32
1010d2c0:	113ffe04 	addi	r4,r2,-8
1010d2c4:	00c007c4 	movi	r3,31
1010d2c8:	193f850e 	bge	r3,r4,1010d0e0 <__alt_data_end+0xfffed0e0>
1010d2cc:	10bff604 	addi	r2,r2,-40
1010d2d0:	8884983a 	sll	r2,r17,r2
1010d2d4:	0023883a 	mov	r17,zero
1010d2d8:	243f880e 	bge	r4,r16,1010d0fc <__alt_data_end+0xfffed0fc>
1010d2dc:	00ffe034 	movhi	r3,65408
1010d2e0:	18ffffc4 	addi	r3,r3,-1
1010d2e4:	8121c83a 	sub	r16,r16,r4
1010d2e8:	10c6703a 	and	r3,r2,r3
1010d2ec:	003f3406 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d2f0:	9100004c 	andi	r4,r18,1
1010d2f4:	000b883a 	mov	r5,zero
1010d2f8:	0005883a 	mov	r2,zero
1010d2fc:	003f4806 	br	1010d020 <__alt_data_end+0xfffed020>
1010d300:	298cb03a 	or	r6,r5,r6
1010d304:	300cc03a 	cmpne	r6,r6,zero
1010d308:	0005883a 	mov	r2,zero
1010d30c:	003f6406 	br	1010d0a0 <__alt_data_end+0xfffed0a0>
1010d310:	10009a1e 	bne	r2,zero,1010d57c <__subdf3+0x640>
1010d314:	82400044 	addi	r9,r16,1
1010d318:	4881ffcc 	andi	r2,r9,2047
1010d31c:	02800044 	movi	r10,1
1010d320:	5080670e 	bge	r10,r2,1010d4c0 <__subdf3+0x584>
1010d324:	0081ffc4 	movi	r2,2047
1010d328:	4880af26 	beq	r9,r2,1010d5e8 <__subdf3+0x6ac>
1010d32c:	898d883a 	add	r6,r17,r6
1010d330:	1945883a 	add	r2,r3,r5
1010d334:	3447803a 	cmpltu	r3,r6,r17
1010d338:	1887883a 	add	r3,r3,r2
1010d33c:	182297fa 	slli	r17,r3,31
1010d340:	300cd07a 	srli	r6,r6,1
1010d344:	1806d07a 	srli	r3,r3,1
1010d348:	4821883a 	mov	r16,r9
1010d34c:	89a2b03a 	or	r17,r17,r6
1010d350:	003f1b06 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d354:	0101ffc4 	movi	r4,2047
1010d358:	813f441e 	bne	r16,r4,1010d06c <__alt_data_end+0xfffed06c>
1010d35c:	003f1806 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d360:	843ff844 	addi	r16,r16,-31
1010d364:	01400804 	movi	r5,32
1010d368:	1408d83a 	srl	r4,r2,r16
1010d36c:	19405026 	beq	r3,r5,1010d4b0 <__subdf3+0x574>
1010d370:	01401004 	movi	r5,64
1010d374:	28c7c83a 	sub	r3,r5,r3
1010d378:	10c4983a 	sll	r2,r2,r3
1010d37c:	88a2b03a 	or	r17,r17,r2
1010d380:	8822c03a 	cmpne	r17,r17,zero
1010d384:	2462b03a 	or	r17,r4,r17
1010d388:	0007883a 	mov	r3,zero
1010d38c:	0021883a 	mov	r16,zero
1010d390:	003f6d06 	br	1010d148 <__alt_data_end+0xfffed148>
1010d394:	11fff804 	addi	r7,r2,-32
1010d398:	01000804 	movi	r4,32
1010d39c:	29ced83a 	srl	r7,r5,r7
1010d3a0:	11004526 	beq	r2,r4,1010d4b8 <__subdf3+0x57c>
1010d3a4:	01001004 	movi	r4,64
1010d3a8:	2089c83a 	sub	r4,r4,r2
1010d3ac:	2904983a 	sll	r2,r5,r4
1010d3b0:	118cb03a 	or	r6,r2,r6
1010d3b4:	300cc03a 	cmpne	r6,r6,zero
1010d3b8:	398cb03a 	or	r6,r7,r6
1010d3bc:	0005883a 	mov	r2,zero
1010d3c0:	003f3706 	br	1010d0a0 <__alt_data_end+0xfffed0a0>
1010d3c4:	80002a26 	beq	r16,zero,1010d470 <__subdf3+0x534>
1010d3c8:	0101ffc4 	movi	r4,2047
1010d3cc:	49006626 	beq	r9,r4,1010d568 <__subdf3+0x62c>
1010d3d0:	0085c83a 	sub	r2,zero,r2
1010d3d4:	18c02034 	orhi	r3,r3,128
1010d3d8:	01000e04 	movi	r4,56
1010d3dc:	20807e16 	blt	r4,r2,1010d5d8 <__subdf3+0x69c>
1010d3e0:	010007c4 	movi	r4,31
1010d3e4:	2080e716 	blt	r4,r2,1010d784 <__subdf3+0x848>
1010d3e8:	01000804 	movi	r4,32
1010d3ec:	2089c83a 	sub	r4,r4,r2
1010d3f0:	1914983a 	sll	r10,r3,r4
1010d3f4:	8890d83a 	srl	r8,r17,r2
1010d3f8:	8908983a 	sll	r4,r17,r4
1010d3fc:	1884d83a 	srl	r2,r3,r2
1010d400:	5222b03a 	or	r17,r10,r8
1010d404:	2006c03a 	cmpne	r3,r4,zero
1010d408:	88e2b03a 	or	r17,r17,r3
1010d40c:	3463c83a 	sub	r17,r6,r17
1010d410:	2885c83a 	sub	r2,r5,r2
1010d414:	344d803a 	cmpltu	r6,r6,r17
1010d418:	1187c83a 	sub	r3,r2,r6
1010d41c:	4821883a 	mov	r16,r9
1010d420:	3825883a 	mov	r18,r7
1010d424:	003f2306 	br	1010d0b4 <__alt_data_end+0xfffed0b4>
1010d428:	24d0b03a 	or	r8,r4,r19
1010d42c:	40001b1e 	bne	r8,zero,1010d49c <__subdf3+0x560>
1010d430:	0005883a 	mov	r2,zero
1010d434:	0009883a 	mov	r4,zero
1010d438:	0021883a 	mov	r16,zero
1010d43c:	003f4906 	br	1010d164 <__alt_data_end+0xfffed164>
1010d440:	010007c4 	movi	r4,31
1010d444:	20803a16 	blt	r4,r2,1010d530 <__subdf3+0x5f4>
1010d448:	01000804 	movi	r4,32
1010d44c:	2089c83a 	sub	r4,r4,r2
1010d450:	2912983a 	sll	r9,r5,r4
1010d454:	3090d83a 	srl	r8,r6,r2
1010d458:	3108983a 	sll	r4,r6,r4
1010d45c:	2884d83a 	srl	r2,r5,r2
1010d460:	4a12b03a 	or	r9,r9,r8
1010d464:	2008c03a 	cmpne	r4,r4,zero
1010d468:	4912b03a 	or	r9,r9,r4
1010d46c:	003f4e06 	br	1010d1a8 <__alt_data_end+0xfffed1a8>
1010d470:	1c48b03a 	or	r4,r3,r17
1010d474:	20003c26 	beq	r4,zero,1010d568 <__subdf3+0x62c>
1010d478:	0084303a 	nor	r2,zero,r2
1010d47c:	1000381e 	bne	r2,zero,1010d560 <__subdf3+0x624>
1010d480:	3463c83a 	sub	r17,r6,r17
1010d484:	28c5c83a 	sub	r2,r5,r3
1010d488:	344d803a 	cmpltu	r6,r6,r17
1010d48c:	1187c83a 	sub	r3,r2,r6
1010d490:	4821883a 	mov	r16,r9
1010d494:	3825883a 	mov	r18,r7
1010d498:	003f0606 	br	1010d0b4 <__alt_data_end+0xfffed0b4>
1010d49c:	2023883a 	mov	r17,r4
1010d4a0:	003f0906 	br	1010d0c8 <__alt_data_end+0xfffed0c8>
1010d4a4:	0101ffc4 	movi	r4,2047
1010d4a8:	813f3a1e 	bne	r16,r4,1010d194 <__alt_data_end+0xfffed194>
1010d4ac:	003ec406 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d4b0:	0005883a 	mov	r2,zero
1010d4b4:	003fb106 	br	1010d37c <__alt_data_end+0xfffed37c>
1010d4b8:	0005883a 	mov	r2,zero
1010d4bc:	003fbc06 	br	1010d3b0 <__alt_data_end+0xfffed3b0>
1010d4c0:	1c44b03a 	or	r2,r3,r17
1010d4c4:	80008e1e 	bne	r16,zero,1010d700 <__subdf3+0x7c4>
1010d4c8:	1000c826 	beq	r2,zero,1010d7ec <__subdf3+0x8b0>
1010d4cc:	2984b03a 	or	r2,r5,r6
1010d4d0:	103ebb26 	beq	r2,zero,1010cfc0 <__alt_data_end+0xfffecfc0>
1010d4d4:	8989883a 	add	r4,r17,r6
1010d4d8:	1945883a 	add	r2,r3,r5
1010d4dc:	2447803a 	cmpltu	r3,r4,r17
1010d4e0:	1887883a 	add	r3,r3,r2
1010d4e4:	1880202c 	andhi	r2,r3,128
1010d4e8:	2023883a 	mov	r17,r4
1010d4ec:	103f1626 	beq	r2,zero,1010d148 <__alt_data_end+0xfffed148>
1010d4f0:	00bfe034 	movhi	r2,65408
1010d4f4:	10bfffc4 	addi	r2,r2,-1
1010d4f8:	5021883a 	mov	r16,r10
1010d4fc:	1886703a 	and	r3,r3,r2
1010d500:	003eaf06 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d504:	3825883a 	mov	r18,r7
1010d508:	003f0f06 	br	1010d148 <__alt_data_end+0xfffed148>
1010d50c:	1c44b03a 	or	r2,r3,r17
1010d510:	8000251e 	bne	r16,zero,1010d5a8 <__subdf3+0x66c>
1010d514:	1000661e 	bne	r2,zero,1010d6b0 <__subdf3+0x774>
1010d518:	2990b03a 	or	r8,r5,r6
1010d51c:	40009626 	beq	r8,zero,1010d778 <__subdf3+0x83c>
1010d520:	2807883a 	mov	r3,r5
1010d524:	3023883a 	mov	r17,r6
1010d528:	3825883a 	mov	r18,r7
1010d52c:	003ea406 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d530:	127ff804 	addi	r9,r2,-32
1010d534:	01000804 	movi	r4,32
1010d538:	2a52d83a 	srl	r9,r5,r9
1010d53c:	11008c26 	beq	r2,r4,1010d770 <__subdf3+0x834>
1010d540:	01001004 	movi	r4,64
1010d544:	2085c83a 	sub	r2,r4,r2
1010d548:	2884983a 	sll	r2,r5,r2
1010d54c:	118cb03a 	or	r6,r2,r6
1010d550:	300cc03a 	cmpne	r6,r6,zero
1010d554:	4992b03a 	or	r9,r9,r6
1010d558:	0005883a 	mov	r2,zero
1010d55c:	003f1206 	br	1010d1a8 <__alt_data_end+0xfffed1a8>
1010d560:	0101ffc4 	movi	r4,2047
1010d564:	493f9c1e 	bne	r9,r4,1010d3d8 <__alt_data_end+0xfffed3d8>
1010d568:	2807883a 	mov	r3,r5
1010d56c:	3023883a 	mov	r17,r6
1010d570:	4821883a 	mov	r16,r9
1010d574:	3825883a 	mov	r18,r7
1010d578:	003e9106 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d57c:	80001f1e 	bne	r16,zero,1010d5fc <__subdf3+0x6c0>
1010d580:	1c48b03a 	or	r4,r3,r17
1010d584:	20005a26 	beq	r4,zero,1010d6f0 <__subdf3+0x7b4>
1010d588:	0084303a 	nor	r2,zero,r2
1010d58c:	1000561e 	bne	r2,zero,1010d6e8 <__subdf3+0x7ac>
1010d590:	89a3883a 	add	r17,r17,r6
1010d594:	1945883a 	add	r2,r3,r5
1010d598:	898d803a 	cmpltu	r6,r17,r6
1010d59c:	3087883a 	add	r3,r6,r2
1010d5a0:	4821883a 	mov	r16,r9
1010d5a4:	003f0506 	br	1010d1bc <__alt_data_end+0xfffed1bc>
1010d5a8:	10002b1e 	bne	r2,zero,1010d658 <__subdf3+0x71c>
1010d5ac:	2984b03a 	or	r2,r5,r6
1010d5b0:	10008026 	beq	r2,zero,1010d7b4 <__subdf3+0x878>
1010d5b4:	2807883a 	mov	r3,r5
1010d5b8:	3023883a 	mov	r17,r6
1010d5bc:	3825883a 	mov	r18,r7
1010d5c0:	0401ffc4 	movi	r16,2047
1010d5c4:	003e7e06 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d5c8:	3809883a 	mov	r4,r7
1010d5cc:	0011883a 	mov	r8,zero
1010d5d0:	0005883a 	mov	r2,zero
1010d5d4:	003ee306 	br	1010d164 <__alt_data_end+0xfffed164>
1010d5d8:	1c62b03a 	or	r17,r3,r17
1010d5dc:	8822c03a 	cmpne	r17,r17,zero
1010d5e0:	0005883a 	mov	r2,zero
1010d5e4:	003f8906 	br	1010d40c <__alt_data_end+0xfffed40c>
1010d5e8:	3809883a 	mov	r4,r7
1010d5ec:	4821883a 	mov	r16,r9
1010d5f0:	0011883a 	mov	r8,zero
1010d5f4:	0005883a 	mov	r2,zero
1010d5f8:	003eda06 	br	1010d164 <__alt_data_end+0xfffed164>
1010d5fc:	0101ffc4 	movi	r4,2047
1010d600:	49003b26 	beq	r9,r4,1010d6f0 <__subdf3+0x7b4>
1010d604:	0085c83a 	sub	r2,zero,r2
1010d608:	18c02034 	orhi	r3,r3,128
1010d60c:	01000e04 	movi	r4,56
1010d610:	20806e16 	blt	r4,r2,1010d7cc <__subdf3+0x890>
1010d614:	010007c4 	movi	r4,31
1010d618:	20807716 	blt	r4,r2,1010d7f8 <__subdf3+0x8bc>
1010d61c:	01000804 	movi	r4,32
1010d620:	2089c83a 	sub	r4,r4,r2
1010d624:	1914983a 	sll	r10,r3,r4
1010d628:	8890d83a 	srl	r8,r17,r2
1010d62c:	8908983a 	sll	r4,r17,r4
1010d630:	1884d83a 	srl	r2,r3,r2
1010d634:	5222b03a 	or	r17,r10,r8
1010d638:	2006c03a 	cmpne	r3,r4,zero
1010d63c:	88e2b03a 	or	r17,r17,r3
1010d640:	89a3883a 	add	r17,r17,r6
1010d644:	1145883a 	add	r2,r2,r5
1010d648:	898d803a 	cmpltu	r6,r17,r6
1010d64c:	3087883a 	add	r3,r6,r2
1010d650:	4821883a 	mov	r16,r9
1010d654:	003ed906 	br	1010d1bc <__alt_data_end+0xfffed1bc>
1010d658:	2984b03a 	or	r2,r5,r6
1010d65c:	10004226 	beq	r2,zero,1010d768 <__subdf3+0x82c>
1010d660:	1808d0fa 	srli	r4,r3,3
1010d664:	8822d0fa 	srli	r17,r17,3
1010d668:	1806977a 	slli	r3,r3,29
1010d66c:	2080022c 	andhi	r2,r4,8
1010d670:	1c62b03a 	or	r17,r3,r17
1010d674:	10000826 	beq	r2,zero,1010d698 <__subdf3+0x75c>
1010d678:	2812d0fa 	srli	r9,r5,3
1010d67c:	4880022c 	andhi	r2,r9,8
1010d680:	1000051e 	bne	r2,zero,1010d698 <__subdf3+0x75c>
1010d684:	300cd0fa 	srli	r6,r6,3
1010d688:	2804977a 	slli	r2,r5,29
1010d68c:	4809883a 	mov	r4,r9
1010d690:	3825883a 	mov	r18,r7
1010d694:	11a2b03a 	or	r17,r2,r6
1010d698:	8806d77a 	srli	r3,r17,29
1010d69c:	200890fa 	slli	r4,r4,3
1010d6a0:	882290fa 	slli	r17,r17,3
1010d6a4:	0401ffc4 	movi	r16,2047
1010d6a8:	1906b03a 	or	r3,r3,r4
1010d6ac:	003e4406 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d6b0:	2984b03a 	or	r2,r5,r6
1010d6b4:	103e4226 	beq	r2,zero,1010cfc0 <__alt_data_end+0xfffecfc0>
1010d6b8:	8989c83a 	sub	r4,r17,r6
1010d6bc:	8911803a 	cmpltu	r8,r17,r4
1010d6c0:	1945c83a 	sub	r2,r3,r5
1010d6c4:	1205c83a 	sub	r2,r2,r8
1010d6c8:	1200202c 	andhi	r8,r2,128
1010d6cc:	403e9a26 	beq	r8,zero,1010d138 <__alt_data_end+0xfffed138>
1010d6d0:	3463c83a 	sub	r17,r6,r17
1010d6d4:	28c5c83a 	sub	r2,r5,r3
1010d6d8:	344d803a 	cmpltu	r6,r6,r17
1010d6dc:	1187c83a 	sub	r3,r2,r6
1010d6e0:	3825883a 	mov	r18,r7
1010d6e4:	003e3606 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d6e8:	0101ffc4 	movi	r4,2047
1010d6ec:	493fc71e 	bne	r9,r4,1010d60c <__alt_data_end+0xfffed60c>
1010d6f0:	2807883a 	mov	r3,r5
1010d6f4:	3023883a 	mov	r17,r6
1010d6f8:	4821883a 	mov	r16,r9
1010d6fc:	003e3006 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d700:	10003626 	beq	r2,zero,1010d7dc <__subdf3+0x8a0>
1010d704:	2984b03a 	or	r2,r5,r6
1010d708:	10001726 	beq	r2,zero,1010d768 <__subdf3+0x82c>
1010d70c:	1808d0fa 	srli	r4,r3,3
1010d710:	8822d0fa 	srli	r17,r17,3
1010d714:	1806977a 	slli	r3,r3,29
1010d718:	2080022c 	andhi	r2,r4,8
1010d71c:	1c62b03a 	or	r17,r3,r17
1010d720:	10000726 	beq	r2,zero,1010d740 <__subdf3+0x804>
1010d724:	2812d0fa 	srli	r9,r5,3
1010d728:	4880022c 	andhi	r2,r9,8
1010d72c:	1000041e 	bne	r2,zero,1010d740 <__subdf3+0x804>
1010d730:	300cd0fa 	srli	r6,r6,3
1010d734:	2804977a 	slli	r2,r5,29
1010d738:	4809883a 	mov	r4,r9
1010d73c:	11a2b03a 	or	r17,r2,r6
1010d740:	8806d77a 	srli	r3,r17,29
1010d744:	200890fa 	slli	r4,r4,3
1010d748:	882290fa 	slli	r17,r17,3
1010d74c:	3825883a 	mov	r18,r7
1010d750:	1906b03a 	or	r3,r3,r4
1010d754:	0401ffc4 	movi	r16,2047
1010d758:	003e1906 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d75c:	000b883a 	mov	r5,zero
1010d760:	0005883a 	mov	r2,zero
1010d764:	003e2e06 	br	1010d020 <__alt_data_end+0xfffed020>
1010d768:	0401ffc4 	movi	r16,2047
1010d76c:	003e1406 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d770:	0005883a 	mov	r2,zero
1010d774:	003f7506 	br	1010d54c <__alt_data_end+0xfffed54c>
1010d778:	0005883a 	mov	r2,zero
1010d77c:	0009883a 	mov	r4,zero
1010d780:	003e7806 	br	1010d164 <__alt_data_end+0xfffed164>
1010d784:	123ff804 	addi	r8,r2,-32
1010d788:	01000804 	movi	r4,32
1010d78c:	1a10d83a 	srl	r8,r3,r8
1010d790:	11002526 	beq	r2,r4,1010d828 <__subdf3+0x8ec>
1010d794:	01001004 	movi	r4,64
1010d798:	2085c83a 	sub	r2,r4,r2
1010d79c:	1884983a 	sll	r2,r3,r2
1010d7a0:	1444b03a 	or	r2,r2,r17
1010d7a4:	1004c03a 	cmpne	r2,r2,zero
1010d7a8:	40a2b03a 	or	r17,r8,r2
1010d7ac:	0005883a 	mov	r2,zero
1010d7b0:	003f1606 	br	1010d40c <__alt_data_end+0xfffed40c>
1010d7b4:	02000434 	movhi	r8,16
1010d7b8:	0009883a 	mov	r4,zero
1010d7bc:	423fffc4 	addi	r8,r8,-1
1010d7c0:	00bfffc4 	movi	r2,-1
1010d7c4:	0401ffc4 	movi	r16,2047
1010d7c8:	003e6606 	br	1010d164 <__alt_data_end+0xfffed164>
1010d7cc:	1c62b03a 	or	r17,r3,r17
1010d7d0:	8822c03a 	cmpne	r17,r17,zero
1010d7d4:	0005883a 	mov	r2,zero
1010d7d8:	003f9906 	br	1010d640 <__alt_data_end+0xfffed640>
1010d7dc:	2807883a 	mov	r3,r5
1010d7e0:	3023883a 	mov	r17,r6
1010d7e4:	0401ffc4 	movi	r16,2047
1010d7e8:	003df506 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d7ec:	2807883a 	mov	r3,r5
1010d7f0:	3023883a 	mov	r17,r6
1010d7f4:	003df206 	br	1010cfc0 <__alt_data_end+0xfffecfc0>
1010d7f8:	123ff804 	addi	r8,r2,-32
1010d7fc:	01000804 	movi	r4,32
1010d800:	1a10d83a 	srl	r8,r3,r8
1010d804:	11000a26 	beq	r2,r4,1010d830 <__subdf3+0x8f4>
1010d808:	01001004 	movi	r4,64
1010d80c:	2085c83a 	sub	r2,r4,r2
1010d810:	1884983a 	sll	r2,r3,r2
1010d814:	1444b03a 	or	r2,r2,r17
1010d818:	1004c03a 	cmpne	r2,r2,zero
1010d81c:	40a2b03a 	or	r17,r8,r2
1010d820:	0005883a 	mov	r2,zero
1010d824:	003f8606 	br	1010d640 <__alt_data_end+0xfffed640>
1010d828:	0005883a 	mov	r2,zero
1010d82c:	003fdc06 	br	1010d7a0 <__alt_data_end+0xfffed7a0>
1010d830:	0005883a 	mov	r2,zero
1010d834:	003ff706 	br	1010d814 <__alt_data_end+0xfffed814>

1010d838 <__fixdfsi>:
1010d838:	280cd53a 	srli	r6,r5,20
1010d83c:	00c00434 	movhi	r3,16
1010d840:	18ffffc4 	addi	r3,r3,-1
1010d844:	3181ffcc 	andi	r6,r6,2047
1010d848:	01c0ff84 	movi	r7,1022
1010d84c:	28c6703a 	and	r3,r5,r3
1010d850:	280ad7fa 	srli	r5,r5,31
1010d854:	3980120e 	bge	r7,r6,1010d8a0 <__fixdfsi+0x68>
1010d858:	00810744 	movi	r2,1053
1010d85c:	11800c16 	blt	r2,r6,1010d890 <__fixdfsi+0x58>
1010d860:	00810cc4 	movi	r2,1075
1010d864:	1185c83a 	sub	r2,r2,r6
1010d868:	01c007c4 	movi	r7,31
1010d86c:	18c00434 	orhi	r3,r3,16
1010d870:	38800d16 	blt	r7,r2,1010d8a8 <__fixdfsi+0x70>
1010d874:	31befb44 	addi	r6,r6,-1043
1010d878:	2084d83a 	srl	r2,r4,r2
1010d87c:	1986983a 	sll	r3,r3,r6
1010d880:	1884b03a 	or	r2,r3,r2
1010d884:	28000726 	beq	r5,zero,1010d8a4 <__fixdfsi+0x6c>
1010d888:	0085c83a 	sub	r2,zero,r2
1010d88c:	f800283a 	ret
1010d890:	00a00034 	movhi	r2,32768
1010d894:	10bfffc4 	addi	r2,r2,-1
1010d898:	2885883a 	add	r2,r5,r2
1010d89c:	f800283a 	ret
1010d8a0:	0005883a 	mov	r2,zero
1010d8a4:	f800283a 	ret
1010d8a8:	008104c4 	movi	r2,1043
1010d8ac:	1185c83a 	sub	r2,r2,r6
1010d8b0:	1884d83a 	srl	r2,r3,r2
1010d8b4:	003ff306 	br	1010d884 <__alt_data_end+0xfffed884>

1010d8b8 <__floatsidf>:
1010d8b8:	defffd04 	addi	sp,sp,-12
1010d8bc:	dfc00215 	stw	ra,8(sp)
1010d8c0:	dc400115 	stw	r17,4(sp)
1010d8c4:	dc000015 	stw	r16,0(sp)
1010d8c8:	20002b26 	beq	r4,zero,1010d978 <__floatsidf+0xc0>
1010d8cc:	2023883a 	mov	r17,r4
1010d8d0:	2020d7fa 	srli	r16,r4,31
1010d8d4:	20002d16 	blt	r4,zero,1010d98c <__floatsidf+0xd4>
1010d8d8:	8809883a 	mov	r4,r17
1010d8dc:	010da3c0 	call	1010da3c <__clzsi2>
1010d8e0:	01410784 	movi	r5,1054
1010d8e4:	288bc83a 	sub	r5,r5,r2
1010d8e8:	01010cc4 	movi	r4,1075
1010d8ec:	2149c83a 	sub	r4,r4,r5
1010d8f0:	00c007c4 	movi	r3,31
1010d8f4:	1900160e 	bge	r3,r4,1010d950 <__floatsidf+0x98>
1010d8f8:	00c104c4 	movi	r3,1043
1010d8fc:	1947c83a 	sub	r3,r3,r5
1010d900:	88c6983a 	sll	r3,r17,r3
1010d904:	00800434 	movhi	r2,16
1010d908:	10bfffc4 	addi	r2,r2,-1
1010d90c:	1886703a 	and	r3,r3,r2
1010d910:	2941ffcc 	andi	r5,r5,2047
1010d914:	800d883a 	mov	r6,r16
1010d918:	0005883a 	mov	r2,zero
1010d91c:	280a953a 	slli	r5,r5,20
1010d920:	31803fcc 	andi	r6,r6,255
1010d924:	01000434 	movhi	r4,16
1010d928:	300c97fa 	slli	r6,r6,31
1010d92c:	213fffc4 	addi	r4,r4,-1
1010d930:	1906703a 	and	r3,r3,r4
1010d934:	1946b03a 	or	r3,r3,r5
1010d938:	1986b03a 	or	r3,r3,r6
1010d93c:	dfc00217 	ldw	ra,8(sp)
1010d940:	dc400117 	ldw	r17,4(sp)
1010d944:	dc000017 	ldw	r16,0(sp)
1010d948:	dec00304 	addi	sp,sp,12
1010d94c:	f800283a 	ret
1010d950:	00c002c4 	movi	r3,11
1010d954:	1887c83a 	sub	r3,r3,r2
1010d958:	88c6d83a 	srl	r3,r17,r3
1010d95c:	8904983a 	sll	r2,r17,r4
1010d960:	01000434 	movhi	r4,16
1010d964:	213fffc4 	addi	r4,r4,-1
1010d968:	2941ffcc 	andi	r5,r5,2047
1010d96c:	1906703a 	and	r3,r3,r4
1010d970:	800d883a 	mov	r6,r16
1010d974:	003fe906 	br	1010d91c <__alt_data_end+0xfffed91c>
1010d978:	000d883a 	mov	r6,zero
1010d97c:	000b883a 	mov	r5,zero
1010d980:	0007883a 	mov	r3,zero
1010d984:	0005883a 	mov	r2,zero
1010d988:	003fe406 	br	1010d91c <__alt_data_end+0xfffed91c>
1010d98c:	0123c83a 	sub	r17,zero,r4
1010d990:	003fd106 	br	1010d8d8 <__alt_data_end+0xfffed8d8>

1010d994 <__floatunsidf>:
1010d994:	defffe04 	addi	sp,sp,-8
1010d998:	dc000015 	stw	r16,0(sp)
1010d99c:	dfc00115 	stw	ra,4(sp)
1010d9a0:	2021883a 	mov	r16,r4
1010d9a4:	20002226 	beq	r4,zero,1010da30 <__floatunsidf+0x9c>
1010d9a8:	010da3c0 	call	1010da3c <__clzsi2>
1010d9ac:	01010784 	movi	r4,1054
1010d9b0:	2089c83a 	sub	r4,r4,r2
1010d9b4:	01810cc4 	movi	r6,1075
1010d9b8:	310dc83a 	sub	r6,r6,r4
1010d9bc:	00c007c4 	movi	r3,31
1010d9c0:	1980120e 	bge	r3,r6,1010da0c <__floatunsidf+0x78>
1010d9c4:	00c104c4 	movi	r3,1043
1010d9c8:	1907c83a 	sub	r3,r3,r4
1010d9cc:	80ca983a 	sll	r5,r16,r3
1010d9d0:	00800434 	movhi	r2,16
1010d9d4:	10bfffc4 	addi	r2,r2,-1
1010d9d8:	2101ffcc 	andi	r4,r4,2047
1010d9dc:	0021883a 	mov	r16,zero
1010d9e0:	288a703a 	and	r5,r5,r2
1010d9e4:	2008953a 	slli	r4,r4,20
1010d9e8:	00c00434 	movhi	r3,16
1010d9ec:	18ffffc4 	addi	r3,r3,-1
1010d9f0:	28c6703a 	and	r3,r5,r3
1010d9f4:	8005883a 	mov	r2,r16
1010d9f8:	1906b03a 	or	r3,r3,r4
1010d9fc:	dfc00117 	ldw	ra,4(sp)
1010da00:	dc000017 	ldw	r16,0(sp)
1010da04:	dec00204 	addi	sp,sp,8
1010da08:	f800283a 	ret
1010da0c:	00c002c4 	movi	r3,11
1010da10:	188bc83a 	sub	r5,r3,r2
1010da14:	814ad83a 	srl	r5,r16,r5
1010da18:	00c00434 	movhi	r3,16
1010da1c:	18ffffc4 	addi	r3,r3,-1
1010da20:	81a0983a 	sll	r16,r16,r6
1010da24:	2101ffcc 	andi	r4,r4,2047
1010da28:	28ca703a 	and	r5,r5,r3
1010da2c:	003fed06 	br	1010d9e4 <__alt_data_end+0xfffed9e4>
1010da30:	0009883a 	mov	r4,zero
1010da34:	000b883a 	mov	r5,zero
1010da38:	003fea06 	br	1010d9e4 <__alt_data_end+0xfffed9e4>

1010da3c <__clzsi2>:
1010da3c:	00bfffd4 	movui	r2,65535
1010da40:	11000536 	bltu	r2,r4,1010da58 <__clzsi2+0x1c>
1010da44:	00803fc4 	movi	r2,255
1010da48:	11000f36 	bltu	r2,r4,1010da88 <__clzsi2+0x4c>
1010da4c:	00800804 	movi	r2,32
1010da50:	0007883a 	mov	r3,zero
1010da54:	00000506 	br	1010da6c <__clzsi2+0x30>
1010da58:	00804034 	movhi	r2,256
1010da5c:	10bfffc4 	addi	r2,r2,-1
1010da60:	11000c2e 	bgeu	r2,r4,1010da94 <__clzsi2+0x58>
1010da64:	00800204 	movi	r2,8
1010da68:	00c00604 	movi	r3,24
1010da6c:	20c8d83a 	srl	r4,r4,r3
1010da70:	00c40474 	movhi	r3,4113
1010da74:	18c22304 	addi	r3,r3,2188
1010da78:	1909883a 	add	r4,r3,r4
1010da7c:	20c00003 	ldbu	r3,0(r4)
1010da80:	10c5c83a 	sub	r2,r2,r3
1010da84:	f800283a 	ret
1010da88:	00800604 	movi	r2,24
1010da8c:	00c00204 	movi	r3,8
1010da90:	003ff606 	br	1010da6c <__alt_data_end+0xfffeda6c>
1010da94:	00800404 	movi	r2,16
1010da98:	1007883a 	mov	r3,r2
1010da9c:	003ff306 	br	1010da6c <__alt_data_end+0xfffeda6c>

1010daa0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010daa0:	defffe04 	addi	sp,sp,-8
1010daa4:	dfc00115 	stw	ra,4(sp)
1010daa8:	df000015 	stw	fp,0(sp)
1010daac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010dab0:	d0a00b17 	ldw	r2,-32724(gp)
1010dab4:	10000326 	beq	r2,zero,1010dac4 <alt_get_errno+0x24>
1010dab8:	d0a00b17 	ldw	r2,-32724(gp)
1010dabc:	103ee83a 	callr	r2
1010dac0:	00000106 	br	1010dac8 <alt_get_errno+0x28>
1010dac4:	d0a6ff04 	addi	r2,gp,-25604
}
1010dac8:	e037883a 	mov	sp,fp
1010dacc:	dfc00117 	ldw	ra,4(sp)
1010dad0:	df000017 	ldw	fp,0(sp)
1010dad4:	dec00204 	addi	sp,sp,8
1010dad8:	f800283a 	ret

1010dadc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1010dadc:	defffb04 	addi	sp,sp,-20
1010dae0:	dfc00415 	stw	ra,16(sp)
1010dae4:	df000315 	stw	fp,12(sp)
1010dae8:	df000304 	addi	fp,sp,12
1010daec:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1010daf0:	e0bfff17 	ldw	r2,-4(fp)
1010daf4:	10000816 	blt	r2,zero,1010db18 <close+0x3c>
1010daf8:	01400304 	movi	r5,12
1010dafc:	e13fff17 	ldw	r4,-4(fp)
1010db00:	0100d140 	call	10100d14 <__mulsi3>
1010db04:	1007883a 	mov	r3,r2
1010db08:	00840474 	movhi	r2,4113
1010db0c:	1084a604 	addi	r2,r2,4760
1010db10:	1885883a 	add	r2,r3,r2
1010db14:	00000106 	br	1010db1c <close+0x40>
1010db18:	0005883a 	mov	r2,zero
1010db1c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1010db20:	e0bffd17 	ldw	r2,-12(fp)
1010db24:	10001926 	beq	r2,zero,1010db8c <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1010db28:	e0bffd17 	ldw	r2,-12(fp)
1010db2c:	10800017 	ldw	r2,0(r2)
1010db30:	10800417 	ldw	r2,16(r2)
1010db34:	10000626 	beq	r2,zero,1010db50 <close+0x74>
1010db38:	e0bffd17 	ldw	r2,-12(fp)
1010db3c:	10800017 	ldw	r2,0(r2)
1010db40:	10800417 	ldw	r2,16(r2)
1010db44:	e13ffd17 	ldw	r4,-12(fp)
1010db48:	103ee83a 	callr	r2
1010db4c:	00000106 	br	1010db54 <close+0x78>
1010db50:	0005883a 	mov	r2,zero
1010db54:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1010db58:	e13fff17 	ldw	r4,-4(fp)
1010db5c:	010e1c40 	call	1010e1c4 <alt_release_fd>
    if (rval < 0)
1010db60:	e0bffe17 	ldw	r2,-8(fp)
1010db64:	1000070e 	bge	r2,zero,1010db84 <close+0xa8>
    {
      ALT_ERRNO = -rval;
1010db68:	010daa00 	call	1010daa0 <alt_get_errno>
1010db6c:	1007883a 	mov	r3,r2
1010db70:	e0bffe17 	ldw	r2,-8(fp)
1010db74:	0085c83a 	sub	r2,zero,r2
1010db78:	18800015 	stw	r2,0(r3)
      return -1;
1010db7c:	00bfffc4 	movi	r2,-1
1010db80:	00000706 	br	1010dba0 <close+0xc4>
    }
    return 0;
1010db84:	0005883a 	mov	r2,zero
1010db88:	00000506 	br	1010dba0 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010db8c:	010daa00 	call	1010daa0 <alt_get_errno>
1010db90:	1007883a 	mov	r3,r2
1010db94:	00801444 	movi	r2,81
1010db98:	18800015 	stw	r2,0(r3)
    return -1;
1010db9c:	00bfffc4 	movi	r2,-1
  }
}
1010dba0:	e037883a 	mov	sp,fp
1010dba4:	dfc00117 	ldw	ra,4(sp)
1010dba8:	df000017 	ldw	fp,0(sp)
1010dbac:	dec00204 	addi	sp,sp,8
1010dbb0:	f800283a 	ret

1010dbb4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1010dbb4:	defffc04 	addi	sp,sp,-16
1010dbb8:	df000315 	stw	fp,12(sp)
1010dbbc:	df000304 	addi	fp,sp,12
1010dbc0:	e13ffd15 	stw	r4,-12(fp)
1010dbc4:	e17ffe15 	stw	r5,-8(fp)
1010dbc8:	e1bfff15 	stw	r6,-4(fp)
  return len;
1010dbcc:	e0bfff17 	ldw	r2,-4(fp)
}
1010dbd0:	e037883a 	mov	sp,fp
1010dbd4:	df000017 	ldw	fp,0(sp)
1010dbd8:	dec00104 	addi	sp,sp,4
1010dbdc:	f800283a 	ret

1010dbe0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010dbe0:	defffe04 	addi	sp,sp,-8
1010dbe4:	dfc00115 	stw	ra,4(sp)
1010dbe8:	df000015 	stw	fp,0(sp)
1010dbec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010dbf0:	d0a00b17 	ldw	r2,-32724(gp)
1010dbf4:	10000326 	beq	r2,zero,1010dc04 <alt_get_errno+0x24>
1010dbf8:	d0a00b17 	ldw	r2,-32724(gp)
1010dbfc:	103ee83a 	callr	r2
1010dc00:	00000106 	br	1010dc08 <alt_get_errno+0x28>
1010dc04:	d0a6ff04 	addi	r2,gp,-25604
}
1010dc08:	e037883a 	mov	sp,fp
1010dc0c:	dfc00117 	ldw	ra,4(sp)
1010dc10:	df000017 	ldw	fp,0(sp)
1010dc14:	dec00204 	addi	sp,sp,8
1010dc18:	f800283a 	ret

1010dc1c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1010dc1c:	defffb04 	addi	sp,sp,-20
1010dc20:	dfc00415 	stw	ra,16(sp)
1010dc24:	df000315 	stw	fp,12(sp)
1010dc28:	df000304 	addi	fp,sp,12
1010dc2c:	e13ffe15 	stw	r4,-8(fp)
1010dc30:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010dc34:	e0bffe17 	ldw	r2,-8(fp)
1010dc38:	10000816 	blt	r2,zero,1010dc5c <fstat+0x40>
1010dc3c:	01400304 	movi	r5,12
1010dc40:	e13ffe17 	ldw	r4,-8(fp)
1010dc44:	0100d140 	call	10100d14 <__mulsi3>
1010dc48:	1007883a 	mov	r3,r2
1010dc4c:	00840474 	movhi	r2,4113
1010dc50:	1084a604 	addi	r2,r2,4760
1010dc54:	1885883a 	add	r2,r3,r2
1010dc58:	00000106 	br	1010dc60 <fstat+0x44>
1010dc5c:	0005883a 	mov	r2,zero
1010dc60:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1010dc64:	e0bffd17 	ldw	r2,-12(fp)
1010dc68:	10001026 	beq	r2,zero,1010dcac <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1010dc6c:	e0bffd17 	ldw	r2,-12(fp)
1010dc70:	10800017 	ldw	r2,0(r2)
1010dc74:	10800817 	ldw	r2,32(r2)
1010dc78:	10000726 	beq	r2,zero,1010dc98 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
1010dc7c:	e0bffd17 	ldw	r2,-12(fp)
1010dc80:	10800017 	ldw	r2,0(r2)
1010dc84:	10800817 	ldw	r2,32(r2)
1010dc88:	e17fff17 	ldw	r5,-4(fp)
1010dc8c:	e13ffd17 	ldw	r4,-12(fp)
1010dc90:	103ee83a 	callr	r2
1010dc94:	00000a06 	br	1010dcc0 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1010dc98:	e0bfff17 	ldw	r2,-4(fp)
1010dc9c:	00c80004 	movi	r3,8192
1010dca0:	10c00115 	stw	r3,4(r2)
      return 0;
1010dca4:	0005883a 	mov	r2,zero
1010dca8:	00000506 	br	1010dcc0 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010dcac:	010dbe00 	call	1010dbe0 <alt_get_errno>
1010dcb0:	1007883a 	mov	r3,r2
1010dcb4:	00801444 	movi	r2,81
1010dcb8:	18800015 	stw	r2,0(r3)
    return -1;
1010dcbc:	00bfffc4 	movi	r2,-1
  }
}
1010dcc0:	e037883a 	mov	sp,fp
1010dcc4:	dfc00117 	ldw	ra,4(sp)
1010dcc8:	df000017 	ldw	fp,0(sp)
1010dccc:	dec00204 	addi	sp,sp,8
1010dcd0:	f800283a 	ret

1010dcd4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010dcd4:	defffe04 	addi	sp,sp,-8
1010dcd8:	dfc00115 	stw	ra,4(sp)
1010dcdc:	df000015 	stw	fp,0(sp)
1010dce0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010dce4:	d0a00b17 	ldw	r2,-32724(gp)
1010dce8:	10000326 	beq	r2,zero,1010dcf8 <alt_get_errno+0x24>
1010dcec:	d0a00b17 	ldw	r2,-32724(gp)
1010dcf0:	103ee83a 	callr	r2
1010dcf4:	00000106 	br	1010dcfc <alt_get_errno+0x28>
1010dcf8:	d0a6ff04 	addi	r2,gp,-25604
}
1010dcfc:	e037883a 	mov	sp,fp
1010dd00:	dfc00117 	ldw	ra,4(sp)
1010dd04:	df000017 	ldw	fp,0(sp)
1010dd08:	dec00204 	addi	sp,sp,8
1010dd0c:	f800283a 	ret

1010dd10 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1010dd10:	deffed04 	addi	sp,sp,-76
1010dd14:	dfc01215 	stw	ra,72(sp)
1010dd18:	df001115 	stw	fp,68(sp)
1010dd1c:	df001104 	addi	fp,sp,68
1010dd20:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010dd24:	e0bfff17 	ldw	r2,-4(fp)
1010dd28:	10000816 	blt	r2,zero,1010dd4c <isatty+0x3c>
1010dd2c:	01400304 	movi	r5,12
1010dd30:	e13fff17 	ldw	r4,-4(fp)
1010dd34:	0100d140 	call	10100d14 <__mulsi3>
1010dd38:	1007883a 	mov	r3,r2
1010dd3c:	00840474 	movhi	r2,4113
1010dd40:	1084a604 	addi	r2,r2,4760
1010dd44:	1885883a 	add	r2,r3,r2
1010dd48:	00000106 	br	1010dd50 <isatty+0x40>
1010dd4c:	0005883a 	mov	r2,zero
1010dd50:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1010dd54:	e0bfef17 	ldw	r2,-68(fp)
1010dd58:	10000e26 	beq	r2,zero,1010dd94 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1010dd5c:	e0bfef17 	ldw	r2,-68(fp)
1010dd60:	10800017 	ldw	r2,0(r2)
1010dd64:	10800817 	ldw	r2,32(r2)
1010dd68:	1000021e 	bne	r2,zero,1010dd74 <isatty+0x64>
    {
      return 1;
1010dd6c:	00800044 	movi	r2,1
1010dd70:	00000d06 	br	1010dda8 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1010dd74:	e0bff004 	addi	r2,fp,-64
1010dd78:	100b883a 	mov	r5,r2
1010dd7c:	e13fff17 	ldw	r4,-4(fp)
1010dd80:	010dc1c0 	call	1010dc1c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1010dd84:	e0bff117 	ldw	r2,-60(fp)
1010dd88:	10880020 	cmpeqi	r2,r2,8192
1010dd8c:	10803fcc 	andi	r2,r2,255
1010dd90:	00000506 	br	1010dda8 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010dd94:	010dcd40 	call	1010dcd4 <alt_get_errno>
1010dd98:	1007883a 	mov	r3,r2
1010dd9c:	00801444 	movi	r2,81
1010dda0:	18800015 	stw	r2,0(r3)
    return 0;
1010dda4:	0005883a 	mov	r2,zero
  }
}
1010dda8:	e037883a 	mov	sp,fp
1010ddac:	dfc00117 	ldw	ra,4(sp)
1010ddb0:	df000017 	ldw	fp,0(sp)
1010ddb4:	dec00204 	addi	sp,sp,8
1010ddb8:	f800283a 	ret

1010ddbc <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1010ddbc:	defffc04 	addi	sp,sp,-16
1010ddc0:	df000315 	stw	fp,12(sp)
1010ddc4:	df000304 	addi	fp,sp,12
1010ddc8:	e13ffd15 	stw	r4,-12(fp)
1010ddcc:	e17ffe15 	stw	r5,-8(fp)
1010ddd0:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1010ddd4:	e0fffe17 	ldw	r3,-8(fp)
1010ddd8:	e0bffd17 	ldw	r2,-12(fp)
1010dddc:	18800c26 	beq	r3,r2,1010de10 <alt_load_section+0x54>
  {
    while( to != end )
1010dde0:	00000806 	br	1010de04 <alt_load_section+0x48>
    {
      *to++ = *from++;
1010dde4:	e0bffe17 	ldw	r2,-8(fp)
1010dde8:	10c00104 	addi	r3,r2,4
1010ddec:	e0fffe15 	stw	r3,-8(fp)
1010ddf0:	e0fffd17 	ldw	r3,-12(fp)
1010ddf4:	19000104 	addi	r4,r3,4
1010ddf8:	e13ffd15 	stw	r4,-12(fp)
1010ddfc:	18c00017 	ldw	r3,0(r3)
1010de00:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1010de04:	e0fffe17 	ldw	r3,-8(fp)
1010de08:	e0bfff17 	ldw	r2,-4(fp)
1010de0c:	18bff51e 	bne	r3,r2,1010dde4 <__alt_data_end+0xfffedde4>
    {
      *to++ = *from++;
    }
  }
}
1010de10:	0001883a 	nop
1010de14:	e037883a 	mov	sp,fp
1010de18:	df000017 	ldw	fp,0(sp)
1010de1c:	dec00104 	addi	sp,sp,4
1010de20:	f800283a 	ret

1010de24 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1010de24:	defffe04 	addi	sp,sp,-8
1010de28:	dfc00115 	stw	ra,4(sp)
1010de2c:	df000015 	stw	fp,0(sp)
1010de30:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1010de34:	01840474 	movhi	r6,4113
1010de38:	31894a04 	addi	r6,r6,9512
1010de3c:	01440474 	movhi	r5,4113
1010de40:	29427304 	addi	r5,r5,2508
1010de44:	01040474 	movhi	r4,4113
1010de48:	21094a04 	addi	r4,r4,9512
1010de4c:	010ddbc0 	call	1010ddbc <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1010de50:	01840434 	movhi	r6,4112
1010de54:	31808c04 	addi	r6,r6,560
1010de58:	01440434 	movhi	r5,4112
1010de5c:	29400804 	addi	r5,r5,32
1010de60:	01040434 	movhi	r4,4112
1010de64:	21000804 	addi	r4,r4,32
1010de68:	010ddbc0 	call	1010ddbc <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1010de6c:	01840474 	movhi	r6,4113
1010de70:	31827304 	addi	r6,r6,2508
1010de74:	01440474 	movhi	r5,4113
1010de78:	29419104 	addi	r5,r5,1604
1010de7c:	01040474 	movhi	r4,4113
1010de80:	21019104 	addi	r4,r4,1604
1010de84:	010ddbc0 	call	1010ddbc <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1010de88:	010f50c0 	call	1010f50c <alt_dcache_flush_all>
  alt_icache_flush_all();
1010de8c:	010f74c0 	call	1010f74c <alt_icache_flush_all>
}
1010de90:	0001883a 	nop
1010de94:	e037883a 	mov	sp,fp
1010de98:	dfc00117 	ldw	ra,4(sp)
1010de9c:	df000017 	ldw	fp,0(sp)
1010dea0:	dec00204 	addi	sp,sp,8
1010dea4:	f800283a 	ret

1010dea8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010dea8:	defffe04 	addi	sp,sp,-8
1010deac:	dfc00115 	stw	ra,4(sp)
1010deb0:	df000015 	stw	fp,0(sp)
1010deb4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010deb8:	d0a00b17 	ldw	r2,-32724(gp)
1010debc:	10000326 	beq	r2,zero,1010decc <alt_get_errno+0x24>
1010dec0:	d0a00b17 	ldw	r2,-32724(gp)
1010dec4:	103ee83a 	callr	r2
1010dec8:	00000106 	br	1010ded0 <alt_get_errno+0x28>
1010decc:	d0a6ff04 	addi	r2,gp,-25604
}
1010ded0:	e037883a 	mov	sp,fp
1010ded4:	dfc00117 	ldw	ra,4(sp)
1010ded8:	df000017 	ldw	fp,0(sp)
1010dedc:	dec00204 	addi	sp,sp,8
1010dee0:	f800283a 	ret

1010dee4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1010dee4:	defff904 	addi	sp,sp,-28
1010dee8:	dfc00615 	stw	ra,24(sp)
1010deec:	df000515 	stw	fp,20(sp)
1010def0:	df000504 	addi	fp,sp,20
1010def4:	e13ffd15 	stw	r4,-12(fp)
1010def8:	e17ffe15 	stw	r5,-8(fp)
1010defc:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1010df00:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010df04:	e0bffd17 	ldw	r2,-12(fp)
1010df08:	10000816 	blt	r2,zero,1010df2c <lseek+0x48>
1010df0c:	01400304 	movi	r5,12
1010df10:	e13ffd17 	ldw	r4,-12(fp)
1010df14:	0100d140 	call	10100d14 <__mulsi3>
1010df18:	1007883a 	mov	r3,r2
1010df1c:	00840474 	movhi	r2,4113
1010df20:	1084a604 	addi	r2,r2,4760
1010df24:	1885883a 	add	r2,r3,r2
1010df28:	00000106 	br	1010df30 <lseek+0x4c>
1010df2c:	0005883a 	mov	r2,zero
1010df30:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1010df34:	e0bffc17 	ldw	r2,-16(fp)
1010df38:	10001026 	beq	r2,zero,1010df7c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1010df3c:	e0bffc17 	ldw	r2,-16(fp)
1010df40:	10800017 	ldw	r2,0(r2)
1010df44:	10800717 	ldw	r2,28(r2)
1010df48:	10000926 	beq	r2,zero,1010df70 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1010df4c:	e0bffc17 	ldw	r2,-16(fp)
1010df50:	10800017 	ldw	r2,0(r2)
1010df54:	10800717 	ldw	r2,28(r2)
1010df58:	e1bfff17 	ldw	r6,-4(fp)
1010df5c:	e17ffe17 	ldw	r5,-8(fp)
1010df60:	e13ffc17 	ldw	r4,-16(fp)
1010df64:	103ee83a 	callr	r2
1010df68:	e0bffb15 	stw	r2,-20(fp)
1010df6c:	00000506 	br	1010df84 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1010df70:	00bfde84 	movi	r2,-134
1010df74:	e0bffb15 	stw	r2,-20(fp)
1010df78:	00000206 	br	1010df84 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
1010df7c:	00bfebc4 	movi	r2,-81
1010df80:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1010df84:	e0bffb17 	ldw	r2,-20(fp)
1010df88:	1000070e 	bge	r2,zero,1010dfa8 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
1010df8c:	010dea80 	call	1010dea8 <alt_get_errno>
1010df90:	1007883a 	mov	r3,r2
1010df94:	e0bffb17 	ldw	r2,-20(fp)
1010df98:	0085c83a 	sub	r2,zero,r2
1010df9c:	18800015 	stw	r2,0(r3)
    rc = -1;
1010dfa0:	00bfffc4 	movi	r2,-1
1010dfa4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1010dfa8:	e0bffb17 	ldw	r2,-20(fp)
}
1010dfac:	e037883a 	mov	sp,fp
1010dfb0:	dfc00117 	ldw	ra,4(sp)
1010dfb4:	df000017 	ldw	fp,0(sp)
1010dfb8:	dec00204 	addi	sp,sp,8
1010dfbc:	f800283a 	ret

1010dfc0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1010dfc0:	defffd04 	addi	sp,sp,-12
1010dfc4:	dfc00215 	stw	ra,8(sp)
1010dfc8:	df000115 	stw	fp,4(sp)
1010dfcc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1010dfd0:	0009883a 	mov	r4,zero
1010dfd4:	010e4680 	call	1010e468 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1010dfd8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1010dfdc:	010e4a00 	call	1010e4a0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1010dfe0:	01840474 	movhi	r6,4113
1010dfe4:	31826604 	addi	r6,r6,2456
1010dfe8:	01440474 	movhi	r5,4113
1010dfec:	29426604 	addi	r5,r5,2456
1010dff0:	01040474 	movhi	r4,4113
1010dff4:	21026604 	addi	r4,r4,2456
1010dff8:	010faf00 	call	1010faf0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1010dffc:	010f60c0 	call	1010f60c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1010e000:	01040474 	movhi	r4,4113
1010e004:	213d9b04 	addi	r4,r4,-2452
1010e008:	01102b00 	call	101102b0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1010e00c:	d0a70017 	ldw	r2,-25600(gp)
1010e010:	d0e70117 	ldw	r3,-25596(gp)
1010e014:	d1270217 	ldw	r4,-25592(gp)
1010e018:	200d883a 	mov	r6,r4
1010e01c:	180b883a 	mov	r5,r3
1010e020:	1009883a 	mov	r4,r2
1010e024:	010026c0 	call	1010026c <main>
1010e028:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1010e02c:	01000044 	movi	r4,1
1010e030:	010dadc0 	call	1010dadc <close>
  exit (result);
1010e034:	e13fff17 	ldw	r4,-4(fp)
1010e038:	01102c40 	call	101102c4 <exit>

1010e03c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1010e03c:	defffe04 	addi	sp,sp,-8
1010e040:	df000115 	stw	fp,4(sp)
1010e044:	df000104 	addi	fp,sp,4
1010e048:	e13fff15 	stw	r4,-4(fp)
}
1010e04c:	0001883a 	nop
1010e050:	e037883a 	mov	sp,fp
1010e054:	df000017 	ldw	fp,0(sp)
1010e058:	dec00104 	addi	sp,sp,4
1010e05c:	f800283a 	ret

1010e060 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1010e060:	defffe04 	addi	sp,sp,-8
1010e064:	df000115 	stw	fp,4(sp)
1010e068:	df000104 	addi	fp,sp,4
1010e06c:	e13fff15 	stw	r4,-4(fp)
}
1010e070:	0001883a 	nop
1010e074:	e037883a 	mov	sp,fp
1010e078:	df000017 	ldw	fp,0(sp)
1010e07c:	dec00104 	addi	sp,sp,4
1010e080:	f800283a 	ret

1010e084 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e084:	defffe04 	addi	sp,sp,-8
1010e088:	dfc00115 	stw	ra,4(sp)
1010e08c:	df000015 	stw	fp,0(sp)
1010e090:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e094:	d0a00b17 	ldw	r2,-32724(gp)
1010e098:	10000326 	beq	r2,zero,1010e0a8 <alt_get_errno+0x24>
1010e09c:	d0a00b17 	ldw	r2,-32724(gp)
1010e0a0:	103ee83a 	callr	r2
1010e0a4:	00000106 	br	1010e0ac <alt_get_errno+0x28>
1010e0a8:	d0a6ff04 	addi	r2,gp,-25604
}
1010e0ac:	e037883a 	mov	sp,fp
1010e0b0:	dfc00117 	ldw	ra,4(sp)
1010e0b4:	df000017 	ldw	fp,0(sp)
1010e0b8:	dec00204 	addi	sp,sp,8
1010e0bc:	f800283a 	ret

1010e0c0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1010e0c0:	defff904 	addi	sp,sp,-28
1010e0c4:	dfc00615 	stw	ra,24(sp)
1010e0c8:	df000515 	stw	fp,20(sp)
1010e0cc:	df000504 	addi	fp,sp,20
1010e0d0:	e13ffd15 	stw	r4,-12(fp)
1010e0d4:	e17ffe15 	stw	r5,-8(fp)
1010e0d8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010e0dc:	e0bffd17 	ldw	r2,-12(fp)
1010e0e0:	10000816 	blt	r2,zero,1010e104 <read+0x44>
1010e0e4:	01400304 	movi	r5,12
1010e0e8:	e13ffd17 	ldw	r4,-12(fp)
1010e0ec:	0100d140 	call	10100d14 <__mulsi3>
1010e0f0:	1007883a 	mov	r3,r2
1010e0f4:	00840474 	movhi	r2,4113
1010e0f8:	1084a604 	addi	r2,r2,4760
1010e0fc:	1885883a 	add	r2,r3,r2
1010e100:	00000106 	br	1010e108 <read+0x48>
1010e104:	0005883a 	mov	r2,zero
1010e108:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010e10c:	e0bffb17 	ldw	r2,-20(fp)
1010e110:	10002226 	beq	r2,zero,1010e19c <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010e114:	e0bffb17 	ldw	r2,-20(fp)
1010e118:	10800217 	ldw	r2,8(r2)
1010e11c:	108000cc 	andi	r2,r2,3
1010e120:	10800060 	cmpeqi	r2,r2,1
1010e124:	1000181e 	bne	r2,zero,1010e188 <read+0xc8>
        (fd->dev->read))
1010e128:	e0bffb17 	ldw	r2,-20(fp)
1010e12c:	10800017 	ldw	r2,0(r2)
1010e130:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010e134:	10001426 	beq	r2,zero,1010e188 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1010e138:	e0bffb17 	ldw	r2,-20(fp)
1010e13c:	10800017 	ldw	r2,0(r2)
1010e140:	10800517 	ldw	r2,20(r2)
1010e144:	e0ffff17 	ldw	r3,-4(fp)
1010e148:	180d883a 	mov	r6,r3
1010e14c:	e17ffe17 	ldw	r5,-8(fp)
1010e150:	e13ffb17 	ldw	r4,-20(fp)
1010e154:	103ee83a 	callr	r2
1010e158:	e0bffc15 	stw	r2,-16(fp)
1010e15c:	e0bffc17 	ldw	r2,-16(fp)
1010e160:	1000070e 	bge	r2,zero,1010e180 <read+0xc0>
        {
          ALT_ERRNO = -rval;
1010e164:	010e0840 	call	1010e084 <alt_get_errno>
1010e168:	1007883a 	mov	r3,r2
1010e16c:	e0bffc17 	ldw	r2,-16(fp)
1010e170:	0085c83a 	sub	r2,zero,r2
1010e174:	18800015 	stw	r2,0(r3)
          return -1;
1010e178:	00bfffc4 	movi	r2,-1
1010e17c:	00000c06 	br	1010e1b0 <read+0xf0>
        }
        return rval;
1010e180:	e0bffc17 	ldw	r2,-16(fp)
1010e184:	00000a06 	br	1010e1b0 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
1010e188:	010e0840 	call	1010e084 <alt_get_errno>
1010e18c:	1007883a 	mov	r3,r2
1010e190:	00800344 	movi	r2,13
1010e194:	18800015 	stw	r2,0(r3)
1010e198:	00000406 	br	1010e1ac <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1010e19c:	010e0840 	call	1010e084 <alt_get_errno>
1010e1a0:	1007883a 	mov	r3,r2
1010e1a4:	00801444 	movi	r2,81
1010e1a8:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010e1ac:	00bfffc4 	movi	r2,-1
}
1010e1b0:	e037883a 	mov	sp,fp
1010e1b4:	dfc00117 	ldw	ra,4(sp)
1010e1b8:	df000017 	ldw	fp,0(sp)
1010e1bc:	dec00204 	addi	sp,sp,8
1010e1c0:	f800283a 	ret

1010e1c4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1010e1c4:	defffc04 	addi	sp,sp,-16
1010e1c8:	dfc00315 	stw	ra,12(sp)
1010e1cc:	df000215 	stw	fp,8(sp)
1010e1d0:	dc000115 	stw	r16,4(sp)
1010e1d4:	df000204 	addi	fp,sp,8
1010e1d8:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
1010e1dc:	e0bffe17 	ldw	r2,-8(fp)
1010e1e0:	108000d0 	cmplti	r2,r2,3
1010e1e4:	1000111e 	bne	r2,zero,1010e22c <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
1010e1e8:	04040474 	movhi	r16,4113
1010e1ec:	8404a604 	addi	r16,r16,4760
1010e1f0:	e0bffe17 	ldw	r2,-8(fp)
1010e1f4:	01400304 	movi	r5,12
1010e1f8:	1009883a 	mov	r4,r2
1010e1fc:	0100d140 	call	10100d14 <__mulsi3>
1010e200:	8085883a 	add	r2,r16,r2
1010e204:	10800204 	addi	r2,r2,8
1010e208:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1010e20c:	04040474 	movhi	r16,4113
1010e210:	8404a604 	addi	r16,r16,4760
1010e214:	e0bffe17 	ldw	r2,-8(fp)
1010e218:	01400304 	movi	r5,12
1010e21c:	1009883a 	mov	r4,r2
1010e220:	0100d140 	call	10100d14 <__mulsi3>
1010e224:	8085883a 	add	r2,r16,r2
1010e228:	10000015 	stw	zero,0(r2)
  }
}
1010e22c:	0001883a 	nop
1010e230:	e6ffff04 	addi	sp,fp,-4
1010e234:	dfc00217 	ldw	ra,8(sp)
1010e238:	df000117 	ldw	fp,4(sp)
1010e23c:	dc000017 	ldw	r16,0(sp)
1010e240:	dec00304 	addi	sp,sp,12
1010e244:	f800283a 	ret

1010e248 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1010e248:	defff904 	addi	sp,sp,-28
1010e24c:	df000615 	stw	fp,24(sp)
1010e250:	df000604 	addi	fp,sp,24
1010e254:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e258:	0005303a 	rdctl	r2,status
1010e25c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e260:	e0fffe17 	ldw	r3,-8(fp)
1010e264:	00bfff84 	movi	r2,-2
1010e268:	1884703a 	and	r2,r3,r2
1010e26c:	1001703a 	wrctl	status,r2
  
  return context;
1010e270:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1010e274:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1010e278:	d0a00c17 	ldw	r2,-32720(gp)
1010e27c:	10c000c4 	addi	r3,r2,3
1010e280:	00bfff04 	movi	r2,-4
1010e284:	1884703a 	and	r2,r3,r2
1010e288:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1010e28c:	d0e00c17 	ldw	r3,-32720(gp)
1010e290:	e0bfff17 	ldw	r2,-4(fp)
1010e294:	1887883a 	add	r3,r3,r2
1010e298:	008404b4 	movhi	r2,4114
1010e29c:	10800004 	addi	r2,r2,0
1010e2a0:	10c0062e 	bgeu	r2,r3,1010e2bc <sbrk+0x74>
1010e2a4:	e0bffb17 	ldw	r2,-20(fp)
1010e2a8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e2ac:	e0bffa17 	ldw	r2,-24(fp)
1010e2b0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1010e2b4:	00bfffc4 	movi	r2,-1
1010e2b8:	00000b06 	br	1010e2e8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1010e2bc:	d0a00c17 	ldw	r2,-32720(gp)
1010e2c0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
1010e2c4:	d0e00c17 	ldw	r3,-32720(gp)
1010e2c8:	e0bfff17 	ldw	r2,-4(fp)
1010e2cc:	1885883a 	add	r2,r3,r2
1010e2d0:	d0a00c15 	stw	r2,-32720(gp)
1010e2d4:	e0bffb17 	ldw	r2,-20(fp)
1010e2d8:	e0bffc15 	stw	r2,-16(fp)
1010e2dc:	e0bffc17 	ldw	r2,-16(fp)
1010e2e0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1010e2e4:	e0bffd17 	ldw	r2,-12(fp)
} 
1010e2e8:	e037883a 	mov	sp,fp
1010e2ec:	df000017 	ldw	fp,0(sp)
1010e2f0:	dec00104 	addi	sp,sp,4
1010e2f4:	f800283a 	ret

1010e2f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e2f8:	defffe04 	addi	sp,sp,-8
1010e2fc:	dfc00115 	stw	ra,4(sp)
1010e300:	df000015 	stw	fp,0(sp)
1010e304:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e308:	d0a00b17 	ldw	r2,-32724(gp)
1010e30c:	10000326 	beq	r2,zero,1010e31c <alt_get_errno+0x24>
1010e310:	d0a00b17 	ldw	r2,-32724(gp)
1010e314:	103ee83a 	callr	r2
1010e318:	00000106 	br	1010e320 <alt_get_errno+0x28>
1010e31c:	d0a6ff04 	addi	r2,gp,-25604
}
1010e320:	e037883a 	mov	sp,fp
1010e324:	dfc00117 	ldw	ra,4(sp)
1010e328:	df000017 	ldw	fp,0(sp)
1010e32c:	dec00204 	addi	sp,sp,8
1010e330:	f800283a 	ret

1010e334 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1010e334:	defff904 	addi	sp,sp,-28
1010e338:	dfc00615 	stw	ra,24(sp)
1010e33c:	df000515 	stw	fp,20(sp)
1010e340:	df000504 	addi	fp,sp,20
1010e344:	e13ffd15 	stw	r4,-12(fp)
1010e348:	e17ffe15 	stw	r5,-8(fp)
1010e34c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010e350:	e0bffd17 	ldw	r2,-12(fp)
1010e354:	10000816 	blt	r2,zero,1010e378 <write+0x44>
1010e358:	01400304 	movi	r5,12
1010e35c:	e13ffd17 	ldw	r4,-12(fp)
1010e360:	0100d140 	call	10100d14 <__mulsi3>
1010e364:	1007883a 	mov	r3,r2
1010e368:	00840474 	movhi	r2,4113
1010e36c:	1084a604 	addi	r2,r2,4760
1010e370:	1885883a 	add	r2,r3,r2
1010e374:	00000106 	br	1010e37c <write+0x48>
1010e378:	0005883a 	mov	r2,zero
1010e37c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010e380:	e0bffb17 	ldw	r2,-20(fp)
1010e384:	10002126 	beq	r2,zero,1010e40c <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1010e388:	e0bffb17 	ldw	r2,-20(fp)
1010e38c:	10800217 	ldw	r2,8(r2)
1010e390:	108000cc 	andi	r2,r2,3
1010e394:	10001826 	beq	r2,zero,1010e3f8 <write+0xc4>
1010e398:	e0bffb17 	ldw	r2,-20(fp)
1010e39c:	10800017 	ldw	r2,0(r2)
1010e3a0:	10800617 	ldw	r2,24(r2)
1010e3a4:	10001426 	beq	r2,zero,1010e3f8 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1010e3a8:	e0bffb17 	ldw	r2,-20(fp)
1010e3ac:	10800017 	ldw	r2,0(r2)
1010e3b0:	10800617 	ldw	r2,24(r2)
1010e3b4:	e0ffff17 	ldw	r3,-4(fp)
1010e3b8:	180d883a 	mov	r6,r3
1010e3bc:	e17ffe17 	ldw	r5,-8(fp)
1010e3c0:	e13ffb17 	ldw	r4,-20(fp)
1010e3c4:	103ee83a 	callr	r2
1010e3c8:	e0bffc15 	stw	r2,-16(fp)
1010e3cc:	e0bffc17 	ldw	r2,-16(fp)
1010e3d0:	1000070e 	bge	r2,zero,1010e3f0 <write+0xbc>
      {
        ALT_ERRNO = -rval;
1010e3d4:	010e2f80 	call	1010e2f8 <alt_get_errno>
1010e3d8:	1007883a 	mov	r3,r2
1010e3dc:	e0bffc17 	ldw	r2,-16(fp)
1010e3e0:	0085c83a 	sub	r2,zero,r2
1010e3e4:	18800015 	stw	r2,0(r3)
        return -1;
1010e3e8:	00bfffc4 	movi	r2,-1
1010e3ec:	00000c06 	br	1010e420 <write+0xec>
      }
      return rval;
1010e3f0:	e0bffc17 	ldw	r2,-16(fp)
1010e3f4:	00000a06 	br	1010e420 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
1010e3f8:	010e2f80 	call	1010e2f8 <alt_get_errno>
1010e3fc:	1007883a 	mov	r3,r2
1010e400:	00800344 	movi	r2,13
1010e404:	18800015 	stw	r2,0(r3)
1010e408:	00000406 	br	1010e41c <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1010e40c:	010e2f80 	call	1010e2f8 <alt_get_errno>
1010e410:	1007883a 	mov	r3,r2
1010e414:	00801444 	movi	r2,81
1010e418:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010e41c:	00bfffc4 	movi	r2,-1
}
1010e420:	e037883a 	mov	sp,fp
1010e424:	dfc00117 	ldw	ra,4(sp)
1010e428:	df000017 	ldw	fp,0(sp)
1010e42c:	dec00204 	addi	sp,sp,8
1010e430:	f800283a 	ret

1010e434 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1010e434:	defffd04 	addi	sp,sp,-12
1010e438:	dfc00215 	stw	ra,8(sp)
1010e43c:	df000115 	stw	fp,4(sp)
1010e440:	df000104 	addi	fp,sp,4
1010e444:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1010e448:	d1600804 	addi	r5,gp,-32736
1010e44c:	e13fff17 	ldw	r4,-4(fp)
1010e450:	010f5680 	call	1010f568 <alt_dev_llist_insert>
}
1010e454:	e037883a 	mov	sp,fp
1010e458:	dfc00117 	ldw	ra,4(sp)
1010e45c:	df000017 	ldw	fp,0(sp)
1010e460:	dec00204 	addi	sp,sp,8
1010e464:	f800283a 	ret

1010e468 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1010e468:	defffd04 	addi	sp,sp,-12
1010e46c:	dfc00215 	stw	ra,8(sp)
1010e470:	df000115 	stw	fp,4(sp)
1010e474:	df000104 	addi	fp,sp,4
1010e478:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1010e47c:	010ff940 	call	1010ff94 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1010e480:	00800044 	movi	r2,1
1010e484:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1010e488:	0001883a 	nop
1010e48c:	e037883a 	mov	sp,fp
1010e490:	dfc00117 	ldw	ra,4(sp)
1010e494:	df000017 	ldw	fp,0(sp)
1010e498:	dec00204 	addi	sp,sp,8
1010e49c:	f800283a 	ret

1010e4a0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1010e4a0:	defffe04 	addi	sp,sp,-8
1010e4a4:	dfc00115 	stw	ra,4(sp)
1010e4a8:	df000015 	stw	fp,0(sp)
1010e4ac:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1010e4b0:	000d883a 	mov	r6,zero
1010e4b4:	000b883a 	mov	r5,zero
1010e4b8:	01040474 	movhi	r4,4113
1010e4bc:	21051004 	addi	r4,r4,5184
1010e4c0:	010e6580 	call	1010e658 <altera_avalon_jtag_uart_init>
1010e4c4:	01040474 	movhi	r4,4113
1010e4c8:	21050604 	addi	r4,r4,5144
1010e4cc:	010e4340 	call	1010e434 <alt_dev_reg>
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
1010e4d0:	01040474 	movhi	r4,4113
1010e4d4:	21091e04 	addi	r4,r4,9336
1010e4d8:	010f6cc0 	call	1010f6cc <alt_fs_reg>
}
1010e4dc:	0001883a 	nop
1010e4e0:	e037883a 	mov	sp,fp
1010e4e4:	dfc00117 	ldw	ra,4(sp)
1010e4e8:	df000017 	ldw	fp,0(sp)
1010e4ec:	dec00204 	addi	sp,sp,8
1010e4f0:	f800283a 	ret

1010e4f4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1010e4f4:	defffa04 	addi	sp,sp,-24
1010e4f8:	dfc00515 	stw	ra,20(sp)
1010e4fc:	df000415 	stw	fp,16(sp)
1010e500:	df000404 	addi	fp,sp,16
1010e504:	e13ffd15 	stw	r4,-12(fp)
1010e508:	e17ffe15 	stw	r5,-8(fp)
1010e50c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e510:	e0bffd17 	ldw	r2,-12(fp)
1010e514:	10800017 	ldw	r2,0(r2)
1010e518:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1010e51c:	e0bffc17 	ldw	r2,-16(fp)
1010e520:	10c00a04 	addi	r3,r2,40
1010e524:	e0bffd17 	ldw	r2,-12(fp)
1010e528:	10800217 	ldw	r2,8(r2)
1010e52c:	100f883a 	mov	r7,r2
1010e530:	e1bfff17 	ldw	r6,-4(fp)
1010e534:	e17ffe17 	ldw	r5,-8(fp)
1010e538:	1809883a 	mov	r4,r3
1010e53c:	010eb1c0 	call	1010eb1c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1010e540:	e037883a 	mov	sp,fp
1010e544:	dfc00117 	ldw	ra,4(sp)
1010e548:	df000017 	ldw	fp,0(sp)
1010e54c:	dec00204 	addi	sp,sp,8
1010e550:	f800283a 	ret

1010e554 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1010e554:	defffa04 	addi	sp,sp,-24
1010e558:	dfc00515 	stw	ra,20(sp)
1010e55c:	df000415 	stw	fp,16(sp)
1010e560:	df000404 	addi	fp,sp,16
1010e564:	e13ffd15 	stw	r4,-12(fp)
1010e568:	e17ffe15 	stw	r5,-8(fp)
1010e56c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e570:	e0bffd17 	ldw	r2,-12(fp)
1010e574:	10800017 	ldw	r2,0(r2)
1010e578:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1010e57c:	e0bffc17 	ldw	r2,-16(fp)
1010e580:	10c00a04 	addi	r3,r2,40
1010e584:	e0bffd17 	ldw	r2,-12(fp)
1010e588:	10800217 	ldw	r2,8(r2)
1010e58c:	100f883a 	mov	r7,r2
1010e590:	e1bfff17 	ldw	r6,-4(fp)
1010e594:	e17ffe17 	ldw	r5,-8(fp)
1010e598:	1809883a 	mov	r4,r3
1010e59c:	010ed380 	call	1010ed38 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1010e5a0:	e037883a 	mov	sp,fp
1010e5a4:	dfc00117 	ldw	ra,4(sp)
1010e5a8:	df000017 	ldw	fp,0(sp)
1010e5ac:	dec00204 	addi	sp,sp,8
1010e5b0:	f800283a 	ret

1010e5b4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1010e5b4:	defffc04 	addi	sp,sp,-16
1010e5b8:	dfc00315 	stw	ra,12(sp)
1010e5bc:	df000215 	stw	fp,8(sp)
1010e5c0:	df000204 	addi	fp,sp,8
1010e5c4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e5c8:	e0bfff17 	ldw	r2,-4(fp)
1010e5cc:	10800017 	ldw	r2,0(r2)
1010e5d0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1010e5d4:	e0bffe17 	ldw	r2,-8(fp)
1010e5d8:	10c00a04 	addi	r3,r2,40
1010e5dc:	e0bfff17 	ldw	r2,-4(fp)
1010e5e0:	10800217 	ldw	r2,8(r2)
1010e5e4:	100b883a 	mov	r5,r2
1010e5e8:	1809883a 	mov	r4,r3
1010e5ec:	010e9c40 	call	1010e9c4 <altera_avalon_jtag_uart_close>
}
1010e5f0:	e037883a 	mov	sp,fp
1010e5f4:	dfc00117 	ldw	ra,4(sp)
1010e5f8:	df000017 	ldw	fp,0(sp)
1010e5fc:	dec00204 	addi	sp,sp,8
1010e600:	f800283a 	ret

1010e604 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1010e604:	defffa04 	addi	sp,sp,-24
1010e608:	dfc00515 	stw	ra,20(sp)
1010e60c:	df000415 	stw	fp,16(sp)
1010e610:	df000404 	addi	fp,sp,16
1010e614:	e13ffd15 	stw	r4,-12(fp)
1010e618:	e17ffe15 	stw	r5,-8(fp)
1010e61c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1010e620:	e0bffd17 	ldw	r2,-12(fp)
1010e624:	10800017 	ldw	r2,0(r2)
1010e628:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1010e62c:	e0bffc17 	ldw	r2,-16(fp)
1010e630:	10800a04 	addi	r2,r2,40
1010e634:	e1bfff17 	ldw	r6,-4(fp)
1010e638:	e17ffe17 	ldw	r5,-8(fp)
1010e63c:	1009883a 	mov	r4,r2
1010e640:	010ea2c0 	call	1010ea2c <altera_avalon_jtag_uart_ioctl>
}
1010e644:	e037883a 	mov	sp,fp
1010e648:	dfc00117 	ldw	ra,4(sp)
1010e64c:	df000017 	ldw	fp,0(sp)
1010e650:	dec00204 	addi	sp,sp,8
1010e654:	f800283a 	ret

1010e658 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1010e658:	defffa04 	addi	sp,sp,-24
1010e65c:	dfc00515 	stw	ra,20(sp)
1010e660:	df000415 	stw	fp,16(sp)
1010e664:	df000404 	addi	fp,sp,16
1010e668:	e13ffd15 	stw	r4,-12(fp)
1010e66c:	e17ffe15 	stw	r5,-8(fp)
1010e670:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e674:	e0bffd17 	ldw	r2,-12(fp)
1010e678:	00c00044 	movi	r3,1
1010e67c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1010e680:	e0bffd17 	ldw	r2,-12(fp)
1010e684:	10800017 	ldw	r2,0(r2)
1010e688:	10800104 	addi	r2,r2,4
1010e68c:	1007883a 	mov	r3,r2
1010e690:	e0bffd17 	ldw	r2,-12(fp)
1010e694:	10800817 	ldw	r2,32(r2)
1010e698:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1010e69c:	e0bffe17 	ldw	r2,-8(fp)
1010e6a0:	e0ffff17 	ldw	r3,-4(fp)
1010e6a4:	d8000015 	stw	zero,0(sp)
1010e6a8:	e1fffd17 	ldw	r7,-12(fp)
1010e6ac:	01840474 	movhi	r6,4113
1010e6b0:	31b9c604 	addi	r6,r6,-6376
1010e6b4:	180b883a 	mov	r5,r3
1010e6b8:	1009883a 	mov	r4,r2
1010e6bc:	010f76c0 	call	1010f76c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1010e6c0:	e0bffd17 	ldw	r2,-12(fp)
1010e6c4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1010e6c8:	e0bffd17 	ldw	r2,-12(fp)
1010e6cc:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1010e6d0:	d0e70417 	ldw	r3,-25584(gp)
1010e6d4:	e1fffd17 	ldw	r7,-12(fp)
1010e6d8:	01840474 	movhi	r6,4113
1010e6dc:	31ba4904 	addi	r6,r6,-5852
1010e6e0:	180b883a 	mov	r5,r3
1010e6e4:	1009883a 	mov	r4,r2
1010e6e8:	010f3e00 	call	1010f3e0 <alt_alarm_start>
1010e6ec:	1000040e 	bge	r2,zero,1010e700 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1010e6f0:	e0fffd17 	ldw	r3,-12(fp)
1010e6f4:	00a00034 	movhi	r2,32768
1010e6f8:	10bfffc4 	addi	r2,r2,-1
1010e6fc:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1010e700:	0001883a 	nop
1010e704:	e037883a 	mov	sp,fp
1010e708:	dfc00117 	ldw	ra,4(sp)
1010e70c:	df000017 	ldw	fp,0(sp)
1010e710:	dec00204 	addi	sp,sp,8
1010e714:	f800283a 	ret

1010e718 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1010e718:	defff804 	addi	sp,sp,-32
1010e71c:	df000715 	stw	fp,28(sp)
1010e720:	df000704 	addi	fp,sp,28
1010e724:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1010e728:	e0bfff17 	ldw	r2,-4(fp)
1010e72c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1010e730:	e0bffb17 	ldw	r2,-20(fp)
1010e734:	10800017 	ldw	r2,0(r2)
1010e738:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e73c:	e0bffc17 	ldw	r2,-16(fp)
1010e740:	10800104 	addi	r2,r2,4
1010e744:	10800037 	ldwio	r2,0(r2)
1010e748:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1010e74c:	e0bffd17 	ldw	r2,-12(fp)
1010e750:	1080c00c 	andi	r2,r2,768
1010e754:	10006d26 	beq	r2,zero,1010e90c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1010e758:	e0bffd17 	ldw	r2,-12(fp)
1010e75c:	1080400c 	andi	r2,r2,256
1010e760:	10003526 	beq	r2,zero,1010e838 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1010e764:	00800074 	movhi	r2,1
1010e768:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e76c:	e0bffb17 	ldw	r2,-20(fp)
1010e770:	10800a17 	ldw	r2,40(r2)
1010e774:	10800044 	addi	r2,r2,1
1010e778:	1081ffcc 	andi	r2,r2,2047
1010e77c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1010e780:	e0bffb17 	ldw	r2,-20(fp)
1010e784:	10c00b17 	ldw	r3,44(r2)
1010e788:	e0bffe17 	ldw	r2,-8(fp)
1010e78c:	18801526 	beq	r3,r2,1010e7e4 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1010e790:	e0bffc17 	ldw	r2,-16(fp)
1010e794:	10800037 	ldwio	r2,0(r2)
1010e798:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1010e79c:	e0bff917 	ldw	r2,-28(fp)
1010e7a0:	10a0000c 	andi	r2,r2,32768
1010e7a4:	10001126 	beq	r2,zero,1010e7ec <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1010e7a8:	e0bffb17 	ldw	r2,-20(fp)
1010e7ac:	10800a17 	ldw	r2,40(r2)
1010e7b0:	e0fff917 	ldw	r3,-28(fp)
1010e7b4:	1809883a 	mov	r4,r3
1010e7b8:	e0fffb17 	ldw	r3,-20(fp)
1010e7bc:	1885883a 	add	r2,r3,r2
1010e7c0:	10800e04 	addi	r2,r2,56
1010e7c4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e7c8:	e0bffb17 	ldw	r2,-20(fp)
1010e7cc:	10800a17 	ldw	r2,40(r2)
1010e7d0:	10800044 	addi	r2,r2,1
1010e7d4:	10c1ffcc 	andi	r3,r2,2047
1010e7d8:	e0bffb17 	ldw	r2,-20(fp)
1010e7dc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1010e7e0:	003fe206 	br	1010e76c <__alt_data_end+0xfffee76c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1010e7e4:	0001883a 	nop
1010e7e8:	00000106 	br	1010e7f0 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1010e7ec:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1010e7f0:	e0bff917 	ldw	r2,-28(fp)
1010e7f4:	10bfffec 	andhi	r2,r2,65535
1010e7f8:	10000f26 	beq	r2,zero,1010e838 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e7fc:	e0bffb17 	ldw	r2,-20(fp)
1010e800:	10c00817 	ldw	r3,32(r2)
1010e804:	00bfff84 	movi	r2,-2
1010e808:	1886703a 	and	r3,r3,r2
1010e80c:	e0bffb17 	ldw	r2,-20(fp)
1010e810:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1010e814:	e0bffc17 	ldw	r2,-16(fp)
1010e818:	10800104 	addi	r2,r2,4
1010e81c:	1007883a 	mov	r3,r2
1010e820:	e0bffb17 	ldw	r2,-20(fp)
1010e824:	10800817 	ldw	r2,32(r2)
1010e828:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e82c:	e0bffc17 	ldw	r2,-16(fp)
1010e830:	10800104 	addi	r2,r2,4
1010e834:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1010e838:	e0bffd17 	ldw	r2,-12(fp)
1010e83c:	1080800c 	andi	r2,r2,512
1010e840:	103fbe26 	beq	r2,zero,1010e73c <__alt_data_end+0xfffee73c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1010e844:	e0bffd17 	ldw	r2,-12(fp)
1010e848:	1004d43a 	srli	r2,r2,16
1010e84c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1010e850:	00001406 	br	1010e8a4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1010e854:	e0bffc17 	ldw	r2,-16(fp)
1010e858:	e0fffb17 	ldw	r3,-20(fp)
1010e85c:	18c00d17 	ldw	r3,52(r3)
1010e860:	e13ffb17 	ldw	r4,-20(fp)
1010e864:	20c7883a 	add	r3,r4,r3
1010e868:	18c20e04 	addi	r3,r3,2104
1010e86c:	18c00003 	ldbu	r3,0(r3)
1010e870:	18c03fcc 	andi	r3,r3,255
1010e874:	18c0201c 	xori	r3,r3,128
1010e878:	18ffe004 	addi	r3,r3,-128
1010e87c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e880:	e0bffb17 	ldw	r2,-20(fp)
1010e884:	10800d17 	ldw	r2,52(r2)
1010e888:	10800044 	addi	r2,r2,1
1010e88c:	10c1ffcc 	andi	r3,r2,2047
1010e890:	e0bffb17 	ldw	r2,-20(fp)
1010e894:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1010e898:	e0bffa17 	ldw	r2,-24(fp)
1010e89c:	10bfffc4 	addi	r2,r2,-1
1010e8a0:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1010e8a4:	e0bffa17 	ldw	r2,-24(fp)
1010e8a8:	10000526 	beq	r2,zero,1010e8c0 <altera_avalon_jtag_uart_irq+0x1a8>
1010e8ac:	e0bffb17 	ldw	r2,-20(fp)
1010e8b0:	10c00d17 	ldw	r3,52(r2)
1010e8b4:	e0bffb17 	ldw	r2,-20(fp)
1010e8b8:	10800c17 	ldw	r2,48(r2)
1010e8bc:	18bfe51e 	bne	r3,r2,1010e854 <__alt_data_end+0xfffee854>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1010e8c0:	e0bffa17 	ldw	r2,-24(fp)
1010e8c4:	103f9d26 	beq	r2,zero,1010e73c <__alt_data_end+0xfffee73c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010e8c8:	e0bffb17 	ldw	r2,-20(fp)
1010e8cc:	10c00817 	ldw	r3,32(r2)
1010e8d0:	00bfff44 	movi	r2,-3
1010e8d4:	1886703a 	and	r3,r3,r2
1010e8d8:	e0bffb17 	ldw	r2,-20(fp)
1010e8dc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e8e0:	e0bffb17 	ldw	r2,-20(fp)
1010e8e4:	10800017 	ldw	r2,0(r2)
1010e8e8:	10800104 	addi	r2,r2,4
1010e8ec:	1007883a 	mov	r3,r2
1010e8f0:	e0bffb17 	ldw	r2,-20(fp)
1010e8f4:	10800817 	ldw	r2,32(r2)
1010e8f8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e8fc:	e0bffc17 	ldw	r2,-16(fp)
1010e900:	10800104 	addi	r2,r2,4
1010e904:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1010e908:	003f8c06 	br	1010e73c <__alt_data_end+0xfffee73c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1010e90c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1010e910:	0001883a 	nop
1010e914:	e037883a 	mov	sp,fp
1010e918:	df000017 	ldw	fp,0(sp)
1010e91c:	dec00104 	addi	sp,sp,4
1010e920:	f800283a 	ret

1010e924 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1010e924:	defff804 	addi	sp,sp,-32
1010e928:	df000715 	stw	fp,28(sp)
1010e92c:	df000704 	addi	fp,sp,28
1010e930:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1010e934:	e0bffb17 	ldw	r2,-20(fp)
1010e938:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1010e93c:	e0bff917 	ldw	r2,-28(fp)
1010e940:	10800017 	ldw	r2,0(r2)
1010e944:	10800104 	addi	r2,r2,4
1010e948:	10800037 	ldwio	r2,0(r2)
1010e94c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1010e950:	e0bffa17 	ldw	r2,-24(fp)
1010e954:	1081000c 	andi	r2,r2,1024
1010e958:	10000b26 	beq	r2,zero,1010e988 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1010e95c:	e0bff917 	ldw	r2,-28(fp)
1010e960:	10800017 	ldw	r2,0(r2)
1010e964:	10800104 	addi	r2,r2,4
1010e968:	1007883a 	mov	r3,r2
1010e96c:	e0bff917 	ldw	r2,-28(fp)
1010e970:	10800817 	ldw	r2,32(r2)
1010e974:	10810014 	ori	r2,r2,1024
1010e978:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1010e97c:	e0bff917 	ldw	r2,-28(fp)
1010e980:	10000915 	stw	zero,36(r2)
1010e984:	00000a06 	br	1010e9b0 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1010e988:	e0bff917 	ldw	r2,-28(fp)
1010e98c:	10c00917 	ldw	r3,36(r2)
1010e990:	00a00034 	movhi	r2,32768
1010e994:	10bfff04 	addi	r2,r2,-4
1010e998:	10c00536 	bltu	r2,r3,1010e9b0 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1010e99c:	e0bff917 	ldw	r2,-28(fp)
1010e9a0:	10800917 	ldw	r2,36(r2)
1010e9a4:	10c00044 	addi	r3,r2,1
1010e9a8:	e0bff917 	ldw	r2,-28(fp)
1010e9ac:	10c00915 	stw	r3,36(r2)
1010e9b0:	d0a70417 	ldw	r2,-25584(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1010e9b4:	e037883a 	mov	sp,fp
1010e9b8:	df000017 	ldw	fp,0(sp)
1010e9bc:	dec00104 	addi	sp,sp,4
1010e9c0:	f800283a 	ret

1010e9c4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1010e9c4:	defffd04 	addi	sp,sp,-12
1010e9c8:	df000215 	stw	fp,8(sp)
1010e9cc:	df000204 	addi	fp,sp,8
1010e9d0:	e13ffe15 	stw	r4,-8(fp)
1010e9d4:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010e9d8:	00000506 	br	1010e9f0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1010e9dc:	e0bfff17 	ldw	r2,-4(fp)
1010e9e0:	1090000c 	andi	r2,r2,16384
1010e9e4:	10000226 	beq	r2,zero,1010e9f0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1010e9e8:	00bffd44 	movi	r2,-11
1010e9ec:	00000b06 	br	1010ea1c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010e9f0:	e0bffe17 	ldw	r2,-8(fp)
1010e9f4:	10c00d17 	ldw	r3,52(r2)
1010e9f8:	e0bffe17 	ldw	r2,-8(fp)
1010e9fc:	10800c17 	ldw	r2,48(r2)
1010ea00:	18800526 	beq	r3,r2,1010ea18 <altera_avalon_jtag_uart_close+0x54>
1010ea04:	e0bffe17 	ldw	r2,-8(fp)
1010ea08:	10c00917 	ldw	r3,36(r2)
1010ea0c:	e0bffe17 	ldw	r2,-8(fp)
1010ea10:	10800117 	ldw	r2,4(r2)
1010ea14:	18bff136 	bltu	r3,r2,1010e9dc <__alt_data_end+0xfffee9dc>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1010ea18:	0005883a 	mov	r2,zero
}
1010ea1c:	e037883a 	mov	sp,fp
1010ea20:	df000017 	ldw	fp,0(sp)
1010ea24:	dec00104 	addi	sp,sp,4
1010ea28:	f800283a 	ret

1010ea2c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1010ea2c:	defffa04 	addi	sp,sp,-24
1010ea30:	df000515 	stw	fp,20(sp)
1010ea34:	df000504 	addi	fp,sp,20
1010ea38:	e13ffd15 	stw	r4,-12(fp)
1010ea3c:	e17ffe15 	stw	r5,-8(fp)
1010ea40:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1010ea44:	00bff9c4 	movi	r2,-25
1010ea48:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1010ea4c:	e0bffe17 	ldw	r2,-8(fp)
1010ea50:	10da8060 	cmpeqi	r3,r2,27137
1010ea54:	1800031e 	bne	r3,zero,1010ea64 <altera_avalon_jtag_uart_ioctl+0x38>
1010ea58:	109a80a0 	cmpeqi	r2,r2,27138
1010ea5c:	1000181e 	bne	r2,zero,1010eac0 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1010ea60:	00002906 	br	1010eb08 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1010ea64:	e0bffd17 	ldw	r2,-12(fp)
1010ea68:	10c00117 	ldw	r3,4(r2)
1010ea6c:	00a00034 	movhi	r2,32768
1010ea70:	10bfffc4 	addi	r2,r2,-1
1010ea74:	18802126 	beq	r3,r2,1010eafc <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1010ea78:	e0bfff17 	ldw	r2,-4(fp)
1010ea7c:	10800017 	ldw	r2,0(r2)
1010ea80:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1010ea84:	e0bffc17 	ldw	r2,-16(fp)
1010ea88:	10800090 	cmplti	r2,r2,2
1010ea8c:	1000061e 	bne	r2,zero,1010eaa8 <altera_avalon_jtag_uart_ioctl+0x7c>
1010ea90:	e0fffc17 	ldw	r3,-16(fp)
1010ea94:	00a00034 	movhi	r2,32768
1010ea98:	10bfffc4 	addi	r2,r2,-1
1010ea9c:	18800226 	beq	r3,r2,1010eaa8 <altera_avalon_jtag_uart_ioctl+0x7c>
1010eaa0:	e0bffc17 	ldw	r2,-16(fp)
1010eaa4:	00000206 	br	1010eab0 <altera_avalon_jtag_uart_ioctl+0x84>
1010eaa8:	00a00034 	movhi	r2,32768
1010eaac:	10bfff84 	addi	r2,r2,-2
1010eab0:	e0fffd17 	ldw	r3,-12(fp)
1010eab4:	18800115 	stw	r2,4(r3)
      rc = 0;
1010eab8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010eabc:	00000f06 	br	1010eafc <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1010eac0:	e0bffd17 	ldw	r2,-12(fp)
1010eac4:	10c00117 	ldw	r3,4(r2)
1010eac8:	00a00034 	movhi	r2,32768
1010eacc:	10bfffc4 	addi	r2,r2,-1
1010ead0:	18800c26 	beq	r3,r2,1010eb04 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1010ead4:	e0bffd17 	ldw	r2,-12(fp)
1010ead8:	10c00917 	ldw	r3,36(r2)
1010eadc:	e0bffd17 	ldw	r2,-12(fp)
1010eae0:	10800117 	ldw	r2,4(r2)
1010eae4:	1885803a 	cmpltu	r2,r3,r2
1010eae8:	10c03fcc 	andi	r3,r2,255
1010eaec:	e0bfff17 	ldw	r2,-4(fp)
1010eaf0:	10c00015 	stw	r3,0(r2)
      rc = 0;
1010eaf4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010eaf8:	00000206 	br	1010eb04 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1010eafc:	0001883a 	nop
1010eb00:	00000106 	br	1010eb08 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1010eb04:	0001883a 	nop

  default:
    break;
  }

  return rc;
1010eb08:	e0bffb17 	ldw	r2,-20(fp)
}
1010eb0c:	e037883a 	mov	sp,fp
1010eb10:	df000017 	ldw	fp,0(sp)
1010eb14:	dec00104 	addi	sp,sp,4
1010eb18:	f800283a 	ret

1010eb1c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1010eb1c:	defff304 	addi	sp,sp,-52
1010eb20:	dfc00c15 	stw	ra,48(sp)
1010eb24:	df000b15 	stw	fp,44(sp)
1010eb28:	df000b04 	addi	fp,sp,44
1010eb2c:	e13ffc15 	stw	r4,-16(fp)
1010eb30:	e17ffd15 	stw	r5,-12(fp)
1010eb34:	e1bffe15 	stw	r6,-8(fp)
1010eb38:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1010eb3c:	e0bffd17 	ldw	r2,-12(fp)
1010eb40:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010eb44:	00004706 	br	1010ec64 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1010eb48:	e0bffc17 	ldw	r2,-16(fp)
1010eb4c:	10800a17 	ldw	r2,40(r2)
1010eb50:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1010eb54:	e0bffc17 	ldw	r2,-16(fp)
1010eb58:	10800b17 	ldw	r2,44(r2)
1010eb5c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1010eb60:	e0fff717 	ldw	r3,-36(fp)
1010eb64:	e0bff817 	ldw	r2,-32(fp)
1010eb68:	18800536 	bltu	r3,r2,1010eb80 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1010eb6c:	e0fff717 	ldw	r3,-36(fp)
1010eb70:	e0bff817 	ldw	r2,-32(fp)
1010eb74:	1885c83a 	sub	r2,r3,r2
1010eb78:	e0bff615 	stw	r2,-40(fp)
1010eb7c:	00000406 	br	1010eb90 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1010eb80:	00c20004 	movi	r3,2048
1010eb84:	e0bff817 	ldw	r2,-32(fp)
1010eb88:	1885c83a 	sub	r2,r3,r2
1010eb8c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010eb90:	e0bff617 	ldw	r2,-40(fp)
1010eb94:	10001e26 	beq	r2,zero,1010ec10 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1010eb98:	e0fffe17 	ldw	r3,-8(fp)
1010eb9c:	e0bff617 	ldw	r2,-40(fp)
1010eba0:	1880022e 	bgeu	r3,r2,1010ebac <altera_avalon_jtag_uart_read+0x90>
        n = space;
1010eba4:	e0bffe17 	ldw	r2,-8(fp)
1010eba8:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1010ebac:	e0bffc17 	ldw	r2,-16(fp)
1010ebb0:	10c00e04 	addi	r3,r2,56
1010ebb4:	e0bff817 	ldw	r2,-32(fp)
1010ebb8:	1885883a 	add	r2,r3,r2
1010ebbc:	e1bff617 	ldw	r6,-40(fp)
1010ebc0:	100b883a 	mov	r5,r2
1010ebc4:	e13ff517 	ldw	r4,-44(fp)
1010ebc8:	0100d3c0 	call	10100d3c <memcpy>
      ptr   += n;
1010ebcc:	e0fff517 	ldw	r3,-44(fp)
1010ebd0:	e0bff617 	ldw	r2,-40(fp)
1010ebd4:	1885883a 	add	r2,r3,r2
1010ebd8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1010ebdc:	e0fffe17 	ldw	r3,-8(fp)
1010ebe0:	e0bff617 	ldw	r2,-40(fp)
1010ebe4:	1885c83a 	sub	r2,r3,r2
1010ebe8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010ebec:	e0fff817 	ldw	r3,-32(fp)
1010ebf0:	e0bff617 	ldw	r2,-40(fp)
1010ebf4:	1885883a 	add	r2,r3,r2
1010ebf8:	10c1ffcc 	andi	r3,r2,2047
1010ebfc:	e0bffc17 	ldw	r2,-16(fp)
1010ec00:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1010ec04:	e0bffe17 	ldw	r2,-8(fp)
1010ec08:	00bfcf16 	blt	zero,r2,1010eb48 <__alt_data_end+0xfffeeb48>
1010ec0c:	00000106 	br	1010ec14 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1010ec10:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1010ec14:	e0fff517 	ldw	r3,-44(fp)
1010ec18:	e0bffd17 	ldw	r2,-12(fp)
1010ec1c:	1880141e 	bne	r3,r2,1010ec70 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1010ec20:	e0bfff17 	ldw	r2,-4(fp)
1010ec24:	1090000c 	andi	r2,r2,16384
1010ec28:	1000131e 	bne	r2,zero,1010ec78 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1010ec2c:	0001883a 	nop
1010ec30:	e0bffc17 	ldw	r2,-16(fp)
1010ec34:	10c00a17 	ldw	r3,40(r2)
1010ec38:	e0bff717 	ldw	r2,-36(fp)
1010ec3c:	1880051e 	bne	r3,r2,1010ec54 <altera_avalon_jtag_uart_read+0x138>
1010ec40:	e0bffc17 	ldw	r2,-16(fp)
1010ec44:	10c00917 	ldw	r3,36(r2)
1010ec48:	e0bffc17 	ldw	r2,-16(fp)
1010ec4c:	10800117 	ldw	r2,4(r2)
1010ec50:	18bff736 	bltu	r3,r2,1010ec30 <__alt_data_end+0xfffeec30>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1010ec54:	e0bffc17 	ldw	r2,-16(fp)
1010ec58:	10c00a17 	ldw	r3,40(r2)
1010ec5c:	e0bff717 	ldw	r2,-36(fp)
1010ec60:	18800726 	beq	r3,r2,1010ec80 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010ec64:	e0bffe17 	ldw	r2,-8(fp)
1010ec68:	00bfb716 	blt	zero,r2,1010eb48 <__alt_data_end+0xfffeeb48>
1010ec6c:	00000506 	br	1010ec84 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1010ec70:	0001883a 	nop
1010ec74:	00000306 	br	1010ec84 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1010ec78:	0001883a 	nop
1010ec7c:	00000106 	br	1010ec84 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1010ec80:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1010ec84:	e0fff517 	ldw	r3,-44(fp)
1010ec88:	e0bffd17 	ldw	r2,-12(fp)
1010ec8c:	18801826 	beq	r3,r2,1010ecf0 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010ec90:	0005303a 	rdctl	r2,status
1010ec94:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ec98:	e0fffb17 	ldw	r3,-20(fp)
1010ec9c:	00bfff84 	movi	r2,-2
1010eca0:	1884703a 	and	r2,r3,r2
1010eca4:	1001703a 	wrctl	status,r2
  
  return context;
1010eca8:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1010ecac:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010ecb0:	e0bffc17 	ldw	r2,-16(fp)
1010ecb4:	10800817 	ldw	r2,32(r2)
1010ecb8:	10c00054 	ori	r3,r2,1
1010ecbc:	e0bffc17 	ldw	r2,-16(fp)
1010ecc0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010ecc4:	e0bffc17 	ldw	r2,-16(fp)
1010ecc8:	10800017 	ldw	r2,0(r2)
1010eccc:	10800104 	addi	r2,r2,4
1010ecd0:	1007883a 	mov	r3,r2
1010ecd4:	e0bffc17 	ldw	r2,-16(fp)
1010ecd8:	10800817 	ldw	r2,32(r2)
1010ecdc:	18800035 	stwio	r2,0(r3)
1010ece0:	e0bffa17 	ldw	r2,-24(fp)
1010ece4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ece8:	e0bff917 	ldw	r2,-28(fp)
1010ecec:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1010ecf0:	e0fff517 	ldw	r3,-44(fp)
1010ecf4:	e0bffd17 	ldw	r2,-12(fp)
1010ecf8:	18800426 	beq	r3,r2,1010ed0c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1010ecfc:	e0fff517 	ldw	r3,-44(fp)
1010ed00:	e0bffd17 	ldw	r2,-12(fp)
1010ed04:	1885c83a 	sub	r2,r3,r2
1010ed08:	00000606 	br	1010ed24 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1010ed0c:	e0bfff17 	ldw	r2,-4(fp)
1010ed10:	1090000c 	andi	r2,r2,16384
1010ed14:	10000226 	beq	r2,zero,1010ed20 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1010ed18:	00bffd44 	movi	r2,-11
1010ed1c:	00000106 	br	1010ed24 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1010ed20:	00bffec4 	movi	r2,-5
}
1010ed24:	e037883a 	mov	sp,fp
1010ed28:	dfc00117 	ldw	ra,4(sp)
1010ed2c:	df000017 	ldw	fp,0(sp)
1010ed30:	dec00204 	addi	sp,sp,8
1010ed34:	f800283a 	ret

1010ed38 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1010ed38:	defff304 	addi	sp,sp,-52
1010ed3c:	dfc00c15 	stw	ra,48(sp)
1010ed40:	df000b15 	stw	fp,44(sp)
1010ed44:	df000b04 	addi	fp,sp,44
1010ed48:	e13ffc15 	stw	r4,-16(fp)
1010ed4c:	e17ffd15 	stw	r5,-12(fp)
1010ed50:	e1bffe15 	stw	r6,-8(fp)
1010ed54:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1010ed58:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1010ed5c:	e0bffd17 	ldw	r2,-12(fp)
1010ed60:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010ed64:	00003706 	br	1010ee44 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1010ed68:	e0bffc17 	ldw	r2,-16(fp)
1010ed6c:	10800c17 	ldw	r2,48(r2)
1010ed70:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1010ed74:	e0bffc17 	ldw	r2,-16(fp)
1010ed78:	10800d17 	ldw	r2,52(r2)
1010ed7c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1010ed80:	e0fff917 	ldw	r3,-28(fp)
1010ed84:	e0bff517 	ldw	r2,-44(fp)
1010ed88:	1880062e 	bgeu	r3,r2,1010eda4 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1010ed8c:	e0fff517 	ldw	r3,-44(fp)
1010ed90:	e0bff917 	ldw	r2,-28(fp)
1010ed94:	1885c83a 	sub	r2,r3,r2
1010ed98:	10bfffc4 	addi	r2,r2,-1
1010ed9c:	e0bff615 	stw	r2,-40(fp)
1010eda0:	00000b06 	br	1010edd0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1010eda4:	e0bff517 	ldw	r2,-44(fp)
1010eda8:	10000526 	beq	r2,zero,1010edc0 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1010edac:	00c20004 	movi	r3,2048
1010edb0:	e0bff917 	ldw	r2,-28(fp)
1010edb4:	1885c83a 	sub	r2,r3,r2
1010edb8:	e0bff615 	stw	r2,-40(fp)
1010edbc:	00000406 	br	1010edd0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1010edc0:	00c1ffc4 	movi	r3,2047
1010edc4:	e0bff917 	ldw	r2,-28(fp)
1010edc8:	1885c83a 	sub	r2,r3,r2
1010edcc:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010edd0:	e0bff617 	ldw	r2,-40(fp)
1010edd4:	10001e26 	beq	r2,zero,1010ee50 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1010edd8:	e0fffe17 	ldw	r3,-8(fp)
1010eddc:	e0bff617 	ldw	r2,-40(fp)
1010ede0:	1880022e 	bgeu	r3,r2,1010edec <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1010ede4:	e0bffe17 	ldw	r2,-8(fp)
1010ede8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1010edec:	e0bffc17 	ldw	r2,-16(fp)
1010edf0:	10c20e04 	addi	r3,r2,2104
1010edf4:	e0bff917 	ldw	r2,-28(fp)
1010edf8:	1885883a 	add	r2,r3,r2
1010edfc:	e1bff617 	ldw	r6,-40(fp)
1010ee00:	e17ffd17 	ldw	r5,-12(fp)
1010ee04:	1009883a 	mov	r4,r2
1010ee08:	0100d3c0 	call	10100d3c <memcpy>
      ptr   += n;
1010ee0c:	e0fffd17 	ldw	r3,-12(fp)
1010ee10:	e0bff617 	ldw	r2,-40(fp)
1010ee14:	1885883a 	add	r2,r3,r2
1010ee18:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1010ee1c:	e0fffe17 	ldw	r3,-8(fp)
1010ee20:	e0bff617 	ldw	r2,-40(fp)
1010ee24:	1885c83a 	sub	r2,r3,r2
1010ee28:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010ee2c:	e0fff917 	ldw	r3,-28(fp)
1010ee30:	e0bff617 	ldw	r2,-40(fp)
1010ee34:	1885883a 	add	r2,r3,r2
1010ee38:	10c1ffcc 	andi	r3,r2,2047
1010ee3c:	e0bffc17 	ldw	r2,-16(fp)
1010ee40:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010ee44:	e0bffe17 	ldw	r2,-8(fp)
1010ee48:	00bfc716 	blt	zero,r2,1010ed68 <__alt_data_end+0xfffeed68>
1010ee4c:	00000106 	br	1010ee54 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1010ee50:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010ee54:	0005303a 	rdctl	r2,status
1010ee58:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ee5c:	e0fffb17 	ldw	r3,-20(fp)
1010ee60:	00bfff84 	movi	r2,-2
1010ee64:	1884703a 	and	r2,r3,r2
1010ee68:	1001703a 	wrctl	status,r2
  
  return context;
1010ee6c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1010ee70:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010ee74:	e0bffc17 	ldw	r2,-16(fp)
1010ee78:	10800817 	ldw	r2,32(r2)
1010ee7c:	10c00094 	ori	r3,r2,2
1010ee80:	e0bffc17 	ldw	r2,-16(fp)
1010ee84:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010ee88:	e0bffc17 	ldw	r2,-16(fp)
1010ee8c:	10800017 	ldw	r2,0(r2)
1010ee90:	10800104 	addi	r2,r2,4
1010ee94:	1007883a 	mov	r3,r2
1010ee98:	e0bffc17 	ldw	r2,-16(fp)
1010ee9c:	10800817 	ldw	r2,32(r2)
1010eea0:	18800035 	stwio	r2,0(r3)
1010eea4:	e0bffa17 	ldw	r2,-24(fp)
1010eea8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010eeac:	e0bff817 	ldw	r2,-32(fp)
1010eeb0:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1010eeb4:	e0bffe17 	ldw	r2,-8(fp)
1010eeb8:	0080100e 	bge	zero,r2,1010eefc <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1010eebc:	e0bfff17 	ldw	r2,-4(fp)
1010eec0:	1090000c 	andi	r2,r2,16384
1010eec4:	1000101e 	bne	r2,zero,1010ef08 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1010eec8:	0001883a 	nop
1010eecc:	e0bffc17 	ldw	r2,-16(fp)
1010eed0:	10c00d17 	ldw	r3,52(r2)
1010eed4:	e0bff517 	ldw	r2,-44(fp)
1010eed8:	1880051e 	bne	r3,r2,1010eef0 <altera_avalon_jtag_uart_write+0x1b8>
1010eedc:	e0bffc17 	ldw	r2,-16(fp)
1010eee0:	10c00917 	ldw	r3,36(r2)
1010eee4:	e0bffc17 	ldw	r2,-16(fp)
1010eee8:	10800117 	ldw	r2,4(r2)
1010eeec:	18bff736 	bltu	r3,r2,1010eecc <__alt_data_end+0xfffeeecc>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1010eef0:	e0bffc17 	ldw	r2,-16(fp)
1010eef4:	10800917 	ldw	r2,36(r2)
1010eef8:	1000051e 	bne	r2,zero,1010ef10 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1010eefc:	e0bffe17 	ldw	r2,-8(fp)
1010ef00:	00bfd016 	blt	zero,r2,1010ee44 <__alt_data_end+0xfffeee44>
1010ef04:	00000306 	br	1010ef14 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1010ef08:	0001883a 	nop
1010ef0c:	00000106 	br	1010ef14 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1010ef10:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1010ef14:	e0fffd17 	ldw	r3,-12(fp)
1010ef18:	e0bff717 	ldw	r2,-36(fp)
1010ef1c:	18800426 	beq	r3,r2,1010ef30 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1010ef20:	e0fffd17 	ldw	r3,-12(fp)
1010ef24:	e0bff717 	ldw	r2,-36(fp)
1010ef28:	1885c83a 	sub	r2,r3,r2
1010ef2c:	00000606 	br	1010ef48 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1010ef30:	e0bfff17 	ldw	r2,-4(fp)
1010ef34:	1090000c 	andi	r2,r2,16384
1010ef38:	10000226 	beq	r2,zero,1010ef44 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1010ef3c:	00bffd44 	movi	r2,-11
1010ef40:	00000106 	br	1010ef48 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1010ef44:	00bffec4 	movi	r2,-5
}
1010ef48:	e037883a 	mov	sp,fp
1010ef4c:	dfc00117 	ldw	ra,4(sp)
1010ef50:	df000017 	ldw	fp,0(sp)
1010ef54:	dec00204 	addi	sp,sp,8
1010ef58:	f800283a 	ret

1010ef5c <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
1010ef5c:	defff404 	addi	sp,sp,-48
1010ef60:	df000b15 	stw	fp,44(sp)
1010ef64:	df000b04 	addi	fp,sp,44
1010ef68:	e13ffc15 	stw	r4,-16(fp)
1010ef6c:	e17ffd15 	stw	r5,-12(fp)
1010ef70:	e1bffe15 	stw	r6,-8(fp)
1010ef74:	e1ffff15 	stw	r7,-4(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
1010ef78:	e0bffc17 	ldw	r2,-16(fp)
1010ef7c:	10800017 	ldw	r2,0(r2)
1010ef80:	e0bff515 	stw	r2,-44(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
1010ef84:	e0bff517 	ldw	r2,-44(fp)
1010ef88:	10800217 	ldw	r2,8(r2)
1010ef8c:	e0bff615 	stw	r2,-40(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
1010ef90:	e0bff617 	ldw	r2,-40(fp)
1010ef94:	10bfffc4 	addi	r2,r2,-1
1010ef98:	e0bffb15 	stw	r2,-20(fp)

  while (*++ptr != 0)
1010ef9c:	e0bffb17 	ldw	r2,-20(fp)
1010efa0:	10800044 	addi	r2,r2,1
1010efa4:	e0bffb15 	stw	r2,-20(fp)
1010efa8:	e0bffb17 	ldw	r2,-20(fp)
1010efac:	10800003 	ldbu	r2,0(r2)
1010efb0:	10803fcc 	andi	r2,r2,255
1010efb4:	1080201c 	xori	r2,r2,128
1010efb8:	10bfe004 	addi	r2,r2,-128
1010efbc:	103ff71e 	bne	r2,zero,1010ef9c <__alt_data_end+0xfffeef9c>
    ;

  return ptr - string;
1010efc0:	e0fffb17 	ldw	r3,-20(fp)
1010efc4:	e0bff617 	ldw	r2,-40(fp)
1010efc8:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
1010efcc:	10800044 	addi	r2,r2,1
1010efd0:	1007883a 	mov	r3,r2
1010efd4:	e0bffd17 	ldw	r2,-12(fp)
1010efd8:	10c5883a 	add	r2,r2,r3
1010efdc:	e0bffd15 	stw	r2,-12(fp)

  r3 = (int)&hcinfo;
1010efe0:	d0a00d04 	addi	r2,gp,-32716
1010efe4:	1007883a 	mov	r3,r2
  r4 = (int)name;
1010efe8:	e0bffd17 	ldw	r2,-12(fp)
1010efec:	1009883a 	mov	r4,r2
  r5 = flags;
1010eff0:	e17ffe17 	ldw	r5,-8(fp)
  r6 = mode;
1010eff4:	e1bfff17 	ldw	r6,-4(fp)
1010eff8:	e0bffd17 	ldw	r2,-12(fp)
1010effc:	e0bff915 	stw	r2,-28(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
1010f000:	e0bff917 	ldw	r2,-28(fp)
1010f004:	10bfffc4 	addi	r2,r2,-1
1010f008:	e0bffa15 	stw	r2,-24(fp)

  while (*++ptr != 0)
1010f00c:	e0bffa17 	ldw	r2,-24(fp)
1010f010:	10800044 	addi	r2,r2,1
1010f014:	e0bffa15 	stw	r2,-24(fp)
1010f018:	e0bffa17 	ldw	r2,-24(fp)
1010f01c:	10800003 	ldbu	r2,0(r2)
1010f020:	10803fcc 	andi	r2,r2,255
1010f024:	1080201c 	xori	r2,r2,128
1010f028:	10bfe004 	addi	r2,r2,-128
1010f02c:	103ff71e 	bne	r2,zero,1010f00c <__alt_data_end+0xfffef00c>
    ;

  return ptr - string;
1010f030:	e1fffa17 	ldw	r7,-24(fp)
1010f034:	e0bff917 	ldw	r2,-28(fp)
1010f038:	3885c83a 	sub	r2,r7,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
1010f03c:	100f883a 	mov	r7,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6), "r" (r7) : "memory" );
1010f040:	003da07a 	break	1

  handle = (void *)r2;
1010f044:	e0bff715 	stw	r2,-36(fp)
  error = r3;
1010f048:	e0fff815 	stw	r3,-32(fp)

  if (error == 0)
1010f04c:	e0bff817 	ldw	r2,-32(fp)
1010f050:	1000031e 	bne	r2,zero,1010f060 <alt_hostfs_open+0x104>
    fd->priv = handle;
1010f054:	e0bffc17 	ldw	r2,-16(fp)
1010f058:	e0fff717 	ldw	r3,-36(fp)
1010f05c:	10c00115 	stw	r3,4(r2)

  return -error;
1010f060:	e0bff817 	ldw	r2,-32(fp)
1010f064:	0085c83a 	sub	r2,zero,r2
}
1010f068:	e037883a 	mov	sp,fp
1010f06c:	df000017 	ldw	fp,0(sp)
1010f070:	dec00104 	addi	sp,sp,4
1010f074:	f800283a 	ret

1010f078 <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
1010f078:	defffd04 	addi	sp,sp,-12
1010f07c:	df000215 	stw	fp,8(sp)
1010f080:	df000204 	addi	fp,sp,8
1010f084:	e13fff15 	stw	r4,-4(fp)

  /* Input and output parameters for the hostcall */
  register int r3 asm ("r3");
  register int r4 asm ("r4");

  r3 = (int)&hcinfo;
1010f088:	d0a01004 	addi	r2,gp,-32704
1010f08c:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010f090:	e0bfff17 	ldw	r2,-4(fp)
1010f094:	10800117 	ldw	r2,4(r2)
1010f098:	1009883a 	mov	r4,r2

  __asm__ volatile("break 1" : "+r" (r3) : "r" (r4) );
1010f09c:	003da07a 	break	1

  error = r3;
1010f0a0:	e0fffe15 	stw	r3,-8(fp)

  return -error;
1010f0a4:	e0bffe17 	ldw	r2,-8(fp)
1010f0a8:	0085c83a 	sub	r2,zero,r2
}
1010f0ac:	e037883a 	mov	sp,fp
1010f0b0:	df000017 	ldw	fp,0(sp)
1010f0b4:	dec00104 	addi	sp,sp,4
1010f0b8:	f800283a 	ret

1010f0bc <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
1010f0bc:	defffa04 	addi	sp,sp,-24
1010f0c0:	df000515 	stw	fp,20(sp)
1010f0c4:	df000504 	addi	fp,sp,20
1010f0c8:	e13ffd15 	stw	r4,-12(fp)
1010f0cc:	e17ffe15 	stw	r5,-8(fp)
1010f0d0:	e1bfff15 	stw	r6,-4(fp)
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");


  r3 = (int)&hcinfo;
1010f0d4:	d0a01304 	addi	r2,gp,-32692
1010f0d8:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010f0dc:	e0bffd17 	ldw	r2,-12(fp)
1010f0e0:	10800117 	ldw	r2,4(r2)
1010f0e4:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
1010f0e8:	e0bffe17 	ldw	r2,-8(fp)
1010f0ec:	100b883a 	mov	r5,r2
  r6 = len;
1010f0f0:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
1010f0f4:	003da07a 	break	1

  rc = r2;
1010f0f8:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
1010f0fc:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
1010f100:	e0bffc17 	ldw	r2,-16(fp)
1010f104:	10000326 	beq	r2,zero,1010f114 <alt_hostfs_read+0x58>
1010f108:	e0bffc17 	ldw	r2,-16(fp)
1010f10c:	0085c83a 	sub	r2,zero,r2
1010f110:	00000106 	br	1010f118 <alt_hostfs_read+0x5c>
1010f114:	e0bffb17 	ldw	r2,-20(fp)
}
1010f118:	e037883a 	mov	sp,fp
1010f11c:	df000017 	ldw	fp,0(sp)
1010f120:	dec00104 	addi	sp,sp,4
1010f124:	f800283a 	ret

1010f128 <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
1010f128:	defffa04 	addi	sp,sp,-24
1010f12c:	df000515 	stw	fp,20(sp)
1010f130:	df000504 	addi	fp,sp,20
1010f134:	e13ffd15 	stw	r4,-12(fp)
1010f138:	e17ffe15 	stw	r5,-8(fp)
1010f13c:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
1010f140:	d0a01604 	addi	r2,gp,-32680
1010f144:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010f148:	e0bffd17 	ldw	r2,-12(fp)
1010f14c:	10800117 	ldw	r2,4(r2)
1010f150:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
1010f154:	e0bffe17 	ldw	r2,-8(fp)
1010f158:	100b883a 	mov	r5,r2
  r6 = len;
1010f15c:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
1010f160:	003da07a 	break	1

  rc = r2;
1010f164:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
1010f168:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
1010f16c:	e0bffc17 	ldw	r2,-16(fp)
1010f170:	10000326 	beq	r2,zero,1010f180 <alt_hostfs_write+0x58>
1010f174:	e0bffc17 	ldw	r2,-16(fp)
1010f178:	0085c83a 	sub	r2,zero,r2
1010f17c:	00000106 	br	1010f184 <alt_hostfs_write+0x5c>
1010f180:	e0bffb17 	ldw	r2,-20(fp)
}
1010f184:	e037883a 	mov	sp,fp
1010f188:	df000017 	ldw	fp,0(sp)
1010f18c:	dec00104 	addi	sp,sp,4
1010f190:	f800283a 	ret

1010f194 <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
1010f194:	defffa04 	addi	sp,sp,-24
1010f198:	df000515 	stw	fp,20(sp)
1010f19c:	df000504 	addi	fp,sp,20
1010f1a0:	e13ffd15 	stw	r4,-12(fp)
1010f1a4:	e17ffe15 	stw	r5,-8(fp)
1010f1a8:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
1010f1ac:	d0a01904 	addi	r2,gp,-32668
1010f1b0:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010f1b4:	e0bffd17 	ldw	r2,-12(fp)
1010f1b8:	10800117 	ldw	r2,4(r2)
1010f1bc:	1009883a 	mov	r4,r2
  r5 = ptr;
1010f1c0:	e17ffe17 	ldw	r5,-8(fp)
  r6 = dir;
1010f1c4:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
1010f1c8:	003da07a 	break	1

  rc = r2;
1010f1cc:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
1010f1d0:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
1010f1d4:	e0bffc17 	ldw	r2,-16(fp)
1010f1d8:	10000326 	beq	r2,zero,1010f1e8 <alt_hostfs_seek+0x54>
1010f1dc:	e0bffc17 	ldw	r2,-16(fp)
1010f1e0:	0085c83a 	sub	r2,zero,r2
1010f1e4:	00000106 	br	1010f1ec <alt_hostfs_seek+0x58>
1010f1e8:	e0bffb17 	ldw	r2,-20(fp)
}
1010f1ec:	e037883a 	mov	sp,fp
1010f1f0:	df000017 	ldw	fp,0(sp)
1010f1f4:	dec00104 	addi	sp,sp,4
1010f1f8:	f800283a 	ret

1010f1fc <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
1010f1fc:	deffe904 	addi	sp,sp,-92
1010f200:	df001615 	stw	fp,88(sp)
1010f204:	df001604 	addi	fp,sp,88
1010f208:	e13ffe15 	stw	r4,-8(fp)
1010f20c:	e17fff15 	stw	r5,-4(fp)
  register int r2 asm ("r2");
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");

  r3 = (int)&hcinfo;
1010f210:	d0a01c04 	addi	r2,gp,-32656
1010f214:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010f218:	e0bffe17 	ldw	r2,-8(fp)
1010f21c:	10800117 	ldw	r2,4(r2)
1010f220:	1009883a 	mov	r4,r2
  r5 = (int)&hoststat;
1010f224:	e0bfee04 	addi	r2,fp,-72
1010f228:	100b883a 	mov	r5,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5) : "memory" );
1010f22c:	003da07a 	break	1

  rc = r2;
1010f230:	e0bfeb15 	stw	r2,-84(fp)
  error = r3;
1010f234:	e0ffec15 	stw	r3,-80(fp)

  if (error == 0)
1010f238:	e0bfec17 	ldw	r2,-80(fp)
1010f23c:	1000621e 	bne	r2,zero,1010f3c8 <alt_hostfs_fstat+0x1cc>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
1010f240:	e0bfee04 	addi	r2,fp,-72
1010f244:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
1010f248:	e0bfea17 	ldw	r2,-88(fp)
1010f24c:	10801004 	addi	r2,r2,64
1010f250:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
1010f254:	00001606 	br	1010f2b0 <alt_hostfs_fstat+0xb4>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
1010f258:	e0bfea17 	ldw	r2,-88(fp)
1010f25c:	10800017 	ldw	r2,0(r2)
1010f260:	1006d63a 	srli	r3,r2,24
             ((*ptr & 0x00FF0000) >> 8)  |
1010f264:	e0bfea17 	ldw	r2,-88(fp)
1010f268:	10800017 	ldw	r2,0(r2)
1010f26c:	10803fec 	andhi	r2,r2,255
1010f270:	1004d23a 	srli	r2,r2,8

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
1010f274:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
1010f278:	e0bfea17 	ldw	r2,-88(fp)
1010f27c:	10800017 	ldw	r2,0(r2)
1010f280:	10bfc00c 	andi	r2,r2,65280
1010f284:	1004923a 	slli	r2,r2,8
#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
1010f288:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
1010f28c:	e0bfea17 	ldw	r2,-88(fp)
1010f290:	10800017 	ldw	r2,0(r2)
1010f294:	1004963a 	slli	r2,r2,24
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
1010f298:	1886b03a 	or	r3,r3,r2

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
1010f29c:	e0bfea17 	ldw	r2,-88(fp)
1010f2a0:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
1010f2a4:	e0bfea17 	ldw	r2,-88(fp)
1010f2a8:	10800104 	addi	r2,r2,4
1010f2ac:	e0bfea15 	stw	r2,-88(fp)
1010f2b0:	e0ffea17 	ldw	r3,-88(fp)
1010f2b4:	e0bfed17 	ldw	r2,-76(fp)
1010f2b8:	18bfe736 	bltu	r3,r2,1010f258 <__alt_data_end+0xfffef258>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
1010f2bc:	e0bfff17 	ldw	r2,-4(fp)
1010f2c0:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
1010f2c4:	e0bfea17 	ldw	r2,-88(fp)
1010f2c8:	10800f04 	addi	r2,r2,60
1010f2cc:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
1010f2d0:	00000506 	br	1010f2e8 <alt_hostfs_fstat+0xec>
      *ptr = 0;
1010f2d4:	e0bfea17 	ldw	r2,-88(fp)
1010f2d8:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
1010f2dc:	e0bfea17 	ldw	r2,-88(fp)
1010f2e0:	10800104 	addi	r2,r2,4
1010f2e4:	e0bfea15 	stw	r2,-88(fp)
1010f2e8:	e0ffea17 	ldw	r3,-88(fp)
1010f2ec:	e0bfed17 	ldw	r2,-76(fp)
1010f2f0:	18bff836 	bltu	r3,r2,1010f2d4 <__alt_data_end+0xfffef2d4>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
1010f2f4:	e0bfee17 	ldw	r2,-72(fp)
1010f2f8:	1007883a 	mov	r3,r2
1010f2fc:	e0bfff17 	ldw	r2,-4(fp)
1010f300:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
1010f304:	e0bfef17 	ldw	r2,-68(fp)
1010f308:	1007883a 	mov	r3,r2
1010f30c:	e0bfff17 	ldw	r2,-4(fp)
1010f310:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
1010f314:	e0fff017 	ldw	r3,-64(fp)
1010f318:	e0bfff17 	ldw	r2,-4(fp)
1010f31c:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
1010f320:	e0bff117 	ldw	r2,-60(fp)
1010f324:	1007883a 	mov	r3,r2
1010f328:	e0bfff17 	ldw	r2,-4(fp)
1010f32c:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
1010f330:	e0bff217 	ldw	r2,-56(fp)
1010f334:	1007883a 	mov	r3,r2
1010f338:	e0bfff17 	ldw	r2,-4(fp)
1010f33c:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
1010f340:	e0bff317 	ldw	r2,-52(fp)
1010f344:	1007883a 	mov	r3,r2
1010f348:	e0bfff17 	ldw	r2,-4(fp)
1010f34c:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
1010f350:	e0bff417 	ldw	r2,-48(fp)
1010f354:	1007883a 	mov	r3,r2
1010f358:	e0bfff17 	ldw	r2,-4(fp)
1010f35c:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
1010f360:	e0bff617 	ldw	r2,-40(fp)
1010f364:	1007883a 	mov	r3,r2
1010f368:	e0bfff17 	ldw	r2,-4(fp)
1010f36c:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
1010f370:	e0bffb17 	ldw	r2,-20(fp)
1010f374:	1007883a 	mov	r3,r2
1010f378:	e0bfff17 	ldw	r2,-4(fp)
1010f37c:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
1010f380:	e0bffc17 	ldw	r2,-16(fp)
1010f384:	1007883a 	mov	r3,r2
1010f388:	e0bfff17 	ldw	r2,-4(fp)
1010f38c:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
1010f390:	e0bffd17 	ldw	r2,-12(fp)
1010f394:	1007883a 	mov	r3,r2
1010f398:	e0bfff17 	ldw	r2,-4(fp)
1010f39c:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
1010f3a0:	e0bff817 	ldw	r2,-32(fp)
1010f3a4:	1007883a 	mov	r3,r2
1010f3a8:	e0bfff17 	ldw	r2,-4(fp)
1010f3ac:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
1010f3b0:	e0bffa17 	ldw	r2,-24(fp)
1010f3b4:	1007883a 	mov	r3,r2
1010f3b8:	e0bfff17 	ldw	r2,-4(fp)
1010f3bc:	10c00c15 	stw	r3,48(r2)

    return rc;
1010f3c0:	e0bfeb17 	ldw	r2,-84(fp)
1010f3c4:	00000206 	br	1010f3d0 <alt_hostfs_fstat+0x1d4>
  }
  else
    return -error;
1010f3c8:	e0bfec17 	ldw	r2,-80(fp)
1010f3cc:	0085c83a 	sub	r2,zero,r2
}
1010f3d0:	e037883a 	mov	sp,fp
1010f3d4:	df000017 	ldw	fp,0(sp)
1010f3d8:	dec00104 	addi	sp,sp,4
1010f3dc:	f800283a 	ret

1010f3e0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1010f3e0:	defff504 	addi	sp,sp,-44
1010f3e4:	df000a15 	stw	fp,40(sp)
1010f3e8:	df000a04 	addi	fp,sp,40
1010f3ec:	e13ffc15 	stw	r4,-16(fp)
1010f3f0:	e17ffd15 	stw	r5,-12(fp)
1010f3f4:	e1bffe15 	stw	r6,-8(fp)
1010f3f8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1010f3fc:	e03ff615 	stw	zero,-40(fp)
1010f400:	d0a70417 	ldw	r2,-25584(gp)
  
  if (alt_ticks_per_second ())
1010f404:	10003c26 	beq	r2,zero,1010f4f8 <alt_alarm_start+0x118>
  {
    if (alarm)
1010f408:	e0bffc17 	ldw	r2,-16(fp)
1010f40c:	10003826 	beq	r2,zero,1010f4f0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
1010f410:	e0bffc17 	ldw	r2,-16(fp)
1010f414:	e0fffe17 	ldw	r3,-8(fp)
1010f418:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1010f41c:	e0bffc17 	ldw	r2,-16(fp)
1010f420:	e0ffff17 	ldw	r3,-4(fp)
1010f424:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f428:	0005303a 	rdctl	r2,status
1010f42c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f430:	e0fff917 	ldw	r3,-28(fp)
1010f434:	00bfff84 	movi	r2,-2
1010f438:	1884703a 	and	r2,r3,r2
1010f43c:	1001703a 	wrctl	status,r2
  
  return context;
1010f440:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1010f444:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1010f448:	d0a70517 	ldw	r2,-25580(gp)
      
      current_nticks = alt_nticks();
1010f44c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1010f450:	e0fffd17 	ldw	r3,-12(fp)
1010f454:	e0bff617 	ldw	r2,-40(fp)
1010f458:	1885883a 	add	r2,r3,r2
1010f45c:	10c00044 	addi	r3,r2,1
1010f460:	e0bffc17 	ldw	r2,-16(fp)
1010f464:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1010f468:	e0bffc17 	ldw	r2,-16(fp)
1010f46c:	10c00217 	ldw	r3,8(r2)
1010f470:	e0bff617 	ldw	r2,-40(fp)
1010f474:	1880042e 	bgeu	r3,r2,1010f488 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
1010f478:	e0bffc17 	ldw	r2,-16(fp)
1010f47c:	00c00044 	movi	r3,1
1010f480:	10c00405 	stb	r3,16(r2)
1010f484:	00000206 	br	1010f490 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
1010f488:	e0bffc17 	ldw	r2,-16(fp)
1010f48c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1010f490:	e0bffc17 	ldw	r2,-16(fp)
1010f494:	d0e02004 	addi	r3,gp,-32640
1010f498:	e0fffa15 	stw	r3,-24(fp)
1010f49c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010f4a0:	e0bffb17 	ldw	r2,-20(fp)
1010f4a4:	e0fffa17 	ldw	r3,-24(fp)
1010f4a8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010f4ac:	e0bffa17 	ldw	r2,-24(fp)
1010f4b0:	10c00017 	ldw	r3,0(r2)
1010f4b4:	e0bffb17 	ldw	r2,-20(fp)
1010f4b8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010f4bc:	e0bffa17 	ldw	r2,-24(fp)
1010f4c0:	10800017 	ldw	r2,0(r2)
1010f4c4:	e0fffb17 	ldw	r3,-20(fp)
1010f4c8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010f4cc:	e0bffa17 	ldw	r2,-24(fp)
1010f4d0:	e0fffb17 	ldw	r3,-20(fp)
1010f4d4:	10c00015 	stw	r3,0(r2)
1010f4d8:	e0bff817 	ldw	r2,-32(fp)
1010f4dc:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f4e0:	e0bff717 	ldw	r2,-36(fp)
1010f4e4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1010f4e8:	0005883a 	mov	r2,zero
1010f4ec:	00000306 	br	1010f4fc <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
1010f4f0:	00bffa84 	movi	r2,-22
1010f4f4:	00000106 	br	1010f4fc <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
1010f4f8:	00bfde84 	movi	r2,-134
  }
}
1010f4fc:	e037883a 	mov	sp,fp
1010f500:	df000017 	ldw	fp,0(sp)
1010f504:	dec00104 	addi	sp,sp,4
1010f508:	f800283a 	ret

1010f50c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1010f50c:	deffff04 	addi	sp,sp,-4
1010f510:	df000015 	stw	fp,0(sp)
1010f514:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1010f518:	0001883a 	nop
1010f51c:	e037883a 	mov	sp,fp
1010f520:	df000017 	ldw	fp,0(sp)
1010f524:	dec00104 	addi	sp,sp,4
1010f528:	f800283a 	ret

1010f52c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010f52c:	defffe04 	addi	sp,sp,-8
1010f530:	dfc00115 	stw	ra,4(sp)
1010f534:	df000015 	stw	fp,0(sp)
1010f538:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010f53c:	d0a00b17 	ldw	r2,-32724(gp)
1010f540:	10000326 	beq	r2,zero,1010f550 <alt_get_errno+0x24>
1010f544:	d0a00b17 	ldw	r2,-32724(gp)
1010f548:	103ee83a 	callr	r2
1010f54c:	00000106 	br	1010f554 <alt_get_errno+0x28>
1010f550:	d0a6ff04 	addi	r2,gp,-25604
}
1010f554:	e037883a 	mov	sp,fp
1010f558:	dfc00117 	ldw	ra,4(sp)
1010f55c:	df000017 	ldw	fp,0(sp)
1010f560:	dec00204 	addi	sp,sp,8
1010f564:	f800283a 	ret

1010f568 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1010f568:	defffa04 	addi	sp,sp,-24
1010f56c:	dfc00515 	stw	ra,20(sp)
1010f570:	df000415 	stw	fp,16(sp)
1010f574:	df000404 	addi	fp,sp,16
1010f578:	e13ffe15 	stw	r4,-8(fp)
1010f57c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1010f580:	e0bffe17 	ldw	r2,-8(fp)
1010f584:	10000326 	beq	r2,zero,1010f594 <alt_dev_llist_insert+0x2c>
1010f588:	e0bffe17 	ldw	r2,-8(fp)
1010f58c:	10800217 	ldw	r2,8(r2)
1010f590:	1000061e 	bne	r2,zero,1010f5ac <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1010f594:	010f52c0 	call	1010f52c <alt_get_errno>
1010f598:	1007883a 	mov	r3,r2
1010f59c:	00800584 	movi	r2,22
1010f5a0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1010f5a4:	00bffa84 	movi	r2,-22
1010f5a8:	00001306 	br	1010f5f8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1010f5ac:	e0bffe17 	ldw	r2,-8(fp)
1010f5b0:	e0ffff17 	ldw	r3,-4(fp)
1010f5b4:	e0fffc15 	stw	r3,-16(fp)
1010f5b8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010f5bc:	e0bffd17 	ldw	r2,-12(fp)
1010f5c0:	e0fffc17 	ldw	r3,-16(fp)
1010f5c4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010f5c8:	e0bffc17 	ldw	r2,-16(fp)
1010f5cc:	10c00017 	ldw	r3,0(r2)
1010f5d0:	e0bffd17 	ldw	r2,-12(fp)
1010f5d4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010f5d8:	e0bffc17 	ldw	r2,-16(fp)
1010f5dc:	10800017 	ldw	r2,0(r2)
1010f5e0:	e0fffd17 	ldw	r3,-12(fp)
1010f5e4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010f5e8:	e0bffc17 	ldw	r2,-16(fp)
1010f5ec:	e0fffd17 	ldw	r3,-12(fp)
1010f5f0:	10c00015 	stw	r3,0(r2)

  return 0;  
1010f5f4:	0005883a 	mov	r2,zero
}
1010f5f8:	e037883a 	mov	sp,fp
1010f5fc:	dfc00117 	ldw	ra,4(sp)
1010f600:	df000017 	ldw	fp,0(sp)
1010f604:	dec00204 	addi	sp,sp,8
1010f608:	f800283a 	ret

1010f60c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1010f60c:	defffd04 	addi	sp,sp,-12
1010f610:	dfc00215 	stw	ra,8(sp)
1010f614:	df000115 	stw	fp,4(sp)
1010f618:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010f61c:	00840474 	movhi	r2,4113
1010f620:	10819004 	addi	r2,r2,1600
1010f624:	e0bfff15 	stw	r2,-4(fp)
1010f628:	00000606 	br	1010f644 <_do_ctors+0x38>
        (*ctor) (); 
1010f62c:	e0bfff17 	ldw	r2,-4(fp)
1010f630:	10800017 	ldw	r2,0(r2)
1010f634:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010f638:	e0bfff17 	ldw	r2,-4(fp)
1010f63c:	10bfff04 	addi	r2,r2,-4
1010f640:	e0bfff15 	stw	r2,-4(fp)
1010f644:	e0ffff17 	ldw	r3,-4(fp)
1010f648:	00840474 	movhi	r2,4113
1010f64c:	10819104 	addi	r2,r2,1604
1010f650:	18bff62e 	bgeu	r3,r2,1010f62c <__alt_data_end+0xfffef62c>
        (*ctor) (); 
}
1010f654:	0001883a 	nop
1010f658:	e037883a 	mov	sp,fp
1010f65c:	dfc00117 	ldw	ra,4(sp)
1010f660:	df000017 	ldw	fp,0(sp)
1010f664:	dec00204 	addi	sp,sp,8
1010f668:	f800283a 	ret

1010f66c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1010f66c:	defffd04 	addi	sp,sp,-12
1010f670:	dfc00215 	stw	ra,8(sp)
1010f674:	df000115 	stw	fp,4(sp)
1010f678:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010f67c:	00840474 	movhi	r2,4113
1010f680:	10819004 	addi	r2,r2,1600
1010f684:	e0bfff15 	stw	r2,-4(fp)
1010f688:	00000606 	br	1010f6a4 <_do_dtors+0x38>
        (*dtor) (); 
1010f68c:	e0bfff17 	ldw	r2,-4(fp)
1010f690:	10800017 	ldw	r2,0(r2)
1010f694:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010f698:	e0bfff17 	ldw	r2,-4(fp)
1010f69c:	10bfff04 	addi	r2,r2,-4
1010f6a0:	e0bfff15 	stw	r2,-4(fp)
1010f6a4:	e0ffff17 	ldw	r3,-4(fp)
1010f6a8:	00840474 	movhi	r2,4113
1010f6ac:	10819104 	addi	r2,r2,1604
1010f6b0:	18bff62e 	bgeu	r3,r2,1010f68c <__alt_data_end+0xfffef68c>
        (*dtor) (); 
}
1010f6b4:	0001883a 	nop
1010f6b8:	e037883a 	mov	sp,fp
1010f6bc:	dfc00117 	ldw	ra,4(sp)
1010f6c0:	df000017 	ldw	fp,0(sp)
1010f6c4:	dec00204 	addi	sp,sp,8
1010f6c8:	f800283a 	ret

1010f6cc <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
1010f6cc:	defffc04 	addi	sp,sp,-16
1010f6d0:	df000315 	stw	fp,12(sp)
1010f6d4:	df000304 	addi	fp,sp,12
1010f6d8:	e13fff15 	stw	r4,-4(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
1010f6dc:	e0bfff17 	ldw	r2,-4(fp)
1010f6e0:	10800217 	ldw	r2,8(r2)
1010f6e4:	1000021e 	bne	r2,zero,1010f6f0 <alt_fs_reg+0x24>
  {
    return -ENODEV;
1010f6e8:	00bffb44 	movi	r2,-19
1010f6ec:	00001306 	br	1010f73c <alt_fs_reg+0x70>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
1010f6f0:	e0bfff17 	ldw	r2,-4(fp)
1010f6f4:	d0e00604 	addi	r3,gp,-32744
1010f6f8:	e0fffd15 	stw	r3,-12(fp)
1010f6fc:	e0bffe15 	stw	r2,-8(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010f700:	e0bffe17 	ldw	r2,-8(fp)
1010f704:	e0fffd17 	ldw	r3,-12(fp)
1010f708:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010f70c:	e0bffd17 	ldw	r2,-12(fp)
1010f710:	10c00017 	ldw	r3,0(r2)
1010f714:	e0bffe17 	ldw	r2,-8(fp)
1010f718:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010f71c:	e0bffd17 	ldw	r2,-12(fp)
1010f720:	10800017 	ldw	r2,0(r2)
1010f724:	e0fffe17 	ldw	r3,-8(fp)
1010f728:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010f72c:	e0bffd17 	ldw	r2,-12(fp)
1010f730:	e0fffe17 	ldw	r3,-8(fp)
1010f734:	10c00015 	stw	r3,0(r2)

  return 0;
1010f738:	0005883a 	mov	r2,zero
} 
1010f73c:	e037883a 	mov	sp,fp
1010f740:	df000017 	ldw	fp,0(sp)
1010f744:	dec00104 	addi	sp,sp,4
1010f748:	f800283a 	ret

1010f74c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1010f74c:	deffff04 	addi	sp,sp,-4
1010f750:	df000015 	stw	fp,0(sp)
1010f754:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
1010f758:	0001883a 	nop
1010f75c:	e037883a 	mov	sp,fp
1010f760:	df000017 	ldw	fp,0(sp)
1010f764:	dec00104 	addi	sp,sp,4
1010f768:	f800283a 	ret

1010f76c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010f76c:	defff904 	addi	sp,sp,-28
1010f770:	dfc00615 	stw	ra,24(sp)
1010f774:	df000515 	stw	fp,20(sp)
1010f778:	df000504 	addi	fp,sp,20
1010f77c:	e13ffc15 	stw	r4,-16(fp)
1010f780:	e17ffd15 	stw	r5,-12(fp)
1010f784:	e1bffe15 	stw	r6,-8(fp)
1010f788:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1010f78c:	e0800217 	ldw	r2,8(fp)
1010f790:	d8800015 	stw	r2,0(sp)
1010f794:	e1ffff17 	ldw	r7,-4(fp)
1010f798:	e1bffe17 	ldw	r6,-8(fp)
1010f79c:	e17ffd17 	ldw	r5,-12(fp)
1010f7a0:	e13ffc17 	ldw	r4,-16(fp)
1010f7a4:	010f91c0 	call	1010f91c <alt_iic_isr_register>
}  
1010f7a8:	e037883a 	mov	sp,fp
1010f7ac:	dfc00117 	ldw	ra,4(sp)
1010f7b0:	df000017 	ldw	fp,0(sp)
1010f7b4:	dec00204 	addi	sp,sp,8
1010f7b8:	f800283a 	ret

1010f7bc <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1010f7bc:	defff904 	addi	sp,sp,-28
1010f7c0:	df000615 	stw	fp,24(sp)
1010f7c4:	df000604 	addi	fp,sp,24
1010f7c8:	e13ffe15 	stw	r4,-8(fp)
1010f7cc:	e17fff15 	stw	r5,-4(fp)
1010f7d0:	e0bfff17 	ldw	r2,-4(fp)
1010f7d4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f7d8:	0005303a 	rdctl	r2,status
1010f7dc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f7e0:	e0fffb17 	ldw	r3,-20(fp)
1010f7e4:	00bfff84 	movi	r2,-2
1010f7e8:	1884703a 	and	r2,r3,r2
1010f7ec:	1001703a 	wrctl	status,r2
  
  return context;
1010f7f0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010f7f4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1010f7f8:	00c00044 	movi	r3,1
1010f7fc:	e0bffa17 	ldw	r2,-24(fp)
1010f800:	1884983a 	sll	r2,r3,r2
1010f804:	1007883a 	mov	r3,r2
1010f808:	d0a70317 	ldw	r2,-25588(gp)
1010f80c:	1884b03a 	or	r2,r3,r2
1010f810:	d0a70315 	stw	r2,-25588(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010f814:	d0a70317 	ldw	r2,-25588(gp)
1010f818:	100170fa 	wrctl	ienable,r2
1010f81c:	e0bffc17 	ldw	r2,-16(fp)
1010f820:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f824:	e0bffd17 	ldw	r2,-12(fp)
1010f828:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010f82c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1010f830:	0001883a 	nop
}
1010f834:	e037883a 	mov	sp,fp
1010f838:	df000017 	ldw	fp,0(sp)
1010f83c:	dec00104 	addi	sp,sp,4
1010f840:	f800283a 	ret

1010f844 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1010f844:	defff904 	addi	sp,sp,-28
1010f848:	df000615 	stw	fp,24(sp)
1010f84c:	df000604 	addi	fp,sp,24
1010f850:	e13ffe15 	stw	r4,-8(fp)
1010f854:	e17fff15 	stw	r5,-4(fp)
1010f858:	e0bfff17 	ldw	r2,-4(fp)
1010f85c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f860:	0005303a 	rdctl	r2,status
1010f864:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f868:	e0fffb17 	ldw	r3,-20(fp)
1010f86c:	00bfff84 	movi	r2,-2
1010f870:	1884703a 	and	r2,r3,r2
1010f874:	1001703a 	wrctl	status,r2
  
  return context;
1010f878:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010f87c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1010f880:	00c00044 	movi	r3,1
1010f884:	e0bffa17 	ldw	r2,-24(fp)
1010f888:	1884983a 	sll	r2,r3,r2
1010f88c:	0084303a 	nor	r2,zero,r2
1010f890:	1007883a 	mov	r3,r2
1010f894:	d0a70317 	ldw	r2,-25588(gp)
1010f898:	1884703a 	and	r2,r3,r2
1010f89c:	d0a70315 	stw	r2,-25588(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010f8a0:	d0a70317 	ldw	r2,-25588(gp)
1010f8a4:	100170fa 	wrctl	ienable,r2
1010f8a8:	e0bffc17 	ldw	r2,-16(fp)
1010f8ac:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f8b0:	e0bffd17 	ldw	r2,-12(fp)
1010f8b4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010f8b8:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1010f8bc:	0001883a 	nop
}
1010f8c0:	e037883a 	mov	sp,fp
1010f8c4:	df000017 	ldw	fp,0(sp)
1010f8c8:	dec00104 	addi	sp,sp,4
1010f8cc:	f800283a 	ret

1010f8d0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1010f8d0:	defffc04 	addi	sp,sp,-16
1010f8d4:	df000315 	stw	fp,12(sp)
1010f8d8:	df000304 	addi	fp,sp,12
1010f8dc:	e13ffe15 	stw	r4,-8(fp)
1010f8e0:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1010f8e4:	000530fa 	rdctl	r2,ienable
1010f8e8:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1010f8ec:	00c00044 	movi	r3,1
1010f8f0:	e0bfff17 	ldw	r2,-4(fp)
1010f8f4:	1884983a 	sll	r2,r3,r2
1010f8f8:	1007883a 	mov	r3,r2
1010f8fc:	e0bffd17 	ldw	r2,-12(fp)
1010f900:	1884703a 	and	r2,r3,r2
1010f904:	1004c03a 	cmpne	r2,r2,zero
1010f908:	10803fcc 	andi	r2,r2,255
}
1010f90c:	e037883a 	mov	sp,fp
1010f910:	df000017 	ldw	fp,0(sp)
1010f914:	dec00104 	addi	sp,sp,4
1010f918:	f800283a 	ret

1010f91c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010f91c:	defff504 	addi	sp,sp,-44
1010f920:	dfc00a15 	stw	ra,40(sp)
1010f924:	df000915 	stw	fp,36(sp)
1010f928:	df000904 	addi	fp,sp,36
1010f92c:	e13ffc15 	stw	r4,-16(fp)
1010f930:	e17ffd15 	stw	r5,-12(fp)
1010f934:	e1bffe15 	stw	r6,-8(fp)
1010f938:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1010f93c:	00bffa84 	movi	r2,-22
1010f940:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1010f944:	e0bffd17 	ldw	r2,-12(fp)
1010f948:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1010f94c:	e0bff817 	ldw	r2,-32(fp)
1010f950:	10800808 	cmpgei	r2,r2,32
1010f954:	1000271e 	bne	r2,zero,1010f9f4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f958:	0005303a 	rdctl	r2,status
1010f95c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f960:	e0fffb17 	ldw	r3,-20(fp)
1010f964:	00bfff84 	movi	r2,-2
1010f968:	1884703a 	and	r2,r3,r2
1010f96c:	1001703a 	wrctl	status,r2
  
  return context;
1010f970:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1010f974:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1010f978:	00840474 	movhi	r2,4113
1010f97c:	10903904 	addi	r2,r2,16612
1010f980:	e0fff817 	ldw	r3,-32(fp)
1010f984:	180690fa 	slli	r3,r3,3
1010f988:	10c5883a 	add	r2,r2,r3
1010f98c:	e0fffe17 	ldw	r3,-8(fp)
1010f990:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1010f994:	00840474 	movhi	r2,4113
1010f998:	10903904 	addi	r2,r2,16612
1010f99c:	e0fff817 	ldw	r3,-32(fp)
1010f9a0:	180690fa 	slli	r3,r3,3
1010f9a4:	10c5883a 	add	r2,r2,r3
1010f9a8:	10800104 	addi	r2,r2,4
1010f9ac:	e0ffff17 	ldw	r3,-4(fp)
1010f9b0:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1010f9b4:	e0bffe17 	ldw	r2,-8(fp)
1010f9b8:	10000526 	beq	r2,zero,1010f9d0 <alt_iic_isr_register+0xb4>
1010f9bc:	e0bff817 	ldw	r2,-32(fp)
1010f9c0:	100b883a 	mov	r5,r2
1010f9c4:	e13ffc17 	ldw	r4,-16(fp)
1010f9c8:	010f7bc0 	call	1010f7bc <alt_ic_irq_enable>
1010f9cc:	00000406 	br	1010f9e0 <alt_iic_isr_register+0xc4>
1010f9d0:	e0bff817 	ldw	r2,-32(fp)
1010f9d4:	100b883a 	mov	r5,r2
1010f9d8:	e13ffc17 	ldw	r4,-16(fp)
1010f9dc:	010f8440 	call	1010f844 <alt_ic_irq_disable>
1010f9e0:	e0bff715 	stw	r2,-36(fp)
1010f9e4:	e0bffa17 	ldw	r2,-24(fp)
1010f9e8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f9ec:	e0bff917 	ldw	r2,-28(fp)
1010f9f0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1010f9f4:	e0bff717 	ldw	r2,-36(fp)
}
1010f9f8:	e037883a 	mov	sp,fp
1010f9fc:	dfc00117 	ldw	ra,4(sp)
1010fa00:	df000017 	ldw	fp,0(sp)
1010fa04:	dec00204 	addi	sp,sp,8
1010fa08:	f800283a 	ret

1010fa0c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1010fa0c:	defff804 	addi	sp,sp,-32
1010fa10:	dfc00715 	stw	ra,28(sp)
1010fa14:	df000615 	stw	fp,24(sp)
1010fa18:	dc000515 	stw	r16,20(sp)
1010fa1c:	df000604 	addi	fp,sp,24
1010fa20:	e13ffb15 	stw	r4,-20(fp)
1010fa24:	e17ffc15 	stw	r5,-16(fp)
1010fa28:	e1bffd15 	stw	r6,-12(fp)
1010fa2c:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
1010fa30:	e1bffe17 	ldw	r6,-8(fp)
1010fa34:	e17ffd17 	ldw	r5,-12(fp)
1010fa38:	e13ffc17 	ldw	r4,-16(fp)
1010fa3c:	010fc940 	call	1010fc94 <open>
1010fa40:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
1010fa44:	e0bffa17 	ldw	r2,-24(fp)
1010fa48:	10002216 	blt	r2,zero,1010fad4 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
1010fa4c:	04040474 	movhi	r16,4113
1010fa50:	8404a604 	addi	r16,r16,4760
1010fa54:	e0bffa17 	ldw	r2,-24(fp)
1010fa58:	01400304 	movi	r5,12
1010fa5c:	1009883a 	mov	r4,r2
1010fa60:	0100d140 	call	10100d14 <__mulsi3>
1010fa64:	8085883a 	add	r2,r16,r2
1010fa68:	10c00017 	ldw	r3,0(r2)
1010fa6c:	e0bffb17 	ldw	r2,-20(fp)
1010fa70:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1010fa74:	04040474 	movhi	r16,4113
1010fa78:	8404a604 	addi	r16,r16,4760
1010fa7c:	e0bffa17 	ldw	r2,-24(fp)
1010fa80:	01400304 	movi	r5,12
1010fa84:	1009883a 	mov	r4,r2
1010fa88:	0100d140 	call	10100d14 <__mulsi3>
1010fa8c:	8085883a 	add	r2,r16,r2
1010fa90:	10800104 	addi	r2,r2,4
1010fa94:	10c00017 	ldw	r3,0(r2)
1010fa98:	e0bffb17 	ldw	r2,-20(fp)
1010fa9c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1010faa0:	04040474 	movhi	r16,4113
1010faa4:	8404a604 	addi	r16,r16,4760
1010faa8:	e0bffa17 	ldw	r2,-24(fp)
1010faac:	01400304 	movi	r5,12
1010fab0:	1009883a 	mov	r4,r2
1010fab4:	0100d140 	call	10100d14 <__mulsi3>
1010fab8:	8085883a 	add	r2,r16,r2
1010fabc:	10800204 	addi	r2,r2,8
1010fac0:	10c00017 	ldw	r3,0(r2)
1010fac4:	e0bffb17 	ldw	r2,-20(fp)
1010fac8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1010facc:	e13ffa17 	ldw	r4,-24(fp)
1010fad0:	010e1c40 	call	1010e1c4 <alt_release_fd>
  }
} 
1010fad4:	0001883a 	nop
1010fad8:	e6ffff04 	addi	sp,fp,-4
1010fadc:	dfc00217 	ldw	ra,8(sp)
1010fae0:	df000117 	ldw	fp,4(sp)
1010fae4:	dc000017 	ldw	r16,0(sp)
1010fae8:	dec00304 	addi	sp,sp,12
1010faec:	f800283a 	ret

1010faf0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1010faf0:	defffb04 	addi	sp,sp,-20
1010faf4:	dfc00415 	stw	ra,16(sp)
1010faf8:	df000315 	stw	fp,12(sp)
1010fafc:	df000304 	addi	fp,sp,12
1010fb00:	e13ffd15 	stw	r4,-12(fp)
1010fb04:	e17ffe15 	stw	r5,-8(fp)
1010fb08:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1010fb0c:	01c07fc4 	movi	r7,511
1010fb10:	01800044 	movi	r6,1
1010fb14:	e17ffd17 	ldw	r5,-12(fp)
1010fb18:	01040474 	movhi	r4,4113
1010fb1c:	2104a904 	addi	r4,r4,4772
1010fb20:	010fa0c0 	call	1010fa0c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1010fb24:	01c07fc4 	movi	r7,511
1010fb28:	000d883a 	mov	r6,zero
1010fb2c:	e17ffe17 	ldw	r5,-8(fp)
1010fb30:	01040474 	movhi	r4,4113
1010fb34:	2104a604 	addi	r4,r4,4760
1010fb38:	010fa0c0 	call	1010fa0c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1010fb3c:	01c07fc4 	movi	r7,511
1010fb40:	01800044 	movi	r6,1
1010fb44:	e17fff17 	ldw	r5,-4(fp)
1010fb48:	01040474 	movhi	r4,4113
1010fb4c:	2104ac04 	addi	r4,r4,4784
1010fb50:	010fa0c0 	call	1010fa0c <alt_open_fd>
}  
1010fb54:	0001883a 	nop
1010fb58:	e037883a 	mov	sp,fp
1010fb5c:	dfc00117 	ldw	ra,4(sp)
1010fb60:	df000017 	ldw	fp,0(sp)
1010fb64:	dec00204 	addi	sp,sp,8
1010fb68:	f800283a 	ret

1010fb6c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010fb6c:	defffe04 	addi	sp,sp,-8
1010fb70:	dfc00115 	stw	ra,4(sp)
1010fb74:	df000015 	stw	fp,0(sp)
1010fb78:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010fb7c:	d0a00b17 	ldw	r2,-32724(gp)
1010fb80:	10000326 	beq	r2,zero,1010fb90 <alt_get_errno+0x24>
1010fb84:	d0a00b17 	ldw	r2,-32724(gp)
1010fb88:	103ee83a 	callr	r2
1010fb8c:	00000106 	br	1010fb94 <alt_get_errno+0x28>
1010fb90:	d0a6ff04 	addi	r2,gp,-25604
}
1010fb94:	e037883a 	mov	sp,fp
1010fb98:	dfc00117 	ldw	ra,4(sp)
1010fb9c:	df000017 	ldw	fp,0(sp)
1010fba0:	dec00204 	addi	sp,sp,8
1010fba4:	f800283a 	ret

1010fba8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1010fba8:	defffb04 	addi	sp,sp,-20
1010fbac:	dfc00415 	stw	ra,16(sp)
1010fbb0:	df000315 	stw	fp,12(sp)
1010fbb4:	dc000215 	stw	r16,8(sp)
1010fbb8:	df000304 	addi	fp,sp,12
1010fbbc:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1010fbc0:	e0bffe17 	ldw	r2,-8(fp)
1010fbc4:	10800217 	ldw	r2,8(r2)
1010fbc8:	10d00034 	orhi	r3,r2,16384
1010fbcc:	e0bffe17 	ldw	r2,-8(fp)
1010fbd0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010fbd4:	e03ffd15 	stw	zero,-12(fp)
1010fbd8:	00002306 	br	1010fc68 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010fbdc:	04040474 	movhi	r16,4113
1010fbe0:	8404a604 	addi	r16,r16,4760
1010fbe4:	e0bffd17 	ldw	r2,-12(fp)
1010fbe8:	01400304 	movi	r5,12
1010fbec:	1009883a 	mov	r4,r2
1010fbf0:	0100d140 	call	10100d14 <__mulsi3>
1010fbf4:	8085883a 	add	r2,r16,r2
1010fbf8:	10c00017 	ldw	r3,0(r2)
1010fbfc:	e0bffe17 	ldw	r2,-8(fp)
1010fc00:	10800017 	ldw	r2,0(r2)
1010fc04:	1880151e 	bne	r3,r2,1010fc5c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010fc08:	04040474 	movhi	r16,4113
1010fc0c:	8404a604 	addi	r16,r16,4760
1010fc10:	e0bffd17 	ldw	r2,-12(fp)
1010fc14:	01400304 	movi	r5,12
1010fc18:	1009883a 	mov	r4,r2
1010fc1c:	0100d140 	call	10100d14 <__mulsi3>
1010fc20:	8085883a 	add	r2,r16,r2
1010fc24:	10800204 	addi	r2,r2,8
1010fc28:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010fc2c:	10000b0e 	bge	r2,zero,1010fc5c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1010fc30:	01400304 	movi	r5,12
1010fc34:	e13ffd17 	ldw	r4,-12(fp)
1010fc38:	0100d140 	call	10100d14 <__mulsi3>
1010fc3c:	1007883a 	mov	r3,r2
1010fc40:	00840474 	movhi	r2,4113
1010fc44:	1084a604 	addi	r2,r2,4760
1010fc48:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010fc4c:	e0bffe17 	ldw	r2,-8(fp)
1010fc50:	18800226 	beq	r3,r2,1010fc5c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1010fc54:	00bffcc4 	movi	r2,-13
1010fc58:	00000806 	br	1010fc7c <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010fc5c:	e0bffd17 	ldw	r2,-12(fp)
1010fc60:	10800044 	addi	r2,r2,1
1010fc64:	e0bffd15 	stw	r2,-12(fp)
1010fc68:	d0a00a17 	ldw	r2,-32728(gp)
1010fc6c:	1007883a 	mov	r3,r2
1010fc70:	e0bffd17 	ldw	r2,-12(fp)
1010fc74:	18bfd92e 	bgeu	r3,r2,1010fbdc <__alt_data_end+0xfffefbdc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1010fc78:	0005883a 	mov	r2,zero
}
1010fc7c:	e6ffff04 	addi	sp,fp,-4
1010fc80:	dfc00217 	ldw	ra,8(sp)
1010fc84:	df000117 	ldw	fp,4(sp)
1010fc88:	dc000017 	ldw	r16,0(sp)
1010fc8c:	dec00304 	addi	sp,sp,12
1010fc90:	f800283a 	ret

1010fc94 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1010fc94:	defff604 	addi	sp,sp,-40
1010fc98:	dfc00915 	stw	ra,36(sp)
1010fc9c:	df000815 	stw	fp,32(sp)
1010fca0:	df000804 	addi	fp,sp,32
1010fca4:	e13ffd15 	stw	r4,-12(fp)
1010fca8:	e17ffe15 	stw	r5,-8(fp)
1010fcac:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1010fcb0:	00bfffc4 	movi	r2,-1
1010fcb4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1010fcb8:	00bffb44 	movi	r2,-19
1010fcbc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1010fcc0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1010fcc4:	d1600804 	addi	r5,gp,-32736
1010fcc8:	e13ffd17 	ldw	r4,-12(fp)
1010fccc:	010ffb80 	call	1010ffb8 <alt_find_dev>
1010fcd0:	e0bff815 	stw	r2,-32(fp)
1010fcd4:	e0bff817 	ldw	r2,-32(fp)
1010fcd8:	1000051e 	bne	r2,zero,1010fcf0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1010fcdc:	e13ffd17 	ldw	r4,-12(fp)
1010fce0:	01100480 	call	10110048 <alt_find_file>
1010fce4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1010fce8:	00800044 	movi	r2,1
1010fcec:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1010fcf0:	e0bff817 	ldw	r2,-32(fp)
1010fcf4:	10002b26 	beq	r2,zero,1010fda4 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
1010fcf8:	e13ff817 	ldw	r4,-32(fp)
1010fcfc:	01101500 	call	10110150 <alt_get_fd>
1010fd00:	e0bff915 	stw	r2,-28(fp)
1010fd04:	e0bff917 	ldw	r2,-28(fp)
1010fd08:	1000030e 	bge	r2,zero,1010fd18 <open+0x84>
    {
      status = index;
1010fd0c:	e0bff917 	ldw	r2,-28(fp)
1010fd10:	e0bffa15 	stw	r2,-24(fp)
1010fd14:	00002506 	br	1010fdac <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
1010fd18:	01400304 	movi	r5,12
1010fd1c:	e13ff917 	ldw	r4,-28(fp)
1010fd20:	0100d140 	call	10100d14 <__mulsi3>
1010fd24:	1007883a 	mov	r3,r2
1010fd28:	00840474 	movhi	r2,4113
1010fd2c:	1084a604 	addi	r2,r2,4760
1010fd30:	1885883a 	add	r2,r3,r2
1010fd34:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1010fd38:	e0fffe17 	ldw	r3,-8(fp)
1010fd3c:	00900034 	movhi	r2,16384
1010fd40:	10bfffc4 	addi	r2,r2,-1
1010fd44:	1886703a 	and	r3,r3,r2
1010fd48:	e0bffc17 	ldw	r2,-16(fp)
1010fd4c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1010fd50:	e0bffb17 	ldw	r2,-20(fp)
1010fd54:	1000051e 	bne	r2,zero,1010fd6c <open+0xd8>
1010fd58:	e13ffc17 	ldw	r4,-16(fp)
1010fd5c:	010fba80 	call	1010fba8 <alt_file_locked>
1010fd60:	e0bffa15 	stw	r2,-24(fp)
1010fd64:	e0bffa17 	ldw	r2,-24(fp)
1010fd68:	10001016 	blt	r2,zero,1010fdac <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1010fd6c:	e0bff817 	ldw	r2,-32(fp)
1010fd70:	10800317 	ldw	r2,12(r2)
1010fd74:	10000826 	beq	r2,zero,1010fd98 <open+0x104>
1010fd78:	e0bff817 	ldw	r2,-32(fp)
1010fd7c:	10800317 	ldw	r2,12(r2)
1010fd80:	e1ffff17 	ldw	r7,-4(fp)
1010fd84:	e1bffe17 	ldw	r6,-8(fp)
1010fd88:	e17ffd17 	ldw	r5,-12(fp)
1010fd8c:	e13ffc17 	ldw	r4,-16(fp)
1010fd90:	103ee83a 	callr	r2
1010fd94:	00000106 	br	1010fd9c <open+0x108>
1010fd98:	0005883a 	mov	r2,zero
1010fd9c:	e0bffa15 	stw	r2,-24(fp)
1010fda0:	00000206 	br	1010fdac <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
1010fda4:	00bffb44 	movi	r2,-19
1010fda8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1010fdac:	e0bffa17 	ldw	r2,-24(fp)
1010fdb0:	1000090e 	bge	r2,zero,1010fdd8 <open+0x144>
  {
    alt_release_fd (index);  
1010fdb4:	e13ff917 	ldw	r4,-28(fp)
1010fdb8:	010e1c40 	call	1010e1c4 <alt_release_fd>
    ALT_ERRNO = -status;
1010fdbc:	010fb6c0 	call	1010fb6c <alt_get_errno>
1010fdc0:	1007883a 	mov	r3,r2
1010fdc4:	e0bffa17 	ldw	r2,-24(fp)
1010fdc8:	0085c83a 	sub	r2,zero,r2
1010fdcc:	18800015 	stw	r2,0(r3)
    return -1;
1010fdd0:	00bfffc4 	movi	r2,-1
1010fdd4:	00000106 	br	1010fddc <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
1010fdd8:	e0bff917 	ldw	r2,-28(fp)
}
1010fddc:	e037883a 	mov	sp,fp
1010fde0:	dfc00117 	ldw	ra,4(sp)
1010fde4:	df000017 	ldw	fp,0(sp)
1010fde8:	dec00204 	addi	sp,sp,8
1010fdec:	f800283a 	ret

1010fdf0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1010fdf0:	defffa04 	addi	sp,sp,-24
1010fdf4:	df000515 	stw	fp,20(sp)
1010fdf8:	df000504 	addi	fp,sp,20
1010fdfc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010fe00:	0005303a 	rdctl	r2,status
1010fe04:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010fe08:	e0fffc17 	ldw	r3,-16(fp)
1010fe0c:	00bfff84 	movi	r2,-2
1010fe10:	1884703a 	and	r2,r3,r2
1010fe14:	1001703a 	wrctl	status,r2
  
  return context;
1010fe18:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1010fe1c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1010fe20:	e0bfff17 	ldw	r2,-4(fp)
1010fe24:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1010fe28:	e0bffd17 	ldw	r2,-12(fp)
1010fe2c:	10800017 	ldw	r2,0(r2)
1010fe30:	e0fffd17 	ldw	r3,-12(fp)
1010fe34:	18c00117 	ldw	r3,4(r3)
1010fe38:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1010fe3c:	e0bffd17 	ldw	r2,-12(fp)
1010fe40:	10800117 	ldw	r2,4(r2)
1010fe44:	e0fffd17 	ldw	r3,-12(fp)
1010fe48:	18c00017 	ldw	r3,0(r3)
1010fe4c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1010fe50:	e0bffd17 	ldw	r2,-12(fp)
1010fe54:	e0fffd17 	ldw	r3,-12(fp)
1010fe58:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1010fe5c:	e0bffd17 	ldw	r2,-12(fp)
1010fe60:	e0fffd17 	ldw	r3,-12(fp)
1010fe64:	10c00015 	stw	r3,0(r2)
1010fe68:	e0bffb17 	ldw	r2,-20(fp)
1010fe6c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010fe70:	e0bffe17 	ldw	r2,-8(fp)
1010fe74:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1010fe78:	0001883a 	nop
1010fe7c:	e037883a 	mov	sp,fp
1010fe80:	df000017 	ldw	fp,0(sp)
1010fe84:	dec00104 	addi	sp,sp,4
1010fe88:	f800283a 	ret

1010fe8c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1010fe8c:	defffb04 	addi	sp,sp,-20
1010fe90:	dfc00415 	stw	ra,16(sp)
1010fe94:	df000315 	stw	fp,12(sp)
1010fe98:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1010fe9c:	d0a02017 	ldw	r2,-32640(gp)
1010fea0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1010fea4:	d0a70517 	ldw	r2,-25580(gp)
1010fea8:	10800044 	addi	r2,r2,1
1010feac:	d0a70515 	stw	r2,-25580(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010feb0:	00002e06 	br	1010ff6c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1010feb4:	e0bffd17 	ldw	r2,-12(fp)
1010feb8:	10800017 	ldw	r2,0(r2)
1010febc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1010fec0:	e0bffd17 	ldw	r2,-12(fp)
1010fec4:	10800403 	ldbu	r2,16(r2)
1010fec8:	10803fcc 	andi	r2,r2,255
1010fecc:	10000426 	beq	r2,zero,1010fee0 <alt_tick+0x54>
1010fed0:	d0a70517 	ldw	r2,-25580(gp)
1010fed4:	1000021e 	bne	r2,zero,1010fee0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1010fed8:	e0bffd17 	ldw	r2,-12(fp)
1010fedc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1010fee0:	e0bffd17 	ldw	r2,-12(fp)
1010fee4:	10800217 	ldw	r2,8(r2)
1010fee8:	d0e70517 	ldw	r3,-25580(gp)
1010feec:	18801d36 	bltu	r3,r2,1010ff64 <alt_tick+0xd8>
1010fef0:	e0bffd17 	ldw	r2,-12(fp)
1010fef4:	10800403 	ldbu	r2,16(r2)
1010fef8:	10803fcc 	andi	r2,r2,255
1010fefc:	1000191e 	bne	r2,zero,1010ff64 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1010ff00:	e0bffd17 	ldw	r2,-12(fp)
1010ff04:	10800317 	ldw	r2,12(r2)
1010ff08:	e0fffd17 	ldw	r3,-12(fp)
1010ff0c:	18c00517 	ldw	r3,20(r3)
1010ff10:	1809883a 	mov	r4,r3
1010ff14:	103ee83a 	callr	r2
1010ff18:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1010ff1c:	e0bfff17 	ldw	r2,-4(fp)
1010ff20:	1000031e 	bne	r2,zero,1010ff30 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1010ff24:	e13ffd17 	ldw	r4,-12(fp)
1010ff28:	010fdf00 	call	1010fdf0 <alt_alarm_stop>
1010ff2c:	00000d06 	br	1010ff64 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1010ff30:	e0bffd17 	ldw	r2,-12(fp)
1010ff34:	10c00217 	ldw	r3,8(r2)
1010ff38:	e0bfff17 	ldw	r2,-4(fp)
1010ff3c:	1887883a 	add	r3,r3,r2
1010ff40:	e0bffd17 	ldw	r2,-12(fp)
1010ff44:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1010ff48:	e0bffd17 	ldw	r2,-12(fp)
1010ff4c:	10c00217 	ldw	r3,8(r2)
1010ff50:	d0a70517 	ldw	r2,-25580(gp)
1010ff54:	1880032e 	bgeu	r3,r2,1010ff64 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1010ff58:	e0bffd17 	ldw	r2,-12(fp)
1010ff5c:	00c00044 	movi	r3,1
1010ff60:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1010ff64:	e0bffe17 	ldw	r2,-8(fp)
1010ff68:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010ff6c:	e0fffd17 	ldw	r3,-12(fp)
1010ff70:	d0a02004 	addi	r2,gp,-32640
1010ff74:	18bfcf1e 	bne	r3,r2,1010feb4 <__alt_data_end+0xfffefeb4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1010ff78:	0001883a 	nop
}
1010ff7c:	0001883a 	nop
1010ff80:	e037883a 	mov	sp,fp
1010ff84:	dfc00117 	ldw	ra,4(sp)
1010ff88:	df000017 	ldw	fp,0(sp)
1010ff8c:	dec00204 	addi	sp,sp,8
1010ff90:	f800283a 	ret

1010ff94 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1010ff94:	deffff04 	addi	sp,sp,-4
1010ff98:	df000015 	stw	fp,0(sp)
1010ff9c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1010ffa0:	000170fa 	wrctl	ienable,zero
}
1010ffa4:	0001883a 	nop
1010ffa8:	e037883a 	mov	sp,fp
1010ffac:	df000017 	ldw	fp,0(sp)
1010ffb0:	dec00104 	addi	sp,sp,4
1010ffb4:	f800283a 	ret

1010ffb8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1010ffb8:	defffa04 	addi	sp,sp,-24
1010ffbc:	dfc00515 	stw	ra,20(sp)
1010ffc0:	df000415 	stw	fp,16(sp)
1010ffc4:	df000404 	addi	fp,sp,16
1010ffc8:	e13ffe15 	stw	r4,-8(fp)
1010ffcc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1010ffd0:	e0bfff17 	ldw	r2,-4(fp)
1010ffd4:	10800017 	ldw	r2,0(r2)
1010ffd8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1010ffdc:	e13ffe17 	ldw	r4,-8(fp)
1010ffe0:	0100fc40 	call	10100fc4 <strlen>
1010ffe4:	10800044 	addi	r2,r2,1
1010ffe8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010ffec:	00000d06 	br	10110024 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1010fff0:	e0bffc17 	ldw	r2,-16(fp)
1010fff4:	10800217 	ldw	r2,8(r2)
1010fff8:	e0fffd17 	ldw	r3,-12(fp)
1010fffc:	180d883a 	mov	r6,r3
10110000:	e17ffe17 	ldw	r5,-8(fp)
10110004:	1009883a 	mov	r4,r2
10110008:	01102fc0 	call	101102fc <memcmp>
1011000c:	1000021e 	bne	r2,zero,10110018 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
10110010:	e0bffc17 	ldw	r2,-16(fp)
10110014:	00000706 	br	10110034 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
10110018:	e0bffc17 	ldw	r2,-16(fp)
1011001c:	10800017 	ldw	r2,0(r2)
10110020:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
10110024:	e0fffc17 	ldw	r3,-16(fp)
10110028:	e0bfff17 	ldw	r2,-4(fp)
1011002c:	18bff01e 	bne	r3,r2,1010fff0 <__alt_data_end+0xfffefff0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
10110030:	0005883a 	mov	r2,zero
}
10110034:	e037883a 	mov	sp,fp
10110038:	dfc00117 	ldw	ra,4(sp)
1011003c:	df000017 	ldw	fp,0(sp)
10110040:	dec00204 	addi	sp,sp,8
10110044:	f800283a 	ret

10110048 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
10110048:	defffb04 	addi	sp,sp,-20
1011004c:	dfc00415 	stw	ra,16(sp)
10110050:	df000315 	stw	fp,12(sp)
10110054:	df000304 	addi	fp,sp,12
10110058:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1011005c:	d0a00617 	ldw	r2,-32744(gp)
10110060:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
10110064:	00003106 	br	1011012c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
10110068:	e0bffd17 	ldw	r2,-12(fp)
1011006c:	10800217 	ldw	r2,8(r2)
10110070:	1009883a 	mov	r4,r2
10110074:	0100fc40 	call	10100fc4 <strlen>
10110078:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1011007c:	e0bffd17 	ldw	r2,-12(fp)
10110080:	10c00217 	ldw	r3,8(r2)
10110084:	e0bffe17 	ldw	r2,-8(fp)
10110088:	10bfffc4 	addi	r2,r2,-1
1011008c:	1885883a 	add	r2,r3,r2
10110090:	10800003 	ldbu	r2,0(r2)
10110094:	10803fcc 	andi	r2,r2,255
10110098:	1080201c 	xori	r2,r2,128
1011009c:	10bfe004 	addi	r2,r2,-128
101100a0:	10800bd8 	cmpnei	r2,r2,47
101100a4:	1000031e 	bne	r2,zero,101100b4 <alt_find_file+0x6c>
    {
      len -= 1;
101100a8:	e0bffe17 	ldw	r2,-8(fp)
101100ac:	10bfffc4 	addi	r2,r2,-1
101100b0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
101100b4:	e0bffe17 	ldw	r2,-8(fp)
101100b8:	e0ffff17 	ldw	r3,-4(fp)
101100bc:	1885883a 	add	r2,r3,r2
101100c0:	10800003 	ldbu	r2,0(r2)
101100c4:	10803fcc 	andi	r2,r2,255
101100c8:	1080201c 	xori	r2,r2,128
101100cc:	10bfe004 	addi	r2,r2,-128
101100d0:	10800be0 	cmpeqi	r2,r2,47
101100d4:	1000081e 	bne	r2,zero,101100f8 <alt_find_file+0xb0>
101100d8:	e0bffe17 	ldw	r2,-8(fp)
101100dc:	e0ffff17 	ldw	r3,-4(fp)
101100e0:	1885883a 	add	r2,r3,r2
101100e4:	10800003 	ldbu	r2,0(r2)
101100e8:	10803fcc 	andi	r2,r2,255
101100ec:	1080201c 	xori	r2,r2,128
101100f0:	10bfe004 	addi	r2,r2,-128
101100f4:	10000a1e 	bne	r2,zero,10110120 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
101100f8:	e0bffd17 	ldw	r2,-12(fp)
101100fc:	10800217 	ldw	r2,8(r2)
10110100:	e0fffe17 	ldw	r3,-8(fp)
10110104:	180d883a 	mov	r6,r3
10110108:	e17fff17 	ldw	r5,-4(fp)
1011010c:	1009883a 	mov	r4,r2
10110110:	01102fc0 	call	101102fc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10110114:	1000021e 	bne	r2,zero,10110120 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
10110118:	e0bffd17 	ldw	r2,-12(fp)
1011011c:	00000706 	br	1011013c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
10110120:	e0bffd17 	ldw	r2,-12(fp)
10110124:	10800017 	ldw	r2,0(r2)
10110128:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1011012c:	e0fffd17 	ldw	r3,-12(fp)
10110130:	d0a00604 	addi	r2,gp,-32744
10110134:	18bfcc1e 	bne	r3,r2,10110068 <__alt_data_end+0xffff0068>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
10110138:	0005883a 	mov	r2,zero
}
1011013c:	e037883a 	mov	sp,fp
10110140:	dfc00117 	ldw	ra,4(sp)
10110144:	df000017 	ldw	fp,0(sp)
10110148:	dec00204 	addi	sp,sp,8
1011014c:	f800283a 	ret

10110150 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
10110150:	defffa04 	addi	sp,sp,-24
10110154:	dfc00515 	stw	ra,20(sp)
10110158:	df000415 	stw	fp,16(sp)
1011015c:	dc000315 	stw	r16,12(sp)
10110160:	df000404 	addi	fp,sp,16
10110164:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
10110168:	00bffa04 	movi	r2,-24
1011016c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10110170:	e03ffc15 	stw	zero,-16(fp)
10110174:	00001d06 	br	101101ec <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
10110178:	04040474 	movhi	r16,4113
1011017c:	8404a604 	addi	r16,r16,4760
10110180:	e0bffc17 	ldw	r2,-16(fp)
10110184:	01400304 	movi	r5,12
10110188:	1009883a 	mov	r4,r2
1011018c:	0100d140 	call	10100d14 <__mulsi3>
10110190:	8085883a 	add	r2,r16,r2
10110194:	10800017 	ldw	r2,0(r2)
10110198:	1000111e 	bne	r2,zero,101101e0 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
1011019c:	04040474 	movhi	r16,4113
101101a0:	8404a604 	addi	r16,r16,4760
101101a4:	e0bffc17 	ldw	r2,-16(fp)
101101a8:	01400304 	movi	r5,12
101101ac:	1009883a 	mov	r4,r2
101101b0:	0100d140 	call	10100d14 <__mulsi3>
101101b4:	8085883a 	add	r2,r16,r2
101101b8:	e0fffe17 	ldw	r3,-8(fp)
101101bc:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
101101c0:	d0e00a17 	ldw	r3,-32728(gp)
101101c4:	e0bffc17 	ldw	r2,-16(fp)
101101c8:	1880020e 	bge	r3,r2,101101d4 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
101101cc:	e0bffc17 	ldw	r2,-16(fp)
101101d0:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
101101d4:	e0bffc17 	ldw	r2,-16(fp)
101101d8:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
101101dc:	00000606 	br	101101f8 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
101101e0:	e0bffc17 	ldw	r2,-16(fp)
101101e4:	10800044 	addi	r2,r2,1
101101e8:	e0bffc15 	stw	r2,-16(fp)
101101ec:	e0bffc17 	ldw	r2,-16(fp)
101101f0:	10800810 	cmplti	r2,r2,32
101101f4:	103fe01e 	bne	r2,zero,10110178 <__alt_data_end+0xffff0178>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
101101f8:	e0bffd17 	ldw	r2,-12(fp)
}
101101fc:	e6ffff04 	addi	sp,fp,-4
10110200:	dfc00217 	ldw	ra,8(sp)
10110204:	df000117 	ldw	fp,4(sp)
10110208:	dc000017 	ldw	r16,0(sp)
1011020c:	dec00304 	addi	sp,sp,12
10110210:	f800283a 	ret

10110214 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
10110214:	defffe04 	addi	sp,sp,-8
10110218:	df000115 	stw	fp,4(sp)
1011021c:	df000104 	addi	fp,sp,4
10110220:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
10110224:	e0bfff17 	ldw	r2,-4(fp)
10110228:	10bffe84 	addi	r2,r2,-6
1011022c:	10c00428 	cmpgeui	r3,r2,16
10110230:	18001a1e 	bne	r3,zero,1011029c <alt_exception_cause_generated_bad_addr+0x88>
10110234:	100690ba 	slli	r3,r2,2
10110238:	00840474 	movhi	r2,4113
1011023c:	10809304 	addi	r2,r2,588
10110240:	1885883a 	add	r2,r3,r2
10110244:	10800017 	ldw	r2,0(r2)
10110248:	1000683a 	jmp	r2
1011024c:	1011028c 	andi	zero,r2,17418
10110250:	1011028c 	andi	zero,r2,17418
10110254:	1011029c 	xori	zero,r2,17418
10110258:	1011029c 	xori	zero,r2,17418
1011025c:	1011029c 	xori	zero,r2,17418
10110260:	1011028c 	andi	zero,r2,17418
10110264:	10110294 	ori	zero,r2,17418
10110268:	1011029c 	xori	zero,r2,17418
1011026c:	1011028c 	andi	zero,r2,17418
10110270:	1011028c 	andi	zero,r2,17418
10110274:	1011029c 	xori	zero,r2,17418
10110278:	1011028c 	andi	zero,r2,17418
1011027c:	10110294 	ori	zero,r2,17418
10110280:	1011029c 	xori	zero,r2,17418
10110284:	1011029c 	xori	zero,r2,17418
10110288:	1011028c 	andi	zero,r2,17418
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1011028c:	00800044 	movi	r2,1
10110290:	00000306 	br	101102a0 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
10110294:	0005883a 	mov	r2,zero
10110298:	00000106 	br	101102a0 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1011029c:	0005883a 	mov	r2,zero
  }
}
101102a0:	e037883a 	mov	sp,fp
101102a4:	df000017 	ldw	fp,0(sp)
101102a8:	dec00104 	addi	sp,sp,4
101102ac:	f800283a 	ret

101102b0 <atexit>:
101102b0:	200b883a 	mov	r5,r4
101102b4:	000f883a 	mov	r7,zero
101102b8:	000d883a 	mov	r6,zero
101102bc:	0009883a 	mov	r4,zero
101102c0:	01103781 	jmpi	10110378 <__register_exitproc>

101102c4 <exit>:
101102c4:	defffe04 	addi	sp,sp,-8
101102c8:	000b883a 	mov	r5,zero
101102cc:	dc000015 	stw	r16,0(sp)
101102d0:	dfc00115 	stw	ra,4(sp)
101102d4:	2021883a 	mov	r16,r4
101102d8:	01104900 	call	10110490 <__call_exitprocs>
101102dc:	00840474 	movhi	r2,4113
101102e0:	10892804 	addi	r2,r2,9376
101102e4:	11000017 	ldw	r4,0(r2)
101102e8:	20800f17 	ldw	r2,60(r4)
101102ec:	10000126 	beq	r2,zero,101102f4 <exit+0x30>
101102f0:	103ee83a 	callr	r2
101102f4:	8009883a 	mov	r4,r16
101102f8:	01106100 	call	10110610 <_exit>

101102fc <memcmp>:
101102fc:	01c000c4 	movi	r7,3
10110300:	3980192e 	bgeu	r7,r6,10110368 <memcmp+0x6c>
10110304:	2144b03a 	or	r2,r4,r5
10110308:	11c4703a 	and	r2,r2,r7
1011030c:	10000f26 	beq	r2,zero,1011034c <memcmp+0x50>
10110310:	20800003 	ldbu	r2,0(r4)
10110314:	28c00003 	ldbu	r3,0(r5)
10110318:	10c0151e 	bne	r2,r3,10110370 <memcmp+0x74>
1011031c:	31bfff84 	addi	r6,r6,-2
10110320:	01ffffc4 	movi	r7,-1
10110324:	00000406 	br	10110338 <memcmp+0x3c>
10110328:	20800003 	ldbu	r2,0(r4)
1011032c:	28c00003 	ldbu	r3,0(r5)
10110330:	31bfffc4 	addi	r6,r6,-1
10110334:	10c00e1e 	bne	r2,r3,10110370 <memcmp+0x74>
10110338:	21000044 	addi	r4,r4,1
1011033c:	29400044 	addi	r5,r5,1
10110340:	31fff91e 	bne	r6,r7,10110328 <__alt_data_end+0xffff0328>
10110344:	0005883a 	mov	r2,zero
10110348:	f800283a 	ret
1011034c:	20c00017 	ldw	r3,0(r4)
10110350:	28800017 	ldw	r2,0(r5)
10110354:	18bfee1e 	bne	r3,r2,10110310 <__alt_data_end+0xffff0310>
10110358:	31bfff04 	addi	r6,r6,-4
1011035c:	21000104 	addi	r4,r4,4
10110360:	29400104 	addi	r5,r5,4
10110364:	39bff936 	bltu	r7,r6,1011034c <__alt_data_end+0xffff034c>
10110368:	303fe91e 	bne	r6,zero,10110310 <__alt_data_end+0xffff0310>
1011036c:	003ff506 	br	10110344 <__alt_data_end+0xffff0344>
10110370:	10c5c83a 	sub	r2,r2,r3
10110374:	f800283a 	ret

10110378 <__register_exitproc>:
10110378:	defffa04 	addi	sp,sp,-24
1011037c:	dc000315 	stw	r16,12(sp)
10110380:	04040474 	movhi	r16,4113
10110384:	84092804 	addi	r16,r16,9376
10110388:	80c00017 	ldw	r3,0(r16)
1011038c:	dc400415 	stw	r17,16(sp)
10110390:	dfc00515 	stw	ra,20(sp)
10110394:	18805217 	ldw	r2,328(r3)
10110398:	2023883a 	mov	r17,r4
1011039c:	10003726 	beq	r2,zero,1011047c <__register_exitproc+0x104>
101103a0:	10c00117 	ldw	r3,4(r2)
101103a4:	010007c4 	movi	r4,31
101103a8:	20c00e16 	blt	r4,r3,101103e4 <__register_exitproc+0x6c>
101103ac:	1a000044 	addi	r8,r3,1
101103b0:	8800221e 	bne	r17,zero,1011043c <__register_exitproc+0xc4>
101103b4:	18c00084 	addi	r3,r3,2
101103b8:	18c7883a 	add	r3,r3,r3
101103bc:	18c7883a 	add	r3,r3,r3
101103c0:	12000115 	stw	r8,4(r2)
101103c4:	10c7883a 	add	r3,r2,r3
101103c8:	19400015 	stw	r5,0(r3)
101103cc:	0005883a 	mov	r2,zero
101103d0:	dfc00517 	ldw	ra,20(sp)
101103d4:	dc400417 	ldw	r17,16(sp)
101103d8:	dc000317 	ldw	r16,12(sp)
101103dc:	dec00604 	addi	sp,sp,24
101103e0:	f800283a 	ret
101103e4:	00800034 	movhi	r2,0
101103e8:	10800004 	addi	r2,r2,0
101103ec:	10002626 	beq	r2,zero,10110488 <__register_exitproc+0x110>
101103f0:	01006404 	movi	r4,400
101103f4:	d9400015 	stw	r5,0(sp)
101103f8:	d9800115 	stw	r6,4(sp)
101103fc:	d9c00215 	stw	r7,8(sp)
10110400:	00000000 	call	10000000 <__reset-0x100000>
10110404:	d9400017 	ldw	r5,0(sp)
10110408:	d9800117 	ldw	r6,4(sp)
1011040c:	d9c00217 	ldw	r7,8(sp)
10110410:	10001d26 	beq	r2,zero,10110488 <__register_exitproc+0x110>
10110414:	81000017 	ldw	r4,0(r16)
10110418:	10000115 	stw	zero,4(r2)
1011041c:	02000044 	movi	r8,1
10110420:	22405217 	ldw	r9,328(r4)
10110424:	0007883a 	mov	r3,zero
10110428:	12400015 	stw	r9,0(r2)
1011042c:	20805215 	stw	r2,328(r4)
10110430:	10006215 	stw	zero,392(r2)
10110434:	10006315 	stw	zero,396(r2)
10110438:	883fde26 	beq	r17,zero,101103b4 <__alt_data_end+0xffff03b4>
1011043c:	18c9883a 	add	r4,r3,r3
10110440:	2109883a 	add	r4,r4,r4
10110444:	1109883a 	add	r4,r2,r4
10110448:	21802215 	stw	r6,136(r4)
1011044c:	01800044 	movi	r6,1
10110450:	12406217 	ldw	r9,392(r2)
10110454:	30cc983a 	sll	r6,r6,r3
10110458:	4992b03a 	or	r9,r9,r6
1011045c:	12406215 	stw	r9,392(r2)
10110460:	21c04215 	stw	r7,264(r4)
10110464:	01000084 	movi	r4,2
10110468:	893fd21e 	bne	r17,r4,101103b4 <__alt_data_end+0xffff03b4>
1011046c:	11006317 	ldw	r4,396(r2)
10110470:	218cb03a 	or	r6,r4,r6
10110474:	11806315 	stw	r6,396(r2)
10110478:	003fce06 	br	101103b4 <__alt_data_end+0xffff03b4>
1011047c:	18805304 	addi	r2,r3,332
10110480:	18805215 	stw	r2,328(r3)
10110484:	003fc606 	br	101103a0 <__alt_data_end+0xffff03a0>
10110488:	00bfffc4 	movi	r2,-1
1011048c:	003fd006 	br	101103d0 <__alt_data_end+0xffff03d0>

10110490 <__call_exitprocs>:
10110490:	defff504 	addi	sp,sp,-44
10110494:	df000915 	stw	fp,36(sp)
10110498:	dd400615 	stw	r21,24(sp)
1011049c:	dc800315 	stw	r18,12(sp)
101104a0:	dfc00a15 	stw	ra,40(sp)
101104a4:	ddc00815 	stw	r23,32(sp)
101104a8:	dd800715 	stw	r22,28(sp)
101104ac:	dd000515 	stw	r20,20(sp)
101104b0:	dcc00415 	stw	r19,16(sp)
101104b4:	dc400215 	stw	r17,8(sp)
101104b8:	dc000115 	stw	r16,4(sp)
101104bc:	d9000015 	stw	r4,0(sp)
101104c0:	2839883a 	mov	fp,r5
101104c4:	04800044 	movi	r18,1
101104c8:	057fffc4 	movi	r21,-1
101104cc:	00840474 	movhi	r2,4113
101104d0:	10892804 	addi	r2,r2,9376
101104d4:	12000017 	ldw	r8,0(r2)
101104d8:	45005217 	ldw	r20,328(r8)
101104dc:	44c05204 	addi	r19,r8,328
101104e0:	a0001c26 	beq	r20,zero,10110554 <__call_exitprocs+0xc4>
101104e4:	a0800117 	ldw	r2,4(r20)
101104e8:	15ffffc4 	addi	r23,r2,-1
101104ec:	b8000d16 	blt	r23,zero,10110524 <__call_exitprocs+0x94>
101104f0:	14000044 	addi	r16,r2,1
101104f4:	8421883a 	add	r16,r16,r16
101104f8:	8421883a 	add	r16,r16,r16
101104fc:	84402004 	addi	r17,r16,128
10110500:	a463883a 	add	r17,r20,r17
10110504:	a421883a 	add	r16,r20,r16
10110508:	e0001e26 	beq	fp,zero,10110584 <__call_exitprocs+0xf4>
1011050c:	80804017 	ldw	r2,256(r16)
10110510:	e0801c26 	beq	fp,r2,10110584 <__call_exitprocs+0xf4>
10110514:	bdffffc4 	addi	r23,r23,-1
10110518:	843fff04 	addi	r16,r16,-4
1011051c:	8c7fff04 	addi	r17,r17,-4
10110520:	bd7ff91e 	bne	r23,r21,10110508 <__alt_data_end+0xffff0508>
10110524:	00800034 	movhi	r2,0
10110528:	10800004 	addi	r2,r2,0
1011052c:	10000926 	beq	r2,zero,10110554 <__call_exitprocs+0xc4>
10110530:	a0800117 	ldw	r2,4(r20)
10110534:	1000301e 	bne	r2,zero,101105f8 <__call_exitprocs+0x168>
10110538:	a0800017 	ldw	r2,0(r20)
1011053c:	10003226 	beq	r2,zero,10110608 <__call_exitprocs+0x178>
10110540:	a009883a 	mov	r4,r20
10110544:	98800015 	stw	r2,0(r19)
10110548:	00000000 	call	10000000 <__reset-0x100000>
1011054c:	9d000017 	ldw	r20,0(r19)
10110550:	a03fe41e 	bne	r20,zero,101104e4 <__alt_data_end+0xffff04e4>
10110554:	dfc00a17 	ldw	ra,40(sp)
10110558:	df000917 	ldw	fp,36(sp)
1011055c:	ddc00817 	ldw	r23,32(sp)
10110560:	dd800717 	ldw	r22,28(sp)
10110564:	dd400617 	ldw	r21,24(sp)
10110568:	dd000517 	ldw	r20,20(sp)
1011056c:	dcc00417 	ldw	r19,16(sp)
10110570:	dc800317 	ldw	r18,12(sp)
10110574:	dc400217 	ldw	r17,8(sp)
10110578:	dc000117 	ldw	r16,4(sp)
1011057c:	dec00b04 	addi	sp,sp,44
10110580:	f800283a 	ret
10110584:	a0800117 	ldw	r2,4(r20)
10110588:	80c00017 	ldw	r3,0(r16)
1011058c:	10bfffc4 	addi	r2,r2,-1
10110590:	15c01426 	beq	r2,r23,101105e4 <__call_exitprocs+0x154>
10110594:	80000015 	stw	zero,0(r16)
10110598:	183fde26 	beq	r3,zero,10110514 <__alt_data_end+0xffff0514>
1011059c:	95c8983a 	sll	r4,r18,r23
101105a0:	a0806217 	ldw	r2,392(r20)
101105a4:	a5800117 	ldw	r22,4(r20)
101105a8:	2084703a 	and	r2,r4,r2
101105ac:	10000b26 	beq	r2,zero,101105dc <__call_exitprocs+0x14c>
101105b0:	a0806317 	ldw	r2,396(r20)
101105b4:	2088703a 	and	r4,r4,r2
101105b8:	20000c1e 	bne	r4,zero,101105ec <__call_exitprocs+0x15c>
101105bc:	89400017 	ldw	r5,0(r17)
101105c0:	d9000017 	ldw	r4,0(sp)
101105c4:	183ee83a 	callr	r3
101105c8:	a0800117 	ldw	r2,4(r20)
101105cc:	15bfbf1e 	bne	r2,r22,101104cc <__alt_data_end+0xffff04cc>
101105d0:	98800017 	ldw	r2,0(r19)
101105d4:	153fcf26 	beq	r2,r20,10110514 <__alt_data_end+0xffff0514>
101105d8:	003fbc06 	br	101104cc <__alt_data_end+0xffff04cc>
101105dc:	183ee83a 	callr	r3
101105e0:	003ff906 	br	101105c8 <__alt_data_end+0xffff05c8>
101105e4:	a5c00115 	stw	r23,4(r20)
101105e8:	003feb06 	br	10110598 <__alt_data_end+0xffff0598>
101105ec:	89000017 	ldw	r4,0(r17)
101105f0:	183ee83a 	callr	r3
101105f4:	003ff406 	br	101105c8 <__alt_data_end+0xffff05c8>
101105f8:	a0800017 	ldw	r2,0(r20)
101105fc:	a027883a 	mov	r19,r20
10110600:	1029883a 	mov	r20,r2
10110604:	003fb606 	br	101104e0 <__alt_data_end+0xffff04e0>
10110608:	0005883a 	mov	r2,zero
1011060c:	003ffb06 	br	101105fc <__alt_data_end+0xffff05fc>

10110610 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
10110610:	defffd04 	addi	sp,sp,-12
10110614:	df000215 	stw	fp,8(sp)
10110618:	df000204 	addi	fp,sp,8
1011061c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
10110620:	0001883a 	nop
10110624:	e0bfff17 	ldw	r2,-4(fp)
10110628:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1011062c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
10110630:	10000226 	beq	r2,zero,1011063c <_exit+0x2c>
    ALT_SIM_FAIL();
10110634:	002af070 	cmpltui	zero,zero,43969
10110638:	00000106 	br	10110640 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1011063c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
10110640:	003fff06 	br	10110640 <__alt_data_end+0xffff0640>
