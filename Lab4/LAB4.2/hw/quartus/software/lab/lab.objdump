
lab.elf:     file format elf32-littlenios2
lab.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10100230

Program Header:
    LOAD off    0x00001000 vaddr 0x10100000 paddr 0x10100000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10100020 paddr 0x10100020 align 2**12
         filesz 0x00010918 memsz 0x00010918 flags r-x
    LOAD off    0x00011938 vaddr 0x10110938 paddr 0x10112494 align 2**12
         filesz 0x00001b5c memsz 0x00001b5c flags rw-
    LOAD off    0x00013ff0 vaddr 0x10113ff0 paddr 0x10113ff0 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10100000  10100000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  10100020  10100020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010398  10100230  10100230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000370  101105c8  101105c8  000115c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b5c  10110938  10112494  00011938  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10113ff0  10113ff0  00013ff0  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  10114150  10114150  00013494  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00013494  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ed8  00000000  00000000  000134b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00024108  00000000  00000000  00014390  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000091b2  00000000  00000000  00038498  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b7f5  00000000  00000000  0004164a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000022bc  00000000  00000000  0004ce40  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003a24  00000000  00000000  0004f0fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001786c  00000000  00000000  00052b20  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0006a38c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018d0  00000000  00000000  0006a3a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006eeea  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006eeed  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006eef9  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006eefa  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006eefb  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006ef06  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006ef11  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  0006ef1c  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000034  00000000  00000000  0006ef26  2**0
                  CONTENTS, READONLY
 26 .jdi          0000512a  00000000  00000000  0006ef5a  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0027dc41  00000000  00000000  00074084  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10100000 l    d  .entry	00000000 .entry
10100020 l    d  .exceptions	00000000 .exceptions
10100230 l    d  .text	00000000 .text
101105c8 l    d  .rodata	00000000 .rodata
10110938 l    d  .rwdata	00000000 .rwdata
10113ff0 l    d  .bss	00000000 .bss
10114150 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../lab_bsp//obj/HAL/src/crt0.o
10100268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
10110672 l     O .rodata	00000010 zeroes.4404
101032d8 l     F .text	000000bc __sbprintf
10110682 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
101034e8 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
10105040 l     F .text	00000008 __fp_unlock
10105054 l     F .text	0000019c __sinit.part.1
101051f0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
10110938 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
10110d7c l     O .rwdata	00000020 lc_ctype_charset
10110d5c l     O .rwdata	00000020 lc_message_charset
10110d9c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
101106b4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
1010857c l     F .text	000000fc __sprint_r.part.0
101107d8 l     O .rodata	00000010 zeroes.4349
10109bb8 l     F .text	000000bc __sbprintf
101107e8 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
1010da24 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1010db38 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1010db64 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
1010dc58 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1010dd40 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1010de2c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
1010e008 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
1011243c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
1010e27c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1010e3b8 l     F .text	00000034 alt_dev_reg
10111384 l     O .rwdata	00001060 jtag_uart_0
101123e4 l     O .rwdata	00000028 altera_hostfs
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1010e69c l     F .text	0000020c altera_avalon_jtag_uart_irq
1010e8a8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_hostfs.c
10112440 l     O .rwdata	00000009 hcinfo.2538
1011244c l     O .rwdata	0000000a hcinfo.2551
10112458 l     O .rwdata	00000009 hcinfo.2560
10112464 l     O .rwdata	0000000a hcinfo.2573
10112470 l     O .rwdata	0000000a hcinfo.2586
1011247c l     O .rwdata	0000000a hcinfo.2612
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1010f4b0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1010f990 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1010faf0 l     F .text	0000003c alt_get_errno
1010fb2c l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
10114024 g     O .bss	00000004 alt_instruction_exception_handler
10107bc0 g     F .text	00000074 _mprec_log10
10107cac g     F .text	0000008c __any_on
1010a16c g     F .text	00000054 _isatty_r
101106c0 g     O .rodata	00000028 __mprec_tinytens
1010df44 g     F .text	0000007c alt_main
10100e74 g     F .text	000000c0 _puts_r
10114050 g     O .bss	00000100 alt_irq
1010a1c0 g     F .text	00000060 _lseek_r
10112494 g       *ABS*	00000000 __flash_rwdata_start
1010c3fc g     F .text	00000088 .hidden __eqdf2
10114150 g       *ABS*	00000000 __alt_heap_start
10100e38 g     F .text	0000003c printf
1010a3d8 g     F .text	0000009c _wcrtomb_r
1010843c g     F .text	0000005c __sseek
101053a0 g     F .text	00000010 __sinit
1010a280 g     F .text	00000140 __swbuf_r
10105e74 g     F .text	0000007c _setlocale_r
101051f8 g     F .text	00000078 __sfmoreglue
1010dfe4 g     F .text	00000024 __malloc_unlock
1010eee0 g     F .text	0000011c alt_hostfs_open
101069fc g     F .text	0000015c memmove
10105388 g     F .text	00000018 _cleanup
10106c80 g     F .text	000000a8 _Balloc
1010c484 g     F .text	000000dc .hidden __gtdf2
1010ff18 g     F .text	00000024 altera_nios2_gen2_irq_init
10100000 g     F .entry	0000000c __reset
10100020 g       *ABS*	00000000 __flash_exceptions_start
1010a110 g     F .text	0000005c _fstat_r
10114008 g     O .bss	00000004 errno
101083b8 g     F .text	00000008 __seofread
10114010 g     O .bss	00000004 alt_argv
1011a40c g       *ABS*	00000000 _gp
10111204 g     O .rwdata	00000180 alt_fd_list
1010f118 g     F .text	00000068 alt_hostfs_seek
1010ff3c g     F .text	00000090 alt_find_dev
10100cc0 g     F .text	00000148 memcpy
10105048 g     F .text	0000000c _cleanup_r
1010d83c g     F .text	000000dc .hidden __floatsidf
1010f650 g     F .text	00000080 alt_fs_reg
1010fa74 g     F .text	0000007c alt_io_redirect
1010c560 g     F .text	000000f4 .hidden __ltdf2
101105c8 g       *ABS*	00000000 __DTOR_END__
10100f34 g     F .text	00000014 puts
10110198 g     F .text	0000009c alt_exception_cause_generated_bad_addr
1010829c g     F .text	00000074 __fpclassifyd
10107b1c g     F .text	000000a4 __ratio
10109b9c g     F .text	0000001c __vfiprintf_internal
1010eaa0 g     F .text	0000021c altera_avalon_jtag_uart_read
10100e08 g     F .text	00000030 _printf_r
10100000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
10100bdc g     F .text	00000064 .hidden __udivsi3
1010dc94 g     F .text	000000ac isatty
10110710 g     O .rodata	000000c8 __mprec_tens
10105ef0 g     F .text	0000000c __locale_charset
10114004 g     O .bss	00000004 __malloc_top_pad
10112414 g     O .rwdata	00000004 __mb_cur_max
10105f20 g     F .text	0000000c _localeconv_r
101070b4 g     F .text	0000003c __i2b
10105824 g     F .text	000004c8 __sfvwrite_r
10108310 g     F .text	00000054 _sbrk_r
1010f040 g     F .text	0000006c alt_hostfs_read
1010a220 g     F .text	00000060 _read_r
10112434 g     O .rwdata	00000004 alt_max_fd
10109e04 g     F .text	000000f0 _fclose_r
10105010 g     F .text	00000030 fflush
10114000 g     O .bss	00000004 __malloc_max_sbrked_mem
1010b180 g     F .text	000008ac .hidden __adddf3
101078c4 g     F .text	0000010c __b2d
1010abbc g     F .text	000005c4 .hidden __umoddi3
1010de68 g     F .text	000000dc lseek
1011240c g     O .rwdata	00000004 _global_impure_ptr
10107d38 g     F .text	00000564 _realloc_r
10114150 g       *ABS*	00000000 __bss_end
1010f8a0 g     F .text	000000f0 alt_iic_isr_register
1010fe10 g     F .text	00000108 alt_tick
1010a5c0 g     F .text	000005fc .hidden __udivdi3
1010a06c g     F .text	00000024 _fputwc_r
101106e8 g     O .rodata	00000028 __mprec_bigtens
10106e98 g     F .text	00000104 __s2b
1010d918 g     F .text	000000a8 .hidden __floatunsidf
10107604 g     F .text	00000060 __mcmp
101053c0 g     F .text	00000018 __fp_lock_all
1010f854 g     F .text	0000004c alt_ic_irq_enabled
1010fd74 g     F .text	0000009c alt_alarm_stop
10114018 g     O .bss	00000004 alt_irq_active
1010effc g     F .text	00000044 alt_hostfs_close
101000fc g     F .exceptions	000000d4 alt_irq_handler
101111dc g     O .rwdata	00000028 alt_dev_null
1010f490 g     F .text	00000020 alt_dcache_flush_all
10106f9c g     F .text	00000068 __hi0bits
1010d7bc g     F .text	00000080 .hidden __fixdfsi
10112494 g       *ABS*	00000000 __ram_rwdata_end
1011242c g     O .rwdata	00000008 alt_dev_list
1010e2b8 g     F .text	00000100 write
10110938 g       *ABS*	00000000 __ram_rodata_end
1010dba0 g     F .text	000000b8 fstat
1010c560 g     F .text	000000f4 .hidden __ledf2
101002f8 g     F .text	00000064 lcd_flag_set
1010737c g     F .text	00000140 __pow5mult
10108690 g     F .text	0000150c ___vfiprintf_internal_r
10113ff8 g     O .bss	00000004 __nlocale_changed
10100c40 g     F .text	00000058 .hidden __umodsi3
10114150 g       *ABS*	00000000 end
1010e5dc g     F .text	000000c0 altera_avalon_jtag_uart_init
101001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
101105c8 g       *ABS*	00000000 __CTOR_LIST__
10120000 g       *ABS*	00000000 __alt_stack_pointer
1010d9c0 g     F .text	00000064 .hidden __clzsi2
1010ecbc g     F .text	00000224 altera_avalon_jtag_uart_write
101053b0 g     F .text	00000004 __sfp_lock_acquire
10106918 g     F .text	000000e4 memchr
10100fe0 g     F .text	000022dc ___vfprintf_internal_r
10105514 g     F .text	00000310 _free_r
10105efc g     F .text	00000010 __locale_mb_cur_max
10110414 g     F .text	00000180 __call_exitprocs
10113ff4 g     O .bss	00000004 __mlocale_changed
10112418 g     O .rwdata	00000004 __malloc_sbrk_base
10100230 g     F .text	0000003c _start
1011401c g     O .bss	00000004 _alt_tick_rate
101074bc g     F .text	00000148 __lshift
10114020 g     O .bss	00000004 _alt_nticks
1010e044 g     F .text	00000104 read
1010e424 g     F .text	00000054 alt_sys_init
101102fc g     F .text	00000118 __register_exitproc
101070f0 g     F .text	0000028c __multiply
1010e948 g     F .text	00000068 altera_avalon_jtag_uart_close
10100c98 g     F .text	00000028 .hidden __mulsi3
10110938 g       *ABS*	00000000 __ram_rwdata_start
101105c8 g       *ABS*	00000000 __ram_rodata_start
10114028 g     O .bss	00000028 __malloc_current_mallinfo
101079d0 g     F .text	0000014c __d2b
1010e478 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
101100d4 g     F .text	000000c4 alt_get_fd
10109cd4 g     F .text	00000054 _close_r
10110280 g     F .text	0000007c memcmp
1010e538 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
10114150 g       *ABS*	00000000 __alt_stack_base
1010e588 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10103394 g     F .text	00000154 __swsetup_r
1010ba2c g     F .text	000009d0 .hidden __divdf3
10105270 g     F .text	00000118 __sfp
10107c34 g     F .text	00000078 __copybits
10110dd4 g     O .rwdata	00000408 __malloc_av_
101053bc g     F .text	00000004 __sinit_lock_release
1010c654 g     F .text	0000086c .hidden __muldf3
10108364 g     F .text	00000054 __sread
1010ffcc g     F .text	00000108 alt_find_file
1010f4ec g     F .text	000000a4 alt_dev_llist_insert
1010dfc0 g     F .text	00000024 __malloc_lock
1010e1cc g     F .text	000000b0 sbrk
10104fb4 g     F .text	0000005c _fflush_r
10109d28 g     F .text	000000dc _calloc_r
101003ec g     F .text	000000c0 send_command
10113ff0 g       *ABS*	00000000 __bss_start
10106b58 g     F .text	00000128 memset
10100a7c g     F .text	00000068 main
10114014 g     O .bss	00000004 alt_envp
10113ffc g     O .bss	00000004 __malloc_max_total_mem
1010e4d8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
1010a3c0 g     F .text	00000018 __swbuf
10108498 g     F .text	00000008 __sclose
10120000 g       *ABS*	00000000 __alt_heap_limit
10109ef4 g     F .text	00000014 fclose
10103710 g     F .text	00001688 _dtoa_r
1010610c g     F .text	0000080c _malloc_r
1010a534 g     F .text	00000030 __ascii_wctomb
10112438 g     O .rwdata	00000004 alt_errno
10105cec g     F .text	000000c4 _fwalk
10100ae4 g     F .text	00000084 .hidden __divsi3
101053f0 g     F .text	00000124 _malloc_trim_r
101105c8 g       *ABS*	00000000 __CTOR_END__
101084a0 g     F .text	000000dc strcmp
101105c8 g       *ABS*	00000000 __flash_rodata_start
101105c8 g       *ABS*	00000000 __DTOR_LIST__
1010026c g     F .text	00000048 delay
1010c3fc g     F .text	00000088 .hidden __nedf2
1010e3ec g     F .text	00000038 alt_irq_init
1010e148 g     F .text	00000084 alt_release_fd
101107f8 g     O .rodata	00000100 .hidden __clz_tab
10113ff0 g     O .bss	00000004 _PathLocale
101004ac g     F .text	00000044 start_lcd
10110234 g     F .text	00000014 atexit
10109c74 g     F .text	00000060 _write_r
10105f2c g     F .text	00000018 setlocale
10100990 g     F .text	000000ec init_image
10112410 g     O .rwdata	00000004 _impure_ptr
1011400c g     O .bss	00000004 alt_argc
10104d98 g     F .text	0000021c __sflush_r
1010f5f0 g     F .text	00000060 _do_dtors
10105f18 g     F .text	00000008 __locale_cjk_lang
10100020 g       .exceptions	00000000 alt_irq_entry
1010035c g     F .text	00000090 lcd_reset
10107860 g     F .text	00000064 __ulp
101053d8 g     F .text	00000018 __fp_unlock_all
10112424 g     O .rwdata	00000008 alt_fs_list
1010f0ac g     F .text	0000006c alt_hostfs_write
10100020 g       *ABS*	00000000 __ram_exceptions_start
10105f44 g     F .text	0000000c localeconv
101002b4 g     F .text	00000044 small_delay
1010f6f0 g     F .text	00000050 alt_ic_isr_register
10112494 g       *ABS*	00000000 _edata
10114150 g       *ABS*	00000000 _end
101008ec g     F .text	000000a4 configure_image
10109f08 g     F .text	00000164 __fputwc
10100230 g       *ABS*	00000000 __ram_exceptions_end
1010e9b0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
1010f7c8 g     F .text	0000008c alt_ic_irq_disable
101083c0 g     F .text	0000007c __swrite
1011241c g     O .rwdata	00000004 __malloc_trim_threshold
10105f0c g     F .text	0000000c __locale_msgcharset
10110248 g     F .text	00000038 exit
10105db0 g     F .text	000000c4 _fwalk_reent
10107664 g     F .text	000001fc __mdiff
10100b68 g     F .text	00000074 .hidden __modsi3
101004f0 g     F .text	000003fc init_lcd
10120000 g       *ABS*	00000000 __alt_data_end
10100020 g     F .exceptions	00000000 alt_exception
101053b4 g     F .text	00000004 __sfp_lock_release
10110594 g     F .text	00000034 _exit
1010f364 g     F .text	0000012c alt_alarm_start
10105f50 g     F .text	000001bc __smakebuf_r
10100f48 g     F .text	00000098 strlen
1010fc18 g     F .text	0000015c open
1010c484 g     F .text	000000dc .hidden __gedf2
10112420 g     O .rwdata	00000004 __wctomb
10108678 g     F .text	00000018 __sprint_r
1010f6d0 g     F .text	00000020 alt_icache_flush_all
10112488 g     O .rwdata	00000004 alt_priority_mask
1010f740 g     F .text	00000088 alt_ic_irq_enable
101032bc g     F .text	0000001c __vfprintf_internal
1010a564 g     F .text	0000005c _wctomb_r
1010cec0 g     F .text	000008fc .hidden __subdf3
10107004 g     F .text	000000b0 __lo0bits
1011248c g     O .rwdata	00000008 alt_alarm_list
1010f590 g     F .text	00000060 _do_ctors
1010a474 g     F .text	000000c0 wcrtomb
1010da60 g     F .text	000000d8 close
1010dda8 g     F .text	00000084 alt_load
1010a090 g     F .text	00000080 fputwc
101053b8 g     F .text	00000004 __sinit_lock_acquire
10106d50 g     F .text	00000148 __multadd
10106d28 g     F .text	00000028 _Bfree
1010f180 g     F .text	000001e4 alt_hostfs_fstat



Disassembly of section .entry:

10100000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10100000:	00440434 	movhi	at,4112
    ori r1, r1, %lo(_start)
10100004:	08408c14 	ori	at,at,560
    jmp r1
10100008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

10100020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10100020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10100024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10100028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1010002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10100030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10100034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10100038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1010003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10100040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10100044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10100048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1010004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10100050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10100054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10100058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1010005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10100060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10100064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10100068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1010006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10100070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10100074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10100078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1010007c:	10000326 	beq	r2,zero,1010008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10100080:	20000226 	beq	r4,zero,1010008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10100084:	01000fc0 	call	101000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10100088:	00000706 	br	101000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1010008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10100090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10100094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10100098:	01001d00 	call	101001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1010009c:	1000021e 	bne	r2,zero,101000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
101000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
101000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
101000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
101000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
101000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
101000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
101000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
101000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
101000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
101000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
101000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
101000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
101000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
101000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
101000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
101000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
101000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
101000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
101000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
101000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
101000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
101000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
101000f8:	ef80083a 	eret

101000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
101000fc:	defff904 	addi	sp,sp,-28
10100100:	dfc00615 	stw	ra,24(sp)
10100104:	df000515 	stw	fp,20(sp)
10100108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1010010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10100110:	0005313a 	rdctl	r2,ipending
10100114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10100118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1010011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10100120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10100124:	00800044 	movi	r2,1
10100128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1010012c:	e0fffb17 	ldw	r3,-20(fp)
10100130:	e0bffc17 	ldw	r2,-16(fp)
10100134:	1884703a 	and	r2,r3,r2
10100138:	10001426 	beq	r2,zero,1010018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1010013c:	00840474 	movhi	r2,4113
10100140:	10901404 	addi	r2,r2,16464
10100144:	e0fffd17 	ldw	r3,-12(fp)
10100148:	180690fa 	slli	r3,r3,3
1010014c:	10c5883a 	add	r2,r2,r3
10100150:	10c00017 	ldw	r3,0(r2)
10100154:	00840474 	movhi	r2,4113
10100158:	10901404 	addi	r2,r2,16464
1010015c:	e13ffd17 	ldw	r4,-12(fp)
10100160:	200890fa 	slli	r4,r4,3
10100164:	1105883a 	add	r2,r2,r4
10100168:	10800104 	addi	r2,r2,4
1010016c:	10800017 	ldw	r2,0(r2)
10100170:	1009883a 	mov	r4,r2
10100174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10100178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1010017c:	0005313a 	rdctl	r2,ipending
10100180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10100184:	e0bfff17 	ldw	r2,-4(fp)
10100188:	00000706 	br	101001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1010018c:	e0bffc17 	ldw	r2,-16(fp)
10100190:	1085883a 	add	r2,r2,r2
10100194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10100198:	e0bffd17 	ldw	r2,-12(fp)
1010019c:	10800044 	addi	r2,r2,1
101001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
101001a4:	003fe106 	br	1010012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
101001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
101001ac:	e0bffb17 	ldw	r2,-20(fp)
101001b0:	103fdb1e 	bne	r2,zero,10100120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
101001b4:	0001883a 	nop
}
101001b8:	0001883a 	nop
101001bc:	e037883a 	mov	sp,fp
101001c0:	dfc00117 	ldw	ra,4(sp)
101001c4:	df000017 	ldw	fp,0(sp)
101001c8:	dec00204 	addi	sp,sp,8
101001cc:	f800283a 	ret

101001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
101001d0:	defffb04 	addi	sp,sp,-20
101001d4:	dfc00415 	stw	ra,16(sp)
101001d8:	df000315 	stw	fp,12(sp)
101001dc:	df000304 	addi	fp,sp,12
101001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
101001e4:	00bfffc4 	movi	r2,-1
101001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
101001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
101001f0:	d0a70617 	ldw	r2,-25576(gp)
101001f4:	10000726 	beq	r2,zero,10100214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
101001f8:	d0a70617 	ldw	r2,-25576(gp)
101001fc:	e0fffd17 	ldw	r3,-12(fp)
10100200:	e1bffe17 	ldw	r6,-8(fp)
10100204:	e17fff17 	ldw	r5,-4(fp)
10100208:	1809883a 	mov	r4,r3
1010020c:	103ee83a 	callr	r2
10100210:	00000206 	br	1010021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10100214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10100218:	0005883a 	mov	r2,zero
}
1010021c:	e037883a 	mov	sp,fp
10100220:	dfc00117 	ldw	ra,4(sp)
10100224:	df000017 	ldw	fp,0(sp)
10100228:	dec00204 	addi	sp,sp,8
1010022c:	f800283a 	ret

Disassembly of section .text:

10100230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10100230:	06c404b4 	movhi	sp,4114
    ori sp, sp, %lo(__alt_stack_pointer)
10100234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10100238:	06840474 	movhi	gp,4113
    ori gp, gp, %lo(_gp)
1010023c:	d6a90314 	ori	gp,gp,41996
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10100240:	00840474 	movhi	r2,4113
    ori r2, r2, %lo(__bss_start)
10100244:	108ffc14 	ori	r2,r2,16368

    movhi r3, %hi(__bss_end)
10100248:	00c40474 	movhi	r3,4113
    ori r3, r3, %lo(__bss_end)
1010024c:	18d05414 	ori	r3,r3,16720

    beq r2, r3, 1f
10100250:	10c00326 	beq	r2,r3,10100260 <_start+0x30>

0:
    stw zero, (r2)
10100254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10100258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
1010025c:	10fffd36 	bltu	r2,r3,10100254 <__alt_data_end+0xfffe0254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10100260:	010dda80 	call	1010dda8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10100264:	010df440 	call	1010df44 <alt_main>

10100268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10100268:	003fff06 	br	10100268 <__alt_data_end+0xfffe0268>

1010026c <delay>:
#define LCD_REG_NB_PARAM				0x06
#define LCD_REG_PARAM(index)+ index



void delay(){
1010026c:	defffe04 	addi	sp,sp,-8
10100270:	df000115 	stw	fp,4(sp)
10100274:	df000104 	addi	fp,sp,4
	uint32_t c;
	for (c = 1; c <= 3000000; c++){}
10100278:	00800044 	movi	r2,1
1010027c:	e0bfff15 	stw	r2,-4(fp)
10100280:	00000306 	br	10100290 <delay+0x24>
10100284:	e0bfff17 	ldw	r2,-4(fp)
10100288:	10800044 	addi	r2,r2,1
1010028c:	e0bfff15 	stw	r2,-4(fp)
10100290:	e0ffff17 	ldw	r3,-4(fp)
10100294:	00800bb4 	movhi	r2,46
10100298:	10b1b004 	addi	r2,r2,-14656
1010029c:	10fff92e 	bgeu	r2,r3,10100284 <__alt_data_end+0xfffe0284>
}
101002a0:	0001883a 	nop
101002a4:	e037883a 	mov	sp,fp
101002a8:	df000017 	ldw	fp,0(sp)
101002ac:	dec00104 	addi	sp,sp,4
101002b0:	f800283a 	ret

101002b4 <small_delay>:

void small_delay(){
101002b4:	defffe04 	addi	sp,sp,-8
101002b8:	df000115 	stw	fp,4(sp)
101002bc:	df000104 	addi	fp,sp,4
	uint32_t c;
	for (c = 1; c <= 1000; c++){}
101002c0:	00800044 	movi	r2,1
101002c4:	e0bfff15 	stw	r2,-4(fp)
101002c8:	00000306 	br	101002d8 <small_delay+0x24>
101002cc:	e0bfff17 	ldw	r2,-4(fp)
101002d0:	10800044 	addi	r2,r2,1
101002d4:	e0bfff15 	stw	r2,-4(fp)
101002d8:	e0bfff17 	ldw	r2,-4(fp)
101002dc:	1080fa70 	cmpltui	r2,r2,1001
101002e0:	103ffa1e 	bne	r2,zero,101002cc <__alt_data_end+0xfffe02cc>
}
101002e4:	0001883a 	nop
101002e8:	e037883a 	mov	sp,fp
101002ec:	df000017 	ldw	fp,0(sp)
101002f0:	dec00104 	addi	sp,sp,4
101002f4:	f800283a 	ret

101002f8 <lcd_flag_set>:


void lcd_flag_set (uint16_t flag){
101002f8:	defffc04 	addi	sp,sp,-16
101002fc:	dfc00315 	stw	ra,12(sp)
10100300:	df000215 	stw	fp,8(sp)
10100304:	df000204 	addi	fp,sp,8
10100308:	2005883a 	mov	r2,r4
1010030c:	e0bfff0d 	sth	r2,-4(fp)
	uint16_t reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
10100310:	008400b4 	movhi	r2,4098
10100314:	10800104 	addi	r2,r2,4
10100318:	1080002b 	ldhuio	r2,0(r2)
1010031c:	10bfffcc 	andi	r2,r2,65535
10100320:	e0bffe0d 	sth	r2,-8(fp)
	delay();
10100324:	010026c0 	call	1010026c <delay>
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS, (reg_flag_val | flag));
10100328:	e0fffe0b 	ldhu	r3,-8(fp)
1010032c:	e0bfff0b 	ldhu	r2,-4(fp)
10100330:	1884b03a 	or	r2,r3,r2
10100334:	10ffffcc 	andi	r3,r2,65535
10100338:	008400b4 	movhi	r2,4098
1010033c:	10800104 	addi	r2,r2,4
10100340:	10c0002d 	sthio	r3,0(r2)
}
10100344:	0001883a 	nop
10100348:	e037883a 	mov	sp,fp
1010034c:	dfc00117 	ldw	ra,4(sp)
10100350:	df000017 	ldw	fp,0(sp)
10100354:	dec00204 	addi	sp,sp,8
10100358:	f800283a 	ret

1010035c <lcd_reset>:

void lcd_reset(){
1010035c:	defffd04 	addi	sp,sp,-12
10100360:	dfc00215 	stw	ra,8(sp)
10100364:	df000115 	stw	fp,4(sp)
10100368:	df000104 	addi	fp,sp,4
	lcd_flag_set(0x04);
1010036c:	01000104 	movi	r4,4
10100370:	01002f80 	call	101002f8 <lcd_flag_set>

	delay();
10100374:	010026c0 	call	1010026c <delay>

	uint16_t reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
10100378:	008400b4 	movhi	r2,4098
1010037c:	10800104 	addi	r2,r2,4
10100380:	1080002b 	ldhuio	r2,0(r2)
10100384:	10bfffcc 	andi	r2,r2,65535
10100388:	e0bfff0d 	sth	r2,-4(fp)

	printf("%lu  \n", (unsigned long)reg_flag_val);
1010038c:	e0bfff0b 	ldhu	r2,-4(fp)
10100390:	100b883a 	mov	r5,r2
10100394:	01040474 	movhi	r4,4113
10100398:	21017204 	addi	r4,r4,1480
1010039c:	0100e380 	call	10100e38 <printf>

	delay();
101003a0:	010026c0 	call	1010026c <delay>

	while( reg_flag_val & 0x04){
101003a4:	00000506 	br	101003bc <lcd_reset+0x60>
		reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
101003a8:	008400b4 	movhi	r2,4098
101003ac:	10800104 	addi	r2,r2,4
101003b0:	1080002b 	ldhuio	r2,0(r2)
101003b4:	10bfffcc 	andi	r2,r2,65535
101003b8:	e0bfff0d 	sth	r2,-4(fp)

	printf("%lu  \n", (unsigned long)reg_flag_val);

	delay();

	while( reg_flag_val & 0x04){
101003bc:	e0bfff0b 	ldhu	r2,-4(fp)
101003c0:	1080010c 	andi	r2,r2,4
101003c4:	103ff81e 	bne	r2,zero,101003a8 <__alt_data_end+0xfffe03a8>
		reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	}
	printf("reset finished \n");
101003c8:	01040474 	movhi	r4,4113
101003cc:	21017404 	addi	r4,r4,1488
101003d0:	0100f340 	call	10100f34 <puts>

}
101003d4:	0001883a 	nop
101003d8:	e037883a 	mov	sp,fp
101003dc:	dfc00117 	ldw	ra,4(sp)
101003e0:	df000017 	ldw	fp,0(sp)
101003e4:	dec00204 	addi	sp,sp,8
101003e8:	f800283a 	ret

101003ec <send_command>:

void send_command(uint16_t cmd, uint16_t n, uint16_t* params)
{
101003ec:	defffa04 	addi	sp,sp,-24
101003f0:	dfc00515 	stw	ra,20(sp)
101003f4:	df000415 	stw	fp,16(sp)
101003f8:	df000404 	addi	fp,sp,16
101003fc:	2007883a 	mov	r3,r4
10100400:	2805883a 	mov	r2,r5
10100404:	e1bfff15 	stw	r6,-4(fp)
10100408:	e0fffd0d 	sth	r3,-12(fp)
1010040c:	e0bffe0d 	sth	r2,-8(fp)
	uint16_t index = 0;
10100410:	e03ffc0d 	sth	zero,-16(fp)

	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_CMD_REG, cmd);
10100414:	e0fffd0b 	ldhu	r3,-12(fp)
10100418:	008400b4 	movhi	r2,4098
1010041c:	10800144 	addi	r2,r2,5
10100420:	10c0002d 	sthio	r3,0(r2)
	small_delay();
10100424:	01002b40 	call	101002b4 <small_delay>
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_NB_PARAM, n);
10100428:	e0fffe0b 	ldhu	r3,-8(fp)
1010042c:	008400b4 	movhi	r2,4098
10100430:	10800184 	addi	r2,r2,6
10100434:	10c0002d 	sthio	r3,0(r2)


	while(index < n){
10100438:	00000f06 	br	10100478 <send_command+0x8c>
		IOWR_16DIRECT(LCD_0_BASE, LCD_REG_PARAM(index), params[index]);
1010043c:	e0fffc0b 	ldhu	r3,-16(fp)
10100440:	008400b4 	movhi	r2,4098
10100444:	1887883a 	add	r3,r3,r2
10100448:	e0bffc0b 	ldhu	r2,-16(fp)
1010044c:	1085883a 	add	r2,r2,r2
10100450:	1009883a 	mov	r4,r2
10100454:	e0bfff17 	ldw	r2,-4(fp)
10100458:	1105883a 	add	r2,r2,r4
1010045c:	1080000b 	ldhu	r2,0(r2)
10100460:	10bfffcc 	andi	r2,r2,65535
10100464:	1880002d 	sthio	r2,0(r3)
		small_delay();
10100468:	01002b40 	call	101002b4 <small_delay>
		++index;
1010046c:	e0bffc0b 	ldhu	r2,-16(fp)
10100470:	10800044 	addi	r2,r2,1
10100474:	e0bffc0d 	sth	r2,-16(fp)
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_CMD_REG, cmd);
	small_delay();
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_NB_PARAM, n);


	while(index < n){
10100478:	e0fffc0b 	ldhu	r3,-16(fp)
1010047c:	e0bffe0b 	ldhu	r2,-8(fp)
10100480:	18bfee36 	bltu	r3,r2,1010043c <__alt_data_end+0xfffe043c>
		IOWR_16DIRECT(LCD_0_BASE, LCD_REG_PARAM(index), params[index]);
		small_delay();
		++index;
	}

	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS, 0x2);
10100484:	00c00084 	movi	r3,2
10100488:	008400b4 	movhi	r2,4098
1010048c:	10800104 	addi	r2,r2,4
10100490:	10c0002d 	sthio	r3,0(r2)
	//uint16_t reg_flags = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	/*while(reg_flags & 0x2){
		reg_flags = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	}*/
	//printf("command sent \n", (unsigned long)reg_flags,"\n");
}
10100494:	0001883a 	nop
10100498:	e037883a 	mov	sp,fp
1010049c:	dfc00117 	ldw	ra,4(sp)
101004a0:	df000017 	ldw	fp,0(sp)
101004a4:	dec00204 	addi	sp,sp,8
101004a8:	f800283a 	ret

101004ac <start_lcd>:

void start_lcd(){
101004ac:	defffd04 	addi	sp,sp,-12
101004b0:	dfc00215 	stw	ra,8(sp)
101004b4:	df000115 	stw	fp,4(sp)
101004b8:	df000104 	addi	fp,sp,4
	lcd_flag_set(0x01);
101004bc:	01000044 	movi	r4,1
101004c0:	01002f80 	call	101002f8 <lcd_flag_set>
	uint16_t reg_flags_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
101004c4:	008400b4 	movhi	r2,4098
101004c8:	10800104 	addi	r2,r2,4
101004cc:	1080002b 	ldhuio	r2,0(r2)
101004d0:	10bfffcc 	andi	r2,r2,65535
101004d4:	e0bfff0d 	sth	r2,-4(fp)

	/*while(reg_flags_val & 0x1){
		reg_flags_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	}*/
}
101004d8:	0001883a 	nop
101004dc:	e037883a 	mov	sp,fp
101004e0:	dfc00117 	ldw	ra,4(sp)
101004e4:	df000017 	ldw	fp,0(sp)
101004e8:	dec00204 	addi	sp,sp,8
101004ec:	f800283a 	ret

101004f0 <init_lcd>:
void init_lcd(){
101004f0:	deffd704 	addi	sp,sp,-164
101004f4:	dfc02815 	stw	ra,160(sp)
101004f8:	df002715 	stw	fp,156(sp)
101004fc:	df002704 	addi	fp,sp,156
	send_command(0x11, 0, (uint16_t []){ 0x09, 0x0a});
10100500:	00800244 	movi	r2,9
10100504:	e0bfff0d 	sth	r2,-4(fp)
10100508:	00800284 	movi	r2,10
1010050c:	e0bfff8d 	sth	r2,-2(fp)
10100510:	e0bfff04 	addi	r2,fp,-4
10100514:	100d883a 	mov	r6,r2
10100518:	000b883a 	mov	r5,zero
1010051c:	01000444 	movi	r4,17
10100520:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100524:	01002b40 	call	101002b4 <small_delay>
	send_command(0xcf, 3, (uint16_t []){ 0x0, 0x81, 0xc0});
10100528:	e03ffd8d 	sth	zero,-10(fp)
1010052c:	00802044 	movi	r2,129
10100530:	e0bffe0d 	sth	r2,-8(fp)
10100534:	00803004 	movi	r2,192
10100538:	e0bffe8d 	sth	r2,-6(fp)
1010053c:	e0bffd84 	addi	r2,fp,-10
10100540:	100d883a 	mov	r6,r2
10100544:	014000c4 	movi	r5,3
10100548:	010033c4 	movi	r4,207
1010054c:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100550:	01002b40 	call	101002b4 <small_delay>
	send_command(0xed, 4, (uint16_t []){ 0x64, 0x03, 0x12, 0x81});
10100554:	00801904 	movi	r2,100
10100558:	e0bffb8d 	sth	r2,-18(fp)
1010055c:	008000c4 	movi	r2,3
10100560:	e0bffc0d 	sth	r2,-16(fp)
10100564:	00800484 	movi	r2,18
10100568:	e0bffc8d 	sth	r2,-14(fp)
1010056c:	00802044 	movi	r2,129
10100570:	e0bffd0d 	sth	r2,-12(fp)
10100574:	e0bffb84 	addi	r2,fp,-18
10100578:	100d883a 	mov	r6,r2
1010057c:	01400104 	movi	r5,4
10100580:	01003b44 	movi	r4,237
10100584:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100588:	01002b40 	call	101002b4 <small_delay>
	send_command(0xe8, 3, (uint16_t []){ 0x85, 0x01, 0x0798});
1010058c:	00802144 	movi	r2,133
10100590:	e0bffa0d 	sth	r2,-24(fp)
10100594:	00800044 	movi	r2,1
10100598:	e0bffa8d 	sth	r2,-22(fp)
1010059c:	0081e604 	movi	r2,1944
101005a0:	e0bffb0d 	sth	r2,-20(fp)
101005a4:	e0bffa04 	addi	r2,fp,-24
101005a8:	100d883a 	mov	r6,r2
101005ac:	014000c4 	movi	r5,3
101005b0:	01003a04 	movi	r4,232
101005b4:	01003ec0 	call	101003ec <send_command>
	small_delay();
101005b8:	01002b40 	call	101002b4 <small_delay>
	send_command(0xcb, 5, (uint16_t []){ 0x39, 0x2c, 0x00, 0x34, 0x02});
101005bc:	00800e44 	movi	r2,57
101005c0:	e0bff78d 	sth	r2,-34(fp)
101005c4:	00800b04 	movi	r2,44
101005c8:	e0bff80d 	sth	r2,-32(fp)
101005cc:	e03ff88d 	sth	zero,-30(fp)
101005d0:	00800d04 	movi	r2,52
101005d4:	e0bff90d 	sth	r2,-28(fp)
101005d8:	00800084 	movi	r2,2
101005dc:	e0bff98d 	sth	r2,-26(fp)
101005e0:	e0bff784 	addi	r2,fp,-34
101005e4:	100d883a 	mov	r6,r2
101005e8:	01400144 	movi	r5,5
101005ec:	010032c4 	movi	r4,203
101005f0:	01003ec0 	call	101003ec <send_command>
	small_delay();
101005f4:	01002b40 	call	101002b4 <small_delay>
	send_command(0xf7, 1, (uint16_t []){ 0x20});
101005f8:	00800804 	movi	r2,32
101005fc:	e0bff70d 	sth	r2,-36(fp)
10100600:	e0bff704 	addi	r2,fp,-36
10100604:	100d883a 	mov	r6,r2
10100608:	01400044 	movi	r5,1
1010060c:	01003dc4 	movi	r4,247
10100610:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100614:	01002b40 	call	101002b4 <small_delay>
	send_command(0xea, 2, (uint16_t []){ 0x00, 0x00});
10100618:	e03ff60d 	sth	zero,-40(fp)
1010061c:	e03ff68d 	sth	zero,-38(fp)
10100620:	e0bff604 	addi	r2,fp,-40
10100624:	100d883a 	mov	r6,r2
10100628:	01400084 	movi	r5,2
1010062c:	01003a84 	movi	r4,234
10100630:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100634:	01002b40 	call	101002b4 <small_delay>
	send_command(0xb1, 2, (uint16_t []){ 0x00, 0x1b});
10100638:	e03ff50d 	sth	zero,-44(fp)
1010063c:	008006c4 	movi	r2,27
10100640:	e0bff58d 	sth	r2,-42(fp)
10100644:	e0bff504 	addi	r2,fp,-44
10100648:	100d883a 	mov	r6,r2
1010064c:	01400084 	movi	r5,2
10100650:	01002c44 	movi	r4,177
10100654:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100658:	01002b40 	call	101002b4 <small_delay>
	send_command(0xb6, 2, (uint16_t []){ 0x0a, 0xa2});
1010065c:	00800284 	movi	r2,10
10100660:	e0bff40d 	sth	r2,-48(fp)
10100664:	00802884 	movi	r2,162
10100668:	e0bff48d 	sth	r2,-46(fp)
1010066c:	e0bff404 	addi	r2,fp,-48
10100670:	100d883a 	mov	r6,r2
10100674:	01400084 	movi	r5,2
10100678:	01002d84 	movi	r4,182
1010067c:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100680:	01002b40 	call	101002b4 <small_delay>
	send_command(0xc0, 1, (uint16_t []){ 0x05});
10100684:	00800144 	movi	r2,5
10100688:	e0bff38d 	sth	r2,-50(fp)
1010068c:	e0bff384 	addi	r2,fp,-50
10100690:	100d883a 	mov	r6,r2
10100694:	01400044 	movi	r5,1
10100698:	01003004 	movi	r4,192
1010069c:	01003ec0 	call	101003ec <send_command>
	small_delay();
101006a0:	01002b40 	call	101002b4 <small_delay>
	send_command(0xc1, 1, (uint16_t []){ 0x11});
101006a4:	00800444 	movi	r2,17
101006a8:	e0bff30d 	sth	r2,-52(fp)
101006ac:	e0bff304 	addi	r2,fp,-52
101006b0:	100d883a 	mov	r6,r2
101006b4:	01400044 	movi	r5,1
101006b8:	01003044 	movi	r4,193
101006bc:	01003ec0 	call	101003ec <send_command>
	small_delay();
101006c0:	01002b40 	call	101002b4 <small_delay>
	send_command(0xc5, 2, (uint16_t []){ 0x45, 0x45});
101006c4:	00801144 	movi	r2,69
101006c8:	e0bff20d 	sth	r2,-56(fp)
101006cc:	00801144 	movi	r2,69
101006d0:	e0bff28d 	sth	r2,-54(fp)
101006d4:	e0bff204 	addi	r2,fp,-56
101006d8:	100d883a 	mov	r6,r2
101006dc:	01400084 	movi	r5,2
101006e0:	01003144 	movi	r4,197
101006e4:	01003ec0 	call	101003ec <send_command>
	small_delay();
101006e8:	01002b40 	call	101002b4 <small_delay>
	send_command(0xc7, 1, (uint16_t []){ 0xa2});
101006ec:	00802884 	movi	r2,162
101006f0:	e0bff18d 	sth	r2,-58(fp)
101006f4:	e0bff184 	addi	r2,fp,-58
101006f8:	100d883a 	mov	r6,r2
101006fc:	01400044 	movi	r5,1
10100700:	010031c4 	movi	r4,199
10100704:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100708:	01002b40 	call	101002b4 <small_delay>
	send_command(0x36, 1, (uint16_t []){ 0x08}); //BGR (originally rgb with 0x48)
1010070c:	00800204 	movi	r2,8
10100710:	e0bff10d 	sth	r2,-60(fp)
10100714:	e0bff104 	addi	r2,fp,-60
10100718:	100d883a 	mov	r6,r2
1010071c:	01400044 	movi	r5,1
10100720:	01000d84 	movi	r4,54
10100724:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100728:	01002b40 	call	101002b4 <small_delay>
	send_command(0xf2, 1, (uint16_t []){ 0x00});
1010072c:	e03ff08d 	sth	zero,-62(fp)
10100730:	e0bff084 	addi	r2,fp,-62
10100734:	100d883a 	mov	r6,r2
10100738:	01400044 	movi	r5,1
1010073c:	01003c84 	movi	r4,242
10100740:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100744:	01002b40 	call	101002b4 <small_delay>
	send_command(0x26, 1, (uint16_t []){ 0x01});
10100748:	00800044 	movi	r2,1
1010074c:	e0bff00d 	sth	r2,-64(fp)
10100750:	e0bff004 	addi	r2,fp,-64
10100754:	100d883a 	mov	r6,r2
10100758:	01400044 	movi	r5,1
1010075c:	01000984 	movi	r4,38
10100760:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100764:	01002b40 	call	101002b4 <small_delay>
	send_command(0xe0, 15, (uint16_t []){ 0xf, 0x26, 0x24, 0xb, 0xe, 0x8, 0x4b, 0xa8, 0x3b, 0x0a, 0x14, 0x06, 0x10, 0x09, 0x00});
10100768:	00840474 	movhi	r2,4113
1010076c:	10817804 	addi	r2,r2,1504
10100770:	e0ffe884 	addi	r3,fp,-94
10100774:	1009883a 	mov	r4,r2
10100778:	00800784 	movi	r2,30
1010077c:	100d883a 	mov	r6,r2
10100780:	200b883a 	mov	r5,r4
10100784:	1809883a 	mov	r4,r3
10100788:	0100cc00 	call	10100cc0 <memcpy>
1010078c:	e0bfe884 	addi	r2,fp,-94
10100790:	100d883a 	mov	r6,r2
10100794:	014003c4 	movi	r5,15
10100798:	01003804 	movi	r4,224
1010079c:	01003ec0 	call	101003ec <send_command>
	small_delay();
101007a0:	01002b40 	call	101002b4 <small_delay>
	send_command(0xe1, 15, (uint16_t []){ 0x0, 0x1c, 0x20, 0x4, 0x10, 0x8, 0x34, 0x47, 0x44, 0x05, 0xb, 0x9, 0x2f, 0x36, 0x0f});
101007a4:	00840474 	movhi	r2,4113
101007a8:	10817f84 	addi	r2,r2,1534
101007ac:	e0ffe104 	addi	r3,fp,-124
101007b0:	1009883a 	mov	r4,r2
101007b4:	00800784 	movi	r2,30
101007b8:	100d883a 	mov	r6,r2
101007bc:	200b883a 	mov	r5,r4
101007c0:	1809883a 	mov	r4,r3
101007c4:	0100cc00 	call	10100cc0 <memcpy>
101007c8:	e0bfe104 	addi	r2,fp,-124
101007cc:	100d883a 	mov	r6,r2
101007d0:	014003c4 	movi	r5,15
101007d4:	01003844 	movi	r4,225
101007d8:	01003ec0 	call	101003ec <send_command>
	small_delay();
101007dc:	01002b40 	call	101002b4 <small_delay>
	send_command(0x2a, 4, (uint16_t []){ 0x0, 0x0, 0x0, 0xef});
101007e0:	e03fdf0d 	sth	zero,-132(fp)
101007e4:	e03fdf8d 	sth	zero,-130(fp)
101007e8:	e03fe00d 	sth	zero,-128(fp)
101007ec:	00803bc4 	movi	r2,239
101007f0:	e0bfe08d 	sth	r2,-126(fp)
101007f4:	e0bfdf04 	addi	r2,fp,-132
101007f8:	100d883a 	mov	r6,r2
101007fc:	01400104 	movi	r5,4
10100800:	01000a84 	movi	r4,42
10100804:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100808:	01002b40 	call	101002b4 <small_delay>
	send_command(0x2b, 4, (uint16_t []){ 0x0, 0x0, 0x01, 0x3f});
1010080c:	e03fdd0d 	sth	zero,-140(fp)
10100810:	e03fdd8d 	sth	zero,-138(fp)
10100814:	00800044 	movi	r2,1
10100818:	e0bfde0d 	sth	r2,-136(fp)
1010081c:	00800fc4 	movi	r2,63
10100820:	e0bfde8d 	sth	r2,-134(fp)
10100824:	e0bfdd04 	addi	r2,fp,-140
10100828:	100d883a 	mov	r6,r2
1010082c:	01400104 	movi	r5,4
10100830:	01000ac4 	movi	r4,43
10100834:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100838:	01002b40 	call	101002b4 <small_delay>
	send_command(0x3a, 1, (uint16_t []){ 0x55}); //RGB
1010083c:	00801544 	movi	r2,85
10100840:	e0bfdc8d 	sth	r2,-142(fp)
10100844:	e0bfdc84 	addi	r2,fp,-142
10100848:	100d883a 	mov	r6,r2
1010084c:	01400044 	movi	r5,1
10100850:	01000e84 	movi	r4,58
10100854:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100858:	01002b40 	call	101002b4 <small_delay>
	send_command(0xf6, 3, (uint16_t []){ 0x01, 0x30, 0x0});
1010085c:	00800044 	movi	r2,1
10100860:	e0bfdb0d 	sth	r2,-148(fp)
10100864:	00800c04 	movi	r2,48
10100868:	e0bfdb8d 	sth	r2,-146(fp)
1010086c:	e03fdc0d 	sth	zero,-144(fp)
10100870:	e0bfdb04 	addi	r2,fp,-148
10100874:	100d883a 	mov	r6,r2
10100878:	014000c4 	movi	r5,3
1010087c:	01003d84 	movi	r4,246
10100880:	01003ec0 	call	101003ec <send_command>
	small_delay();
10100884:	01002b40 	call	101002b4 <small_delay>
	send_command(0x29, 0, (uint16_t []){ 0x09, 0x0a});
10100888:	00800244 	movi	r2,9
1010088c:	e0bfda0d 	sth	r2,-152(fp)
10100890:	00800284 	movi	r2,10
10100894:	e0bfda8d 	sth	r2,-150(fp)
10100898:	e0bfda04 	addi	r2,fp,-152
1010089c:	100d883a 	mov	r6,r2
101008a0:	000b883a 	mov	r5,zero
101008a4:	01000a44 	movi	r4,41
101008a8:	01003ec0 	call	101003ec <send_command>
	small_delay();
101008ac:	01002b40 	call	101002b4 <small_delay>
	send_command(0x2c, 0, (uint16_t []){ 0x09, 0x0a});
101008b0:	00800244 	movi	r2,9
101008b4:	e0bfd90d 	sth	r2,-156(fp)
101008b8:	00800284 	movi	r2,10
101008bc:	e0bfd98d 	sth	r2,-154(fp)
101008c0:	e1bfd904 	addi	r6,fp,-156
101008c4:	000b883a 	mov	r5,zero
101008c8:	01000b04 	movi	r4,44
101008cc:	01003ec0 	call	101003ec <send_command>
	small_delay();
101008d0:	01002b40 	call	101002b4 <small_delay>
}
101008d4:	0001883a 	nop
101008d8:	e037883a 	mov	sp,fp
101008dc:	dfc00117 	ldw	ra,4(sp)
101008e0:	df000017 	ldw	fp,0(sp)
101008e4:	dec00204 	addi	sp,sp,8
101008e8:	f800283a 	ret

101008ec <configure_image>:

void configure_image(uint32_t image_address, uint32_t image_size){
101008ec:	defffa04 	addi	sp,sp,-24
101008f0:	dfc00515 	stw	ra,20(sp)
101008f4:	df000415 	stw	fp,16(sp)
101008f8:	df000404 	addi	fp,sp,16
101008fc:	e13ffe15 	stw	r4,-8(fp)
10100900:	e17fff15 	stw	r5,-4(fp)
	uint16_t image_address_low = image_address & 0xFFFF;
10100904:	e0bffe17 	ldw	r2,-8(fp)
10100908:	e0bffc0d 	sth	r2,-16(fp)
	uint16_t image_address_high = (image_address >> 16) & 0xFFFF;
1010090c:	e0bffe17 	ldw	r2,-8(fp)
10100910:	1004d43a 	srli	r2,r2,16
10100914:	e0bffc8d 	sth	r2,-14(fp)
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_IMG_ADDRESS_LOW,image_address_low);
10100918:	e0fffc0b 	ldhu	r3,-16(fp)
1010091c:	008400b4 	movhi	r2,4098
10100920:	10800044 	addi	r2,r2,1
10100924:	10c0002d 	sthio	r3,0(r2)
	delay();
10100928:	010026c0 	call	1010026c <delay>
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_IMG_ADDRESS_HIGH,image_address_high);
1010092c:	e0fffc8b 	ldhu	r3,-14(fp)
10100930:	008400b4 	movhi	r2,4098
10100934:	10c0002d 	sthio	r3,0(r2)
	delay();
10100938:	010026c0 	call	1010026c <delay>
	uint16_t image_size_low = image_size & 0xFFFF;
1010093c:	e0bfff17 	ldw	r2,-4(fp)
10100940:	e0bffd0d 	sth	r2,-12(fp)
	uint16_t image_size_high = (image_size >> 16) & 0xFFFF;	
10100944:	e0bfff17 	ldw	r2,-4(fp)
10100948:	1004d43a 	srli	r2,r2,16
1010094c:	e0bffd8d 	sth	r2,-10(fp)
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_IMG_LENGTH_LOW, image_size_low);
10100950:	e0fffd0b 	ldhu	r3,-12(fp)
10100954:	008400b4 	movhi	r2,4098
10100958:	108000c4 	addi	r2,r2,3
1010095c:	10c0002d 	sthio	r3,0(r2)
	delay();
10100960:	010026c0 	call	1010026c <delay>
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_IMG_LENGTH_HIGH, image_size_high);
10100964:	e0fffd8b 	ldhu	r3,-10(fp)
10100968:	008400b4 	movhi	r2,4098
1010096c:	10800084 	addi	r2,r2,2
10100970:	10c0002d 	sthio	r3,0(r2)
	delay();
10100974:	010026c0 	call	1010026c <delay>
}
10100978:	0001883a 	nop
1010097c:	e037883a 	mov	sp,fp
10100980:	dfc00117 	ldw	ra,4(sp)
10100984:	df000017 	ldw	fp,0(sp)
10100988:	dec00204 	addi	sp,sp,8
1010098c:	f800283a 	ret

10100990 <init_image>:


void init_image(uint32_t image_address, uint32_t rows, uint32_t cols){
10100990:	defff804 	addi	sp,sp,-32
10100994:	dfc00715 	stw	ra,28(sp)
10100998:	df000615 	stw	fp,24(sp)
1010099c:	df000604 	addi	fp,sp,24
101009a0:	e13ffd15 	stw	r4,-12(fp)
101009a4:	e17ffe15 	stw	r5,-8(fp)
101009a8:	e1bfff15 	stw	r6,-4(fp)
	uint32_t i = 0;
101009ac:	e03ffa15 	stw	zero,-24(fp)
	uint16_t color = 0xA8F0;
101009b0:	00aa3c04 	movi	r2,-22288
101009b4:	e0bffb0d 	sth	r2,-20(fp)

	while(i < (rows * sizeof(uint16_t))){
101009b8:	00002506 	br	10100a50 <init_image+0xc0>
		uint32_t j = 0;
101009bc:	e03ffc15 	stw	zero,-16(fp)

		if(i % 30 == 0){
101009c0:	e0bffa17 	ldw	r2,-24(fp)
101009c4:	01400784 	movi	r5,30
101009c8:	1009883a 	mov	r4,r2
101009cc:	0100c400 	call	10100c40 <__umodsi3>
101009d0:	1000171e 	bne	r2,zero,10100a30 <init_image+0xa0>
			color = color == 0xA8F0 ? 0x00AA : 0xA8F0;
101009d4:	e0fffb0b 	ldhu	r3,-20(fp)
101009d8:	00aa3c14 	movui	r2,43248
101009dc:	1880021e 	bne	r3,r2,101009e8 <init_image+0x58>
101009e0:	00802a84 	movi	r2,170
101009e4:	00000106 	br	101009ec <init_image+0x5c>
101009e8:	00aa3c04 	movi	r2,-22288
101009ec:	e0bffb0d 	sth	r2,-20(fp)
		}

		while(j < cols * sizeof(uint16_t)){
101009f0:	00000f06 	br	10100a30 <init_image+0xa0>
			IOWR_16DIRECT(image_address, i * cols + j, color);
101009f4:	e17fff17 	ldw	r5,-4(fp)
101009f8:	e13ffa17 	ldw	r4,-24(fp)
101009fc:	0100c980 	call	10100c98 <__mulsi3>
10100a00:	1007883a 	mov	r3,r2
10100a04:	e0bffc17 	ldw	r2,-16(fp)
10100a08:	1887883a 	add	r3,r3,r2
10100a0c:	e0bffd17 	ldw	r2,-12(fp)
10100a10:	1885883a 	add	r2,r3,r2
10100a14:	1007883a 	mov	r3,r2
10100a18:	e0bffb0b 	ldhu	r2,-20(fp)
10100a1c:	1880002d 	sthio	r2,0(r3)
			small_delay();
10100a20:	01002b40 	call	101002b4 <small_delay>
			j += 2;
10100a24:	e0bffc17 	ldw	r2,-16(fp)
10100a28:	10800084 	addi	r2,r2,2
10100a2c:	e0bffc15 	stw	r2,-16(fp)

		if(i % 30 == 0){
			color = color == 0xA8F0 ? 0x00AA : 0xA8F0;
		}

		while(j < cols * sizeof(uint16_t)){
10100a30:	e0bfff17 	ldw	r2,-4(fp)
10100a34:	1085883a 	add	r2,r2,r2
10100a38:	1007883a 	mov	r3,r2
10100a3c:	e0bffc17 	ldw	r2,-16(fp)
10100a40:	10ffec36 	bltu	r2,r3,101009f4 <__alt_data_end+0xfffe09f4>
			IOWR_16DIRECT(image_address, i * cols + j, color);
			small_delay();
			j += 2;
		}
		i += 2;
10100a44:	e0bffa17 	ldw	r2,-24(fp)
10100a48:	10800084 	addi	r2,r2,2
10100a4c:	e0bffa15 	stw	r2,-24(fp)

void init_image(uint32_t image_address, uint32_t rows, uint32_t cols){
	uint32_t i = 0;
	uint16_t color = 0xA8F0;

	while(i < (rows * sizeof(uint16_t))){
10100a50:	e0bffe17 	ldw	r2,-8(fp)
10100a54:	1085883a 	add	r2,r2,r2
10100a58:	1007883a 	mov	r3,r2
10100a5c:	e0bffa17 	ldw	r2,-24(fp)
10100a60:	10ffd636 	bltu	r2,r3,101009bc <__alt_data_end+0xfffe09bc>
			small_delay();
			j += 2;
		}
		i += 2;
	}
}
10100a64:	0001883a 	nop
10100a68:	e037883a 	mov	sp,fp
10100a6c:	dfc00117 	ldw	ra,4(sp)
10100a70:	df000017 	ldw	fp,0(sp)
10100a74:	dec00204 	addi	sp,sp,8
10100a78:	f800283a 	ret

10100a7c <main>:



int main(){
10100a7c:	defffd04 	addi	sp,sp,-12
10100a80:	dfc00215 	stw	ra,8(sp)
10100a84:	df000115 	stw	fp,4(sp)
10100a88:	df000104 	addi	fp,sp,4

	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS,0x0004);
10100a8c:	00c00104 	movi	r3,4
10100a90:	008400b4 	movhi	r2,4098
10100a94:	10800104 	addi	r2,r2,4
10100a98:	10c0002d 	sthio	r3,0(r2)
	delay();
10100a9c:	010026c0 	call	1010026c <delay>
	uint16_t reg_flag_val1 = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
10100aa0:	008400b4 	movhi	r2,4098
10100aa4:	10800104 	addi	r2,r2,4
10100aa8:	1080002b 	ldhuio	r2,0(r2)
10100aac:	10bfffcc 	andi	r2,r2,65535
10100ab0:	e0bfff0d 	sth	r2,-4(fp)
	printf("Flag 1 %lu  \n",(unsigned long)reg_flag_val1);
10100ab4:	e0bfff0b 	ldhu	r2,-4(fp)
10100ab8:	100b883a 	mov	r5,r2
10100abc:	01040474 	movhi	r4,4113
10100ac0:	21018704 	addi	r4,r4,1564
10100ac4:	0100e380 	call	10100e38 <printf>
	delay();
10100ac8:	010026c0 	call	1010026c <delay>
	reg_flag_val1 = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	reg_flag_val2 = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	printf("Flag1 after %lu  \n",(unsigned long)reg_flag_val1);
	printf("Flag2 after %lu  \n",(unsigned long)reg_flag_val2);
	printf("Display Stopped\n");*/
	return 0;
10100acc:	0005883a 	mov	r2,zero
}
10100ad0:	e037883a 	mov	sp,fp
10100ad4:	dfc00117 	ldw	ra,4(sp)
10100ad8:	df000017 	ldw	fp,0(sp)
10100adc:	dec00204 	addi	sp,sp,8
10100ae0:	f800283a 	ret

10100ae4 <__divsi3>:
10100ae4:	20001b16 	blt	r4,zero,10100b54 <__divsi3+0x70>
10100ae8:	000f883a 	mov	r7,zero
10100aec:	28001616 	blt	r5,zero,10100b48 <__divsi3+0x64>
10100af0:	200d883a 	mov	r6,r4
10100af4:	29001a2e 	bgeu	r5,r4,10100b60 <__divsi3+0x7c>
10100af8:	00800804 	movi	r2,32
10100afc:	00c00044 	movi	r3,1
10100b00:	00000106 	br	10100b08 <__divsi3+0x24>
10100b04:	10000d26 	beq	r2,zero,10100b3c <__divsi3+0x58>
10100b08:	294b883a 	add	r5,r5,r5
10100b0c:	10bfffc4 	addi	r2,r2,-1
10100b10:	18c7883a 	add	r3,r3,r3
10100b14:	293ffb36 	bltu	r5,r4,10100b04 <__alt_data_end+0xfffe0b04>
10100b18:	0005883a 	mov	r2,zero
10100b1c:	18000726 	beq	r3,zero,10100b3c <__divsi3+0x58>
10100b20:	0005883a 	mov	r2,zero
10100b24:	31400236 	bltu	r6,r5,10100b30 <__divsi3+0x4c>
10100b28:	314dc83a 	sub	r6,r6,r5
10100b2c:	10c4b03a 	or	r2,r2,r3
10100b30:	1806d07a 	srli	r3,r3,1
10100b34:	280ad07a 	srli	r5,r5,1
10100b38:	183ffa1e 	bne	r3,zero,10100b24 <__alt_data_end+0xfffe0b24>
10100b3c:	38000126 	beq	r7,zero,10100b44 <__divsi3+0x60>
10100b40:	0085c83a 	sub	r2,zero,r2
10100b44:	f800283a 	ret
10100b48:	014bc83a 	sub	r5,zero,r5
10100b4c:	39c0005c 	xori	r7,r7,1
10100b50:	003fe706 	br	10100af0 <__alt_data_end+0xfffe0af0>
10100b54:	0109c83a 	sub	r4,zero,r4
10100b58:	01c00044 	movi	r7,1
10100b5c:	003fe306 	br	10100aec <__alt_data_end+0xfffe0aec>
10100b60:	00c00044 	movi	r3,1
10100b64:	003fee06 	br	10100b20 <__alt_data_end+0xfffe0b20>

10100b68 <__modsi3>:
10100b68:	20001716 	blt	r4,zero,10100bc8 <__modsi3+0x60>
10100b6c:	000f883a 	mov	r7,zero
10100b70:	2005883a 	mov	r2,r4
10100b74:	28001216 	blt	r5,zero,10100bc0 <__modsi3+0x58>
10100b78:	2900162e 	bgeu	r5,r4,10100bd4 <__modsi3+0x6c>
10100b7c:	01800804 	movi	r6,32
10100b80:	00c00044 	movi	r3,1
10100b84:	00000106 	br	10100b8c <__modsi3+0x24>
10100b88:	30000a26 	beq	r6,zero,10100bb4 <__modsi3+0x4c>
10100b8c:	294b883a 	add	r5,r5,r5
10100b90:	31bfffc4 	addi	r6,r6,-1
10100b94:	18c7883a 	add	r3,r3,r3
10100b98:	293ffb36 	bltu	r5,r4,10100b88 <__alt_data_end+0xfffe0b88>
10100b9c:	18000526 	beq	r3,zero,10100bb4 <__modsi3+0x4c>
10100ba0:	1806d07a 	srli	r3,r3,1
10100ba4:	11400136 	bltu	r2,r5,10100bac <__modsi3+0x44>
10100ba8:	1145c83a 	sub	r2,r2,r5
10100bac:	280ad07a 	srli	r5,r5,1
10100bb0:	183ffb1e 	bne	r3,zero,10100ba0 <__alt_data_end+0xfffe0ba0>
10100bb4:	38000126 	beq	r7,zero,10100bbc <__modsi3+0x54>
10100bb8:	0085c83a 	sub	r2,zero,r2
10100bbc:	f800283a 	ret
10100bc0:	014bc83a 	sub	r5,zero,r5
10100bc4:	003fec06 	br	10100b78 <__alt_data_end+0xfffe0b78>
10100bc8:	0109c83a 	sub	r4,zero,r4
10100bcc:	01c00044 	movi	r7,1
10100bd0:	003fe706 	br	10100b70 <__alt_data_end+0xfffe0b70>
10100bd4:	00c00044 	movi	r3,1
10100bd8:	003ff106 	br	10100ba0 <__alt_data_end+0xfffe0ba0>

10100bdc <__udivsi3>:
10100bdc:	200d883a 	mov	r6,r4
10100be0:	2900152e 	bgeu	r5,r4,10100c38 <__udivsi3+0x5c>
10100be4:	28001416 	blt	r5,zero,10100c38 <__udivsi3+0x5c>
10100be8:	00800804 	movi	r2,32
10100bec:	00c00044 	movi	r3,1
10100bf0:	00000206 	br	10100bfc <__udivsi3+0x20>
10100bf4:	10000e26 	beq	r2,zero,10100c30 <__udivsi3+0x54>
10100bf8:	28000516 	blt	r5,zero,10100c10 <__udivsi3+0x34>
10100bfc:	294b883a 	add	r5,r5,r5
10100c00:	10bfffc4 	addi	r2,r2,-1
10100c04:	18c7883a 	add	r3,r3,r3
10100c08:	293ffa36 	bltu	r5,r4,10100bf4 <__alt_data_end+0xfffe0bf4>
10100c0c:	18000826 	beq	r3,zero,10100c30 <__udivsi3+0x54>
10100c10:	0005883a 	mov	r2,zero
10100c14:	31400236 	bltu	r6,r5,10100c20 <__udivsi3+0x44>
10100c18:	314dc83a 	sub	r6,r6,r5
10100c1c:	10c4b03a 	or	r2,r2,r3
10100c20:	1806d07a 	srli	r3,r3,1
10100c24:	280ad07a 	srli	r5,r5,1
10100c28:	183ffa1e 	bne	r3,zero,10100c14 <__alt_data_end+0xfffe0c14>
10100c2c:	f800283a 	ret
10100c30:	0005883a 	mov	r2,zero
10100c34:	f800283a 	ret
10100c38:	00c00044 	movi	r3,1
10100c3c:	003ff406 	br	10100c10 <__alt_data_end+0xfffe0c10>

10100c40 <__umodsi3>:
10100c40:	2005883a 	mov	r2,r4
10100c44:	2900122e 	bgeu	r5,r4,10100c90 <__umodsi3+0x50>
10100c48:	28001116 	blt	r5,zero,10100c90 <__umodsi3+0x50>
10100c4c:	01800804 	movi	r6,32
10100c50:	00c00044 	movi	r3,1
10100c54:	00000206 	br	10100c60 <__umodsi3+0x20>
10100c58:	30000c26 	beq	r6,zero,10100c8c <__umodsi3+0x4c>
10100c5c:	28000516 	blt	r5,zero,10100c74 <__umodsi3+0x34>
10100c60:	294b883a 	add	r5,r5,r5
10100c64:	31bfffc4 	addi	r6,r6,-1
10100c68:	18c7883a 	add	r3,r3,r3
10100c6c:	293ffa36 	bltu	r5,r4,10100c58 <__alt_data_end+0xfffe0c58>
10100c70:	18000626 	beq	r3,zero,10100c8c <__umodsi3+0x4c>
10100c74:	1806d07a 	srli	r3,r3,1
10100c78:	11400136 	bltu	r2,r5,10100c80 <__umodsi3+0x40>
10100c7c:	1145c83a 	sub	r2,r2,r5
10100c80:	280ad07a 	srli	r5,r5,1
10100c84:	183ffb1e 	bne	r3,zero,10100c74 <__alt_data_end+0xfffe0c74>
10100c88:	f800283a 	ret
10100c8c:	f800283a 	ret
10100c90:	00c00044 	movi	r3,1
10100c94:	003ff706 	br	10100c74 <__alt_data_end+0xfffe0c74>

10100c98 <__mulsi3>:
10100c98:	0005883a 	mov	r2,zero
10100c9c:	20000726 	beq	r4,zero,10100cbc <__mulsi3+0x24>
10100ca0:	20c0004c 	andi	r3,r4,1
10100ca4:	2008d07a 	srli	r4,r4,1
10100ca8:	18000126 	beq	r3,zero,10100cb0 <__mulsi3+0x18>
10100cac:	1145883a 	add	r2,r2,r5
10100cb0:	294b883a 	add	r5,r5,r5
10100cb4:	203ffa1e 	bne	r4,zero,10100ca0 <__alt_data_end+0xfffe0ca0>
10100cb8:	f800283a 	ret
10100cbc:	f800283a 	ret

10100cc0 <memcpy>:
10100cc0:	defffd04 	addi	sp,sp,-12
10100cc4:	dfc00215 	stw	ra,8(sp)
10100cc8:	dc400115 	stw	r17,4(sp)
10100ccc:	dc000015 	stw	r16,0(sp)
10100cd0:	00c003c4 	movi	r3,15
10100cd4:	2005883a 	mov	r2,r4
10100cd8:	1980452e 	bgeu	r3,r6,10100df0 <memcpy+0x130>
10100cdc:	2906b03a 	or	r3,r5,r4
10100ce0:	18c000cc 	andi	r3,r3,3
10100ce4:	1800441e 	bne	r3,zero,10100df8 <memcpy+0x138>
10100ce8:	347ffc04 	addi	r17,r6,-16
10100cec:	8822d13a 	srli	r17,r17,4
10100cf0:	28c00104 	addi	r3,r5,4
10100cf4:	23400104 	addi	r13,r4,4
10100cf8:	8820913a 	slli	r16,r17,4
10100cfc:	2b000204 	addi	r12,r5,8
10100d00:	22c00204 	addi	r11,r4,8
10100d04:	84000504 	addi	r16,r16,20
10100d08:	2a800304 	addi	r10,r5,12
10100d0c:	22400304 	addi	r9,r4,12
10100d10:	2c21883a 	add	r16,r5,r16
10100d14:	2811883a 	mov	r8,r5
10100d18:	200f883a 	mov	r7,r4
10100d1c:	41000017 	ldw	r4,0(r8)
10100d20:	1fc00017 	ldw	ra,0(r3)
10100d24:	63c00017 	ldw	r15,0(r12)
10100d28:	39000015 	stw	r4,0(r7)
10100d2c:	53800017 	ldw	r14,0(r10)
10100d30:	6fc00015 	stw	ra,0(r13)
10100d34:	5bc00015 	stw	r15,0(r11)
10100d38:	4b800015 	stw	r14,0(r9)
10100d3c:	18c00404 	addi	r3,r3,16
10100d40:	39c00404 	addi	r7,r7,16
10100d44:	42000404 	addi	r8,r8,16
10100d48:	6b400404 	addi	r13,r13,16
10100d4c:	63000404 	addi	r12,r12,16
10100d50:	5ac00404 	addi	r11,r11,16
10100d54:	52800404 	addi	r10,r10,16
10100d58:	4a400404 	addi	r9,r9,16
10100d5c:	1c3fef1e 	bne	r3,r16,10100d1c <__alt_data_end+0xfffe0d1c>
10100d60:	89c00044 	addi	r7,r17,1
10100d64:	380e913a 	slli	r7,r7,4
10100d68:	310003cc 	andi	r4,r6,15
10100d6c:	02c000c4 	movi	r11,3
10100d70:	11c7883a 	add	r3,r2,r7
10100d74:	29cb883a 	add	r5,r5,r7
10100d78:	5900212e 	bgeu	r11,r4,10100e00 <memcpy+0x140>
10100d7c:	1813883a 	mov	r9,r3
10100d80:	2811883a 	mov	r8,r5
10100d84:	200f883a 	mov	r7,r4
10100d88:	42800017 	ldw	r10,0(r8)
10100d8c:	4a400104 	addi	r9,r9,4
10100d90:	39ffff04 	addi	r7,r7,-4
10100d94:	4abfff15 	stw	r10,-4(r9)
10100d98:	42000104 	addi	r8,r8,4
10100d9c:	59fffa36 	bltu	r11,r7,10100d88 <__alt_data_end+0xfffe0d88>
10100da0:	213fff04 	addi	r4,r4,-4
10100da4:	2008d0ba 	srli	r4,r4,2
10100da8:	318000cc 	andi	r6,r6,3
10100dac:	21000044 	addi	r4,r4,1
10100db0:	2109883a 	add	r4,r4,r4
10100db4:	2109883a 	add	r4,r4,r4
10100db8:	1907883a 	add	r3,r3,r4
10100dbc:	290b883a 	add	r5,r5,r4
10100dc0:	30000626 	beq	r6,zero,10100ddc <memcpy+0x11c>
10100dc4:	198d883a 	add	r6,r3,r6
10100dc8:	29c00003 	ldbu	r7,0(r5)
10100dcc:	18c00044 	addi	r3,r3,1
10100dd0:	29400044 	addi	r5,r5,1
10100dd4:	19ffffc5 	stb	r7,-1(r3)
10100dd8:	19bffb1e 	bne	r3,r6,10100dc8 <__alt_data_end+0xfffe0dc8>
10100ddc:	dfc00217 	ldw	ra,8(sp)
10100de0:	dc400117 	ldw	r17,4(sp)
10100de4:	dc000017 	ldw	r16,0(sp)
10100de8:	dec00304 	addi	sp,sp,12
10100dec:	f800283a 	ret
10100df0:	2007883a 	mov	r3,r4
10100df4:	003ff206 	br	10100dc0 <__alt_data_end+0xfffe0dc0>
10100df8:	2007883a 	mov	r3,r4
10100dfc:	003ff106 	br	10100dc4 <__alt_data_end+0xfffe0dc4>
10100e00:	200d883a 	mov	r6,r4
10100e04:	003fee06 	br	10100dc0 <__alt_data_end+0xfffe0dc0>

10100e08 <_printf_r>:
10100e08:	defffd04 	addi	sp,sp,-12
10100e0c:	2805883a 	mov	r2,r5
10100e10:	dfc00015 	stw	ra,0(sp)
10100e14:	d9800115 	stw	r6,4(sp)
10100e18:	d9c00215 	stw	r7,8(sp)
10100e1c:	21400217 	ldw	r5,8(r4)
10100e20:	d9c00104 	addi	r7,sp,4
10100e24:	100d883a 	mov	r6,r2
10100e28:	0100fe00 	call	10100fe0 <___vfprintf_internal_r>
10100e2c:	dfc00017 	ldw	ra,0(sp)
10100e30:	dec00304 	addi	sp,sp,12
10100e34:	f800283a 	ret

10100e38 <printf>:
10100e38:	defffc04 	addi	sp,sp,-16
10100e3c:	dfc00015 	stw	ra,0(sp)
10100e40:	d9400115 	stw	r5,4(sp)
10100e44:	d9800215 	stw	r6,8(sp)
10100e48:	d9c00315 	stw	r7,12(sp)
10100e4c:	00840474 	movhi	r2,4113
10100e50:	10890404 	addi	r2,r2,9232
10100e54:	10800017 	ldw	r2,0(r2)
10100e58:	200b883a 	mov	r5,r4
10100e5c:	d9800104 	addi	r6,sp,4
10100e60:	11000217 	ldw	r4,8(r2)
10100e64:	01032bc0 	call	101032bc <__vfprintf_internal>
10100e68:	dfc00017 	ldw	ra,0(sp)
10100e6c:	dec00404 	addi	sp,sp,16
10100e70:	f800283a 	ret

10100e74 <_puts_r>:
10100e74:	defff604 	addi	sp,sp,-40
10100e78:	dc000715 	stw	r16,28(sp)
10100e7c:	2021883a 	mov	r16,r4
10100e80:	2809883a 	mov	r4,r5
10100e84:	dc400815 	stw	r17,32(sp)
10100e88:	dfc00915 	stw	ra,36(sp)
10100e8c:	2823883a 	mov	r17,r5
10100e90:	0100f480 	call	10100f48 <strlen>
10100e94:	10c00044 	addi	r3,r2,1
10100e98:	d8800115 	stw	r2,4(sp)
10100e9c:	00840474 	movhi	r2,4113
10100ea0:	10818b04 	addi	r2,r2,1580
10100ea4:	d8800215 	stw	r2,8(sp)
10100ea8:	00800044 	movi	r2,1
10100eac:	d8800315 	stw	r2,12(sp)
10100eb0:	00800084 	movi	r2,2
10100eb4:	dc400015 	stw	r17,0(sp)
10100eb8:	d8c00615 	stw	r3,24(sp)
10100ebc:	dec00415 	stw	sp,16(sp)
10100ec0:	d8800515 	stw	r2,20(sp)
10100ec4:	80000226 	beq	r16,zero,10100ed0 <_puts_r+0x5c>
10100ec8:	80800e17 	ldw	r2,56(r16)
10100ecc:	10001426 	beq	r2,zero,10100f20 <_puts_r+0xac>
10100ed0:	81400217 	ldw	r5,8(r16)
10100ed4:	2880030b 	ldhu	r2,12(r5)
10100ed8:	10c8000c 	andi	r3,r2,8192
10100edc:	1800061e 	bne	r3,zero,10100ef8 <_puts_r+0x84>
10100ee0:	29001917 	ldw	r4,100(r5)
10100ee4:	00f7ffc4 	movi	r3,-8193
10100ee8:	10880014 	ori	r2,r2,8192
10100eec:	20c6703a 	and	r3,r4,r3
10100ef0:	2880030d 	sth	r2,12(r5)
10100ef4:	28c01915 	stw	r3,100(r5)
10100ef8:	d9800404 	addi	r6,sp,16
10100efc:	8009883a 	mov	r4,r16
10100f00:	01058240 	call	10105824 <__sfvwrite_r>
10100f04:	1000091e 	bne	r2,zero,10100f2c <_puts_r+0xb8>
10100f08:	00800284 	movi	r2,10
10100f0c:	dfc00917 	ldw	ra,36(sp)
10100f10:	dc400817 	ldw	r17,32(sp)
10100f14:	dc000717 	ldw	r16,28(sp)
10100f18:	dec00a04 	addi	sp,sp,40
10100f1c:	f800283a 	ret
10100f20:	8009883a 	mov	r4,r16
10100f24:	01053a00 	call	101053a0 <__sinit>
10100f28:	003fe906 	br	10100ed0 <__alt_data_end+0xfffe0ed0>
10100f2c:	00bfffc4 	movi	r2,-1
10100f30:	003ff606 	br	10100f0c <__alt_data_end+0xfffe0f0c>

10100f34 <puts>:
10100f34:	00840474 	movhi	r2,4113
10100f38:	10890404 	addi	r2,r2,9232
10100f3c:	200b883a 	mov	r5,r4
10100f40:	11000017 	ldw	r4,0(r2)
10100f44:	0100e741 	jmpi	10100e74 <_puts_r>

10100f48 <strlen>:
10100f48:	208000cc 	andi	r2,r4,3
10100f4c:	10002026 	beq	r2,zero,10100fd0 <strlen+0x88>
10100f50:	20800007 	ldb	r2,0(r4)
10100f54:	10002026 	beq	r2,zero,10100fd8 <strlen+0x90>
10100f58:	2005883a 	mov	r2,r4
10100f5c:	00000206 	br	10100f68 <strlen+0x20>
10100f60:	10c00007 	ldb	r3,0(r2)
10100f64:	18001826 	beq	r3,zero,10100fc8 <strlen+0x80>
10100f68:	10800044 	addi	r2,r2,1
10100f6c:	10c000cc 	andi	r3,r2,3
10100f70:	183ffb1e 	bne	r3,zero,10100f60 <__alt_data_end+0xfffe0f60>
10100f74:	10c00017 	ldw	r3,0(r2)
10100f78:	01ffbff4 	movhi	r7,65279
10100f7c:	39ffbfc4 	addi	r7,r7,-257
10100f80:	00ca303a 	nor	r5,zero,r3
10100f84:	01a02074 	movhi	r6,32897
10100f88:	19c7883a 	add	r3,r3,r7
10100f8c:	31a02004 	addi	r6,r6,-32640
10100f90:	1946703a 	and	r3,r3,r5
10100f94:	1986703a 	and	r3,r3,r6
10100f98:	1800091e 	bne	r3,zero,10100fc0 <strlen+0x78>
10100f9c:	10800104 	addi	r2,r2,4
10100fa0:	10c00017 	ldw	r3,0(r2)
10100fa4:	19cb883a 	add	r5,r3,r7
10100fa8:	00c6303a 	nor	r3,zero,r3
10100fac:	28c6703a 	and	r3,r5,r3
10100fb0:	1986703a 	and	r3,r3,r6
10100fb4:	183ff926 	beq	r3,zero,10100f9c <__alt_data_end+0xfffe0f9c>
10100fb8:	00000106 	br	10100fc0 <strlen+0x78>
10100fbc:	10800044 	addi	r2,r2,1
10100fc0:	10c00007 	ldb	r3,0(r2)
10100fc4:	183ffd1e 	bne	r3,zero,10100fbc <__alt_data_end+0xfffe0fbc>
10100fc8:	1105c83a 	sub	r2,r2,r4
10100fcc:	f800283a 	ret
10100fd0:	2005883a 	mov	r2,r4
10100fd4:	003fe706 	br	10100f74 <__alt_data_end+0xfffe0f74>
10100fd8:	0005883a 	mov	r2,zero
10100fdc:	f800283a 	ret

10100fe0 <___vfprintf_internal_r>:
10100fe0:	deffb804 	addi	sp,sp,-288
10100fe4:	dfc04715 	stw	ra,284(sp)
10100fe8:	ddc04515 	stw	r23,276(sp)
10100fec:	dd404315 	stw	r21,268(sp)
10100ff0:	d9002d15 	stw	r4,180(sp)
10100ff4:	282f883a 	mov	r23,r5
10100ff8:	302b883a 	mov	r21,r6
10100ffc:	d9c02e15 	stw	r7,184(sp)
10101000:	df004615 	stw	fp,280(sp)
10101004:	dd804415 	stw	r22,272(sp)
10101008:	dd004215 	stw	r20,264(sp)
1010100c:	dcc04115 	stw	r19,260(sp)
10101010:	dc804015 	stw	r18,256(sp)
10101014:	dc403f15 	stw	r17,252(sp)
10101018:	dc003e15 	stw	r16,248(sp)
1010101c:	0105f200 	call	10105f20 <_localeconv_r>
10101020:	10800017 	ldw	r2,0(r2)
10101024:	1009883a 	mov	r4,r2
10101028:	d8803415 	stw	r2,208(sp)
1010102c:	0100f480 	call	10100f48 <strlen>
10101030:	d8803715 	stw	r2,220(sp)
10101034:	d8802d17 	ldw	r2,180(sp)
10101038:	10000226 	beq	r2,zero,10101044 <___vfprintf_internal_r+0x64>
1010103c:	10800e17 	ldw	r2,56(r2)
10101040:	1000fb26 	beq	r2,zero,10101430 <___vfprintf_internal_r+0x450>
10101044:	b880030b 	ldhu	r2,12(r23)
10101048:	10c8000c 	andi	r3,r2,8192
1010104c:	1800061e 	bne	r3,zero,10101068 <___vfprintf_internal_r+0x88>
10101050:	b9001917 	ldw	r4,100(r23)
10101054:	00f7ffc4 	movi	r3,-8193
10101058:	10880014 	ori	r2,r2,8192
1010105c:	20c6703a 	and	r3,r4,r3
10101060:	b880030d 	sth	r2,12(r23)
10101064:	b8c01915 	stw	r3,100(r23)
10101068:	10c0020c 	andi	r3,r2,8
1010106c:	1800c326 	beq	r3,zero,1010137c <___vfprintf_internal_r+0x39c>
10101070:	b8c00417 	ldw	r3,16(r23)
10101074:	1800c126 	beq	r3,zero,1010137c <___vfprintf_internal_r+0x39c>
10101078:	1080068c 	andi	r2,r2,26
1010107c:	00c00284 	movi	r3,10
10101080:	10c0c626 	beq	r2,r3,1010139c <___vfprintf_internal_r+0x3bc>
10101084:	d8c00404 	addi	r3,sp,16
10101088:	05040474 	movhi	r20,4113
1010108c:	d9001e04 	addi	r4,sp,120
10101090:	a5019c84 	addi	r20,r20,1650
10101094:	d8c01e15 	stw	r3,120(sp)
10101098:	d8002015 	stw	zero,128(sp)
1010109c:	d8001f15 	stw	zero,124(sp)
101010a0:	d8003315 	stw	zero,204(sp)
101010a4:	d8003615 	stw	zero,216(sp)
101010a8:	d8003815 	stw	zero,224(sp)
101010ac:	1811883a 	mov	r8,r3
101010b0:	d8003915 	stw	zero,228(sp)
101010b4:	d8003a15 	stw	zero,232(sp)
101010b8:	d8002f15 	stw	zero,188(sp)
101010bc:	d9002815 	stw	r4,160(sp)
101010c0:	a8800007 	ldb	r2,0(r21)
101010c4:	10028b26 	beq	r2,zero,10101af4 <___vfprintf_internal_r+0xb14>
101010c8:	00c00944 	movi	r3,37
101010cc:	a823883a 	mov	r17,r21
101010d0:	10c0021e 	bne	r2,r3,101010dc <___vfprintf_internal_r+0xfc>
101010d4:	00001406 	br	10101128 <___vfprintf_internal_r+0x148>
101010d8:	10c00326 	beq	r2,r3,101010e8 <___vfprintf_internal_r+0x108>
101010dc:	8c400044 	addi	r17,r17,1
101010e0:	88800007 	ldb	r2,0(r17)
101010e4:	103ffc1e 	bne	r2,zero,101010d8 <__alt_data_end+0xfffe10d8>
101010e8:	8d61c83a 	sub	r16,r17,r21
101010ec:	80000e26 	beq	r16,zero,10101128 <___vfprintf_internal_r+0x148>
101010f0:	d8c02017 	ldw	r3,128(sp)
101010f4:	d8801f17 	ldw	r2,124(sp)
101010f8:	45400015 	stw	r21,0(r8)
101010fc:	1c07883a 	add	r3,r3,r16
10101100:	10800044 	addi	r2,r2,1
10101104:	d8c02015 	stw	r3,128(sp)
10101108:	44000115 	stw	r16,4(r8)
1010110c:	d8801f15 	stw	r2,124(sp)
10101110:	00c001c4 	movi	r3,7
10101114:	1880a916 	blt	r3,r2,101013bc <___vfprintf_internal_r+0x3dc>
10101118:	42000204 	addi	r8,r8,8
1010111c:	d9402f17 	ldw	r5,188(sp)
10101120:	2c0b883a 	add	r5,r5,r16
10101124:	d9402f15 	stw	r5,188(sp)
10101128:	88800007 	ldb	r2,0(r17)
1010112c:	1000aa26 	beq	r2,zero,101013d8 <___vfprintf_internal_r+0x3f8>
10101130:	8d400044 	addi	r21,r17,1
10101134:	8c400047 	ldb	r17,1(r17)
10101138:	0021883a 	mov	r16,zero
1010113c:	00bfffc4 	movi	r2,-1
10101140:	0025883a 	mov	r18,zero
10101144:	dc002905 	stb	r16,164(sp)
10101148:	d8002785 	stb	zero,158(sp)
1010114c:	d8002b05 	stb	zero,172(sp)
10101150:	d8802a15 	stw	r2,168(sp)
10101154:	d8003115 	stw	zero,196(sp)
10101158:	04c01604 	movi	r19,88
1010115c:	05800244 	movi	r22,9
10101160:	9021883a 	mov	r16,r18
10101164:	4039883a 	mov	fp,r8
10101168:	ad400044 	addi	r21,r21,1
1010116c:	88bff804 	addi	r2,r17,-32
10101170:	98833236 	bltu	r19,r2,10101e3c <___vfprintf_internal_r+0xe5c>
10101174:	100490ba 	slli	r2,r2,2
10101178:	00c40434 	movhi	r3,4112
1010117c:	18c46304 	addi	r3,r3,4492
10101180:	10c5883a 	add	r2,r2,r3
10101184:	10800017 	ldw	r2,0(r2)
10101188:	1000683a 	jmp	r2
1010118c:	10101d34 	orhi	zero,r2,16500
10101190:	10101e3c 	xorhi	zero,r2,16504
10101194:	10101e3c 	xorhi	zero,r2,16504
10101198:	10101d54 	ori	zero,r2,16501
1010119c:	10101e3c 	xorhi	zero,r2,16504
101011a0:	10101e3c 	xorhi	zero,r2,16504
101011a4:	10101e3c 	xorhi	zero,r2,16504
101011a8:	10101e3c 	xorhi	zero,r2,16504
101011ac:	10101e3c 	xorhi	zero,r2,16504
101011b0:	10101e3c 	xorhi	zero,r2,16504
101011b4:	1010143c 	xorhi	zero,r2,16464
101011b8:	10101c44 	addi	zero,r2,16497
101011bc:	10101e3c 	xorhi	zero,r2,16504
101011c0:	10101300 	call	11010130 <__alt_data_end+0xef0130>
101011c4:	10101460 	cmpeqi	zero,r2,16465
101011c8:	10101e3c 	xorhi	zero,r2,16504
101011cc:	101014b0 	cmpltui	zero,r2,16466
101011d0:	101014bc 	xorhi	zero,r2,16466
101011d4:	101014bc 	xorhi	zero,r2,16466
101011d8:	101014bc 	xorhi	zero,r2,16466
101011dc:	101014bc 	xorhi	zero,r2,16466
101011e0:	101014bc 	xorhi	zero,r2,16466
101011e4:	101014bc 	xorhi	zero,r2,16466
101011e8:	101014bc 	xorhi	zero,r2,16466
101011ec:	101014bc 	xorhi	zero,r2,16466
101011f0:	101014bc 	xorhi	zero,r2,16466
101011f4:	10101e3c 	xorhi	zero,r2,16504
101011f8:	10101e3c 	xorhi	zero,r2,16504
101011fc:	10101e3c 	xorhi	zero,r2,16504
10101200:	10101e3c 	xorhi	zero,r2,16504
10101204:	10101e3c 	xorhi	zero,r2,16504
10101208:	10101e3c 	xorhi	zero,r2,16504
1010120c:	10101e3c 	xorhi	zero,r2,16504
10101210:	10101e3c 	xorhi	zero,r2,16504
10101214:	10101e3c 	xorhi	zero,r2,16504
10101218:	10101e3c 	xorhi	zero,r2,16504
1010121c:	101014f8 	rdprs	zero,r2,16467
10101220:	101015c0 	call	1101015c <__alt_data_end+0xef015c>
10101224:	10101e3c 	xorhi	zero,r2,16504
10101228:	101015c0 	call	1101015c <__alt_data_end+0xef015c>
1010122c:	10101e3c 	xorhi	zero,r2,16504
10101230:	10101e3c 	xorhi	zero,r2,16504
10101234:	10101e3c 	xorhi	zero,r2,16504
10101238:	10101e3c 	xorhi	zero,r2,16504
1010123c:	1010166c 	andhi	zero,r2,16473
10101240:	10101e3c 	xorhi	zero,r2,16504
10101244:	10101e3c 	xorhi	zero,r2,16504
10101248:	10101678 	rdprs	zero,r2,16473
1010124c:	10101e3c 	xorhi	zero,r2,16504
10101250:	10101e3c 	xorhi	zero,r2,16504
10101254:	10101e3c 	xorhi	zero,r2,16504
10101258:	10101e3c 	xorhi	zero,r2,16504
1010125c:	10101e3c 	xorhi	zero,r2,16504
10101260:	10101afc 	xorhi	zero,r2,16491
10101264:	10101e3c 	xorhi	zero,r2,16504
10101268:	10101e3c 	xorhi	zero,r2,16504
1010126c:	10101b68 	cmpgeui	zero,r2,16493
10101270:	10101e3c 	xorhi	zero,r2,16504
10101274:	10101e3c 	xorhi	zero,r2,16504
10101278:	10101e3c 	xorhi	zero,r2,16504
1010127c:	10101e3c 	xorhi	zero,r2,16504
10101280:	10101e3c 	xorhi	zero,r2,16504
10101284:	10101e3c 	xorhi	zero,r2,16504
10101288:	10101e3c 	xorhi	zero,r2,16504
1010128c:	10101e3c 	xorhi	zero,r2,16504
10101290:	10101e3c 	xorhi	zero,r2,16504
10101294:	10101e3c 	xorhi	zero,r2,16504
10101298:	10101de0 	cmpeqi	zero,r2,16503
1010129c:	10101d60 	cmpeqi	zero,r2,16501
101012a0:	101015c0 	call	1101015c <__alt_data_end+0xef015c>
101012a4:	101015c0 	call	1101015c <__alt_data_end+0xef015c>
101012a8:	101015c0 	call	1101015c <__alt_data_end+0xef015c>
101012ac:	10101d80 	call	110101d8 <__alt_data_end+0xef01d8>
101012b0:	10101d60 	cmpeqi	zero,r2,16501
101012b4:	10101e3c 	xorhi	zero,r2,16504
101012b8:	10101e3c 	xorhi	zero,r2,16504
101012bc:	10101d8c 	andi	zero,r2,16502
101012c0:	10101e3c 	xorhi	zero,r2,16504
101012c4:	10101da0 	cmpeqi	zero,r2,16502
101012c8:	10101c24 	muli	zero,r2,16496
101012cc:	1010130c 	andi	zero,r2,16460
101012d0:	10101c5c 	xori	zero,r2,16497
101012d4:	10101e3c 	xorhi	zero,r2,16504
101012d8:	10101c68 	cmpgeui	zero,r2,16497
101012dc:	10101e3c 	xorhi	zero,r2,16504
101012e0:	10101ccc 	andi	zero,r2,16499
101012e4:	10101e3c 	xorhi	zero,r2,16504
101012e8:	10101e3c 	xorhi	zero,r2,16504
101012ec:	10101cec 	andhi	zero,r2,16499
101012f0:	d8c03117 	ldw	r3,196(sp)
101012f4:	d8802e15 	stw	r2,184(sp)
101012f8:	00c7c83a 	sub	r3,zero,r3
101012fc:	d8c03115 	stw	r3,196(sp)
10101300:	84000114 	ori	r16,r16,4
10101304:	ac400007 	ldb	r17,0(r21)
10101308:	003f9706 	br	10101168 <__alt_data_end+0xfffe1168>
1010130c:	00800c04 	movi	r2,48
10101310:	d8802705 	stb	r2,156(sp)
10101314:	00801e04 	movi	r2,120
10101318:	d8802745 	stb	r2,157(sp)
1010131c:	d9002a17 	ldw	r4,168(sp)
10101320:	d8802e17 	ldw	r2,184(sp)
10101324:	d8002785 	stb	zero,158(sp)
10101328:	e011883a 	mov	r8,fp
1010132c:	10c00104 	addi	r3,r2,4
10101330:	14c00017 	ldw	r19,0(r2)
10101334:	002d883a 	mov	r22,zero
10101338:	80800094 	ori	r2,r16,2
1010133c:	2002ca16 	blt	r4,zero,10101e68 <___vfprintf_internal_r+0xe88>
10101340:	00bfdfc4 	movi	r2,-129
10101344:	80a4703a 	and	r18,r16,r2
10101348:	d8c02e15 	stw	r3,184(sp)
1010134c:	94800094 	ori	r18,r18,2
10101350:	9802b41e 	bne	r19,zero,10101e24 <___vfprintf_internal_r+0xe44>
10101354:	01440474 	movhi	r5,4113
10101358:	29419504 	addi	r5,r5,1620
1010135c:	d9403915 	stw	r5,228(sp)
10101360:	04401e04 	movi	r17,120
10101364:	d8802a17 	ldw	r2,168(sp)
10101368:	0039883a 	mov	fp,zero
1010136c:	1001fa26 	beq	r2,zero,10101b58 <___vfprintf_internal_r+0xb78>
10101370:	0027883a 	mov	r19,zero
10101374:	002d883a 	mov	r22,zero
10101378:	00021906 	br	10101be0 <___vfprintf_internal_r+0xc00>
1010137c:	d9002d17 	ldw	r4,180(sp)
10101380:	b80b883a 	mov	r5,r23
10101384:	01033940 	call	10103394 <__swsetup_r>
10101388:	1005dc1e 	bne	r2,zero,10102afc <___vfprintf_internal_r+0x1b1c>
1010138c:	b880030b 	ldhu	r2,12(r23)
10101390:	00c00284 	movi	r3,10
10101394:	1080068c 	andi	r2,r2,26
10101398:	10ff3a1e 	bne	r2,r3,10101084 <__alt_data_end+0xfffe1084>
1010139c:	b880038f 	ldh	r2,14(r23)
101013a0:	103f3816 	blt	r2,zero,10101084 <__alt_data_end+0xfffe1084>
101013a4:	d9c02e17 	ldw	r7,184(sp)
101013a8:	d9002d17 	ldw	r4,180(sp)
101013ac:	a80d883a 	mov	r6,r21
101013b0:	b80b883a 	mov	r5,r23
101013b4:	01032d80 	call	101032d8 <__sbprintf>
101013b8:	00001106 	br	10101400 <___vfprintf_internal_r+0x420>
101013bc:	d9002d17 	ldw	r4,180(sp)
101013c0:	d9801e04 	addi	r6,sp,120
101013c4:	b80b883a 	mov	r5,r23
101013c8:	01086780 	call	10108678 <__sprint_r>
101013cc:	1000081e 	bne	r2,zero,101013f0 <___vfprintf_internal_r+0x410>
101013d0:	da000404 	addi	r8,sp,16
101013d4:	003f5106 	br	1010111c <__alt_data_end+0xfffe111c>
101013d8:	d8802017 	ldw	r2,128(sp)
101013dc:	10000426 	beq	r2,zero,101013f0 <___vfprintf_internal_r+0x410>
101013e0:	d9002d17 	ldw	r4,180(sp)
101013e4:	d9801e04 	addi	r6,sp,120
101013e8:	b80b883a 	mov	r5,r23
101013ec:	01086780 	call	10108678 <__sprint_r>
101013f0:	b880030b 	ldhu	r2,12(r23)
101013f4:	1080100c 	andi	r2,r2,64
101013f8:	1005c01e 	bne	r2,zero,10102afc <___vfprintf_internal_r+0x1b1c>
101013fc:	d8802f17 	ldw	r2,188(sp)
10101400:	dfc04717 	ldw	ra,284(sp)
10101404:	df004617 	ldw	fp,280(sp)
10101408:	ddc04517 	ldw	r23,276(sp)
1010140c:	dd804417 	ldw	r22,272(sp)
10101410:	dd404317 	ldw	r21,268(sp)
10101414:	dd004217 	ldw	r20,264(sp)
10101418:	dcc04117 	ldw	r19,260(sp)
1010141c:	dc804017 	ldw	r18,256(sp)
10101420:	dc403f17 	ldw	r17,252(sp)
10101424:	dc003e17 	ldw	r16,248(sp)
10101428:	dec04804 	addi	sp,sp,288
1010142c:	f800283a 	ret
10101430:	d9002d17 	ldw	r4,180(sp)
10101434:	01053a00 	call	101053a0 <__sinit>
10101438:	003f0206 	br	10101044 <__alt_data_end+0xfffe1044>
1010143c:	d9002e17 	ldw	r4,184(sp)
10101440:	d9402e17 	ldw	r5,184(sp)
10101444:	21000017 	ldw	r4,0(r4)
10101448:	28800104 	addi	r2,r5,4
1010144c:	d9003115 	stw	r4,196(sp)
10101450:	203fa716 	blt	r4,zero,101012f0 <__alt_data_end+0xfffe12f0>
10101454:	d8802e15 	stw	r2,184(sp)
10101458:	ac400007 	ldb	r17,0(r21)
1010145c:	003f4206 	br	10101168 <__alt_data_end+0xfffe1168>
10101460:	ac400007 	ldb	r17,0(r21)
10101464:	01000a84 	movi	r4,42
10101468:	a8c00044 	addi	r3,r21,1
1010146c:	89075826 	beq	r17,r4,101031d0 <___vfprintf_internal_r+0x21f0>
10101470:	8cbff404 	addi	r18,r17,-48
10101474:	b486ae36 	bltu	r22,r18,10102f30 <___vfprintf_internal_r+0x1f50>
10101478:	0009883a 	mov	r4,zero
1010147c:	1823883a 	mov	r17,r3
10101480:	01400284 	movi	r5,10
10101484:	0100c980 	call	10100c98 <__mulsi3>
10101488:	88c00007 	ldb	r3,0(r17)
1010148c:	1489883a 	add	r4,r2,r18
10101490:	8d400044 	addi	r21,r17,1
10101494:	1cbff404 	addi	r18,r3,-48
10101498:	a823883a 	mov	r17,r21
1010149c:	b4bff82e 	bgeu	r22,r18,10101480 <__alt_data_end+0xfffe1480>
101014a0:	1823883a 	mov	r17,r3
101014a4:	2005f616 	blt	r4,zero,10102c80 <___vfprintf_internal_r+0x1ca0>
101014a8:	d9002a15 	stw	r4,168(sp)
101014ac:	003f2f06 	br	1010116c <__alt_data_end+0xfffe116c>
101014b0:	84002014 	ori	r16,r16,128
101014b4:	ac400007 	ldb	r17,0(r21)
101014b8:	003f2b06 	br	10101168 <__alt_data_end+0xfffe1168>
101014bc:	8cbff404 	addi	r18,r17,-48
101014c0:	d8003115 	stw	zero,196(sp)
101014c4:	0009883a 	mov	r4,zero
101014c8:	a823883a 	mov	r17,r21
101014cc:	01400284 	movi	r5,10
101014d0:	0100c980 	call	10100c98 <__mulsi3>
101014d4:	88c00007 	ldb	r3,0(r17)
101014d8:	9089883a 	add	r4,r18,r2
101014dc:	ad400044 	addi	r21,r21,1
101014e0:	1cbff404 	addi	r18,r3,-48
101014e4:	a823883a 	mov	r17,r21
101014e8:	b4bff82e 	bgeu	r22,r18,101014cc <__alt_data_end+0xfffe14cc>
101014ec:	1823883a 	mov	r17,r3
101014f0:	d9003115 	stw	r4,196(sp)
101014f4:	003f1d06 	br	1010116c <__alt_data_end+0xfffe116c>
101014f8:	8025883a 	mov	r18,r16
101014fc:	dc002903 	ldbu	r16,164(sp)
10101500:	e011883a 	mov	r8,fp
10101504:	84003fcc 	andi	r16,r16,255
10101508:	8007531e 	bne	r16,zero,10103258 <___vfprintf_internal_r+0x2278>
1010150c:	94800414 	ori	r18,r18,16
10101510:	9080080c 	andi	r2,r18,32
10101514:	1003a326 	beq	r2,zero,101023a4 <___vfprintf_internal_r+0x13c4>
10101518:	d9002e17 	ldw	r4,184(sp)
1010151c:	20800117 	ldw	r2,4(r4)
10101520:	24c00017 	ldw	r19,0(r4)
10101524:	21000204 	addi	r4,r4,8
10101528:	d9002e15 	stw	r4,184(sp)
1010152c:	102d883a 	mov	r22,r2
10101530:	10047316 	blt	r2,zero,10102700 <___vfprintf_internal_r+0x1720>
10101534:	d9002a17 	ldw	r4,168(sp)
10101538:	df002783 	ldbu	fp,158(sp)
1010153c:	2003e416 	blt	r4,zero,101024d0 <___vfprintf_internal_r+0x14f0>
10101540:	00ffdfc4 	movi	r3,-129
10101544:	9d84b03a 	or	r2,r19,r22
10101548:	90e4703a 	and	r18,r18,r3
1010154c:	10018026 	beq	r2,zero,10101b50 <___vfprintf_internal_r+0xb70>
10101550:	b003ab26 	beq	r22,zero,10102400 <___vfprintf_internal_r+0x1420>
10101554:	dc402915 	stw	r17,164(sp)
10101558:	dc001e04 	addi	r16,sp,120
1010155c:	b023883a 	mov	r17,r22
10101560:	402d883a 	mov	r22,r8
10101564:	9809883a 	mov	r4,r19
10101568:	880b883a 	mov	r5,r17
1010156c:	01800284 	movi	r6,10
10101570:	000f883a 	mov	r7,zero
10101574:	010abbc0 	call	1010abbc <__umoddi3>
10101578:	10800c04 	addi	r2,r2,48
1010157c:	843fffc4 	addi	r16,r16,-1
10101580:	9809883a 	mov	r4,r19
10101584:	880b883a 	mov	r5,r17
10101588:	80800005 	stb	r2,0(r16)
1010158c:	01800284 	movi	r6,10
10101590:	000f883a 	mov	r7,zero
10101594:	010a5c00 	call	1010a5c0 <__udivdi3>
10101598:	1027883a 	mov	r19,r2
1010159c:	10c4b03a 	or	r2,r2,r3
101015a0:	1823883a 	mov	r17,r3
101015a4:	103fef1e 	bne	r2,zero,10101564 <__alt_data_end+0xfffe1564>
101015a8:	d8c02817 	ldw	r3,160(sp)
101015ac:	dc402917 	ldw	r17,164(sp)
101015b0:	b011883a 	mov	r8,r22
101015b4:	1c07c83a 	sub	r3,r3,r16
101015b8:	d8c02b15 	stw	r3,172(sp)
101015bc:	00005f06 	br	1010173c <___vfprintf_internal_r+0x75c>
101015c0:	8025883a 	mov	r18,r16
101015c4:	dc002903 	ldbu	r16,164(sp)
101015c8:	e011883a 	mov	r8,fp
101015cc:	84003fcc 	andi	r16,r16,255
101015d0:	80071e1e 	bne	r16,zero,1010324c <___vfprintf_internal_r+0x226c>
101015d4:	9080020c 	andi	r2,r18,8
101015d8:	1004af26 	beq	r2,zero,10102898 <___vfprintf_internal_r+0x18b8>
101015dc:	d9002e17 	ldw	r4,184(sp)
101015e0:	d9402e17 	ldw	r5,184(sp)
101015e4:	d8802e17 	ldw	r2,184(sp)
101015e8:	21000017 	ldw	r4,0(r4)
101015ec:	29400117 	ldw	r5,4(r5)
101015f0:	10800204 	addi	r2,r2,8
101015f4:	d9003615 	stw	r4,216(sp)
101015f8:	d9403815 	stw	r5,224(sp)
101015fc:	d8802e15 	stw	r2,184(sp)
10101600:	d9003617 	ldw	r4,216(sp)
10101604:	d9403817 	ldw	r5,224(sp)
10101608:	da003d15 	stw	r8,244(sp)
1010160c:	04000044 	movi	r16,1
10101610:	010829c0 	call	1010829c <__fpclassifyd>
10101614:	da003d17 	ldw	r8,244(sp)
10101618:	1404441e 	bne	r2,r16,1010272c <___vfprintf_internal_r+0x174c>
1010161c:	d9003617 	ldw	r4,216(sp)
10101620:	d9403817 	ldw	r5,224(sp)
10101624:	000d883a 	mov	r6,zero
10101628:	000f883a 	mov	r7,zero
1010162c:	010c5600 	call	1010c560 <__ledf2>
10101630:	da003d17 	ldw	r8,244(sp)
10101634:	1005e316 	blt	r2,zero,10102dc4 <___vfprintf_internal_r+0x1de4>
10101638:	df002783 	ldbu	fp,158(sp)
1010163c:	008011c4 	movi	r2,71
10101640:	1445580e 	bge	r2,r17,10102ba4 <___vfprintf_internal_r+0x1bc4>
10101644:	04040474 	movhi	r16,4113
10101648:	84018d04 	addi	r16,r16,1588
1010164c:	00c000c4 	movi	r3,3
10101650:	00bfdfc4 	movi	r2,-129
10101654:	d8c02915 	stw	r3,164(sp)
10101658:	90a4703a 	and	r18,r18,r2
1010165c:	d8c02b15 	stw	r3,172(sp)
10101660:	d8002a15 	stw	zero,168(sp)
10101664:	d8003215 	stw	zero,200(sp)
10101668:	00003a06 	br	10101754 <___vfprintf_internal_r+0x774>
1010166c:	84000214 	ori	r16,r16,8
10101670:	ac400007 	ldb	r17,0(r21)
10101674:	003ebc06 	br	10101168 <__alt_data_end+0xfffe1168>
10101678:	8025883a 	mov	r18,r16
1010167c:	dc002903 	ldbu	r16,164(sp)
10101680:	e011883a 	mov	r8,fp
10101684:	84003fcc 	andi	r16,r16,255
10101688:	8007001e 	bne	r16,zero,1010328c <___vfprintf_internal_r+0x22ac>
1010168c:	94800414 	ori	r18,r18,16
10101690:	9080080c 	andi	r2,r18,32
10101694:	1002fa26 	beq	r2,zero,10102280 <___vfprintf_internal_r+0x12a0>
10101698:	d9002e17 	ldw	r4,184(sp)
1010169c:	d9402a17 	ldw	r5,168(sp)
101016a0:	d8002785 	stb	zero,158(sp)
101016a4:	20800204 	addi	r2,r4,8
101016a8:	24c00017 	ldw	r19,0(r4)
101016ac:	25800117 	ldw	r22,4(r4)
101016b0:	2804b116 	blt	r5,zero,10102978 <___vfprintf_internal_r+0x1998>
101016b4:	013fdfc4 	movi	r4,-129
101016b8:	9d86b03a 	or	r3,r19,r22
101016bc:	d8802e15 	stw	r2,184(sp)
101016c0:	9124703a 	and	r18,r18,r4
101016c4:	1802fb1e 	bne	r3,zero,101022b4 <___vfprintf_internal_r+0x12d4>
101016c8:	d8c02a17 	ldw	r3,168(sp)
101016cc:	0039883a 	mov	fp,zero
101016d0:	1805e526 	beq	r3,zero,10102e68 <___vfprintf_internal_r+0x1e88>
101016d4:	0027883a 	mov	r19,zero
101016d8:	002d883a 	mov	r22,zero
101016dc:	dc001e04 	addi	r16,sp,120
101016e0:	9806d0fa 	srli	r3,r19,3
101016e4:	b008977a 	slli	r4,r22,29
101016e8:	b02cd0fa 	srli	r22,r22,3
101016ec:	9cc001cc 	andi	r19,r19,7
101016f0:	98800c04 	addi	r2,r19,48
101016f4:	843fffc4 	addi	r16,r16,-1
101016f8:	20e6b03a 	or	r19,r4,r3
101016fc:	80800005 	stb	r2,0(r16)
10101700:	9d86b03a 	or	r3,r19,r22
10101704:	183ff61e 	bne	r3,zero,101016e0 <__alt_data_end+0xfffe16e0>
10101708:	90c0004c 	andi	r3,r18,1
1010170c:	18014126 	beq	r3,zero,10101c14 <___vfprintf_internal_r+0xc34>
10101710:	10803fcc 	andi	r2,r2,255
10101714:	1080201c 	xori	r2,r2,128
10101718:	10bfe004 	addi	r2,r2,-128
1010171c:	00c00c04 	movi	r3,48
10101720:	10c13c26 	beq	r2,r3,10101c14 <___vfprintf_internal_r+0xc34>
10101724:	80ffffc5 	stb	r3,-1(r16)
10101728:	d8c02817 	ldw	r3,160(sp)
1010172c:	80bfffc4 	addi	r2,r16,-1
10101730:	1021883a 	mov	r16,r2
10101734:	1887c83a 	sub	r3,r3,r2
10101738:	d8c02b15 	stw	r3,172(sp)
1010173c:	d8802b17 	ldw	r2,172(sp)
10101740:	d9002a17 	ldw	r4,168(sp)
10101744:	1100010e 	bge	r2,r4,1010174c <___vfprintf_internal_r+0x76c>
10101748:	2005883a 	mov	r2,r4
1010174c:	d8802915 	stw	r2,164(sp)
10101750:	d8003215 	stw	zero,200(sp)
10101754:	e7003fcc 	andi	fp,fp,255
10101758:	e700201c 	xori	fp,fp,128
1010175c:	e73fe004 	addi	fp,fp,-128
10101760:	e0000326 	beq	fp,zero,10101770 <___vfprintf_internal_r+0x790>
10101764:	d8c02917 	ldw	r3,164(sp)
10101768:	18c00044 	addi	r3,r3,1
1010176c:	d8c02915 	stw	r3,164(sp)
10101770:	90c0008c 	andi	r3,r18,2
10101774:	d8c02c15 	stw	r3,176(sp)
10101778:	18000326 	beq	r3,zero,10101788 <___vfprintf_internal_r+0x7a8>
1010177c:	d8c02917 	ldw	r3,164(sp)
10101780:	18c00084 	addi	r3,r3,2
10101784:	d8c02915 	stw	r3,164(sp)
10101788:	90c0210c 	andi	r3,r18,132
1010178c:	d8c03015 	stw	r3,192(sp)
10101790:	1801c51e 	bne	r3,zero,10101ea8 <___vfprintf_internal_r+0xec8>
10101794:	d9003117 	ldw	r4,196(sp)
10101798:	d8c02917 	ldw	r3,164(sp)
1010179c:	20e7c83a 	sub	r19,r4,r3
101017a0:	04c1c10e 	bge	zero,r19,10101ea8 <___vfprintf_internal_r+0xec8>
101017a4:	02400404 	movi	r9,16
101017a8:	d8c02017 	ldw	r3,128(sp)
101017ac:	d8801f17 	ldw	r2,124(sp)
101017b0:	4cc52f0e 	bge	r9,r19,10102c70 <___vfprintf_internal_r+0x1c90>
101017b4:	01440474 	movhi	r5,4113
101017b8:	2941a084 	addi	r5,r5,1666
101017bc:	dc403b15 	stw	r17,236(sp)
101017c0:	d9403515 	stw	r5,212(sp)
101017c4:	9823883a 	mov	r17,r19
101017c8:	482d883a 	mov	r22,r9
101017cc:	9027883a 	mov	r19,r18
101017d0:	070001c4 	movi	fp,7
101017d4:	8025883a 	mov	r18,r16
101017d8:	dc002d17 	ldw	r16,180(sp)
101017dc:	00000306 	br	101017ec <___vfprintf_internal_r+0x80c>
101017e0:	8c7ffc04 	addi	r17,r17,-16
101017e4:	42000204 	addi	r8,r8,8
101017e8:	b440130e 	bge	r22,r17,10101838 <___vfprintf_internal_r+0x858>
101017ec:	01040474 	movhi	r4,4113
101017f0:	18c00404 	addi	r3,r3,16
101017f4:	10800044 	addi	r2,r2,1
101017f8:	2101a084 	addi	r4,r4,1666
101017fc:	41000015 	stw	r4,0(r8)
10101800:	45800115 	stw	r22,4(r8)
10101804:	d8c02015 	stw	r3,128(sp)
10101808:	d8801f15 	stw	r2,124(sp)
1010180c:	e0bff40e 	bge	fp,r2,101017e0 <__alt_data_end+0xfffe17e0>
10101810:	d9801e04 	addi	r6,sp,120
10101814:	b80b883a 	mov	r5,r23
10101818:	8009883a 	mov	r4,r16
1010181c:	01086780 	call	10108678 <__sprint_r>
10101820:	103ef31e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10101824:	8c7ffc04 	addi	r17,r17,-16
10101828:	d8c02017 	ldw	r3,128(sp)
1010182c:	d8801f17 	ldw	r2,124(sp)
10101830:	da000404 	addi	r8,sp,16
10101834:	b47fed16 	blt	r22,r17,101017ec <__alt_data_end+0xfffe17ec>
10101838:	9021883a 	mov	r16,r18
1010183c:	9825883a 	mov	r18,r19
10101840:	8827883a 	mov	r19,r17
10101844:	dc403b17 	ldw	r17,236(sp)
10101848:	d9403517 	ldw	r5,212(sp)
1010184c:	98c7883a 	add	r3,r19,r3
10101850:	10800044 	addi	r2,r2,1
10101854:	41400015 	stw	r5,0(r8)
10101858:	44c00115 	stw	r19,4(r8)
1010185c:	d8c02015 	stw	r3,128(sp)
10101860:	d8801f15 	stw	r2,124(sp)
10101864:	010001c4 	movi	r4,7
10101868:	2082c516 	blt	r4,r2,10102380 <___vfprintf_internal_r+0x13a0>
1010186c:	df002787 	ldb	fp,158(sp)
10101870:	42000204 	addi	r8,r8,8
10101874:	e0000c26 	beq	fp,zero,101018a8 <___vfprintf_internal_r+0x8c8>
10101878:	d8801f17 	ldw	r2,124(sp)
1010187c:	d9002784 	addi	r4,sp,158
10101880:	18c00044 	addi	r3,r3,1
10101884:	10800044 	addi	r2,r2,1
10101888:	41000015 	stw	r4,0(r8)
1010188c:	01000044 	movi	r4,1
10101890:	41000115 	stw	r4,4(r8)
10101894:	d8c02015 	stw	r3,128(sp)
10101898:	d8801f15 	stw	r2,124(sp)
1010189c:	010001c4 	movi	r4,7
101018a0:	20825e16 	blt	r4,r2,1010221c <___vfprintf_internal_r+0x123c>
101018a4:	42000204 	addi	r8,r8,8
101018a8:	d8802c17 	ldw	r2,176(sp)
101018ac:	10000c26 	beq	r2,zero,101018e0 <___vfprintf_internal_r+0x900>
101018b0:	d8801f17 	ldw	r2,124(sp)
101018b4:	d9002704 	addi	r4,sp,156
101018b8:	18c00084 	addi	r3,r3,2
101018bc:	10800044 	addi	r2,r2,1
101018c0:	41000015 	stw	r4,0(r8)
101018c4:	01000084 	movi	r4,2
101018c8:	41000115 	stw	r4,4(r8)
101018cc:	d8c02015 	stw	r3,128(sp)
101018d0:	d8801f15 	stw	r2,124(sp)
101018d4:	010001c4 	movi	r4,7
101018d8:	20825816 	blt	r4,r2,1010223c <___vfprintf_internal_r+0x125c>
101018dc:	42000204 	addi	r8,r8,8
101018e0:	d9003017 	ldw	r4,192(sp)
101018e4:	00802004 	movi	r2,128
101018e8:	2081bb26 	beq	r4,r2,10101fd8 <___vfprintf_internal_r+0xff8>
101018ec:	d9402a17 	ldw	r5,168(sp)
101018f0:	d8802b17 	ldw	r2,172(sp)
101018f4:	28adc83a 	sub	r22,r5,r2
101018f8:	0580310e 	bge	zero,r22,101019c0 <___vfprintf_internal_r+0x9e0>
101018fc:	07000404 	movi	fp,16
10101900:	d8801f17 	ldw	r2,124(sp)
10101904:	e584360e 	bge	fp,r22,101029e0 <___vfprintf_internal_r+0x1a00>
10101908:	01440474 	movhi	r5,4113
1010190c:	29419c84 	addi	r5,r5,1650
10101910:	dc402a15 	stw	r17,168(sp)
10101914:	d9402c15 	stw	r5,176(sp)
10101918:	b023883a 	mov	r17,r22
1010191c:	04c001c4 	movi	r19,7
10101920:	a82d883a 	mov	r22,r21
10101924:	902b883a 	mov	r21,r18
10101928:	8025883a 	mov	r18,r16
1010192c:	dc002d17 	ldw	r16,180(sp)
10101930:	00000306 	br	10101940 <___vfprintf_internal_r+0x960>
10101934:	8c7ffc04 	addi	r17,r17,-16
10101938:	42000204 	addi	r8,r8,8
1010193c:	e440110e 	bge	fp,r17,10101984 <___vfprintf_internal_r+0x9a4>
10101940:	18c00404 	addi	r3,r3,16
10101944:	10800044 	addi	r2,r2,1
10101948:	45000015 	stw	r20,0(r8)
1010194c:	47000115 	stw	fp,4(r8)
10101950:	d8c02015 	stw	r3,128(sp)
10101954:	d8801f15 	stw	r2,124(sp)
10101958:	98bff60e 	bge	r19,r2,10101934 <__alt_data_end+0xfffe1934>
1010195c:	d9801e04 	addi	r6,sp,120
10101960:	b80b883a 	mov	r5,r23
10101964:	8009883a 	mov	r4,r16
10101968:	01086780 	call	10108678 <__sprint_r>
1010196c:	103ea01e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10101970:	8c7ffc04 	addi	r17,r17,-16
10101974:	d8c02017 	ldw	r3,128(sp)
10101978:	d8801f17 	ldw	r2,124(sp)
1010197c:	da000404 	addi	r8,sp,16
10101980:	e47fef16 	blt	fp,r17,10101940 <__alt_data_end+0xfffe1940>
10101984:	9021883a 	mov	r16,r18
10101988:	a825883a 	mov	r18,r21
1010198c:	b02b883a 	mov	r21,r22
10101990:	882d883a 	mov	r22,r17
10101994:	dc402a17 	ldw	r17,168(sp)
10101998:	d9002c17 	ldw	r4,176(sp)
1010199c:	1d87883a 	add	r3,r3,r22
101019a0:	10800044 	addi	r2,r2,1
101019a4:	41000015 	stw	r4,0(r8)
101019a8:	45800115 	stw	r22,4(r8)
101019ac:	d8c02015 	stw	r3,128(sp)
101019b0:	d8801f15 	stw	r2,124(sp)
101019b4:	010001c4 	movi	r4,7
101019b8:	20821016 	blt	r4,r2,101021fc <___vfprintf_internal_r+0x121c>
101019bc:	42000204 	addi	r8,r8,8
101019c0:	9080400c 	andi	r2,r18,256
101019c4:	10013a1e 	bne	r2,zero,10101eb0 <___vfprintf_internal_r+0xed0>
101019c8:	d9402b17 	ldw	r5,172(sp)
101019cc:	d8801f17 	ldw	r2,124(sp)
101019d0:	44000015 	stw	r16,0(r8)
101019d4:	1947883a 	add	r3,r3,r5
101019d8:	10800044 	addi	r2,r2,1
101019dc:	41400115 	stw	r5,4(r8)
101019e0:	d8c02015 	stw	r3,128(sp)
101019e4:	d8801f15 	stw	r2,124(sp)
101019e8:	010001c4 	movi	r4,7
101019ec:	2081f516 	blt	r4,r2,101021c4 <___vfprintf_internal_r+0x11e4>
101019f0:	42000204 	addi	r8,r8,8
101019f4:	9480010c 	andi	r18,r18,4
101019f8:	90003226 	beq	r18,zero,10101ac4 <___vfprintf_internal_r+0xae4>
101019fc:	d9403117 	ldw	r5,196(sp)
10101a00:	d8802917 	ldw	r2,164(sp)
10101a04:	28a1c83a 	sub	r16,r5,r2
10101a08:	04002e0e 	bge	zero,r16,10101ac4 <___vfprintf_internal_r+0xae4>
10101a0c:	04400404 	movi	r17,16
10101a10:	d8801f17 	ldw	r2,124(sp)
10101a14:	8c04c40e 	bge	r17,r16,10102d28 <___vfprintf_internal_r+0x1d48>
10101a18:	01440474 	movhi	r5,4113
10101a1c:	2941a084 	addi	r5,r5,1666
10101a20:	d9403515 	stw	r5,212(sp)
10101a24:	048001c4 	movi	r18,7
10101a28:	dcc02d17 	ldw	r19,180(sp)
10101a2c:	00000306 	br	10101a3c <___vfprintf_internal_r+0xa5c>
10101a30:	843ffc04 	addi	r16,r16,-16
10101a34:	42000204 	addi	r8,r8,8
10101a38:	8c00130e 	bge	r17,r16,10101a88 <___vfprintf_internal_r+0xaa8>
10101a3c:	01040474 	movhi	r4,4113
10101a40:	18c00404 	addi	r3,r3,16
10101a44:	10800044 	addi	r2,r2,1
10101a48:	2101a084 	addi	r4,r4,1666
10101a4c:	41000015 	stw	r4,0(r8)
10101a50:	44400115 	stw	r17,4(r8)
10101a54:	d8c02015 	stw	r3,128(sp)
10101a58:	d8801f15 	stw	r2,124(sp)
10101a5c:	90bff40e 	bge	r18,r2,10101a30 <__alt_data_end+0xfffe1a30>
10101a60:	d9801e04 	addi	r6,sp,120
10101a64:	b80b883a 	mov	r5,r23
10101a68:	9809883a 	mov	r4,r19
10101a6c:	01086780 	call	10108678 <__sprint_r>
10101a70:	103e5f1e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10101a74:	843ffc04 	addi	r16,r16,-16
10101a78:	d8c02017 	ldw	r3,128(sp)
10101a7c:	d8801f17 	ldw	r2,124(sp)
10101a80:	da000404 	addi	r8,sp,16
10101a84:	8c3fed16 	blt	r17,r16,10101a3c <__alt_data_end+0xfffe1a3c>
10101a88:	d9403517 	ldw	r5,212(sp)
10101a8c:	1c07883a 	add	r3,r3,r16
10101a90:	10800044 	addi	r2,r2,1
10101a94:	41400015 	stw	r5,0(r8)
10101a98:	44000115 	stw	r16,4(r8)
10101a9c:	d8c02015 	stw	r3,128(sp)
10101aa0:	d8801f15 	stw	r2,124(sp)
10101aa4:	010001c4 	movi	r4,7
10101aa8:	2080060e 	bge	r4,r2,10101ac4 <___vfprintf_internal_r+0xae4>
10101aac:	d9002d17 	ldw	r4,180(sp)
10101ab0:	d9801e04 	addi	r6,sp,120
10101ab4:	b80b883a 	mov	r5,r23
10101ab8:	01086780 	call	10108678 <__sprint_r>
10101abc:	103e4c1e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10101ac0:	d8c02017 	ldw	r3,128(sp)
10101ac4:	d8803117 	ldw	r2,196(sp)
10101ac8:	d9002917 	ldw	r4,164(sp)
10101acc:	1100010e 	bge	r2,r4,10101ad4 <___vfprintf_internal_r+0xaf4>
10101ad0:	2005883a 	mov	r2,r4
10101ad4:	d9402f17 	ldw	r5,188(sp)
10101ad8:	288b883a 	add	r5,r5,r2
10101adc:	d9402f15 	stw	r5,188(sp)
10101ae0:	1801c01e 	bne	r3,zero,101021e4 <___vfprintf_internal_r+0x1204>
10101ae4:	a8800007 	ldb	r2,0(r21)
10101ae8:	d8001f15 	stw	zero,124(sp)
10101aec:	da000404 	addi	r8,sp,16
10101af0:	103d751e 	bne	r2,zero,101010c8 <__alt_data_end+0xfffe10c8>
10101af4:	a823883a 	mov	r17,r21
10101af8:	003d8b06 	br	10101128 <__alt_data_end+0xfffe1128>
10101afc:	8025883a 	mov	r18,r16
10101b00:	dc002903 	ldbu	r16,164(sp)
10101b04:	e011883a 	mov	r8,fp
10101b08:	84003fcc 	andi	r16,r16,255
10101b0c:	8005e51e 	bne	r16,zero,101032a4 <___vfprintf_internal_r+0x22c4>
10101b10:	94800414 	ori	r18,r18,16
10101b14:	9080080c 	andi	r2,r18,32
10101b18:	10022b26 	beq	r2,zero,101023c8 <___vfprintf_internal_r+0x13e8>
10101b1c:	d9002e17 	ldw	r4,184(sp)
10101b20:	d9402a17 	ldw	r5,168(sp)
10101b24:	d8002785 	stb	zero,158(sp)
10101b28:	20c00204 	addi	r3,r4,8
10101b2c:	24c00017 	ldw	r19,0(r4)
10101b30:	25800117 	ldw	r22,4(r4)
10101b34:	28042e16 	blt	r5,zero,10102bf0 <___vfprintf_internal_r+0x1c10>
10101b38:	013fdfc4 	movi	r4,-129
10101b3c:	9d84b03a 	or	r2,r19,r22
10101b40:	d8c02e15 	stw	r3,184(sp)
10101b44:	9124703a 	and	r18,r18,r4
10101b48:	0039883a 	mov	fp,zero
10101b4c:	103e801e 	bne	r2,zero,10101550 <__alt_data_end+0xfffe1550>
10101b50:	d9002a17 	ldw	r4,168(sp)
10101b54:	2002e01e 	bne	r4,zero,101026d8 <___vfprintf_internal_r+0x16f8>
10101b58:	d8002a15 	stw	zero,168(sp)
10101b5c:	d8002b15 	stw	zero,172(sp)
10101b60:	dc001e04 	addi	r16,sp,120
10101b64:	003ef506 	br	1010173c <__alt_data_end+0xfffe173c>
10101b68:	8025883a 	mov	r18,r16
10101b6c:	dc002903 	ldbu	r16,164(sp)
10101b70:	e011883a 	mov	r8,fp
10101b74:	84003fcc 	andi	r16,r16,255
10101b78:	8005ba1e 	bne	r16,zero,10103264 <___vfprintf_internal_r+0x2284>
10101b7c:	01040474 	movhi	r4,4113
10101b80:	21019004 	addi	r4,r4,1600
10101b84:	d9003915 	stw	r4,228(sp)
10101b88:	9080080c 	andi	r2,r18,32
10101b8c:	10006126 	beq	r2,zero,10101d14 <___vfprintf_internal_r+0xd34>
10101b90:	d9402e17 	ldw	r5,184(sp)
10101b94:	2cc00017 	ldw	r19,0(r5)
10101b98:	2d800117 	ldw	r22,4(r5)
10101b9c:	29400204 	addi	r5,r5,8
10101ba0:	d9402e15 	stw	r5,184(sp)
10101ba4:	9080004c 	andi	r2,r18,1
10101ba8:	1001ac26 	beq	r2,zero,1010225c <___vfprintf_internal_r+0x127c>
10101bac:	9d84b03a 	or	r2,r19,r22
10101bb0:	10038526 	beq	r2,zero,101029c8 <___vfprintf_internal_r+0x19e8>
10101bb4:	d8c02a17 	ldw	r3,168(sp)
10101bb8:	00800c04 	movi	r2,48
10101bbc:	d8802705 	stb	r2,156(sp)
10101bc0:	dc402745 	stb	r17,157(sp)
10101bc4:	d8002785 	stb	zero,158(sp)
10101bc8:	90800094 	ori	r2,r18,2
10101bcc:	18047916 	blt	r3,zero,10102db4 <___vfprintf_internal_r+0x1dd4>
10101bd0:	00bfdfc4 	movi	r2,-129
10101bd4:	90a4703a 	and	r18,r18,r2
10101bd8:	94800094 	ori	r18,r18,2
10101bdc:	0039883a 	mov	fp,zero
10101be0:	d9003917 	ldw	r4,228(sp)
10101be4:	dc001e04 	addi	r16,sp,120
10101be8:	988003cc 	andi	r2,r19,15
10101bec:	b006973a 	slli	r3,r22,28
10101bf0:	2085883a 	add	r2,r4,r2
10101bf4:	9826d13a 	srli	r19,r19,4
10101bf8:	10800003 	ldbu	r2,0(r2)
10101bfc:	b02cd13a 	srli	r22,r22,4
10101c00:	843fffc4 	addi	r16,r16,-1
10101c04:	1ce6b03a 	or	r19,r3,r19
10101c08:	80800005 	stb	r2,0(r16)
10101c0c:	9d84b03a 	or	r2,r19,r22
10101c10:	103ff51e 	bne	r2,zero,10101be8 <__alt_data_end+0xfffe1be8>
10101c14:	d8c02817 	ldw	r3,160(sp)
10101c18:	1c07c83a 	sub	r3,r3,r16
10101c1c:	d8c02b15 	stw	r3,172(sp)
10101c20:	003ec606 	br	1010173c <__alt_data_end+0xfffe173c>
10101c24:	8025883a 	mov	r18,r16
10101c28:	dc002903 	ldbu	r16,164(sp)
10101c2c:	e011883a 	mov	r8,fp
10101c30:	84003fcc 	andi	r16,r16,255
10101c34:	803e9626 	beq	r16,zero,10101690 <__alt_data_end+0xfffe1690>
10101c38:	d8c02b03 	ldbu	r3,172(sp)
10101c3c:	d8c02785 	stb	r3,158(sp)
10101c40:	003e9306 	br	10101690 <__alt_data_end+0xfffe1690>
10101c44:	00c00044 	movi	r3,1
10101c48:	d8c02905 	stb	r3,164(sp)
10101c4c:	00c00ac4 	movi	r3,43
10101c50:	d8c02b05 	stb	r3,172(sp)
10101c54:	ac400007 	ldb	r17,0(r21)
10101c58:	003d4306 	br	10101168 <__alt_data_end+0xfffe1168>
10101c5c:	84000814 	ori	r16,r16,32
10101c60:	ac400007 	ldb	r17,0(r21)
10101c64:	003d4006 	br	10101168 <__alt_data_end+0xfffe1168>
10101c68:	d8802e17 	ldw	r2,184(sp)
10101c6c:	8025883a 	mov	r18,r16
10101c70:	d8002785 	stb	zero,158(sp)
10101c74:	14000017 	ldw	r16,0(r2)
10101c78:	e011883a 	mov	r8,fp
10101c7c:	14c00104 	addi	r19,r2,4
10101c80:	80042d26 	beq	r16,zero,10102d38 <___vfprintf_internal_r+0x1d58>
10101c84:	d8c02a17 	ldw	r3,168(sp)
10101c88:	1803e416 	blt	r3,zero,10102c1c <___vfprintf_internal_r+0x1c3c>
10101c8c:	180d883a 	mov	r6,r3
10101c90:	000b883a 	mov	r5,zero
10101c94:	8009883a 	mov	r4,r16
10101c98:	df003d15 	stw	fp,244(sp)
10101c9c:	01069180 	call	10106918 <memchr>
10101ca0:	da003d17 	ldw	r8,244(sp)
10101ca4:	10046826 	beq	r2,zero,10102e48 <___vfprintf_internal_r+0x1e68>
10101ca8:	1405c83a 	sub	r2,r2,r16
10101cac:	d8802b15 	stw	r2,172(sp)
10101cb0:	1003e016 	blt	r2,zero,10102c34 <___vfprintf_internal_r+0x1c54>
10101cb4:	df002783 	ldbu	fp,158(sp)
10101cb8:	d8802915 	stw	r2,164(sp)
10101cbc:	dcc02e15 	stw	r19,184(sp)
10101cc0:	d8002a15 	stw	zero,168(sp)
10101cc4:	d8003215 	stw	zero,200(sp)
10101cc8:	003ea206 	br	10101754 <__alt_data_end+0xfffe1754>
10101ccc:	8025883a 	mov	r18,r16
10101cd0:	dc002903 	ldbu	r16,164(sp)
10101cd4:	e011883a 	mov	r8,fp
10101cd8:	84003fcc 	andi	r16,r16,255
10101cdc:	803f8d26 	beq	r16,zero,10101b14 <__alt_data_end+0xfffe1b14>
10101ce0:	d8c02b03 	ldbu	r3,172(sp)
10101ce4:	d8c02785 	stb	r3,158(sp)
10101ce8:	003f8a06 	br	10101b14 <__alt_data_end+0xfffe1b14>
10101cec:	8025883a 	mov	r18,r16
10101cf0:	dc002903 	ldbu	r16,164(sp)
10101cf4:	e011883a 	mov	r8,fp
10101cf8:	84003fcc 	andi	r16,r16,255
10101cfc:	8005661e 	bne	r16,zero,10103298 <___vfprintf_internal_r+0x22b8>
10101d00:	01040474 	movhi	r4,4113
10101d04:	21019504 	addi	r4,r4,1620
10101d08:	d9003915 	stw	r4,228(sp)
10101d0c:	9080080c 	andi	r2,r18,32
10101d10:	103f9f1e 	bne	r2,zero,10101b90 <__alt_data_end+0xfffe1b90>
10101d14:	9080040c 	andi	r2,r18,16
10101d18:	1002eb26 	beq	r2,zero,101028c8 <___vfprintf_internal_r+0x18e8>
10101d1c:	d8802e17 	ldw	r2,184(sp)
10101d20:	002d883a 	mov	r22,zero
10101d24:	14c00017 	ldw	r19,0(r2)
10101d28:	10800104 	addi	r2,r2,4
10101d2c:	d8802e15 	stw	r2,184(sp)
10101d30:	003f9c06 	br	10101ba4 <__alt_data_end+0xfffe1ba4>
10101d34:	d8802b07 	ldb	r2,172(sp)
10101d38:	1002e11e 	bne	r2,zero,101028c0 <___vfprintf_internal_r+0x18e0>
10101d3c:	00c00044 	movi	r3,1
10101d40:	d8c02905 	stb	r3,164(sp)
10101d44:	00c00804 	movi	r3,32
10101d48:	d8c02b05 	stb	r3,172(sp)
10101d4c:	ac400007 	ldb	r17,0(r21)
10101d50:	003d0506 	br	10101168 <__alt_data_end+0xfffe1168>
10101d54:	84000054 	ori	r16,r16,1
10101d58:	ac400007 	ldb	r17,0(r21)
10101d5c:	003d0206 	br	10101168 <__alt_data_end+0xfffe1168>
10101d60:	8025883a 	mov	r18,r16
10101d64:	dc002903 	ldbu	r16,164(sp)
10101d68:	e011883a 	mov	r8,fp
10101d6c:	84003fcc 	andi	r16,r16,255
10101d70:	803de726 	beq	r16,zero,10101510 <__alt_data_end+0xfffe1510>
10101d74:	d8c02b03 	ldbu	r3,172(sp)
10101d78:	d8c02785 	stb	r3,158(sp)
10101d7c:	003de406 	br	10101510 <__alt_data_end+0xfffe1510>
10101d80:	84001014 	ori	r16,r16,64
10101d84:	ac400007 	ldb	r17,0(r21)
10101d88:	003cf706 	br	10101168 <__alt_data_end+0xfffe1168>
10101d8c:	ac400007 	ldb	r17,0(r21)
10101d90:	00801b04 	movi	r2,108
10101d94:	88838f26 	beq	r17,r2,10102bd4 <___vfprintf_internal_r+0x1bf4>
10101d98:	84000414 	ori	r16,r16,16
10101d9c:	003cf206 	br	10101168 <__alt_data_end+0xfffe1168>
10101da0:	8025883a 	mov	r18,r16
10101da4:	dc002903 	ldbu	r16,164(sp)
10101da8:	e011883a 	mov	r8,fp
10101dac:	84003fcc 	andi	r16,r16,255
10101db0:	80053f1e 	bne	r16,zero,101032b0 <___vfprintf_internal_r+0x22d0>
10101db4:	9080080c 	andi	r2,r18,32
10101db8:	1002d226 	beq	r2,zero,10102904 <___vfprintf_internal_r+0x1924>
10101dbc:	d9002e17 	ldw	r4,184(sp)
10101dc0:	d9402f17 	ldw	r5,188(sp)
10101dc4:	20800017 	ldw	r2,0(r4)
10101dc8:	2807d7fa 	srai	r3,r5,31
10101dcc:	21000104 	addi	r4,r4,4
10101dd0:	d9002e15 	stw	r4,184(sp)
10101dd4:	11400015 	stw	r5,0(r2)
10101dd8:	10c00115 	stw	r3,4(r2)
10101ddc:	003cb806 	br	101010c0 <__alt_data_end+0xfffe10c0>
10101de0:	d8c02e17 	ldw	r3,184(sp)
10101de4:	d9002e17 	ldw	r4,184(sp)
10101de8:	8025883a 	mov	r18,r16
10101dec:	18800017 	ldw	r2,0(r3)
10101df0:	21000104 	addi	r4,r4,4
10101df4:	00c00044 	movi	r3,1
10101df8:	e011883a 	mov	r8,fp
10101dfc:	d8c02915 	stw	r3,164(sp)
10101e00:	d8002785 	stb	zero,158(sp)
10101e04:	d8801405 	stb	r2,80(sp)
10101e08:	d9002e15 	stw	r4,184(sp)
10101e0c:	d8c02b15 	stw	r3,172(sp)
10101e10:	d8002a15 	stw	zero,168(sp)
10101e14:	d8003215 	stw	zero,200(sp)
10101e18:	dc001404 	addi	r16,sp,80
10101e1c:	0039883a 	mov	fp,zero
10101e20:	003e5306 	br	10101770 <__alt_data_end+0xfffe1770>
10101e24:	01040474 	movhi	r4,4113
10101e28:	21019504 	addi	r4,r4,1620
10101e2c:	0039883a 	mov	fp,zero
10101e30:	d9003915 	stw	r4,228(sp)
10101e34:	04401e04 	movi	r17,120
10101e38:	003f6906 	br	10101be0 <__alt_data_end+0xfffe1be0>
10101e3c:	8025883a 	mov	r18,r16
10101e40:	dc002903 	ldbu	r16,164(sp)
10101e44:	e011883a 	mov	r8,fp
10101e48:	84003fcc 	andi	r16,r16,255
10101e4c:	8005081e 	bne	r16,zero,10103270 <___vfprintf_internal_r+0x2290>
10101e50:	883d6126 	beq	r17,zero,101013d8 <__alt_data_end+0xfffe13d8>
10101e54:	00c00044 	movi	r3,1
10101e58:	d8c02915 	stw	r3,164(sp)
10101e5c:	dc401405 	stb	r17,80(sp)
10101e60:	d8002785 	stb	zero,158(sp)
10101e64:	003fe906 	br	10101e0c <__alt_data_end+0xfffe1e0c>
10101e68:	01440474 	movhi	r5,4113
10101e6c:	29419504 	addi	r5,r5,1620
10101e70:	d9403915 	stw	r5,228(sp)
10101e74:	d8c02e15 	stw	r3,184(sp)
10101e78:	1025883a 	mov	r18,r2
10101e7c:	04401e04 	movi	r17,120
10101e80:	9d84b03a 	or	r2,r19,r22
10101e84:	1000fc1e 	bne	r2,zero,10102278 <___vfprintf_internal_r+0x1298>
10101e88:	0039883a 	mov	fp,zero
10101e8c:	00800084 	movi	r2,2
10101e90:	10803fcc 	andi	r2,r2,255
10101e94:	00c00044 	movi	r3,1
10101e98:	10c20f26 	beq	r2,r3,101026d8 <___vfprintf_internal_r+0x16f8>
10101e9c:	00c00084 	movi	r3,2
10101ea0:	10fd3326 	beq	r2,r3,10101370 <__alt_data_end+0xfffe1370>
10101ea4:	003e0b06 	br	101016d4 <__alt_data_end+0xfffe16d4>
10101ea8:	d8c02017 	ldw	r3,128(sp)
10101eac:	003e7106 	br	10101874 <__alt_data_end+0xfffe1874>
10101eb0:	00801944 	movi	r2,101
10101eb4:	14407e0e 	bge	r2,r17,101020b0 <___vfprintf_internal_r+0x10d0>
10101eb8:	d9003617 	ldw	r4,216(sp)
10101ebc:	d9403817 	ldw	r5,224(sp)
10101ec0:	000d883a 	mov	r6,zero
10101ec4:	000f883a 	mov	r7,zero
10101ec8:	d8c03c15 	stw	r3,240(sp)
10101ecc:	da003d15 	stw	r8,244(sp)
10101ed0:	010c3fc0 	call	1010c3fc <__eqdf2>
10101ed4:	d8c03c17 	ldw	r3,240(sp)
10101ed8:	da003d17 	ldw	r8,244(sp)
10101edc:	1000f71e 	bne	r2,zero,101022bc <___vfprintf_internal_r+0x12dc>
10101ee0:	d8801f17 	ldw	r2,124(sp)
10101ee4:	01040474 	movhi	r4,4113
10101ee8:	21019c04 	addi	r4,r4,1648
10101eec:	18c00044 	addi	r3,r3,1
10101ef0:	10800044 	addi	r2,r2,1
10101ef4:	41000015 	stw	r4,0(r8)
10101ef8:	01000044 	movi	r4,1
10101efc:	41000115 	stw	r4,4(r8)
10101f00:	d8c02015 	stw	r3,128(sp)
10101f04:	d8801f15 	stw	r2,124(sp)
10101f08:	010001c4 	movi	r4,7
10101f0c:	2082b816 	blt	r4,r2,101029f0 <___vfprintf_internal_r+0x1a10>
10101f10:	42000204 	addi	r8,r8,8
10101f14:	d8802617 	ldw	r2,152(sp)
10101f18:	d9403317 	ldw	r5,204(sp)
10101f1c:	11400216 	blt	r2,r5,10101f28 <___vfprintf_internal_r+0xf48>
10101f20:	9080004c 	andi	r2,r18,1
10101f24:	103eb326 	beq	r2,zero,101019f4 <__alt_data_end+0xfffe19f4>
10101f28:	d8803717 	ldw	r2,220(sp)
10101f2c:	d9003417 	ldw	r4,208(sp)
10101f30:	d9403717 	ldw	r5,220(sp)
10101f34:	1887883a 	add	r3,r3,r2
10101f38:	d8801f17 	ldw	r2,124(sp)
10101f3c:	41000015 	stw	r4,0(r8)
10101f40:	41400115 	stw	r5,4(r8)
10101f44:	10800044 	addi	r2,r2,1
10101f48:	d8c02015 	stw	r3,128(sp)
10101f4c:	d8801f15 	stw	r2,124(sp)
10101f50:	010001c4 	movi	r4,7
10101f54:	20832916 	blt	r4,r2,10102bfc <___vfprintf_internal_r+0x1c1c>
10101f58:	42000204 	addi	r8,r8,8
10101f5c:	d8803317 	ldw	r2,204(sp)
10101f60:	143fffc4 	addi	r16,r2,-1
10101f64:	043ea30e 	bge	zero,r16,101019f4 <__alt_data_end+0xfffe19f4>
10101f68:	04400404 	movi	r17,16
10101f6c:	d8801f17 	ldw	r2,124(sp)
10101f70:	8c00880e 	bge	r17,r16,10102194 <___vfprintf_internal_r+0x11b4>
10101f74:	01440474 	movhi	r5,4113
10101f78:	29419c84 	addi	r5,r5,1650
10101f7c:	d9402c15 	stw	r5,176(sp)
10101f80:	058001c4 	movi	r22,7
10101f84:	dcc02d17 	ldw	r19,180(sp)
10101f88:	00000306 	br	10101f98 <___vfprintf_internal_r+0xfb8>
10101f8c:	42000204 	addi	r8,r8,8
10101f90:	843ffc04 	addi	r16,r16,-16
10101f94:	8c00820e 	bge	r17,r16,101021a0 <___vfprintf_internal_r+0x11c0>
10101f98:	18c00404 	addi	r3,r3,16
10101f9c:	10800044 	addi	r2,r2,1
10101fa0:	45000015 	stw	r20,0(r8)
10101fa4:	44400115 	stw	r17,4(r8)
10101fa8:	d8c02015 	stw	r3,128(sp)
10101fac:	d8801f15 	stw	r2,124(sp)
10101fb0:	b0bff60e 	bge	r22,r2,10101f8c <__alt_data_end+0xfffe1f8c>
10101fb4:	d9801e04 	addi	r6,sp,120
10101fb8:	b80b883a 	mov	r5,r23
10101fbc:	9809883a 	mov	r4,r19
10101fc0:	01086780 	call	10108678 <__sprint_r>
10101fc4:	103d0a1e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10101fc8:	d8c02017 	ldw	r3,128(sp)
10101fcc:	d8801f17 	ldw	r2,124(sp)
10101fd0:	da000404 	addi	r8,sp,16
10101fd4:	003fee06 	br	10101f90 <__alt_data_end+0xfffe1f90>
10101fd8:	d9403117 	ldw	r5,196(sp)
10101fdc:	d8802917 	ldw	r2,164(sp)
10101fe0:	28adc83a 	sub	r22,r5,r2
10101fe4:	05be410e 	bge	zero,r22,101018ec <__alt_data_end+0xfffe18ec>
10101fe8:	07000404 	movi	fp,16
10101fec:	d8801f17 	ldw	r2,124(sp)
10101ff0:	e5838f0e 	bge	fp,r22,10102e30 <___vfprintf_internal_r+0x1e50>
10101ff4:	01440474 	movhi	r5,4113
10101ff8:	29419c84 	addi	r5,r5,1650
10101ffc:	dc403015 	stw	r17,192(sp)
10102000:	d9402c15 	stw	r5,176(sp)
10102004:	b023883a 	mov	r17,r22
10102008:	04c001c4 	movi	r19,7
1010200c:	a82d883a 	mov	r22,r21
10102010:	902b883a 	mov	r21,r18
10102014:	8025883a 	mov	r18,r16
10102018:	dc002d17 	ldw	r16,180(sp)
1010201c:	00000306 	br	1010202c <___vfprintf_internal_r+0x104c>
10102020:	8c7ffc04 	addi	r17,r17,-16
10102024:	42000204 	addi	r8,r8,8
10102028:	e440110e 	bge	fp,r17,10102070 <___vfprintf_internal_r+0x1090>
1010202c:	18c00404 	addi	r3,r3,16
10102030:	10800044 	addi	r2,r2,1
10102034:	45000015 	stw	r20,0(r8)
10102038:	47000115 	stw	fp,4(r8)
1010203c:	d8c02015 	stw	r3,128(sp)
10102040:	d8801f15 	stw	r2,124(sp)
10102044:	98bff60e 	bge	r19,r2,10102020 <__alt_data_end+0xfffe2020>
10102048:	d9801e04 	addi	r6,sp,120
1010204c:	b80b883a 	mov	r5,r23
10102050:	8009883a 	mov	r4,r16
10102054:	01086780 	call	10108678 <__sprint_r>
10102058:	103ce51e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
1010205c:	8c7ffc04 	addi	r17,r17,-16
10102060:	d8c02017 	ldw	r3,128(sp)
10102064:	d8801f17 	ldw	r2,124(sp)
10102068:	da000404 	addi	r8,sp,16
1010206c:	e47fef16 	blt	fp,r17,1010202c <__alt_data_end+0xfffe202c>
10102070:	9021883a 	mov	r16,r18
10102074:	a825883a 	mov	r18,r21
10102078:	b02b883a 	mov	r21,r22
1010207c:	882d883a 	mov	r22,r17
10102080:	dc403017 	ldw	r17,192(sp)
10102084:	d9002c17 	ldw	r4,176(sp)
10102088:	1d87883a 	add	r3,r3,r22
1010208c:	10800044 	addi	r2,r2,1
10102090:	41000015 	stw	r4,0(r8)
10102094:	45800115 	stw	r22,4(r8)
10102098:	d8c02015 	stw	r3,128(sp)
1010209c:	d8801f15 	stw	r2,124(sp)
101020a0:	010001c4 	movi	r4,7
101020a4:	20818e16 	blt	r4,r2,101026e0 <___vfprintf_internal_r+0x1700>
101020a8:	42000204 	addi	r8,r8,8
101020ac:	003e0f06 	br	101018ec <__alt_data_end+0xfffe18ec>
101020b0:	d9403317 	ldw	r5,204(sp)
101020b4:	00800044 	movi	r2,1
101020b8:	18c00044 	addi	r3,r3,1
101020bc:	1141530e 	bge	r2,r5,1010260c <___vfprintf_internal_r+0x162c>
101020c0:	dc401f17 	ldw	r17,124(sp)
101020c4:	00800044 	movi	r2,1
101020c8:	40800115 	stw	r2,4(r8)
101020cc:	8c400044 	addi	r17,r17,1
101020d0:	44000015 	stw	r16,0(r8)
101020d4:	d8c02015 	stw	r3,128(sp)
101020d8:	dc401f15 	stw	r17,124(sp)
101020dc:	008001c4 	movi	r2,7
101020e0:	14416b16 	blt	r2,r17,10102690 <___vfprintf_internal_r+0x16b0>
101020e4:	42000204 	addi	r8,r8,8
101020e8:	d8803717 	ldw	r2,220(sp)
101020ec:	d9003417 	ldw	r4,208(sp)
101020f0:	8c400044 	addi	r17,r17,1
101020f4:	10c7883a 	add	r3,r2,r3
101020f8:	40800115 	stw	r2,4(r8)
101020fc:	41000015 	stw	r4,0(r8)
10102100:	d8c02015 	stw	r3,128(sp)
10102104:	dc401f15 	stw	r17,124(sp)
10102108:	008001c4 	movi	r2,7
1010210c:	14416916 	blt	r2,r17,101026b4 <___vfprintf_internal_r+0x16d4>
10102110:	45800204 	addi	r22,r8,8
10102114:	d9003617 	ldw	r4,216(sp)
10102118:	d9403817 	ldw	r5,224(sp)
1010211c:	000d883a 	mov	r6,zero
10102120:	000f883a 	mov	r7,zero
10102124:	d8c03c15 	stw	r3,240(sp)
10102128:	010c3fc0 	call	1010c3fc <__eqdf2>
1010212c:	d8c03c17 	ldw	r3,240(sp)
10102130:	1000bc26 	beq	r2,zero,10102424 <___vfprintf_internal_r+0x1444>
10102134:	d9403317 	ldw	r5,204(sp)
10102138:	84000044 	addi	r16,r16,1
1010213c:	8c400044 	addi	r17,r17,1
10102140:	28bfffc4 	addi	r2,r5,-1
10102144:	1887883a 	add	r3,r3,r2
10102148:	b0800115 	stw	r2,4(r22)
1010214c:	b4000015 	stw	r16,0(r22)
10102150:	d8c02015 	stw	r3,128(sp)
10102154:	dc401f15 	stw	r17,124(sp)
10102158:	008001c4 	movi	r2,7
1010215c:	14414316 	blt	r2,r17,1010266c <___vfprintf_internal_r+0x168c>
10102160:	b5800204 	addi	r22,r22,8
10102164:	d9003a17 	ldw	r4,232(sp)
10102168:	df0022c4 	addi	fp,sp,139
1010216c:	8c400044 	addi	r17,r17,1
10102170:	20c7883a 	add	r3,r4,r3
10102174:	b7000015 	stw	fp,0(r22)
10102178:	b1000115 	stw	r4,4(r22)
1010217c:	d8c02015 	stw	r3,128(sp)
10102180:	dc401f15 	stw	r17,124(sp)
10102184:	008001c4 	movi	r2,7
10102188:	14400e16 	blt	r2,r17,101021c4 <___vfprintf_internal_r+0x11e4>
1010218c:	b2000204 	addi	r8,r22,8
10102190:	003e1806 	br	101019f4 <__alt_data_end+0xfffe19f4>
10102194:	01040474 	movhi	r4,4113
10102198:	21019c84 	addi	r4,r4,1650
1010219c:	d9002c15 	stw	r4,176(sp)
101021a0:	d9002c17 	ldw	r4,176(sp)
101021a4:	1c07883a 	add	r3,r3,r16
101021a8:	44000115 	stw	r16,4(r8)
101021ac:	41000015 	stw	r4,0(r8)
101021b0:	10800044 	addi	r2,r2,1
101021b4:	d8c02015 	stw	r3,128(sp)
101021b8:	d8801f15 	stw	r2,124(sp)
101021bc:	010001c4 	movi	r4,7
101021c0:	20be0b0e 	bge	r4,r2,101019f0 <__alt_data_end+0xfffe19f0>
101021c4:	d9002d17 	ldw	r4,180(sp)
101021c8:	d9801e04 	addi	r6,sp,120
101021cc:	b80b883a 	mov	r5,r23
101021d0:	01086780 	call	10108678 <__sprint_r>
101021d4:	103c861e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
101021d8:	d8c02017 	ldw	r3,128(sp)
101021dc:	da000404 	addi	r8,sp,16
101021e0:	003e0406 	br	101019f4 <__alt_data_end+0xfffe19f4>
101021e4:	d9002d17 	ldw	r4,180(sp)
101021e8:	d9801e04 	addi	r6,sp,120
101021ec:	b80b883a 	mov	r5,r23
101021f0:	01086780 	call	10108678 <__sprint_r>
101021f4:	103e3b26 	beq	r2,zero,10101ae4 <__alt_data_end+0xfffe1ae4>
101021f8:	003c7d06 	br	101013f0 <__alt_data_end+0xfffe13f0>
101021fc:	d9002d17 	ldw	r4,180(sp)
10102200:	d9801e04 	addi	r6,sp,120
10102204:	b80b883a 	mov	r5,r23
10102208:	01086780 	call	10108678 <__sprint_r>
1010220c:	103c781e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102210:	d8c02017 	ldw	r3,128(sp)
10102214:	da000404 	addi	r8,sp,16
10102218:	003de906 	br	101019c0 <__alt_data_end+0xfffe19c0>
1010221c:	d9002d17 	ldw	r4,180(sp)
10102220:	d9801e04 	addi	r6,sp,120
10102224:	b80b883a 	mov	r5,r23
10102228:	01086780 	call	10108678 <__sprint_r>
1010222c:	103c701e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102230:	d8c02017 	ldw	r3,128(sp)
10102234:	da000404 	addi	r8,sp,16
10102238:	003d9b06 	br	101018a8 <__alt_data_end+0xfffe18a8>
1010223c:	d9002d17 	ldw	r4,180(sp)
10102240:	d9801e04 	addi	r6,sp,120
10102244:	b80b883a 	mov	r5,r23
10102248:	01086780 	call	10108678 <__sprint_r>
1010224c:	103c681e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102250:	d8c02017 	ldw	r3,128(sp)
10102254:	da000404 	addi	r8,sp,16
10102258:	003da106 	br	101018e0 <__alt_data_end+0xfffe18e0>
1010225c:	d9402a17 	ldw	r5,168(sp)
10102260:	d8002785 	stb	zero,158(sp)
10102264:	283f0616 	blt	r5,zero,10101e80 <__alt_data_end+0xfffe1e80>
10102268:	00ffdfc4 	movi	r3,-129
1010226c:	9d84b03a 	or	r2,r19,r22
10102270:	90e4703a 	and	r18,r18,r3
10102274:	103c3b26 	beq	r2,zero,10101364 <__alt_data_end+0xfffe1364>
10102278:	0039883a 	mov	fp,zero
1010227c:	003e5806 	br	10101be0 <__alt_data_end+0xfffe1be0>
10102280:	9080040c 	andi	r2,r18,16
10102284:	1001b326 	beq	r2,zero,10102954 <___vfprintf_internal_r+0x1974>
10102288:	d8c02e17 	ldw	r3,184(sp)
1010228c:	d9002a17 	ldw	r4,168(sp)
10102290:	d8002785 	stb	zero,158(sp)
10102294:	18800104 	addi	r2,r3,4
10102298:	1cc00017 	ldw	r19,0(r3)
1010229c:	002d883a 	mov	r22,zero
101022a0:	2001b516 	blt	r4,zero,10102978 <___vfprintf_internal_r+0x1998>
101022a4:	00ffdfc4 	movi	r3,-129
101022a8:	d8802e15 	stw	r2,184(sp)
101022ac:	90e4703a 	and	r18,r18,r3
101022b0:	983d0526 	beq	r19,zero,101016c8 <__alt_data_end+0xfffe16c8>
101022b4:	0039883a 	mov	fp,zero
101022b8:	003d0806 	br	101016dc <__alt_data_end+0xfffe16dc>
101022bc:	dc402617 	ldw	r17,152(sp)
101022c0:	0441d30e 	bge	zero,r17,10102a10 <___vfprintf_internal_r+0x1a30>
101022c4:	dc403217 	ldw	r17,200(sp)
101022c8:	d8803317 	ldw	r2,204(sp)
101022cc:	1440010e 	bge	r2,r17,101022d4 <___vfprintf_internal_r+0x12f4>
101022d0:	1023883a 	mov	r17,r2
101022d4:	04400a0e 	bge	zero,r17,10102300 <___vfprintf_internal_r+0x1320>
101022d8:	d8801f17 	ldw	r2,124(sp)
101022dc:	1c47883a 	add	r3,r3,r17
101022e0:	44000015 	stw	r16,0(r8)
101022e4:	10800044 	addi	r2,r2,1
101022e8:	44400115 	stw	r17,4(r8)
101022ec:	d8c02015 	stw	r3,128(sp)
101022f0:	d8801f15 	stw	r2,124(sp)
101022f4:	010001c4 	movi	r4,7
101022f8:	20826516 	blt	r4,r2,10102c90 <___vfprintf_internal_r+0x1cb0>
101022fc:	42000204 	addi	r8,r8,8
10102300:	88026116 	blt	r17,zero,10102c88 <___vfprintf_internal_r+0x1ca8>
10102304:	d9003217 	ldw	r4,200(sp)
10102308:	2463c83a 	sub	r17,r4,r17
1010230c:	04407b0e 	bge	zero,r17,101024fc <___vfprintf_internal_r+0x151c>
10102310:	05800404 	movi	r22,16
10102314:	d8801f17 	ldw	r2,124(sp)
10102318:	b4419d0e 	bge	r22,r17,10102990 <___vfprintf_internal_r+0x19b0>
1010231c:	01040474 	movhi	r4,4113
10102320:	21019c84 	addi	r4,r4,1650
10102324:	d9002c15 	stw	r4,176(sp)
10102328:	070001c4 	movi	fp,7
1010232c:	dcc02d17 	ldw	r19,180(sp)
10102330:	00000306 	br	10102340 <___vfprintf_internal_r+0x1360>
10102334:	42000204 	addi	r8,r8,8
10102338:	8c7ffc04 	addi	r17,r17,-16
1010233c:	b441970e 	bge	r22,r17,1010299c <___vfprintf_internal_r+0x19bc>
10102340:	18c00404 	addi	r3,r3,16
10102344:	10800044 	addi	r2,r2,1
10102348:	45000015 	stw	r20,0(r8)
1010234c:	45800115 	stw	r22,4(r8)
10102350:	d8c02015 	stw	r3,128(sp)
10102354:	d8801f15 	stw	r2,124(sp)
10102358:	e0bff60e 	bge	fp,r2,10102334 <__alt_data_end+0xfffe2334>
1010235c:	d9801e04 	addi	r6,sp,120
10102360:	b80b883a 	mov	r5,r23
10102364:	9809883a 	mov	r4,r19
10102368:	01086780 	call	10108678 <__sprint_r>
1010236c:	103c201e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102370:	d8c02017 	ldw	r3,128(sp)
10102374:	d8801f17 	ldw	r2,124(sp)
10102378:	da000404 	addi	r8,sp,16
1010237c:	003fee06 	br	10102338 <__alt_data_end+0xfffe2338>
10102380:	d9002d17 	ldw	r4,180(sp)
10102384:	d9801e04 	addi	r6,sp,120
10102388:	b80b883a 	mov	r5,r23
1010238c:	01086780 	call	10108678 <__sprint_r>
10102390:	103c171e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102394:	d8c02017 	ldw	r3,128(sp)
10102398:	df002787 	ldb	fp,158(sp)
1010239c:	da000404 	addi	r8,sp,16
101023a0:	003d3406 	br	10101874 <__alt_data_end+0xfffe1874>
101023a4:	9080040c 	andi	r2,r18,16
101023a8:	10016126 	beq	r2,zero,10102930 <___vfprintf_internal_r+0x1950>
101023ac:	d9402e17 	ldw	r5,184(sp)
101023b0:	2cc00017 	ldw	r19,0(r5)
101023b4:	29400104 	addi	r5,r5,4
101023b8:	d9402e15 	stw	r5,184(sp)
101023bc:	982dd7fa 	srai	r22,r19,31
101023c0:	b005883a 	mov	r2,r22
101023c4:	003c5a06 	br	10101530 <__alt_data_end+0xfffe1530>
101023c8:	9080040c 	andi	r2,r18,16
101023cc:	10003526 	beq	r2,zero,101024a4 <___vfprintf_internal_r+0x14c4>
101023d0:	d8c02e17 	ldw	r3,184(sp)
101023d4:	d9002a17 	ldw	r4,168(sp)
101023d8:	d8002785 	stb	zero,158(sp)
101023dc:	18800104 	addi	r2,r3,4
101023e0:	1cc00017 	ldw	r19,0(r3)
101023e4:	002d883a 	mov	r22,zero
101023e8:	20003716 	blt	r4,zero,101024c8 <___vfprintf_internal_r+0x14e8>
101023ec:	00ffdfc4 	movi	r3,-129
101023f0:	d8802e15 	stw	r2,184(sp)
101023f4:	90e4703a 	and	r18,r18,r3
101023f8:	0039883a 	mov	fp,zero
101023fc:	983dd426 	beq	r19,zero,10101b50 <__alt_data_end+0xfffe1b50>
10102400:	00800244 	movi	r2,9
10102404:	14fc5336 	bltu	r2,r19,10101554 <__alt_data_end+0xfffe1554>
10102408:	d8c02817 	ldw	r3,160(sp)
1010240c:	dc001dc4 	addi	r16,sp,119
10102410:	9cc00c04 	addi	r19,r19,48
10102414:	1c07c83a 	sub	r3,r3,r16
10102418:	dcc01dc5 	stb	r19,119(sp)
1010241c:	d8c02b15 	stw	r3,172(sp)
10102420:	003cc606 	br	1010173c <__alt_data_end+0xfffe173c>
10102424:	d8803317 	ldw	r2,204(sp)
10102428:	143fffc4 	addi	r16,r2,-1
1010242c:	043f4d0e 	bge	zero,r16,10102164 <__alt_data_end+0xfffe2164>
10102430:	07000404 	movi	fp,16
10102434:	e400810e 	bge	fp,r16,1010263c <___vfprintf_internal_r+0x165c>
10102438:	01440474 	movhi	r5,4113
1010243c:	29419c84 	addi	r5,r5,1650
10102440:	d9402c15 	stw	r5,176(sp)
10102444:	01c001c4 	movi	r7,7
10102448:	dcc02d17 	ldw	r19,180(sp)
1010244c:	00000306 	br	1010245c <___vfprintf_internal_r+0x147c>
10102450:	b5800204 	addi	r22,r22,8
10102454:	843ffc04 	addi	r16,r16,-16
10102458:	e4007b0e 	bge	fp,r16,10102648 <___vfprintf_internal_r+0x1668>
1010245c:	18c00404 	addi	r3,r3,16
10102460:	8c400044 	addi	r17,r17,1
10102464:	b5000015 	stw	r20,0(r22)
10102468:	b7000115 	stw	fp,4(r22)
1010246c:	d8c02015 	stw	r3,128(sp)
10102470:	dc401f15 	stw	r17,124(sp)
10102474:	3c7ff60e 	bge	r7,r17,10102450 <__alt_data_end+0xfffe2450>
10102478:	d9801e04 	addi	r6,sp,120
1010247c:	b80b883a 	mov	r5,r23
10102480:	9809883a 	mov	r4,r19
10102484:	d9c03c15 	stw	r7,240(sp)
10102488:	01086780 	call	10108678 <__sprint_r>
1010248c:	d9c03c17 	ldw	r7,240(sp)
10102490:	103bd71e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102494:	d8c02017 	ldw	r3,128(sp)
10102498:	dc401f17 	ldw	r17,124(sp)
1010249c:	dd800404 	addi	r22,sp,16
101024a0:	003fec06 	br	10102454 <__alt_data_end+0xfffe2454>
101024a4:	9080100c 	andi	r2,r18,64
101024a8:	d8002785 	stb	zero,158(sp)
101024ac:	10010e26 	beq	r2,zero,101028e8 <___vfprintf_internal_r+0x1908>
101024b0:	d9402e17 	ldw	r5,184(sp)
101024b4:	d8c02a17 	ldw	r3,168(sp)
101024b8:	002d883a 	mov	r22,zero
101024bc:	28800104 	addi	r2,r5,4
101024c0:	2cc0000b 	ldhu	r19,0(r5)
101024c4:	183fc90e 	bge	r3,zero,101023ec <__alt_data_end+0xfffe23ec>
101024c8:	d8802e15 	stw	r2,184(sp)
101024cc:	0039883a 	mov	fp,zero
101024d0:	9d84b03a 	or	r2,r19,r22
101024d4:	103c1e1e 	bne	r2,zero,10101550 <__alt_data_end+0xfffe1550>
101024d8:	00800044 	movi	r2,1
101024dc:	003e6c06 	br	10101e90 <__alt_data_end+0xfffe1e90>
101024e0:	d9002d17 	ldw	r4,180(sp)
101024e4:	d9801e04 	addi	r6,sp,120
101024e8:	b80b883a 	mov	r5,r23
101024ec:	01086780 	call	10108678 <__sprint_r>
101024f0:	103bbf1e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
101024f4:	d8c02017 	ldw	r3,128(sp)
101024f8:	da000404 	addi	r8,sp,16
101024fc:	d9003217 	ldw	r4,200(sp)
10102500:	d8802617 	ldw	r2,152(sp)
10102504:	d9403317 	ldw	r5,204(sp)
10102508:	8123883a 	add	r17,r16,r4
1010250c:	11400216 	blt	r2,r5,10102518 <___vfprintf_internal_r+0x1538>
10102510:	9100004c 	andi	r4,r18,1
10102514:	20000d26 	beq	r4,zero,1010254c <___vfprintf_internal_r+0x156c>
10102518:	d9003717 	ldw	r4,220(sp)
1010251c:	d9403417 	ldw	r5,208(sp)
10102520:	1907883a 	add	r3,r3,r4
10102524:	d9001f17 	ldw	r4,124(sp)
10102528:	41400015 	stw	r5,0(r8)
1010252c:	d9403717 	ldw	r5,220(sp)
10102530:	21000044 	addi	r4,r4,1
10102534:	d8c02015 	stw	r3,128(sp)
10102538:	41400115 	stw	r5,4(r8)
1010253c:	d9001f15 	stw	r4,124(sp)
10102540:	014001c4 	movi	r5,7
10102544:	2901e816 	blt	r5,r4,10102ce8 <___vfprintf_internal_r+0x1d08>
10102548:	42000204 	addi	r8,r8,8
1010254c:	d9003317 	ldw	r4,204(sp)
10102550:	8121883a 	add	r16,r16,r4
10102554:	2085c83a 	sub	r2,r4,r2
10102558:	8461c83a 	sub	r16,r16,r17
1010255c:	1400010e 	bge	r2,r16,10102564 <___vfprintf_internal_r+0x1584>
10102560:	1021883a 	mov	r16,r2
10102564:	04000a0e 	bge	zero,r16,10102590 <___vfprintf_internal_r+0x15b0>
10102568:	d9001f17 	ldw	r4,124(sp)
1010256c:	1c07883a 	add	r3,r3,r16
10102570:	44400015 	stw	r17,0(r8)
10102574:	21000044 	addi	r4,r4,1
10102578:	44000115 	stw	r16,4(r8)
1010257c:	d8c02015 	stw	r3,128(sp)
10102580:	d9001f15 	stw	r4,124(sp)
10102584:	014001c4 	movi	r5,7
10102588:	2901fb16 	blt	r5,r4,10102d78 <___vfprintf_internal_r+0x1d98>
1010258c:	42000204 	addi	r8,r8,8
10102590:	8001f716 	blt	r16,zero,10102d70 <___vfprintf_internal_r+0x1d90>
10102594:	1421c83a 	sub	r16,r2,r16
10102598:	043d160e 	bge	zero,r16,101019f4 <__alt_data_end+0xfffe19f4>
1010259c:	04400404 	movi	r17,16
101025a0:	d8801f17 	ldw	r2,124(sp)
101025a4:	8c3efb0e 	bge	r17,r16,10102194 <__alt_data_end+0xfffe2194>
101025a8:	01440474 	movhi	r5,4113
101025ac:	29419c84 	addi	r5,r5,1650
101025b0:	d9402c15 	stw	r5,176(sp)
101025b4:	058001c4 	movi	r22,7
101025b8:	dcc02d17 	ldw	r19,180(sp)
101025bc:	00000306 	br	101025cc <___vfprintf_internal_r+0x15ec>
101025c0:	42000204 	addi	r8,r8,8
101025c4:	843ffc04 	addi	r16,r16,-16
101025c8:	8c3ef50e 	bge	r17,r16,101021a0 <__alt_data_end+0xfffe21a0>
101025cc:	18c00404 	addi	r3,r3,16
101025d0:	10800044 	addi	r2,r2,1
101025d4:	45000015 	stw	r20,0(r8)
101025d8:	44400115 	stw	r17,4(r8)
101025dc:	d8c02015 	stw	r3,128(sp)
101025e0:	d8801f15 	stw	r2,124(sp)
101025e4:	b0bff60e 	bge	r22,r2,101025c0 <__alt_data_end+0xfffe25c0>
101025e8:	d9801e04 	addi	r6,sp,120
101025ec:	b80b883a 	mov	r5,r23
101025f0:	9809883a 	mov	r4,r19
101025f4:	01086780 	call	10108678 <__sprint_r>
101025f8:	103b7d1e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
101025fc:	d8c02017 	ldw	r3,128(sp)
10102600:	d8801f17 	ldw	r2,124(sp)
10102604:	da000404 	addi	r8,sp,16
10102608:	003fee06 	br	101025c4 <__alt_data_end+0xfffe25c4>
1010260c:	9088703a 	and	r4,r18,r2
10102610:	203eab1e 	bne	r4,zero,101020c0 <__alt_data_end+0xfffe20c0>
10102614:	dc401f17 	ldw	r17,124(sp)
10102618:	40800115 	stw	r2,4(r8)
1010261c:	44000015 	stw	r16,0(r8)
10102620:	8c400044 	addi	r17,r17,1
10102624:	d8c02015 	stw	r3,128(sp)
10102628:	dc401f15 	stw	r17,124(sp)
1010262c:	008001c4 	movi	r2,7
10102630:	14400e16 	blt	r2,r17,1010266c <___vfprintf_internal_r+0x168c>
10102634:	45800204 	addi	r22,r8,8
10102638:	003eca06 	br	10102164 <__alt_data_end+0xfffe2164>
1010263c:	01040474 	movhi	r4,4113
10102640:	21019c84 	addi	r4,r4,1650
10102644:	d9002c15 	stw	r4,176(sp)
10102648:	d8802c17 	ldw	r2,176(sp)
1010264c:	1c07883a 	add	r3,r3,r16
10102650:	8c400044 	addi	r17,r17,1
10102654:	b0800015 	stw	r2,0(r22)
10102658:	b4000115 	stw	r16,4(r22)
1010265c:	d8c02015 	stw	r3,128(sp)
10102660:	dc401f15 	stw	r17,124(sp)
10102664:	008001c4 	movi	r2,7
10102668:	147ebd0e 	bge	r2,r17,10102160 <__alt_data_end+0xfffe2160>
1010266c:	d9002d17 	ldw	r4,180(sp)
10102670:	d9801e04 	addi	r6,sp,120
10102674:	b80b883a 	mov	r5,r23
10102678:	01086780 	call	10108678 <__sprint_r>
1010267c:	103b5c1e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102680:	d8c02017 	ldw	r3,128(sp)
10102684:	dc401f17 	ldw	r17,124(sp)
10102688:	dd800404 	addi	r22,sp,16
1010268c:	003eb506 	br	10102164 <__alt_data_end+0xfffe2164>
10102690:	d9002d17 	ldw	r4,180(sp)
10102694:	d9801e04 	addi	r6,sp,120
10102698:	b80b883a 	mov	r5,r23
1010269c:	01086780 	call	10108678 <__sprint_r>
101026a0:	103b531e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
101026a4:	d8c02017 	ldw	r3,128(sp)
101026a8:	dc401f17 	ldw	r17,124(sp)
101026ac:	da000404 	addi	r8,sp,16
101026b0:	003e8d06 	br	101020e8 <__alt_data_end+0xfffe20e8>
101026b4:	d9002d17 	ldw	r4,180(sp)
101026b8:	d9801e04 	addi	r6,sp,120
101026bc:	b80b883a 	mov	r5,r23
101026c0:	01086780 	call	10108678 <__sprint_r>
101026c4:	103b4a1e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
101026c8:	d8c02017 	ldw	r3,128(sp)
101026cc:	dc401f17 	ldw	r17,124(sp)
101026d0:	dd800404 	addi	r22,sp,16
101026d4:	003e8f06 	br	10102114 <__alt_data_end+0xfffe2114>
101026d8:	0027883a 	mov	r19,zero
101026dc:	003f4a06 	br	10102408 <__alt_data_end+0xfffe2408>
101026e0:	d9002d17 	ldw	r4,180(sp)
101026e4:	d9801e04 	addi	r6,sp,120
101026e8:	b80b883a 	mov	r5,r23
101026ec:	01086780 	call	10108678 <__sprint_r>
101026f0:	103b3f1e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
101026f4:	d8c02017 	ldw	r3,128(sp)
101026f8:	da000404 	addi	r8,sp,16
101026fc:	003c7b06 	br	101018ec <__alt_data_end+0xfffe18ec>
10102700:	d9402a17 	ldw	r5,168(sp)
10102704:	04e7c83a 	sub	r19,zero,r19
10102708:	07000b44 	movi	fp,45
1010270c:	9804c03a 	cmpne	r2,r19,zero
10102710:	05adc83a 	sub	r22,zero,r22
10102714:	df002785 	stb	fp,158(sp)
10102718:	b0adc83a 	sub	r22,r22,r2
1010271c:	28017b16 	blt	r5,zero,10102d0c <___vfprintf_internal_r+0x1d2c>
10102720:	00bfdfc4 	movi	r2,-129
10102724:	90a4703a 	and	r18,r18,r2
10102728:	003b8906 	br	10101550 <__alt_data_end+0xfffe1550>
1010272c:	d9003617 	ldw	r4,216(sp)
10102730:	d9403817 	ldw	r5,224(sp)
10102734:	da003d15 	stw	r8,244(sp)
10102738:	010829c0 	call	1010829c <__fpclassifyd>
1010273c:	da003d17 	ldw	r8,244(sp)
10102740:	1000f026 	beq	r2,zero,10102b04 <___vfprintf_internal_r+0x1b24>
10102744:	d9002a17 	ldw	r4,168(sp)
10102748:	05bff7c4 	movi	r22,-33
1010274c:	00bfffc4 	movi	r2,-1
10102750:	8dac703a 	and	r22,r17,r22
10102754:	20820026 	beq	r4,r2,10102f58 <___vfprintf_internal_r+0x1f78>
10102758:	008011c4 	movi	r2,71
1010275c:	b081f726 	beq	r22,r2,10102f3c <___vfprintf_internal_r+0x1f5c>
10102760:	d9003817 	ldw	r4,224(sp)
10102764:	90c04014 	ori	r3,r18,256
10102768:	d8c02c15 	stw	r3,176(sp)
1010276c:	20021516 	blt	r4,zero,10102fc4 <___vfprintf_internal_r+0x1fe4>
10102770:	dcc03817 	ldw	r19,224(sp)
10102774:	d8002905 	stb	zero,164(sp)
10102778:	00801984 	movi	r2,102
1010277c:	8881f926 	beq	r17,r2,10102f64 <___vfprintf_internal_r+0x1f84>
10102780:	00801184 	movi	r2,70
10102784:	88821c26 	beq	r17,r2,10102ff8 <___vfprintf_internal_r+0x2018>
10102788:	00801144 	movi	r2,69
1010278c:	b081ef26 	beq	r22,r2,10102f4c <___vfprintf_internal_r+0x1f6c>
10102790:	d8c02a17 	ldw	r3,168(sp)
10102794:	d8802104 	addi	r2,sp,132
10102798:	d8800315 	stw	r2,12(sp)
1010279c:	d9403617 	ldw	r5,216(sp)
101027a0:	d8802504 	addi	r2,sp,148
101027a4:	d9002d17 	ldw	r4,180(sp)
101027a8:	d8800215 	stw	r2,8(sp)
101027ac:	d8802604 	addi	r2,sp,152
101027b0:	d8c00015 	stw	r3,0(sp)
101027b4:	d8800115 	stw	r2,4(sp)
101027b8:	01c00084 	movi	r7,2
101027bc:	980d883a 	mov	r6,r19
101027c0:	d8c03c15 	stw	r3,240(sp)
101027c4:	da003d15 	stw	r8,244(sp)
101027c8:	01037100 	call	10103710 <_dtoa_r>
101027cc:	1021883a 	mov	r16,r2
101027d0:	008019c4 	movi	r2,103
101027d4:	d8c03c17 	ldw	r3,240(sp)
101027d8:	da003d17 	ldw	r8,244(sp)
101027dc:	88817126 	beq	r17,r2,10102da4 <___vfprintf_internal_r+0x1dc4>
101027e0:	008011c4 	movi	r2,71
101027e4:	88829126 	beq	r17,r2,1010322c <___vfprintf_internal_r+0x224c>
101027e8:	80f9883a 	add	fp,r16,r3
101027ec:	d9003617 	ldw	r4,216(sp)
101027f0:	000d883a 	mov	r6,zero
101027f4:	000f883a 	mov	r7,zero
101027f8:	980b883a 	mov	r5,r19
101027fc:	da003d15 	stw	r8,244(sp)
10102800:	010c3fc0 	call	1010c3fc <__eqdf2>
10102804:	da003d17 	ldw	r8,244(sp)
10102808:	10018d26 	beq	r2,zero,10102e40 <___vfprintf_internal_r+0x1e60>
1010280c:	d8802117 	ldw	r2,132(sp)
10102810:	1700062e 	bgeu	r2,fp,1010282c <___vfprintf_internal_r+0x184c>
10102814:	01000c04 	movi	r4,48
10102818:	10c00044 	addi	r3,r2,1
1010281c:	d8c02115 	stw	r3,132(sp)
10102820:	11000005 	stb	r4,0(r2)
10102824:	d8802117 	ldw	r2,132(sp)
10102828:	173ffb36 	bltu	r2,fp,10102818 <__alt_data_end+0xfffe2818>
1010282c:	1405c83a 	sub	r2,r2,r16
10102830:	d8803315 	stw	r2,204(sp)
10102834:	008011c4 	movi	r2,71
10102838:	b0817626 	beq	r22,r2,10102e14 <___vfprintf_internal_r+0x1e34>
1010283c:	00801944 	movi	r2,101
10102840:	1442800e 	bge	r2,r17,10103244 <___vfprintf_internal_r+0x2264>
10102844:	d8c02617 	ldw	r3,152(sp)
10102848:	00801984 	movi	r2,102
1010284c:	d8c03215 	stw	r3,200(sp)
10102850:	8881fe26 	beq	r17,r2,1010304c <___vfprintf_internal_r+0x206c>
10102854:	d8c03217 	ldw	r3,200(sp)
10102858:	d9003317 	ldw	r4,204(sp)
1010285c:	1901dd16 	blt	r3,r4,10102fd4 <___vfprintf_internal_r+0x1ff4>
10102860:	9480004c 	andi	r18,r18,1
10102864:	90022b1e 	bne	r18,zero,10103114 <___vfprintf_internal_r+0x2134>
10102868:	1805883a 	mov	r2,r3
1010286c:	18028316 	blt	r3,zero,1010327c <___vfprintf_internal_r+0x229c>
10102870:	d8c03217 	ldw	r3,200(sp)
10102874:	044019c4 	movi	r17,103
10102878:	d8c02b15 	stw	r3,172(sp)
1010287c:	df002907 	ldb	fp,164(sp)
10102880:	e001531e 	bne	fp,zero,10102dd0 <___vfprintf_internal_r+0x1df0>
10102884:	df002783 	ldbu	fp,158(sp)
10102888:	d8802915 	stw	r2,164(sp)
1010288c:	dc802c17 	ldw	r18,176(sp)
10102890:	d8002a15 	stw	zero,168(sp)
10102894:	003baf06 	br	10101754 <__alt_data_end+0xfffe1754>
10102898:	d8c02e17 	ldw	r3,184(sp)
1010289c:	d9002e17 	ldw	r4,184(sp)
101028a0:	d9402e17 	ldw	r5,184(sp)
101028a4:	18c00017 	ldw	r3,0(r3)
101028a8:	21000117 	ldw	r4,4(r4)
101028ac:	29400204 	addi	r5,r5,8
101028b0:	d8c03615 	stw	r3,216(sp)
101028b4:	d9003815 	stw	r4,224(sp)
101028b8:	d9402e15 	stw	r5,184(sp)
101028bc:	003b5006 	br	10101600 <__alt_data_end+0xfffe1600>
101028c0:	ac400007 	ldb	r17,0(r21)
101028c4:	003a2806 	br	10101168 <__alt_data_end+0xfffe1168>
101028c8:	9080100c 	andi	r2,r18,64
101028cc:	1000a826 	beq	r2,zero,10102b70 <___vfprintf_internal_r+0x1b90>
101028d0:	d8c02e17 	ldw	r3,184(sp)
101028d4:	002d883a 	mov	r22,zero
101028d8:	1cc0000b 	ldhu	r19,0(r3)
101028dc:	18c00104 	addi	r3,r3,4
101028e0:	d8c02e15 	stw	r3,184(sp)
101028e4:	003caf06 	br	10101ba4 <__alt_data_end+0xfffe1ba4>
101028e8:	d9002e17 	ldw	r4,184(sp)
101028ec:	d9402a17 	ldw	r5,168(sp)
101028f0:	002d883a 	mov	r22,zero
101028f4:	20800104 	addi	r2,r4,4
101028f8:	24c00017 	ldw	r19,0(r4)
101028fc:	283ebb0e 	bge	r5,zero,101023ec <__alt_data_end+0xfffe23ec>
10102900:	003ef106 	br	101024c8 <__alt_data_end+0xfffe24c8>
10102904:	9080040c 	andi	r2,r18,16
10102908:	1000921e 	bne	r2,zero,10102b54 <___vfprintf_internal_r+0x1b74>
1010290c:	9480100c 	andi	r18,r18,64
10102910:	90013926 	beq	r18,zero,10102df8 <___vfprintf_internal_r+0x1e18>
10102914:	d9402e17 	ldw	r5,184(sp)
10102918:	d8c02f17 	ldw	r3,188(sp)
1010291c:	28800017 	ldw	r2,0(r5)
10102920:	29400104 	addi	r5,r5,4
10102924:	d9402e15 	stw	r5,184(sp)
10102928:	10c0000d 	sth	r3,0(r2)
1010292c:	0039e406 	br	101010c0 <__alt_data_end+0xfffe10c0>
10102930:	9080100c 	andi	r2,r18,64
10102934:	10008026 	beq	r2,zero,10102b38 <___vfprintf_internal_r+0x1b58>
10102938:	d8802e17 	ldw	r2,184(sp)
1010293c:	14c0000f 	ldh	r19,0(r2)
10102940:	10800104 	addi	r2,r2,4
10102944:	d8802e15 	stw	r2,184(sp)
10102948:	982dd7fa 	srai	r22,r19,31
1010294c:	b005883a 	mov	r2,r22
10102950:	003af706 	br	10101530 <__alt_data_end+0xfffe1530>
10102954:	9080100c 	andi	r2,r18,64
10102958:	d8002785 	stb	zero,158(sp)
1010295c:	10008a1e 	bne	r2,zero,10102b88 <___vfprintf_internal_r+0x1ba8>
10102960:	d9002e17 	ldw	r4,184(sp)
10102964:	d9402a17 	ldw	r5,168(sp)
10102968:	002d883a 	mov	r22,zero
1010296c:	20800104 	addi	r2,r4,4
10102970:	24c00017 	ldw	r19,0(r4)
10102974:	283e4b0e 	bge	r5,zero,101022a4 <__alt_data_end+0xfffe22a4>
10102978:	9d86b03a 	or	r3,r19,r22
1010297c:	d8802e15 	stw	r2,184(sp)
10102980:	183e4c1e 	bne	r3,zero,101022b4 <__alt_data_end+0xfffe22b4>
10102984:	0039883a 	mov	fp,zero
10102988:	0005883a 	mov	r2,zero
1010298c:	003d4006 	br	10101e90 <__alt_data_end+0xfffe1e90>
10102990:	01440474 	movhi	r5,4113
10102994:	29419c84 	addi	r5,r5,1650
10102998:	d9402c15 	stw	r5,176(sp)
1010299c:	d9402c17 	ldw	r5,176(sp)
101029a0:	1c47883a 	add	r3,r3,r17
101029a4:	10800044 	addi	r2,r2,1
101029a8:	41400015 	stw	r5,0(r8)
101029ac:	44400115 	stw	r17,4(r8)
101029b0:	d8c02015 	stw	r3,128(sp)
101029b4:	d8801f15 	stw	r2,124(sp)
101029b8:	010001c4 	movi	r4,7
101029bc:	20bec816 	blt	r4,r2,101024e0 <__alt_data_end+0xfffe24e0>
101029c0:	42000204 	addi	r8,r8,8
101029c4:	003ecd06 	br	101024fc <__alt_data_end+0xfffe24fc>
101029c8:	d9002a17 	ldw	r4,168(sp)
101029cc:	d8002785 	stb	zero,158(sp)
101029d0:	203d2d16 	blt	r4,zero,10101e88 <__alt_data_end+0xfffe1e88>
101029d4:	00bfdfc4 	movi	r2,-129
101029d8:	90a4703a 	and	r18,r18,r2
101029dc:	003a6106 	br	10101364 <__alt_data_end+0xfffe1364>
101029e0:	01040474 	movhi	r4,4113
101029e4:	21019c84 	addi	r4,r4,1650
101029e8:	d9002c15 	stw	r4,176(sp)
101029ec:	003bea06 	br	10101998 <__alt_data_end+0xfffe1998>
101029f0:	d9002d17 	ldw	r4,180(sp)
101029f4:	d9801e04 	addi	r6,sp,120
101029f8:	b80b883a 	mov	r5,r23
101029fc:	01086780 	call	10108678 <__sprint_r>
10102a00:	103a7b1e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102a04:	d8c02017 	ldw	r3,128(sp)
10102a08:	da000404 	addi	r8,sp,16
10102a0c:	003d4106 	br	10101f14 <__alt_data_end+0xfffe1f14>
10102a10:	d8801f17 	ldw	r2,124(sp)
10102a14:	01440474 	movhi	r5,4113
10102a18:	01000044 	movi	r4,1
10102a1c:	18c00044 	addi	r3,r3,1
10102a20:	10800044 	addi	r2,r2,1
10102a24:	29419c04 	addi	r5,r5,1648
10102a28:	41000115 	stw	r4,4(r8)
10102a2c:	41400015 	stw	r5,0(r8)
10102a30:	d8c02015 	stw	r3,128(sp)
10102a34:	d8801f15 	stw	r2,124(sp)
10102a38:	010001c4 	movi	r4,7
10102a3c:	20805c16 	blt	r4,r2,10102bb0 <___vfprintf_internal_r+0x1bd0>
10102a40:	42000204 	addi	r8,r8,8
10102a44:	8800041e 	bne	r17,zero,10102a58 <___vfprintf_internal_r+0x1a78>
10102a48:	d8803317 	ldw	r2,204(sp)
10102a4c:	1000021e 	bne	r2,zero,10102a58 <___vfprintf_internal_r+0x1a78>
10102a50:	9080004c 	andi	r2,r18,1
10102a54:	103be726 	beq	r2,zero,101019f4 <__alt_data_end+0xfffe19f4>
10102a58:	d9003717 	ldw	r4,220(sp)
10102a5c:	d8801f17 	ldw	r2,124(sp)
10102a60:	d9403417 	ldw	r5,208(sp)
10102a64:	20c7883a 	add	r3,r4,r3
10102a68:	10800044 	addi	r2,r2,1
10102a6c:	41000115 	stw	r4,4(r8)
10102a70:	41400015 	stw	r5,0(r8)
10102a74:	d8c02015 	stw	r3,128(sp)
10102a78:	d8801f15 	stw	r2,124(sp)
10102a7c:	010001c4 	movi	r4,7
10102a80:	20812116 	blt	r4,r2,10102f08 <___vfprintf_internal_r+0x1f28>
10102a84:	42000204 	addi	r8,r8,8
10102a88:	0463c83a 	sub	r17,zero,r17
10102a8c:	0440730e 	bge	zero,r17,10102c5c <___vfprintf_internal_r+0x1c7c>
10102a90:	05800404 	movi	r22,16
10102a94:	b440860e 	bge	r22,r17,10102cb0 <___vfprintf_internal_r+0x1cd0>
10102a98:	01440474 	movhi	r5,4113
10102a9c:	29419c84 	addi	r5,r5,1650
10102aa0:	d9402c15 	stw	r5,176(sp)
10102aa4:	070001c4 	movi	fp,7
10102aa8:	dcc02d17 	ldw	r19,180(sp)
10102aac:	00000306 	br	10102abc <___vfprintf_internal_r+0x1adc>
10102ab0:	42000204 	addi	r8,r8,8
10102ab4:	8c7ffc04 	addi	r17,r17,-16
10102ab8:	b440800e 	bge	r22,r17,10102cbc <___vfprintf_internal_r+0x1cdc>
10102abc:	18c00404 	addi	r3,r3,16
10102ac0:	10800044 	addi	r2,r2,1
10102ac4:	45000015 	stw	r20,0(r8)
10102ac8:	45800115 	stw	r22,4(r8)
10102acc:	d8c02015 	stw	r3,128(sp)
10102ad0:	d8801f15 	stw	r2,124(sp)
10102ad4:	e0bff60e 	bge	fp,r2,10102ab0 <__alt_data_end+0xfffe2ab0>
10102ad8:	d9801e04 	addi	r6,sp,120
10102adc:	b80b883a 	mov	r5,r23
10102ae0:	9809883a 	mov	r4,r19
10102ae4:	01086780 	call	10108678 <__sprint_r>
10102ae8:	103a411e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102aec:	d8c02017 	ldw	r3,128(sp)
10102af0:	d8801f17 	ldw	r2,124(sp)
10102af4:	da000404 	addi	r8,sp,16
10102af8:	003fee06 	br	10102ab4 <__alt_data_end+0xfffe2ab4>
10102afc:	00bfffc4 	movi	r2,-1
10102b00:	003a3f06 	br	10101400 <__alt_data_end+0xfffe1400>
10102b04:	008011c4 	movi	r2,71
10102b08:	1440b816 	blt	r2,r17,10102dec <___vfprintf_internal_r+0x1e0c>
10102b0c:	04040474 	movhi	r16,4113
10102b10:	84018e04 	addi	r16,r16,1592
10102b14:	00c000c4 	movi	r3,3
10102b18:	00bfdfc4 	movi	r2,-129
10102b1c:	d8c02915 	stw	r3,164(sp)
10102b20:	90a4703a 	and	r18,r18,r2
10102b24:	df002783 	ldbu	fp,158(sp)
10102b28:	d8c02b15 	stw	r3,172(sp)
10102b2c:	d8002a15 	stw	zero,168(sp)
10102b30:	d8003215 	stw	zero,200(sp)
10102b34:	003b0706 	br	10101754 <__alt_data_end+0xfffe1754>
10102b38:	d8c02e17 	ldw	r3,184(sp)
10102b3c:	1cc00017 	ldw	r19,0(r3)
10102b40:	18c00104 	addi	r3,r3,4
10102b44:	d8c02e15 	stw	r3,184(sp)
10102b48:	982dd7fa 	srai	r22,r19,31
10102b4c:	b005883a 	mov	r2,r22
10102b50:	003a7706 	br	10101530 <__alt_data_end+0xfffe1530>
10102b54:	d8c02e17 	ldw	r3,184(sp)
10102b58:	d9002f17 	ldw	r4,188(sp)
10102b5c:	18800017 	ldw	r2,0(r3)
10102b60:	18c00104 	addi	r3,r3,4
10102b64:	d8c02e15 	stw	r3,184(sp)
10102b68:	11000015 	stw	r4,0(r2)
10102b6c:	00395406 	br	101010c0 <__alt_data_end+0xfffe10c0>
10102b70:	d9002e17 	ldw	r4,184(sp)
10102b74:	002d883a 	mov	r22,zero
10102b78:	24c00017 	ldw	r19,0(r4)
10102b7c:	21000104 	addi	r4,r4,4
10102b80:	d9002e15 	stw	r4,184(sp)
10102b84:	003c0706 	br	10101ba4 <__alt_data_end+0xfffe1ba4>
10102b88:	d9402e17 	ldw	r5,184(sp)
10102b8c:	d8c02a17 	ldw	r3,168(sp)
10102b90:	002d883a 	mov	r22,zero
10102b94:	28800104 	addi	r2,r5,4
10102b98:	2cc0000b 	ldhu	r19,0(r5)
10102b9c:	183dc10e 	bge	r3,zero,101022a4 <__alt_data_end+0xfffe22a4>
10102ba0:	003f7506 	br	10102978 <__alt_data_end+0xfffe2978>
10102ba4:	04040474 	movhi	r16,4113
10102ba8:	84018c04 	addi	r16,r16,1584
10102bac:	003aa706 	br	1010164c <__alt_data_end+0xfffe164c>
10102bb0:	d9002d17 	ldw	r4,180(sp)
10102bb4:	d9801e04 	addi	r6,sp,120
10102bb8:	b80b883a 	mov	r5,r23
10102bbc:	01086780 	call	10108678 <__sprint_r>
10102bc0:	103a0b1e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102bc4:	dc402617 	ldw	r17,152(sp)
10102bc8:	d8c02017 	ldw	r3,128(sp)
10102bcc:	da000404 	addi	r8,sp,16
10102bd0:	003f9c06 	br	10102a44 <__alt_data_end+0xfffe2a44>
10102bd4:	ac400043 	ldbu	r17,1(r21)
10102bd8:	84000814 	ori	r16,r16,32
10102bdc:	ad400044 	addi	r21,r21,1
10102be0:	8c403fcc 	andi	r17,r17,255
10102be4:	8c40201c 	xori	r17,r17,128
10102be8:	8c7fe004 	addi	r17,r17,-128
10102bec:	00395e06 	br	10101168 <__alt_data_end+0xfffe1168>
10102bf0:	d8c02e15 	stw	r3,184(sp)
10102bf4:	0039883a 	mov	fp,zero
10102bf8:	003e3506 	br	101024d0 <__alt_data_end+0xfffe24d0>
10102bfc:	d9002d17 	ldw	r4,180(sp)
10102c00:	d9801e04 	addi	r6,sp,120
10102c04:	b80b883a 	mov	r5,r23
10102c08:	01086780 	call	10108678 <__sprint_r>
10102c0c:	1039f81e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102c10:	d8c02017 	ldw	r3,128(sp)
10102c14:	da000404 	addi	r8,sp,16
10102c18:	003cd006 	br	10101f5c <__alt_data_end+0xfffe1f5c>
10102c1c:	8009883a 	mov	r4,r16
10102c20:	df003d15 	stw	fp,244(sp)
10102c24:	0100f480 	call	10100f48 <strlen>
10102c28:	d8802b15 	stw	r2,172(sp)
10102c2c:	da003d17 	ldw	r8,244(sp)
10102c30:	103c200e 	bge	r2,zero,10101cb4 <__alt_data_end+0xfffe1cb4>
10102c34:	0005883a 	mov	r2,zero
10102c38:	003c1e06 	br	10101cb4 <__alt_data_end+0xfffe1cb4>
10102c3c:	d9002d17 	ldw	r4,180(sp)
10102c40:	d9801e04 	addi	r6,sp,120
10102c44:	b80b883a 	mov	r5,r23
10102c48:	01086780 	call	10108678 <__sprint_r>
10102c4c:	1039e81e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102c50:	d8c02017 	ldw	r3,128(sp)
10102c54:	d8801f17 	ldw	r2,124(sp)
10102c58:	da000404 	addi	r8,sp,16
10102c5c:	d9403317 	ldw	r5,204(sp)
10102c60:	10800044 	addi	r2,r2,1
10102c64:	44000015 	stw	r16,0(r8)
10102c68:	28c7883a 	add	r3,r5,r3
10102c6c:	003b5b06 	br	101019dc <__alt_data_end+0xfffe19dc>
10102c70:	01040474 	movhi	r4,4113
10102c74:	2101a084 	addi	r4,r4,1666
10102c78:	d9003515 	stw	r4,212(sp)
10102c7c:	003af206 	br	10101848 <__alt_data_end+0xfffe1848>
10102c80:	013fffc4 	movi	r4,-1
10102c84:	003a0806 	br	101014a8 <__alt_data_end+0xfffe14a8>
10102c88:	0023883a 	mov	r17,zero
10102c8c:	003d9d06 	br	10102304 <__alt_data_end+0xfffe2304>
10102c90:	d9002d17 	ldw	r4,180(sp)
10102c94:	d9801e04 	addi	r6,sp,120
10102c98:	b80b883a 	mov	r5,r23
10102c9c:	01086780 	call	10108678 <__sprint_r>
10102ca0:	1039d31e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102ca4:	d8c02017 	ldw	r3,128(sp)
10102ca8:	da000404 	addi	r8,sp,16
10102cac:	003d9406 	br	10102300 <__alt_data_end+0xfffe2300>
10102cb0:	01040474 	movhi	r4,4113
10102cb4:	21019c84 	addi	r4,r4,1650
10102cb8:	d9002c15 	stw	r4,176(sp)
10102cbc:	d9002c17 	ldw	r4,176(sp)
10102cc0:	1c47883a 	add	r3,r3,r17
10102cc4:	10800044 	addi	r2,r2,1
10102cc8:	41000015 	stw	r4,0(r8)
10102ccc:	44400115 	stw	r17,4(r8)
10102cd0:	d8c02015 	stw	r3,128(sp)
10102cd4:	d8801f15 	stw	r2,124(sp)
10102cd8:	010001c4 	movi	r4,7
10102cdc:	20bfd716 	blt	r4,r2,10102c3c <__alt_data_end+0xfffe2c3c>
10102ce0:	42000204 	addi	r8,r8,8
10102ce4:	003fdd06 	br	10102c5c <__alt_data_end+0xfffe2c5c>
10102ce8:	d9002d17 	ldw	r4,180(sp)
10102cec:	d9801e04 	addi	r6,sp,120
10102cf0:	b80b883a 	mov	r5,r23
10102cf4:	01086780 	call	10108678 <__sprint_r>
10102cf8:	1039bd1e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102cfc:	d8802617 	ldw	r2,152(sp)
10102d00:	d8c02017 	ldw	r3,128(sp)
10102d04:	da000404 	addi	r8,sp,16
10102d08:	003e1006 	br	1010254c <__alt_data_end+0xfffe254c>
10102d0c:	00800044 	movi	r2,1
10102d10:	10803fcc 	andi	r2,r2,255
10102d14:	00c00044 	movi	r3,1
10102d18:	10fa0d26 	beq	r2,r3,10101550 <__alt_data_end+0xfffe1550>
10102d1c:	00c00084 	movi	r3,2
10102d20:	10fbaf26 	beq	r2,r3,10101be0 <__alt_data_end+0xfffe1be0>
10102d24:	003a6d06 	br	101016dc <__alt_data_end+0xfffe16dc>
10102d28:	01040474 	movhi	r4,4113
10102d2c:	2101a084 	addi	r4,r4,1666
10102d30:	d9003515 	stw	r4,212(sp)
10102d34:	003b5406 	br	10101a88 <__alt_data_end+0xfffe1a88>
10102d38:	d8802a17 	ldw	r2,168(sp)
10102d3c:	00c00184 	movi	r3,6
10102d40:	1880012e 	bgeu	r3,r2,10102d48 <___vfprintf_internal_r+0x1d68>
10102d44:	1805883a 	mov	r2,r3
10102d48:	d8802b15 	stw	r2,172(sp)
10102d4c:	1000ef16 	blt	r2,zero,1010310c <___vfprintf_internal_r+0x212c>
10102d50:	04040474 	movhi	r16,4113
10102d54:	d8802915 	stw	r2,164(sp)
10102d58:	dcc02e15 	stw	r19,184(sp)
10102d5c:	d8002a15 	stw	zero,168(sp)
10102d60:	d8003215 	stw	zero,200(sp)
10102d64:	84019a04 	addi	r16,r16,1640
10102d68:	0039883a 	mov	fp,zero
10102d6c:	003a8006 	br	10101770 <__alt_data_end+0xfffe1770>
10102d70:	0021883a 	mov	r16,zero
10102d74:	003e0706 	br	10102594 <__alt_data_end+0xfffe2594>
10102d78:	d9002d17 	ldw	r4,180(sp)
10102d7c:	d9801e04 	addi	r6,sp,120
10102d80:	b80b883a 	mov	r5,r23
10102d84:	01086780 	call	10108678 <__sprint_r>
10102d88:	1039991e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102d8c:	d8802617 	ldw	r2,152(sp)
10102d90:	d9403317 	ldw	r5,204(sp)
10102d94:	d8c02017 	ldw	r3,128(sp)
10102d98:	da000404 	addi	r8,sp,16
10102d9c:	2885c83a 	sub	r2,r5,r2
10102da0:	003dfb06 	br	10102590 <__alt_data_end+0xfffe2590>
10102da4:	9080004c 	andi	r2,r18,1
10102da8:	103e8f1e 	bne	r2,zero,101027e8 <__alt_data_end+0xfffe27e8>
10102dac:	d8802117 	ldw	r2,132(sp)
10102db0:	003e9e06 	br	1010282c <__alt_data_end+0xfffe282c>
10102db4:	1025883a 	mov	r18,r2
10102db8:	0039883a 	mov	fp,zero
10102dbc:	00800084 	movi	r2,2
10102dc0:	003fd306 	br	10102d10 <__alt_data_end+0xfffe2d10>
10102dc4:	07000b44 	movi	fp,45
10102dc8:	df002785 	stb	fp,158(sp)
10102dcc:	003a1b06 	br	1010163c <__alt_data_end+0xfffe163c>
10102dd0:	00c00b44 	movi	r3,45
10102dd4:	d8c02785 	stb	r3,158(sp)
10102dd8:	d8802915 	stw	r2,164(sp)
10102ddc:	dc802c17 	ldw	r18,176(sp)
10102de0:	d8002a15 	stw	zero,168(sp)
10102de4:	07000b44 	movi	fp,45
10102de8:	003a5e06 	br	10101764 <__alt_data_end+0xfffe1764>
10102dec:	04040474 	movhi	r16,4113
10102df0:	84018f04 	addi	r16,r16,1596
10102df4:	003f4706 	br	10102b14 <__alt_data_end+0xfffe2b14>
10102df8:	d9002e17 	ldw	r4,184(sp)
10102dfc:	d9402f17 	ldw	r5,188(sp)
10102e00:	20800017 	ldw	r2,0(r4)
10102e04:	21000104 	addi	r4,r4,4
10102e08:	d9002e15 	stw	r4,184(sp)
10102e0c:	11400015 	stw	r5,0(r2)
10102e10:	0038ab06 	br	101010c0 <__alt_data_end+0xfffe10c0>
10102e14:	dd802617 	ldw	r22,152(sp)
10102e18:	00bfff44 	movi	r2,-3
10102e1c:	b0801c16 	blt	r22,r2,10102e90 <___vfprintf_internal_r+0x1eb0>
10102e20:	d9402a17 	ldw	r5,168(sp)
10102e24:	2d801a16 	blt	r5,r22,10102e90 <___vfprintf_internal_r+0x1eb0>
10102e28:	dd803215 	stw	r22,200(sp)
10102e2c:	003e8906 	br	10102854 <__alt_data_end+0xfffe2854>
10102e30:	01040474 	movhi	r4,4113
10102e34:	21019c84 	addi	r4,r4,1650
10102e38:	d9002c15 	stw	r4,176(sp)
10102e3c:	003c9106 	br	10102084 <__alt_data_end+0xfffe2084>
10102e40:	e005883a 	mov	r2,fp
10102e44:	003e7906 	br	1010282c <__alt_data_end+0xfffe282c>
10102e48:	d9002a17 	ldw	r4,168(sp)
10102e4c:	df002783 	ldbu	fp,158(sp)
10102e50:	dcc02e15 	stw	r19,184(sp)
10102e54:	d9002915 	stw	r4,164(sp)
10102e58:	d9002b15 	stw	r4,172(sp)
10102e5c:	d8002a15 	stw	zero,168(sp)
10102e60:	d8003215 	stw	zero,200(sp)
10102e64:	003a3b06 	br	10101754 <__alt_data_end+0xfffe1754>
10102e68:	9080004c 	andi	r2,r18,1
10102e6c:	0039883a 	mov	fp,zero
10102e70:	10000426 	beq	r2,zero,10102e84 <___vfprintf_internal_r+0x1ea4>
10102e74:	00800c04 	movi	r2,48
10102e78:	dc001dc4 	addi	r16,sp,119
10102e7c:	d8801dc5 	stb	r2,119(sp)
10102e80:	003b6406 	br	10101c14 <__alt_data_end+0xfffe1c14>
10102e84:	d8002b15 	stw	zero,172(sp)
10102e88:	dc001e04 	addi	r16,sp,120
10102e8c:	003a2b06 	br	1010173c <__alt_data_end+0xfffe173c>
10102e90:	8c7fff84 	addi	r17,r17,-2
10102e94:	b5bfffc4 	addi	r22,r22,-1
10102e98:	dd802615 	stw	r22,152(sp)
10102e9c:	dc4022c5 	stb	r17,139(sp)
10102ea0:	b000bf16 	blt	r22,zero,101031a0 <___vfprintf_internal_r+0x21c0>
10102ea4:	00800ac4 	movi	r2,43
10102ea8:	d8802305 	stb	r2,140(sp)
10102eac:	00800244 	movi	r2,9
10102eb0:	15807016 	blt	r2,r22,10103074 <___vfprintf_internal_r+0x2094>
10102eb4:	00800c04 	movi	r2,48
10102eb8:	b5800c04 	addi	r22,r22,48
10102ebc:	d8802345 	stb	r2,141(sp)
10102ec0:	dd802385 	stb	r22,142(sp)
10102ec4:	d88023c4 	addi	r2,sp,143
10102ec8:	df0022c4 	addi	fp,sp,139
10102ecc:	d8c03317 	ldw	r3,204(sp)
10102ed0:	1739c83a 	sub	fp,r2,fp
10102ed4:	d9003317 	ldw	r4,204(sp)
10102ed8:	e0c7883a 	add	r3,fp,r3
10102edc:	df003a15 	stw	fp,232(sp)
10102ee0:	d8c02b15 	stw	r3,172(sp)
10102ee4:	00800044 	movi	r2,1
10102ee8:	1100b30e 	bge	r2,r4,101031b8 <___vfprintf_internal_r+0x21d8>
10102eec:	d8c02b17 	ldw	r3,172(sp)
10102ef0:	18c00044 	addi	r3,r3,1
10102ef4:	d8c02b15 	stw	r3,172(sp)
10102ef8:	1805883a 	mov	r2,r3
10102efc:	1800ac16 	blt	r3,zero,101031b0 <___vfprintf_internal_r+0x21d0>
10102f00:	d8003215 	stw	zero,200(sp)
10102f04:	003e5d06 	br	1010287c <__alt_data_end+0xfffe287c>
10102f08:	d9002d17 	ldw	r4,180(sp)
10102f0c:	d9801e04 	addi	r6,sp,120
10102f10:	b80b883a 	mov	r5,r23
10102f14:	01086780 	call	10108678 <__sprint_r>
10102f18:	1039351e 	bne	r2,zero,101013f0 <__alt_data_end+0xfffe13f0>
10102f1c:	dc402617 	ldw	r17,152(sp)
10102f20:	d8c02017 	ldw	r3,128(sp)
10102f24:	d8801f17 	ldw	r2,124(sp)
10102f28:	da000404 	addi	r8,sp,16
10102f2c:	003ed606 	br	10102a88 <__alt_data_end+0xfffe2a88>
10102f30:	182b883a 	mov	r21,r3
10102f34:	d8002a15 	stw	zero,168(sp)
10102f38:	00388c06 	br	1010116c <__alt_data_end+0xfffe116c>
10102f3c:	d8802a17 	ldw	r2,168(sp)
10102f40:	103e071e 	bne	r2,zero,10102760 <__alt_data_end+0xfffe2760>
10102f44:	dc002a15 	stw	r16,168(sp)
10102f48:	003e0506 	br	10102760 <__alt_data_end+0xfffe2760>
10102f4c:	d9002a17 	ldw	r4,168(sp)
10102f50:	20c00044 	addi	r3,r4,1
10102f54:	003e0f06 	br	10102794 <__alt_data_end+0xfffe2794>
10102f58:	01400184 	movi	r5,6
10102f5c:	d9402a15 	stw	r5,168(sp)
10102f60:	003dff06 	br	10102760 <__alt_data_end+0xfffe2760>
10102f64:	d8802104 	addi	r2,sp,132
10102f68:	d8800315 	stw	r2,12(sp)
10102f6c:	d8802504 	addi	r2,sp,148
10102f70:	d8800215 	stw	r2,8(sp)
10102f74:	d8802604 	addi	r2,sp,152
10102f78:	d8800115 	stw	r2,4(sp)
10102f7c:	d8802a17 	ldw	r2,168(sp)
10102f80:	d9403617 	ldw	r5,216(sp)
10102f84:	d9002d17 	ldw	r4,180(sp)
10102f88:	d8800015 	stw	r2,0(sp)
10102f8c:	01c000c4 	movi	r7,3
10102f90:	980d883a 	mov	r6,r19
10102f94:	da003d15 	stw	r8,244(sp)
10102f98:	01037100 	call	10103710 <_dtoa_r>
10102f9c:	d8c02a17 	ldw	r3,168(sp)
10102fa0:	da003d17 	ldw	r8,244(sp)
10102fa4:	1021883a 	mov	r16,r2
10102fa8:	10f9883a 	add	fp,r2,r3
10102fac:	81000007 	ldb	r4,0(r16)
10102fb0:	00800c04 	movi	r2,48
10102fb4:	20805e26 	beq	r4,r2,10103130 <___vfprintf_internal_r+0x2150>
10102fb8:	d8c02617 	ldw	r3,152(sp)
10102fbc:	e0f9883a 	add	fp,fp,r3
10102fc0:	003e0a06 	br	101027ec <__alt_data_end+0xfffe27ec>
10102fc4:	00c00b44 	movi	r3,45
10102fc8:	24e0003c 	xorhi	r19,r4,32768
10102fcc:	d8c02905 	stb	r3,164(sp)
10102fd0:	003de906 	br	10102778 <__alt_data_end+0xfffe2778>
10102fd4:	d8c03217 	ldw	r3,200(sp)
10102fd8:	00c07a0e 	bge	zero,r3,101031c4 <___vfprintf_internal_r+0x21e4>
10102fdc:	00800044 	movi	r2,1
10102fe0:	d9003317 	ldw	r4,204(sp)
10102fe4:	1105883a 	add	r2,r2,r4
10102fe8:	d8802b15 	stw	r2,172(sp)
10102fec:	10004e16 	blt	r2,zero,10103128 <___vfprintf_internal_r+0x2148>
10102ff0:	044019c4 	movi	r17,103
10102ff4:	003e2106 	br	1010287c <__alt_data_end+0xfffe287c>
10102ff8:	d9002a17 	ldw	r4,168(sp)
10102ffc:	d8802104 	addi	r2,sp,132
10103000:	d8800315 	stw	r2,12(sp)
10103004:	d9000015 	stw	r4,0(sp)
10103008:	d8802504 	addi	r2,sp,148
1010300c:	d9403617 	ldw	r5,216(sp)
10103010:	d9002d17 	ldw	r4,180(sp)
10103014:	d8800215 	stw	r2,8(sp)
10103018:	d8802604 	addi	r2,sp,152
1010301c:	d8800115 	stw	r2,4(sp)
10103020:	01c000c4 	movi	r7,3
10103024:	980d883a 	mov	r6,r19
10103028:	da003d15 	stw	r8,244(sp)
1010302c:	01037100 	call	10103710 <_dtoa_r>
10103030:	d8c02a17 	ldw	r3,168(sp)
10103034:	da003d17 	ldw	r8,244(sp)
10103038:	1021883a 	mov	r16,r2
1010303c:	00801184 	movi	r2,70
10103040:	80f9883a 	add	fp,r16,r3
10103044:	88bfd926 	beq	r17,r2,10102fac <__alt_data_end+0xfffe2fac>
10103048:	003de806 	br	101027ec <__alt_data_end+0xfffe27ec>
1010304c:	d9002a17 	ldw	r4,168(sp)
10103050:	00c04d0e 	bge	zero,r3,10103188 <___vfprintf_internal_r+0x21a8>
10103054:	2000441e 	bne	r4,zero,10103168 <___vfprintf_internal_r+0x2188>
10103058:	9480004c 	andi	r18,r18,1
1010305c:	9000421e 	bne	r18,zero,10103168 <___vfprintf_internal_r+0x2188>
10103060:	1805883a 	mov	r2,r3
10103064:	18006f16 	blt	r3,zero,10103224 <___vfprintf_internal_r+0x2244>
10103068:	d8c03217 	ldw	r3,200(sp)
1010306c:	d8c02b15 	stw	r3,172(sp)
10103070:	003e0206 	br	1010287c <__alt_data_end+0xfffe287c>
10103074:	df0022c4 	addi	fp,sp,139
10103078:	dc002a15 	stw	r16,168(sp)
1010307c:	4027883a 	mov	r19,r8
10103080:	e021883a 	mov	r16,fp
10103084:	b009883a 	mov	r4,r22
10103088:	01400284 	movi	r5,10
1010308c:	0100b680 	call	10100b68 <__modsi3>
10103090:	10800c04 	addi	r2,r2,48
10103094:	843fffc4 	addi	r16,r16,-1
10103098:	b009883a 	mov	r4,r22
1010309c:	01400284 	movi	r5,10
101030a0:	80800005 	stb	r2,0(r16)
101030a4:	0100ae40 	call	10100ae4 <__divsi3>
101030a8:	102d883a 	mov	r22,r2
101030ac:	00800244 	movi	r2,9
101030b0:	15bff416 	blt	r2,r22,10103084 <__alt_data_end+0xfffe3084>
101030b4:	9811883a 	mov	r8,r19
101030b8:	b0800c04 	addi	r2,r22,48
101030bc:	8027883a 	mov	r19,r16
101030c0:	997fffc4 	addi	r5,r19,-1
101030c4:	98bfffc5 	stb	r2,-1(r19)
101030c8:	dc002a17 	ldw	r16,168(sp)
101030cc:	2f006d2e 	bgeu	r5,fp,10103284 <___vfprintf_internal_r+0x22a4>
101030d0:	d9c02384 	addi	r7,sp,142
101030d4:	3ccfc83a 	sub	r7,r7,r19
101030d8:	d9002344 	addi	r4,sp,141
101030dc:	e1cf883a 	add	r7,fp,r7
101030e0:	00000106 	br	101030e8 <___vfprintf_internal_r+0x2108>
101030e4:	28800003 	ldbu	r2,0(r5)
101030e8:	20800005 	stb	r2,0(r4)
101030ec:	21000044 	addi	r4,r4,1
101030f0:	29400044 	addi	r5,r5,1
101030f4:	393ffb1e 	bne	r7,r4,101030e4 <__alt_data_end+0xfffe30e4>
101030f8:	d8802304 	addi	r2,sp,140
101030fc:	14c5c83a 	sub	r2,r2,r19
10103100:	d8c02344 	addi	r3,sp,141
10103104:	1885883a 	add	r2,r3,r2
10103108:	003f7006 	br	10102ecc <__alt_data_end+0xfffe2ecc>
1010310c:	0005883a 	mov	r2,zero
10103110:	003f0f06 	br	10102d50 <__alt_data_end+0xfffe2d50>
10103114:	d8c03217 	ldw	r3,200(sp)
10103118:	18c00044 	addi	r3,r3,1
1010311c:	d8c02b15 	stw	r3,172(sp)
10103120:	1805883a 	mov	r2,r3
10103124:	183fb20e 	bge	r3,zero,10102ff0 <__alt_data_end+0xfffe2ff0>
10103128:	0005883a 	mov	r2,zero
1010312c:	003fb006 	br	10102ff0 <__alt_data_end+0xfffe2ff0>
10103130:	d9003617 	ldw	r4,216(sp)
10103134:	000d883a 	mov	r6,zero
10103138:	000f883a 	mov	r7,zero
1010313c:	980b883a 	mov	r5,r19
10103140:	d8c03c15 	stw	r3,240(sp)
10103144:	da003d15 	stw	r8,244(sp)
10103148:	010c3fc0 	call	1010c3fc <__eqdf2>
1010314c:	d8c03c17 	ldw	r3,240(sp)
10103150:	da003d17 	ldw	r8,244(sp)
10103154:	103f9826 	beq	r2,zero,10102fb8 <__alt_data_end+0xfffe2fb8>
10103158:	00800044 	movi	r2,1
1010315c:	10c7c83a 	sub	r3,r2,r3
10103160:	d8c02615 	stw	r3,152(sp)
10103164:	003f9506 	br	10102fbc <__alt_data_end+0xfffe2fbc>
10103168:	d9002a17 	ldw	r4,168(sp)
1010316c:	d8c03217 	ldw	r3,200(sp)
10103170:	20800044 	addi	r2,r4,1
10103174:	1885883a 	add	r2,r3,r2
10103178:	d8802b15 	stw	r2,172(sp)
1010317c:	103dbf0e 	bge	r2,zero,1010287c <__alt_data_end+0xfffe287c>
10103180:	0005883a 	mov	r2,zero
10103184:	003dbd06 	br	1010287c <__alt_data_end+0xfffe287c>
10103188:	2000201e 	bne	r4,zero,1010320c <___vfprintf_internal_r+0x222c>
1010318c:	9480004c 	andi	r18,r18,1
10103190:	90001e1e 	bne	r18,zero,1010320c <___vfprintf_internal_r+0x222c>
10103194:	00800044 	movi	r2,1
10103198:	d8802b15 	stw	r2,172(sp)
1010319c:	003db706 	br	1010287c <__alt_data_end+0xfffe287c>
101031a0:	00800b44 	movi	r2,45
101031a4:	05adc83a 	sub	r22,zero,r22
101031a8:	d8802305 	stb	r2,140(sp)
101031ac:	003f3f06 	br	10102eac <__alt_data_end+0xfffe2eac>
101031b0:	0005883a 	mov	r2,zero
101031b4:	003f5206 	br	10102f00 <__alt_data_end+0xfffe2f00>
101031b8:	90a4703a 	and	r18,r18,r2
101031bc:	903f4e26 	beq	r18,zero,10102ef8 <__alt_data_end+0xfffe2ef8>
101031c0:	003f4a06 	br	10102eec <__alt_data_end+0xfffe2eec>
101031c4:	00800084 	movi	r2,2
101031c8:	10c5c83a 	sub	r2,r2,r3
101031cc:	003f8406 	br	10102fe0 <__alt_data_end+0xfffe2fe0>
101031d0:	d9402e17 	ldw	r5,184(sp)
101031d4:	d9002e17 	ldw	r4,184(sp)
101031d8:	ac400043 	ldbu	r17,1(r21)
101031dc:	29400017 	ldw	r5,0(r5)
101031e0:	20800104 	addi	r2,r4,4
101031e4:	d8802e15 	stw	r2,184(sp)
101031e8:	d9402a15 	stw	r5,168(sp)
101031ec:	182b883a 	mov	r21,r3
101031f0:	283e7b0e 	bge	r5,zero,10102be0 <__alt_data_end+0xfffe2be0>
101031f4:	8c403fcc 	andi	r17,r17,255
101031f8:	017fffc4 	movi	r5,-1
101031fc:	8c40201c 	xori	r17,r17,128
10103200:	d9402a15 	stw	r5,168(sp)
10103204:	8c7fe004 	addi	r17,r17,-128
10103208:	0037d706 	br	10101168 <__alt_data_end+0xfffe1168>
1010320c:	d8c02a17 	ldw	r3,168(sp)
10103210:	18c00084 	addi	r3,r3,2
10103214:	d8c02b15 	stw	r3,172(sp)
10103218:	1805883a 	mov	r2,r3
1010321c:	183d970e 	bge	r3,zero,1010287c <__alt_data_end+0xfffe287c>
10103220:	003fd706 	br	10103180 <__alt_data_end+0xfffe3180>
10103224:	0005883a 	mov	r2,zero
10103228:	003f8f06 	br	10103068 <__alt_data_end+0xfffe3068>
1010322c:	9080004c 	andi	r2,r18,1
10103230:	103f821e 	bne	r2,zero,1010303c <__alt_data_end+0xfffe303c>
10103234:	d8802117 	ldw	r2,132(sp)
10103238:	1405c83a 	sub	r2,r2,r16
1010323c:	d8803315 	stw	r2,204(sp)
10103240:	b47ef426 	beq	r22,r17,10102e14 <__alt_data_end+0xfffe2e14>
10103244:	dd802617 	ldw	r22,152(sp)
10103248:	003f1206 	br	10102e94 <__alt_data_end+0xfffe2e94>
1010324c:	d8c02b03 	ldbu	r3,172(sp)
10103250:	d8c02785 	stb	r3,158(sp)
10103254:	0038df06 	br	101015d4 <__alt_data_end+0xfffe15d4>
10103258:	d8c02b03 	ldbu	r3,172(sp)
1010325c:	d8c02785 	stb	r3,158(sp)
10103260:	0038aa06 	br	1010150c <__alt_data_end+0xfffe150c>
10103264:	d8c02b03 	ldbu	r3,172(sp)
10103268:	d8c02785 	stb	r3,158(sp)
1010326c:	003a4306 	br	10101b7c <__alt_data_end+0xfffe1b7c>
10103270:	d8c02b03 	ldbu	r3,172(sp)
10103274:	d8c02785 	stb	r3,158(sp)
10103278:	003af506 	br	10101e50 <__alt_data_end+0xfffe1e50>
1010327c:	0005883a 	mov	r2,zero
10103280:	003d7b06 	br	10102870 <__alt_data_end+0xfffe2870>
10103284:	d8802344 	addi	r2,sp,141
10103288:	003f1006 	br	10102ecc <__alt_data_end+0xfffe2ecc>
1010328c:	d8c02b03 	ldbu	r3,172(sp)
10103290:	d8c02785 	stb	r3,158(sp)
10103294:	0038fd06 	br	1010168c <__alt_data_end+0xfffe168c>
10103298:	d8c02b03 	ldbu	r3,172(sp)
1010329c:	d8c02785 	stb	r3,158(sp)
101032a0:	003a9706 	br	10101d00 <__alt_data_end+0xfffe1d00>
101032a4:	d8c02b03 	ldbu	r3,172(sp)
101032a8:	d8c02785 	stb	r3,158(sp)
101032ac:	003a1806 	br	10101b10 <__alt_data_end+0xfffe1b10>
101032b0:	d8c02b03 	ldbu	r3,172(sp)
101032b4:	d8c02785 	stb	r3,158(sp)
101032b8:	003abe06 	br	10101db4 <__alt_data_end+0xfffe1db4>

101032bc <__vfprintf_internal>:
101032bc:	00840474 	movhi	r2,4113
101032c0:	10890404 	addi	r2,r2,9232
101032c4:	300f883a 	mov	r7,r6
101032c8:	280d883a 	mov	r6,r5
101032cc:	200b883a 	mov	r5,r4
101032d0:	11000017 	ldw	r4,0(r2)
101032d4:	0100fe01 	jmpi	10100fe0 <___vfprintf_internal_r>

101032d8 <__sbprintf>:
101032d8:	2880030b 	ldhu	r2,12(r5)
101032dc:	2ac01917 	ldw	r11,100(r5)
101032e0:	2a80038b 	ldhu	r10,14(r5)
101032e4:	2a400717 	ldw	r9,28(r5)
101032e8:	2a000917 	ldw	r8,36(r5)
101032ec:	defee204 	addi	sp,sp,-1144
101032f0:	00c10004 	movi	r3,1024
101032f4:	dc011a15 	stw	r16,1128(sp)
101032f8:	10bfff4c 	andi	r2,r2,65533
101032fc:	2821883a 	mov	r16,r5
10103300:	d8cb883a 	add	r5,sp,r3
10103304:	dc811c15 	stw	r18,1136(sp)
10103308:	dc411b15 	stw	r17,1132(sp)
1010330c:	dfc11d15 	stw	ra,1140(sp)
10103310:	2025883a 	mov	r18,r4
10103314:	d881030d 	sth	r2,1036(sp)
10103318:	dac11915 	stw	r11,1124(sp)
1010331c:	da81038d 	sth	r10,1038(sp)
10103320:	da410715 	stw	r9,1052(sp)
10103324:	da010915 	stw	r8,1060(sp)
10103328:	dec10015 	stw	sp,1024(sp)
1010332c:	dec10415 	stw	sp,1040(sp)
10103330:	d8c10215 	stw	r3,1032(sp)
10103334:	d8c10515 	stw	r3,1044(sp)
10103338:	d8010615 	stw	zero,1048(sp)
1010333c:	0100fe00 	call	10100fe0 <___vfprintf_internal_r>
10103340:	1023883a 	mov	r17,r2
10103344:	10000416 	blt	r2,zero,10103358 <__sbprintf+0x80>
10103348:	d9410004 	addi	r5,sp,1024
1010334c:	9009883a 	mov	r4,r18
10103350:	0104fb40 	call	10104fb4 <_fflush_r>
10103354:	10000d1e 	bne	r2,zero,1010338c <__sbprintf+0xb4>
10103358:	d881030b 	ldhu	r2,1036(sp)
1010335c:	1080100c 	andi	r2,r2,64
10103360:	10000326 	beq	r2,zero,10103370 <__sbprintf+0x98>
10103364:	8080030b 	ldhu	r2,12(r16)
10103368:	10801014 	ori	r2,r2,64
1010336c:	8080030d 	sth	r2,12(r16)
10103370:	8805883a 	mov	r2,r17
10103374:	dfc11d17 	ldw	ra,1140(sp)
10103378:	dc811c17 	ldw	r18,1136(sp)
1010337c:	dc411b17 	ldw	r17,1132(sp)
10103380:	dc011a17 	ldw	r16,1128(sp)
10103384:	dec11e04 	addi	sp,sp,1144
10103388:	f800283a 	ret
1010338c:	047fffc4 	movi	r17,-1
10103390:	003ff106 	br	10103358 <__alt_data_end+0xfffe3358>

10103394 <__swsetup_r>:
10103394:	00840474 	movhi	r2,4113
10103398:	defffd04 	addi	sp,sp,-12
1010339c:	10890404 	addi	r2,r2,9232
101033a0:	dc400115 	stw	r17,4(sp)
101033a4:	2023883a 	mov	r17,r4
101033a8:	11000017 	ldw	r4,0(r2)
101033ac:	dc000015 	stw	r16,0(sp)
101033b0:	dfc00215 	stw	ra,8(sp)
101033b4:	2821883a 	mov	r16,r5
101033b8:	20000226 	beq	r4,zero,101033c4 <__swsetup_r+0x30>
101033bc:	20800e17 	ldw	r2,56(r4)
101033c0:	10003126 	beq	r2,zero,10103488 <__swsetup_r+0xf4>
101033c4:	8080030b 	ldhu	r2,12(r16)
101033c8:	10c0020c 	andi	r3,r2,8
101033cc:	1009883a 	mov	r4,r2
101033d0:	18000f26 	beq	r3,zero,10103410 <__swsetup_r+0x7c>
101033d4:	80c00417 	ldw	r3,16(r16)
101033d8:	18001526 	beq	r3,zero,10103430 <__swsetup_r+0x9c>
101033dc:	1100004c 	andi	r4,r2,1
101033e0:	20001c1e 	bne	r4,zero,10103454 <__swsetup_r+0xc0>
101033e4:	1080008c 	andi	r2,r2,2
101033e8:	1000291e 	bne	r2,zero,10103490 <__swsetup_r+0xfc>
101033ec:	80800517 	ldw	r2,20(r16)
101033f0:	80800215 	stw	r2,8(r16)
101033f4:	18001c26 	beq	r3,zero,10103468 <__swsetup_r+0xd4>
101033f8:	0005883a 	mov	r2,zero
101033fc:	dfc00217 	ldw	ra,8(sp)
10103400:	dc400117 	ldw	r17,4(sp)
10103404:	dc000017 	ldw	r16,0(sp)
10103408:	dec00304 	addi	sp,sp,12
1010340c:	f800283a 	ret
10103410:	2080040c 	andi	r2,r4,16
10103414:	10002e26 	beq	r2,zero,101034d0 <__swsetup_r+0x13c>
10103418:	2080010c 	andi	r2,r4,4
1010341c:	10001e1e 	bne	r2,zero,10103498 <__swsetup_r+0x104>
10103420:	80c00417 	ldw	r3,16(r16)
10103424:	20800214 	ori	r2,r4,8
10103428:	8080030d 	sth	r2,12(r16)
1010342c:	183feb1e 	bne	r3,zero,101033dc <__alt_data_end+0xfffe33dc>
10103430:	1100a00c 	andi	r4,r2,640
10103434:	01408004 	movi	r5,512
10103438:	217fe826 	beq	r4,r5,101033dc <__alt_data_end+0xfffe33dc>
1010343c:	800b883a 	mov	r5,r16
10103440:	8809883a 	mov	r4,r17
10103444:	0105f500 	call	10105f50 <__smakebuf_r>
10103448:	8080030b 	ldhu	r2,12(r16)
1010344c:	80c00417 	ldw	r3,16(r16)
10103450:	003fe206 	br	101033dc <__alt_data_end+0xfffe33dc>
10103454:	80800517 	ldw	r2,20(r16)
10103458:	80000215 	stw	zero,8(r16)
1010345c:	0085c83a 	sub	r2,zero,r2
10103460:	80800615 	stw	r2,24(r16)
10103464:	183fe41e 	bne	r3,zero,101033f8 <__alt_data_end+0xfffe33f8>
10103468:	80c0030b 	ldhu	r3,12(r16)
1010346c:	0005883a 	mov	r2,zero
10103470:	1900200c 	andi	r4,r3,128
10103474:	203fe126 	beq	r4,zero,101033fc <__alt_data_end+0xfffe33fc>
10103478:	18c01014 	ori	r3,r3,64
1010347c:	80c0030d 	sth	r3,12(r16)
10103480:	00bfffc4 	movi	r2,-1
10103484:	003fdd06 	br	101033fc <__alt_data_end+0xfffe33fc>
10103488:	01053a00 	call	101053a0 <__sinit>
1010348c:	003fcd06 	br	101033c4 <__alt_data_end+0xfffe33c4>
10103490:	0005883a 	mov	r2,zero
10103494:	003fd606 	br	101033f0 <__alt_data_end+0xfffe33f0>
10103498:	81400c17 	ldw	r5,48(r16)
1010349c:	28000626 	beq	r5,zero,101034b8 <__swsetup_r+0x124>
101034a0:	80801004 	addi	r2,r16,64
101034a4:	28800326 	beq	r5,r2,101034b4 <__swsetup_r+0x120>
101034a8:	8809883a 	mov	r4,r17
101034ac:	01055140 	call	10105514 <_free_r>
101034b0:	8100030b 	ldhu	r4,12(r16)
101034b4:	80000c15 	stw	zero,48(r16)
101034b8:	80c00417 	ldw	r3,16(r16)
101034bc:	00bff6c4 	movi	r2,-37
101034c0:	1108703a 	and	r4,r2,r4
101034c4:	80000115 	stw	zero,4(r16)
101034c8:	80c00015 	stw	r3,0(r16)
101034cc:	003fd506 	br	10103424 <__alt_data_end+0xfffe3424>
101034d0:	00800244 	movi	r2,9
101034d4:	88800015 	stw	r2,0(r17)
101034d8:	20801014 	ori	r2,r4,64
101034dc:	8080030d 	sth	r2,12(r16)
101034e0:	00bfffc4 	movi	r2,-1
101034e4:	003fc506 	br	101033fc <__alt_data_end+0xfffe33fc>

101034e8 <quorem>:
101034e8:	defff204 	addi	sp,sp,-56
101034ec:	ddc00b15 	stw	r23,44(sp)
101034f0:	20800417 	ldw	r2,16(r4)
101034f4:	2dc00417 	ldw	r23,16(r5)
101034f8:	dfc00d15 	stw	ra,52(sp)
101034fc:	df000c15 	stw	fp,48(sp)
10103500:	dd800a15 	stw	r22,40(sp)
10103504:	dd400915 	stw	r21,36(sp)
10103508:	dd000815 	stw	r20,32(sp)
1010350c:	dcc00715 	stw	r19,28(sp)
10103510:	dc800615 	stw	r18,24(sp)
10103514:	dc400515 	stw	r17,20(sp)
10103518:	dc000415 	stw	r16,16(sp)
1010351c:	15c07a16 	blt	r2,r23,10103708 <quorem+0x220>
10103520:	bdffffc4 	addi	r23,r23,-1
10103524:	bde9883a 	add	r20,r23,r23
10103528:	28c00504 	addi	r3,r5,20
1010352c:	a529883a 	add	r20,r20,r20
10103530:	1d39883a 	add	fp,r3,r20
10103534:	24c00504 	addi	r19,r4,20
10103538:	d9400215 	stw	r5,8(sp)
1010353c:	9d29883a 	add	r20,r19,r20
10103540:	e1400017 	ldw	r5,0(fp)
10103544:	d9000015 	stw	r4,0(sp)
10103548:	a1000017 	ldw	r4,0(r20)
1010354c:	29400044 	addi	r5,r5,1
10103550:	d8c00115 	stw	r3,4(sp)
10103554:	dd000315 	stw	r20,12(sp)
10103558:	0100bdc0 	call	10100bdc <__udivsi3>
1010355c:	1025883a 	mov	r18,r2
10103560:	10003026 	beq	r2,zero,10103624 <quorem+0x13c>
10103564:	dc400117 	ldw	r17,4(sp)
10103568:	9829883a 	mov	r20,r19
1010356c:	002d883a 	mov	r22,zero
10103570:	0021883a 	mov	r16,zero
10103574:	8d400017 	ldw	r21,0(r17)
10103578:	900b883a 	mov	r5,r18
1010357c:	8c400104 	addi	r17,r17,4
10103580:	a93fffcc 	andi	r4,r21,65535
10103584:	0100c980 	call	10100c98 <__mulsi3>
10103588:	a808d43a 	srli	r4,r21,16
1010358c:	900b883a 	mov	r5,r18
10103590:	15ad883a 	add	r22,r2,r22
10103594:	0100c980 	call	10100c98 <__mulsi3>
10103598:	a1000017 	ldw	r4,0(r20)
1010359c:	b00cd43a 	srli	r6,r22,16
101035a0:	b0ffffcc 	andi	r3,r22,65535
101035a4:	217fffcc 	andi	r5,r4,65535
101035a8:	2c21883a 	add	r16,r5,r16
101035ac:	80c7c83a 	sub	r3,r16,r3
101035b0:	2008d43a 	srli	r4,r4,16
101035b4:	1185883a 	add	r2,r2,r6
101035b8:	1821d43a 	srai	r16,r3,16
101035bc:	117fffcc 	andi	r5,r2,65535
101035c0:	2149c83a 	sub	r4,r4,r5
101035c4:	2421883a 	add	r16,r4,r16
101035c8:	8008943a 	slli	r4,r16,16
101035cc:	18ffffcc 	andi	r3,r3,65535
101035d0:	102cd43a 	srli	r22,r2,16
101035d4:	20c8b03a 	or	r4,r4,r3
101035d8:	a1000015 	stw	r4,0(r20)
101035dc:	8021d43a 	srai	r16,r16,16
101035e0:	a5000104 	addi	r20,r20,4
101035e4:	e47fe32e 	bgeu	fp,r17,10103574 <__alt_data_end+0xfffe3574>
101035e8:	d8c00317 	ldw	r3,12(sp)
101035ec:	18800017 	ldw	r2,0(r3)
101035f0:	10000c1e 	bne	r2,zero,10103624 <quorem+0x13c>
101035f4:	18bfff04 	addi	r2,r3,-4
101035f8:	9880082e 	bgeu	r19,r2,1010361c <quorem+0x134>
101035fc:	18ffff17 	ldw	r3,-4(r3)
10103600:	18000326 	beq	r3,zero,10103610 <quorem+0x128>
10103604:	00000506 	br	1010361c <quorem+0x134>
10103608:	10c00017 	ldw	r3,0(r2)
1010360c:	1800031e 	bne	r3,zero,1010361c <quorem+0x134>
10103610:	10bfff04 	addi	r2,r2,-4
10103614:	bdffffc4 	addi	r23,r23,-1
10103618:	98bffb36 	bltu	r19,r2,10103608 <__alt_data_end+0xfffe3608>
1010361c:	d8c00017 	ldw	r3,0(sp)
10103620:	1dc00415 	stw	r23,16(r3)
10103624:	d9400217 	ldw	r5,8(sp)
10103628:	d9000017 	ldw	r4,0(sp)
1010362c:	01076040 	call	10107604 <__mcmp>
10103630:	10002816 	blt	r2,zero,101036d4 <quorem+0x1ec>
10103634:	dc400117 	ldw	r17,4(sp)
10103638:	94800044 	addi	r18,r18,1
1010363c:	980d883a 	mov	r6,r19
10103640:	0007883a 	mov	r3,zero
10103644:	31000017 	ldw	r4,0(r6)
10103648:	89400017 	ldw	r5,0(r17)
1010364c:	31800104 	addi	r6,r6,4
10103650:	20bfffcc 	andi	r2,r4,65535
10103654:	10c7883a 	add	r3,r2,r3
10103658:	28bfffcc 	andi	r2,r5,65535
1010365c:	1885c83a 	sub	r2,r3,r2
10103660:	280ad43a 	srli	r5,r5,16
10103664:	2008d43a 	srli	r4,r4,16
10103668:	1007d43a 	srai	r3,r2,16
1010366c:	10bfffcc 	andi	r2,r2,65535
10103670:	2149c83a 	sub	r4,r4,r5
10103674:	20c9883a 	add	r4,r4,r3
10103678:	200a943a 	slli	r5,r4,16
1010367c:	8c400104 	addi	r17,r17,4
10103680:	2007d43a 	srai	r3,r4,16
10103684:	2884b03a 	or	r2,r5,r2
10103688:	30bfff15 	stw	r2,-4(r6)
1010368c:	e47fed2e 	bgeu	fp,r17,10103644 <__alt_data_end+0xfffe3644>
10103690:	bdc5883a 	add	r2,r23,r23
10103694:	1085883a 	add	r2,r2,r2
10103698:	9887883a 	add	r3,r19,r2
1010369c:	18800017 	ldw	r2,0(r3)
101036a0:	10000c1e 	bne	r2,zero,101036d4 <quorem+0x1ec>
101036a4:	18bfff04 	addi	r2,r3,-4
101036a8:	9880082e 	bgeu	r19,r2,101036cc <quorem+0x1e4>
101036ac:	18ffff17 	ldw	r3,-4(r3)
101036b0:	18000326 	beq	r3,zero,101036c0 <quorem+0x1d8>
101036b4:	00000506 	br	101036cc <quorem+0x1e4>
101036b8:	10c00017 	ldw	r3,0(r2)
101036bc:	1800031e 	bne	r3,zero,101036cc <quorem+0x1e4>
101036c0:	10bfff04 	addi	r2,r2,-4
101036c4:	bdffffc4 	addi	r23,r23,-1
101036c8:	98bffb36 	bltu	r19,r2,101036b8 <__alt_data_end+0xfffe36b8>
101036cc:	d8c00017 	ldw	r3,0(sp)
101036d0:	1dc00415 	stw	r23,16(r3)
101036d4:	9005883a 	mov	r2,r18
101036d8:	dfc00d17 	ldw	ra,52(sp)
101036dc:	df000c17 	ldw	fp,48(sp)
101036e0:	ddc00b17 	ldw	r23,44(sp)
101036e4:	dd800a17 	ldw	r22,40(sp)
101036e8:	dd400917 	ldw	r21,36(sp)
101036ec:	dd000817 	ldw	r20,32(sp)
101036f0:	dcc00717 	ldw	r19,28(sp)
101036f4:	dc800617 	ldw	r18,24(sp)
101036f8:	dc400517 	ldw	r17,20(sp)
101036fc:	dc000417 	ldw	r16,16(sp)
10103700:	dec00e04 	addi	sp,sp,56
10103704:	f800283a 	ret
10103708:	0005883a 	mov	r2,zero
1010370c:	003ff206 	br	101036d8 <__alt_data_end+0xfffe36d8>

10103710 <_dtoa_r>:
10103710:	20801017 	ldw	r2,64(r4)
10103714:	deffde04 	addi	sp,sp,-136
10103718:	df002015 	stw	fp,128(sp)
1010371c:	dcc01b15 	stw	r19,108(sp)
10103720:	dc801a15 	stw	r18,104(sp)
10103724:	dc401915 	stw	r17,100(sp)
10103728:	dc001815 	stw	r16,96(sp)
1010372c:	dfc02115 	stw	ra,132(sp)
10103730:	ddc01f15 	stw	r23,124(sp)
10103734:	dd801e15 	stw	r22,120(sp)
10103738:	dd401d15 	stw	r21,116(sp)
1010373c:	dd001c15 	stw	r20,112(sp)
10103740:	d9c00315 	stw	r7,12(sp)
10103744:	2039883a 	mov	fp,r4
10103748:	3023883a 	mov	r17,r6
1010374c:	2825883a 	mov	r18,r5
10103750:	dc002417 	ldw	r16,144(sp)
10103754:	3027883a 	mov	r19,r6
10103758:	10000826 	beq	r2,zero,1010377c <_dtoa_r+0x6c>
1010375c:	21801117 	ldw	r6,68(r4)
10103760:	00c00044 	movi	r3,1
10103764:	100b883a 	mov	r5,r2
10103768:	1986983a 	sll	r3,r3,r6
1010376c:	11800115 	stw	r6,4(r2)
10103770:	10c00215 	stw	r3,8(r2)
10103774:	0106d280 	call	10106d28 <_Bfree>
10103778:	e0001015 	stw	zero,64(fp)
1010377c:	88002e16 	blt	r17,zero,10103838 <_dtoa_r+0x128>
10103780:	80000015 	stw	zero,0(r16)
10103784:	889ffc2c 	andhi	r2,r17,32752
10103788:	00dffc34 	movhi	r3,32752
1010378c:	10c01c26 	beq	r2,r3,10103800 <_dtoa_r+0xf0>
10103790:	000d883a 	mov	r6,zero
10103794:	000f883a 	mov	r7,zero
10103798:	9009883a 	mov	r4,r18
1010379c:	980b883a 	mov	r5,r19
101037a0:	010c3fc0 	call	1010c3fc <__eqdf2>
101037a4:	10002b1e 	bne	r2,zero,10103854 <_dtoa_r+0x144>
101037a8:	d9c02317 	ldw	r7,140(sp)
101037ac:	00800044 	movi	r2,1
101037b0:	38800015 	stw	r2,0(r7)
101037b4:	d8802517 	ldw	r2,148(sp)
101037b8:	10019e26 	beq	r2,zero,10103e34 <_dtoa_r+0x724>
101037bc:	d8c02517 	ldw	r3,148(sp)
101037c0:	00840474 	movhi	r2,4113
101037c4:	10819c44 	addi	r2,r2,1649
101037c8:	18800015 	stw	r2,0(r3)
101037cc:	10bfffc4 	addi	r2,r2,-1
101037d0:	dfc02117 	ldw	ra,132(sp)
101037d4:	df002017 	ldw	fp,128(sp)
101037d8:	ddc01f17 	ldw	r23,124(sp)
101037dc:	dd801e17 	ldw	r22,120(sp)
101037e0:	dd401d17 	ldw	r21,116(sp)
101037e4:	dd001c17 	ldw	r20,112(sp)
101037e8:	dcc01b17 	ldw	r19,108(sp)
101037ec:	dc801a17 	ldw	r18,104(sp)
101037f0:	dc401917 	ldw	r17,100(sp)
101037f4:	dc001817 	ldw	r16,96(sp)
101037f8:	dec02204 	addi	sp,sp,136
101037fc:	f800283a 	ret
10103800:	d8c02317 	ldw	r3,140(sp)
10103804:	0089c3c4 	movi	r2,9999
10103808:	18800015 	stw	r2,0(r3)
1010380c:	90017726 	beq	r18,zero,10103dec <_dtoa_r+0x6dc>
10103810:	00840474 	movhi	r2,4113
10103814:	1081a804 	addi	r2,r2,1696
10103818:	d9002517 	ldw	r4,148(sp)
1010381c:	203fec26 	beq	r4,zero,101037d0 <__alt_data_end+0xfffe37d0>
10103820:	10c000c7 	ldb	r3,3(r2)
10103824:	1801781e 	bne	r3,zero,10103e08 <_dtoa_r+0x6f8>
10103828:	10c000c4 	addi	r3,r2,3
1010382c:	d9802517 	ldw	r6,148(sp)
10103830:	30c00015 	stw	r3,0(r6)
10103834:	003fe606 	br	101037d0 <__alt_data_end+0xfffe37d0>
10103838:	04e00034 	movhi	r19,32768
1010383c:	9cffffc4 	addi	r19,r19,-1
10103840:	00800044 	movi	r2,1
10103844:	8ce6703a 	and	r19,r17,r19
10103848:	80800015 	stw	r2,0(r16)
1010384c:	9823883a 	mov	r17,r19
10103850:	003fcc06 	br	10103784 <__alt_data_end+0xfffe3784>
10103854:	d8800204 	addi	r2,sp,8
10103858:	d8800015 	stw	r2,0(sp)
1010385c:	d9c00104 	addi	r7,sp,4
10103860:	900b883a 	mov	r5,r18
10103864:	980d883a 	mov	r6,r19
10103868:	e009883a 	mov	r4,fp
1010386c:	8820d53a 	srli	r16,r17,20
10103870:	01079d00 	call	101079d0 <__d2b>
10103874:	d8800915 	stw	r2,36(sp)
10103878:	8001651e 	bne	r16,zero,10103e10 <_dtoa_r+0x700>
1010387c:	dd800217 	ldw	r22,8(sp)
10103880:	dc000117 	ldw	r16,4(sp)
10103884:	00800804 	movi	r2,32
10103888:	b421883a 	add	r16,r22,r16
1010388c:	80c10c84 	addi	r3,r16,1074
10103890:	10c2d10e 	bge	r2,r3,101043d8 <_dtoa_r+0xcc8>
10103894:	00801004 	movi	r2,64
10103898:	81010484 	addi	r4,r16,1042
1010389c:	10c7c83a 	sub	r3,r2,r3
101038a0:	9108d83a 	srl	r4,r18,r4
101038a4:	88e2983a 	sll	r17,r17,r3
101038a8:	2448b03a 	or	r4,r4,r17
101038ac:	010d9180 	call	1010d918 <__floatunsidf>
101038b0:	017f8434 	movhi	r5,65040
101038b4:	01800044 	movi	r6,1
101038b8:	1009883a 	mov	r4,r2
101038bc:	194b883a 	add	r5,r3,r5
101038c0:	843fffc4 	addi	r16,r16,-1
101038c4:	d9801115 	stw	r6,68(sp)
101038c8:	000d883a 	mov	r6,zero
101038cc:	01cffe34 	movhi	r7,16376
101038d0:	010cec00 	call	1010cec0 <__subdf3>
101038d4:	0198dbf4 	movhi	r6,25455
101038d8:	01cff4f4 	movhi	r7,16339
101038dc:	3190d844 	addi	r6,r6,17249
101038e0:	39e1e9c4 	addi	r7,r7,-30809
101038e4:	1009883a 	mov	r4,r2
101038e8:	180b883a 	mov	r5,r3
101038ec:	010c6540 	call	1010c654 <__muldf3>
101038f0:	01a2d874 	movhi	r6,35681
101038f4:	01cff1f4 	movhi	r7,16327
101038f8:	31b22cc4 	addi	r6,r6,-14157
101038fc:	39e28a04 	addi	r7,r7,-30168
10103900:	180b883a 	mov	r5,r3
10103904:	1009883a 	mov	r4,r2
10103908:	010b1800 	call	1010b180 <__adddf3>
1010390c:	8009883a 	mov	r4,r16
10103910:	1029883a 	mov	r20,r2
10103914:	1823883a 	mov	r17,r3
10103918:	010d83c0 	call	1010d83c <__floatsidf>
1010391c:	019427f4 	movhi	r6,20639
10103920:	01cff4f4 	movhi	r7,16339
10103924:	319e7ec4 	addi	r6,r6,31227
10103928:	39d104c4 	addi	r7,r7,17427
1010392c:	1009883a 	mov	r4,r2
10103930:	180b883a 	mov	r5,r3
10103934:	010c6540 	call	1010c654 <__muldf3>
10103938:	100d883a 	mov	r6,r2
1010393c:	180f883a 	mov	r7,r3
10103940:	a009883a 	mov	r4,r20
10103944:	880b883a 	mov	r5,r17
10103948:	010b1800 	call	1010b180 <__adddf3>
1010394c:	1009883a 	mov	r4,r2
10103950:	180b883a 	mov	r5,r3
10103954:	1029883a 	mov	r20,r2
10103958:	1823883a 	mov	r17,r3
1010395c:	010d7bc0 	call	1010d7bc <__fixdfsi>
10103960:	000d883a 	mov	r6,zero
10103964:	000f883a 	mov	r7,zero
10103968:	a009883a 	mov	r4,r20
1010396c:	880b883a 	mov	r5,r17
10103970:	d8800515 	stw	r2,20(sp)
10103974:	010c5600 	call	1010c560 <__ledf2>
10103978:	10028716 	blt	r2,zero,10104398 <_dtoa_r+0xc88>
1010397c:	d8c00517 	ldw	r3,20(sp)
10103980:	00800584 	movi	r2,22
10103984:	10c27536 	bltu	r2,r3,1010435c <_dtoa_r+0xc4c>
10103988:	180490fa 	slli	r2,r3,3
1010398c:	00c40474 	movhi	r3,4113
10103990:	18c1c404 	addi	r3,r3,1808
10103994:	1885883a 	add	r2,r3,r2
10103998:	11000017 	ldw	r4,0(r2)
1010399c:	11400117 	ldw	r5,4(r2)
101039a0:	900d883a 	mov	r6,r18
101039a4:	980f883a 	mov	r7,r19
101039a8:	010c4840 	call	1010c484 <__gedf2>
101039ac:	00828d0e 	bge	zero,r2,101043e4 <_dtoa_r+0xcd4>
101039b0:	d9000517 	ldw	r4,20(sp)
101039b4:	d8000e15 	stw	zero,56(sp)
101039b8:	213fffc4 	addi	r4,r4,-1
101039bc:	d9000515 	stw	r4,20(sp)
101039c0:	b42dc83a 	sub	r22,r22,r16
101039c4:	b5bfffc4 	addi	r22,r22,-1
101039c8:	b0026f16 	blt	r22,zero,10104388 <_dtoa_r+0xc78>
101039cc:	d8000815 	stw	zero,32(sp)
101039d0:	d9c00517 	ldw	r7,20(sp)
101039d4:	38026416 	blt	r7,zero,10104368 <_dtoa_r+0xc58>
101039d8:	b1ed883a 	add	r22,r22,r7
101039dc:	d9c00d15 	stw	r7,52(sp)
101039e0:	d8000a15 	stw	zero,40(sp)
101039e4:	d9800317 	ldw	r6,12(sp)
101039e8:	00800244 	movi	r2,9
101039ec:	11811436 	bltu	r2,r6,10103e40 <_dtoa_r+0x730>
101039f0:	00800144 	movi	r2,5
101039f4:	1184e10e 	bge	r2,r6,10104d7c <_dtoa_r+0x166c>
101039f8:	31bfff04 	addi	r6,r6,-4
101039fc:	d9800315 	stw	r6,12(sp)
10103a00:	0023883a 	mov	r17,zero
10103a04:	d9800317 	ldw	r6,12(sp)
10103a08:	008000c4 	movi	r2,3
10103a0c:	30836726 	beq	r6,r2,101047ac <_dtoa_r+0x109c>
10103a10:	1183410e 	bge	r2,r6,10104718 <_dtoa_r+0x1008>
10103a14:	d9c00317 	ldw	r7,12(sp)
10103a18:	00800104 	movi	r2,4
10103a1c:	38827c26 	beq	r7,r2,10104410 <_dtoa_r+0xd00>
10103a20:	00800144 	movi	r2,5
10103a24:	3884c41e 	bne	r7,r2,10104d38 <_dtoa_r+0x1628>
10103a28:	00800044 	movi	r2,1
10103a2c:	d8800b15 	stw	r2,44(sp)
10103a30:	d8c00517 	ldw	r3,20(sp)
10103a34:	d9002217 	ldw	r4,136(sp)
10103a38:	1907883a 	add	r3,r3,r4
10103a3c:	19800044 	addi	r6,r3,1
10103a40:	d8c00c15 	stw	r3,48(sp)
10103a44:	d9800615 	stw	r6,24(sp)
10103a48:	0183a40e 	bge	zero,r6,101048dc <_dtoa_r+0x11cc>
10103a4c:	d9800617 	ldw	r6,24(sp)
10103a50:	3021883a 	mov	r16,r6
10103a54:	e0001115 	stw	zero,68(fp)
10103a58:	008005c4 	movi	r2,23
10103a5c:	1184c92e 	bgeu	r2,r6,10104d84 <_dtoa_r+0x1674>
10103a60:	00c00044 	movi	r3,1
10103a64:	00800104 	movi	r2,4
10103a68:	1085883a 	add	r2,r2,r2
10103a6c:	11000504 	addi	r4,r2,20
10103a70:	180b883a 	mov	r5,r3
10103a74:	18c00044 	addi	r3,r3,1
10103a78:	313ffb2e 	bgeu	r6,r4,10103a68 <__alt_data_end+0xfffe3a68>
10103a7c:	e1401115 	stw	r5,68(fp)
10103a80:	e009883a 	mov	r4,fp
10103a84:	0106c800 	call	10106c80 <_Balloc>
10103a88:	d8800715 	stw	r2,28(sp)
10103a8c:	e0801015 	stw	r2,64(fp)
10103a90:	00800384 	movi	r2,14
10103a94:	1400f736 	bltu	r2,r16,10103e74 <_dtoa_r+0x764>
10103a98:	8800f626 	beq	r17,zero,10103e74 <_dtoa_r+0x764>
10103a9c:	d9c00517 	ldw	r7,20(sp)
10103aa0:	01c39a0e 	bge	zero,r7,1010490c <_dtoa_r+0x11fc>
10103aa4:	388003cc 	andi	r2,r7,15
10103aa8:	100490fa 	slli	r2,r2,3
10103aac:	382bd13a 	srai	r21,r7,4
10103ab0:	00c40474 	movhi	r3,4113
10103ab4:	18c1c404 	addi	r3,r3,1808
10103ab8:	1885883a 	add	r2,r3,r2
10103abc:	a8c0040c 	andi	r3,r21,16
10103ac0:	12400017 	ldw	r9,0(r2)
10103ac4:	12000117 	ldw	r8,4(r2)
10103ac8:	18037926 	beq	r3,zero,101048b0 <_dtoa_r+0x11a0>
10103acc:	00840474 	movhi	r2,4113
10103ad0:	1081ba04 	addi	r2,r2,1768
10103ad4:	11800817 	ldw	r6,32(r2)
10103ad8:	11c00917 	ldw	r7,36(r2)
10103adc:	9009883a 	mov	r4,r18
10103ae0:	980b883a 	mov	r5,r19
10103ae4:	da001715 	stw	r8,92(sp)
10103ae8:	da401615 	stw	r9,88(sp)
10103aec:	010ba2c0 	call	1010ba2c <__divdf3>
10103af0:	da001717 	ldw	r8,92(sp)
10103af4:	da401617 	ldw	r9,88(sp)
10103af8:	ad4003cc 	andi	r21,r21,15
10103afc:	040000c4 	movi	r16,3
10103b00:	1023883a 	mov	r17,r2
10103b04:	1829883a 	mov	r20,r3
10103b08:	a8001126 	beq	r21,zero,10103b50 <_dtoa_r+0x440>
10103b0c:	05c40474 	movhi	r23,4113
10103b10:	bdc1ba04 	addi	r23,r23,1768
10103b14:	4805883a 	mov	r2,r9
10103b18:	4007883a 	mov	r3,r8
10103b1c:	a980004c 	andi	r6,r21,1
10103b20:	1009883a 	mov	r4,r2
10103b24:	a82bd07a 	srai	r21,r21,1
10103b28:	180b883a 	mov	r5,r3
10103b2c:	30000426 	beq	r6,zero,10103b40 <_dtoa_r+0x430>
10103b30:	b9800017 	ldw	r6,0(r23)
10103b34:	b9c00117 	ldw	r7,4(r23)
10103b38:	84000044 	addi	r16,r16,1
10103b3c:	010c6540 	call	1010c654 <__muldf3>
10103b40:	bdc00204 	addi	r23,r23,8
10103b44:	a83ff51e 	bne	r21,zero,10103b1c <__alt_data_end+0xfffe3b1c>
10103b48:	1013883a 	mov	r9,r2
10103b4c:	1811883a 	mov	r8,r3
10103b50:	480d883a 	mov	r6,r9
10103b54:	400f883a 	mov	r7,r8
10103b58:	8809883a 	mov	r4,r17
10103b5c:	a00b883a 	mov	r5,r20
10103b60:	010ba2c0 	call	1010ba2c <__divdf3>
10103b64:	d8800f15 	stw	r2,60(sp)
10103b68:	d8c01015 	stw	r3,64(sp)
10103b6c:	d8c00e17 	ldw	r3,56(sp)
10103b70:	18000626 	beq	r3,zero,10103b8c <_dtoa_r+0x47c>
10103b74:	d9000f17 	ldw	r4,60(sp)
10103b78:	d9401017 	ldw	r5,64(sp)
10103b7c:	000d883a 	mov	r6,zero
10103b80:	01cffc34 	movhi	r7,16368
10103b84:	010c5600 	call	1010c560 <__ledf2>
10103b88:	10040b16 	blt	r2,zero,10104bb8 <_dtoa_r+0x14a8>
10103b8c:	8009883a 	mov	r4,r16
10103b90:	010d83c0 	call	1010d83c <__floatsidf>
10103b94:	d9800f17 	ldw	r6,60(sp)
10103b98:	d9c01017 	ldw	r7,64(sp)
10103b9c:	1009883a 	mov	r4,r2
10103ba0:	180b883a 	mov	r5,r3
10103ba4:	010c6540 	call	1010c654 <__muldf3>
10103ba8:	000d883a 	mov	r6,zero
10103bac:	01d00734 	movhi	r7,16412
10103bb0:	1009883a 	mov	r4,r2
10103bb4:	180b883a 	mov	r5,r3
10103bb8:	010b1800 	call	1010b180 <__adddf3>
10103bbc:	1021883a 	mov	r16,r2
10103bc0:	d8800617 	ldw	r2,24(sp)
10103bc4:	047f3034 	movhi	r17,64704
10103bc8:	1c63883a 	add	r17,r3,r17
10103bcc:	10031826 	beq	r2,zero,10104830 <_dtoa_r+0x1120>
10103bd0:	d8c00517 	ldw	r3,20(sp)
10103bd4:	db000617 	ldw	r12,24(sp)
10103bd8:	d8c01315 	stw	r3,76(sp)
10103bdc:	d9000b17 	ldw	r4,44(sp)
10103be0:	20038f26 	beq	r4,zero,10104a20 <_dtoa_r+0x1310>
10103be4:	60bfffc4 	addi	r2,r12,-1
10103be8:	100490fa 	slli	r2,r2,3
10103bec:	00c40474 	movhi	r3,4113
10103bf0:	18c1c404 	addi	r3,r3,1808
10103bf4:	1885883a 	add	r2,r3,r2
10103bf8:	11800017 	ldw	r6,0(r2)
10103bfc:	11c00117 	ldw	r7,4(r2)
10103c00:	d8800717 	ldw	r2,28(sp)
10103c04:	0009883a 	mov	r4,zero
10103c08:	014ff834 	movhi	r5,16352
10103c0c:	db001615 	stw	r12,88(sp)
10103c10:	15c00044 	addi	r23,r2,1
10103c14:	010ba2c0 	call	1010ba2c <__divdf3>
10103c18:	800d883a 	mov	r6,r16
10103c1c:	880f883a 	mov	r7,r17
10103c20:	1009883a 	mov	r4,r2
10103c24:	180b883a 	mov	r5,r3
10103c28:	010cec00 	call	1010cec0 <__subdf3>
10103c2c:	d9401017 	ldw	r5,64(sp)
10103c30:	d9000f17 	ldw	r4,60(sp)
10103c34:	102b883a 	mov	r21,r2
10103c38:	d8c01215 	stw	r3,72(sp)
10103c3c:	010d7bc0 	call	1010d7bc <__fixdfsi>
10103c40:	1009883a 	mov	r4,r2
10103c44:	1029883a 	mov	r20,r2
10103c48:	010d83c0 	call	1010d83c <__floatsidf>
10103c4c:	d9000f17 	ldw	r4,60(sp)
10103c50:	d9401017 	ldw	r5,64(sp)
10103c54:	100d883a 	mov	r6,r2
10103c58:	180f883a 	mov	r7,r3
10103c5c:	010cec00 	call	1010cec0 <__subdf3>
10103c60:	1823883a 	mov	r17,r3
10103c64:	d8c00717 	ldw	r3,28(sp)
10103c68:	d9401217 	ldw	r5,72(sp)
10103c6c:	a2000c04 	addi	r8,r20,48
10103c70:	1021883a 	mov	r16,r2
10103c74:	1a000005 	stb	r8,0(r3)
10103c78:	800d883a 	mov	r6,r16
10103c7c:	880f883a 	mov	r7,r17
10103c80:	a809883a 	mov	r4,r21
10103c84:	4029883a 	mov	r20,r8
10103c88:	010c4840 	call	1010c484 <__gedf2>
10103c8c:	00841d16 	blt	zero,r2,10104d04 <_dtoa_r+0x15f4>
10103c90:	800d883a 	mov	r6,r16
10103c94:	880f883a 	mov	r7,r17
10103c98:	0009883a 	mov	r4,zero
10103c9c:	014ffc34 	movhi	r5,16368
10103ca0:	010cec00 	call	1010cec0 <__subdf3>
10103ca4:	d9401217 	ldw	r5,72(sp)
10103ca8:	100d883a 	mov	r6,r2
10103cac:	180f883a 	mov	r7,r3
10103cb0:	a809883a 	mov	r4,r21
10103cb4:	010c4840 	call	1010c484 <__gedf2>
10103cb8:	db001617 	ldw	r12,88(sp)
10103cbc:	00840e16 	blt	zero,r2,10104cf8 <_dtoa_r+0x15e8>
10103cc0:	00800044 	movi	r2,1
10103cc4:	13006b0e 	bge	r2,r12,10103e74 <_dtoa_r+0x764>
10103cc8:	d9000717 	ldw	r4,28(sp)
10103ccc:	dd800f15 	stw	r22,60(sp)
10103cd0:	dcc01015 	stw	r19,64(sp)
10103cd4:	2319883a 	add	r12,r4,r12
10103cd8:	dcc01217 	ldw	r19,72(sp)
10103cdc:	602d883a 	mov	r22,r12
10103ce0:	dc801215 	stw	r18,72(sp)
10103ce4:	b825883a 	mov	r18,r23
10103ce8:	00000906 	br	10103d10 <_dtoa_r+0x600>
10103cec:	010cec00 	call	1010cec0 <__subdf3>
10103cf0:	a80d883a 	mov	r6,r21
10103cf4:	980f883a 	mov	r7,r19
10103cf8:	1009883a 	mov	r4,r2
10103cfc:	180b883a 	mov	r5,r3
10103d00:	010c5600 	call	1010c560 <__ledf2>
10103d04:	1003e816 	blt	r2,zero,10104ca8 <_dtoa_r+0x1598>
10103d08:	b825883a 	mov	r18,r23
10103d0c:	bd83e926 	beq	r23,r22,10104cb4 <_dtoa_r+0x15a4>
10103d10:	a809883a 	mov	r4,r21
10103d14:	980b883a 	mov	r5,r19
10103d18:	000d883a 	mov	r6,zero
10103d1c:	01d00934 	movhi	r7,16420
10103d20:	010c6540 	call	1010c654 <__muldf3>
10103d24:	000d883a 	mov	r6,zero
10103d28:	01d00934 	movhi	r7,16420
10103d2c:	8009883a 	mov	r4,r16
10103d30:	880b883a 	mov	r5,r17
10103d34:	102b883a 	mov	r21,r2
10103d38:	1827883a 	mov	r19,r3
10103d3c:	010c6540 	call	1010c654 <__muldf3>
10103d40:	180b883a 	mov	r5,r3
10103d44:	1009883a 	mov	r4,r2
10103d48:	1821883a 	mov	r16,r3
10103d4c:	1023883a 	mov	r17,r2
10103d50:	010d7bc0 	call	1010d7bc <__fixdfsi>
10103d54:	1009883a 	mov	r4,r2
10103d58:	1029883a 	mov	r20,r2
10103d5c:	010d83c0 	call	1010d83c <__floatsidf>
10103d60:	8809883a 	mov	r4,r17
10103d64:	800b883a 	mov	r5,r16
10103d68:	100d883a 	mov	r6,r2
10103d6c:	180f883a 	mov	r7,r3
10103d70:	010cec00 	call	1010cec0 <__subdf3>
10103d74:	a5000c04 	addi	r20,r20,48
10103d78:	a80d883a 	mov	r6,r21
10103d7c:	980f883a 	mov	r7,r19
10103d80:	1009883a 	mov	r4,r2
10103d84:	180b883a 	mov	r5,r3
10103d88:	95000005 	stb	r20,0(r18)
10103d8c:	1021883a 	mov	r16,r2
10103d90:	1823883a 	mov	r17,r3
10103d94:	010c5600 	call	1010c560 <__ledf2>
10103d98:	bdc00044 	addi	r23,r23,1
10103d9c:	800d883a 	mov	r6,r16
10103da0:	880f883a 	mov	r7,r17
10103da4:	0009883a 	mov	r4,zero
10103da8:	014ffc34 	movhi	r5,16368
10103dac:	103fcf0e 	bge	r2,zero,10103cec <__alt_data_end+0xfffe3cec>
10103db0:	d8c01317 	ldw	r3,76(sp)
10103db4:	d8c00515 	stw	r3,20(sp)
10103db8:	d9400917 	ldw	r5,36(sp)
10103dbc:	e009883a 	mov	r4,fp
10103dc0:	0106d280 	call	10106d28 <_Bfree>
10103dc4:	d9000517 	ldw	r4,20(sp)
10103dc8:	d9802317 	ldw	r6,140(sp)
10103dcc:	d9c02517 	ldw	r7,148(sp)
10103dd0:	b8000005 	stb	zero,0(r23)
10103dd4:	20800044 	addi	r2,r4,1
10103dd8:	30800015 	stw	r2,0(r6)
10103ddc:	3802aa26 	beq	r7,zero,10104888 <_dtoa_r+0x1178>
10103de0:	3dc00015 	stw	r23,0(r7)
10103de4:	d8800717 	ldw	r2,28(sp)
10103de8:	003e7906 	br	101037d0 <__alt_data_end+0xfffe37d0>
10103dec:	00800434 	movhi	r2,16
10103df0:	10bfffc4 	addi	r2,r2,-1
10103df4:	88a2703a 	and	r17,r17,r2
10103df8:	883e851e 	bne	r17,zero,10103810 <__alt_data_end+0xfffe3810>
10103dfc:	00840474 	movhi	r2,4113
10103e00:	1081a504 	addi	r2,r2,1684
10103e04:	003e8406 	br	10103818 <__alt_data_end+0xfffe3818>
10103e08:	10c00204 	addi	r3,r2,8
10103e0c:	003e8706 	br	1010382c <__alt_data_end+0xfffe382c>
10103e10:	01400434 	movhi	r5,16
10103e14:	297fffc4 	addi	r5,r5,-1
10103e18:	994a703a 	and	r5,r19,r5
10103e1c:	9009883a 	mov	r4,r18
10103e20:	843f0044 	addi	r16,r16,-1023
10103e24:	294ffc34 	orhi	r5,r5,16368
10103e28:	dd800217 	ldw	r22,8(sp)
10103e2c:	d8001115 	stw	zero,68(sp)
10103e30:	003ea506 	br	101038c8 <__alt_data_end+0xfffe38c8>
10103e34:	00840474 	movhi	r2,4113
10103e38:	10819c04 	addi	r2,r2,1648
10103e3c:	003e6406 	br	101037d0 <__alt_data_end+0xfffe37d0>
10103e40:	e0001115 	stw	zero,68(fp)
10103e44:	000b883a 	mov	r5,zero
10103e48:	e009883a 	mov	r4,fp
10103e4c:	0106c800 	call	10106c80 <_Balloc>
10103e50:	01bfffc4 	movi	r6,-1
10103e54:	01c00044 	movi	r7,1
10103e58:	d8800715 	stw	r2,28(sp)
10103e5c:	d9800c15 	stw	r6,48(sp)
10103e60:	e0801015 	stw	r2,64(fp)
10103e64:	d8000315 	stw	zero,12(sp)
10103e68:	d9c00b15 	stw	r7,44(sp)
10103e6c:	d9800615 	stw	r6,24(sp)
10103e70:	d8002215 	stw	zero,136(sp)
10103e74:	d8800117 	ldw	r2,4(sp)
10103e78:	10008916 	blt	r2,zero,101040a0 <_dtoa_r+0x990>
10103e7c:	d9000517 	ldw	r4,20(sp)
10103e80:	00c00384 	movi	r3,14
10103e84:	19008616 	blt	r3,r4,101040a0 <_dtoa_r+0x990>
10103e88:	200490fa 	slli	r2,r4,3
10103e8c:	00c40474 	movhi	r3,4113
10103e90:	d9802217 	ldw	r6,136(sp)
10103e94:	18c1c404 	addi	r3,r3,1808
10103e98:	1885883a 	add	r2,r3,r2
10103e9c:	14000017 	ldw	r16,0(r2)
10103ea0:	14400117 	ldw	r17,4(r2)
10103ea4:	30016316 	blt	r6,zero,10104434 <_dtoa_r+0xd24>
10103ea8:	800d883a 	mov	r6,r16
10103eac:	880f883a 	mov	r7,r17
10103eb0:	9009883a 	mov	r4,r18
10103eb4:	980b883a 	mov	r5,r19
10103eb8:	010ba2c0 	call	1010ba2c <__divdf3>
10103ebc:	180b883a 	mov	r5,r3
10103ec0:	1009883a 	mov	r4,r2
10103ec4:	010d7bc0 	call	1010d7bc <__fixdfsi>
10103ec8:	1009883a 	mov	r4,r2
10103ecc:	102b883a 	mov	r21,r2
10103ed0:	010d83c0 	call	1010d83c <__floatsidf>
10103ed4:	800d883a 	mov	r6,r16
10103ed8:	880f883a 	mov	r7,r17
10103edc:	1009883a 	mov	r4,r2
10103ee0:	180b883a 	mov	r5,r3
10103ee4:	010c6540 	call	1010c654 <__muldf3>
10103ee8:	100d883a 	mov	r6,r2
10103eec:	180f883a 	mov	r7,r3
10103ef0:	9009883a 	mov	r4,r18
10103ef4:	980b883a 	mov	r5,r19
10103ef8:	010cec00 	call	1010cec0 <__subdf3>
10103efc:	d9c00717 	ldw	r7,28(sp)
10103f00:	1009883a 	mov	r4,r2
10103f04:	a8800c04 	addi	r2,r21,48
10103f08:	38800005 	stb	r2,0(r7)
10103f0c:	3dc00044 	addi	r23,r7,1
10103f10:	d9c00617 	ldw	r7,24(sp)
10103f14:	01800044 	movi	r6,1
10103f18:	180b883a 	mov	r5,r3
10103f1c:	2005883a 	mov	r2,r4
10103f20:	39803826 	beq	r7,r6,10104004 <_dtoa_r+0x8f4>
10103f24:	000d883a 	mov	r6,zero
10103f28:	01d00934 	movhi	r7,16420
10103f2c:	010c6540 	call	1010c654 <__muldf3>
10103f30:	000d883a 	mov	r6,zero
10103f34:	000f883a 	mov	r7,zero
10103f38:	1009883a 	mov	r4,r2
10103f3c:	180b883a 	mov	r5,r3
10103f40:	1025883a 	mov	r18,r2
10103f44:	1827883a 	mov	r19,r3
10103f48:	010c3fc0 	call	1010c3fc <__eqdf2>
10103f4c:	103f9a26 	beq	r2,zero,10103db8 <__alt_data_end+0xfffe3db8>
10103f50:	d9c00617 	ldw	r7,24(sp)
10103f54:	d8c00717 	ldw	r3,28(sp)
10103f58:	b829883a 	mov	r20,r23
10103f5c:	38bfffc4 	addi	r2,r7,-1
10103f60:	18ad883a 	add	r22,r3,r2
10103f64:	00000a06 	br	10103f90 <_dtoa_r+0x880>
10103f68:	010c6540 	call	1010c654 <__muldf3>
10103f6c:	000d883a 	mov	r6,zero
10103f70:	000f883a 	mov	r7,zero
10103f74:	1009883a 	mov	r4,r2
10103f78:	180b883a 	mov	r5,r3
10103f7c:	1025883a 	mov	r18,r2
10103f80:	1827883a 	mov	r19,r3
10103f84:	b829883a 	mov	r20,r23
10103f88:	010c3fc0 	call	1010c3fc <__eqdf2>
10103f8c:	103f8a26 	beq	r2,zero,10103db8 <__alt_data_end+0xfffe3db8>
10103f90:	800d883a 	mov	r6,r16
10103f94:	880f883a 	mov	r7,r17
10103f98:	9009883a 	mov	r4,r18
10103f9c:	980b883a 	mov	r5,r19
10103fa0:	010ba2c0 	call	1010ba2c <__divdf3>
10103fa4:	180b883a 	mov	r5,r3
10103fa8:	1009883a 	mov	r4,r2
10103fac:	010d7bc0 	call	1010d7bc <__fixdfsi>
10103fb0:	1009883a 	mov	r4,r2
10103fb4:	102b883a 	mov	r21,r2
10103fb8:	010d83c0 	call	1010d83c <__floatsidf>
10103fbc:	800d883a 	mov	r6,r16
10103fc0:	880f883a 	mov	r7,r17
10103fc4:	1009883a 	mov	r4,r2
10103fc8:	180b883a 	mov	r5,r3
10103fcc:	010c6540 	call	1010c654 <__muldf3>
10103fd0:	100d883a 	mov	r6,r2
10103fd4:	180f883a 	mov	r7,r3
10103fd8:	9009883a 	mov	r4,r18
10103fdc:	980b883a 	mov	r5,r19
10103fe0:	010cec00 	call	1010cec0 <__subdf3>
10103fe4:	aa000c04 	addi	r8,r21,48
10103fe8:	a2000005 	stb	r8,0(r20)
10103fec:	000d883a 	mov	r6,zero
10103ff0:	01d00934 	movhi	r7,16420
10103ff4:	1009883a 	mov	r4,r2
10103ff8:	180b883a 	mov	r5,r3
10103ffc:	a5c00044 	addi	r23,r20,1
10104000:	b53fd91e 	bne	r22,r20,10103f68 <__alt_data_end+0xfffe3f68>
10104004:	100d883a 	mov	r6,r2
10104008:	180f883a 	mov	r7,r3
1010400c:	1009883a 	mov	r4,r2
10104010:	180b883a 	mov	r5,r3
10104014:	010b1800 	call	1010b180 <__adddf3>
10104018:	100d883a 	mov	r6,r2
1010401c:	180f883a 	mov	r7,r3
10104020:	8009883a 	mov	r4,r16
10104024:	880b883a 	mov	r5,r17
10104028:	1027883a 	mov	r19,r2
1010402c:	1825883a 	mov	r18,r3
10104030:	010c5600 	call	1010c560 <__ledf2>
10104034:	10000816 	blt	r2,zero,10104058 <_dtoa_r+0x948>
10104038:	980d883a 	mov	r6,r19
1010403c:	900f883a 	mov	r7,r18
10104040:	8009883a 	mov	r4,r16
10104044:	880b883a 	mov	r5,r17
10104048:	010c3fc0 	call	1010c3fc <__eqdf2>
1010404c:	103f5a1e 	bne	r2,zero,10103db8 <__alt_data_end+0xfffe3db8>
10104050:	ad40004c 	andi	r21,r21,1
10104054:	a83f5826 	beq	r21,zero,10103db8 <__alt_data_end+0xfffe3db8>
10104058:	bd3fffc3 	ldbu	r20,-1(r23)
1010405c:	b8bfffc4 	addi	r2,r23,-1
10104060:	1007883a 	mov	r3,r2
10104064:	01400e44 	movi	r5,57
10104068:	d9800717 	ldw	r6,28(sp)
1010406c:	00000506 	br	10104084 <_dtoa_r+0x974>
10104070:	18ffffc4 	addi	r3,r3,-1
10104074:	11824726 	beq	r2,r6,10104994 <_dtoa_r+0x1284>
10104078:	1d000003 	ldbu	r20,0(r3)
1010407c:	102f883a 	mov	r23,r2
10104080:	10bfffc4 	addi	r2,r2,-1
10104084:	a1003fcc 	andi	r4,r20,255
10104088:	2100201c 	xori	r4,r4,128
1010408c:	213fe004 	addi	r4,r4,-128
10104090:	217ff726 	beq	r4,r5,10104070 <__alt_data_end+0xfffe4070>
10104094:	a2000044 	addi	r8,r20,1
10104098:	12000005 	stb	r8,0(r2)
1010409c:	003f4606 	br	10103db8 <__alt_data_end+0xfffe3db8>
101040a0:	d9000b17 	ldw	r4,44(sp)
101040a4:	2000c826 	beq	r4,zero,101043c8 <_dtoa_r+0xcb8>
101040a8:	d9800317 	ldw	r6,12(sp)
101040ac:	00c00044 	movi	r3,1
101040b0:	1980f90e 	bge	r3,r6,10104498 <_dtoa_r+0xd88>
101040b4:	d8800617 	ldw	r2,24(sp)
101040b8:	d8c00a17 	ldw	r3,40(sp)
101040bc:	157fffc4 	addi	r21,r2,-1
101040c0:	1d41f316 	blt	r3,r21,10104890 <_dtoa_r+0x1180>
101040c4:	1d6bc83a 	sub	r21,r3,r21
101040c8:	d9c00617 	ldw	r7,24(sp)
101040cc:	3802aa16 	blt	r7,zero,10104b78 <_dtoa_r+0x1468>
101040d0:	dd000817 	ldw	r20,32(sp)
101040d4:	d8800617 	ldw	r2,24(sp)
101040d8:	d8c00817 	ldw	r3,32(sp)
101040dc:	01400044 	movi	r5,1
101040e0:	e009883a 	mov	r4,fp
101040e4:	1887883a 	add	r3,r3,r2
101040e8:	d8c00815 	stw	r3,32(sp)
101040ec:	b0ad883a 	add	r22,r22,r2
101040f0:	01070b40 	call	101070b4 <__i2b>
101040f4:	1023883a 	mov	r17,r2
101040f8:	a0000826 	beq	r20,zero,1010411c <_dtoa_r+0xa0c>
101040fc:	0580070e 	bge	zero,r22,1010411c <_dtoa_r+0xa0c>
10104100:	a005883a 	mov	r2,r20
10104104:	b500b916 	blt	r22,r20,101043ec <_dtoa_r+0xcdc>
10104108:	d9000817 	ldw	r4,32(sp)
1010410c:	a0a9c83a 	sub	r20,r20,r2
10104110:	b0adc83a 	sub	r22,r22,r2
10104114:	2089c83a 	sub	r4,r4,r2
10104118:	d9000815 	stw	r4,32(sp)
1010411c:	d9800a17 	ldw	r6,40(sp)
10104120:	0181810e 	bge	zero,r6,10104728 <_dtoa_r+0x1018>
10104124:	d9c00b17 	ldw	r7,44(sp)
10104128:	3800b326 	beq	r7,zero,101043f8 <_dtoa_r+0xce8>
1010412c:	a800b226 	beq	r21,zero,101043f8 <_dtoa_r+0xce8>
10104130:	880b883a 	mov	r5,r17
10104134:	a80d883a 	mov	r6,r21
10104138:	e009883a 	mov	r4,fp
1010413c:	010737c0 	call	1010737c <__pow5mult>
10104140:	d9800917 	ldw	r6,36(sp)
10104144:	100b883a 	mov	r5,r2
10104148:	e009883a 	mov	r4,fp
1010414c:	1023883a 	mov	r17,r2
10104150:	01070f00 	call	101070f0 <__multiply>
10104154:	1021883a 	mov	r16,r2
10104158:	d8800a17 	ldw	r2,40(sp)
1010415c:	d9400917 	ldw	r5,36(sp)
10104160:	e009883a 	mov	r4,fp
10104164:	1545c83a 	sub	r2,r2,r21
10104168:	d8800a15 	stw	r2,40(sp)
1010416c:	0106d280 	call	10106d28 <_Bfree>
10104170:	d8c00a17 	ldw	r3,40(sp)
10104174:	18009f1e 	bne	r3,zero,101043f4 <_dtoa_r+0xce4>
10104178:	05c00044 	movi	r23,1
1010417c:	e009883a 	mov	r4,fp
10104180:	b80b883a 	mov	r5,r23
10104184:	01070b40 	call	101070b4 <__i2b>
10104188:	d9000d17 	ldw	r4,52(sp)
1010418c:	102b883a 	mov	r21,r2
10104190:	2000ce26 	beq	r4,zero,101044cc <_dtoa_r+0xdbc>
10104194:	200d883a 	mov	r6,r4
10104198:	100b883a 	mov	r5,r2
1010419c:	e009883a 	mov	r4,fp
101041a0:	010737c0 	call	1010737c <__pow5mult>
101041a4:	d9800317 	ldw	r6,12(sp)
101041a8:	102b883a 	mov	r21,r2
101041ac:	b981810e 	bge	r23,r6,101047b4 <_dtoa_r+0x10a4>
101041b0:	0027883a 	mov	r19,zero
101041b4:	a8800417 	ldw	r2,16(r21)
101041b8:	05c00804 	movi	r23,32
101041bc:	10800104 	addi	r2,r2,4
101041c0:	1085883a 	add	r2,r2,r2
101041c4:	1085883a 	add	r2,r2,r2
101041c8:	a885883a 	add	r2,r21,r2
101041cc:	11000017 	ldw	r4,0(r2)
101041d0:	0106f9c0 	call	10106f9c <__hi0bits>
101041d4:	b885c83a 	sub	r2,r23,r2
101041d8:	1585883a 	add	r2,r2,r22
101041dc:	108007cc 	andi	r2,r2,31
101041e0:	1000b326 	beq	r2,zero,101044b0 <_dtoa_r+0xda0>
101041e4:	00c00804 	movi	r3,32
101041e8:	1887c83a 	sub	r3,r3,r2
101041ec:	01000104 	movi	r4,4
101041f0:	20c2cd0e 	bge	r4,r3,10104d28 <_dtoa_r+0x1618>
101041f4:	00c00704 	movi	r3,28
101041f8:	1885c83a 	sub	r2,r3,r2
101041fc:	d8c00817 	ldw	r3,32(sp)
10104200:	a0a9883a 	add	r20,r20,r2
10104204:	b0ad883a 	add	r22,r22,r2
10104208:	1887883a 	add	r3,r3,r2
1010420c:	d8c00815 	stw	r3,32(sp)
10104210:	d9800817 	ldw	r6,32(sp)
10104214:	0180040e 	bge	zero,r6,10104228 <_dtoa_r+0xb18>
10104218:	800b883a 	mov	r5,r16
1010421c:	e009883a 	mov	r4,fp
10104220:	01074bc0 	call	101074bc <__lshift>
10104224:	1021883a 	mov	r16,r2
10104228:	0580050e 	bge	zero,r22,10104240 <_dtoa_r+0xb30>
1010422c:	a80b883a 	mov	r5,r21
10104230:	b00d883a 	mov	r6,r22
10104234:	e009883a 	mov	r4,fp
10104238:	01074bc0 	call	101074bc <__lshift>
1010423c:	102b883a 	mov	r21,r2
10104240:	d9c00e17 	ldw	r7,56(sp)
10104244:	3801211e 	bne	r7,zero,101046cc <_dtoa_r+0xfbc>
10104248:	d9800617 	ldw	r6,24(sp)
1010424c:	0181380e 	bge	zero,r6,10104730 <_dtoa_r+0x1020>
10104250:	d8c00b17 	ldw	r3,44(sp)
10104254:	1800ab1e 	bne	r3,zero,10104504 <_dtoa_r+0xdf4>
10104258:	dc800717 	ldw	r18,28(sp)
1010425c:	dcc00617 	ldw	r19,24(sp)
10104260:	9029883a 	mov	r20,r18
10104264:	00000206 	br	10104270 <_dtoa_r+0xb60>
10104268:	0106d500 	call	10106d50 <__multadd>
1010426c:	1021883a 	mov	r16,r2
10104270:	a80b883a 	mov	r5,r21
10104274:	8009883a 	mov	r4,r16
10104278:	01034e80 	call	101034e8 <quorem>
1010427c:	10800c04 	addi	r2,r2,48
10104280:	90800005 	stb	r2,0(r18)
10104284:	94800044 	addi	r18,r18,1
10104288:	9507c83a 	sub	r3,r18,r20
1010428c:	000f883a 	mov	r7,zero
10104290:	01800284 	movi	r6,10
10104294:	800b883a 	mov	r5,r16
10104298:	e009883a 	mov	r4,fp
1010429c:	1cfff216 	blt	r3,r19,10104268 <__alt_data_end+0xfffe4268>
101042a0:	1011883a 	mov	r8,r2
101042a4:	d8800617 	ldw	r2,24(sp)
101042a8:	0082370e 	bge	zero,r2,10104b88 <_dtoa_r+0x1478>
101042ac:	d9000717 	ldw	r4,28(sp)
101042b0:	0025883a 	mov	r18,zero
101042b4:	20af883a 	add	r23,r4,r2
101042b8:	01800044 	movi	r6,1
101042bc:	800b883a 	mov	r5,r16
101042c0:	e009883a 	mov	r4,fp
101042c4:	da001715 	stw	r8,92(sp)
101042c8:	01074bc0 	call	101074bc <__lshift>
101042cc:	a80b883a 	mov	r5,r21
101042d0:	1009883a 	mov	r4,r2
101042d4:	d8800915 	stw	r2,36(sp)
101042d8:	01076040 	call	10107604 <__mcmp>
101042dc:	da001717 	ldw	r8,92(sp)
101042e0:	0081800e 	bge	zero,r2,101048e4 <_dtoa_r+0x11d4>
101042e4:	b93fffc3 	ldbu	r4,-1(r23)
101042e8:	b8bfffc4 	addi	r2,r23,-1
101042ec:	1007883a 	mov	r3,r2
101042f0:	01800e44 	movi	r6,57
101042f4:	d9c00717 	ldw	r7,28(sp)
101042f8:	00000506 	br	10104310 <_dtoa_r+0xc00>
101042fc:	18ffffc4 	addi	r3,r3,-1
10104300:	11c12326 	beq	r2,r7,10104790 <_dtoa_r+0x1080>
10104304:	19000003 	ldbu	r4,0(r3)
10104308:	102f883a 	mov	r23,r2
1010430c:	10bfffc4 	addi	r2,r2,-1
10104310:	21403fcc 	andi	r5,r4,255
10104314:	2940201c 	xori	r5,r5,128
10104318:	297fe004 	addi	r5,r5,-128
1010431c:	29bff726 	beq	r5,r6,101042fc <__alt_data_end+0xfffe42fc>
10104320:	21000044 	addi	r4,r4,1
10104324:	11000005 	stb	r4,0(r2)
10104328:	a80b883a 	mov	r5,r21
1010432c:	e009883a 	mov	r4,fp
10104330:	0106d280 	call	10106d28 <_Bfree>
10104334:	883ea026 	beq	r17,zero,10103db8 <__alt_data_end+0xfffe3db8>
10104338:	90000426 	beq	r18,zero,1010434c <_dtoa_r+0xc3c>
1010433c:	94400326 	beq	r18,r17,1010434c <_dtoa_r+0xc3c>
10104340:	900b883a 	mov	r5,r18
10104344:	e009883a 	mov	r4,fp
10104348:	0106d280 	call	10106d28 <_Bfree>
1010434c:	880b883a 	mov	r5,r17
10104350:	e009883a 	mov	r4,fp
10104354:	0106d280 	call	10106d28 <_Bfree>
10104358:	003e9706 	br	10103db8 <__alt_data_end+0xfffe3db8>
1010435c:	01800044 	movi	r6,1
10104360:	d9800e15 	stw	r6,56(sp)
10104364:	003d9606 	br	101039c0 <__alt_data_end+0xfffe39c0>
10104368:	d8800817 	ldw	r2,32(sp)
1010436c:	d8c00517 	ldw	r3,20(sp)
10104370:	d8000d15 	stw	zero,52(sp)
10104374:	10c5c83a 	sub	r2,r2,r3
10104378:	00c9c83a 	sub	r4,zero,r3
1010437c:	d8800815 	stw	r2,32(sp)
10104380:	d9000a15 	stw	r4,40(sp)
10104384:	003d9706 	br	101039e4 <__alt_data_end+0xfffe39e4>
10104388:	05adc83a 	sub	r22,zero,r22
1010438c:	dd800815 	stw	r22,32(sp)
10104390:	002d883a 	mov	r22,zero
10104394:	003d8e06 	br	101039d0 <__alt_data_end+0xfffe39d0>
10104398:	d9000517 	ldw	r4,20(sp)
1010439c:	010d83c0 	call	1010d83c <__floatsidf>
101043a0:	100d883a 	mov	r6,r2
101043a4:	180f883a 	mov	r7,r3
101043a8:	a009883a 	mov	r4,r20
101043ac:	880b883a 	mov	r5,r17
101043b0:	010c3fc0 	call	1010c3fc <__eqdf2>
101043b4:	103d7126 	beq	r2,zero,1010397c <__alt_data_end+0xfffe397c>
101043b8:	d9c00517 	ldw	r7,20(sp)
101043bc:	39ffffc4 	addi	r7,r7,-1
101043c0:	d9c00515 	stw	r7,20(sp)
101043c4:	003d6d06 	br	1010397c <__alt_data_end+0xfffe397c>
101043c8:	dd400a17 	ldw	r21,40(sp)
101043cc:	dd000817 	ldw	r20,32(sp)
101043d0:	0023883a 	mov	r17,zero
101043d4:	003f4806 	br	101040f8 <__alt_data_end+0xfffe40f8>
101043d8:	10e3c83a 	sub	r17,r2,r3
101043dc:	9448983a 	sll	r4,r18,r17
101043e0:	003d3206 	br	101038ac <__alt_data_end+0xfffe38ac>
101043e4:	d8000e15 	stw	zero,56(sp)
101043e8:	003d7506 	br	101039c0 <__alt_data_end+0xfffe39c0>
101043ec:	b005883a 	mov	r2,r22
101043f0:	003f4506 	br	10104108 <__alt_data_end+0xfffe4108>
101043f4:	dc000915 	stw	r16,36(sp)
101043f8:	d9800a17 	ldw	r6,40(sp)
101043fc:	d9400917 	ldw	r5,36(sp)
10104400:	e009883a 	mov	r4,fp
10104404:	010737c0 	call	1010737c <__pow5mult>
10104408:	1021883a 	mov	r16,r2
1010440c:	003f5a06 	br	10104178 <__alt_data_end+0xfffe4178>
10104410:	01c00044 	movi	r7,1
10104414:	d9c00b15 	stw	r7,44(sp)
10104418:	d8802217 	ldw	r2,136(sp)
1010441c:	0081280e 	bge	zero,r2,101048c0 <_dtoa_r+0x11b0>
10104420:	100d883a 	mov	r6,r2
10104424:	1021883a 	mov	r16,r2
10104428:	d8800c15 	stw	r2,48(sp)
1010442c:	d8800615 	stw	r2,24(sp)
10104430:	003d8806 	br	10103a54 <__alt_data_end+0xfffe3a54>
10104434:	d8800617 	ldw	r2,24(sp)
10104438:	00be9b16 	blt	zero,r2,10103ea8 <__alt_data_end+0xfffe3ea8>
1010443c:	10010f1e 	bne	r2,zero,1010487c <_dtoa_r+0x116c>
10104440:	880b883a 	mov	r5,r17
10104444:	000d883a 	mov	r6,zero
10104448:	01d00534 	movhi	r7,16404
1010444c:	8009883a 	mov	r4,r16
10104450:	010c6540 	call	1010c654 <__muldf3>
10104454:	900d883a 	mov	r6,r18
10104458:	980f883a 	mov	r7,r19
1010445c:	1009883a 	mov	r4,r2
10104460:	180b883a 	mov	r5,r3
10104464:	010c4840 	call	1010c484 <__gedf2>
10104468:	002b883a 	mov	r21,zero
1010446c:	0023883a 	mov	r17,zero
10104470:	1000bf16 	blt	r2,zero,10104770 <_dtoa_r+0x1060>
10104474:	d9802217 	ldw	r6,136(sp)
10104478:	ddc00717 	ldw	r23,28(sp)
1010447c:	018c303a 	nor	r6,zero,r6
10104480:	d9800515 	stw	r6,20(sp)
10104484:	a80b883a 	mov	r5,r21
10104488:	e009883a 	mov	r4,fp
1010448c:	0106d280 	call	10106d28 <_Bfree>
10104490:	883e4926 	beq	r17,zero,10103db8 <__alt_data_end+0xfffe3db8>
10104494:	003fad06 	br	1010434c <__alt_data_end+0xfffe434c>
10104498:	d9c01117 	ldw	r7,68(sp)
1010449c:	3801bc26 	beq	r7,zero,10104b90 <_dtoa_r+0x1480>
101044a0:	10810cc4 	addi	r2,r2,1075
101044a4:	dd400a17 	ldw	r21,40(sp)
101044a8:	dd000817 	ldw	r20,32(sp)
101044ac:	003f0a06 	br	101040d8 <__alt_data_end+0xfffe40d8>
101044b0:	00800704 	movi	r2,28
101044b4:	d9000817 	ldw	r4,32(sp)
101044b8:	a0a9883a 	add	r20,r20,r2
101044bc:	b0ad883a 	add	r22,r22,r2
101044c0:	2089883a 	add	r4,r4,r2
101044c4:	d9000815 	stw	r4,32(sp)
101044c8:	003f5106 	br	10104210 <__alt_data_end+0xfffe4210>
101044cc:	d8c00317 	ldw	r3,12(sp)
101044d0:	b8c1fc0e 	bge	r23,r3,10104cc4 <_dtoa_r+0x15b4>
101044d4:	0027883a 	mov	r19,zero
101044d8:	b805883a 	mov	r2,r23
101044dc:	003f3e06 	br	101041d8 <__alt_data_end+0xfffe41d8>
101044e0:	880b883a 	mov	r5,r17
101044e4:	e009883a 	mov	r4,fp
101044e8:	000f883a 	mov	r7,zero
101044ec:	01800284 	movi	r6,10
101044f0:	0106d500 	call	10106d50 <__multadd>
101044f4:	d9000c17 	ldw	r4,48(sp)
101044f8:	1023883a 	mov	r17,r2
101044fc:	0102040e 	bge	zero,r4,10104d10 <_dtoa_r+0x1600>
10104500:	d9000615 	stw	r4,24(sp)
10104504:	0500050e 	bge	zero,r20,1010451c <_dtoa_r+0xe0c>
10104508:	880b883a 	mov	r5,r17
1010450c:	a00d883a 	mov	r6,r20
10104510:	e009883a 	mov	r4,fp
10104514:	01074bc0 	call	101074bc <__lshift>
10104518:	1023883a 	mov	r17,r2
1010451c:	9801241e 	bne	r19,zero,101049b0 <_dtoa_r+0x12a0>
10104520:	8829883a 	mov	r20,r17
10104524:	d9000617 	ldw	r4,24(sp)
10104528:	dcc00717 	ldw	r19,28(sp)
1010452c:	9480004c 	andi	r18,r18,1
10104530:	20bfffc4 	addi	r2,r4,-1
10104534:	9885883a 	add	r2,r19,r2
10104538:	d8800415 	stw	r2,16(sp)
1010453c:	dc800615 	stw	r18,24(sp)
10104540:	a80b883a 	mov	r5,r21
10104544:	8009883a 	mov	r4,r16
10104548:	01034e80 	call	101034e8 <quorem>
1010454c:	880b883a 	mov	r5,r17
10104550:	8009883a 	mov	r4,r16
10104554:	102f883a 	mov	r23,r2
10104558:	01076040 	call	10107604 <__mcmp>
1010455c:	a80b883a 	mov	r5,r21
10104560:	a00d883a 	mov	r6,r20
10104564:	e009883a 	mov	r4,fp
10104568:	102d883a 	mov	r22,r2
1010456c:	01076640 	call	10107664 <__mdiff>
10104570:	1007883a 	mov	r3,r2
10104574:	10800317 	ldw	r2,12(r2)
10104578:	bc800c04 	addi	r18,r23,48
1010457c:	180b883a 	mov	r5,r3
10104580:	10004e1e 	bne	r2,zero,101046bc <_dtoa_r+0xfac>
10104584:	8009883a 	mov	r4,r16
10104588:	d8c01615 	stw	r3,88(sp)
1010458c:	01076040 	call	10107604 <__mcmp>
10104590:	d8c01617 	ldw	r3,88(sp)
10104594:	e009883a 	mov	r4,fp
10104598:	d8801615 	stw	r2,88(sp)
1010459c:	180b883a 	mov	r5,r3
101045a0:	0106d280 	call	10106d28 <_Bfree>
101045a4:	d8801617 	ldw	r2,88(sp)
101045a8:	1000041e 	bne	r2,zero,101045bc <_dtoa_r+0xeac>
101045ac:	d9800317 	ldw	r6,12(sp)
101045b0:	3000021e 	bne	r6,zero,101045bc <_dtoa_r+0xeac>
101045b4:	d8c00617 	ldw	r3,24(sp)
101045b8:	18003726 	beq	r3,zero,10104698 <_dtoa_r+0xf88>
101045bc:	b0002016 	blt	r22,zero,10104640 <_dtoa_r+0xf30>
101045c0:	b000041e 	bne	r22,zero,101045d4 <_dtoa_r+0xec4>
101045c4:	d9000317 	ldw	r4,12(sp)
101045c8:	2000021e 	bne	r4,zero,101045d4 <_dtoa_r+0xec4>
101045cc:	d8c00617 	ldw	r3,24(sp)
101045d0:	18001b26 	beq	r3,zero,10104640 <_dtoa_r+0xf30>
101045d4:	00810716 	blt	zero,r2,101049f4 <_dtoa_r+0x12e4>
101045d8:	d8c00417 	ldw	r3,16(sp)
101045dc:	9d800044 	addi	r22,r19,1
101045e0:	9c800005 	stb	r18,0(r19)
101045e4:	b02f883a 	mov	r23,r22
101045e8:	98c10626 	beq	r19,r3,10104a04 <_dtoa_r+0x12f4>
101045ec:	800b883a 	mov	r5,r16
101045f0:	000f883a 	mov	r7,zero
101045f4:	01800284 	movi	r6,10
101045f8:	e009883a 	mov	r4,fp
101045fc:	0106d500 	call	10106d50 <__multadd>
10104600:	1021883a 	mov	r16,r2
10104604:	000f883a 	mov	r7,zero
10104608:	01800284 	movi	r6,10
1010460c:	880b883a 	mov	r5,r17
10104610:	e009883a 	mov	r4,fp
10104614:	8d002526 	beq	r17,r20,101046ac <_dtoa_r+0xf9c>
10104618:	0106d500 	call	10106d50 <__multadd>
1010461c:	a00b883a 	mov	r5,r20
10104620:	000f883a 	mov	r7,zero
10104624:	01800284 	movi	r6,10
10104628:	e009883a 	mov	r4,fp
1010462c:	1023883a 	mov	r17,r2
10104630:	0106d500 	call	10106d50 <__multadd>
10104634:	1029883a 	mov	r20,r2
10104638:	b027883a 	mov	r19,r22
1010463c:	003fc006 	br	10104540 <__alt_data_end+0xfffe4540>
10104640:	9011883a 	mov	r8,r18
10104644:	00800e0e 	bge	zero,r2,10104680 <_dtoa_r+0xf70>
10104648:	800b883a 	mov	r5,r16
1010464c:	01800044 	movi	r6,1
10104650:	e009883a 	mov	r4,fp
10104654:	da001715 	stw	r8,92(sp)
10104658:	01074bc0 	call	101074bc <__lshift>
1010465c:	a80b883a 	mov	r5,r21
10104660:	1009883a 	mov	r4,r2
10104664:	1021883a 	mov	r16,r2
10104668:	01076040 	call	10107604 <__mcmp>
1010466c:	da001717 	ldw	r8,92(sp)
10104670:	0081960e 	bge	zero,r2,10104ccc <_dtoa_r+0x15bc>
10104674:	00800e44 	movi	r2,57
10104678:	40817026 	beq	r8,r2,10104c3c <_dtoa_r+0x152c>
1010467c:	ba000c44 	addi	r8,r23,49
10104680:	8825883a 	mov	r18,r17
10104684:	9dc00044 	addi	r23,r19,1
10104688:	9a000005 	stb	r8,0(r19)
1010468c:	a023883a 	mov	r17,r20
10104690:	dc000915 	stw	r16,36(sp)
10104694:	003f2406 	br	10104328 <__alt_data_end+0xfffe4328>
10104698:	00800e44 	movi	r2,57
1010469c:	9011883a 	mov	r8,r18
101046a0:	90816626 	beq	r18,r2,10104c3c <_dtoa_r+0x152c>
101046a4:	05bff516 	blt	zero,r22,1010467c <__alt_data_end+0xfffe467c>
101046a8:	003ff506 	br	10104680 <__alt_data_end+0xfffe4680>
101046ac:	0106d500 	call	10106d50 <__multadd>
101046b0:	1023883a 	mov	r17,r2
101046b4:	1029883a 	mov	r20,r2
101046b8:	003fdf06 	br	10104638 <__alt_data_end+0xfffe4638>
101046bc:	e009883a 	mov	r4,fp
101046c0:	0106d280 	call	10106d28 <_Bfree>
101046c4:	00800044 	movi	r2,1
101046c8:	003fbc06 	br	101045bc <__alt_data_end+0xfffe45bc>
101046cc:	a80b883a 	mov	r5,r21
101046d0:	8009883a 	mov	r4,r16
101046d4:	01076040 	call	10107604 <__mcmp>
101046d8:	103edb0e 	bge	r2,zero,10104248 <__alt_data_end+0xfffe4248>
101046dc:	800b883a 	mov	r5,r16
101046e0:	000f883a 	mov	r7,zero
101046e4:	01800284 	movi	r6,10
101046e8:	e009883a 	mov	r4,fp
101046ec:	0106d500 	call	10106d50 <__multadd>
101046f0:	1021883a 	mov	r16,r2
101046f4:	d8800517 	ldw	r2,20(sp)
101046f8:	d8c00b17 	ldw	r3,44(sp)
101046fc:	10bfffc4 	addi	r2,r2,-1
10104700:	d8800515 	stw	r2,20(sp)
10104704:	183f761e 	bne	r3,zero,101044e0 <__alt_data_end+0xfffe44e0>
10104708:	d9000c17 	ldw	r4,48(sp)
1010470c:	0101730e 	bge	zero,r4,10104cdc <_dtoa_r+0x15cc>
10104710:	d9000615 	stw	r4,24(sp)
10104714:	003ed006 	br	10104258 <__alt_data_end+0xfffe4258>
10104718:	00800084 	movi	r2,2
1010471c:	3081861e 	bne	r6,r2,10104d38 <_dtoa_r+0x1628>
10104720:	d8000b15 	stw	zero,44(sp)
10104724:	003f3c06 	br	10104418 <__alt_data_end+0xfffe4418>
10104728:	dc000917 	ldw	r16,36(sp)
1010472c:	003e9206 	br	10104178 <__alt_data_end+0xfffe4178>
10104730:	d9c00317 	ldw	r7,12(sp)
10104734:	00800084 	movi	r2,2
10104738:	11fec50e 	bge	r2,r7,10104250 <__alt_data_end+0xfffe4250>
1010473c:	d9000617 	ldw	r4,24(sp)
10104740:	20013c1e 	bne	r4,zero,10104c34 <_dtoa_r+0x1524>
10104744:	a80b883a 	mov	r5,r21
10104748:	000f883a 	mov	r7,zero
1010474c:	01800144 	movi	r6,5
10104750:	e009883a 	mov	r4,fp
10104754:	0106d500 	call	10106d50 <__multadd>
10104758:	100b883a 	mov	r5,r2
1010475c:	8009883a 	mov	r4,r16
10104760:	102b883a 	mov	r21,r2
10104764:	01076040 	call	10107604 <__mcmp>
10104768:	dc000915 	stw	r16,36(sp)
1010476c:	00bf410e 	bge	zero,r2,10104474 <__alt_data_end+0xfffe4474>
10104770:	d9c00717 	ldw	r7,28(sp)
10104774:	00800c44 	movi	r2,49
10104778:	38800005 	stb	r2,0(r7)
1010477c:	d8800517 	ldw	r2,20(sp)
10104780:	3dc00044 	addi	r23,r7,1
10104784:	10800044 	addi	r2,r2,1
10104788:	d8800515 	stw	r2,20(sp)
1010478c:	003f3d06 	br	10104484 <__alt_data_end+0xfffe4484>
10104790:	d9800517 	ldw	r6,20(sp)
10104794:	d9c00717 	ldw	r7,28(sp)
10104798:	00800c44 	movi	r2,49
1010479c:	31800044 	addi	r6,r6,1
101047a0:	d9800515 	stw	r6,20(sp)
101047a4:	38800005 	stb	r2,0(r7)
101047a8:	003edf06 	br	10104328 <__alt_data_end+0xfffe4328>
101047ac:	d8000b15 	stw	zero,44(sp)
101047b0:	003c9f06 	br	10103a30 <__alt_data_end+0xfffe3a30>
101047b4:	903e7e1e 	bne	r18,zero,101041b0 <__alt_data_end+0xfffe41b0>
101047b8:	00800434 	movhi	r2,16
101047bc:	10bfffc4 	addi	r2,r2,-1
101047c0:	9884703a 	and	r2,r19,r2
101047c4:	1000ea1e 	bne	r2,zero,10104b70 <_dtoa_r+0x1460>
101047c8:	9cdffc2c 	andhi	r19,r19,32752
101047cc:	9800e826 	beq	r19,zero,10104b70 <_dtoa_r+0x1460>
101047d0:	d9c00817 	ldw	r7,32(sp)
101047d4:	b5800044 	addi	r22,r22,1
101047d8:	04c00044 	movi	r19,1
101047dc:	39c00044 	addi	r7,r7,1
101047e0:	d9c00815 	stw	r7,32(sp)
101047e4:	d8800d17 	ldw	r2,52(sp)
101047e8:	103e721e 	bne	r2,zero,101041b4 <__alt_data_end+0xfffe41b4>
101047ec:	00800044 	movi	r2,1
101047f0:	003e7906 	br	101041d8 <__alt_data_end+0xfffe41d8>
101047f4:	8009883a 	mov	r4,r16
101047f8:	010d83c0 	call	1010d83c <__floatsidf>
101047fc:	d9800f17 	ldw	r6,60(sp)
10104800:	d9c01017 	ldw	r7,64(sp)
10104804:	1009883a 	mov	r4,r2
10104808:	180b883a 	mov	r5,r3
1010480c:	010c6540 	call	1010c654 <__muldf3>
10104810:	000d883a 	mov	r6,zero
10104814:	01d00734 	movhi	r7,16412
10104818:	1009883a 	mov	r4,r2
1010481c:	180b883a 	mov	r5,r3
10104820:	010b1800 	call	1010b180 <__adddf3>
10104824:	047f3034 	movhi	r17,64704
10104828:	1021883a 	mov	r16,r2
1010482c:	1c63883a 	add	r17,r3,r17
10104830:	d9000f17 	ldw	r4,60(sp)
10104834:	d9401017 	ldw	r5,64(sp)
10104838:	000d883a 	mov	r6,zero
1010483c:	01d00534 	movhi	r7,16404
10104840:	010cec00 	call	1010cec0 <__subdf3>
10104844:	800d883a 	mov	r6,r16
10104848:	880f883a 	mov	r7,r17
1010484c:	1009883a 	mov	r4,r2
10104850:	180b883a 	mov	r5,r3
10104854:	102b883a 	mov	r21,r2
10104858:	1829883a 	mov	r20,r3
1010485c:	010c4840 	call	1010c484 <__gedf2>
10104860:	00806c16 	blt	zero,r2,10104a14 <_dtoa_r+0x1304>
10104864:	89e0003c 	xorhi	r7,r17,32768
10104868:	800d883a 	mov	r6,r16
1010486c:	a809883a 	mov	r4,r21
10104870:	a00b883a 	mov	r5,r20
10104874:	010c5600 	call	1010c560 <__ledf2>
10104878:	103d7e0e 	bge	r2,zero,10103e74 <__alt_data_end+0xfffe3e74>
1010487c:	002b883a 	mov	r21,zero
10104880:	0023883a 	mov	r17,zero
10104884:	003efb06 	br	10104474 <__alt_data_end+0xfffe4474>
10104888:	d8800717 	ldw	r2,28(sp)
1010488c:	003bd006 	br	101037d0 <__alt_data_end+0xfffe37d0>
10104890:	d9000a17 	ldw	r4,40(sp)
10104894:	d9800d17 	ldw	r6,52(sp)
10104898:	dd400a15 	stw	r21,40(sp)
1010489c:	a905c83a 	sub	r2,r21,r4
101048a0:	308d883a 	add	r6,r6,r2
101048a4:	d9800d15 	stw	r6,52(sp)
101048a8:	002b883a 	mov	r21,zero
101048ac:	003e0606 	br	101040c8 <__alt_data_end+0xfffe40c8>
101048b0:	9023883a 	mov	r17,r18
101048b4:	9829883a 	mov	r20,r19
101048b8:	04000084 	movi	r16,2
101048bc:	003c9206 	br	10103b08 <__alt_data_end+0xfffe3b08>
101048c0:	04000044 	movi	r16,1
101048c4:	dc000c15 	stw	r16,48(sp)
101048c8:	dc000615 	stw	r16,24(sp)
101048cc:	dc002215 	stw	r16,136(sp)
101048d0:	e0001115 	stw	zero,68(fp)
101048d4:	000b883a 	mov	r5,zero
101048d8:	003c6906 	br	10103a80 <__alt_data_end+0xfffe3a80>
101048dc:	3021883a 	mov	r16,r6
101048e0:	003ffb06 	br	101048d0 <__alt_data_end+0xfffe48d0>
101048e4:	1000021e 	bne	r2,zero,101048f0 <_dtoa_r+0x11e0>
101048e8:	4200004c 	andi	r8,r8,1
101048ec:	403e7d1e 	bne	r8,zero,101042e4 <__alt_data_end+0xfffe42e4>
101048f0:	01000c04 	movi	r4,48
101048f4:	00000106 	br	101048fc <_dtoa_r+0x11ec>
101048f8:	102f883a 	mov	r23,r2
101048fc:	b8bfffc4 	addi	r2,r23,-1
10104900:	10c00007 	ldb	r3,0(r2)
10104904:	193ffc26 	beq	r3,r4,101048f8 <__alt_data_end+0xfffe48f8>
10104908:	003e8706 	br	10104328 <__alt_data_end+0xfffe4328>
1010490c:	d8800517 	ldw	r2,20(sp)
10104910:	00a3c83a 	sub	r17,zero,r2
10104914:	8800a426 	beq	r17,zero,10104ba8 <_dtoa_r+0x1498>
10104918:	888003cc 	andi	r2,r17,15
1010491c:	100490fa 	slli	r2,r2,3
10104920:	00c40474 	movhi	r3,4113
10104924:	18c1c404 	addi	r3,r3,1808
10104928:	1885883a 	add	r2,r3,r2
1010492c:	11800017 	ldw	r6,0(r2)
10104930:	11c00117 	ldw	r7,4(r2)
10104934:	9009883a 	mov	r4,r18
10104938:	980b883a 	mov	r5,r19
1010493c:	8823d13a 	srai	r17,r17,4
10104940:	010c6540 	call	1010c654 <__muldf3>
10104944:	d8800f15 	stw	r2,60(sp)
10104948:	d8c01015 	stw	r3,64(sp)
1010494c:	8800e826 	beq	r17,zero,10104cf0 <_dtoa_r+0x15e0>
10104950:	05040474 	movhi	r20,4113
10104954:	a501ba04 	addi	r20,r20,1768
10104958:	04000084 	movi	r16,2
1010495c:	8980004c 	andi	r6,r17,1
10104960:	1009883a 	mov	r4,r2
10104964:	8823d07a 	srai	r17,r17,1
10104968:	180b883a 	mov	r5,r3
1010496c:	30000426 	beq	r6,zero,10104980 <_dtoa_r+0x1270>
10104970:	a1800017 	ldw	r6,0(r20)
10104974:	a1c00117 	ldw	r7,4(r20)
10104978:	84000044 	addi	r16,r16,1
1010497c:	010c6540 	call	1010c654 <__muldf3>
10104980:	a5000204 	addi	r20,r20,8
10104984:	883ff51e 	bne	r17,zero,1010495c <__alt_data_end+0xfffe495c>
10104988:	d8800f15 	stw	r2,60(sp)
1010498c:	d8c01015 	stw	r3,64(sp)
10104990:	003c7606 	br	10103b6c <__alt_data_end+0xfffe3b6c>
10104994:	00c00c04 	movi	r3,48
10104998:	10c00005 	stb	r3,0(r2)
1010499c:	d8c00517 	ldw	r3,20(sp)
101049a0:	bd3fffc3 	ldbu	r20,-1(r23)
101049a4:	18c00044 	addi	r3,r3,1
101049a8:	d8c00515 	stw	r3,20(sp)
101049ac:	003db906 	br	10104094 <__alt_data_end+0xfffe4094>
101049b0:	89400117 	ldw	r5,4(r17)
101049b4:	e009883a 	mov	r4,fp
101049b8:	0106c800 	call	10106c80 <_Balloc>
101049bc:	89800417 	ldw	r6,16(r17)
101049c0:	89400304 	addi	r5,r17,12
101049c4:	11000304 	addi	r4,r2,12
101049c8:	31800084 	addi	r6,r6,2
101049cc:	318d883a 	add	r6,r6,r6
101049d0:	318d883a 	add	r6,r6,r6
101049d4:	1027883a 	mov	r19,r2
101049d8:	0100cc00 	call	10100cc0 <memcpy>
101049dc:	01800044 	movi	r6,1
101049e0:	980b883a 	mov	r5,r19
101049e4:	e009883a 	mov	r4,fp
101049e8:	01074bc0 	call	101074bc <__lshift>
101049ec:	1029883a 	mov	r20,r2
101049f0:	003ecc06 	br	10104524 <__alt_data_end+0xfffe4524>
101049f4:	00800e44 	movi	r2,57
101049f8:	90809026 	beq	r18,r2,10104c3c <_dtoa_r+0x152c>
101049fc:	92000044 	addi	r8,r18,1
10104a00:	003f1f06 	br	10104680 <__alt_data_end+0xfffe4680>
10104a04:	9011883a 	mov	r8,r18
10104a08:	8825883a 	mov	r18,r17
10104a0c:	a023883a 	mov	r17,r20
10104a10:	003e2906 	br	101042b8 <__alt_data_end+0xfffe42b8>
10104a14:	002b883a 	mov	r21,zero
10104a18:	0023883a 	mov	r17,zero
10104a1c:	003f5406 	br	10104770 <__alt_data_end+0xfffe4770>
10104a20:	61bfffc4 	addi	r6,r12,-1
10104a24:	300490fa 	slli	r2,r6,3
10104a28:	00c40474 	movhi	r3,4113
10104a2c:	18c1c404 	addi	r3,r3,1808
10104a30:	1885883a 	add	r2,r3,r2
10104a34:	11000017 	ldw	r4,0(r2)
10104a38:	11400117 	ldw	r5,4(r2)
10104a3c:	d8800717 	ldw	r2,28(sp)
10104a40:	880f883a 	mov	r7,r17
10104a44:	d9801215 	stw	r6,72(sp)
10104a48:	800d883a 	mov	r6,r16
10104a4c:	db001615 	stw	r12,88(sp)
10104a50:	15c00044 	addi	r23,r2,1
10104a54:	010c6540 	call	1010c654 <__muldf3>
10104a58:	d9401017 	ldw	r5,64(sp)
10104a5c:	d9000f17 	ldw	r4,60(sp)
10104a60:	d8c01515 	stw	r3,84(sp)
10104a64:	d8801415 	stw	r2,80(sp)
10104a68:	010d7bc0 	call	1010d7bc <__fixdfsi>
10104a6c:	1009883a 	mov	r4,r2
10104a70:	1021883a 	mov	r16,r2
10104a74:	010d83c0 	call	1010d83c <__floatsidf>
10104a78:	d9000f17 	ldw	r4,60(sp)
10104a7c:	d9401017 	ldw	r5,64(sp)
10104a80:	100d883a 	mov	r6,r2
10104a84:	180f883a 	mov	r7,r3
10104a88:	010cec00 	call	1010cec0 <__subdf3>
10104a8c:	1829883a 	mov	r20,r3
10104a90:	d8c00717 	ldw	r3,28(sp)
10104a94:	84000c04 	addi	r16,r16,48
10104a98:	1023883a 	mov	r17,r2
10104a9c:	1c000005 	stb	r16,0(r3)
10104aa0:	db001617 	ldw	r12,88(sp)
10104aa4:	00800044 	movi	r2,1
10104aa8:	60802226 	beq	r12,r2,10104b34 <_dtoa_r+0x1424>
10104aac:	d9c00717 	ldw	r7,28(sp)
10104ab0:	8805883a 	mov	r2,r17
10104ab4:	b82b883a 	mov	r21,r23
10104ab8:	3b19883a 	add	r12,r7,r12
10104abc:	6023883a 	mov	r17,r12
10104ac0:	a007883a 	mov	r3,r20
10104ac4:	dc800f15 	stw	r18,60(sp)
10104ac8:	000d883a 	mov	r6,zero
10104acc:	01d00934 	movhi	r7,16420
10104ad0:	1009883a 	mov	r4,r2
10104ad4:	180b883a 	mov	r5,r3
10104ad8:	010c6540 	call	1010c654 <__muldf3>
10104adc:	180b883a 	mov	r5,r3
10104ae0:	1009883a 	mov	r4,r2
10104ae4:	1829883a 	mov	r20,r3
10104ae8:	1025883a 	mov	r18,r2
10104aec:	010d7bc0 	call	1010d7bc <__fixdfsi>
10104af0:	1009883a 	mov	r4,r2
10104af4:	1021883a 	mov	r16,r2
10104af8:	010d83c0 	call	1010d83c <__floatsidf>
10104afc:	100d883a 	mov	r6,r2
10104b00:	180f883a 	mov	r7,r3
10104b04:	9009883a 	mov	r4,r18
10104b08:	a00b883a 	mov	r5,r20
10104b0c:	84000c04 	addi	r16,r16,48
10104b10:	010cec00 	call	1010cec0 <__subdf3>
10104b14:	ad400044 	addi	r21,r21,1
10104b18:	ac3fffc5 	stb	r16,-1(r21)
10104b1c:	ac7fea1e 	bne	r21,r17,10104ac8 <__alt_data_end+0xfffe4ac8>
10104b20:	1023883a 	mov	r17,r2
10104b24:	d8801217 	ldw	r2,72(sp)
10104b28:	dc800f17 	ldw	r18,60(sp)
10104b2c:	1829883a 	mov	r20,r3
10104b30:	b8af883a 	add	r23,r23,r2
10104b34:	d9001417 	ldw	r4,80(sp)
10104b38:	d9401517 	ldw	r5,84(sp)
10104b3c:	000d883a 	mov	r6,zero
10104b40:	01cff834 	movhi	r7,16352
10104b44:	010b1800 	call	1010b180 <__adddf3>
10104b48:	880d883a 	mov	r6,r17
10104b4c:	a00f883a 	mov	r7,r20
10104b50:	1009883a 	mov	r4,r2
10104b54:	180b883a 	mov	r5,r3
10104b58:	010c5600 	call	1010c560 <__ledf2>
10104b5c:	10003e0e 	bge	r2,zero,10104c58 <_dtoa_r+0x1548>
10104b60:	d9001317 	ldw	r4,76(sp)
10104b64:	bd3fffc3 	ldbu	r20,-1(r23)
10104b68:	d9000515 	stw	r4,20(sp)
10104b6c:	003d3b06 	br	1010405c <__alt_data_end+0xfffe405c>
10104b70:	0027883a 	mov	r19,zero
10104b74:	003f1b06 	br	101047e4 <__alt_data_end+0xfffe47e4>
10104b78:	d8800817 	ldw	r2,32(sp)
10104b7c:	11e9c83a 	sub	r20,r2,r7
10104b80:	0005883a 	mov	r2,zero
10104b84:	003d5406 	br	101040d8 <__alt_data_end+0xfffe40d8>
10104b88:	00800044 	movi	r2,1
10104b8c:	003dc706 	br	101042ac <__alt_data_end+0xfffe42ac>
10104b90:	d8c00217 	ldw	r3,8(sp)
10104b94:	00800d84 	movi	r2,54
10104b98:	dd400a17 	ldw	r21,40(sp)
10104b9c:	10c5c83a 	sub	r2,r2,r3
10104ba0:	dd000817 	ldw	r20,32(sp)
10104ba4:	003d4c06 	br	101040d8 <__alt_data_end+0xfffe40d8>
10104ba8:	dc800f15 	stw	r18,60(sp)
10104bac:	dcc01015 	stw	r19,64(sp)
10104bb0:	04000084 	movi	r16,2
10104bb4:	003bed06 	br	10103b6c <__alt_data_end+0xfffe3b6c>
10104bb8:	d9000617 	ldw	r4,24(sp)
10104bbc:	203f0d26 	beq	r4,zero,101047f4 <__alt_data_end+0xfffe47f4>
10104bc0:	d9800c17 	ldw	r6,48(sp)
10104bc4:	01bcab0e 	bge	zero,r6,10103e74 <__alt_data_end+0xfffe3e74>
10104bc8:	d9401017 	ldw	r5,64(sp)
10104bcc:	d9000f17 	ldw	r4,60(sp)
10104bd0:	000d883a 	mov	r6,zero
10104bd4:	01d00934 	movhi	r7,16420
10104bd8:	010c6540 	call	1010c654 <__muldf3>
10104bdc:	81000044 	addi	r4,r16,1
10104be0:	d8800f15 	stw	r2,60(sp)
10104be4:	d8c01015 	stw	r3,64(sp)
10104be8:	010d83c0 	call	1010d83c <__floatsidf>
10104bec:	d9800f17 	ldw	r6,60(sp)
10104bf0:	d9c01017 	ldw	r7,64(sp)
10104bf4:	1009883a 	mov	r4,r2
10104bf8:	180b883a 	mov	r5,r3
10104bfc:	010c6540 	call	1010c654 <__muldf3>
10104c00:	01d00734 	movhi	r7,16412
10104c04:	000d883a 	mov	r6,zero
10104c08:	1009883a 	mov	r4,r2
10104c0c:	180b883a 	mov	r5,r3
10104c10:	010b1800 	call	1010b180 <__adddf3>
10104c14:	d9c00517 	ldw	r7,20(sp)
10104c18:	047f3034 	movhi	r17,64704
10104c1c:	1021883a 	mov	r16,r2
10104c20:	39ffffc4 	addi	r7,r7,-1
10104c24:	d9c01315 	stw	r7,76(sp)
10104c28:	1c63883a 	add	r17,r3,r17
10104c2c:	db000c17 	ldw	r12,48(sp)
10104c30:	003bea06 	br	10103bdc <__alt_data_end+0xfffe3bdc>
10104c34:	dc000915 	stw	r16,36(sp)
10104c38:	003e0e06 	br	10104474 <__alt_data_end+0xfffe4474>
10104c3c:	01000e44 	movi	r4,57
10104c40:	8825883a 	mov	r18,r17
10104c44:	9dc00044 	addi	r23,r19,1
10104c48:	99000005 	stb	r4,0(r19)
10104c4c:	a023883a 	mov	r17,r20
10104c50:	dc000915 	stw	r16,36(sp)
10104c54:	003da406 	br	101042e8 <__alt_data_end+0xfffe42e8>
10104c58:	d9801417 	ldw	r6,80(sp)
10104c5c:	d9c01517 	ldw	r7,84(sp)
10104c60:	0009883a 	mov	r4,zero
10104c64:	014ff834 	movhi	r5,16352
10104c68:	010cec00 	call	1010cec0 <__subdf3>
10104c6c:	880d883a 	mov	r6,r17
10104c70:	a00f883a 	mov	r7,r20
10104c74:	1009883a 	mov	r4,r2
10104c78:	180b883a 	mov	r5,r3
10104c7c:	010c4840 	call	1010c484 <__gedf2>
10104c80:	00bc7c0e 	bge	zero,r2,10103e74 <__alt_data_end+0xfffe3e74>
10104c84:	01000c04 	movi	r4,48
10104c88:	00000106 	br	10104c90 <_dtoa_r+0x1580>
10104c8c:	102f883a 	mov	r23,r2
10104c90:	b8bfffc4 	addi	r2,r23,-1
10104c94:	10c00007 	ldb	r3,0(r2)
10104c98:	193ffc26 	beq	r3,r4,10104c8c <__alt_data_end+0xfffe4c8c>
10104c9c:	d9801317 	ldw	r6,76(sp)
10104ca0:	d9800515 	stw	r6,20(sp)
10104ca4:	003c4406 	br	10103db8 <__alt_data_end+0xfffe3db8>
10104ca8:	d9801317 	ldw	r6,76(sp)
10104cac:	d9800515 	stw	r6,20(sp)
10104cb0:	003cea06 	br	1010405c <__alt_data_end+0xfffe405c>
10104cb4:	dd800f17 	ldw	r22,60(sp)
10104cb8:	dcc01017 	ldw	r19,64(sp)
10104cbc:	dc801217 	ldw	r18,72(sp)
10104cc0:	003c6c06 	br	10103e74 <__alt_data_end+0xfffe3e74>
10104cc4:	903e031e 	bne	r18,zero,101044d4 <__alt_data_end+0xfffe44d4>
10104cc8:	003ebb06 	br	101047b8 <__alt_data_end+0xfffe47b8>
10104ccc:	103e6c1e 	bne	r2,zero,10104680 <__alt_data_end+0xfffe4680>
10104cd0:	4080004c 	andi	r2,r8,1
10104cd4:	103e6a26 	beq	r2,zero,10104680 <__alt_data_end+0xfffe4680>
10104cd8:	003e6606 	br	10104674 <__alt_data_end+0xfffe4674>
10104cdc:	d8c00317 	ldw	r3,12(sp)
10104ce0:	00800084 	movi	r2,2
10104ce4:	10c02916 	blt	r2,r3,10104d8c <_dtoa_r+0x167c>
10104ce8:	d9000c17 	ldw	r4,48(sp)
10104cec:	003e8806 	br	10104710 <__alt_data_end+0xfffe4710>
10104cf0:	04000084 	movi	r16,2
10104cf4:	003b9d06 	br	10103b6c <__alt_data_end+0xfffe3b6c>
10104cf8:	d9001317 	ldw	r4,76(sp)
10104cfc:	d9000515 	stw	r4,20(sp)
10104d00:	003cd606 	br	1010405c <__alt_data_end+0xfffe405c>
10104d04:	d8801317 	ldw	r2,76(sp)
10104d08:	d8800515 	stw	r2,20(sp)
10104d0c:	003c2a06 	br	10103db8 <__alt_data_end+0xfffe3db8>
10104d10:	d9800317 	ldw	r6,12(sp)
10104d14:	00800084 	movi	r2,2
10104d18:	11801516 	blt	r2,r6,10104d70 <_dtoa_r+0x1660>
10104d1c:	d9c00c17 	ldw	r7,48(sp)
10104d20:	d9c00615 	stw	r7,24(sp)
10104d24:	003df706 	br	10104504 <__alt_data_end+0xfffe4504>
10104d28:	193d3926 	beq	r3,r4,10104210 <__alt_data_end+0xfffe4210>
10104d2c:	00c00f04 	movi	r3,60
10104d30:	1885c83a 	sub	r2,r3,r2
10104d34:	003ddf06 	br	101044b4 <__alt_data_end+0xfffe44b4>
10104d38:	e009883a 	mov	r4,fp
10104d3c:	e0001115 	stw	zero,68(fp)
10104d40:	000b883a 	mov	r5,zero
10104d44:	0106c800 	call	10106c80 <_Balloc>
10104d48:	d8800715 	stw	r2,28(sp)
10104d4c:	d8c00717 	ldw	r3,28(sp)
10104d50:	00bfffc4 	movi	r2,-1
10104d54:	01000044 	movi	r4,1
10104d58:	d8800c15 	stw	r2,48(sp)
10104d5c:	e0c01015 	stw	r3,64(fp)
10104d60:	d9000b15 	stw	r4,44(sp)
10104d64:	d8800615 	stw	r2,24(sp)
10104d68:	d8002215 	stw	zero,136(sp)
10104d6c:	003c4106 	br	10103e74 <__alt_data_end+0xfffe3e74>
10104d70:	d8c00c17 	ldw	r3,48(sp)
10104d74:	d8c00615 	stw	r3,24(sp)
10104d78:	003e7006 	br	1010473c <__alt_data_end+0xfffe473c>
10104d7c:	04400044 	movi	r17,1
10104d80:	003b2006 	br	10103a04 <__alt_data_end+0xfffe3a04>
10104d84:	000b883a 	mov	r5,zero
10104d88:	003b3d06 	br	10103a80 <__alt_data_end+0xfffe3a80>
10104d8c:	d8800c17 	ldw	r2,48(sp)
10104d90:	d8800615 	stw	r2,24(sp)
10104d94:	003e6906 	br	1010473c <__alt_data_end+0xfffe473c>

10104d98 <__sflush_r>:
10104d98:	2880030b 	ldhu	r2,12(r5)
10104d9c:	defffb04 	addi	sp,sp,-20
10104da0:	dcc00315 	stw	r19,12(sp)
10104da4:	dc400115 	stw	r17,4(sp)
10104da8:	dfc00415 	stw	ra,16(sp)
10104dac:	dc800215 	stw	r18,8(sp)
10104db0:	dc000015 	stw	r16,0(sp)
10104db4:	10c0020c 	andi	r3,r2,8
10104db8:	2823883a 	mov	r17,r5
10104dbc:	2027883a 	mov	r19,r4
10104dc0:	1800311e 	bne	r3,zero,10104e88 <__sflush_r+0xf0>
10104dc4:	28c00117 	ldw	r3,4(r5)
10104dc8:	10820014 	ori	r2,r2,2048
10104dcc:	2880030d 	sth	r2,12(r5)
10104dd0:	00c04b0e 	bge	zero,r3,10104f00 <__sflush_r+0x168>
10104dd4:	8a000a17 	ldw	r8,40(r17)
10104dd8:	40002326 	beq	r8,zero,10104e68 <__sflush_r+0xd0>
10104ddc:	9c000017 	ldw	r16,0(r19)
10104de0:	10c4000c 	andi	r3,r2,4096
10104de4:	98000015 	stw	zero,0(r19)
10104de8:	18004826 	beq	r3,zero,10104f0c <__sflush_r+0x174>
10104dec:	89801417 	ldw	r6,80(r17)
10104df0:	10c0010c 	andi	r3,r2,4
10104df4:	18000626 	beq	r3,zero,10104e10 <__sflush_r+0x78>
10104df8:	88c00117 	ldw	r3,4(r17)
10104dfc:	88800c17 	ldw	r2,48(r17)
10104e00:	30cdc83a 	sub	r6,r6,r3
10104e04:	10000226 	beq	r2,zero,10104e10 <__sflush_r+0x78>
10104e08:	88800f17 	ldw	r2,60(r17)
10104e0c:	308dc83a 	sub	r6,r6,r2
10104e10:	89400717 	ldw	r5,28(r17)
10104e14:	000f883a 	mov	r7,zero
10104e18:	9809883a 	mov	r4,r19
10104e1c:	403ee83a 	callr	r8
10104e20:	00ffffc4 	movi	r3,-1
10104e24:	10c04426 	beq	r2,r3,10104f38 <__sflush_r+0x1a0>
10104e28:	88c0030b 	ldhu	r3,12(r17)
10104e2c:	89000417 	ldw	r4,16(r17)
10104e30:	88000115 	stw	zero,4(r17)
10104e34:	197dffcc 	andi	r5,r3,63487
10104e38:	8940030d 	sth	r5,12(r17)
10104e3c:	89000015 	stw	r4,0(r17)
10104e40:	18c4000c 	andi	r3,r3,4096
10104e44:	18002c1e 	bne	r3,zero,10104ef8 <__sflush_r+0x160>
10104e48:	89400c17 	ldw	r5,48(r17)
10104e4c:	9c000015 	stw	r16,0(r19)
10104e50:	28000526 	beq	r5,zero,10104e68 <__sflush_r+0xd0>
10104e54:	88801004 	addi	r2,r17,64
10104e58:	28800226 	beq	r5,r2,10104e64 <__sflush_r+0xcc>
10104e5c:	9809883a 	mov	r4,r19
10104e60:	01055140 	call	10105514 <_free_r>
10104e64:	88000c15 	stw	zero,48(r17)
10104e68:	0005883a 	mov	r2,zero
10104e6c:	dfc00417 	ldw	ra,16(sp)
10104e70:	dcc00317 	ldw	r19,12(sp)
10104e74:	dc800217 	ldw	r18,8(sp)
10104e78:	dc400117 	ldw	r17,4(sp)
10104e7c:	dc000017 	ldw	r16,0(sp)
10104e80:	dec00504 	addi	sp,sp,20
10104e84:	f800283a 	ret
10104e88:	2c800417 	ldw	r18,16(r5)
10104e8c:	903ff626 	beq	r18,zero,10104e68 <__alt_data_end+0xfffe4e68>
10104e90:	2c000017 	ldw	r16,0(r5)
10104e94:	108000cc 	andi	r2,r2,3
10104e98:	2c800015 	stw	r18,0(r5)
10104e9c:	84a1c83a 	sub	r16,r16,r18
10104ea0:	1000131e 	bne	r2,zero,10104ef0 <__sflush_r+0x158>
10104ea4:	28800517 	ldw	r2,20(r5)
10104ea8:	88800215 	stw	r2,8(r17)
10104eac:	04000316 	blt	zero,r16,10104ebc <__sflush_r+0x124>
10104eb0:	003fed06 	br	10104e68 <__alt_data_end+0xfffe4e68>
10104eb4:	90a5883a 	add	r18,r18,r2
10104eb8:	043feb0e 	bge	zero,r16,10104e68 <__alt_data_end+0xfffe4e68>
10104ebc:	88800917 	ldw	r2,36(r17)
10104ec0:	89400717 	ldw	r5,28(r17)
10104ec4:	800f883a 	mov	r7,r16
10104ec8:	900d883a 	mov	r6,r18
10104ecc:	9809883a 	mov	r4,r19
10104ed0:	103ee83a 	callr	r2
10104ed4:	80a1c83a 	sub	r16,r16,r2
10104ed8:	00bff616 	blt	zero,r2,10104eb4 <__alt_data_end+0xfffe4eb4>
10104edc:	88c0030b 	ldhu	r3,12(r17)
10104ee0:	00bfffc4 	movi	r2,-1
10104ee4:	18c01014 	ori	r3,r3,64
10104ee8:	88c0030d 	sth	r3,12(r17)
10104eec:	003fdf06 	br	10104e6c <__alt_data_end+0xfffe4e6c>
10104ef0:	0005883a 	mov	r2,zero
10104ef4:	003fec06 	br	10104ea8 <__alt_data_end+0xfffe4ea8>
10104ef8:	88801415 	stw	r2,80(r17)
10104efc:	003fd206 	br	10104e48 <__alt_data_end+0xfffe4e48>
10104f00:	28c00f17 	ldw	r3,60(r5)
10104f04:	00ffb316 	blt	zero,r3,10104dd4 <__alt_data_end+0xfffe4dd4>
10104f08:	003fd706 	br	10104e68 <__alt_data_end+0xfffe4e68>
10104f0c:	89400717 	ldw	r5,28(r17)
10104f10:	000d883a 	mov	r6,zero
10104f14:	01c00044 	movi	r7,1
10104f18:	9809883a 	mov	r4,r19
10104f1c:	403ee83a 	callr	r8
10104f20:	100d883a 	mov	r6,r2
10104f24:	00bfffc4 	movi	r2,-1
10104f28:	30801426 	beq	r6,r2,10104f7c <__sflush_r+0x1e4>
10104f2c:	8880030b 	ldhu	r2,12(r17)
10104f30:	8a000a17 	ldw	r8,40(r17)
10104f34:	003fae06 	br	10104df0 <__alt_data_end+0xfffe4df0>
10104f38:	98c00017 	ldw	r3,0(r19)
10104f3c:	183fba26 	beq	r3,zero,10104e28 <__alt_data_end+0xfffe4e28>
10104f40:	01000744 	movi	r4,29
10104f44:	19000626 	beq	r3,r4,10104f60 <__sflush_r+0x1c8>
10104f48:	01000584 	movi	r4,22
10104f4c:	19000426 	beq	r3,r4,10104f60 <__sflush_r+0x1c8>
10104f50:	88c0030b 	ldhu	r3,12(r17)
10104f54:	18c01014 	ori	r3,r3,64
10104f58:	88c0030d 	sth	r3,12(r17)
10104f5c:	003fc306 	br	10104e6c <__alt_data_end+0xfffe4e6c>
10104f60:	8880030b 	ldhu	r2,12(r17)
10104f64:	88c00417 	ldw	r3,16(r17)
10104f68:	88000115 	stw	zero,4(r17)
10104f6c:	10bdffcc 	andi	r2,r2,63487
10104f70:	8880030d 	sth	r2,12(r17)
10104f74:	88c00015 	stw	r3,0(r17)
10104f78:	003fb306 	br	10104e48 <__alt_data_end+0xfffe4e48>
10104f7c:	98800017 	ldw	r2,0(r19)
10104f80:	103fea26 	beq	r2,zero,10104f2c <__alt_data_end+0xfffe4f2c>
10104f84:	00c00744 	movi	r3,29
10104f88:	10c00226 	beq	r2,r3,10104f94 <__sflush_r+0x1fc>
10104f8c:	00c00584 	movi	r3,22
10104f90:	10c0031e 	bne	r2,r3,10104fa0 <__sflush_r+0x208>
10104f94:	9c000015 	stw	r16,0(r19)
10104f98:	0005883a 	mov	r2,zero
10104f9c:	003fb306 	br	10104e6c <__alt_data_end+0xfffe4e6c>
10104fa0:	88c0030b 	ldhu	r3,12(r17)
10104fa4:	3005883a 	mov	r2,r6
10104fa8:	18c01014 	ori	r3,r3,64
10104fac:	88c0030d 	sth	r3,12(r17)
10104fb0:	003fae06 	br	10104e6c <__alt_data_end+0xfffe4e6c>

10104fb4 <_fflush_r>:
10104fb4:	defffd04 	addi	sp,sp,-12
10104fb8:	dc000115 	stw	r16,4(sp)
10104fbc:	dfc00215 	stw	ra,8(sp)
10104fc0:	2021883a 	mov	r16,r4
10104fc4:	20000226 	beq	r4,zero,10104fd0 <_fflush_r+0x1c>
10104fc8:	20800e17 	ldw	r2,56(r4)
10104fcc:	10000c26 	beq	r2,zero,10105000 <_fflush_r+0x4c>
10104fd0:	2880030f 	ldh	r2,12(r5)
10104fd4:	1000051e 	bne	r2,zero,10104fec <_fflush_r+0x38>
10104fd8:	0005883a 	mov	r2,zero
10104fdc:	dfc00217 	ldw	ra,8(sp)
10104fe0:	dc000117 	ldw	r16,4(sp)
10104fe4:	dec00304 	addi	sp,sp,12
10104fe8:	f800283a 	ret
10104fec:	8009883a 	mov	r4,r16
10104ff0:	dfc00217 	ldw	ra,8(sp)
10104ff4:	dc000117 	ldw	r16,4(sp)
10104ff8:	dec00304 	addi	sp,sp,12
10104ffc:	0104d981 	jmpi	10104d98 <__sflush_r>
10105000:	d9400015 	stw	r5,0(sp)
10105004:	01053a00 	call	101053a0 <__sinit>
10105008:	d9400017 	ldw	r5,0(sp)
1010500c:	003ff006 	br	10104fd0 <__alt_data_end+0xfffe4fd0>

10105010 <fflush>:
10105010:	20000526 	beq	r4,zero,10105028 <fflush+0x18>
10105014:	00840474 	movhi	r2,4113
10105018:	10890404 	addi	r2,r2,9232
1010501c:	200b883a 	mov	r5,r4
10105020:	11000017 	ldw	r4,0(r2)
10105024:	0104fb41 	jmpi	10104fb4 <_fflush_r>
10105028:	00840474 	movhi	r2,4113
1010502c:	10890304 	addi	r2,r2,9228
10105030:	11000017 	ldw	r4,0(r2)
10105034:	01440434 	movhi	r5,4112
10105038:	2953ed04 	addi	r5,r5,20404
1010503c:	0105db01 	jmpi	10105db0 <_fwalk_reent>

10105040 <__fp_unlock>:
10105040:	0005883a 	mov	r2,zero
10105044:	f800283a 	ret

10105048 <_cleanup_r>:
10105048:	01440474 	movhi	r5,4113
1010504c:	29678104 	addi	r5,r5,-25084
10105050:	0105db01 	jmpi	10105db0 <_fwalk_reent>

10105054 <__sinit.part.1>:
10105054:	defff704 	addi	sp,sp,-36
10105058:	00c40434 	movhi	r3,4112
1010505c:	dfc00815 	stw	ra,32(sp)
10105060:	ddc00715 	stw	r23,28(sp)
10105064:	dd800615 	stw	r22,24(sp)
10105068:	dd400515 	stw	r21,20(sp)
1010506c:	dd000415 	stw	r20,16(sp)
10105070:	dcc00315 	stw	r19,12(sp)
10105074:	dc800215 	stw	r18,8(sp)
10105078:	dc400115 	stw	r17,4(sp)
1010507c:	dc000015 	stw	r16,0(sp)
10105080:	18d41204 	addi	r3,r3,20552
10105084:	24000117 	ldw	r16,4(r4)
10105088:	20c00f15 	stw	r3,60(r4)
1010508c:	2080bb04 	addi	r2,r4,748
10105090:	00c000c4 	movi	r3,3
10105094:	20c0b915 	stw	r3,740(r4)
10105098:	2080ba15 	stw	r2,744(r4)
1010509c:	2000b815 	stw	zero,736(r4)
101050a0:	05c00204 	movi	r23,8
101050a4:	00800104 	movi	r2,4
101050a8:	2025883a 	mov	r18,r4
101050ac:	b80d883a 	mov	r6,r23
101050b0:	81001704 	addi	r4,r16,92
101050b4:	000b883a 	mov	r5,zero
101050b8:	80000015 	stw	zero,0(r16)
101050bc:	80000115 	stw	zero,4(r16)
101050c0:	80000215 	stw	zero,8(r16)
101050c4:	8080030d 	sth	r2,12(r16)
101050c8:	80001915 	stw	zero,100(r16)
101050cc:	8000038d 	sth	zero,14(r16)
101050d0:	80000415 	stw	zero,16(r16)
101050d4:	80000515 	stw	zero,20(r16)
101050d8:	80000615 	stw	zero,24(r16)
101050dc:	0106b580 	call	10106b58 <memset>
101050e0:	05840474 	movhi	r22,4113
101050e4:	94400217 	ldw	r17,8(r18)
101050e8:	05440474 	movhi	r21,4113
101050ec:	05040474 	movhi	r20,4113
101050f0:	04c40474 	movhi	r19,4113
101050f4:	b5a0d904 	addi	r22,r22,-31900
101050f8:	ad60f004 	addi	r21,r21,-31808
101050fc:	a5210f04 	addi	r20,r20,-31684
10105100:	9ce12604 	addi	r19,r19,-31592
10105104:	85800815 	stw	r22,32(r16)
10105108:	85400915 	stw	r21,36(r16)
1010510c:	85000a15 	stw	r20,40(r16)
10105110:	84c00b15 	stw	r19,44(r16)
10105114:	84000715 	stw	r16,28(r16)
10105118:	00800284 	movi	r2,10
1010511c:	8880030d 	sth	r2,12(r17)
10105120:	00800044 	movi	r2,1
10105124:	b80d883a 	mov	r6,r23
10105128:	89001704 	addi	r4,r17,92
1010512c:	000b883a 	mov	r5,zero
10105130:	88000015 	stw	zero,0(r17)
10105134:	88000115 	stw	zero,4(r17)
10105138:	88000215 	stw	zero,8(r17)
1010513c:	88001915 	stw	zero,100(r17)
10105140:	8880038d 	sth	r2,14(r17)
10105144:	88000415 	stw	zero,16(r17)
10105148:	88000515 	stw	zero,20(r17)
1010514c:	88000615 	stw	zero,24(r17)
10105150:	0106b580 	call	10106b58 <memset>
10105154:	94000317 	ldw	r16,12(r18)
10105158:	00800484 	movi	r2,18
1010515c:	8c400715 	stw	r17,28(r17)
10105160:	8d800815 	stw	r22,32(r17)
10105164:	8d400915 	stw	r21,36(r17)
10105168:	8d000a15 	stw	r20,40(r17)
1010516c:	8cc00b15 	stw	r19,44(r17)
10105170:	8080030d 	sth	r2,12(r16)
10105174:	00800084 	movi	r2,2
10105178:	80000015 	stw	zero,0(r16)
1010517c:	80000115 	stw	zero,4(r16)
10105180:	80000215 	stw	zero,8(r16)
10105184:	80001915 	stw	zero,100(r16)
10105188:	8080038d 	sth	r2,14(r16)
1010518c:	80000415 	stw	zero,16(r16)
10105190:	80000515 	stw	zero,20(r16)
10105194:	80000615 	stw	zero,24(r16)
10105198:	b80d883a 	mov	r6,r23
1010519c:	000b883a 	mov	r5,zero
101051a0:	81001704 	addi	r4,r16,92
101051a4:	0106b580 	call	10106b58 <memset>
101051a8:	00800044 	movi	r2,1
101051ac:	84000715 	stw	r16,28(r16)
101051b0:	85800815 	stw	r22,32(r16)
101051b4:	85400915 	stw	r21,36(r16)
101051b8:	85000a15 	stw	r20,40(r16)
101051bc:	84c00b15 	stw	r19,44(r16)
101051c0:	90800e15 	stw	r2,56(r18)
101051c4:	dfc00817 	ldw	ra,32(sp)
101051c8:	ddc00717 	ldw	r23,28(sp)
101051cc:	dd800617 	ldw	r22,24(sp)
101051d0:	dd400517 	ldw	r21,20(sp)
101051d4:	dd000417 	ldw	r20,16(sp)
101051d8:	dcc00317 	ldw	r19,12(sp)
101051dc:	dc800217 	ldw	r18,8(sp)
101051e0:	dc400117 	ldw	r17,4(sp)
101051e4:	dc000017 	ldw	r16,0(sp)
101051e8:	dec00904 	addi	sp,sp,36
101051ec:	f800283a 	ret

101051f0 <__fp_lock>:
101051f0:	0005883a 	mov	r2,zero
101051f4:	f800283a 	ret

101051f8 <__sfmoreglue>:
101051f8:	defffc04 	addi	sp,sp,-16
101051fc:	dc800215 	stw	r18,8(sp)
10105200:	2825883a 	mov	r18,r5
10105204:	dc000015 	stw	r16,0(sp)
10105208:	01401a04 	movi	r5,104
1010520c:	2021883a 	mov	r16,r4
10105210:	913fffc4 	addi	r4,r18,-1
10105214:	dfc00315 	stw	ra,12(sp)
10105218:	dc400115 	stw	r17,4(sp)
1010521c:	0100c980 	call	10100c98 <__mulsi3>
10105220:	8009883a 	mov	r4,r16
10105224:	11401d04 	addi	r5,r2,116
10105228:	1023883a 	mov	r17,r2
1010522c:	010610c0 	call	1010610c <_malloc_r>
10105230:	1021883a 	mov	r16,r2
10105234:	10000726 	beq	r2,zero,10105254 <__sfmoreglue+0x5c>
10105238:	11000304 	addi	r4,r2,12
1010523c:	10000015 	stw	zero,0(r2)
10105240:	14800115 	stw	r18,4(r2)
10105244:	11000215 	stw	r4,8(r2)
10105248:	89801a04 	addi	r6,r17,104
1010524c:	000b883a 	mov	r5,zero
10105250:	0106b580 	call	10106b58 <memset>
10105254:	8005883a 	mov	r2,r16
10105258:	dfc00317 	ldw	ra,12(sp)
1010525c:	dc800217 	ldw	r18,8(sp)
10105260:	dc400117 	ldw	r17,4(sp)
10105264:	dc000017 	ldw	r16,0(sp)
10105268:	dec00404 	addi	sp,sp,16
1010526c:	f800283a 	ret

10105270 <__sfp>:
10105270:	defffb04 	addi	sp,sp,-20
10105274:	dc000015 	stw	r16,0(sp)
10105278:	04040474 	movhi	r16,4113
1010527c:	84090304 	addi	r16,r16,9228
10105280:	dcc00315 	stw	r19,12(sp)
10105284:	2027883a 	mov	r19,r4
10105288:	81000017 	ldw	r4,0(r16)
1010528c:	dfc00415 	stw	ra,16(sp)
10105290:	dc800215 	stw	r18,8(sp)
10105294:	20800e17 	ldw	r2,56(r4)
10105298:	dc400115 	stw	r17,4(sp)
1010529c:	1000021e 	bne	r2,zero,101052a8 <__sfp+0x38>
101052a0:	01050540 	call	10105054 <__sinit.part.1>
101052a4:	81000017 	ldw	r4,0(r16)
101052a8:	2480b804 	addi	r18,r4,736
101052ac:	047fffc4 	movi	r17,-1
101052b0:	91000117 	ldw	r4,4(r18)
101052b4:	94000217 	ldw	r16,8(r18)
101052b8:	213fffc4 	addi	r4,r4,-1
101052bc:	20000a16 	blt	r4,zero,101052e8 <__sfp+0x78>
101052c0:	8080030f 	ldh	r2,12(r16)
101052c4:	10000c26 	beq	r2,zero,101052f8 <__sfp+0x88>
101052c8:	80c01d04 	addi	r3,r16,116
101052cc:	00000206 	br	101052d8 <__sfp+0x68>
101052d0:	18bfe60f 	ldh	r2,-104(r3)
101052d4:	10000826 	beq	r2,zero,101052f8 <__sfp+0x88>
101052d8:	213fffc4 	addi	r4,r4,-1
101052dc:	1c3ffd04 	addi	r16,r3,-12
101052e0:	18c01a04 	addi	r3,r3,104
101052e4:	247ffa1e 	bne	r4,r17,101052d0 <__alt_data_end+0xfffe52d0>
101052e8:	90800017 	ldw	r2,0(r18)
101052ec:	10001d26 	beq	r2,zero,10105364 <__sfp+0xf4>
101052f0:	1025883a 	mov	r18,r2
101052f4:	003fee06 	br	101052b0 <__alt_data_end+0xfffe52b0>
101052f8:	00bfffc4 	movi	r2,-1
101052fc:	8080038d 	sth	r2,14(r16)
10105300:	00800044 	movi	r2,1
10105304:	8080030d 	sth	r2,12(r16)
10105308:	80001915 	stw	zero,100(r16)
1010530c:	80000015 	stw	zero,0(r16)
10105310:	80000215 	stw	zero,8(r16)
10105314:	80000115 	stw	zero,4(r16)
10105318:	80000415 	stw	zero,16(r16)
1010531c:	80000515 	stw	zero,20(r16)
10105320:	80000615 	stw	zero,24(r16)
10105324:	01800204 	movi	r6,8
10105328:	000b883a 	mov	r5,zero
1010532c:	81001704 	addi	r4,r16,92
10105330:	0106b580 	call	10106b58 <memset>
10105334:	8005883a 	mov	r2,r16
10105338:	80000c15 	stw	zero,48(r16)
1010533c:	80000d15 	stw	zero,52(r16)
10105340:	80001115 	stw	zero,68(r16)
10105344:	80001215 	stw	zero,72(r16)
10105348:	dfc00417 	ldw	ra,16(sp)
1010534c:	dcc00317 	ldw	r19,12(sp)
10105350:	dc800217 	ldw	r18,8(sp)
10105354:	dc400117 	ldw	r17,4(sp)
10105358:	dc000017 	ldw	r16,0(sp)
1010535c:	dec00504 	addi	sp,sp,20
10105360:	f800283a 	ret
10105364:	01400104 	movi	r5,4
10105368:	9809883a 	mov	r4,r19
1010536c:	01051f80 	call	101051f8 <__sfmoreglue>
10105370:	90800015 	stw	r2,0(r18)
10105374:	103fde1e 	bne	r2,zero,101052f0 <__alt_data_end+0xfffe52f0>
10105378:	00800304 	movi	r2,12
1010537c:	98800015 	stw	r2,0(r19)
10105380:	0005883a 	mov	r2,zero
10105384:	003ff006 	br	10105348 <__alt_data_end+0xfffe5348>

10105388 <_cleanup>:
10105388:	00840474 	movhi	r2,4113
1010538c:	10890304 	addi	r2,r2,9228
10105390:	11000017 	ldw	r4,0(r2)
10105394:	01440474 	movhi	r5,4113
10105398:	29678104 	addi	r5,r5,-25084
1010539c:	0105db01 	jmpi	10105db0 <_fwalk_reent>

101053a0 <__sinit>:
101053a0:	20800e17 	ldw	r2,56(r4)
101053a4:	10000126 	beq	r2,zero,101053ac <__sinit+0xc>
101053a8:	f800283a 	ret
101053ac:	01050541 	jmpi	10105054 <__sinit.part.1>

101053b0 <__sfp_lock_acquire>:
101053b0:	f800283a 	ret

101053b4 <__sfp_lock_release>:
101053b4:	f800283a 	ret

101053b8 <__sinit_lock_acquire>:
101053b8:	f800283a 	ret

101053bc <__sinit_lock_release>:
101053bc:	f800283a 	ret

101053c0 <__fp_lock_all>:
101053c0:	00840474 	movhi	r2,4113
101053c4:	10890404 	addi	r2,r2,9232
101053c8:	11000017 	ldw	r4,0(r2)
101053cc:	01440434 	movhi	r5,4112
101053d0:	29547c04 	addi	r5,r5,20976
101053d4:	0105cec1 	jmpi	10105cec <_fwalk>

101053d8 <__fp_unlock_all>:
101053d8:	00840474 	movhi	r2,4113
101053dc:	10890404 	addi	r2,r2,9232
101053e0:	11000017 	ldw	r4,0(r2)
101053e4:	01440434 	movhi	r5,4112
101053e8:	29541004 	addi	r5,r5,20544
101053ec:	0105cec1 	jmpi	10105cec <_fwalk>

101053f0 <_malloc_trim_r>:
101053f0:	defffb04 	addi	sp,sp,-20
101053f4:	dcc00315 	stw	r19,12(sp)
101053f8:	04c40474 	movhi	r19,4113
101053fc:	dc800215 	stw	r18,8(sp)
10105400:	dc400115 	stw	r17,4(sp)
10105404:	dc000015 	stw	r16,0(sp)
10105408:	dfc00415 	stw	ra,16(sp)
1010540c:	2821883a 	mov	r16,r5
10105410:	9cc37504 	addi	r19,r19,3540
10105414:	2025883a 	mov	r18,r4
10105418:	010dfc00 	call	1010dfc0 <__malloc_lock>
1010541c:	98800217 	ldw	r2,8(r19)
10105420:	14400117 	ldw	r17,4(r2)
10105424:	00bfff04 	movi	r2,-4
10105428:	88a2703a 	and	r17,r17,r2
1010542c:	8c21c83a 	sub	r16,r17,r16
10105430:	8403fbc4 	addi	r16,r16,4079
10105434:	8020d33a 	srli	r16,r16,12
10105438:	0083ffc4 	movi	r2,4095
1010543c:	843fffc4 	addi	r16,r16,-1
10105440:	8020933a 	slli	r16,r16,12
10105444:	1400060e 	bge	r2,r16,10105460 <_malloc_trim_r+0x70>
10105448:	000b883a 	mov	r5,zero
1010544c:	9009883a 	mov	r4,r18
10105450:	01083100 	call	10108310 <_sbrk_r>
10105454:	98c00217 	ldw	r3,8(r19)
10105458:	1c47883a 	add	r3,r3,r17
1010545c:	10c00a26 	beq	r2,r3,10105488 <_malloc_trim_r+0x98>
10105460:	9009883a 	mov	r4,r18
10105464:	010dfe40 	call	1010dfe4 <__malloc_unlock>
10105468:	0005883a 	mov	r2,zero
1010546c:	dfc00417 	ldw	ra,16(sp)
10105470:	dcc00317 	ldw	r19,12(sp)
10105474:	dc800217 	ldw	r18,8(sp)
10105478:	dc400117 	ldw	r17,4(sp)
1010547c:	dc000017 	ldw	r16,0(sp)
10105480:	dec00504 	addi	sp,sp,20
10105484:	f800283a 	ret
10105488:	040bc83a 	sub	r5,zero,r16
1010548c:	9009883a 	mov	r4,r18
10105490:	01083100 	call	10108310 <_sbrk_r>
10105494:	00ffffc4 	movi	r3,-1
10105498:	10c00d26 	beq	r2,r3,101054d0 <_malloc_trim_r+0xe0>
1010549c:	00c40474 	movhi	r3,4113
101054a0:	18d00a04 	addi	r3,r3,16424
101054a4:	18800017 	ldw	r2,0(r3)
101054a8:	99000217 	ldw	r4,8(r19)
101054ac:	8c23c83a 	sub	r17,r17,r16
101054b0:	8c400054 	ori	r17,r17,1
101054b4:	1421c83a 	sub	r16,r2,r16
101054b8:	24400115 	stw	r17,4(r4)
101054bc:	9009883a 	mov	r4,r18
101054c0:	1c000015 	stw	r16,0(r3)
101054c4:	010dfe40 	call	1010dfe4 <__malloc_unlock>
101054c8:	00800044 	movi	r2,1
101054cc:	003fe706 	br	1010546c <__alt_data_end+0xfffe546c>
101054d0:	000b883a 	mov	r5,zero
101054d4:	9009883a 	mov	r4,r18
101054d8:	01083100 	call	10108310 <_sbrk_r>
101054dc:	99000217 	ldw	r4,8(r19)
101054e0:	014003c4 	movi	r5,15
101054e4:	1107c83a 	sub	r3,r2,r4
101054e8:	28ffdd0e 	bge	r5,r3,10105460 <__alt_data_end+0xfffe5460>
101054ec:	01440474 	movhi	r5,4113
101054f0:	29490604 	addi	r5,r5,9240
101054f4:	29400017 	ldw	r5,0(r5)
101054f8:	18c00054 	ori	r3,r3,1
101054fc:	20c00115 	stw	r3,4(r4)
10105500:	00c40474 	movhi	r3,4113
10105504:	1145c83a 	sub	r2,r2,r5
10105508:	18d00a04 	addi	r3,r3,16424
1010550c:	18800015 	stw	r2,0(r3)
10105510:	003fd306 	br	10105460 <__alt_data_end+0xfffe5460>

10105514 <_free_r>:
10105514:	28004126 	beq	r5,zero,1010561c <_free_r+0x108>
10105518:	defffd04 	addi	sp,sp,-12
1010551c:	dc400115 	stw	r17,4(sp)
10105520:	dc000015 	stw	r16,0(sp)
10105524:	2023883a 	mov	r17,r4
10105528:	2821883a 	mov	r16,r5
1010552c:	dfc00215 	stw	ra,8(sp)
10105530:	010dfc00 	call	1010dfc0 <__malloc_lock>
10105534:	81ffff17 	ldw	r7,-4(r16)
10105538:	00bfff84 	movi	r2,-2
1010553c:	01040474 	movhi	r4,4113
10105540:	81bffe04 	addi	r6,r16,-8
10105544:	3884703a 	and	r2,r7,r2
10105548:	21037504 	addi	r4,r4,3540
1010554c:	308b883a 	add	r5,r6,r2
10105550:	2a400117 	ldw	r9,4(r5)
10105554:	22000217 	ldw	r8,8(r4)
10105558:	00ffff04 	movi	r3,-4
1010555c:	48c6703a 	and	r3,r9,r3
10105560:	2a005726 	beq	r5,r8,101056c0 <_free_r+0x1ac>
10105564:	28c00115 	stw	r3,4(r5)
10105568:	39c0004c 	andi	r7,r7,1
1010556c:	3800091e 	bne	r7,zero,10105594 <_free_r+0x80>
10105570:	823ffe17 	ldw	r8,-8(r16)
10105574:	22400204 	addi	r9,r4,8
10105578:	320dc83a 	sub	r6,r6,r8
1010557c:	31c00217 	ldw	r7,8(r6)
10105580:	1205883a 	add	r2,r2,r8
10105584:	3a406526 	beq	r7,r9,1010571c <_free_r+0x208>
10105588:	32000317 	ldw	r8,12(r6)
1010558c:	3a000315 	stw	r8,12(r7)
10105590:	41c00215 	stw	r7,8(r8)
10105594:	28cf883a 	add	r7,r5,r3
10105598:	39c00117 	ldw	r7,4(r7)
1010559c:	39c0004c 	andi	r7,r7,1
101055a0:	38003a26 	beq	r7,zero,1010568c <_free_r+0x178>
101055a4:	10c00054 	ori	r3,r2,1
101055a8:	30c00115 	stw	r3,4(r6)
101055ac:	3087883a 	add	r3,r6,r2
101055b0:	18800015 	stw	r2,0(r3)
101055b4:	00c07fc4 	movi	r3,511
101055b8:	18801936 	bltu	r3,r2,10105620 <_free_r+0x10c>
101055bc:	1004d0fa 	srli	r2,r2,3
101055c0:	01c00044 	movi	r7,1
101055c4:	21400117 	ldw	r5,4(r4)
101055c8:	10c00044 	addi	r3,r2,1
101055cc:	18c7883a 	add	r3,r3,r3
101055d0:	1005d0ba 	srai	r2,r2,2
101055d4:	18c7883a 	add	r3,r3,r3
101055d8:	18c7883a 	add	r3,r3,r3
101055dc:	1907883a 	add	r3,r3,r4
101055e0:	3884983a 	sll	r2,r7,r2
101055e4:	19c00017 	ldw	r7,0(r3)
101055e8:	1a3ffe04 	addi	r8,r3,-8
101055ec:	1144b03a 	or	r2,r2,r5
101055f0:	32000315 	stw	r8,12(r6)
101055f4:	31c00215 	stw	r7,8(r6)
101055f8:	20800115 	stw	r2,4(r4)
101055fc:	19800015 	stw	r6,0(r3)
10105600:	39800315 	stw	r6,12(r7)
10105604:	8809883a 	mov	r4,r17
10105608:	dfc00217 	ldw	ra,8(sp)
1010560c:	dc400117 	ldw	r17,4(sp)
10105610:	dc000017 	ldw	r16,0(sp)
10105614:	dec00304 	addi	sp,sp,12
10105618:	010dfe41 	jmpi	1010dfe4 <__malloc_unlock>
1010561c:	f800283a 	ret
10105620:	100ad27a 	srli	r5,r2,9
10105624:	00c00104 	movi	r3,4
10105628:	19404a36 	bltu	r3,r5,10105754 <_free_r+0x240>
1010562c:	100ad1ba 	srli	r5,r2,6
10105630:	28c00e44 	addi	r3,r5,57
10105634:	18c7883a 	add	r3,r3,r3
10105638:	29400e04 	addi	r5,r5,56
1010563c:	18c7883a 	add	r3,r3,r3
10105640:	18c7883a 	add	r3,r3,r3
10105644:	1909883a 	add	r4,r3,r4
10105648:	20c00017 	ldw	r3,0(r4)
1010564c:	01c40474 	movhi	r7,4113
10105650:	213ffe04 	addi	r4,r4,-8
10105654:	39c37504 	addi	r7,r7,3540
10105658:	20c04426 	beq	r4,r3,1010576c <_free_r+0x258>
1010565c:	01ffff04 	movi	r7,-4
10105660:	19400117 	ldw	r5,4(r3)
10105664:	29ca703a 	and	r5,r5,r7
10105668:	1140022e 	bgeu	r2,r5,10105674 <_free_r+0x160>
1010566c:	18c00217 	ldw	r3,8(r3)
10105670:	20fffb1e 	bne	r4,r3,10105660 <__alt_data_end+0xfffe5660>
10105674:	19000317 	ldw	r4,12(r3)
10105678:	31000315 	stw	r4,12(r6)
1010567c:	30c00215 	stw	r3,8(r6)
10105680:	21800215 	stw	r6,8(r4)
10105684:	19800315 	stw	r6,12(r3)
10105688:	003fde06 	br	10105604 <__alt_data_end+0xfffe5604>
1010568c:	29c00217 	ldw	r7,8(r5)
10105690:	10c5883a 	add	r2,r2,r3
10105694:	00c40474 	movhi	r3,4113
10105698:	18c37704 	addi	r3,r3,3548
1010569c:	38c03b26 	beq	r7,r3,1010578c <_free_r+0x278>
101056a0:	2a000317 	ldw	r8,12(r5)
101056a4:	11400054 	ori	r5,r2,1
101056a8:	3087883a 	add	r3,r6,r2
101056ac:	3a000315 	stw	r8,12(r7)
101056b0:	41c00215 	stw	r7,8(r8)
101056b4:	31400115 	stw	r5,4(r6)
101056b8:	18800015 	stw	r2,0(r3)
101056bc:	003fbd06 	br	101055b4 <__alt_data_end+0xfffe55b4>
101056c0:	39c0004c 	andi	r7,r7,1
101056c4:	10c5883a 	add	r2,r2,r3
101056c8:	3800071e 	bne	r7,zero,101056e8 <_free_r+0x1d4>
101056cc:	81fffe17 	ldw	r7,-8(r16)
101056d0:	31cdc83a 	sub	r6,r6,r7
101056d4:	30c00317 	ldw	r3,12(r6)
101056d8:	31400217 	ldw	r5,8(r6)
101056dc:	11c5883a 	add	r2,r2,r7
101056e0:	28c00315 	stw	r3,12(r5)
101056e4:	19400215 	stw	r5,8(r3)
101056e8:	10c00054 	ori	r3,r2,1
101056ec:	30c00115 	stw	r3,4(r6)
101056f0:	00c40474 	movhi	r3,4113
101056f4:	18c90704 	addi	r3,r3,9244
101056f8:	18c00017 	ldw	r3,0(r3)
101056fc:	21800215 	stw	r6,8(r4)
10105700:	10ffc036 	bltu	r2,r3,10105604 <__alt_data_end+0xfffe5604>
10105704:	00840474 	movhi	r2,4113
10105708:	10900104 	addi	r2,r2,16388
1010570c:	11400017 	ldw	r5,0(r2)
10105710:	8809883a 	mov	r4,r17
10105714:	01053f00 	call	101053f0 <_malloc_trim_r>
10105718:	003fba06 	br	10105604 <__alt_data_end+0xfffe5604>
1010571c:	28c9883a 	add	r4,r5,r3
10105720:	21000117 	ldw	r4,4(r4)
10105724:	2100004c 	andi	r4,r4,1
10105728:	2000391e 	bne	r4,zero,10105810 <_free_r+0x2fc>
1010572c:	29c00217 	ldw	r7,8(r5)
10105730:	29000317 	ldw	r4,12(r5)
10105734:	1885883a 	add	r2,r3,r2
10105738:	10c00054 	ori	r3,r2,1
1010573c:	39000315 	stw	r4,12(r7)
10105740:	21c00215 	stw	r7,8(r4)
10105744:	30c00115 	stw	r3,4(r6)
10105748:	308d883a 	add	r6,r6,r2
1010574c:	30800015 	stw	r2,0(r6)
10105750:	003fac06 	br	10105604 <__alt_data_end+0xfffe5604>
10105754:	00c00504 	movi	r3,20
10105758:	19401536 	bltu	r3,r5,101057b0 <_free_r+0x29c>
1010575c:	28c01704 	addi	r3,r5,92
10105760:	18c7883a 	add	r3,r3,r3
10105764:	294016c4 	addi	r5,r5,91
10105768:	003fb406 	br	1010563c <__alt_data_end+0xfffe563c>
1010576c:	280bd0ba 	srai	r5,r5,2
10105770:	00c00044 	movi	r3,1
10105774:	38800117 	ldw	r2,4(r7)
10105778:	194a983a 	sll	r5,r3,r5
1010577c:	2007883a 	mov	r3,r4
10105780:	2884b03a 	or	r2,r5,r2
10105784:	38800115 	stw	r2,4(r7)
10105788:	003fbb06 	br	10105678 <__alt_data_end+0xfffe5678>
1010578c:	21800515 	stw	r6,20(r4)
10105790:	21800415 	stw	r6,16(r4)
10105794:	10c00054 	ori	r3,r2,1
10105798:	31c00315 	stw	r7,12(r6)
1010579c:	31c00215 	stw	r7,8(r6)
101057a0:	30c00115 	stw	r3,4(r6)
101057a4:	308d883a 	add	r6,r6,r2
101057a8:	30800015 	stw	r2,0(r6)
101057ac:	003f9506 	br	10105604 <__alt_data_end+0xfffe5604>
101057b0:	00c01504 	movi	r3,84
101057b4:	19400536 	bltu	r3,r5,101057cc <_free_r+0x2b8>
101057b8:	100ad33a 	srli	r5,r2,12
101057bc:	28c01bc4 	addi	r3,r5,111
101057c0:	18c7883a 	add	r3,r3,r3
101057c4:	29401b84 	addi	r5,r5,110
101057c8:	003f9c06 	br	1010563c <__alt_data_end+0xfffe563c>
101057cc:	00c05504 	movi	r3,340
101057d0:	19400536 	bltu	r3,r5,101057e8 <_free_r+0x2d4>
101057d4:	100ad3fa 	srli	r5,r2,15
101057d8:	28c01e04 	addi	r3,r5,120
101057dc:	18c7883a 	add	r3,r3,r3
101057e0:	29401dc4 	addi	r5,r5,119
101057e4:	003f9506 	br	1010563c <__alt_data_end+0xfffe563c>
101057e8:	00c15504 	movi	r3,1364
101057ec:	19400536 	bltu	r3,r5,10105804 <_free_r+0x2f0>
101057f0:	100ad4ba 	srli	r5,r2,18
101057f4:	28c01f44 	addi	r3,r5,125
101057f8:	18c7883a 	add	r3,r3,r3
101057fc:	29401f04 	addi	r5,r5,124
10105800:	003f8e06 	br	1010563c <__alt_data_end+0xfffe563c>
10105804:	00c03f84 	movi	r3,254
10105808:	01401f84 	movi	r5,126
1010580c:	003f8b06 	br	1010563c <__alt_data_end+0xfffe563c>
10105810:	10c00054 	ori	r3,r2,1
10105814:	30c00115 	stw	r3,4(r6)
10105818:	308d883a 	add	r6,r6,r2
1010581c:	30800015 	stw	r2,0(r6)
10105820:	003f7806 	br	10105604 <__alt_data_end+0xfffe5604>

10105824 <__sfvwrite_r>:
10105824:	30800217 	ldw	r2,8(r6)
10105828:	10006726 	beq	r2,zero,101059c8 <__sfvwrite_r+0x1a4>
1010582c:	28c0030b 	ldhu	r3,12(r5)
10105830:	defff404 	addi	sp,sp,-48
10105834:	dd400715 	stw	r21,28(sp)
10105838:	dd000615 	stw	r20,24(sp)
1010583c:	dc000215 	stw	r16,8(sp)
10105840:	dfc00b15 	stw	ra,44(sp)
10105844:	df000a15 	stw	fp,40(sp)
10105848:	ddc00915 	stw	r23,36(sp)
1010584c:	dd800815 	stw	r22,32(sp)
10105850:	dcc00515 	stw	r19,20(sp)
10105854:	dc800415 	stw	r18,16(sp)
10105858:	dc400315 	stw	r17,12(sp)
1010585c:	1880020c 	andi	r2,r3,8
10105860:	2821883a 	mov	r16,r5
10105864:	202b883a 	mov	r21,r4
10105868:	3029883a 	mov	r20,r6
1010586c:	10002726 	beq	r2,zero,1010590c <__sfvwrite_r+0xe8>
10105870:	28800417 	ldw	r2,16(r5)
10105874:	10002526 	beq	r2,zero,1010590c <__sfvwrite_r+0xe8>
10105878:	1880008c 	andi	r2,r3,2
1010587c:	a4400017 	ldw	r17,0(r20)
10105880:	10002a26 	beq	r2,zero,1010592c <__sfvwrite_r+0x108>
10105884:	05a00034 	movhi	r22,32768
10105888:	0027883a 	mov	r19,zero
1010588c:	0025883a 	mov	r18,zero
10105890:	b5bf0004 	addi	r22,r22,-1024
10105894:	980d883a 	mov	r6,r19
10105898:	a809883a 	mov	r4,r21
1010589c:	90004626 	beq	r18,zero,101059b8 <__sfvwrite_r+0x194>
101058a0:	900f883a 	mov	r7,r18
101058a4:	b480022e 	bgeu	r22,r18,101058b0 <__sfvwrite_r+0x8c>
101058a8:	01e00034 	movhi	r7,32768
101058ac:	39ff0004 	addi	r7,r7,-1024
101058b0:	80800917 	ldw	r2,36(r16)
101058b4:	81400717 	ldw	r5,28(r16)
101058b8:	103ee83a 	callr	r2
101058bc:	00805a0e 	bge	zero,r2,10105a28 <__sfvwrite_r+0x204>
101058c0:	a0c00217 	ldw	r3,8(r20)
101058c4:	98a7883a 	add	r19,r19,r2
101058c8:	90a5c83a 	sub	r18,r18,r2
101058cc:	1885c83a 	sub	r2,r3,r2
101058d0:	a0800215 	stw	r2,8(r20)
101058d4:	103fef1e 	bne	r2,zero,10105894 <__alt_data_end+0xfffe5894>
101058d8:	0005883a 	mov	r2,zero
101058dc:	dfc00b17 	ldw	ra,44(sp)
101058e0:	df000a17 	ldw	fp,40(sp)
101058e4:	ddc00917 	ldw	r23,36(sp)
101058e8:	dd800817 	ldw	r22,32(sp)
101058ec:	dd400717 	ldw	r21,28(sp)
101058f0:	dd000617 	ldw	r20,24(sp)
101058f4:	dcc00517 	ldw	r19,20(sp)
101058f8:	dc800417 	ldw	r18,16(sp)
101058fc:	dc400317 	ldw	r17,12(sp)
10105900:	dc000217 	ldw	r16,8(sp)
10105904:	dec00c04 	addi	sp,sp,48
10105908:	f800283a 	ret
1010590c:	800b883a 	mov	r5,r16
10105910:	a809883a 	mov	r4,r21
10105914:	01033940 	call	10103394 <__swsetup_r>
10105918:	1000ee1e 	bne	r2,zero,10105cd4 <__sfvwrite_r+0x4b0>
1010591c:	80c0030b 	ldhu	r3,12(r16)
10105920:	a4400017 	ldw	r17,0(r20)
10105924:	1880008c 	andi	r2,r3,2
10105928:	103fd61e 	bne	r2,zero,10105884 <__alt_data_end+0xfffe5884>
1010592c:	1880004c 	andi	r2,r3,1
10105930:	1000421e 	bne	r2,zero,10105a3c <__sfvwrite_r+0x218>
10105934:	0039883a 	mov	fp,zero
10105938:	0025883a 	mov	r18,zero
1010593c:	90001a26 	beq	r18,zero,101059a8 <__sfvwrite_r+0x184>
10105940:	1880800c 	andi	r2,r3,512
10105944:	84c00217 	ldw	r19,8(r16)
10105948:	10002126 	beq	r2,zero,101059d0 <__sfvwrite_r+0x1ac>
1010594c:	982f883a 	mov	r23,r19
10105950:	94c09636 	bltu	r18,r19,10105bac <__sfvwrite_r+0x388>
10105954:	1881200c 	andi	r2,r3,1152
10105958:	1000a11e 	bne	r2,zero,10105be0 <__sfvwrite_r+0x3bc>
1010595c:	81000017 	ldw	r4,0(r16)
10105960:	b80d883a 	mov	r6,r23
10105964:	e00b883a 	mov	r5,fp
10105968:	01069fc0 	call	101069fc <memmove>
1010596c:	80c00217 	ldw	r3,8(r16)
10105970:	81000017 	ldw	r4,0(r16)
10105974:	9005883a 	mov	r2,r18
10105978:	1ce7c83a 	sub	r19,r3,r19
1010597c:	25cf883a 	add	r7,r4,r23
10105980:	84c00215 	stw	r19,8(r16)
10105984:	81c00015 	stw	r7,0(r16)
10105988:	a0c00217 	ldw	r3,8(r20)
1010598c:	e0b9883a 	add	fp,fp,r2
10105990:	90a5c83a 	sub	r18,r18,r2
10105994:	18a7c83a 	sub	r19,r3,r2
10105998:	a4c00215 	stw	r19,8(r20)
1010599c:	983fce26 	beq	r19,zero,101058d8 <__alt_data_end+0xfffe58d8>
101059a0:	80c0030b 	ldhu	r3,12(r16)
101059a4:	903fe61e 	bne	r18,zero,10105940 <__alt_data_end+0xfffe5940>
101059a8:	8f000017 	ldw	fp,0(r17)
101059ac:	8c800117 	ldw	r18,4(r17)
101059b0:	8c400204 	addi	r17,r17,8
101059b4:	003fe106 	br	1010593c <__alt_data_end+0xfffe593c>
101059b8:	8cc00017 	ldw	r19,0(r17)
101059bc:	8c800117 	ldw	r18,4(r17)
101059c0:	8c400204 	addi	r17,r17,8
101059c4:	003fb306 	br	10105894 <__alt_data_end+0xfffe5894>
101059c8:	0005883a 	mov	r2,zero
101059cc:	f800283a 	ret
101059d0:	81000017 	ldw	r4,0(r16)
101059d4:	80800417 	ldw	r2,16(r16)
101059d8:	11005a36 	bltu	r2,r4,10105b44 <__sfvwrite_r+0x320>
101059dc:	85c00517 	ldw	r23,20(r16)
101059e0:	95c05836 	bltu	r18,r23,10105b44 <__sfvwrite_r+0x320>
101059e4:	00a00034 	movhi	r2,32768
101059e8:	10bfffc4 	addi	r2,r2,-1
101059ec:	9009883a 	mov	r4,r18
101059f0:	1480012e 	bgeu	r2,r18,101059f8 <__sfvwrite_r+0x1d4>
101059f4:	1009883a 	mov	r4,r2
101059f8:	b80b883a 	mov	r5,r23
101059fc:	0100ae40 	call	10100ae4 <__divsi3>
10105a00:	b80b883a 	mov	r5,r23
10105a04:	1009883a 	mov	r4,r2
10105a08:	0100c980 	call	10100c98 <__mulsi3>
10105a0c:	81400717 	ldw	r5,28(r16)
10105a10:	80c00917 	ldw	r3,36(r16)
10105a14:	100f883a 	mov	r7,r2
10105a18:	e00d883a 	mov	r6,fp
10105a1c:	a809883a 	mov	r4,r21
10105a20:	183ee83a 	callr	r3
10105a24:	00bfd816 	blt	zero,r2,10105988 <__alt_data_end+0xfffe5988>
10105a28:	8080030b 	ldhu	r2,12(r16)
10105a2c:	10801014 	ori	r2,r2,64
10105a30:	8080030d 	sth	r2,12(r16)
10105a34:	00bfffc4 	movi	r2,-1
10105a38:	003fa806 	br	101058dc <__alt_data_end+0xfffe58dc>
10105a3c:	0027883a 	mov	r19,zero
10105a40:	0011883a 	mov	r8,zero
10105a44:	0039883a 	mov	fp,zero
10105a48:	0025883a 	mov	r18,zero
10105a4c:	90001f26 	beq	r18,zero,10105acc <__sfvwrite_r+0x2a8>
10105a50:	40005a26 	beq	r8,zero,10105bbc <__sfvwrite_r+0x398>
10105a54:	982d883a 	mov	r22,r19
10105a58:	94c0012e 	bgeu	r18,r19,10105a60 <__sfvwrite_r+0x23c>
10105a5c:	902d883a 	mov	r22,r18
10105a60:	81000017 	ldw	r4,0(r16)
10105a64:	80800417 	ldw	r2,16(r16)
10105a68:	b02f883a 	mov	r23,r22
10105a6c:	81c00517 	ldw	r7,20(r16)
10105a70:	1100032e 	bgeu	r2,r4,10105a80 <__sfvwrite_r+0x25c>
10105a74:	80c00217 	ldw	r3,8(r16)
10105a78:	38c7883a 	add	r3,r7,r3
10105a7c:	1d801816 	blt	r3,r22,10105ae0 <__sfvwrite_r+0x2bc>
10105a80:	b1c03e16 	blt	r22,r7,10105b7c <__sfvwrite_r+0x358>
10105a84:	80800917 	ldw	r2,36(r16)
10105a88:	81400717 	ldw	r5,28(r16)
10105a8c:	e00d883a 	mov	r6,fp
10105a90:	da000115 	stw	r8,4(sp)
10105a94:	a809883a 	mov	r4,r21
10105a98:	103ee83a 	callr	r2
10105a9c:	102f883a 	mov	r23,r2
10105aa0:	da000117 	ldw	r8,4(sp)
10105aa4:	00bfe00e 	bge	zero,r2,10105a28 <__alt_data_end+0xfffe5a28>
10105aa8:	9de7c83a 	sub	r19,r19,r23
10105aac:	98001f26 	beq	r19,zero,10105b2c <__sfvwrite_r+0x308>
10105ab0:	a0800217 	ldw	r2,8(r20)
10105ab4:	e5f9883a 	add	fp,fp,r23
10105ab8:	95e5c83a 	sub	r18,r18,r23
10105abc:	15efc83a 	sub	r23,r2,r23
10105ac0:	a5c00215 	stw	r23,8(r20)
10105ac4:	b83f8426 	beq	r23,zero,101058d8 <__alt_data_end+0xfffe58d8>
10105ac8:	903fe11e 	bne	r18,zero,10105a50 <__alt_data_end+0xfffe5a50>
10105acc:	8f000017 	ldw	fp,0(r17)
10105ad0:	8c800117 	ldw	r18,4(r17)
10105ad4:	0011883a 	mov	r8,zero
10105ad8:	8c400204 	addi	r17,r17,8
10105adc:	003fdb06 	br	10105a4c <__alt_data_end+0xfffe5a4c>
10105ae0:	180d883a 	mov	r6,r3
10105ae4:	e00b883a 	mov	r5,fp
10105ae8:	da000115 	stw	r8,4(sp)
10105aec:	d8c00015 	stw	r3,0(sp)
10105af0:	01069fc0 	call	101069fc <memmove>
10105af4:	d8c00017 	ldw	r3,0(sp)
10105af8:	80800017 	ldw	r2,0(r16)
10105afc:	800b883a 	mov	r5,r16
10105b00:	a809883a 	mov	r4,r21
10105b04:	10c5883a 	add	r2,r2,r3
10105b08:	80800015 	stw	r2,0(r16)
10105b0c:	d8c00015 	stw	r3,0(sp)
10105b10:	0104fb40 	call	10104fb4 <_fflush_r>
10105b14:	d8c00017 	ldw	r3,0(sp)
10105b18:	da000117 	ldw	r8,4(sp)
10105b1c:	103fc21e 	bne	r2,zero,10105a28 <__alt_data_end+0xfffe5a28>
10105b20:	182f883a 	mov	r23,r3
10105b24:	9de7c83a 	sub	r19,r19,r23
10105b28:	983fe11e 	bne	r19,zero,10105ab0 <__alt_data_end+0xfffe5ab0>
10105b2c:	800b883a 	mov	r5,r16
10105b30:	a809883a 	mov	r4,r21
10105b34:	0104fb40 	call	10104fb4 <_fflush_r>
10105b38:	103fbb1e 	bne	r2,zero,10105a28 <__alt_data_end+0xfffe5a28>
10105b3c:	0011883a 	mov	r8,zero
10105b40:	003fdb06 	br	10105ab0 <__alt_data_end+0xfffe5ab0>
10105b44:	94c0012e 	bgeu	r18,r19,10105b4c <__sfvwrite_r+0x328>
10105b48:	9027883a 	mov	r19,r18
10105b4c:	980d883a 	mov	r6,r19
10105b50:	e00b883a 	mov	r5,fp
10105b54:	01069fc0 	call	101069fc <memmove>
10105b58:	80800217 	ldw	r2,8(r16)
10105b5c:	80c00017 	ldw	r3,0(r16)
10105b60:	14c5c83a 	sub	r2,r2,r19
10105b64:	1cc7883a 	add	r3,r3,r19
10105b68:	80800215 	stw	r2,8(r16)
10105b6c:	80c00015 	stw	r3,0(r16)
10105b70:	10004326 	beq	r2,zero,10105c80 <__sfvwrite_r+0x45c>
10105b74:	9805883a 	mov	r2,r19
10105b78:	003f8306 	br	10105988 <__alt_data_end+0xfffe5988>
10105b7c:	b00d883a 	mov	r6,r22
10105b80:	e00b883a 	mov	r5,fp
10105b84:	da000115 	stw	r8,4(sp)
10105b88:	01069fc0 	call	101069fc <memmove>
10105b8c:	80800217 	ldw	r2,8(r16)
10105b90:	80c00017 	ldw	r3,0(r16)
10105b94:	da000117 	ldw	r8,4(sp)
10105b98:	1585c83a 	sub	r2,r2,r22
10105b9c:	1dad883a 	add	r22,r3,r22
10105ba0:	80800215 	stw	r2,8(r16)
10105ba4:	85800015 	stw	r22,0(r16)
10105ba8:	003fbf06 	br	10105aa8 <__alt_data_end+0xfffe5aa8>
10105bac:	81000017 	ldw	r4,0(r16)
10105bb0:	9027883a 	mov	r19,r18
10105bb4:	902f883a 	mov	r23,r18
10105bb8:	003f6906 	br	10105960 <__alt_data_end+0xfffe5960>
10105bbc:	900d883a 	mov	r6,r18
10105bc0:	01400284 	movi	r5,10
10105bc4:	e009883a 	mov	r4,fp
10105bc8:	01069180 	call	10106918 <memchr>
10105bcc:	10003e26 	beq	r2,zero,10105cc8 <__sfvwrite_r+0x4a4>
10105bd0:	10800044 	addi	r2,r2,1
10105bd4:	1727c83a 	sub	r19,r2,fp
10105bd8:	02000044 	movi	r8,1
10105bdc:	003f9d06 	br	10105a54 <__alt_data_end+0xfffe5a54>
10105be0:	80800517 	ldw	r2,20(r16)
10105be4:	81400417 	ldw	r5,16(r16)
10105be8:	81c00017 	ldw	r7,0(r16)
10105bec:	10a7883a 	add	r19,r2,r2
10105bf0:	9885883a 	add	r2,r19,r2
10105bf4:	1026d7fa 	srli	r19,r2,31
10105bf8:	396dc83a 	sub	r22,r7,r5
10105bfc:	b1000044 	addi	r4,r22,1
10105c00:	9885883a 	add	r2,r19,r2
10105c04:	1027d07a 	srai	r19,r2,1
10105c08:	2485883a 	add	r2,r4,r18
10105c0c:	980d883a 	mov	r6,r19
10105c10:	9880022e 	bgeu	r19,r2,10105c1c <__sfvwrite_r+0x3f8>
10105c14:	1027883a 	mov	r19,r2
10105c18:	100d883a 	mov	r6,r2
10105c1c:	18c1000c 	andi	r3,r3,1024
10105c20:	18001c26 	beq	r3,zero,10105c94 <__sfvwrite_r+0x470>
10105c24:	300b883a 	mov	r5,r6
10105c28:	a809883a 	mov	r4,r21
10105c2c:	010610c0 	call	1010610c <_malloc_r>
10105c30:	102f883a 	mov	r23,r2
10105c34:	10002926 	beq	r2,zero,10105cdc <__sfvwrite_r+0x4b8>
10105c38:	81400417 	ldw	r5,16(r16)
10105c3c:	b00d883a 	mov	r6,r22
10105c40:	1009883a 	mov	r4,r2
10105c44:	0100cc00 	call	10100cc0 <memcpy>
10105c48:	8080030b 	ldhu	r2,12(r16)
10105c4c:	00fedfc4 	movi	r3,-1153
10105c50:	10c4703a 	and	r2,r2,r3
10105c54:	10802014 	ori	r2,r2,128
10105c58:	8080030d 	sth	r2,12(r16)
10105c5c:	bd89883a 	add	r4,r23,r22
10105c60:	9d8fc83a 	sub	r7,r19,r22
10105c64:	85c00415 	stw	r23,16(r16)
10105c68:	84c00515 	stw	r19,20(r16)
10105c6c:	81000015 	stw	r4,0(r16)
10105c70:	9027883a 	mov	r19,r18
10105c74:	81c00215 	stw	r7,8(r16)
10105c78:	902f883a 	mov	r23,r18
10105c7c:	003f3806 	br	10105960 <__alt_data_end+0xfffe5960>
10105c80:	800b883a 	mov	r5,r16
10105c84:	a809883a 	mov	r4,r21
10105c88:	0104fb40 	call	10104fb4 <_fflush_r>
10105c8c:	103fb926 	beq	r2,zero,10105b74 <__alt_data_end+0xfffe5b74>
10105c90:	003f6506 	br	10105a28 <__alt_data_end+0xfffe5a28>
10105c94:	a809883a 	mov	r4,r21
10105c98:	0107d380 	call	10107d38 <_realloc_r>
10105c9c:	102f883a 	mov	r23,r2
10105ca0:	103fee1e 	bne	r2,zero,10105c5c <__alt_data_end+0xfffe5c5c>
10105ca4:	81400417 	ldw	r5,16(r16)
10105ca8:	a809883a 	mov	r4,r21
10105cac:	01055140 	call	10105514 <_free_r>
10105cb0:	8080030b 	ldhu	r2,12(r16)
10105cb4:	00ffdfc4 	movi	r3,-129
10105cb8:	1884703a 	and	r2,r3,r2
10105cbc:	00c00304 	movi	r3,12
10105cc0:	a8c00015 	stw	r3,0(r21)
10105cc4:	003f5906 	br	10105a2c <__alt_data_end+0xfffe5a2c>
10105cc8:	94c00044 	addi	r19,r18,1
10105ccc:	02000044 	movi	r8,1
10105cd0:	003f6006 	br	10105a54 <__alt_data_end+0xfffe5a54>
10105cd4:	00bfffc4 	movi	r2,-1
10105cd8:	003f0006 	br	101058dc <__alt_data_end+0xfffe58dc>
10105cdc:	00800304 	movi	r2,12
10105ce0:	a8800015 	stw	r2,0(r21)
10105ce4:	8080030b 	ldhu	r2,12(r16)
10105ce8:	003f5006 	br	10105a2c <__alt_data_end+0xfffe5a2c>

10105cec <_fwalk>:
10105cec:	defff704 	addi	sp,sp,-36
10105cf0:	dd000415 	stw	r20,16(sp)
10105cf4:	dfc00815 	stw	ra,32(sp)
10105cf8:	ddc00715 	stw	r23,28(sp)
10105cfc:	dd800615 	stw	r22,24(sp)
10105d00:	dd400515 	stw	r21,20(sp)
10105d04:	dcc00315 	stw	r19,12(sp)
10105d08:	dc800215 	stw	r18,8(sp)
10105d0c:	dc400115 	stw	r17,4(sp)
10105d10:	dc000015 	stw	r16,0(sp)
10105d14:	2500b804 	addi	r20,r4,736
10105d18:	a0002326 	beq	r20,zero,10105da8 <_fwalk+0xbc>
10105d1c:	282b883a 	mov	r21,r5
10105d20:	002f883a 	mov	r23,zero
10105d24:	05800044 	movi	r22,1
10105d28:	04ffffc4 	movi	r19,-1
10105d2c:	a4400117 	ldw	r17,4(r20)
10105d30:	a4800217 	ldw	r18,8(r20)
10105d34:	8c7fffc4 	addi	r17,r17,-1
10105d38:	88000d16 	blt	r17,zero,10105d70 <_fwalk+0x84>
10105d3c:	94000304 	addi	r16,r18,12
10105d40:	94800384 	addi	r18,r18,14
10105d44:	8080000b 	ldhu	r2,0(r16)
10105d48:	8c7fffc4 	addi	r17,r17,-1
10105d4c:	813ffd04 	addi	r4,r16,-12
10105d50:	b080042e 	bgeu	r22,r2,10105d64 <_fwalk+0x78>
10105d54:	9080000f 	ldh	r2,0(r18)
10105d58:	14c00226 	beq	r2,r19,10105d64 <_fwalk+0x78>
10105d5c:	a83ee83a 	callr	r21
10105d60:	b8aeb03a 	or	r23,r23,r2
10105d64:	84001a04 	addi	r16,r16,104
10105d68:	94801a04 	addi	r18,r18,104
10105d6c:	8cfff51e 	bne	r17,r19,10105d44 <__alt_data_end+0xfffe5d44>
10105d70:	a5000017 	ldw	r20,0(r20)
10105d74:	a03fed1e 	bne	r20,zero,10105d2c <__alt_data_end+0xfffe5d2c>
10105d78:	b805883a 	mov	r2,r23
10105d7c:	dfc00817 	ldw	ra,32(sp)
10105d80:	ddc00717 	ldw	r23,28(sp)
10105d84:	dd800617 	ldw	r22,24(sp)
10105d88:	dd400517 	ldw	r21,20(sp)
10105d8c:	dd000417 	ldw	r20,16(sp)
10105d90:	dcc00317 	ldw	r19,12(sp)
10105d94:	dc800217 	ldw	r18,8(sp)
10105d98:	dc400117 	ldw	r17,4(sp)
10105d9c:	dc000017 	ldw	r16,0(sp)
10105da0:	dec00904 	addi	sp,sp,36
10105da4:	f800283a 	ret
10105da8:	002f883a 	mov	r23,zero
10105dac:	003ff206 	br	10105d78 <__alt_data_end+0xfffe5d78>

10105db0 <_fwalk_reent>:
10105db0:	defff704 	addi	sp,sp,-36
10105db4:	dd000415 	stw	r20,16(sp)
10105db8:	dfc00815 	stw	ra,32(sp)
10105dbc:	ddc00715 	stw	r23,28(sp)
10105dc0:	dd800615 	stw	r22,24(sp)
10105dc4:	dd400515 	stw	r21,20(sp)
10105dc8:	dcc00315 	stw	r19,12(sp)
10105dcc:	dc800215 	stw	r18,8(sp)
10105dd0:	dc400115 	stw	r17,4(sp)
10105dd4:	dc000015 	stw	r16,0(sp)
10105dd8:	2500b804 	addi	r20,r4,736
10105ddc:	a0002326 	beq	r20,zero,10105e6c <_fwalk_reent+0xbc>
10105de0:	282b883a 	mov	r21,r5
10105de4:	2027883a 	mov	r19,r4
10105de8:	002f883a 	mov	r23,zero
10105dec:	05800044 	movi	r22,1
10105df0:	04bfffc4 	movi	r18,-1
10105df4:	a4400117 	ldw	r17,4(r20)
10105df8:	a4000217 	ldw	r16,8(r20)
10105dfc:	8c7fffc4 	addi	r17,r17,-1
10105e00:	88000c16 	blt	r17,zero,10105e34 <_fwalk_reent+0x84>
10105e04:	84000304 	addi	r16,r16,12
10105e08:	8080000b 	ldhu	r2,0(r16)
10105e0c:	8c7fffc4 	addi	r17,r17,-1
10105e10:	817ffd04 	addi	r5,r16,-12
10105e14:	b080052e 	bgeu	r22,r2,10105e2c <_fwalk_reent+0x7c>
10105e18:	8080008f 	ldh	r2,2(r16)
10105e1c:	9809883a 	mov	r4,r19
10105e20:	14800226 	beq	r2,r18,10105e2c <_fwalk_reent+0x7c>
10105e24:	a83ee83a 	callr	r21
10105e28:	b8aeb03a 	or	r23,r23,r2
10105e2c:	84001a04 	addi	r16,r16,104
10105e30:	8cbff51e 	bne	r17,r18,10105e08 <__alt_data_end+0xfffe5e08>
10105e34:	a5000017 	ldw	r20,0(r20)
10105e38:	a03fee1e 	bne	r20,zero,10105df4 <__alt_data_end+0xfffe5df4>
10105e3c:	b805883a 	mov	r2,r23
10105e40:	dfc00817 	ldw	ra,32(sp)
10105e44:	ddc00717 	ldw	r23,28(sp)
10105e48:	dd800617 	ldw	r22,24(sp)
10105e4c:	dd400517 	ldw	r21,20(sp)
10105e50:	dd000417 	ldw	r20,16(sp)
10105e54:	dcc00317 	ldw	r19,12(sp)
10105e58:	dc800217 	ldw	r18,8(sp)
10105e5c:	dc400117 	ldw	r17,4(sp)
10105e60:	dc000017 	ldw	r16,0(sp)
10105e64:	dec00904 	addi	sp,sp,36
10105e68:	f800283a 	ret
10105e6c:	002f883a 	mov	r23,zero
10105e70:	003ff206 	br	10105e3c <__alt_data_end+0xfffe5e3c>

10105e74 <_setlocale_r>:
10105e74:	30001b26 	beq	r6,zero,10105ee4 <_setlocale_r+0x70>
10105e78:	01440474 	movhi	r5,4113
10105e7c:	defffe04 	addi	sp,sp,-8
10105e80:	2941aa04 	addi	r5,r5,1704
10105e84:	3009883a 	mov	r4,r6
10105e88:	dc000015 	stw	r16,0(sp)
10105e8c:	dfc00115 	stw	ra,4(sp)
10105e90:	3021883a 	mov	r16,r6
10105e94:	01084a00 	call	101084a0 <strcmp>
10105e98:	1000061e 	bne	r2,zero,10105eb4 <_setlocale_r+0x40>
10105e9c:	00840474 	movhi	r2,4113
10105ea0:	1081a904 	addi	r2,r2,1700
10105ea4:	dfc00117 	ldw	ra,4(sp)
10105ea8:	dc000017 	ldw	r16,0(sp)
10105eac:	dec00204 	addi	sp,sp,8
10105eb0:	f800283a 	ret
10105eb4:	01440474 	movhi	r5,4113
10105eb8:	2941a904 	addi	r5,r5,1700
10105ebc:	8009883a 	mov	r4,r16
10105ec0:	01084a00 	call	101084a0 <strcmp>
10105ec4:	103ff526 	beq	r2,zero,10105e9c <__alt_data_end+0xfffe5e9c>
10105ec8:	01440474 	movhi	r5,4113
10105ecc:	29419404 	addi	r5,r5,1616
10105ed0:	8009883a 	mov	r4,r16
10105ed4:	01084a00 	call	101084a0 <strcmp>
10105ed8:	103ff026 	beq	r2,zero,10105e9c <__alt_data_end+0xfffe5e9c>
10105edc:	0005883a 	mov	r2,zero
10105ee0:	003ff006 	br	10105ea4 <__alt_data_end+0xfffe5ea4>
10105ee4:	00840474 	movhi	r2,4113
10105ee8:	1081a904 	addi	r2,r2,1700
10105eec:	f800283a 	ret

10105ef0 <__locale_charset>:
10105ef0:	00840474 	movhi	r2,4113
10105ef4:	10835f04 	addi	r2,r2,3452
10105ef8:	f800283a 	ret

10105efc <__locale_mb_cur_max>:
10105efc:	00840474 	movhi	r2,4113
10105f00:	10890504 	addi	r2,r2,9236
10105f04:	10800017 	ldw	r2,0(r2)
10105f08:	f800283a 	ret

10105f0c <__locale_msgcharset>:
10105f0c:	00840474 	movhi	r2,4113
10105f10:	10835704 	addi	r2,r2,3420
10105f14:	f800283a 	ret

10105f18 <__locale_cjk_lang>:
10105f18:	0005883a 	mov	r2,zero
10105f1c:	f800283a 	ret

10105f20 <_localeconv_r>:
10105f20:	00840474 	movhi	r2,4113
10105f24:	10836704 	addi	r2,r2,3484
10105f28:	f800283a 	ret

10105f2c <setlocale>:
10105f2c:	00840474 	movhi	r2,4113
10105f30:	10890404 	addi	r2,r2,9232
10105f34:	280d883a 	mov	r6,r5
10105f38:	200b883a 	mov	r5,r4
10105f3c:	11000017 	ldw	r4,0(r2)
10105f40:	0105e741 	jmpi	10105e74 <_setlocale_r>

10105f44 <localeconv>:
10105f44:	00840474 	movhi	r2,4113
10105f48:	10836704 	addi	r2,r2,3484
10105f4c:	f800283a 	ret

10105f50 <__smakebuf_r>:
10105f50:	2880030b 	ldhu	r2,12(r5)
10105f54:	10c0008c 	andi	r3,r2,2
10105f58:	1800411e 	bne	r3,zero,10106060 <__smakebuf_r+0x110>
10105f5c:	deffec04 	addi	sp,sp,-80
10105f60:	dc000f15 	stw	r16,60(sp)
10105f64:	2821883a 	mov	r16,r5
10105f68:	2940038f 	ldh	r5,14(r5)
10105f6c:	dc401015 	stw	r17,64(sp)
10105f70:	dfc01315 	stw	ra,76(sp)
10105f74:	dcc01215 	stw	r19,72(sp)
10105f78:	dc801115 	stw	r18,68(sp)
10105f7c:	2023883a 	mov	r17,r4
10105f80:	28001c16 	blt	r5,zero,10105ff4 <__smakebuf_r+0xa4>
10105f84:	d80d883a 	mov	r6,sp
10105f88:	010a1100 	call	1010a110 <_fstat_r>
10105f8c:	10001816 	blt	r2,zero,10105ff0 <__smakebuf_r+0xa0>
10105f90:	d8800117 	ldw	r2,4(sp)
10105f94:	00e00014 	movui	r3,32768
10105f98:	10bc000c 	andi	r2,r2,61440
10105f9c:	14c80020 	cmpeqi	r19,r2,8192
10105fa0:	10c03726 	beq	r2,r3,10106080 <__smakebuf_r+0x130>
10105fa4:	80c0030b 	ldhu	r3,12(r16)
10105fa8:	18c20014 	ori	r3,r3,2048
10105fac:	80c0030d 	sth	r3,12(r16)
10105fb0:	00c80004 	movi	r3,8192
10105fb4:	10c0521e 	bne	r2,r3,10106100 <__smakebuf_r+0x1b0>
10105fb8:	8140038f 	ldh	r5,14(r16)
10105fbc:	8809883a 	mov	r4,r17
10105fc0:	010a16c0 	call	1010a16c <_isatty_r>
10105fc4:	10004c26 	beq	r2,zero,101060f8 <__smakebuf_r+0x1a8>
10105fc8:	8080030b 	ldhu	r2,12(r16)
10105fcc:	80c010c4 	addi	r3,r16,67
10105fd0:	80c00015 	stw	r3,0(r16)
10105fd4:	10800054 	ori	r2,r2,1
10105fd8:	8080030d 	sth	r2,12(r16)
10105fdc:	00800044 	movi	r2,1
10105fe0:	80c00415 	stw	r3,16(r16)
10105fe4:	80800515 	stw	r2,20(r16)
10105fe8:	04810004 	movi	r18,1024
10105fec:	00000706 	br	1010600c <__smakebuf_r+0xbc>
10105ff0:	8080030b 	ldhu	r2,12(r16)
10105ff4:	10c0200c 	andi	r3,r2,128
10105ff8:	18001f1e 	bne	r3,zero,10106078 <__smakebuf_r+0x128>
10105ffc:	04810004 	movi	r18,1024
10106000:	10820014 	ori	r2,r2,2048
10106004:	8080030d 	sth	r2,12(r16)
10106008:	0027883a 	mov	r19,zero
1010600c:	900b883a 	mov	r5,r18
10106010:	8809883a 	mov	r4,r17
10106014:	010610c0 	call	1010610c <_malloc_r>
10106018:	10002c26 	beq	r2,zero,101060cc <__smakebuf_r+0x17c>
1010601c:	80c0030b 	ldhu	r3,12(r16)
10106020:	01040434 	movhi	r4,4112
10106024:	21141204 	addi	r4,r4,20552
10106028:	89000f15 	stw	r4,60(r17)
1010602c:	18c02014 	ori	r3,r3,128
10106030:	80c0030d 	sth	r3,12(r16)
10106034:	80800015 	stw	r2,0(r16)
10106038:	80800415 	stw	r2,16(r16)
1010603c:	84800515 	stw	r18,20(r16)
10106040:	98001a1e 	bne	r19,zero,101060ac <__smakebuf_r+0x15c>
10106044:	dfc01317 	ldw	ra,76(sp)
10106048:	dcc01217 	ldw	r19,72(sp)
1010604c:	dc801117 	ldw	r18,68(sp)
10106050:	dc401017 	ldw	r17,64(sp)
10106054:	dc000f17 	ldw	r16,60(sp)
10106058:	dec01404 	addi	sp,sp,80
1010605c:	f800283a 	ret
10106060:	288010c4 	addi	r2,r5,67
10106064:	28800015 	stw	r2,0(r5)
10106068:	28800415 	stw	r2,16(r5)
1010606c:	00800044 	movi	r2,1
10106070:	28800515 	stw	r2,20(r5)
10106074:	f800283a 	ret
10106078:	04801004 	movi	r18,64
1010607c:	003fe006 	br	10106000 <__alt_data_end+0xfffe6000>
10106080:	81000a17 	ldw	r4,40(r16)
10106084:	00c40474 	movhi	r3,4113
10106088:	18e10f04 	addi	r3,r3,-31684
1010608c:	20ffc51e 	bne	r4,r3,10105fa4 <__alt_data_end+0xfffe5fa4>
10106090:	8080030b 	ldhu	r2,12(r16)
10106094:	04810004 	movi	r18,1024
10106098:	84801315 	stw	r18,76(r16)
1010609c:	1484b03a 	or	r2,r2,r18
101060a0:	8080030d 	sth	r2,12(r16)
101060a4:	0027883a 	mov	r19,zero
101060a8:	003fd806 	br	1010600c <__alt_data_end+0xfffe600c>
101060ac:	8140038f 	ldh	r5,14(r16)
101060b0:	8809883a 	mov	r4,r17
101060b4:	010a16c0 	call	1010a16c <_isatty_r>
101060b8:	103fe226 	beq	r2,zero,10106044 <__alt_data_end+0xfffe6044>
101060bc:	8080030b 	ldhu	r2,12(r16)
101060c0:	10800054 	ori	r2,r2,1
101060c4:	8080030d 	sth	r2,12(r16)
101060c8:	003fde06 	br	10106044 <__alt_data_end+0xfffe6044>
101060cc:	8080030b 	ldhu	r2,12(r16)
101060d0:	10c0800c 	andi	r3,r2,512
101060d4:	183fdb1e 	bne	r3,zero,10106044 <__alt_data_end+0xfffe6044>
101060d8:	10800094 	ori	r2,r2,2
101060dc:	80c010c4 	addi	r3,r16,67
101060e0:	8080030d 	sth	r2,12(r16)
101060e4:	00800044 	movi	r2,1
101060e8:	80c00015 	stw	r3,0(r16)
101060ec:	80c00415 	stw	r3,16(r16)
101060f0:	80800515 	stw	r2,20(r16)
101060f4:	003fd306 	br	10106044 <__alt_data_end+0xfffe6044>
101060f8:	04810004 	movi	r18,1024
101060fc:	003fc306 	br	1010600c <__alt_data_end+0xfffe600c>
10106100:	0027883a 	mov	r19,zero
10106104:	04810004 	movi	r18,1024
10106108:	003fc006 	br	1010600c <__alt_data_end+0xfffe600c>

1010610c <_malloc_r>:
1010610c:	defff504 	addi	sp,sp,-44
10106110:	dc800315 	stw	r18,12(sp)
10106114:	dfc00a15 	stw	ra,40(sp)
10106118:	df000915 	stw	fp,36(sp)
1010611c:	ddc00815 	stw	r23,32(sp)
10106120:	dd800715 	stw	r22,28(sp)
10106124:	dd400615 	stw	r21,24(sp)
10106128:	dd000515 	stw	r20,20(sp)
1010612c:	dcc00415 	stw	r19,16(sp)
10106130:	dc400215 	stw	r17,8(sp)
10106134:	dc000115 	stw	r16,4(sp)
10106138:	288002c4 	addi	r2,r5,11
1010613c:	00c00584 	movi	r3,22
10106140:	2025883a 	mov	r18,r4
10106144:	18807f2e 	bgeu	r3,r2,10106344 <_malloc_r+0x238>
10106148:	047ffe04 	movi	r17,-8
1010614c:	1462703a 	and	r17,r2,r17
10106150:	8800a316 	blt	r17,zero,101063e0 <_malloc_r+0x2d4>
10106154:	8940a236 	bltu	r17,r5,101063e0 <_malloc_r+0x2d4>
10106158:	010dfc00 	call	1010dfc0 <__malloc_lock>
1010615c:	00807dc4 	movi	r2,503
10106160:	1441e92e 	bgeu	r2,r17,10106908 <_malloc_r+0x7fc>
10106164:	8804d27a 	srli	r2,r17,9
10106168:	1000a126 	beq	r2,zero,101063f0 <_malloc_r+0x2e4>
1010616c:	00c00104 	movi	r3,4
10106170:	18811e36 	bltu	r3,r2,101065ec <_malloc_r+0x4e0>
10106174:	8804d1ba 	srli	r2,r17,6
10106178:	12000e44 	addi	r8,r2,57
1010617c:	11c00e04 	addi	r7,r2,56
10106180:	4209883a 	add	r4,r8,r8
10106184:	04c40474 	movhi	r19,4113
10106188:	2109883a 	add	r4,r4,r4
1010618c:	9cc37504 	addi	r19,r19,3540
10106190:	2109883a 	add	r4,r4,r4
10106194:	9909883a 	add	r4,r19,r4
10106198:	24000117 	ldw	r16,4(r4)
1010619c:	213ffe04 	addi	r4,r4,-8
101061a0:	24009726 	beq	r4,r16,10106400 <_malloc_r+0x2f4>
101061a4:	80800117 	ldw	r2,4(r16)
101061a8:	01bfff04 	movi	r6,-4
101061ac:	014003c4 	movi	r5,15
101061b0:	1184703a 	and	r2,r2,r6
101061b4:	1447c83a 	sub	r3,r2,r17
101061b8:	28c00716 	blt	r5,r3,101061d8 <_malloc_r+0xcc>
101061bc:	1800920e 	bge	r3,zero,10106408 <_malloc_r+0x2fc>
101061c0:	84000317 	ldw	r16,12(r16)
101061c4:	24008e26 	beq	r4,r16,10106400 <_malloc_r+0x2f4>
101061c8:	80800117 	ldw	r2,4(r16)
101061cc:	1184703a 	and	r2,r2,r6
101061d0:	1447c83a 	sub	r3,r2,r17
101061d4:	28fff90e 	bge	r5,r3,101061bc <__alt_data_end+0xfffe61bc>
101061d8:	3809883a 	mov	r4,r7
101061dc:	01840474 	movhi	r6,4113
101061e0:	9c000417 	ldw	r16,16(r19)
101061e4:	31837504 	addi	r6,r6,3540
101061e8:	32000204 	addi	r8,r6,8
101061ec:	82013426 	beq	r16,r8,101066c0 <_malloc_r+0x5b4>
101061f0:	80c00117 	ldw	r3,4(r16)
101061f4:	00bfff04 	movi	r2,-4
101061f8:	188e703a 	and	r7,r3,r2
101061fc:	3c45c83a 	sub	r2,r7,r17
10106200:	00c003c4 	movi	r3,15
10106204:	18811f16 	blt	r3,r2,10106684 <_malloc_r+0x578>
10106208:	32000515 	stw	r8,20(r6)
1010620c:	32000415 	stw	r8,16(r6)
10106210:	10007f0e 	bge	r2,zero,10106410 <_malloc_r+0x304>
10106214:	00807fc4 	movi	r2,511
10106218:	11c0fd36 	bltu	r2,r7,10106610 <_malloc_r+0x504>
1010621c:	3806d0fa 	srli	r3,r7,3
10106220:	01c00044 	movi	r7,1
10106224:	30800117 	ldw	r2,4(r6)
10106228:	19400044 	addi	r5,r3,1
1010622c:	294b883a 	add	r5,r5,r5
10106230:	1807d0ba 	srai	r3,r3,2
10106234:	294b883a 	add	r5,r5,r5
10106238:	294b883a 	add	r5,r5,r5
1010623c:	298b883a 	add	r5,r5,r6
10106240:	38c6983a 	sll	r3,r7,r3
10106244:	29c00017 	ldw	r7,0(r5)
10106248:	2a7ffe04 	addi	r9,r5,-8
1010624c:	1886b03a 	or	r3,r3,r2
10106250:	82400315 	stw	r9,12(r16)
10106254:	81c00215 	stw	r7,8(r16)
10106258:	30c00115 	stw	r3,4(r6)
1010625c:	2c000015 	stw	r16,0(r5)
10106260:	3c000315 	stw	r16,12(r7)
10106264:	2005d0ba 	srai	r2,r4,2
10106268:	01400044 	movi	r5,1
1010626c:	288a983a 	sll	r5,r5,r2
10106270:	19406f36 	bltu	r3,r5,10106430 <_malloc_r+0x324>
10106274:	28c4703a 	and	r2,r5,r3
10106278:	10000a1e 	bne	r2,zero,101062a4 <_malloc_r+0x198>
1010627c:	00bfff04 	movi	r2,-4
10106280:	294b883a 	add	r5,r5,r5
10106284:	2088703a 	and	r4,r4,r2
10106288:	28c4703a 	and	r2,r5,r3
1010628c:	21000104 	addi	r4,r4,4
10106290:	1000041e 	bne	r2,zero,101062a4 <_malloc_r+0x198>
10106294:	294b883a 	add	r5,r5,r5
10106298:	28c4703a 	and	r2,r5,r3
1010629c:	21000104 	addi	r4,r4,4
101062a0:	103ffc26 	beq	r2,zero,10106294 <__alt_data_end+0xfffe6294>
101062a4:	02bfff04 	movi	r10,-4
101062a8:	024003c4 	movi	r9,15
101062ac:	21800044 	addi	r6,r4,1
101062b0:	318d883a 	add	r6,r6,r6
101062b4:	318d883a 	add	r6,r6,r6
101062b8:	318d883a 	add	r6,r6,r6
101062bc:	998d883a 	add	r6,r19,r6
101062c0:	333ffe04 	addi	r12,r6,-8
101062c4:	2017883a 	mov	r11,r4
101062c8:	31800104 	addi	r6,r6,4
101062cc:	34000017 	ldw	r16,0(r6)
101062d0:	31fffd04 	addi	r7,r6,-12
101062d4:	81c0041e 	bne	r16,r7,101062e8 <_malloc_r+0x1dc>
101062d8:	0000fb06 	br	101066c8 <_malloc_r+0x5bc>
101062dc:	1801030e 	bge	r3,zero,101066ec <_malloc_r+0x5e0>
101062e0:	84000317 	ldw	r16,12(r16)
101062e4:	81c0f826 	beq	r16,r7,101066c8 <_malloc_r+0x5bc>
101062e8:	80800117 	ldw	r2,4(r16)
101062ec:	1284703a 	and	r2,r2,r10
101062f0:	1447c83a 	sub	r3,r2,r17
101062f4:	48fff90e 	bge	r9,r3,101062dc <__alt_data_end+0xfffe62dc>
101062f8:	80800317 	ldw	r2,12(r16)
101062fc:	81000217 	ldw	r4,8(r16)
10106300:	89400054 	ori	r5,r17,1
10106304:	81400115 	stw	r5,4(r16)
10106308:	20800315 	stw	r2,12(r4)
1010630c:	11000215 	stw	r4,8(r2)
10106310:	8463883a 	add	r17,r16,r17
10106314:	9c400515 	stw	r17,20(r19)
10106318:	9c400415 	stw	r17,16(r19)
1010631c:	18800054 	ori	r2,r3,1
10106320:	88800115 	stw	r2,4(r17)
10106324:	8a000315 	stw	r8,12(r17)
10106328:	8a000215 	stw	r8,8(r17)
1010632c:	88e3883a 	add	r17,r17,r3
10106330:	88c00015 	stw	r3,0(r17)
10106334:	9009883a 	mov	r4,r18
10106338:	010dfe40 	call	1010dfe4 <__malloc_unlock>
1010633c:	80800204 	addi	r2,r16,8
10106340:	00001b06 	br	101063b0 <_malloc_r+0x2a4>
10106344:	04400404 	movi	r17,16
10106348:	89402536 	bltu	r17,r5,101063e0 <_malloc_r+0x2d4>
1010634c:	010dfc00 	call	1010dfc0 <__malloc_lock>
10106350:	00800184 	movi	r2,6
10106354:	01000084 	movi	r4,2
10106358:	04c40474 	movhi	r19,4113
1010635c:	1085883a 	add	r2,r2,r2
10106360:	9cc37504 	addi	r19,r19,3540
10106364:	1085883a 	add	r2,r2,r2
10106368:	9885883a 	add	r2,r19,r2
1010636c:	14000117 	ldw	r16,4(r2)
10106370:	10fffe04 	addi	r3,r2,-8
10106374:	80c0d926 	beq	r16,r3,101066dc <_malloc_r+0x5d0>
10106378:	80c00117 	ldw	r3,4(r16)
1010637c:	81000317 	ldw	r4,12(r16)
10106380:	00bfff04 	movi	r2,-4
10106384:	1884703a 	and	r2,r3,r2
10106388:	81400217 	ldw	r5,8(r16)
1010638c:	8085883a 	add	r2,r16,r2
10106390:	10c00117 	ldw	r3,4(r2)
10106394:	29000315 	stw	r4,12(r5)
10106398:	21400215 	stw	r5,8(r4)
1010639c:	18c00054 	ori	r3,r3,1
101063a0:	10c00115 	stw	r3,4(r2)
101063a4:	9009883a 	mov	r4,r18
101063a8:	010dfe40 	call	1010dfe4 <__malloc_unlock>
101063ac:	80800204 	addi	r2,r16,8
101063b0:	dfc00a17 	ldw	ra,40(sp)
101063b4:	df000917 	ldw	fp,36(sp)
101063b8:	ddc00817 	ldw	r23,32(sp)
101063bc:	dd800717 	ldw	r22,28(sp)
101063c0:	dd400617 	ldw	r21,24(sp)
101063c4:	dd000517 	ldw	r20,20(sp)
101063c8:	dcc00417 	ldw	r19,16(sp)
101063cc:	dc800317 	ldw	r18,12(sp)
101063d0:	dc400217 	ldw	r17,8(sp)
101063d4:	dc000117 	ldw	r16,4(sp)
101063d8:	dec00b04 	addi	sp,sp,44
101063dc:	f800283a 	ret
101063e0:	00800304 	movi	r2,12
101063e4:	90800015 	stw	r2,0(r18)
101063e8:	0005883a 	mov	r2,zero
101063ec:	003ff006 	br	101063b0 <__alt_data_end+0xfffe63b0>
101063f0:	01002004 	movi	r4,128
101063f4:	02001004 	movi	r8,64
101063f8:	01c00fc4 	movi	r7,63
101063fc:	003f6106 	br	10106184 <__alt_data_end+0xfffe6184>
10106400:	4009883a 	mov	r4,r8
10106404:	003f7506 	br	101061dc <__alt_data_end+0xfffe61dc>
10106408:	81000317 	ldw	r4,12(r16)
1010640c:	003fde06 	br	10106388 <__alt_data_end+0xfffe6388>
10106410:	81c5883a 	add	r2,r16,r7
10106414:	11400117 	ldw	r5,4(r2)
10106418:	9009883a 	mov	r4,r18
1010641c:	29400054 	ori	r5,r5,1
10106420:	11400115 	stw	r5,4(r2)
10106424:	010dfe40 	call	1010dfe4 <__malloc_unlock>
10106428:	80800204 	addi	r2,r16,8
1010642c:	003fe006 	br	101063b0 <__alt_data_end+0xfffe63b0>
10106430:	9c000217 	ldw	r16,8(r19)
10106434:	00bfff04 	movi	r2,-4
10106438:	85800117 	ldw	r22,4(r16)
1010643c:	b0ac703a 	and	r22,r22,r2
10106440:	b4400336 	bltu	r22,r17,10106450 <_malloc_r+0x344>
10106444:	b445c83a 	sub	r2,r22,r17
10106448:	00c003c4 	movi	r3,15
1010644c:	18805d16 	blt	r3,r2,101065c4 <_malloc_r+0x4b8>
10106450:	05c40474 	movhi	r23,4113
10106454:	00840474 	movhi	r2,4113
10106458:	10900104 	addi	r2,r2,16388
1010645c:	bdc90604 	addi	r23,r23,9240
10106460:	15400017 	ldw	r21,0(r2)
10106464:	b8c00017 	ldw	r3,0(r23)
10106468:	00bfffc4 	movi	r2,-1
1010646c:	858d883a 	add	r6,r16,r22
10106470:	8d6b883a 	add	r21,r17,r21
10106474:	1880ea26 	beq	r3,r2,10106820 <_malloc_r+0x714>
10106478:	ad4403c4 	addi	r21,r21,4111
1010647c:	00bc0004 	movi	r2,-4096
10106480:	a8aa703a 	and	r21,r21,r2
10106484:	a80b883a 	mov	r5,r21
10106488:	9009883a 	mov	r4,r18
1010648c:	d9800015 	stw	r6,0(sp)
10106490:	01083100 	call	10108310 <_sbrk_r>
10106494:	1029883a 	mov	r20,r2
10106498:	00bfffc4 	movi	r2,-1
1010649c:	d9800017 	ldw	r6,0(sp)
101064a0:	a080e826 	beq	r20,r2,10106844 <_malloc_r+0x738>
101064a4:	a180a636 	bltu	r20,r6,10106740 <_malloc_r+0x634>
101064a8:	07040474 	movhi	fp,4113
101064ac:	e7100a04 	addi	fp,fp,16424
101064b0:	e0800017 	ldw	r2,0(fp)
101064b4:	a887883a 	add	r3,r21,r2
101064b8:	e0c00015 	stw	r3,0(fp)
101064bc:	3500e626 	beq	r6,r20,10106858 <_malloc_r+0x74c>
101064c0:	b9000017 	ldw	r4,0(r23)
101064c4:	00bfffc4 	movi	r2,-1
101064c8:	2080ee26 	beq	r4,r2,10106884 <_malloc_r+0x778>
101064cc:	a185c83a 	sub	r2,r20,r6
101064d0:	10c5883a 	add	r2,r2,r3
101064d4:	e0800015 	stw	r2,0(fp)
101064d8:	a0c001cc 	andi	r3,r20,7
101064dc:	1800bc26 	beq	r3,zero,101067d0 <_malloc_r+0x6c4>
101064e0:	a0e9c83a 	sub	r20,r20,r3
101064e4:	00840204 	movi	r2,4104
101064e8:	a5000204 	addi	r20,r20,8
101064ec:	10c7c83a 	sub	r3,r2,r3
101064f0:	a545883a 	add	r2,r20,r21
101064f4:	1083ffcc 	andi	r2,r2,4095
101064f8:	18abc83a 	sub	r21,r3,r2
101064fc:	a80b883a 	mov	r5,r21
10106500:	9009883a 	mov	r4,r18
10106504:	01083100 	call	10108310 <_sbrk_r>
10106508:	00ffffc4 	movi	r3,-1
1010650c:	10c0e126 	beq	r2,r3,10106894 <_malloc_r+0x788>
10106510:	1505c83a 	sub	r2,r2,r20
10106514:	1545883a 	add	r2,r2,r21
10106518:	10800054 	ori	r2,r2,1
1010651c:	e0c00017 	ldw	r3,0(fp)
10106520:	9d000215 	stw	r20,8(r19)
10106524:	a0800115 	stw	r2,4(r20)
10106528:	a8c7883a 	add	r3,r21,r3
1010652c:	e0c00015 	stw	r3,0(fp)
10106530:	84c00e26 	beq	r16,r19,1010656c <_malloc_r+0x460>
10106534:	018003c4 	movi	r6,15
10106538:	3580a72e 	bgeu	r6,r22,101067d8 <_malloc_r+0x6cc>
1010653c:	81400117 	ldw	r5,4(r16)
10106540:	013ffe04 	movi	r4,-8
10106544:	b0bffd04 	addi	r2,r22,-12
10106548:	1104703a 	and	r2,r2,r4
1010654c:	2900004c 	andi	r4,r5,1
10106550:	2088b03a 	or	r4,r4,r2
10106554:	81000115 	stw	r4,4(r16)
10106558:	01400144 	movi	r5,5
1010655c:	8089883a 	add	r4,r16,r2
10106560:	21400115 	stw	r5,4(r4)
10106564:	21400215 	stw	r5,8(r4)
10106568:	3080cd36 	bltu	r6,r2,101068a0 <_malloc_r+0x794>
1010656c:	00840474 	movhi	r2,4113
10106570:	10900004 	addi	r2,r2,16384
10106574:	11000017 	ldw	r4,0(r2)
10106578:	20c0012e 	bgeu	r4,r3,10106580 <_malloc_r+0x474>
1010657c:	10c00015 	stw	r3,0(r2)
10106580:	00840474 	movhi	r2,4113
10106584:	108fff04 	addi	r2,r2,16380
10106588:	11000017 	ldw	r4,0(r2)
1010658c:	9c000217 	ldw	r16,8(r19)
10106590:	20c0012e 	bgeu	r4,r3,10106598 <_malloc_r+0x48c>
10106594:	10c00015 	stw	r3,0(r2)
10106598:	80c00117 	ldw	r3,4(r16)
1010659c:	00bfff04 	movi	r2,-4
101065a0:	1886703a 	and	r3,r3,r2
101065a4:	1c45c83a 	sub	r2,r3,r17
101065a8:	1c400236 	bltu	r3,r17,101065b4 <_malloc_r+0x4a8>
101065ac:	00c003c4 	movi	r3,15
101065b0:	18800416 	blt	r3,r2,101065c4 <_malloc_r+0x4b8>
101065b4:	9009883a 	mov	r4,r18
101065b8:	010dfe40 	call	1010dfe4 <__malloc_unlock>
101065bc:	0005883a 	mov	r2,zero
101065c0:	003f7b06 	br	101063b0 <__alt_data_end+0xfffe63b0>
101065c4:	88c00054 	ori	r3,r17,1
101065c8:	80c00115 	stw	r3,4(r16)
101065cc:	8463883a 	add	r17,r16,r17
101065d0:	10800054 	ori	r2,r2,1
101065d4:	9c400215 	stw	r17,8(r19)
101065d8:	88800115 	stw	r2,4(r17)
101065dc:	9009883a 	mov	r4,r18
101065e0:	010dfe40 	call	1010dfe4 <__malloc_unlock>
101065e4:	80800204 	addi	r2,r16,8
101065e8:	003f7106 	br	101063b0 <__alt_data_end+0xfffe63b0>
101065ec:	00c00504 	movi	r3,20
101065f0:	18804a2e 	bgeu	r3,r2,1010671c <_malloc_r+0x610>
101065f4:	00c01504 	movi	r3,84
101065f8:	18806e36 	bltu	r3,r2,101067b4 <_malloc_r+0x6a8>
101065fc:	8804d33a 	srli	r2,r17,12
10106600:	12001bc4 	addi	r8,r2,111
10106604:	11c01b84 	addi	r7,r2,110
10106608:	4209883a 	add	r4,r8,r8
1010660c:	003edd06 	br	10106184 <__alt_data_end+0xfffe6184>
10106610:	3804d27a 	srli	r2,r7,9
10106614:	00c00104 	movi	r3,4
10106618:	1880442e 	bgeu	r3,r2,1010672c <_malloc_r+0x620>
1010661c:	00c00504 	movi	r3,20
10106620:	18808136 	bltu	r3,r2,10106828 <_malloc_r+0x71c>
10106624:	11401704 	addi	r5,r2,92
10106628:	10c016c4 	addi	r3,r2,91
1010662c:	294b883a 	add	r5,r5,r5
10106630:	294b883a 	add	r5,r5,r5
10106634:	294b883a 	add	r5,r5,r5
10106638:	994b883a 	add	r5,r19,r5
1010663c:	28800017 	ldw	r2,0(r5)
10106640:	01840474 	movhi	r6,4113
10106644:	297ffe04 	addi	r5,r5,-8
10106648:	31837504 	addi	r6,r6,3540
1010664c:	28806526 	beq	r5,r2,101067e4 <_malloc_r+0x6d8>
10106650:	01bfff04 	movi	r6,-4
10106654:	10c00117 	ldw	r3,4(r2)
10106658:	1986703a 	and	r3,r3,r6
1010665c:	38c0022e 	bgeu	r7,r3,10106668 <_malloc_r+0x55c>
10106660:	10800217 	ldw	r2,8(r2)
10106664:	28bffb1e 	bne	r5,r2,10106654 <__alt_data_end+0xfffe6654>
10106668:	11400317 	ldw	r5,12(r2)
1010666c:	98c00117 	ldw	r3,4(r19)
10106670:	81400315 	stw	r5,12(r16)
10106674:	80800215 	stw	r2,8(r16)
10106678:	2c000215 	stw	r16,8(r5)
1010667c:	14000315 	stw	r16,12(r2)
10106680:	003ef806 	br	10106264 <__alt_data_end+0xfffe6264>
10106684:	88c00054 	ori	r3,r17,1
10106688:	80c00115 	stw	r3,4(r16)
1010668c:	8463883a 	add	r17,r16,r17
10106690:	34400515 	stw	r17,20(r6)
10106694:	34400415 	stw	r17,16(r6)
10106698:	10c00054 	ori	r3,r2,1
1010669c:	8a000315 	stw	r8,12(r17)
101066a0:	8a000215 	stw	r8,8(r17)
101066a4:	88c00115 	stw	r3,4(r17)
101066a8:	88a3883a 	add	r17,r17,r2
101066ac:	88800015 	stw	r2,0(r17)
101066b0:	9009883a 	mov	r4,r18
101066b4:	010dfe40 	call	1010dfe4 <__malloc_unlock>
101066b8:	80800204 	addi	r2,r16,8
101066bc:	003f3c06 	br	101063b0 <__alt_data_end+0xfffe63b0>
101066c0:	30c00117 	ldw	r3,4(r6)
101066c4:	003ee706 	br	10106264 <__alt_data_end+0xfffe6264>
101066c8:	5ac00044 	addi	r11,r11,1
101066cc:	588000cc 	andi	r2,r11,3
101066d0:	31800204 	addi	r6,r6,8
101066d4:	103efd1e 	bne	r2,zero,101062cc <__alt_data_end+0xfffe62cc>
101066d8:	00002406 	br	1010676c <_malloc_r+0x660>
101066dc:	14000317 	ldw	r16,12(r2)
101066e0:	143f251e 	bne	r2,r16,10106378 <__alt_data_end+0xfffe6378>
101066e4:	21000084 	addi	r4,r4,2
101066e8:	003ebc06 	br	101061dc <__alt_data_end+0xfffe61dc>
101066ec:	8085883a 	add	r2,r16,r2
101066f0:	10c00117 	ldw	r3,4(r2)
101066f4:	81000317 	ldw	r4,12(r16)
101066f8:	81400217 	ldw	r5,8(r16)
101066fc:	18c00054 	ori	r3,r3,1
10106700:	10c00115 	stw	r3,4(r2)
10106704:	29000315 	stw	r4,12(r5)
10106708:	21400215 	stw	r5,8(r4)
1010670c:	9009883a 	mov	r4,r18
10106710:	010dfe40 	call	1010dfe4 <__malloc_unlock>
10106714:	80800204 	addi	r2,r16,8
10106718:	003f2506 	br	101063b0 <__alt_data_end+0xfffe63b0>
1010671c:	12001704 	addi	r8,r2,92
10106720:	11c016c4 	addi	r7,r2,91
10106724:	4209883a 	add	r4,r8,r8
10106728:	003e9606 	br	10106184 <__alt_data_end+0xfffe6184>
1010672c:	3804d1ba 	srli	r2,r7,6
10106730:	11400e44 	addi	r5,r2,57
10106734:	10c00e04 	addi	r3,r2,56
10106738:	294b883a 	add	r5,r5,r5
1010673c:	003fbc06 	br	10106630 <__alt_data_end+0xfffe6630>
10106740:	84ff5926 	beq	r16,r19,101064a8 <__alt_data_end+0xfffe64a8>
10106744:	00840474 	movhi	r2,4113
10106748:	10837504 	addi	r2,r2,3540
1010674c:	14000217 	ldw	r16,8(r2)
10106750:	00bfff04 	movi	r2,-4
10106754:	80c00117 	ldw	r3,4(r16)
10106758:	1886703a 	and	r3,r3,r2
1010675c:	003f9106 	br	101065a4 <__alt_data_end+0xfffe65a4>
10106760:	60800217 	ldw	r2,8(r12)
10106764:	213fffc4 	addi	r4,r4,-1
10106768:	1300651e 	bne	r2,r12,10106900 <_malloc_r+0x7f4>
1010676c:	208000cc 	andi	r2,r4,3
10106770:	633ffe04 	addi	r12,r12,-8
10106774:	103ffa1e 	bne	r2,zero,10106760 <__alt_data_end+0xfffe6760>
10106778:	98800117 	ldw	r2,4(r19)
1010677c:	0146303a 	nor	r3,zero,r5
10106780:	1884703a 	and	r2,r3,r2
10106784:	98800115 	stw	r2,4(r19)
10106788:	294b883a 	add	r5,r5,r5
1010678c:	117f2836 	bltu	r2,r5,10106430 <__alt_data_end+0xfffe6430>
10106790:	283f2726 	beq	r5,zero,10106430 <__alt_data_end+0xfffe6430>
10106794:	2886703a 	and	r3,r5,r2
10106798:	5809883a 	mov	r4,r11
1010679c:	183ec31e 	bne	r3,zero,101062ac <__alt_data_end+0xfffe62ac>
101067a0:	294b883a 	add	r5,r5,r5
101067a4:	2886703a 	and	r3,r5,r2
101067a8:	21000104 	addi	r4,r4,4
101067ac:	183ffc26 	beq	r3,zero,101067a0 <__alt_data_end+0xfffe67a0>
101067b0:	003ebe06 	br	101062ac <__alt_data_end+0xfffe62ac>
101067b4:	00c05504 	movi	r3,340
101067b8:	18801236 	bltu	r3,r2,10106804 <_malloc_r+0x6f8>
101067bc:	8804d3fa 	srli	r2,r17,15
101067c0:	12001e04 	addi	r8,r2,120
101067c4:	11c01dc4 	addi	r7,r2,119
101067c8:	4209883a 	add	r4,r8,r8
101067cc:	003e6d06 	br	10106184 <__alt_data_end+0xfffe6184>
101067d0:	00c40004 	movi	r3,4096
101067d4:	003f4606 	br	101064f0 <__alt_data_end+0xfffe64f0>
101067d8:	00800044 	movi	r2,1
101067dc:	a0800115 	stw	r2,4(r20)
101067e0:	003f7406 	br	101065b4 <__alt_data_end+0xfffe65b4>
101067e4:	1805d0ba 	srai	r2,r3,2
101067e8:	01c00044 	movi	r7,1
101067ec:	30c00117 	ldw	r3,4(r6)
101067f0:	388e983a 	sll	r7,r7,r2
101067f4:	2805883a 	mov	r2,r5
101067f8:	38c6b03a 	or	r3,r7,r3
101067fc:	30c00115 	stw	r3,4(r6)
10106800:	003f9b06 	br	10106670 <__alt_data_end+0xfffe6670>
10106804:	00c15504 	movi	r3,1364
10106808:	18801a36 	bltu	r3,r2,10106874 <_malloc_r+0x768>
1010680c:	8804d4ba 	srli	r2,r17,18
10106810:	12001f44 	addi	r8,r2,125
10106814:	11c01f04 	addi	r7,r2,124
10106818:	4209883a 	add	r4,r8,r8
1010681c:	003e5906 	br	10106184 <__alt_data_end+0xfffe6184>
10106820:	ad400404 	addi	r21,r21,16
10106824:	003f1706 	br	10106484 <__alt_data_end+0xfffe6484>
10106828:	00c01504 	movi	r3,84
1010682c:	18802336 	bltu	r3,r2,101068bc <_malloc_r+0x7b0>
10106830:	3804d33a 	srli	r2,r7,12
10106834:	11401bc4 	addi	r5,r2,111
10106838:	10c01b84 	addi	r3,r2,110
1010683c:	294b883a 	add	r5,r5,r5
10106840:	003f7b06 	br	10106630 <__alt_data_end+0xfffe6630>
10106844:	9c000217 	ldw	r16,8(r19)
10106848:	00bfff04 	movi	r2,-4
1010684c:	80c00117 	ldw	r3,4(r16)
10106850:	1886703a 	and	r3,r3,r2
10106854:	003f5306 	br	101065a4 <__alt_data_end+0xfffe65a4>
10106858:	3083ffcc 	andi	r2,r6,4095
1010685c:	103f181e 	bne	r2,zero,101064c0 <__alt_data_end+0xfffe64c0>
10106860:	99000217 	ldw	r4,8(r19)
10106864:	b545883a 	add	r2,r22,r21
10106868:	10800054 	ori	r2,r2,1
1010686c:	20800115 	stw	r2,4(r4)
10106870:	003f3e06 	br	1010656c <__alt_data_end+0xfffe656c>
10106874:	01003f84 	movi	r4,254
10106878:	02001fc4 	movi	r8,127
1010687c:	01c01f84 	movi	r7,126
10106880:	003e4006 	br	10106184 <__alt_data_end+0xfffe6184>
10106884:	00840474 	movhi	r2,4113
10106888:	10890604 	addi	r2,r2,9240
1010688c:	15000015 	stw	r20,0(r2)
10106890:	003f1106 	br	101064d8 <__alt_data_end+0xfffe64d8>
10106894:	00800044 	movi	r2,1
10106898:	002b883a 	mov	r21,zero
1010689c:	003f1f06 	br	1010651c <__alt_data_end+0xfffe651c>
101068a0:	81400204 	addi	r5,r16,8
101068a4:	9009883a 	mov	r4,r18
101068a8:	01055140 	call	10105514 <_free_r>
101068ac:	00840474 	movhi	r2,4113
101068b0:	10900a04 	addi	r2,r2,16424
101068b4:	10c00017 	ldw	r3,0(r2)
101068b8:	003f2c06 	br	1010656c <__alt_data_end+0xfffe656c>
101068bc:	00c05504 	movi	r3,340
101068c0:	18800536 	bltu	r3,r2,101068d8 <_malloc_r+0x7cc>
101068c4:	3804d3fa 	srli	r2,r7,15
101068c8:	11401e04 	addi	r5,r2,120
101068cc:	10c01dc4 	addi	r3,r2,119
101068d0:	294b883a 	add	r5,r5,r5
101068d4:	003f5606 	br	10106630 <__alt_data_end+0xfffe6630>
101068d8:	00c15504 	movi	r3,1364
101068dc:	18800536 	bltu	r3,r2,101068f4 <_malloc_r+0x7e8>
101068e0:	3804d4ba 	srli	r2,r7,18
101068e4:	11401f44 	addi	r5,r2,125
101068e8:	10c01f04 	addi	r3,r2,124
101068ec:	294b883a 	add	r5,r5,r5
101068f0:	003f4f06 	br	10106630 <__alt_data_end+0xfffe6630>
101068f4:	01403f84 	movi	r5,254
101068f8:	00c01f84 	movi	r3,126
101068fc:	003f4c06 	br	10106630 <__alt_data_end+0xfffe6630>
10106900:	98800117 	ldw	r2,4(r19)
10106904:	003fa006 	br	10106788 <__alt_data_end+0xfffe6788>
10106908:	8808d0fa 	srli	r4,r17,3
1010690c:	20800044 	addi	r2,r4,1
10106910:	1085883a 	add	r2,r2,r2
10106914:	003e9006 	br	10106358 <__alt_data_end+0xfffe6358>

10106918 <memchr>:
10106918:	208000cc 	andi	r2,r4,3
1010691c:	280f883a 	mov	r7,r5
10106920:	10003426 	beq	r2,zero,101069f4 <memchr+0xdc>
10106924:	30bfffc4 	addi	r2,r6,-1
10106928:	30001a26 	beq	r6,zero,10106994 <memchr+0x7c>
1010692c:	20c00003 	ldbu	r3,0(r4)
10106930:	29803fcc 	andi	r6,r5,255
10106934:	30c0051e 	bne	r6,r3,1010694c <memchr+0x34>
10106938:	00001806 	br	1010699c <memchr+0x84>
1010693c:	10001526 	beq	r2,zero,10106994 <memchr+0x7c>
10106940:	20c00003 	ldbu	r3,0(r4)
10106944:	10bfffc4 	addi	r2,r2,-1
10106948:	30c01426 	beq	r6,r3,1010699c <memchr+0x84>
1010694c:	21000044 	addi	r4,r4,1
10106950:	20c000cc 	andi	r3,r4,3
10106954:	183ff91e 	bne	r3,zero,1010693c <__alt_data_end+0xfffe693c>
10106958:	020000c4 	movi	r8,3
1010695c:	40801136 	bltu	r8,r2,101069a4 <memchr+0x8c>
10106960:	10000c26 	beq	r2,zero,10106994 <memchr+0x7c>
10106964:	20c00003 	ldbu	r3,0(r4)
10106968:	29403fcc 	andi	r5,r5,255
1010696c:	28c00b26 	beq	r5,r3,1010699c <memchr+0x84>
10106970:	20c00044 	addi	r3,r4,1
10106974:	39803fcc 	andi	r6,r7,255
10106978:	2089883a 	add	r4,r4,r2
1010697c:	00000306 	br	1010698c <memchr+0x74>
10106980:	18c00044 	addi	r3,r3,1
10106984:	197fffc3 	ldbu	r5,-1(r3)
10106988:	31400526 	beq	r6,r5,101069a0 <memchr+0x88>
1010698c:	1805883a 	mov	r2,r3
10106990:	20fffb1e 	bne	r4,r3,10106980 <__alt_data_end+0xfffe6980>
10106994:	0005883a 	mov	r2,zero
10106998:	f800283a 	ret
1010699c:	2005883a 	mov	r2,r4
101069a0:	f800283a 	ret
101069a4:	28c03fcc 	andi	r3,r5,255
101069a8:	1812923a 	slli	r9,r3,8
101069ac:	02ffbff4 	movhi	r11,65279
101069b0:	02a02074 	movhi	r10,32897
101069b4:	48d2b03a 	or	r9,r9,r3
101069b8:	4806943a 	slli	r3,r9,16
101069bc:	5affbfc4 	addi	r11,r11,-257
101069c0:	52a02004 	addi	r10,r10,-32640
101069c4:	48d2b03a 	or	r9,r9,r3
101069c8:	20c00017 	ldw	r3,0(r4)
101069cc:	48c6f03a 	xor	r3,r9,r3
101069d0:	1acd883a 	add	r6,r3,r11
101069d4:	00c6303a 	nor	r3,zero,r3
101069d8:	30c6703a 	and	r3,r6,r3
101069dc:	1a86703a 	and	r3,r3,r10
101069e0:	183fe01e 	bne	r3,zero,10106964 <__alt_data_end+0xfffe6964>
101069e4:	10bfff04 	addi	r2,r2,-4
101069e8:	21000104 	addi	r4,r4,4
101069ec:	40bff636 	bltu	r8,r2,101069c8 <__alt_data_end+0xfffe69c8>
101069f0:	003fdb06 	br	10106960 <__alt_data_end+0xfffe6960>
101069f4:	3005883a 	mov	r2,r6
101069f8:	003fd706 	br	10106958 <__alt_data_end+0xfffe6958>

101069fc <memmove>:
101069fc:	2005883a 	mov	r2,r4
10106a00:	29000b2e 	bgeu	r5,r4,10106a30 <memmove+0x34>
10106a04:	298f883a 	add	r7,r5,r6
10106a08:	21c0092e 	bgeu	r4,r7,10106a30 <memmove+0x34>
10106a0c:	2187883a 	add	r3,r4,r6
10106a10:	198bc83a 	sub	r5,r3,r6
10106a14:	30004826 	beq	r6,zero,10106b38 <memmove+0x13c>
10106a18:	39ffffc4 	addi	r7,r7,-1
10106a1c:	39000003 	ldbu	r4,0(r7)
10106a20:	18ffffc4 	addi	r3,r3,-1
10106a24:	19000005 	stb	r4,0(r3)
10106a28:	28fffb1e 	bne	r5,r3,10106a18 <__alt_data_end+0xfffe6a18>
10106a2c:	f800283a 	ret
10106a30:	00c003c4 	movi	r3,15
10106a34:	1980412e 	bgeu	r3,r6,10106b3c <memmove+0x140>
10106a38:	2886b03a 	or	r3,r5,r2
10106a3c:	18c000cc 	andi	r3,r3,3
10106a40:	1800401e 	bne	r3,zero,10106b44 <memmove+0x148>
10106a44:	33fffc04 	addi	r15,r6,-16
10106a48:	781ed13a 	srli	r15,r15,4
10106a4c:	28c00104 	addi	r3,r5,4
10106a50:	13400104 	addi	r13,r2,4
10106a54:	781c913a 	slli	r14,r15,4
10106a58:	2b000204 	addi	r12,r5,8
10106a5c:	12c00204 	addi	r11,r2,8
10106a60:	73800504 	addi	r14,r14,20
10106a64:	2a800304 	addi	r10,r5,12
10106a68:	12400304 	addi	r9,r2,12
10106a6c:	2b9d883a 	add	r14,r5,r14
10106a70:	2811883a 	mov	r8,r5
10106a74:	100f883a 	mov	r7,r2
10106a78:	41000017 	ldw	r4,0(r8)
10106a7c:	39c00404 	addi	r7,r7,16
10106a80:	18c00404 	addi	r3,r3,16
10106a84:	393ffc15 	stw	r4,-16(r7)
10106a88:	193ffc17 	ldw	r4,-16(r3)
10106a8c:	6b400404 	addi	r13,r13,16
10106a90:	5ac00404 	addi	r11,r11,16
10106a94:	693ffc15 	stw	r4,-16(r13)
10106a98:	61000017 	ldw	r4,0(r12)
10106a9c:	4a400404 	addi	r9,r9,16
10106aa0:	42000404 	addi	r8,r8,16
10106aa4:	593ffc15 	stw	r4,-16(r11)
10106aa8:	51000017 	ldw	r4,0(r10)
10106aac:	63000404 	addi	r12,r12,16
10106ab0:	52800404 	addi	r10,r10,16
10106ab4:	493ffc15 	stw	r4,-16(r9)
10106ab8:	1bbfef1e 	bne	r3,r14,10106a78 <__alt_data_end+0xfffe6a78>
10106abc:	79000044 	addi	r4,r15,1
10106ac0:	2008913a 	slli	r4,r4,4
10106ac4:	328003cc 	andi	r10,r6,15
10106ac8:	02c000c4 	movi	r11,3
10106acc:	1107883a 	add	r3,r2,r4
10106ad0:	290b883a 	add	r5,r5,r4
10106ad4:	5a801e2e 	bgeu	r11,r10,10106b50 <memmove+0x154>
10106ad8:	1813883a 	mov	r9,r3
10106adc:	2811883a 	mov	r8,r5
10106ae0:	500f883a 	mov	r7,r10
10106ae4:	41000017 	ldw	r4,0(r8)
10106ae8:	4a400104 	addi	r9,r9,4
10106aec:	39ffff04 	addi	r7,r7,-4
10106af0:	493fff15 	stw	r4,-4(r9)
10106af4:	42000104 	addi	r8,r8,4
10106af8:	59fffa36 	bltu	r11,r7,10106ae4 <__alt_data_end+0xfffe6ae4>
10106afc:	513fff04 	addi	r4,r10,-4
10106b00:	2008d0ba 	srli	r4,r4,2
10106b04:	318000cc 	andi	r6,r6,3
10106b08:	21000044 	addi	r4,r4,1
10106b0c:	2109883a 	add	r4,r4,r4
10106b10:	2109883a 	add	r4,r4,r4
10106b14:	1907883a 	add	r3,r3,r4
10106b18:	290b883a 	add	r5,r5,r4
10106b1c:	30000b26 	beq	r6,zero,10106b4c <memmove+0x150>
10106b20:	198d883a 	add	r6,r3,r6
10106b24:	29c00003 	ldbu	r7,0(r5)
10106b28:	18c00044 	addi	r3,r3,1
10106b2c:	29400044 	addi	r5,r5,1
10106b30:	19ffffc5 	stb	r7,-1(r3)
10106b34:	19bffb1e 	bne	r3,r6,10106b24 <__alt_data_end+0xfffe6b24>
10106b38:	f800283a 	ret
10106b3c:	1007883a 	mov	r3,r2
10106b40:	003ff606 	br	10106b1c <__alt_data_end+0xfffe6b1c>
10106b44:	1007883a 	mov	r3,r2
10106b48:	003ff506 	br	10106b20 <__alt_data_end+0xfffe6b20>
10106b4c:	f800283a 	ret
10106b50:	500d883a 	mov	r6,r10
10106b54:	003ff106 	br	10106b1c <__alt_data_end+0xfffe6b1c>

10106b58 <memset>:
10106b58:	20c000cc 	andi	r3,r4,3
10106b5c:	2005883a 	mov	r2,r4
10106b60:	18004426 	beq	r3,zero,10106c74 <memset+0x11c>
10106b64:	31ffffc4 	addi	r7,r6,-1
10106b68:	30004026 	beq	r6,zero,10106c6c <memset+0x114>
10106b6c:	2813883a 	mov	r9,r5
10106b70:	200d883a 	mov	r6,r4
10106b74:	2007883a 	mov	r3,r4
10106b78:	00000406 	br	10106b8c <memset+0x34>
10106b7c:	3a3fffc4 	addi	r8,r7,-1
10106b80:	31800044 	addi	r6,r6,1
10106b84:	38003926 	beq	r7,zero,10106c6c <memset+0x114>
10106b88:	400f883a 	mov	r7,r8
10106b8c:	18c00044 	addi	r3,r3,1
10106b90:	32400005 	stb	r9,0(r6)
10106b94:	1a0000cc 	andi	r8,r3,3
10106b98:	403ff81e 	bne	r8,zero,10106b7c <__alt_data_end+0xfffe6b7c>
10106b9c:	010000c4 	movi	r4,3
10106ba0:	21c02d2e 	bgeu	r4,r7,10106c58 <memset+0x100>
10106ba4:	29003fcc 	andi	r4,r5,255
10106ba8:	200c923a 	slli	r6,r4,8
10106bac:	3108b03a 	or	r4,r6,r4
10106bb0:	200c943a 	slli	r6,r4,16
10106bb4:	218cb03a 	or	r6,r4,r6
10106bb8:	010003c4 	movi	r4,15
10106bbc:	21c0182e 	bgeu	r4,r7,10106c20 <memset+0xc8>
10106bc0:	3b3ffc04 	addi	r12,r7,-16
10106bc4:	6018d13a 	srli	r12,r12,4
10106bc8:	1a000104 	addi	r8,r3,4
10106bcc:	1ac00204 	addi	r11,r3,8
10106bd0:	6008913a 	slli	r4,r12,4
10106bd4:	1a800304 	addi	r10,r3,12
10106bd8:	1813883a 	mov	r9,r3
10106bdc:	21000504 	addi	r4,r4,20
10106be0:	1909883a 	add	r4,r3,r4
10106be4:	49800015 	stw	r6,0(r9)
10106be8:	41800015 	stw	r6,0(r8)
10106bec:	59800015 	stw	r6,0(r11)
10106bf0:	51800015 	stw	r6,0(r10)
10106bf4:	42000404 	addi	r8,r8,16
10106bf8:	4a400404 	addi	r9,r9,16
10106bfc:	5ac00404 	addi	r11,r11,16
10106c00:	52800404 	addi	r10,r10,16
10106c04:	413ff71e 	bne	r8,r4,10106be4 <__alt_data_end+0xfffe6be4>
10106c08:	63000044 	addi	r12,r12,1
10106c0c:	6018913a 	slli	r12,r12,4
10106c10:	39c003cc 	andi	r7,r7,15
10106c14:	010000c4 	movi	r4,3
10106c18:	1b07883a 	add	r3,r3,r12
10106c1c:	21c00e2e 	bgeu	r4,r7,10106c58 <memset+0x100>
10106c20:	1813883a 	mov	r9,r3
10106c24:	3811883a 	mov	r8,r7
10106c28:	010000c4 	movi	r4,3
10106c2c:	49800015 	stw	r6,0(r9)
10106c30:	423fff04 	addi	r8,r8,-4
10106c34:	4a400104 	addi	r9,r9,4
10106c38:	223ffc36 	bltu	r4,r8,10106c2c <__alt_data_end+0xfffe6c2c>
10106c3c:	393fff04 	addi	r4,r7,-4
10106c40:	2008d0ba 	srli	r4,r4,2
10106c44:	39c000cc 	andi	r7,r7,3
10106c48:	21000044 	addi	r4,r4,1
10106c4c:	2109883a 	add	r4,r4,r4
10106c50:	2109883a 	add	r4,r4,r4
10106c54:	1907883a 	add	r3,r3,r4
10106c58:	38000526 	beq	r7,zero,10106c70 <memset+0x118>
10106c5c:	19cf883a 	add	r7,r3,r7
10106c60:	19400005 	stb	r5,0(r3)
10106c64:	18c00044 	addi	r3,r3,1
10106c68:	38fffd1e 	bne	r7,r3,10106c60 <__alt_data_end+0xfffe6c60>
10106c6c:	f800283a 	ret
10106c70:	f800283a 	ret
10106c74:	2007883a 	mov	r3,r4
10106c78:	300f883a 	mov	r7,r6
10106c7c:	003fc706 	br	10106b9c <__alt_data_end+0xfffe6b9c>

10106c80 <_Balloc>:
10106c80:	20801317 	ldw	r2,76(r4)
10106c84:	defffc04 	addi	sp,sp,-16
10106c88:	dc400115 	stw	r17,4(sp)
10106c8c:	dc000015 	stw	r16,0(sp)
10106c90:	dfc00315 	stw	ra,12(sp)
10106c94:	dc800215 	stw	r18,8(sp)
10106c98:	2023883a 	mov	r17,r4
10106c9c:	2821883a 	mov	r16,r5
10106ca0:	10000f26 	beq	r2,zero,10106ce0 <_Balloc+0x60>
10106ca4:	8407883a 	add	r3,r16,r16
10106ca8:	18c7883a 	add	r3,r3,r3
10106cac:	10c7883a 	add	r3,r2,r3
10106cb0:	18800017 	ldw	r2,0(r3)
10106cb4:	10001126 	beq	r2,zero,10106cfc <_Balloc+0x7c>
10106cb8:	11000017 	ldw	r4,0(r2)
10106cbc:	19000015 	stw	r4,0(r3)
10106cc0:	10000415 	stw	zero,16(r2)
10106cc4:	10000315 	stw	zero,12(r2)
10106cc8:	dfc00317 	ldw	ra,12(sp)
10106ccc:	dc800217 	ldw	r18,8(sp)
10106cd0:	dc400117 	ldw	r17,4(sp)
10106cd4:	dc000017 	ldw	r16,0(sp)
10106cd8:	dec00404 	addi	sp,sp,16
10106cdc:	f800283a 	ret
10106ce0:	01800844 	movi	r6,33
10106ce4:	01400104 	movi	r5,4
10106ce8:	0109d280 	call	10109d28 <_calloc_r>
10106cec:	88801315 	stw	r2,76(r17)
10106cf0:	103fec1e 	bne	r2,zero,10106ca4 <__alt_data_end+0xfffe6ca4>
10106cf4:	0005883a 	mov	r2,zero
10106cf8:	003ff306 	br	10106cc8 <__alt_data_end+0xfffe6cc8>
10106cfc:	01400044 	movi	r5,1
10106d00:	2c24983a 	sll	r18,r5,r16
10106d04:	8809883a 	mov	r4,r17
10106d08:	91800144 	addi	r6,r18,5
10106d0c:	318d883a 	add	r6,r6,r6
10106d10:	318d883a 	add	r6,r6,r6
10106d14:	0109d280 	call	10109d28 <_calloc_r>
10106d18:	103ff626 	beq	r2,zero,10106cf4 <__alt_data_end+0xfffe6cf4>
10106d1c:	14000115 	stw	r16,4(r2)
10106d20:	14800215 	stw	r18,8(r2)
10106d24:	003fe606 	br	10106cc0 <__alt_data_end+0xfffe6cc0>

10106d28 <_Bfree>:
10106d28:	28000826 	beq	r5,zero,10106d4c <_Bfree+0x24>
10106d2c:	28c00117 	ldw	r3,4(r5)
10106d30:	20801317 	ldw	r2,76(r4)
10106d34:	18c7883a 	add	r3,r3,r3
10106d38:	18c7883a 	add	r3,r3,r3
10106d3c:	10c5883a 	add	r2,r2,r3
10106d40:	10c00017 	ldw	r3,0(r2)
10106d44:	28c00015 	stw	r3,0(r5)
10106d48:	11400015 	stw	r5,0(r2)
10106d4c:	f800283a 	ret

10106d50 <__multadd>:
10106d50:	defff704 	addi	sp,sp,-36
10106d54:	dc800215 	stw	r18,8(sp)
10106d58:	2c800417 	ldw	r18,16(r5)
10106d5c:	dd800615 	stw	r22,24(sp)
10106d60:	dd400515 	stw	r21,20(sp)
10106d64:	dd000415 	stw	r20,16(sp)
10106d68:	dcc00315 	stw	r19,12(sp)
10106d6c:	dc400115 	stw	r17,4(sp)
10106d70:	dc000015 	stw	r16,0(sp)
10106d74:	dfc00815 	stw	ra,32(sp)
10106d78:	ddc00715 	stw	r23,28(sp)
10106d7c:	2827883a 	mov	r19,r5
10106d80:	2029883a 	mov	r20,r4
10106d84:	3023883a 	mov	r17,r6
10106d88:	3821883a 	mov	r16,r7
10106d8c:	2d400504 	addi	r21,r5,20
10106d90:	002d883a 	mov	r22,zero
10106d94:	adc00017 	ldw	r23,0(r21)
10106d98:	880b883a 	mov	r5,r17
10106d9c:	ad400104 	addi	r21,r21,4
10106da0:	b93fffcc 	andi	r4,r23,65535
10106da4:	0100c980 	call	10100c98 <__mulsi3>
10106da8:	b808d43a 	srli	r4,r23,16
10106dac:	880b883a 	mov	r5,r17
10106db0:	1421883a 	add	r16,r2,r16
10106db4:	0100c980 	call	10100c98 <__mulsi3>
10106db8:	800ed43a 	srli	r7,r16,16
10106dbc:	80ffffcc 	andi	r3,r16,65535
10106dc0:	b5800044 	addi	r22,r22,1
10106dc4:	11c5883a 	add	r2,r2,r7
10106dc8:	100e943a 	slli	r7,r2,16
10106dcc:	1020d43a 	srli	r16,r2,16
10106dd0:	38c7883a 	add	r3,r7,r3
10106dd4:	a8ffff15 	stw	r3,-4(r21)
10106dd8:	b4bfee16 	blt	r22,r18,10106d94 <__alt_data_end+0xfffe6d94>
10106ddc:	80000926 	beq	r16,zero,10106e04 <__multadd+0xb4>
10106de0:	98800217 	ldw	r2,8(r19)
10106de4:	9080130e 	bge	r18,r2,10106e34 <__multadd+0xe4>
10106de8:	90800144 	addi	r2,r18,5
10106dec:	1085883a 	add	r2,r2,r2
10106df0:	1085883a 	add	r2,r2,r2
10106df4:	9885883a 	add	r2,r19,r2
10106df8:	14000015 	stw	r16,0(r2)
10106dfc:	94800044 	addi	r18,r18,1
10106e00:	9c800415 	stw	r18,16(r19)
10106e04:	9805883a 	mov	r2,r19
10106e08:	dfc00817 	ldw	ra,32(sp)
10106e0c:	ddc00717 	ldw	r23,28(sp)
10106e10:	dd800617 	ldw	r22,24(sp)
10106e14:	dd400517 	ldw	r21,20(sp)
10106e18:	dd000417 	ldw	r20,16(sp)
10106e1c:	dcc00317 	ldw	r19,12(sp)
10106e20:	dc800217 	ldw	r18,8(sp)
10106e24:	dc400117 	ldw	r17,4(sp)
10106e28:	dc000017 	ldw	r16,0(sp)
10106e2c:	dec00904 	addi	sp,sp,36
10106e30:	f800283a 	ret
10106e34:	99400117 	ldw	r5,4(r19)
10106e38:	a009883a 	mov	r4,r20
10106e3c:	29400044 	addi	r5,r5,1
10106e40:	0106c800 	call	10106c80 <_Balloc>
10106e44:	99800417 	ldw	r6,16(r19)
10106e48:	99400304 	addi	r5,r19,12
10106e4c:	11000304 	addi	r4,r2,12
10106e50:	31800084 	addi	r6,r6,2
10106e54:	318d883a 	add	r6,r6,r6
10106e58:	318d883a 	add	r6,r6,r6
10106e5c:	1023883a 	mov	r17,r2
10106e60:	0100cc00 	call	10100cc0 <memcpy>
10106e64:	98000a26 	beq	r19,zero,10106e90 <__multadd+0x140>
10106e68:	98c00117 	ldw	r3,4(r19)
10106e6c:	a0801317 	ldw	r2,76(r20)
10106e70:	18c7883a 	add	r3,r3,r3
10106e74:	18c7883a 	add	r3,r3,r3
10106e78:	10c5883a 	add	r2,r2,r3
10106e7c:	10c00017 	ldw	r3,0(r2)
10106e80:	98c00015 	stw	r3,0(r19)
10106e84:	14c00015 	stw	r19,0(r2)
10106e88:	8827883a 	mov	r19,r17
10106e8c:	003fd606 	br	10106de8 <__alt_data_end+0xfffe6de8>
10106e90:	8827883a 	mov	r19,r17
10106e94:	003fd406 	br	10106de8 <__alt_data_end+0xfffe6de8>

10106e98 <__s2b>:
10106e98:	defff904 	addi	sp,sp,-28
10106e9c:	dc400115 	stw	r17,4(sp)
10106ea0:	dc000015 	stw	r16,0(sp)
10106ea4:	2023883a 	mov	r17,r4
10106ea8:	2821883a 	mov	r16,r5
10106eac:	39000204 	addi	r4,r7,8
10106eb0:	01400244 	movi	r5,9
10106eb4:	dcc00315 	stw	r19,12(sp)
10106eb8:	dc800215 	stw	r18,8(sp)
10106ebc:	dfc00615 	stw	ra,24(sp)
10106ec0:	dd400515 	stw	r21,20(sp)
10106ec4:	dd000415 	stw	r20,16(sp)
10106ec8:	3825883a 	mov	r18,r7
10106ecc:	3027883a 	mov	r19,r6
10106ed0:	0100ae40 	call	10100ae4 <__divsi3>
10106ed4:	00c00044 	movi	r3,1
10106ed8:	000b883a 	mov	r5,zero
10106edc:	1880030e 	bge	r3,r2,10106eec <__s2b+0x54>
10106ee0:	18c7883a 	add	r3,r3,r3
10106ee4:	29400044 	addi	r5,r5,1
10106ee8:	18bffd16 	blt	r3,r2,10106ee0 <__alt_data_end+0xfffe6ee0>
10106eec:	8809883a 	mov	r4,r17
10106ef0:	0106c800 	call	10106c80 <_Balloc>
10106ef4:	d8c00717 	ldw	r3,28(sp)
10106ef8:	10c00515 	stw	r3,20(r2)
10106efc:	00c00044 	movi	r3,1
10106f00:	10c00415 	stw	r3,16(r2)
10106f04:	00c00244 	movi	r3,9
10106f08:	1cc0210e 	bge	r3,r19,10106f90 <__s2b+0xf8>
10106f0c:	80eb883a 	add	r21,r16,r3
10106f10:	a829883a 	mov	r20,r21
10106f14:	84e1883a 	add	r16,r16,r19
10106f18:	a1c00007 	ldb	r7,0(r20)
10106f1c:	01800284 	movi	r6,10
10106f20:	a5000044 	addi	r20,r20,1
10106f24:	100b883a 	mov	r5,r2
10106f28:	39fff404 	addi	r7,r7,-48
10106f2c:	8809883a 	mov	r4,r17
10106f30:	0106d500 	call	10106d50 <__multadd>
10106f34:	a43ff81e 	bne	r20,r16,10106f18 <__alt_data_end+0xfffe6f18>
10106f38:	ace1883a 	add	r16,r21,r19
10106f3c:	843ffe04 	addi	r16,r16,-8
10106f40:	9c800a0e 	bge	r19,r18,10106f6c <__s2b+0xd4>
10106f44:	94e5c83a 	sub	r18,r18,r19
10106f48:	84a5883a 	add	r18,r16,r18
10106f4c:	81c00007 	ldb	r7,0(r16)
10106f50:	01800284 	movi	r6,10
10106f54:	84000044 	addi	r16,r16,1
10106f58:	100b883a 	mov	r5,r2
10106f5c:	39fff404 	addi	r7,r7,-48
10106f60:	8809883a 	mov	r4,r17
10106f64:	0106d500 	call	10106d50 <__multadd>
10106f68:	84bff81e 	bne	r16,r18,10106f4c <__alt_data_end+0xfffe6f4c>
10106f6c:	dfc00617 	ldw	ra,24(sp)
10106f70:	dd400517 	ldw	r21,20(sp)
10106f74:	dd000417 	ldw	r20,16(sp)
10106f78:	dcc00317 	ldw	r19,12(sp)
10106f7c:	dc800217 	ldw	r18,8(sp)
10106f80:	dc400117 	ldw	r17,4(sp)
10106f84:	dc000017 	ldw	r16,0(sp)
10106f88:	dec00704 	addi	sp,sp,28
10106f8c:	f800283a 	ret
10106f90:	84000284 	addi	r16,r16,10
10106f94:	1827883a 	mov	r19,r3
10106f98:	003fe906 	br	10106f40 <__alt_data_end+0xfffe6f40>

10106f9c <__hi0bits>:
10106f9c:	20bfffec 	andhi	r2,r4,65535
10106fa0:	1000141e 	bne	r2,zero,10106ff4 <__hi0bits+0x58>
10106fa4:	2008943a 	slli	r4,r4,16
10106fa8:	00800404 	movi	r2,16
10106fac:	20ffc02c 	andhi	r3,r4,65280
10106fb0:	1800021e 	bne	r3,zero,10106fbc <__hi0bits+0x20>
10106fb4:	2008923a 	slli	r4,r4,8
10106fb8:	10800204 	addi	r2,r2,8
10106fbc:	20fc002c 	andhi	r3,r4,61440
10106fc0:	1800021e 	bne	r3,zero,10106fcc <__hi0bits+0x30>
10106fc4:	2008913a 	slli	r4,r4,4
10106fc8:	10800104 	addi	r2,r2,4
10106fcc:	20f0002c 	andhi	r3,r4,49152
10106fd0:	1800031e 	bne	r3,zero,10106fe0 <__hi0bits+0x44>
10106fd4:	2109883a 	add	r4,r4,r4
10106fd8:	10800084 	addi	r2,r2,2
10106fdc:	2109883a 	add	r4,r4,r4
10106fe0:	20000316 	blt	r4,zero,10106ff0 <__hi0bits+0x54>
10106fe4:	2110002c 	andhi	r4,r4,16384
10106fe8:	2000041e 	bne	r4,zero,10106ffc <__hi0bits+0x60>
10106fec:	00800804 	movi	r2,32
10106ff0:	f800283a 	ret
10106ff4:	0005883a 	mov	r2,zero
10106ff8:	003fec06 	br	10106fac <__alt_data_end+0xfffe6fac>
10106ffc:	10800044 	addi	r2,r2,1
10107000:	f800283a 	ret

10107004 <__lo0bits>:
10107004:	20c00017 	ldw	r3,0(r4)
10107008:	188001cc 	andi	r2,r3,7
1010700c:	10000826 	beq	r2,zero,10107030 <__lo0bits+0x2c>
10107010:	1880004c 	andi	r2,r3,1
10107014:	1000211e 	bne	r2,zero,1010709c <__lo0bits+0x98>
10107018:	1880008c 	andi	r2,r3,2
1010701c:	1000211e 	bne	r2,zero,101070a4 <__lo0bits+0xa0>
10107020:	1806d0ba 	srli	r3,r3,2
10107024:	00800084 	movi	r2,2
10107028:	20c00015 	stw	r3,0(r4)
1010702c:	f800283a 	ret
10107030:	18bfffcc 	andi	r2,r3,65535
10107034:	10001326 	beq	r2,zero,10107084 <__lo0bits+0x80>
10107038:	0005883a 	mov	r2,zero
1010703c:	19403fcc 	andi	r5,r3,255
10107040:	2800021e 	bne	r5,zero,1010704c <__lo0bits+0x48>
10107044:	1806d23a 	srli	r3,r3,8
10107048:	10800204 	addi	r2,r2,8
1010704c:	194003cc 	andi	r5,r3,15
10107050:	2800021e 	bne	r5,zero,1010705c <__lo0bits+0x58>
10107054:	1806d13a 	srli	r3,r3,4
10107058:	10800104 	addi	r2,r2,4
1010705c:	194000cc 	andi	r5,r3,3
10107060:	2800021e 	bne	r5,zero,1010706c <__lo0bits+0x68>
10107064:	1806d0ba 	srli	r3,r3,2
10107068:	10800084 	addi	r2,r2,2
1010706c:	1940004c 	andi	r5,r3,1
10107070:	2800081e 	bne	r5,zero,10107094 <__lo0bits+0x90>
10107074:	1806d07a 	srli	r3,r3,1
10107078:	1800051e 	bne	r3,zero,10107090 <__lo0bits+0x8c>
1010707c:	00800804 	movi	r2,32
10107080:	f800283a 	ret
10107084:	1806d43a 	srli	r3,r3,16
10107088:	00800404 	movi	r2,16
1010708c:	003feb06 	br	1010703c <__alt_data_end+0xfffe703c>
10107090:	10800044 	addi	r2,r2,1
10107094:	20c00015 	stw	r3,0(r4)
10107098:	f800283a 	ret
1010709c:	0005883a 	mov	r2,zero
101070a0:	f800283a 	ret
101070a4:	1806d07a 	srli	r3,r3,1
101070a8:	00800044 	movi	r2,1
101070ac:	20c00015 	stw	r3,0(r4)
101070b0:	f800283a 	ret

101070b4 <__i2b>:
101070b4:	defffd04 	addi	sp,sp,-12
101070b8:	dc000015 	stw	r16,0(sp)
101070bc:	04000044 	movi	r16,1
101070c0:	dc400115 	stw	r17,4(sp)
101070c4:	2823883a 	mov	r17,r5
101070c8:	800b883a 	mov	r5,r16
101070cc:	dfc00215 	stw	ra,8(sp)
101070d0:	0106c800 	call	10106c80 <_Balloc>
101070d4:	14400515 	stw	r17,20(r2)
101070d8:	14000415 	stw	r16,16(r2)
101070dc:	dfc00217 	ldw	ra,8(sp)
101070e0:	dc400117 	ldw	r17,4(sp)
101070e4:	dc000017 	ldw	r16,0(sp)
101070e8:	dec00304 	addi	sp,sp,12
101070ec:	f800283a 	ret

101070f0 <__multiply>:
101070f0:	deffef04 	addi	sp,sp,-68
101070f4:	dc400815 	stw	r17,32(sp)
101070f8:	dc000715 	stw	r16,28(sp)
101070fc:	34400417 	ldw	r17,16(r6)
10107100:	2c000417 	ldw	r16,16(r5)
10107104:	dd800d15 	stw	r22,52(sp)
10107108:	dc800915 	stw	r18,36(sp)
1010710c:	dfc01015 	stw	ra,64(sp)
10107110:	df000f15 	stw	fp,60(sp)
10107114:	ddc00e15 	stw	r23,56(sp)
10107118:	dd400c15 	stw	r21,48(sp)
1010711c:	dd000b15 	stw	r20,44(sp)
10107120:	dcc00a15 	stw	r19,40(sp)
10107124:	2825883a 	mov	r18,r5
10107128:	302d883a 	mov	r22,r6
1010712c:	8440050e 	bge	r16,r17,10107144 <__multiply+0x54>
10107130:	8007883a 	mov	r3,r16
10107134:	3025883a 	mov	r18,r6
10107138:	8821883a 	mov	r16,r17
1010713c:	282d883a 	mov	r22,r5
10107140:	1823883a 	mov	r17,r3
10107144:	90800217 	ldw	r2,8(r18)
10107148:	8447883a 	add	r3,r16,r17
1010714c:	d8c00215 	stw	r3,8(sp)
10107150:	91400117 	ldw	r5,4(r18)
10107154:	10c0010e 	bge	r2,r3,1010715c <__multiply+0x6c>
10107158:	29400044 	addi	r5,r5,1
1010715c:	0106c800 	call	10106c80 <_Balloc>
10107160:	d8c00217 	ldw	r3,8(sp)
10107164:	d8800615 	stw	r2,24(sp)
10107168:	18eb883a 	add	r21,r3,r3
1010716c:	ad6b883a 	add	r21,r21,r21
10107170:	10c00504 	addi	r3,r2,20
10107174:	1d6b883a 	add	r21,r3,r21
10107178:	d8c00115 	stw	r3,4(sp)
1010717c:	dd400315 	stw	r21,12(sp)
10107180:	1805883a 	mov	r2,r3
10107184:	1d40042e 	bgeu	r3,r21,10107198 <__multiply+0xa8>
10107188:	d8c00317 	ldw	r3,12(sp)
1010718c:	10000015 	stw	zero,0(r2)
10107190:	10800104 	addi	r2,r2,4
10107194:	10fffc36 	bltu	r2,r3,10107188 <__alt_data_end+0xfffe7188>
10107198:	8c63883a 	add	r17,r17,r17
1010719c:	b5800504 	addi	r22,r22,20
101071a0:	8c63883a 	add	r17,r17,r17
101071a4:	94800504 	addi	r18,r18,20
101071a8:	8421883a 	add	r16,r16,r16
101071ac:	b463883a 	add	r17,r22,r17
101071b0:	8421883a 	add	r16,r16,r16
101071b4:	dd800015 	stw	r22,0(sp)
101071b8:	dc800415 	stw	r18,16(sp)
101071bc:	dc400515 	stw	r17,20(sp)
101071c0:	9429883a 	add	r20,r18,r16
101071c4:	b4404f2e 	bgeu	r22,r17,10107304 <__multiply+0x214>
101071c8:	d8c00017 	ldw	r3,0(sp)
101071cc:	1c800017 	ldw	r18,0(r3)
101071d0:	947fffcc 	andi	r17,r18,65535
101071d4:	88001e26 	beq	r17,zero,10107250 <__multiply+0x160>
101071d8:	dd800117 	ldw	r22,4(sp)
101071dc:	dd400417 	ldw	r21,16(sp)
101071e0:	0027883a 	mov	r19,zero
101071e4:	ac800017 	ldw	r18,0(r21)
101071e8:	b4000017 	ldw	r16,0(r22)
101071ec:	880b883a 	mov	r5,r17
101071f0:	913fffcc 	andi	r4,r18,65535
101071f4:	0100c980 	call	10100c98 <__mulsi3>
101071f8:	9008d43a 	srli	r4,r18,16
101071fc:	84bfffcc 	andi	r18,r16,65535
10107200:	1485883a 	add	r2,r2,r18
10107204:	14e5883a 	add	r18,r2,r19
10107208:	8020d43a 	srli	r16,r16,16
1010720c:	9026d43a 	srli	r19,r18,16
10107210:	880b883a 	mov	r5,r17
10107214:	0100c980 	call	10100c98 <__mulsi3>
10107218:	1405883a 	add	r2,r2,r16
1010721c:	14e1883a 	add	r16,r2,r19
10107220:	90ffffcc 	andi	r3,r18,65535
10107224:	8024943a 	slli	r18,r16,16
10107228:	ad400104 	addi	r21,r21,4
1010722c:	b005883a 	mov	r2,r22
10107230:	90c6b03a 	or	r3,r18,r3
10107234:	b0c00015 	stw	r3,0(r22)
10107238:	8026d43a 	srli	r19,r16,16
1010723c:	b5800104 	addi	r22,r22,4
10107240:	ad3fe836 	bltu	r21,r20,101071e4 <__alt_data_end+0xfffe71e4>
10107244:	d8c00017 	ldw	r3,0(sp)
10107248:	14c00115 	stw	r19,4(r2)
1010724c:	1c800017 	ldw	r18,0(r3)
10107250:	9024d43a 	srli	r18,r18,16
10107254:	90002226 	beq	r18,zero,101072e0 <__multiply+0x1f0>
10107258:	d8c00117 	ldw	r3,4(sp)
1010725c:	dd800417 	ldw	r22,16(sp)
10107260:	002f883a 	mov	r23,zero
10107264:	1f000017 	ldw	fp,0(r3)
10107268:	1823883a 	mov	r17,r3
1010726c:	182b883a 	mov	r21,r3
10107270:	e021883a 	mov	r16,fp
10107274:	00000106 	br	1010727c <__multiply+0x18c>
10107278:	982b883a 	mov	r21,r19
1010727c:	b100000b 	ldhu	r4,0(r22)
10107280:	8020d43a 	srli	r16,r16,16
10107284:	900b883a 	mov	r5,r18
10107288:	0100c980 	call	10100c98 <__mulsi3>
1010728c:	1405883a 	add	r2,r2,r16
10107290:	15ef883a 	add	r23,r2,r23
10107294:	b804943a 	slli	r2,r23,16
10107298:	e0ffffcc 	andi	r3,fp,65535
1010729c:	8c400104 	addi	r17,r17,4
101072a0:	10c6b03a 	or	r3,r2,r3
101072a4:	88ffff15 	stw	r3,-4(r17)
101072a8:	b5800104 	addi	r22,r22,4
101072ac:	b13fff17 	ldw	r4,-4(r22)
101072b0:	acc00104 	addi	r19,r21,4
101072b4:	900b883a 	mov	r5,r18
101072b8:	2008d43a 	srli	r4,r4,16
101072bc:	9c000017 	ldw	r16,0(r19)
101072c0:	0100c980 	call	10100c98 <__mulsi3>
101072c4:	b806d43a 	srli	r3,r23,16
101072c8:	813fffcc 	andi	r4,r16,65535
101072cc:	1105883a 	add	r2,r2,r4
101072d0:	10f9883a 	add	fp,r2,r3
101072d4:	e02ed43a 	srli	r23,fp,16
101072d8:	b53fe736 	bltu	r22,r20,10107278 <__alt_data_end+0xfffe7278>
101072dc:	af000115 	stw	fp,4(r21)
101072e0:	d8c00017 	ldw	r3,0(sp)
101072e4:	d9000517 	ldw	r4,20(sp)
101072e8:	18c00104 	addi	r3,r3,4
101072ec:	d8c00015 	stw	r3,0(sp)
101072f0:	d8c00117 	ldw	r3,4(sp)
101072f4:	18c00104 	addi	r3,r3,4
101072f8:	d8c00115 	stw	r3,4(sp)
101072fc:	d8c00017 	ldw	r3,0(sp)
10107300:	193fb136 	bltu	r3,r4,101071c8 <__alt_data_end+0xfffe71c8>
10107304:	d8c00217 	ldw	r3,8(sp)
10107308:	00c00c0e 	bge	zero,r3,1010733c <__multiply+0x24c>
1010730c:	d8c00317 	ldw	r3,12(sp)
10107310:	18bfff17 	ldw	r2,-4(r3)
10107314:	1d7fff04 	addi	r21,r3,-4
10107318:	10000326 	beq	r2,zero,10107328 <__multiply+0x238>
1010731c:	00000706 	br	1010733c <__multiply+0x24c>
10107320:	a8800017 	ldw	r2,0(r21)
10107324:	1000051e 	bne	r2,zero,1010733c <__multiply+0x24c>
10107328:	d8c00217 	ldw	r3,8(sp)
1010732c:	ad7fff04 	addi	r21,r21,-4
10107330:	18ffffc4 	addi	r3,r3,-1
10107334:	d8c00215 	stw	r3,8(sp)
10107338:	183ff91e 	bne	r3,zero,10107320 <__alt_data_end+0xfffe7320>
1010733c:	d8c00617 	ldw	r3,24(sp)
10107340:	d9000217 	ldw	r4,8(sp)
10107344:	1805883a 	mov	r2,r3
10107348:	19000415 	stw	r4,16(r3)
1010734c:	dfc01017 	ldw	ra,64(sp)
10107350:	df000f17 	ldw	fp,60(sp)
10107354:	ddc00e17 	ldw	r23,56(sp)
10107358:	dd800d17 	ldw	r22,52(sp)
1010735c:	dd400c17 	ldw	r21,48(sp)
10107360:	dd000b17 	ldw	r20,44(sp)
10107364:	dcc00a17 	ldw	r19,40(sp)
10107368:	dc800917 	ldw	r18,36(sp)
1010736c:	dc400817 	ldw	r17,32(sp)
10107370:	dc000717 	ldw	r16,28(sp)
10107374:	dec01104 	addi	sp,sp,68
10107378:	f800283a 	ret

1010737c <__pow5mult>:
1010737c:	defffa04 	addi	sp,sp,-24
10107380:	dcc00315 	stw	r19,12(sp)
10107384:	dc000015 	stw	r16,0(sp)
10107388:	dfc00515 	stw	ra,20(sp)
1010738c:	dd000415 	stw	r20,16(sp)
10107390:	dc800215 	stw	r18,8(sp)
10107394:	dc400115 	stw	r17,4(sp)
10107398:	308000cc 	andi	r2,r6,3
1010739c:	3021883a 	mov	r16,r6
101073a0:	2027883a 	mov	r19,r4
101073a4:	10002f1e 	bne	r2,zero,10107464 <__pow5mult+0xe8>
101073a8:	2825883a 	mov	r18,r5
101073ac:	8021d0ba 	srai	r16,r16,2
101073b0:	80001a26 	beq	r16,zero,1010741c <__pow5mult+0xa0>
101073b4:	9c401217 	ldw	r17,72(r19)
101073b8:	8800061e 	bne	r17,zero,101073d4 <__pow5mult+0x58>
101073bc:	00003406 	br	10107490 <__pow5mult+0x114>
101073c0:	8021d07a 	srai	r16,r16,1
101073c4:	80001526 	beq	r16,zero,1010741c <__pow5mult+0xa0>
101073c8:	88800017 	ldw	r2,0(r17)
101073cc:	10001c26 	beq	r2,zero,10107440 <__pow5mult+0xc4>
101073d0:	1023883a 	mov	r17,r2
101073d4:	8080004c 	andi	r2,r16,1
101073d8:	103ff926 	beq	r2,zero,101073c0 <__alt_data_end+0xfffe73c0>
101073dc:	880d883a 	mov	r6,r17
101073e0:	900b883a 	mov	r5,r18
101073e4:	9809883a 	mov	r4,r19
101073e8:	01070f00 	call	101070f0 <__multiply>
101073ec:	90001b26 	beq	r18,zero,1010745c <__pow5mult+0xe0>
101073f0:	91000117 	ldw	r4,4(r18)
101073f4:	98c01317 	ldw	r3,76(r19)
101073f8:	8021d07a 	srai	r16,r16,1
101073fc:	2109883a 	add	r4,r4,r4
10107400:	2109883a 	add	r4,r4,r4
10107404:	1907883a 	add	r3,r3,r4
10107408:	19000017 	ldw	r4,0(r3)
1010740c:	91000015 	stw	r4,0(r18)
10107410:	1c800015 	stw	r18,0(r3)
10107414:	1025883a 	mov	r18,r2
10107418:	803feb1e 	bne	r16,zero,101073c8 <__alt_data_end+0xfffe73c8>
1010741c:	9005883a 	mov	r2,r18
10107420:	dfc00517 	ldw	ra,20(sp)
10107424:	dd000417 	ldw	r20,16(sp)
10107428:	dcc00317 	ldw	r19,12(sp)
1010742c:	dc800217 	ldw	r18,8(sp)
10107430:	dc400117 	ldw	r17,4(sp)
10107434:	dc000017 	ldw	r16,0(sp)
10107438:	dec00604 	addi	sp,sp,24
1010743c:	f800283a 	ret
10107440:	880d883a 	mov	r6,r17
10107444:	880b883a 	mov	r5,r17
10107448:	9809883a 	mov	r4,r19
1010744c:	01070f00 	call	101070f0 <__multiply>
10107450:	88800015 	stw	r2,0(r17)
10107454:	10000015 	stw	zero,0(r2)
10107458:	003fdd06 	br	101073d0 <__alt_data_end+0xfffe73d0>
1010745c:	1025883a 	mov	r18,r2
10107460:	003fd706 	br	101073c0 <__alt_data_end+0xfffe73c0>
10107464:	10bfffc4 	addi	r2,r2,-1
10107468:	1085883a 	add	r2,r2,r2
1010746c:	00c40474 	movhi	r3,4113
10107470:	18c1ad04 	addi	r3,r3,1716
10107474:	1085883a 	add	r2,r2,r2
10107478:	1885883a 	add	r2,r3,r2
1010747c:	11800017 	ldw	r6,0(r2)
10107480:	000f883a 	mov	r7,zero
10107484:	0106d500 	call	10106d50 <__multadd>
10107488:	1025883a 	mov	r18,r2
1010748c:	003fc706 	br	101073ac <__alt_data_end+0xfffe73ac>
10107490:	05000044 	movi	r20,1
10107494:	a00b883a 	mov	r5,r20
10107498:	9809883a 	mov	r4,r19
1010749c:	0106c800 	call	10106c80 <_Balloc>
101074a0:	1023883a 	mov	r17,r2
101074a4:	00809c44 	movi	r2,625
101074a8:	88800515 	stw	r2,20(r17)
101074ac:	8d000415 	stw	r20,16(r17)
101074b0:	9c401215 	stw	r17,72(r19)
101074b4:	88000015 	stw	zero,0(r17)
101074b8:	003fc606 	br	101073d4 <__alt_data_end+0xfffe73d4>

101074bc <__lshift>:
101074bc:	defff904 	addi	sp,sp,-28
101074c0:	dd400515 	stw	r21,20(sp)
101074c4:	dcc00315 	stw	r19,12(sp)
101074c8:	302bd17a 	srai	r21,r6,5
101074cc:	2cc00417 	ldw	r19,16(r5)
101074d0:	28800217 	ldw	r2,8(r5)
101074d4:	dd000415 	stw	r20,16(sp)
101074d8:	ace7883a 	add	r19,r21,r19
101074dc:	dc800215 	stw	r18,8(sp)
101074e0:	dc400115 	stw	r17,4(sp)
101074e4:	dc000015 	stw	r16,0(sp)
101074e8:	dfc00615 	stw	ra,24(sp)
101074ec:	9c000044 	addi	r16,r19,1
101074f0:	2823883a 	mov	r17,r5
101074f4:	3029883a 	mov	r20,r6
101074f8:	2025883a 	mov	r18,r4
101074fc:	29400117 	ldw	r5,4(r5)
10107500:	1400030e 	bge	r2,r16,10107510 <__lshift+0x54>
10107504:	1085883a 	add	r2,r2,r2
10107508:	29400044 	addi	r5,r5,1
1010750c:	143ffd16 	blt	r2,r16,10107504 <__alt_data_end+0xfffe7504>
10107510:	9009883a 	mov	r4,r18
10107514:	0106c800 	call	10106c80 <_Balloc>
10107518:	10c00504 	addi	r3,r2,20
1010751c:	0540070e 	bge	zero,r21,1010753c <__lshift+0x80>
10107520:	ad6b883a 	add	r21,r21,r21
10107524:	ad6b883a 	add	r21,r21,r21
10107528:	1809883a 	mov	r4,r3
1010752c:	1d47883a 	add	r3,r3,r21
10107530:	20000015 	stw	zero,0(r4)
10107534:	21000104 	addi	r4,r4,4
10107538:	193ffd1e 	bne	r3,r4,10107530 <__alt_data_end+0xfffe7530>
1010753c:	8a000417 	ldw	r8,16(r17)
10107540:	89000504 	addi	r4,r17,20
10107544:	a18007cc 	andi	r6,r20,31
10107548:	4211883a 	add	r8,r8,r8
1010754c:	4211883a 	add	r8,r8,r8
10107550:	2211883a 	add	r8,r4,r8
10107554:	30002326 	beq	r6,zero,101075e4 <__lshift+0x128>
10107558:	02400804 	movi	r9,32
1010755c:	4993c83a 	sub	r9,r9,r6
10107560:	000b883a 	mov	r5,zero
10107564:	21c00017 	ldw	r7,0(r4)
10107568:	1815883a 	mov	r10,r3
1010756c:	18c00104 	addi	r3,r3,4
10107570:	398e983a 	sll	r7,r7,r6
10107574:	21000104 	addi	r4,r4,4
10107578:	394ab03a 	or	r5,r7,r5
1010757c:	197fff15 	stw	r5,-4(r3)
10107580:	217fff17 	ldw	r5,-4(r4)
10107584:	2a4ad83a 	srl	r5,r5,r9
10107588:	223ff636 	bltu	r4,r8,10107564 <__alt_data_end+0xfffe7564>
1010758c:	51400115 	stw	r5,4(r10)
10107590:	28001a1e 	bne	r5,zero,101075fc <__lshift+0x140>
10107594:	843fffc4 	addi	r16,r16,-1
10107598:	14000415 	stw	r16,16(r2)
1010759c:	88000826 	beq	r17,zero,101075c0 <__lshift+0x104>
101075a0:	89000117 	ldw	r4,4(r17)
101075a4:	90c01317 	ldw	r3,76(r18)
101075a8:	2109883a 	add	r4,r4,r4
101075ac:	2109883a 	add	r4,r4,r4
101075b0:	1907883a 	add	r3,r3,r4
101075b4:	19000017 	ldw	r4,0(r3)
101075b8:	89000015 	stw	r4,0(r17)
101075bc:	1c400015 	stw	r17,0(r3)
101075c0:	dfc00617 	ldw	ra,24(sp)
101075c4:	dd400517 	ldw	r21,20(sp)
101075c8:	dd000417 	ldw	r20,16(sp)
101075cc:	dcc00317 	ldw	r19,12(sp)
101075d0:	dc800217 	ldw	r18,8(sp)
101075d4:	dc400117 	ldw	r17,4(sp)
101075d8:	dc000017 	ldw	r16,0(sp)
101075dc:	dec00704 	addi	sp,sp,28
101075e0:	f800283a 	ret
101075e4:	21400017 	ldw	r5,0(r4)
101075e8:	18c00104 	addi	r3,r3,4
101075ec:	21000104 	addi	r4,r4,4
101075f0:	197fff15 	stw	r5,-4(r3)
101075f4:	223ffb36 	bltu	r4,r8,101075e4 <__alt_data_end+0xfffe75e4>
101075f8:	003fe606 	br	10107594 <__alt_data_end+0xfffe7594>
101075fc:	9c000084 	addi	r16,r19,2
10107600:	003fe406 	br	10107594 <__alt_data_end+0xfffe7594>

10107604 <__mcmp>:
10107604:	20800417 	ldw	r2,16(r4)
10107608:	28c00417 	ldw	r3,16(r5)
1010760c:	10c5c83a 	sub	r2,r2,r3
10107610:	1000111e 	bne	r2,zero,10107658 <__mcmp+0x54>
10107614:	18c7883a 	add	r3,r3,r3
10107618:	18c7883a 	add	r3,r3,r3
1010761c:	21000504 	addi	r4,r4,20
10107620:	29400504 	addi	r5,r5,20
10107624:	20c5883a 	add	r2,r4,r3
10107628:	28cb883a 	add	r5,r5,r3
1010762c:	00000106 	br	10107634 <__mcmp+0x30>
10107630:	20800a2e 	bgeu	r4,r2,1010765c <__mcmp+0x58>
10107634:	10bfff04 	addi	r2,r2,-4
10107638:	297fff04 	addi	r5,r5,-4
1010763c:	11800017 	ldw	r6,0(r2)
10107640:	28c00017 	ldw	r3,0(r5)
10107644:	30fffa26 	beq	r6,r3,10107630 <__alt_data_end+0xfffe7630>
10107648:	30c00236 	bltu	r6,r3,10107654 <__mcmp+0x50>
1010764c:	00800044 	movi	r2,1
10107650:	f800283a 	ret
10107654:	00bfffc4 	movi	r2,-1
10107658:	f800283a 	ret
1010765c:	0005883a 	mov	r2,zero
10107660:	f800283a 	ret

10107664 <__mdiff>:
10107664:	28c00417 	ldw	r3,16(r5)
10107668:	30800417 	ldw	r2,16(r6)
1010766c:	defffa04 	addi	sp,sp,-24
10107670:	dcc00315 	stw	r19,12(sp)
10107674:	dc800215 	stw	r18,8(sp)
10107678:	dfc00515 	stw	ra,20(sp)
1010767c:	dd000415 	stw	r20,16(sp)
10107680:	dc400115 	stw	r17,4(sp)
10107684:	dc000015 	stw	r16,0(sp)
10107688:	1887c83a 	sub	r3,r3,r2
1010768c:	2825883a 	mov	r18,r5
10107690:	3027883a 	mov	r19,r6
10107694:	1800141e 	bne	r3,zero,101076e8 <__mdiff+0x84>
10107698:	1085883a 	add	r2,r2,r2
1010769c:	1085883a 	add	r2,r2,r2
101076a0:	2a000504 	addi	r8,r5,20
101076a4:	34000504 	addi	r16,r6,20
101076a8:	4087883a 	add	r3,r8,r2
101076ac:	8085883a 	add	r2,r16,r2
101076b0:	00000106 	br	101076b8 <__mdiff+0x54>
101076b4:	40c0592e 	bgeu	r8,r3,1010781c <__mdiff+0x1b8>
101076b8:	18ffff04 	addi	r3,r3,-4
101076bc:	10bfff04 	addi	r2,r2,-4
101076c0:	19c00017 	ldw	r7,0(r3)
101076c4:	11400017 	ldw	r5,0(r2)
101076c8:	397ffa26 	beq	r7,r5,101076b4 <__alt_data_end+0xfffe76b4>
101076cc:	3940592e 	bgeu	r7,r5,10107834 <__mdiff+0x1d0>
101076d0:	9005883a 	mov	r2,r18
101076d4:	4023883a 	mov	r17,r8
101076d8:	9825883a 	mov	r18,r19
101076dc:	05000044 	movi	r20,1
101076e0:	1027883a 	mov	r19,r2
101076e4:	00000406 	br	101076f8 <__mdiff+0x94>
101076e8:	18005616 	blt	r3,zero,10107844 <__mdiff+0x1e0>
101076ec:	34400504 	addi	r17,r6,20
101076f0:	2c000504 	addi	r16,r5,20
101076f4:	0029883a 	mov	r20,zero
101076f8:	91400117 	ldw	r5,4(r18)
101076fc:	0106c800 	call	10106c80 <_Balloc>
10107700:	92400417 	ldw	r9,16(r18)
10107704:	9b000417 	ldw	r12,16(r19)
10107708:	12c00504 	addi	r11,r2,20
1010770c:	4a51883a 	add	r8,r9,r9
10107710:	6319883a 	add	r12,r12,r12
10107714:	4211883a 	add	r8,r8,r8
10107718:	6319883a 	add	r12,r12,r12
1010771c:	15000315 	stw	r20,12(r2)
10107720:	8211883a 	add	r8,r16,r8
10107724:	8b19883a 	add	r12,r17,r12
10107728:	0007883a 	mov	r3,zero
1010772c:	81400017 	ldw	r5,0(r16)
10107730:	89c00017 	ldw	r7,0(r17)
10107734:	59800104 	addi	r6,r11,4
10107738:	293fffcc 	andi	r4,r5,65535
1010773c:	20c7883a 	add	r3,r4,r3
10107740:	393fffcc 	andi	r4,r7,65535
10107744:	1909c83a 	sub	r4,r3,r4
10107748:	280ad43a 	srli	r5,r5,16
1010774c:	380ed43a 	srli	r7,r7,16
10107750:	2007d43a 	srai	r3,r4,16
10107754:	213fffcc 	andi	r4,r4,65535
10107758:	29cbc83a 	sub	r5,r5,r7
1010775c:	28c7883a 	add	r3,r5,r3
10107760:	180a943a 	slli	r5,r3,16
10107764:	8c400104 	addi	r17,r17,4
10107768:	84000104 	addi	r16,r16,4
1010776c:	2908b03a 	or	r4,r5,r4
10107770:	59000015 	stw	r4,0(r11)
10107774:	1807d43a 	srai	r3,r3,16
10107778:	3015883a 	mov	r10,r6
1010777c:	3017883a 	mov	r11,r6
10107780:	8b3fea36 	bltu	r17,r12,1010772c <__alt_data_end+0xfffe772c>
10107784:	8200162e 	bgeu	r16,r8,101077e0 <__mdiff+0x17c>
10107788:	8017883a 	mov	r11,r16
1010778c:	59400017 	ldw	r5,0(r11)
10107790:	31800104 	addi	r6,r6,4
10107794:	5ac00104 	addi	r11,r11,4
10107798:	293fffcc 	andi	r4,r5,65535
1010779c:	20c7883a 	add	r3,r4,r3
101077a0:	280ed43a 	srli	r7,r5,16
101077a4:	180bd43a 	srai	r5,r3,16
101077a8:	193fffcc 	andi	r4,r3,65535
101077ac:	3947883a 	add	r3,r7,r5
101077b0:	180a943a 	slli	r5,r3,16
101077b4:	1807d43a 	srai	r3,r3,16
101077b8:	2908b03a 	or	r4,r5,r4
101077bc:	313fff15 	stw	r4,-4(r6)
101077c0:	5a3ff236 	bltu	r11,r8,1010778c <__alt_data_end+0xfffe778c>
101077c4:	0406303a 	nor	r3,zero,r16
101077c8:	1a07883a 	add	r3,r3,r8
101077cc:	1806d0ba 	srli	r3,r3,2
101077d0:	18c00044 	addi	r3,r3,1
101077d4:	18c7883a 	add	r3,r3,r3
101077d8:	18c7883a 	add	r3,r3,r3
101077dc:	50d5883a 	add	r10,r10,r3
101077e0:	50ffff04 	addi	r3,r10,-4
101077e4:	2000041e 	bne	r4,zero,101077f8 <__mdiff+0x194>
101077e8:	18ffff04 	addi	r3,r3,-4
101077ec:	19000017 	ldw	r4,0(r3)
101077f0:	4a7fffc4 	addi	r9,r9,-1
101077f4:	203ffc26 	beq	r4,zero,101077e8 <__alt_data_end+0xfffe77e8>
101077f8:	12400415 	stw	r9,16(r2)
101077fc:	dfc00517 	ldw	ra,20(sp)
10107800:	dd000417 	ldw	r20,16(sp)
10107804:	dcc00317 	ldw	r19,12(sp)
10107808:	dc800217 	ldw	r18,8(sp)
1010780c:	dc400117 	ldw	r17,4(sp)
10107810:	dc000017 	ldw	r16,0(sp)
10107814:	dec00604 	addi	sp,sp,24
10107818:	f800283a 	ret
1010781c:	000b883a 	mov	r5,zero
10107820:	0106c800 	call	10106c80 <_Balloc>
10107824:	00c00044 	movi	r3,1
10107828:	10c00415 	stw	r3,16(r2)
1010782c:	10000515 	stw	zero,20(r2)
10107830:	003ff206 	br	101077fc <__alt_data_end+0xfffe77fc>
10107834:	8023883a 	mov	r17,r16
10107838:	0029883a 	mov	r20,zero
1010783c:	4021883a 	mov	r16,r8
10107840:	003fad06 	br	101076f8 <__alt_data_end+0xfffe76f8>
10107844:	9005883a 	mov	r2,r18
10107848:	94400504 	addi	r17,r18,20
1010784c:	9c000504 	addi	r16,r19,20
10107850:	9825883a 	mov	r18,r19
10107854:	05000044 	movi	r20,1
10107858:	1027883a 	mov	r19,r2
1010785c:	003fa606 	br	101076f8 <__alt_data_end+0xfffe76f8>

10107860 <__ulp>:
10107860:	295ffc2c 	andhi	r5,r5,32752
10107864:	00bf3034 	movhi	r2,64704
10107868:	2887883a 	add	r3,r5,r2
1010786c:	00c0020e 	bge	zero,r3,10107878 <__ulp+0x18>
10107870:	0005883a 	mov	r2,zero
10107874:	f800283a 	ret
10107878:	00c7c83a 	sub	r3,zero,r3
1010787c:	1807d53a 	srai	r3,r3,20
10107880:	008004c4 	movi	r2,19
10107884:	10c00b0e 	bge	r2,r3,101078b4 <__ulp+0x54>
10107888:	18bffb04 	addi	r2,r3,-20
1010788c:	01000784 	movi	r4,30
10107890:	0007883a 	mov	r3,zero
10107894:	20800516 	blt	r4,r2,101078ac <__ulp+0x4c>
10107898:	010007c4 	movi	r4,31
1010789c:	2089c83a 	sub	r4,r4,r2
101078a0:	00800044 	movi	r2,1
101078a4:	1104983a 	sll	r2,r2,r4
101078a8:	f800283a 	ret
101078ac:	00800044 	movi	r2,1
101078b0:	f800283a 	ret
101078b4:	01400234 	movhi	r5,8
101078b8:	28c7d83a 	sra	r3,r5,r3
101078bc:	0005883a 	mov	r2,zero
101078c0:	f800283a 	ret

101078c4 <__b2d>:
101078c4:	defffa04 	addi	sp,sp,-24
101078c8:	dc000015 	stw	r16,0(sp)
101078cc:	24000417 	ldw	r16,16(r4)
101078d0:	dc400115 	stw	r17,4(sp)
101078d4:	24400504 	addi	r17,r4,20
101078d8:	8421883a 	add	r16,r16,r16
101078dc:	8421883a 	add	r16,r16,r16
101078e0:	8c21883a 	add	r16,r17,r16
101078e4:	dc800215 	stw	r18,8(sp)
101078e8:	84bfff17 	ldw	r18,-4(r16)
101078ec:	dd000415 	stw	r20,16(sp)
101078f0:	dcc00315 	stw	r19,12(sp)
101078f4:	9009883a 	mov	r4,r18
101078f8:	2829883a 	mov	r20,r5
101078fc:	dfc00515 	stw	ra,20(sp)
10107900:	0106f9c0 	call	10106f9c <__hi0bits>
10107904:	00c00804 	movi	r3,32
10107908:	1889c83a 	sub	r4,r3,r2
1010790c:	a1000015 	stw	r4,0(r20)
10107910:	01000284 	movi	r4,10
10107914:	84ffff04 	addi	r19,r16,-4
10107918:	20801216 	blt	r4,r2,10107964 <__b2d+0xa0>
1010791c:	018002c4 	movi	r6,11
10107920:	308dc83a 	sub	r6,r6,r2
10107924:	9186d83a 	srl	r3,r18,r6
10107928:	18cffc34 	orhi	r3,r3,16368
1010792c:	8cc0212e 	bgeu	r17,r19,101079b4 <__b2d+0xf0>
10107930:	813ffe17 	ldw	r4,-8(r16)
10107934:	218cd83a 	srl	r6,r4,r6
10107938:	10800544 	addi	r2,r2,21
1010793c:	9084983a 	sll	r2,r18,r2
10107940:	1184b03a 	or	r2,r2,r6
10107944:	dfc00517 	ldw	ra,20(sp)
10107948:	dd000417 	ldw	r20,16(sp)
1010794c:	dcc00317 	ldw	r19,12(sp)
10107950:	dc800217 	ldw	r18,8(sp)
10107954:	dc400117 	ldw	r17,4(sp)
10107958:	dc000017 	ldw	r16,0(sp)
1010795c:	dec00604 	addi	sp,sp,24
10107960:	f800283a 	ret
10107964:	8cc00f2e 	bgeu	r17,r19,101079a4 <__b2d+0xe0>
10107968:	117ffd44 	addi	r5,r2,-11
1010796c:	80bffe17 	ldw	r2,-8(r16)
10107970:	28000e26 	beq	r5,zero,101079ac <__b2d+0xe8>
10107974:	1949c83a 	sub	r4,r3,r5
10107978:	9164983a 	sll	r18,r18,r5
1010797c:	1106d83a 	srl	r3,r2,r4
10107980:	81bffe04 	addi	r6,r16,-8
10107984:	948ffc34 	orhi	r18,r18,16368
10107988:	90c6b03a 	or	r3,r18,r3
1010798c:	89800e2e 	bgeu	r17,r6,101079c8 <__b2d+0x104>
10107990:	81bffd17 	ldw	r6,-12(r16)
10107994:	1144983a 	sll	r2,r2,r5
10107998:	310ad83a 	srl	r5,r6,r4
1010799c:	2884b03a 	or	r2,r5,r2
101079a0:	003fe806 	br	10107944 <__alt_data_end+0xfffe7944>
101079a4:	10bffd44 	addi	r2,r2,-11
101079a8:	1000041e 	bne	r2,zero,101079bc <__b2d+0xf8>
101079ac:	90cffc34 	orhi	r3,r18,16368
101079b0:	003fe406 	br	10107944 <__alt_data_end+0xfffe7944>
101079b4:	000d883a 	mov	r6,zero
101079b8:	003fdf06 	br	10107938 <__alt_data_end+0xfffe7938>
101079bc:	90a4983a 	sll	r18,r18,r2
101079c0:	0005883a 	mov	r2,zero
101079c4:	003ff906 	br	101079ac <__alt_data_end+0xfffe79ac>
101079c8:	1144983a 	sll	r2,r2,r5
101079cc:	003fdd06 	br	10107944 <__alt_data_end+0xfffe7944>

101079d0 <__d2b>:
101079d0:	defff804 	addi	sp,sp,-32
101079d4:	dc000215 	stw	r16,8(sp)
101079d8:	3021883a 	mov	r16,r6
101079dc:	dc400315 	stw	r17,12(sp)
101079e0:	8022907a 	slli	r17,r16,1
101079e4:	dd000615 	stw	r20,24(sp)
101079e8:	2829883a 	mov	r20,r5
101079ec:	01400044 	movi	r5,1
101079f0:	dcc00515 	stw	r19,20(sp)
101079f4:	dc800415 	stw	r18,16(sp)
101079f8:	dfc00715 	stw	ra,28(sp)
101079fc:	3825883a 	mov	r18,r7
10107a00:	8822d57a 	srli	r17,r17,21
10107a04:	0106c800 	call	10106c80 <_Balloc>
10107a08:	1027883a 	mov	r19,r2
10107a0c:	00800434 	movhi	r2,16
10107a10:	10bfffc4 	addi	r2,r2,-1
10107a14:	808c703a 	and	r6,r16,r2
10107a18:	88000126 	beq	r17,zero,10107a20 <__d2b+0x50>
10107a1c:	31800434 	orhi	r6,r6,16
10107a20:	d9800015 	stw	r6,0(sp)
10107a24:	a0002426 	beq	r20,zero,10107ab8 <__d2b+0xe8>
10107a28:	d9000104 	addi	r4,sp,4
10107a2c:	dd000115 	stw	r20,4(sp)
10107a30:	01070040 	call	10107004 <__lo0bits>
10107a34:	d8c00017 	ldw	r3,0(sp)
10107a38:	10002f1e 	bne	r2,zero,10107af8 <__d2b+0x128>
10107a3c:	d9000117 	ldw	r4,4(sp)
10107a40:	99000515 	stw	r4,20(r19)
10107a44:	1821003a 	cmpeq	r16,r3,zero
10107a48:	01000084 	movi	r4,2
10107a4c:	2421c83a 	sub	r16,r4,r16
10107a50:	98c00615 	stw	r3,24(r19)
10107a54:	9c000415 	stw	r16,16(r19)
10107a58:	88001f1e 	bne	r17,zero,10107ad8 <__d2b+0x108>
10107a5c:	10bef384 	addi	r2,r2,-1074
10107a60:	90800015 	stw	r2,0(r18)
10107a64:	00900034 	movhi	r2,16384
10107a68:	10bfffc4 	addi	r2,r2,-1
10107a6c:	8085883a 	add	r2,r16,r2
10107a70:	1085883a 	add	r2,r2,r2
10107a74:	1085883a 	add	r2,r2,r2
10107a78:	9885883a 	add	r2,r19,r2
10107a7c:	11000517 	ldw	r4,20(r2)
10107a80:	8020917a 	slli	r16,r16,5
10107a84:	0106f9c0 	call	10106f9c <__hi0bits>
10107a88:	d8c00817 	ldw	r3,32(sp)
10107a8c:	8085c83a 	sub	r2,r16,r2
10107a90:	18800015 	stw	r2,0(r3)
10107a94:	9805883a 	mov	r2,r19
10107a98:	dfc00717 	ldw	ra,28(sp)
10107a9c:	dd000617 	ldw	r20,24(sp)
10107aa0:	dcc00517 	ldw	r19,20(sp)
10107aa4:	dc800417 	ldw	r18,16(sp)
10107aa8:	dc400317 	ldw	r17,12(sp)
10107aac:	dc000217 	ldw	r16,8(sp)
10107ab0:	dec00804 	addi	sp,sp,32
10107ab4:	f800283a 	ret
10107ab8:	d809883a 	mov	r4,sp
10107abc:	01070040 	call	10107004 <__lo0bits>
10107ac0:	d8c00017 	ldw	r3,0(sp)
10107ac4:	04000044 	movi	r16,1
10107ac8:	9c000415 	stw	r16,16(r19)
10107acc:	98c00515 	stw	r3,20(r19)
10107ad0:	10800804 	addi	r2,r2,32
10107ad4:	883fe126 	beq	r17,zero,10107a5c <__alt_data_end+0xfffe7a5c>
10107ad8:	00c00d44 	movi	r3,53
10107adc:	8c7ef344 	addi	r17,r17,-1075
10107ae0:	88a3883a 	add	r17,r17,r2
10107ae4:	1885c83a 	sub	r2,r3,r2
10107ae8:	d8c00817 	ldw	r3,32(sp)
10107aec:	94400015 	stw	r17,0(r18)
10107af0:	18800015 	stw	r2,0(r3)
10107af4:	003fe706 	br	10107a94 <__alt_data_end+0xfffe7a94>
10107af8:	01000804 	movi	r4,32
10107afc:	2089c83a 	sub	r4,r4,r2
10107b00:	1908983a 	sll	r4,r3,r4
10107b04:	d9400117 	ldw	r5,4(sp)
10107b08:	1886d83a 	srl	r3,r3,r2
10107b0c:	2148b03a 	or	r4,r4,r5
10107b10:	99000515 	stw	r4,20(r19)
10107b14:	d8c00015 	stw	r3,0(sp)
10107b18:	003fca06 	br	10107a44 <__alt_data_end+0xfffe7a44>

10107b1c <__ratio>:
10107b1c:	defff904 	addi	sp,sp,-28
10107b20:	dc400315 	stw	r17,12(sp)
10107b24:	2823883a 	mov	r17,r5
10107b28:	d9400104 	addi	r5,sp,4
10107b2c:	dfc00615 	stw	ra,24(sp)
10107b30:	dcc00515 	stw	r19,20(sp)
10107b34:	dc800415 	stw	r18,16(sp)
10107b38:	2027883a 	mov	r19,r4
10107b3c:	dc000215 	stw	r16,8(sp)
10107b40:	01078c40 	call	101078c4 <__b2d>
10107b44:	d80b883a 	mov	r5,sp
10107b48:	8809883a 	mov	r4,r17
10107b4c:	1025883a 	mov	r18,r2
10107b50:	1821883a 	mov	r16,r3
10107b54:	01078c40 	call	101078c4 <__b2d>
10107b58:	8a000417 	ldw	r8,16(r17)
10107b5c:	99000417 	ldw	r4,16(r19)
10107b60:	d9400117 	ldw	r5,4(sp)
10107b64:	2209c83a 	sub	r4,r4,r8
10107b68:	2010917a 	slli	r8,r4,5
10107b6c:	d9000017 	ldw	r4,0(sp)
10107b70:	2909c83a 	sub	r4,r5,r4
10107b74:	4109883a 	add	r4,r8,r4
10107b78:	01000e0e 	bge	zero,r4,10107bb4 <__ratio+0x98>
10107b7c:	2008953a 	slli	r4,r4,20
10107b80:	2421883a 	add	r16,r4,r16
10107b84:	100d883a 	mov	r6,r2
10107b88:	180f883a 	mov	r7,r3
10107b8c:	9009883a 	mov	r4,r18
10107b90:	800b883a 	mov	r5,r16
10107b94:	010ba2c0 	call	1010ba2c <__divdf3>
10107b98:	dfc00617 	ldw	ra,24(sp)
10107b9c:	dcc00517 	ldw	r19,20(sp)
10107ba0:	dc800417 	ldw	r18,16(sp)
10107ba4:	dc400317 	ldw	r17,12(sp)
10107ba8:	dc000217 	ldw	r16,8(sp)
10107bac:	dec00704 	addi	sp,sp,28
10107bb0:	f800283a 	ret
10107bb4:	2008953a 	slli	r4,r4,20
10107bb8:	1907c83a 	sub	r3,r3,r4
10107bbc:	003ff106 	br	10107b84 <__alt_data_end+0xfffe7b84>

10107bc0 <_mprec_log10>:
10107bc0:	defffe04 	addi	sp,sp,-8
10107bc4:	dc000015 	stw	r16,0(sp)
10107bc8:	dfc00115 	stw	ra,4(sp)
10107bcc:	008005c4 	movi	r2,23
10107bd0:	2021883a 	mov	r16,r4
10107bd4:	11000d0e 	bge	r2,r4,10107c0c <_mprec_log10+0x4c>
10107bd8:	0005883a 	mov	r2,zero
10107bdc:	00cffc34 	movhi	r3,16368
10107be0:	843fffc4 	addi	r16,r16,-1
10107be4:	000d883a 	mov	r6,zero
10107be8:	01d00934 	movhi	r7,16420
10107bec:	1009883a 	mov	r4,r2
10107bf0:	180b883a 	mov	r5,r3
10107bf4:	010c6540 	call	1010c654 <__muldf3>
10107bf8:	803ff91e 	bne	r16,zero,10107be0 <__alt_data_end+0xfffe7be0>
10107bfc:	dfc00117 	ldw	ra,4(sp)
10107c00:	dc000017 	ldw	r16,0(sp)
10107c04:	dec00204 	addi	sp,sp,8
10107c08:	f800283a 	ret
10107c0c:	202090fa 	slli	r16,r4,3
10107c10:	00840474 	movhi	r2,4113
10107c14:	1081c404 	addi	r2,r2,1808
10107c18:	1421883a 	add	r16,r2,r16
10107c1c:	80800017 	ldw	r2,0(r16)
10107c20:	80c00117 	ldw	r3,4(r16)
10107c24:	dfc00117 	ldw	ra,4(sp)
10107c28:	dc000017 	ldw	r16,0(sp)
10107c2c:	dec00204 	addi	sp,sp,8
10107c30:	f800283a 	ret

10107c34 <__copybits>:
10107c34:	297fffc4 	addi	r5,r5,-1
10107c38:	280fd17a 	srai	r7,r5,5
10107c3c:	30c00417 	ldw	r3,16(r6)
10107c40:	30800504 	addi	r2,r6,20
10107c44:	39c00044 	addi	r7,r7,1
10107c48:	18c7883a 	add	r3,r3,r3
10107c4c:	39cf883a 	add	r7,r7,r7
10107c50:	18c7883a 	add	r3,r3,r3
10107c54:	39cf883a 	add	r7,r7,r7
10107c58:	10c7883a 	add	r3,r2,r3
10107c5c:	21cf883a 	add	r7,r4,r7
10107c60:	10c00d2e 	bgeu	r2,r3,10107c98 <__copybits+0x64>
10107c64:	200b883a 	mov	r5,r4
10107c68:	12000017 	ldw	r8,0(r2)
10107c6c:	29400104 	addi	r5,r5,4
10107c70:	10800104 	addi	r2,r2,4
10107c74:	2a3fff15 	stw	r8,-4(r5)
10107c78:	10fffb36 	bltu	r2,r3,10107c68 <__alt_data_end+0xfffe7c68>
10107c7c:	1985c83a 	sub	r2,r3,r6
10107c80:	10bffac4 	addi	r2,r2,-21
10107c84:	1004d0ba 	srli	r2,r2,2
10107c88:	10800044 	addi	r2,r2,1
10107c8c:	1085883a 	add	r2,r2,r2
10107c90:	1085883a 	add	r2,r2,r2
10107c94:	2089883a 	add	r4,r4,r2
10107c98:	21c0032e 	bgeu	r4,r7,10107ca8 <__copybits+0x74>
10107c9c:	20000015 	stw	zero,0(r4)
10107ca0:	21000104 	addi	r4,r4,4
10107ca4:	21fffd36 	bltu	r4,r7,10107c9c <__alt_data_end+0xfffe7c9c>
10107ca8:	f800283a 	ret

10107cac <__any_on>:
10107cac:	20c00417 	ldw	r3,16(r4)
10107cb0:	2805d17a 	srai	r2,r5,5
10107cb4:	21000504 	addi	r4,r4,20
10107cb8:	18800d0e 	bge	r3,r2,10107cf0 <__any_on+0x44>
10107cbc:	18c7883a 	add	r3,r3,r3
10107cc0:	18c7883a 	add	r3,r3,r3
10107cc4:	20c7883a 	add	r3,r4,r3
10107cc8:	20c0192e 	bgeu	r4,r3,10107d30 <__any_on+0x84>
10107ccc:	18bfff17 	ldw	r2,-4(r3)
10107cd0:	18ffff04 	addi	r3,r3,-4
10107cd4:	1000041e 	bne	r2,zero,10107ce8 <__any_on+0x3c>
10107cd8:	20c0142e 	bgeu	r4,r3,10107d2c <__any_on+0x80>
10107cdc:	18ffff04 	addi	r3,r3,-4
10107ce0:	19400017 	ldw	r5,0(r3)
10107ce4:	283ffc26 	beq	r5,zero,10107cd8 <__alt_data_end+0xfffe7cd8>
10107ce8:	00800044 	movi	r2,1
10107cec:	f800283a 	ret
10107cf0:	10c00a0e 	bge	r2,r3,10107d1c <__any_on+0x70>
10107cf4:	1085883a 	add	r2,r2,r2
10107cf8:	1085883a 	add	r2,r2,r2
10107cfc:	294007cc 	andi	r5,r5,31
10107d00:	2087883a 	add	r3,r4,r2
10107d04:	283ff026 	beq	r5,zero,10107cc8 <__alt_data_end+0xfffe7cc8>
10107d08:	19800017 	ldw	r6,0(r3)
10107d0c:	3144d83a 	srl	r2,r6,r5
10107d10:	114a983a 	sll	r5,r2,r5
10107d14:	317ff41e 	bne	r6,r5,10107ce8 <__alt_data_end+0xfffe7ce8>
10107d18:	003feb06 	br	10107cc8 <__alt_data_end+0xfffe7cc8>
10107d1c:	1085883a 	add	r2,r2,r2
10107d20:	1085883a 	add	r2,r2,r2
10107d24:	2087883a 	add	r3,r4,r2
10107d28:	003fe706 	br	10107cc8 <__alt_data_end+0xfffe7cc8>
10107d2c:	f800283a 	ret
10107d30:	0005883a 	mov	r2,zero
10107d34:	f800283a 	ret

10107d38 <_realloc_r>:
10107d38:	defff604 	addi	sp,sp,-40
10107d3c:	dc800215 	stw	r18,8(sp)
10107d40:	dfc00915 	stw	ra,36(sp)
10107d44:	df000815 	stw	fp,32(sp)
10107d48:	ddc00715 	stw	r23,28(sp)
10107d4c:	dd800615 	stw	r22,24(sp)
10107d50:	dd400515 	stw	r21,20(sp)
10107d54:	dd000415 	stw	r20,16(sp)
10107d58:	dcc00315 	stw	r19,12(sp)
10107d5c:	dc400115 	stw	r17,4(sp)
10107d60:	dc000015 	stw	r16,0(sp)
10107d64:	3025883a 	mov	r18,r6
10107d68:	2800b726 	beq	r5,zero,10108048 <_realloc_r+0x310>
10107d6c:	282b883a 	mov	r21,r5
10107d70:	2029883a 	mov	r20,r4
10107d74:	010dfc00 	call	1010dfc0 <__malloc_lock>
10107d78:	a8bfff17 	ldw	r2,-4(r21)
10107d7c:	043fff04 	movi	r16,-4
10107d80:	90c002c4 	addi	r3,r18,11
10107d84:	01000584 	movi	r4,22
10107d88:	acfffe04 	addi	r19,r21,-8
10107d8c:	1420703a 	and	r16,r2,r16
10107d90:	20c0332e 	bgeu	r4,r3,10107e60 <_realloc_r+0x128>
10107d94:	047ffe04 	movi	r17,-8
10107d98:	1c62703a 	and	r17,r3,r17
10107d9c:	8807883a 	mov	r3,r17
10107da0:	88005816 	blt	r17,zero,10107f04 <_realloc_r+0x1cc>
10107da4:	8c805736 	bltu	r17,r18,10107f04 <_realloc_r+0x1cc>
10107da8:	80c0300e 	bge	r16,r3,10107e6c <_realloc_r+0x134>
10107dac:	07040474 	movhi	fp,4113
10107db0:	e7037504 	addi	fp,fp,3540
10107db4:	e1c00217 	ldw	r7,8(fp)
10107db8:	9c09883a 	add	r4,r19,r16
10107dbc:	22000117 	ldw	r8,4(r4)
10107dc0:	21c06326 	beq	r4,r7,10107f50 <_realloc_r+0x218>
10107dc4:	017fff84 	movi	r5,-2
10107dc8:	414a703a 	and	r5,r8,r5
10107dcc:	214b883a 	add	r5,r4,r5
10107dd0:	29800117 	ldw	r6,4(r5)
10107dd4:	3180004c 	andi	r6,r6,1
10107dd8:	30003f26 	beq	r6,zero,10107ed8 <_realloc_r+0x1a0>
10107ddc:	1080004c 	andi	r2,r2,1
10107de0:	10008326 	beq	r2,zero,10107ff0 <_realloc_r+0x2b8>
10107de4:	900b883a 	mov	r5,r18
10107de8:	a009883a 	mov	r4,r20
10107dec:	010610c0 	call	1010610c <_malloc_r>
10107df0:	1025883a 	mov	r18,r2
10107df4:	10011e26 	beq	r2,zero,10108270 <_realloc_r+0x538>
10107df8:	a93fff17 	ldw	r4,-4(r21)
10107dfc:	10fffe04 	addi	r3,r2,-8
10107e00:	00bfff84 	movi	r2,-2
10107e04:	2084703a 	and	r2,r4,r2
10107e08:	9885883a 	add	r2,r19,r2
10107e0c:	1880ee26 	beq	r3,r2,101081c8 <_realloc_r+0x490>
10107e10:	81bfff04 	addi	r6,r16,-4
10107e14:	00800904 	movi	r2,36
10107e18:	1180b836 	bltu	r2,r6,101080fc <_realloc_r+0x3c4>
10107e1c:	00c004c4 	movi	r3,19
10107e20:	19809636 	bltu	r3,r6,1010807c <_realloc_r+0x344>
10107e24:	9005883a 	mov	r2,r18
10107e28:	a807883a 	mov	r3,r21
10107e2c:	19000017 	ldw	r4,0(r3)
10107e30:	11000015 	stw	r4,0(r2)
10107e34:	19000117 	ldw	r4,4(r3)
10107e38:	11000115 	stw	r4,4(r2)
10107e3c:	18c00217 	ldw	r3,8(r3)
10107e40:	10c00215 	stw	r3,8(r2)
10107e44:	a80b883a 	mov	r5,r21
10107e48:	a009883a 	mov	r4,r20
10107e4c:	01055140 	call	10105514 <_free_r>
10107e50:	a009883a 	mov	r4,r20
10107e54:	010dfe40 	call	1010dfe4 <__malloc_unlock>
10107e58:	9005883a 	mov	r2,r18
10107e5c:	00001206 	br	10107ea8 <_realloc_r+0x170>
10107e60:	00c00404 	movi	r3,16
10107e64:	1823883a 	mov	r17,r3
10107e68:	003fce06 	br	10107da4 <__alt_data_end+0xfffe7da4>
10107e6c:	a825883a 	mov	r18,r21
10107e70:	8445c83a 	sub	r2,r16,r17
10107e74:	00c003c4 	movi	r3,15
10107e78:	18802636 	bltu	r3,r2,10107f14 <_realloc_r+0x1dc>
10107e7c:	99800117 	ldw	r6,4(r19)
10107e80:	9c07883a 	add	r3,r19,r16
10107e84:	3180004c 	andi	r6,r6,1
10107e88:	3420b03a 	or	r16,r6,r16
10107e8c:	9c000115 	stw	r16,4(r19)
10107e90:	18800117 	ldw	r2,4(r3)
10107e94:	10800054 	ori	r2,r2,1
10107e98:	18800115 	stw	r2,4(r3)
10107e9c:	a009883a 	mov	r4,r20
10107ea0:	010dfe40 	call	1010dfe4 <__malloc_unlock>
10107ea4:	9005883a 	mov	r2,r18
10107ea8:	dfc00917 	ldw	ra,36(sp)
10107eac:	df000817 	ldw	fp,32(sp)
10107eb0:	ddc00717 	ldw	r23,28(sp)
10107eb4:	dd800617 	ldw	r22,24(sp)
10107eb8:	dd400517 	ldw	r21,20(sp)
10107ebc:	dd000417 	ldw	r20,16(sp)
10107ec0:	dcc00317 	ldw	r19,12(sp)
10107ec4:	dc800217 	ldw	r18,8(sp)
10107ec8:	dc400117 	ldw	r17,4(sp)
10107ecc:	dc000017 	ldw	r16,0(sp)
10107ed0:	dec00a04 	addi	sp,sp,40
10107ed4:	f800283a 	ret
10107ed8:	017fff04 	movi	r5,-4
10107edc:	414a703a 	and	r5,r8,r5
10107ee0:	814d883a 	add	r6,r16,r5
10107ee4:	30c01f16 	blt	r6,r3,10107f64 <_realloc_r+0x22c>
10107ee8:	20800317 	ldw	r2,12(r4)
10107eec:	20c00217 	ldw	r3,8(r4)
10107ef0:	a825883a 	mov	r18,r21
10107ef4:	3021883a 	mov	r16,r6
10107ef8:	18800315 	stw	r2,12(r3)
10107efc:	10c00215 	stw	r3,8(r2)
10107f00:	003fdb06 	br	10107e70 <__alt_data_end+0xfffe7e70>
10107f04:	00800304 	movi	r2,12
10107f08:	a0800015 	stw	r2,0(r20)
10107f0c:	0005883a 	mov	r2,zero
10107f10:	003fe506 	br	10107ea8 <__alt_data_end+0xfffe7ea8>
10107f14:	98c00117 	ldw	r3,4(r19)
10107f18:	9c4b883a 	add	r5,r19,r17
10107f1c:	11000054 	ori	r4,r2,1
10107f20:	18c0004c 	andi	r3,r3,1
10107f24:	1c62b03a 	or	r17,r3,r17
10107f28:	9c400115 	stw	r17,4(r19)
10107f2c:	29000115 	stw	r4,4(r5)
10107f30:	2885883a 	add	r2,r5,r2
10107f34:	10c00117 	ldw	r3,4(r2)
10107f38:	29400204 	addi	r5,r5,8
10107f3c:	a009883a 	mov	r4,r20
10107f40:	18c00054 	ori	r3,r3,1
10107f44:	10c00115 	stw	r3,4(r2)
10107f48:	01055140 	call	10105514 <_free_r>
10107f4c:	003fd306 	br	10107e9c <__alt_data_end+0xfffe7e9c>
10107f50:	017fff04 	movi	r5,-4
10107f54:	414a703a 	and	r5,r8,r5
10107f58:	89800404 	addi	r6,r17,16
10107f5c:	8151883a 	add	r8,r16,r5
10107f60:	4180590e 	bge	r8,r6,101080c8 <_realloc_r+0x390>
10107f64:	1080004c 	andi	r2,r2,1
10107f68:	103f9e1e 	bne	r2,zero,10107de4 <__alt_data_end+0xfffe7de4>
10107f6c:	adbffe17 	ldw	r22,-8(r21)
10107f70:	00bfff04 	movi	r2,-4
10107f74:	9dadc83a 	sub	r22,r19,r22
10107f78:	b1800117 	ldw	r6,4(r22)
10107f7c:	3084703a 	and	r2,r6,r2
10107f80:	20002026 	beq	r4,zero,10108004 <_realloc_r+0x2cc>
10107f84:	80af883a 	add	r23,r16,r2
10107f88:	b96f883a 	add	r23,r23,r5
10107f8c:	21c05f26 	beq	r4,r7,1010810c <_realloc_r+0x3d4>
10107f90:	b8c01c16 	blt	r23,r3,10108004 <_realloc_r+0x2cc>
10107f94:	20800317 	ldw	r2,12(r4)
10107f98:	20c00217 	ldw	r3,8(r4)
10107f9c:	81bfff04 	addi	r6,r16,-4
10107fa0:	01000904 	movi	r4,36
10107fa4:	18800315 	stw	r2,12(r3)
10107fa8:	10c00215 	stw	r3,8(r2)
10107fac:	b0c00217 	ldw	r3,8(r22)
10107fb0:	b0800317 	ldw	r2,12(r22)
10107fb4:	b4800204 	addi	r18,r22,8
10107fb8:	18800315 	stw	r2,12(r3)
10107fbc:	10c00215 	stw	r3,8(r2)
10107fc0:	21801b36 	bltu	r4,r6,10108030 <_realloc_r+0x2f8>
10107fc4:	008004c4 	movi	r2,19
10107fc8:	1180352e 	bgeu	r2,r6,101080a0 <_realloc_r+0x368>
10107fcc:	a8800017 	ldw	r2,0(r21)
10107fd0:	b0800215 	stw	r2,8(r22)
10107fd4:	a8800117 	ldw	r2,4(r21)
10107fd8:	b0800315 	stw	r2,12(r22)
10107fdc:	008006c4 	movi	r2,27
10107fe0:	11807f36 	bltu	r2,r6,101081e0 <_realloc_r+0x4a8>
10107fe4:	b0800404 	addi	r2,r22,16
10107fe8:	ad400204 	addi	r21,r21,8
10107fec:	00002d06 	br	101080a4 <_realloc_r+0x36c>
10107ff0:	adbffe17 	ldw	r22,-8(r21)
10107ff4:	00bfff04 	movi	r2,-4
10107ff8:	9dadc83a 	sub	r22,r19,r22
10107ffc:	b1000117 	ldw	r4,4(r22)
10108000:	2084703a 	and	r2,r4,r2
10108004:	b03f7726 	beq	r22,zero,10107de4 <__alt_data_end+0xfffe7de4>
10108008:	80af883a 	add	r23,r16,r2
1010800c:	b8ff7516 	blt	r23,r3,10107de4 <__alt_data_end+0xfffe7de4>
10108010:	b0800317 	ldw	r2,12(r22)
10108014:	b0c00217 	ldw	r3,8(r22)
10108018:	81bfff04 	addi	r6,r16,-4
1010801c:	01000904 	movi	r4,36
10108020:	18800315 	stw	r2,12(r3)
10108024:	10c00215 	stw	r3,8(r2)
10108028:	b4800204 	addi	r18,r22,8
1010802c:	21bfe52e 	bgeu	r4,r6,10107fc4 <__alt_data_end+0xfffe7fc4>
10108030:	a80b883a 	mov	r5,r21
10108034:	9009883a 	mov	r4,r18
10108038:	01069fc0 	call	101069fc <memmove>
1010803c:	b821883a 	mov	r16,r23
10108040:	b027883a 	mov	r19,r22
10108044:	003f8a06 	br	10107e70 <__alt_data_end+0xfffe7e70>
10108048:	300b883a 	mov	r5,r6
1010804c:	dfc00917 	ldw	ra,36(sp)
10108050:	df000817 	ldw	fp,32(sp)
10108054:	ddc00717 	ldw	r23,28(sp)
10108058:	dd800617 	ldw	r22,24(sp)
1010805c:	dd400517 	ldw	r21,20(sp)
10108060:	dd000417 	ldw	r20,16(sp)
10108064:	dcc00317 	ldw	r19,12(sp)
10108068:	dc800217 	ldw	r18,8(sp)
1010806c:	dc400117 	ldw	r17,4(sp)
10108070:	dc000017 	ldw	r16,0(sp)
10108074:	dec00a04 	addi	sp,sp,40
10108078:	010610c1 	jmpi	1010610c <_malloc_r>
1010807c:	a8c00017 	ldw	r3,0(r21)
10108080:	90c00015 	stw	r3,0(r18)
10108084:	a8c00117 	ldw	r3,4(r21)
10108088:	90c00115 	stw	r3,4(r18)
1010808c:	00c006c4 	movi	r3,27
10108090:	19804536 	bltu	r3,r6,101081a8 <_realloc_r+0x470>
10108094:	90800204 	addi	r2,r18,8
10108098:	a8c00204 	addi	r3,r21,8
1010809c:	003f6306 	br	10107e2c <__alt_data_end+0xfffe7e2c>
101080a0:	9005883a 	mov	r2,r18
101080a4:	a8c00017 	ldw	r3,0(r21)
101080a8:	b821883a 	mov	r16,r23
101080ac:	b027883a 	mov	r19,r22
101080b0:	10c00015 	stw	r3,0(r2)
101080b4:	a8c00117 	ldw	r3,4(r21)
101080b8:	10c00115 	stw	r3,4(r2)
101080bc:	a8c00217 	ldw	r3,8(r21)
101080c0:	10c00215 	stw	r3,8(r2)
101080c4:	003f6a06 	br	10107e70 <__alt_data_end+0xfffe7e70>
101080c8:	9c67883a 	add	r19,r19,r17
101080cc:	4445c83a 	sub	r2,r8,r17
101080d0:	e4c00215 	stw	r19,8(fp)
101080d4:	10800054 	ori	r2,r2,1
101080d8:	98800115 	stw	r2,4(r19)
101080dc:	a8bfff17 	ldw	r2,-4(r21)
101080e0:	a009883a 	mov	r4,r20
101080e4:	1080004c 	andi	r2,r2,1
101080e8:	1462b03a 	or	r17,r2,r17
101080ec:	ac7fff15 	stw	r17,-4(r21)
101080f0:	010dfe40 	call	1010dfe4 <__malloc_unlock>
101080f4:	a805883a 	mov	r2,r21
101080f8:	003f6b06 	br	10107ea8 <__alt_data_end+0xfffe7ea8>
101080fc:	a80b883a 	mov	r5,r21
10108100:	9009883a 	mov	r4,r18
10108104:	01069fc0 	call	101069fc <memmove>
10108108:	003f4e06 	br	10107e44 <__alt_data_end+0xfffe7e44>
1010810c:	89000404 	addi	r4,r17,16
10108110:	b93fbc16 	blt	r23,r4,10108004 <__alt_data_end+0xfffe8004>
10108114:	b0800317 	ldw	r2,12(r22)
10108118:	b0c00217 	ldw	r3,8(r22)
1010811c:	81bfff04 	addi	r6,r16,-4
10108120:	01000904 	movi	r4,36
10108124:	18800315 	stw	r2,12(r3)
10108128:	10c00215 	stw	r3,8(r2)
1010812c:	b4800204 	addi	r18,r22,8
10108130:	21804336 	bltu	r4,r6,10108240 <_realloc_r+0x508>
10108134:	008004c4 	movi	r2,19
10108138:	11803f2e 	bgeu	r2,r6,10108238 <_realloc_r+0x500>
1010813c:	a8800017 	ldw	r2,0(r21)
10108140:	b0800215 	stw	r2,8(r22)
10108144:	a8800117 	ldw	r2,4(r21)
10108148:	b0800315 	stw	r2,12(r22)
1010814c:	008006c4 	movi	r2,27
10108150:	11803f36 	bltu	r2,r6,10108250 <_realloc_r+0x518>
10108154:	b0800404 	addi	r2,r22,16
10108158:	ad400204 	addi	r21,r21,8
1010815c:	a8c00017 	ldw	r3,0(r21)
10108160:	10c00015 	stw	r3,0(r2)
10108164:	a8c00117 	ldw	r3,4(r21)
10108168:	10c00115 	stw	r3,4(r2)
1010816c:	a8c00217 	ldw	r3,8(r21)
10108170:	10c00215 	stw	r3,8(r2)
10108174:	b447883a 	add	r3,r22,r17
10108178:	bc45c83a 	sub	r2,r23,r17
1010817c:	e0c00215 	stw	r3,8(fp)
10108180:	10800054 	ori	r2,r2,1
10108184:	18800115 	stw	r2,4(r3)
10108188:	b0800117 	ldw	r2,4(r22)
1010818c:	a009883a 	mov	r4,r20
10108190:	1080004c 	andi	r2,r2,1
10108194:	1462b03a 	or	r17,r2,r17
10108198:	b4400115 	stw	r17,4(r22)
1010819c:	010dfe40 	call	1010dfe4 <__malloc_unlock>
101081a0:	9005883a 	mov	r2,r18
101081a4:	003f4006 	br	10107ea8 <__alt_data_end+0xfffe7ea8>
101081a8:	a8c00217 	ldw	r3,8(r21)
101081ac:	90c00215 	stw	r3,8(r18)
101081b0:	a8c00317 	ldw	r3,12(r21)
101081b4:	90c00315 	stw	r3,12(r18)
101081b8:	30801126 	beq	r6,r2,10108200 <_realloc_r+0x4c8>
101081bc:	90800404 	addi	r2,r18,16
101081c0:	a8c00404 	addi	r3,r21,16
101081c4:	003f1906 	br	10107e2c <__alt_data_end+0xfffe7e2c>
101081c8:	90ffff17 	ldw	r3,-4(r18)
101081cc:	00bfff04 	movi	r2,-4
101081d0:	a825883a 	mov	r18,r21
101081d4:	1884703a 	and	r2,r3,r2
101081d8:	80a1883a 	add	r16,r16,r2
101081dc:	003f2406 	br	10107e70 <__alt_data_end+0xfffe7e70>
101081e0:	a8800217 	ldw	r2,8(r21)
101081e4:	b0800415 	stw	r2,16(r22)
101081e8:	a8800317 	ldw	r2,12(r21)
101081ec:	b0800515 	stw	r2,20(r22)
101081f0:	31000a26 	beq	r6,r4,1010821c <_realloc_r+0x4e4>
101081f4:	b0800604 	addi	r2,r22,24
101081f8:	ad400404 	addi	r21,r21,16
101081fc:	003fa906 	br	101080a4 <__alt_data_end+0xfffe80a4>
10108200:	a9000417 	ldw	r4,16(r21)
10108204:	90800604 	addi	r2,r18,24
10108208:	a8c00604 	addi	r3,r21,24
1010820c:	91000415 	stw	r4,16(r18)
10108210:	a9000517 	ldw	r4,20(r21)
10108214:	91000515 	stw	r4,20(r18)
10108218:	003f0406 	br	10107e2c <__alt_data_end+0xfffe7e2c>
1010821c:	a8c00417 	ldw	r3,16(r21)
10108220:	ad400604 	addi	r21,r21,24
10108224:	b0800804 	addi	r2,r22,32
10108228:	b0c00615 	stw	r3,24(r22)
1010822c:	a8ffff17 	ldw	r3,-4(r21)
10108230:	b0c00715 	stw	r3,28(r22)
10108234:	003f9b06 	br	101080a4 <__alt_data_end+0xfffe80a4>
10108238:	9005883a 	mov	r2,r18
1010823c:	003fc706 	br	1010815c <__alt_data_end+0xfffe815c>
10108240:	a80b883a 	mov	r5,r21
10108244:	9009883a 	mov	r4,r18
10108248:	01069fc0 	call	101069fc <memmove>
1010824c:	003fc906 	br	10108174 <__alt_data_end+0xfffe8174>
10108250:	a8800217 	ldw	r2,8(r21)
10108254:	b0800415 	stw	r2,16(r22)
10108258:	a8800317 	ldw	r2,12(r21)
1010825c:	b0800515 	stw	r2,20(r22)
10108260:	31000726 	beq	r6,r4,10108280 <_realloc_r+0x548>
10108264:	b0800604 	addi	r2,r22,24
10108268:	ad400404 	addi	r21,r21,16
1010826c:	003fbb06 	br	1010815c <__alt_data_end+0xfffe815c>
10108270:	a009883a 	mov	r4,r20
10108274:	010dfe40 	call	1010dfe4 <__malloc_unlock>
10108278:	0005883a 	mov	r2,zero
1010827c:	003f0a06 	br	10107ea8 <__alt_data_end+0xfffe7ea8>
10108280:	a8c00417 	ldw	r3,16(r21)
10108284:	ad400604 	addi	r21,r21,24
10108288:	b0800804 	addi	r2,r22,32
1010828c:	b0c00615 	stw	r3,24(r22)
10108290:	a8ffff17 	ldw	r3,-4(r21)
10108294:	b0c00715 	stw	r3,28(r22)
10108298:	003fb006 	br	1010815c <__alt_data_end+0xfffe815c>

1010829c <__fpclassifyd>:
1010829c:	00a00034 	movhi	r2,32768
101082a0:	10bfffc4 	addi	r2,r2,-1
101082a4:	2884703a 	and	r2,r5,r2
101082a8:	10000726 	beq	r2,zero,101082c8 <__fpclassifyd+0x2c>
101082ac:	00fffc34 	movhi	r3,65520
101082b0:	019ff834 	movhi	r6,32736
101082b4:	28c7883a 	add	r3,r5,r3
101082b8:	31bfffc4 	addi	r6,r6,-1
101082bc:	30c00536 	bltu	r6,r3,101082d4 <__fpclassifyd+0x38>
101082c0:	00800104 	movi	r2,4
101082c4:	f800283a 	ret
101082c8:	2000021e 	bne	r4,zero,101082d4 <__fpclassifyd+0x38>
101082cc:	00800084 	movi	r2,2
101082d0:	f800283a 	ret
101082d4:	00dffc34 	movhi	r3,32752
101082d8:	019ff834 	movhi	r6,32736
101082dc:	28cb883a 	add	r5,r5,r3
101082e0:	31bfffc4 	addi	r6,r6,-1
101082e4:	317ff62e 	bgeu	r6,r5,101082c0 <__alt_data_end+0xfffe82c0>
101082e8:	01400434 	movhi	r5,16
101082ec:	297fffc4 	addi	r5,r5,-1
101082f0:	28800236 	bltu	r5,r2,101082fc <__fpclassifyd+0x60>
101082f4:	008000c4 	movi	r2,3
101082f8:	f800283a 	ret
101082fc:	10c00226 	beq	r2,r3,10108308 <__fpclassifyd+0x6c>
10108300:	0005883a 	mov	r2,zero
10108304:	f800283a 	ret
10108308:	2005003a 	cmpeq	r2,r4,zero
1010830c:	f800283a 	ret

10108310 <_sbrk_r>:
10108310:	defffd04 	addi	sp,sp,-12
10108314:	dc000015 	stw	r16,0(sp)
10108318:	04040474 	movhi	r16,4113
1010831c:	dc400115 	stw	r17,4(sp)
10108320:	84100204 	addi	r16,r16,16392
10108324:	2023883a 	mov	r17,r4
10108328:	2809883a 	mov	r4,r5
1010832c:	dfc00215 	stw	ra,8(sp)
10108330:	80000015 	stw	zero,0(r16)
10108334:	010e1cc0 	call	1010e1cc <sbrk>
10108338:	00ffffc4 	movi	r3,-1
1010833c:	10c00526 	beq	r2,r3,10108354 <_sbrk_r+0x44>
10108340:	dfc00217 	ldw	ra,8(sp)
10108344:	dc400117 	ldw	r17,4(sp)
10108348:	dc000017 	ldw	r16,0(sp)
1010834c:	dec00304 	addi	sp,sp,12
10108350:	f800283a 	ret
10108354:	80c00017 	ldw	r3,0(r16)
10108358:	183ff926 	beq	r3,zero,10108340 <__alt_data_end+0xfffe8340>
1010835c:	88c00015 	stw	r3,0(r17)
10108360:	003ff706 	br	10108340 <__alt_data_end+0xfffe8340>

10108364 <__sread>:
10108364:	defffe04 	addi	sp,sp,-8
10108368:	dc000015 	stw	r16,0(sp)
1010836c:	2821883a 	mov	r16,r5
10108370:	2940038f 	ldh	r5,14(r5)
10108374:	dfc00115 	stw	ra,4(sp)
10108378:	010a2200 	call	1010a220 <_read_r>
1010837c:	10000716 	blt	r2,zero,1010839c <__sread+0x38>
10108380:	80c01417 	ldw	r3,80(r16)
10108384:	1887883a 	add	r3,r3,r2
10108388:	80c01415 	stw	r3,80(r16)
1010838c:	dfc00117 	ldw	ra,4(sp)
10108390:	dc000017 	ldw	r16,0(sp)
10108394:	dec00204 	addi	sp,sp,8
10108398:	f800283a 	ret
1010839c:	80c0030b 	ldhu	r3,12(r16)
101083a0:	18fbffcc 	andi	r3,r3,61439
101083a4:	80c0030d 	sth	r3,12(r16)
101083a8:	dfc00117 	ldw	ra,4(sp)
101083ac:	dc000017 	ldw	r16,0(sp)
101083b0:	dec00204 	addi	sp,sp,8
101083b4:	f800283a 	ret

101083b8 <__seofread>:
101083b8:	0005883a 	mov	r2,zero
101083bc:	f800283a 	ret

101083c0 <__swrite>:
101083c0:	2880030b 	ldhu	r2,12(r5)
101083c4:	defffb04 	addi	sp,sp,-20
101083c8:	dcc00315 	stw	r19,12(sp)
101083cc:	dc800215 	stw	r18,8(sp)
101083d0:	dc400115 	stw	r17,4(sp)
101083d4:	dc000015 	stw	r16,0(sp)
101083d8:	dfc00415 	stw	ra,16(sp)
101083dc:	10c0400c 	andi	r3,r2,256
101083e0:	2821883a 	mov	r16,r5
101083e4:	2023883a 	mov	r17,r4
101083e8:	3025883a 	mov	r18,r6
101083ec:	3827883a 	mov	r19,r7
101083f0:	18000526 	beq	r3,zero,10108408 <__swrite+0x48>
101083f4:	2940038f 	ldh	r5,14(r5)
101083f8:	01c00084 	movi	r7,2
101083fc:	000d883a 	mov	r6,zero
10108400:	010a1c00 	call	1010a1c0 <_lseek_r>
10108404:	8080030b 	ldhu	r2,12(r16)
10108408:	8140038f 	ldh	r5,14(r16)
1010840c:	10bbffcc 	andi	r2,r2,61439
10108410:	980f883a 	mov	r7,r19
10108414:	900d883a 	mov	r6,r18
10108418:	8809883a 	mov	r4,r17
1010841c:	8080030d 	sth	r2,12(r16)
10108420:	dfc00417 	ldw	ra,16(sp)
10108424:	dcc00317 	ldw	r19,12(sp)
10108428:	dc800217 	ldw	r18,8(sp)
1010842c:	dc400117 	ldw	r17,4(sp)
10108430:	dc000017 	ldw	r16,0(sp)
10108434:	dec00504 	addi	sp,sp,20
10108438:	0109c741 	jmpi	10109c74 <_write_r>

1010843c <__sseek>:
1010843c:	defffe04 	addi	sp,sp,-8
10108440:	dc000015 	stw	r16,0(sp)
10108444:	2821883a 	mov	r16,r5
10108448:	2940038f 	ldh	r5,14(r5)
1010844c:	dfc00115 	stw	ra,4(sp)
10108450:	010a1c00 	call	1010a1c0 <_lseek_r>
10108454:	00ffffc4 	movi	r3,-1
10108458:	10c00826 	beq	r2,r3,1010847c <__sseek+0x40>
1010845c:	80c0030b 	ldhu	r3,12(r16)
10108460:	80801415 	stw	r2,80(r16)
10108464:	18c40014 	ori	r3,r3,4096
10108468:	80c0030d 	sth	r3,12(r16)
1010846c:	dfc00117 	ldw	ra,4(sp)
10108470:	dc000017 	ldw	r16,0(sp)
10108474:	dec00204 	addi	sp,sp,8
10108478:	f800283a 	ret
1010847c:	80c0030b 	ldhu	r3,12(r16)
10108480:	18fbffcc 	andi	r3,r3,61439
10108484:	80c0030d 	sth	r3,12(r16)
10108488:	dfc00117 	ldw	ra,4(sp)
1010848c:	dc000017 	ldw	r16,0(sp)
10108490:	dec00204 	addi	sp,sp,8
10108494:	f800283a 	ret

10108498 <__sclose>:
10108498:	2940038f 	ldh	r5,14(r5)
1010849c:	0109cd41 	jmpi	10109cd4 <_close_r>

101084a0 <strcmp>:
101084a0:	2144b03a 	or	r2,r4,r5
101084a4:	108000cc 	andi	r2,r2,3
101084a8:	1000171e 	bne	r2,zero,10108508 <strcmp+0x68>
101084ac:	20800017 	ldw	r2,0(r4)
101084b0:	28c00017 	ldw	r3,0(r5)
101084b4:	10c0141e 	bne	r2,r3,10108508 <strcmp+0x68>
101084b8:	027fbff4 	movhi	r9,65279
101084bc:	4a7fbfc4 	addi	r9,r9,-257
101084c0:	0086303a 	nor	r3,zero,r2
101084c4:	02202074 	movhi	r8,32897
101084c8:	1245883a 	add	r2,r2,r9
101084cc:	42202004 	addi	r8,r8,-32640
101084d0:	10c4703a 	and	r2,r2,r3
101084d4:	1204703a 	and	r2,r2,r8
101084d8:	10000226 	beq	r2,zero,101084e4 <strcmp+0x44>
101084dc:	00002306 	br	1010856c <strcmp+0xcc>
101084e0:	1000221e 	bne	r2,zero,1010856c <strcmp+0xcc>
101084e4:	21000104 	addi	r4,r4,4
101084e8:	20c00017 	ldw	r3,0(r4)
101084ec:	29400104 	addi	r5,r5,4
101084f0:	29800017 	ldw	r6,0(r5)
101084f4:	1a4f883a 	add	r7,r3,r9
101084f8:	00c4303a 	nor	r2,zero,r3
101084fc:	3884703a 	and	r2,r7,r2
10108500:	1204703a 	and	r2,r2,r8
10108504:	19bff626 	beq	r3,r6,101084e0 <__alt_data_end+0xfffe84e0>
10108508:	20800003 	ldbu	r2,0(r4)
1010850c:	10c03fcc 	andi	r3,r2,255
10108510:	18c0201c 	xori	r3,r3,128
10108514:	18ffe004 	addi	r3,r3,-128
10108518:	18000c26 	beq	r3,zero,1010854c <strcmp+0xac>
1010851c:	29800007 	ldb	r6,0(r5)
10108520:	19800326 	beq	r3,r6,10108530 <strcmp+0x90>
10108524:	00001306 	br	10108574 <strcmp+0xd4>
10108528:	29800007 	ldb	r6,0(r5)
1010852c:	11800b1e 	bne	r2,r6,1010855c <strcmp+0xbc>
10108530:	21000044 	addi	r4,r4,1
10108534:	20c00003 	ldbu	r3,0(r4)
10108538:	29400044 	addi	r5,r5,1
1010853c:	18803fcc 	andi	r2,r3,255
10108540:	1080201c 	xori	r2,r2,128
10108544:	10bfe004 	addi	r2,r2,-128
10108548:	103ff71e 	bne	r2,zero,10108528 <__alt_data_end+0xfffe8528>
1010854c:	0007883a 	mov	r3,zero
10108550:	28800003 	ldbu	r2,0(r5)
10108554:	1885c83a 	sub	r2,r3,r2
10108558:	f800283a 	ret
1010855c:	28800003 	ldbu	r2,0(r5)
10108560:	18c03fcc 	andi	r3,r3,255
10108564:	1885c83a 	sub	r2,r3,r2
10108568:	f800283a 	ret
1010856c:	0005883a 	mov	r2,zero
10108570:	f800283a 	ret
10108574:	10c03fcc 	andi	r3,r2,255
10108578:	003ff506 	br	10108550 <__alt_data_end+0xfffe8550>

1010857c <__sprint_r.part.0>:
1010857c:	28801917 	ldw	r2,100(r5)
10108580:	defff604 	addi	sp,sp,-40
10108584:	dd400515 	stw	r21,20(sp)
10108588:	dfc00915 	stw	ra,36(sp)
1010858c:	df000815 	stw	fp,32(sp)
10108590:	ddc00715 	stw	r23,28(sp)
10108594:	dd800615 	stw	r22,24(sp)
10108598:	dd000415 	stw	r20,16(sp)
1010859c:	dcc00315 	stw	r19,12(sp)
101085a0:	dc800215 	stw	r18,8(sp)
101085a4:	dc400115 	stw	r17,4(sp)
101085a8:	dc000015 	stw	r16,0(sp)
101085ac:	1088000c 	andi	r2,r2,8192
101085b0:	302b883a 	mov	r21,r6
101085b4:	10002e26 	beq	r2,zero,10108670 <__sprint_r.part.0+0xf4>
101085b8:	30800217 	ldw	r2,8(r6)
101085bc:	35800017 	ldw	r22,0(r6)
101085c0:	10002926 	beq	r2,zero,10108668 <__sprint_r.part.0+0xec>
101085c4:	2827883a 	mov	r19,r5
101085c8:	2029883a 	mov	r20,r4
101085cc:	b5c00104 	addi	r23,r22,4
101085d0:	04bfffc4 	movi	r18,-1
101085d4:	bc400017 	ldw	r17,0(r23)
101085d8:	b4000017 	ldw	r16,0(r22)
101085dc:	0039883a 	mov	fp,zero
101085e0:	8822d0ba 	srli	r17,r17,2
101085e4:	8800031e 	bne	r17,zero,101085f4 <__sprint_r.part.0+0x78>
101085e8:	00001806 	br	1010864c <__sprint_r.part.0+0xd0>
101085ec:	84000104 	addi	r16,r16,4
101085f0:	8f001526 	beq	r17,fp,10108648 <__sprint_r.part.0+0xcc>
101085f4:	81400017 	ldw	r5,0(r16)
101085f8:	980d883a 	mov	r6,r19
101085fc:	a009883a 	mov	r4,r20
10108600:	010a06c0 	call	1010a06c <_fputwc_r>
10108604:	e7000044 	addi	fp,fp,1
10108608:	14bff81e 	bne	r2,r18,101085ec <__alt_data_end+0xfffe85ec>
1010860c:	9005883a 	mov	r2,r18
10108610:	a8000215 	stw	zero,8(r21)
10108614:	a8000115 	stw	zero,4(r21)
10108618:	dfc00917 	ldw	ra,36(sp)
1010861c:	df000817 	ldw	fp,32(sp)
10108620:	ddc00717 	ldw	r23,28(sp)
10108624:	dd800617 	ldw	r22,24(sp)
10108628:	dd400517 	ldw	r21,20(sp)
1010862c:	dd000417 	ldw	r20,16(sp)
10108630:	dcc00317 	ldw	r19,12(sp)
10108634:	dc800217 	ldw	r18,8(sp)
10108638:	dc400117 	ldw	r17,4(sp)
1010863c:	dc000017 	ldw	r16,0(sp)
10108640:	dec00a04 	addi	sp,sp,40
10108644:	f800283a 	ret
10108648:	a8800217 	ldw	r2,8(r21)
1010864c:	8c63883a 	add	r17,r17,r17
10108650:	8c63883a 	add	r17,r17,r17
10108654:	1445c83a 	sub	r2,r2,r17
10108658:	a8800215 	stw	r2,8(r21)
1010865c:	b5800204 	addi	r22,r22,8
10108660:	bdc00204 	addi	r23,r23,8
10108664:	103fdb1e 	bne	r2,zero,101085d4 <__alt_data_end+0xfffe85d4>
10108668:	0005883a 	mov	r2,zero
1010866c:	003fe806 	br	10108610 <__alt_data_end+0xfffe8610>
10108670:	01058240 	call	10105824 <__sfvwrite_r>
10108674:	003fe606 	br	10108610 <__alt_data_end+0xfffe8610>

10108678 <__sprint_r>:
10108678:	30c00217 	ldw	r3,8(r6)
1010867c:	18000126 	beq	r3,zero,10108684 <__sprint_r+0xc>
10108680:	010857c1 	jmpi	1010857c <__sprint_r.part.0>
10108684:	30000115 	stw	zero,4(r6)
10108688:	0005883a 	mov	r2,zero
1010868c:	f800283a 	ret

10108690 <___vfiprintf_internal_r>:
10108690:	deffca04 	addi	sp,sp,-216
10108694:	dd403115 	stw	r21,196(sp)
10108698:	dfc03515 	stw	ra,212(sp)
1010869c:	df003415 	stw	fp,208(sp)
101086a0:	ddc03315 	stw	r23,204(sp)
101086a4:	dd803215 	stw	r22,200(sp)
101086a8:	dd003015 	stw	r20,192(sp)
101086ac:	dcc02f15 	stw	r19,188(sp)
101086b0:	dc802e15 	stw	r18,184(sp)
101086b4:	dc402d15 	stw	r17,180(sp)
101086b8:	dc002c15 	stw	r16,176(sp)
101086bc:	d9002115 	stw	r4,132(sp)
101086c0:	d9402015 	stw	r5,128(sp)
101086c4:	d9c02215 	stw	r7,136(sp)
101086c8:	302b883a 	mov	r21,r6
101086cc:	20000226 	beq	r4,zero,101086d8 <___vfiprintf_internal_r+0x48>
101086d0:	20800e17 	ldw	r2,56(r4)
101086d4:	1000cf26 	beq	r2,zero,10108a14 <___vfiprintf_internal_r+0x384>
101086d8:	d8c02017 	ldw	r3,128(sp)
101086dc:	1880030b 	ldhu	r2,12(r3)
101086e0:	10c8000c 	andi	r3,r2,8192
101086e4:	1800071e 	bne	r3,zero,10108704 <___vfiprintf_internal_r+0x74>
101086e8:	d9402017 	ldw	r5,128(sp)
101086ec:	00f7ffc4 	movi	r3,-8193
101086f0:	10880014 	ori	r2,r2,8192
101086f4:	29001917 	ldw	r4,100(r5)
101086f8:	2880030d 	sth	r2,12(r5)
101086fc:	20c6703a 	and	r3,r4,r3
10108700:	28c01915 	stw	r3,100(r5)
10108704:	10c0020c 	andi	r3,r2,8
10108708:	1800a526 	beq	r3,zero,101089a0 <___vfiprintf_internal_r+0x310>
1010870c:	d9002017 	ldw	r4,128(sp)
10108710:	20c00417 	ldw	r3,16(r4)
10108714:	1800a226 	beq	r3,zero,101089a0 <___vfiprintf_internal_r+0x310>
10108718:	1080068c 	andi	r2,r2,26
1010871c:	00c00284 	movi	r3,10
10108720:	10c0a826 	beq	r2,r3,101089c4 <___vfiprintf_internal_r+0x334>
10108724:	d9001a04 	addi	r4,sp,104
10108728:	d94019c4 	addi	r5,sp,103
1010872c:	04840474 	movhi	r18,4113
10108730:	2145c83a 	sub	r2,r4,r5
10108734:	9481f604 	addi	r18,r18,2008
10108738:	d9001e15 	stw	r4,120(sp)
1010873c:	d9401f15 	stw	r5,124(sp)
10108740:	dec01a15 	stw	sp,104(sp)
10108744:	d8001c15 	stw	zero,112(sp)
10108748:	d8001b15 	stw	zero,108(sp)
1010874c:	d811883a 	mov	r8,sp
10108750:	d8002615 	stw	zero,152(sp)
10108754:	d8002415 	stw	zero,144(sp)
10108758:	d8802815 	stw	r2,160(sp)
1010875c:	a82d883a 	mov	r22,r21
10108760:	b0800007 	ldb	r2,0(r22)
10108764:	10040d26 	beq	r2,zero,1010979c <___vfiprintf_internal_r+0x110c>
10108768:	00c00944 	movi	r3,37
1010876c:	b029883a 	mov	r20,r22
10108770:	10c0021e 	bne	r2,r3,1010877c <___vfiprintf_internal_r+0xec>
10108774:	00001606 	br	101087d0 <___vfiprintf_internal_r+0x140>
10108778:	10c00326 	beq	r2,r3,10108788 <___vfiprintf_internal_r+0xf8>
1010877c:	a5000044 	addi	r20,r20,1
10108780:	a0800007 	ldb	r2,0(r20)
10108784:	103ffc1e 	bne	r2,zero,10108778 <__alt_data_end+0xfffe8778>
10108788:	a5a1c83a 	sub	r16,r20,r22
1010878c:	80001026 	beq	r16,zero,101087d0 <___vfiprintf_internal_r+0x140>
10108790:	d8c01c17 	ldw	r3,112(sp)
10108794:	d8801b17 	ldw	r2,108(sp)
10108798:	45800015 	stw	r22,0(r8)
1010879c:	80c7883a 	add	r3,r16,r3
101087a0:	10800044 	addi	r2,r2,1
101087a4:	44000115 	stw	r16,4(r8)
101087a8:	d8c01c15 	stw	r3,112(sp)
101087ac:	d8801b15 	stw	r2,108(sp)
101087b0:	010001c4 	movi	r4,7
101087b4:	2080750e 	bge	r4,r2,1010898c <___vfiprintf_internal_r+0x2fc>
101087b8:	1803951e 	bne	r3,zero,10109610 <___vfiprintf_internal_r+0xf80>
101087bc:	d8c02417 	ldw	r3,144(sp)
101087c0:	d8001b15 	stw	zero,108(sp)
101087c4:	d811883a 	mov	r8,sp
101087c8:	1c07883a 	add	r3,r3,r16
101087cc:	d8c02415 	stw	r3,144(sp)
101087d0:	a0800007 	ldb	r2,0(r20)
101087d4:	1002e026 	beq	r2,zero,10109358 <___vfiprintf_internal_r+0xcc8>
101087d8:	a5800044 	addi	r22,r20,1
101087dc:	a0c00047 	ldb	r3,1(r20)
101087e0:	d8001d85 	stb	zero,118(sp)
101087e4:	0027883a 	mov	r19,zero
101087e8:	d8002305 	stb	zero,140(sp)
101087ec:	043fffc4 	movi	r16,-1
101087f0:	d8002515 	stw	zero,148(sp)
101087f4:	0023883a 	mov	r17,zero
101087f8:	05001604 	movi	r20,88
101087fc:	05400244 	movi	r21,9
10108800:	402f883a 	mov	r23,r8
10108804:	b5800044 	addi	r22,r22,1
10108808:	18bff804 	addi	r2,r3,-32
1010880c:	a0827736 	bltu	r20,r2,101091ec <___vfiprintf_internal_r+0xb5c>
10108810:	100490ba 	slli	r2,r2,2
10108814:	01040474 	movhi	r4,4113
10108818:	21220a04 	addi	r4,r4,-30680
1010881c:	1105883a 	add	r2,r2,r4
10108820:	10800017 	ldw	r2,0(r2)
10108824:	1000683a 	jmp	r2
10108828:	10108eec 	andhi	zero,r2,16955
1010882c:	101091ec 	andhi	zero,r2,16967
10108830:	101091ec 	andhi	zero,r2,16967
10108834:	10108f08 	cmpgei	zero,r2,16956
10108838:	101091ec 	andhi	zero,r2,16967
1010883c:	101091ec 	andhi	zero,r2,16967
10108840:	101091ec 	andhi	zero,r2,16967
10108844:	101091ec 	andhi	zero,r2,16967
10108848:	101091ec 	andhi	zero,r2,16967
1010884c:	101091ec 	andhi	zero,r2,16967
10108850:	10109110 	cmplti	zero,r2,16964
10108854:	10109134 	orhi	zero,r2,16964
10108858:	101091ec 	andhi	zero,r2,16967
1010885c:	10108a2c 	andhi	zero,r2,16936
10108860:	10109148 	cmpgei	zero,r2,16965
10108864:	101091ec 	andhi	zero,r2,16967
10108868:	10108f14 	ori	zero,r2,16956
1010886c:	10108f20 	cmpeqi	zero,r2,16956
10108870:	10108f20 	cmpeqi	zero,r2,16956
10108874:	10108f20 	cmpeqi	zero,r2,16956
10108878:	10108f20 	cmpeqi	zero,r2,16956
1010887c:	10108f20 	cmpeqi	zero,r2,16956
10108880:	10108f20 	cmpeqi	zero,r2,16956
10108884:	10108f20 	cmpeqi	zero,r2,16956
10108888:	10108f20 	cmpeqi	zero,r2,16956
1010888c:	10108f20 	cmpeqi	zero,r2,16956
10108890:	101091ec 	andhi	zero,r2,16967
10108894:	101091ec 	andhi	zero,r2,16967
10108898:	101091ec 	andhi	zero,r2,16967
1010889c:	101091ec 	andhi	zero,r2,16967
101088a0:	101091ec 	andhi	zero,r2,16967
101088a4:	101091ec 	andhi	zero,r2,16967
101088a8:	101091ec 	andhi	zero,r2,16967
101088ac:	101091ec 	andhi	zero,r2,16967
101088b0:	101091ec 	andhi	zero,r2,16967
101088b4:	101091ec 	andhi	zero,r2,16967
101088b8:	10108f60 	cmpeqi	zero,r2,16957
101088bc:	101091ec 	andhi	zero,r2,16967
101088c0:	101091ec 	andhi	zero,r2,16967
101088c4:	101091ec 	andhi	zero,r2,16967
101088c8:	101091ec 	andhi	zero,r2,16967
101088cc:	101091ec 	andhi	zero,r2,16967
101088d0:	101091ec 	andhi	zero,r2,16967
101088d4:	101091ec 	andhi	zero,r2,16967
101088d8:	101091ec 	andhi	zero,r2,16967
101088dc:	101091ec 	andhi	zero,r2,16967
101088e0:	101091ec 	andhi	zero,r2,16967
101088e4:	10108f9c 	xori	zero,r2,16958
101088e8:	101091ec 	andhi	zero,r2,16967
101088ec:	101091ec 	andhi	zero,r2,16967
101088f0:	101091ec 	andhi	zero,r2,16967
101088f4:	101091ec 	andhi	zero,r2,16967
101088f8:	101091ec 	andhi	zero,r2,16967
101088fc:	10108ff8 	rdprs	zero,r2,16959
10108900:	101091ec 	andhi	zero,r2,16967
10108904:	101091ec 	andhi	zero,r2,16967
10108908:	1010906c 	andhi	zero,r2,16961
1010890c:	101091ec 	andhi	zero,r2,16967
10108910:	101091ec 	andhi	zero,r2,16967
10108914:	101091ec 	andhi	zero,r2,16967
10108918:	101091ec 	andhi	zero,r2,16967
1010891c:	101091ec 	andhi	zero,r2,16967
10108920:	101091ec 	andhi	zero,r2,16967
10108924:	101091ec 	andhi	zero,r2,16967
10108928:	101091ec 	andhi	zero,r2,16967
1010892c:	101091ec 	andhi	zero,r2,16967
10108930:	101091ec 	andhi	zero,r2,16967
10108934:	10108e14 	ori	zero,r2,16952
10108938:	10108e44 	addi	zero,r2,16953
1010893c:	101091ec 	andhi	zero,r2,16967
10108940:	101091ec 	andhi	zero,r2,16967
10108944:	101091ec 	andhi	zero,r2,16967
10108948:	10109194 	ori	zero,r2,16966
1010894c:	10108e44 	addi	zero,r2,16953
10108950:	101091ec 	andhi	zero,r2,16967
10108954:	101091ec 	andhi	zero,r2,16967
10108958:	10108cec 	andhi	zero,r2,16947
1010895c:	101091ec 	andhi	zero,r2,16967
10108960:	10108d00 	call	110108d0 <__alt_data_end+0xef08d0>
10108964:	10108d38 	rdprs	zero,r2,16948
10108968:	10108a38 	rdprs	zero,r2,16936
1010896c:	10108ce0 	cmpeqi	zero,r2,16947
10108970:	101091ec 	andhi	zero,r2,16967
10108974:	101090ac 	andhi	zero,r2,16962
10108978:	101091ec 	andhi	zero,r2,16967
1010897c:	101090f8 	rdprs	zero,r2,16963
10108980:	101091ec 	andhi	zero,r2,16967
10108984:	101091ec 	andhi	zero,r2,16967
10108988:	10108dbc 	xorhi	zero,r2,16950
1010898c:	42000204 	addi	r8,r8,8
10108990:	d8c02417 	ldw	r3,144(sp)
10108994:	1c07883a 	add	r3,r3,r16
10108998:	d8c02415 	stw	r3,144(sp)
1010899c:	003f8c06 	br	101087d0 <__alt_data_end+0xfffe87d0>
101089a0:	d9402017 	ldw	r5,128(sp)
101089a4:	d9002117 	ldw	r4,132(sp)
101089a8:	01033940 	call	10103394 <__swsetup_r>
101089ac:	1003c11e 	bne	r2,zero,101098b4 <___vfiprintf_internal_r+0x1224>
101089b0:	d9402017 	ldw	r5,128(sp)
101089b4:	00c00284 	movi	r3,10
101089b8:	2880030b 	ldhu	r2,12(r5)
101089bc:	1080068c 	andi	r2,r2,26
101089c0:	10ff581e 	bne	r2,r3,10108724 <__alt_data_end+0xfffe8724>
101089c4:	d8c02017 	ldw	r3,128(sp)
101089c8:	1880038f 	ldh	r2,14(r3)
101089cc:	103f5516 	blt	r2,zero,10108724 <__alt_data_end+0xfffe8724>
101089d0:	d9c02217 	ldw	r7,136(sp)
101089d4:	d9002117 	ldw	r4,132(sp)
101089d8:	a80d883a 	mov	r6,r21
101089dc:	180b883a 	mov	r5,r3
101089e0:	0109bb80 	call	10109bb8 <__sbprintf>
101089e4:	dfc03517 	ldw	ra,212(sp)
101089e8:	df003417 	ldw	fp,208(sp)
101089ec:	ddc03317 	ldw	r23,204(sp)
101089f0:	dd803217 	ldw	r22,200(sp)
101089f4:	dd403117 	ldw	r21,196(sp)
101089f8:	dd003017 	ldw	r20,192(sp)
101089fc:	dcc02f17 	ldw	r19,188(sp)
10108a00:	dc802e17 	ldw	r18,184(sp)
10108a04:	dc402d17 	ldw	r17,180(sp)
10108a08:	dc002c17 	ldw	r16,176(sp)
10108a0c:	dec03604 	addi	sp,sp,216
10108a10:	f800283a 	ret
10108a14:	01053a00 	call	101053a0 <__sinit>
10108a18:	003f2f06 	br	101086d8 <__alt_data_end+0xfffe86d8>
10108a1c:	d8c02517 	ldw	r3,148(sp)
10108a20:	d8802215 	stw	r2,136(sp)
10108a24:	00c7c83a 	sub	r3,zero,r3
10108a28:	d8c02515 	stw	r3,148(sp)
10108a2c:	8c400114 	ori	r17,r17,4
10108a30:	b0c00007 	ldb	r3,0(r22)
10108a34:	003f7306 	br	10108804 <__alt_data_end+0xfffe8804>
10108a38:	00800c04 	movi	r2,48
10108a3c:	d9402217 	ldw	r5,136(sp)
10108a40:	d8801d05 	stb	r2,116(sp)
10108a44:	00801e04 	movi	r2,120
10108a48:	d8801d45 	stb	r2,117(sp)
10108a4c:	d8001d85 	stb	zero,118(sp)
10108a50:	b811883a 	mov	r8,r23
10108a54:	28c00104 	addi	r3,r5,4
10108a58:	2cc00017 	ldw	r19,0(r5)
10108a5c:	0029883a 	mov	r20,zero
10108a60:	88800094 	ori	r2,r17,2
10108a64:	80032516 	blt	r16,zero,101096fc <___vfiprintf_internal_r+0x106c>
10108a68:	00bfdfc4 	movi	r2,-129
10108a6c:	88a2703a 	and	r17,r17,r2
10108a70:	d8c02215 	stw	r3,136(sp)
10108a74:	8c400094 	ori	r17,r17,2
10108a78:	98032a1e 	bne	r19,zero,10109724 <___vfiprintf_internal_r+0x1094>
10108a7c:	00840474 	movhi	r2,4113
10108a80:	10819504 	addi	r2,r2,1620
10108a84:	d8802615 	stw	r2,152(sp)
10108a88:	002b883a 	mov	r21,zero
10108a8c:	8001741e 	bne	r16,zero,10109060 <___vfiprintf_internal_r+0x9d0>
10108a90:	0021883a 	mov	r16,zero
10108a94:	0029883a 	mov	r20,zero
10108a98:	ddc01a04 	addi	r23,sp,104
10108a9c:	8027883a 	mov	r19,r16
10108aa0:	8500010e 	bge	r16,r20,10108aa8 <___vfiprintf_internal_r+0x418>
10108aa4:	a027883a 	mov	r19,r20
10108aa8:	ad403fcc 	andi	r21,r21,255
10108aac:	ad40201c 	xori	r21,r21,128
10108ab0:	ad7fe004 	addi	r21,r21,-128
10108ab4:	a8000126 	beq	r21,zero,10108abc <___vfiprintf_internal_r+0x42c>
10108ab8:	9cc00044 	addi	r19,r19,1
10108abc:	89c0008c 	andi	r7,r17,2
10108ac0:	38000126 	beq	r7,zero,10108ac8 <___vfiprintf_internal_r+0x438>
10108ac4:	9cc00084 	addi	r19,r19,2
10108ac8:	88c0210c 	andi	r3,r17,132
10108acc:	1801dd1e 	bne	r3,zero,10109244 <___vfiprintf_internal_r+0xbb4>
10108ad0:	d9402517 	ldw	r5,148(sp)
10108ad4:	2cebc83a 	sub	r21,r5,r19
10108ad8:	0541da0e 	bge	zero,r21,10109244 <___vfiprintf_internal_r+0xbb4>
10108adc:	07000404 	movi	fp,16
10108ae0:	d8801c17 	ldw	r2,112(sp)
10108ae4:	e543be0e 	bge	fp,r21,101099e0 <___vfiprintf_internal_r+0x1350>
10108ae8:	01440474 	movhi	r5,4113
10108aec:	2941fa04 	addi	r5,r5,2024
10108af0:	dc002715 	stw	r16,156(sp)
10108af4:	d9801b17 	ldw	r6,108(sp)
10108af8:	a821883a 	mov	r16,r21
10108afc:	d9402315 	stw	r5,140(sp)
10108b00:	028001c4 	movi	r10,7
10108b04:	d9c02915 	stw	r7,164(sp)
10108b08:	182b883a 	mov	r21,r3
10108b0c:	00000506 	br	10108b24 <___vfiprintf_internal_r+0x494>
10108b10:	31000084 	addi	r4,r6,2
10108b14:	42000204 	addi	r8,r8,8
10108b18:	180d883a 	mov	r6,r3
10108b1c:	843ffc04 	addi	r16,r16,-16
10108b20:	e4000f0e 	bge	fp,r16,10108b60 <___vfiprintf_internal_r+0x4d0>
10108b24:	01040474 	movhi	r4,4113
10108b28:	10800404 	addi	r2,r2,16
10108b2c:	30c00044 	addi	r3,r6,1
10108b30:	2101fa04 	addi	r4,r4,2024
10108b34:	41000015 	stw	r4,0(r8)
10108b38:	47000115 	stw	fp,4(r8)
10108b3c:	d8801c15 	stw	r2,112(sp)
10108b40:	d8c01b15 	stw	r3,108(sp)
10108b44:	50fff20e 	bge	r10,r3,10108b10 <__alt_data_end+0xfffe8b10>
10108b48:	1001b21e 	bne	r2,zero,10109214 <___vfiprintf_internal_r+0xb84>
10108b4c:	843ffc04 	addi	r16,r16,-16
10108b50:	000d883a 	mov	r6,zero
10108b54:	01000044 	movi	r4,1
10108b58:	d811883a 	mov	r8,sp
10108b5c:	e43ff116 	blt	fp,r16,10108b24 <__alt_data_end+0xfffe8b24>
10108b60:	a807883a 	mov	r3,r21
10108b64:	d9c02917 	ldw	r7,164(sp)
10108b68:	802b883a 	mov	r21,r16
10108b6c:	dc002717 	ldw	r16,156(sp)
10108b70:	d9402317 	ldw	r5,140(sp)
10108b74:	a885883a 	add	r2,r21,r2
10108b78:	45400115 	stw	r21,4(r8)
10108b7c:	41400015 	stw	r5,0(r8)
10108b80:	d8801c15 	stw	r2,112(sp)
10108b84:	d9001b15 	stw	r4,108(sp)
10108b88:	014001c4 	movi	r5,7
10108b8c:	29026216 	blt	r5,r4,10109518 <___vfiprintf_internal_r+0xe88>
10108b90:	d9801d87 	ldb	r6,118(sp)
10108b94:	42000204 	addi	r8,r8,8
10108b98:	21400044 	addi	r5,r4,1
10108b9c:	3001ae1e 	bne	r6,zero,10109258 <___vfiprintf_internal_r+0xbc8>
10108ba0:	3801bb26 	beq	r7,zero,10109290 <___vfiprintf_internal_r+0xc00>
10108ba4:	d9001d04 	addi	r4,sp,116
10108ba8:	10800084 	addi	r2,r2,2
10108bac:	41000015 	stw	r4,0(r8)
10108bb0:	01000084 	movi	r4,2
10108bb4:	41000115 	stw	r4,4(r8)
10108bb8:	d8801c15 	stw	r2,112(sp)
10108bbc:	d9401b15 	stw	r5,108(sp)
10108bc0:	010001c4 	movi	r4,7
10108bc4:	2142680e 	bge	r4,r5,10109568 <___vfiprintf_internal_r+0xed8>
10108bc8:	1002b11e 	bne	r2,zero,10109690 <___vfiprintf_internal_r+0x1000>
10108bcc:	01802004 	movi	r6,128
10108bd0:	01400044 	movi	r5,1
10108bd4:	0009883a 	mov	r4,zero
10108bd8:	d811883a 	mov	r8,sp
10108bdc:	1981ae1e 	bne	r3,r6,10109298 <___vfiprintf_internal_r+0xc08>
10108be0:	d8c02517 	ldw	r3,148(sp)
10108be4:	1cf9c83a 	sub	fp,r3,r19
10108be8:	0701ab0e 	bge	zero,fp,10109298 <___vfiprintf_internal_r+0xc08>
10108bec:	05400404 	movi	r21,16
10108bf0:	af03a90e 	bge	r21,fp,10109a98 <___vfiprintf_internal_r+0x1408>
10108bf4:	01440474 	movhi	r5,4113
10108bf8:	2941f604 	addi	r5,r5,2008
10108bfc:	d9402315 	stw	r5,140(sp)
10108c00:	01c001c4 	movi	r7,7
10108c04:	00000506 	br	10108c1c <___vfiprintf_internal_r+0x58c>
10108c08:	21800084 	addi	r6,r4,2
10108c0c:	42000204 	addi	r8,r8,8
10108c10:	1809883a 	mov	r4,r3
10108c14:	e73ffc04 	addi	fp,fp,-16
10108c18:	af000d0e 	bge	r21,fp,10108c50 <___vfiprintf_internal_r+0x5c0>
10108c1c:	10800404 	addi	r2,r2,16
10108c20:	20c00044 	addi	r3,r4,1
10108c24:	44800015 	stw	r18,0(r8)
10108c28:	45400115 	stw	r21,4(r8)
10108c2c:	d8801c15 	stw	r2,112(sp)
10108c30:	d8c01b15 	stw	r3,108(sp)
10108c34:	38fff40e 	bge	r7,r3,10108c08 <__alt_data_end+0xfffe8c08>
10108c38:	10022b1e 	bne	r2,zero,101094e8 <___vfiprintf_internal_r+0xe58>
10108c3c:	e73ffc04 	addi	fp,fp,-16
10108c40:	01800044 	movi	r6,1
10108c44:	0009883a 	mov	r4,zero
10108c48:	d811883a 	mov	r8,sp
10108c4c:	af3ff316 	blt	r21,fp,10108c1c <__alt_data_end+0xfffe8c1c>
10108c50:	d8c02317 	ldw	r3,140(sp)
10108c54:	1705883a 	add	r2,r2,fp
10108c58:	47000115 	stw	fp,4(r8)
10108c5c:	40c00015 	stw	r3,0(r8)
10108c60:	d8801c15 	stw	r2,112(sp)
10108c64:	d9801b15 	stw	r6,108(sp)
10108c68:	00c001c4 	movi	r3,7
10108c6c:	19829416 	blt	r3,r6,101096c0 <___vfiprintf_internal_r+0x1030>
10108c70:	8521c83a 	sub	r16,r16,r20
10108c74:	42000204 	addi	r8,r8,8
10108c78:	31400044 	addi	r5,r6,1
10108c7c:	3009883a 	mov	r4,r6
10108c80:	04018716 	blt	zero,r16,101092a0 <___vfiprintf_internal_r+0xc10>
10108c84:	a085883a 	add	r2,r20,r2
10108c88:	45c00015 	stw	r23,0(r8)
10108c8c:	45000115 	stw	r20,4(r8)
10108c90:	d8801c15 	stw	r2,112(sp)
10108c94:	d9401b15 	stw	r5,108(sp)
10108c98:	00c001c4 	movi	r3,7
10108c9c:	1941c20e 	bge	r3,r5,101093a8 <___vfiprintf_internal_r+0xd18>
10108ca0:	1002531e 	bne	r2,zero,101095f0 <___vfiprintf_internal_r+0xf60>
10108ca4:	d8001b15 	stw	zero,108(sp)
10108ca8:	8c40010c 	andi	r17,r17,4
10108cac:	88023226 	beq	r17,zero,10109578 <___vfiprintf_internal_r+0xee8>
10108cb0:	d9002517 	ldw	r4,148(sp)
10108cb4:	24e3c83a 	sub	r17,r4,r19
10108cb8:	04432916 	blt	zero,r17,10109960 <___vfiprintf_internal_r+0x12d0>
10108cbc:	d8802517 	ldw	r2,148(sp)
10108cc0:	14c0010e 	bge	r2,r19,10108cc8 <___vfiprintf_internal_r+0x638>
10108cc4:	9805883a 	mov	r2,r19
10108cc8:	d8c02417 	ldw	r3,144(sp)
10108ccc:	1887883a 	add	r3,r3,r2
10108cd0:	d8c02415 	stw	r3,144(sp)
10108cd4:	d8001b15 	stw	zero,108(sp)
10108cd8:	d811883a 	mov	r8,sp
10108cdc:	003ea006 	br	10108760 <__alt_data_end+0xfffe8760>
10108ce0:	8c400814 	ori	r17,r17,32
10108ce4:	b0c00007 	ldb	r3,0(r22)
10108ce8:	003ec606 	br	10108804 <__alt_data_end+0xfffe8804>
10108cec:	b0c00007 	ldb	r3,0(r22)
10108cf0:	00801b04 	movi	r2,108
10108cf4:	18832026 	beq	r3,r2,10109978 <___vfiprintf_internal_r+0x12e8>
10108cf8:	8c400414 	ori	r17,r17,16
10108cfc:	003ec106 	br	10108804 <__alt_data_end+0xfffe8804>
10108d00:	9cc03fcc 	andi	r19,r19,255
10108d04:	b811883a 	mov	r8,r23
10108d08:	9803981e 	bne	r19,zero,10109b6c <___vfiprintf_internal_r+0x14dc>
10108d0c:	8880080c 	andi	r2,r17,32
10108d10:	1002be26 	beq	r2,zero,1010980c <___vfiprintf_internal_r+0x117c>
10108d14:	d9002217 	ldw	r4,136(sp)
10108d18:	d9402417 	ldw	r5,144(sp)
10108d1c:	20800017 	ldw	r2,0(r4)
10108d20:	2807d7fa 	srai	r3,r5,31
10108d24:	21000104 	addi	r4,r4,4
10108d28:	d9002215 	stw	r4,136(sp)
10108d2c:	11400015 	stw	r5,0(r2)
10108d30:	10c00115 	stw	r3,4(r2)
10108d34:	003e8a06 	br	10108760 <__alt_data_end+0xfffe8760>
10108d38:	9cc03fcc 	andi	r19,r19,255
10108d3c:	b811883a 	mov	r8,r23
10108d40:	9803871e 	bne	r19,zero,10109b60 <___vfiprintf_internal_r+0x14d0>
10108d44:	8880080c 	andi	r2,r17,32
10108d48:	10009a26 	beq	r2,zero,10108fb4 <___vfiprintf_internal_r+0x924>
10108d4c:	d9002217 	ldw	r4,136(sp)
10108d50:	d8001d85 	stb	zero,118(sp)
10108d54:	20800204 	addi	r2,r4,8
10108d58:	24c00017 	ldw	r19,0(r4)
10108d5c:	25000117 	ldw	r20,4(r4)
10108d60:	8002a416 	blt	r16,zero,101097f4 <___vfiprintf_internal_r+0x1164>
10108d64:	013fdfc4 	movi	r4,-129
10108d68:	9d06b03a 	or	r3,r19,r20
10108d6c:	d8802215 	stw	r2,136(sp)
10108d70:	8922703a 	and	r17,r17,r4
10108d74:	18009b26 	beq	r3,zero,10108fe4 <___vfiprintf_internal_r+0x954>
10108d78:	002b883a 	mov	r21,zero
10108d7c:	ddc01a04 	addi	r23,sp,104
10108d80:	9806d0fa 	srli	r3,r19,3
10108d84:	a008977a 	slli	r4,r20,29
10108d88:	a028d0fa 	srli	r20,r20,3
10108d8c:	9cc001cc 	andi	r19,r19,7
10108d90:	98800c04 	addi	r2,r19,48
10108d94:	bdffffc4 	addi	r23,r23,-1
10108d98:	20e6b03a 	or	r19,r4,r3
10108d9c:	b8800005 	stb	r2,0(r23)
10108da0:	9d06b03a 	or	r3,r19,r20
10108da4:	183ff61e 	bne	r3,zero,10108d80 <__alt_data_end+0xfffe8d80>
10108da8:	88c0004c 	andi	r3,r17,1
10108dac:	18021f1e 	bne	r3,zero,1010962c <___vfiprintf_internal_r+0xf9c>
10108db0:	d9401e17 	ldw	r5,120(sp)
10108db4:	2de9c83a 	sub	r20,r5,r23
10108db8:	003f3806 	br	10108a9c <__alt_data_end+0xfffe8a9c>
10108dbc:	9cc03fcc 	andi	r19,r19,255
10108dc0:	b811883a 	mov	r8,r23
10108dc4:	98034f1e 	bne	r19,zero,10109b04 <___vfiprintf_internal_r+0x1474>
10108dc8:	00840474 	movhi	r2,4113
10108dcc:	10819504 	addi	r2,r2,1620
10108dd0:	d8802615 	stw	r2,152(sp)
10108dd4:	8880080c 	andi	r2,r17,32
10108dd8:	1000ac26 	beq	r2,zero,1010908c <___vfiprintf_internal_r+0x9fc>
10108ddc:	d9002217 	ldw	r4,136(sp)
10108de0:	24c00017 	ldw	r19,0(r4)
10108de4:	25000117 	ldw	r20,4(r4)
10108de8:	21000204 	addi	r4,r4,8
10108dec:	d9002215 	stw	r4,136(sp)
10108df0:	8880004c 	andi	r2,r17,1
10108df4:	1001e726 	beq	r2,zero,10109594 <___vfiprintf_internal_r+0xf04>
10108df8:	9d04b03a 	or	r2,r19,r20
10108dfc:	10025c1e 	bne	r2,zero,10109770 <___vfiprintf_internal_r+0x10e0>
10108e00:	d8001d85 	stb	zero,118(sp)
10108e04:	80024416 	blt	r16,zero,10109718 <___vfiprintf_internal_r+0x1088>
10108e08:	00bfdfc4 	movi	r2,-129
10108e0c:	88a2703a 	and	r17,r17,r2
10108e10:	003f1d06 	br	10108a88 <__alt_data_end+0xfffe8a88>
10108e14:	d8c02217 	ldw	r3,136(sp)
10108e18:	04c00044 	movi	r19,1
10108e1c:	b811883a 	mov	r8,r23
10108e20:	18800017 	ldw	r2,0(r3)
10108e24:	18c00104 	addi	r3,r3,4
10108e28:	d8001d85 	stb	zero,118(sp)
10108e2c:	d8801005 	stb	r2,64(sp)
10108e30:	d8c02215 	stw	r3,136(sp)
10108e34:	9829883a 	mov	r20,r19
10108e38:	ddc01004 	addi	r23,sp,64
10108e3c:	0021883a 	mov	r16,zero
10108e40:	003f1e06 	br	10108abc <__alt_data_end+0xfffe8abc>
10108e44:	9cc03fcc 	andi	r19,r19,255
10108e48:	b811883a 	mov	r8,r23
10108e4c:	9803331e 	bne	r19,zero,10109b1c <___vfiprintf_internal_r+0x148c>
10108e50:	8880080c 	andi	r2,r17,32
10108e54:	10004826 	beq	r2,zero,10108f78 <___vfiprintf_internal_r+0x8e8>
10108e58:	d9002217 	ldw	r4,136(sp)
10108e5c:	20800117 	ldw	r2,4(r4)
10108e60:	24c00017 	ldw	r19,0(r4)
10108e64:	21000204 	addi	r4,r4,8
10108e68:	d9002215 	stw	r4,136(sp)
10108e6c:	1029883a 	mov	r20,r2
10108e70:	10024c16 	blt	r2,zero,101097a4 <___vfiprintf_internal_r+0x1114>
10108e74:	dd401d83 	ldbu	r21,118(sp)
10108e78:	80007116 	blt	r16,zero,10109040 <___vfiprintf_internal_r+0x9b0>
10108e7c:	00ffdfc4 	movi	r3,-129
10108e80:	9d04b03a 	or	r2,r19,r20
10108e84:	88e2703a 	and	r17,r17,r3
10108e88:	1000d126 	beq	r2,zero,101091d0 <___vfiprintf_internal_r+0xb40>
10108e8c:	a0023526 	beq	r20,zero,10109764 <___vfiprintf_internal_r+0x10d4>
10108e90:	ddc01a04 	addi	r23,sp,104
10108e94:	4039883a 	mov	fp,r8
10108e98:	9809883a 	mov	r4,r19
10108e9c:	a00b883a 	mov	r5,r20
10108ea0:	01800284 	movi	r6,10
10108ea4:	000f883a 	mov	r7,zero
10108ea8:	010abbc0 	call	1010abbc <__umoddi3>
10108eac:	10800c04 	addi	r2,r2,48
10108eb0:	bdffffc4 	addi	r23,r23,-1
10108eb4:	9809883a 	mov	r4,r19
10108eb8:	a00b883a 	mov	r5,r20
10108ebc:	b8800005 	stb	r2,0(r23)
10108ec0:	01800284 	movi	r6,10
10108ec4:	000f883a 	mov	r7,zero
10108ec8:	010a5c00 	call	1010a5c0 <__udivdi3>
10108ecc:	1027883a 	mov	r19,r2
10108ed0:	10c4b03a 	or	r2,r2,r3
10108ed4:	1829883a 	mov	r20,r3
10108ed8:	103fef1e 	bne	r2,zero,10108e98 <__alt_data_end+0xfffe8e98>
10108edc:	d9001e17 	ldw	r4,120(sp)
10108ee0:	e011883a 	mov	r8,fp
10108ee4:	25e9c83a 	sub	r20,r4,r23
10108ee8:	003eec06 	br	10108a9c <__alt_data_end+0xfffe8a9c>
10108eec:	d8802307 	ldb	r2,140(sp)
10108ef0:	1002361e 	bne	r2,zero,101097cc <___vfiprintf_internal_r+0x113c>
10108ef4:	00c00804 	movi	r3,32
10108ef8:	d8c02305 	stb	r3,140(sp)
10108efc:	04c00044 	movi	r19,1
10108f00:	b0c00007 	ldb	r3,0(r22)
10108f04:	003e3f06 	br	10108804 <__alt_data_end+0xfffe8804>
10108f08:	8c400054 	ori	r17,r17,1
10108f0c:	b0c00007 	ldb	r3,0(r22)
10108f10:	003e3c06 	br	10108804 <__alt_data_end+0xfffe8804>
10108f14:	8c402014 	ori	r17,r17,128
10108f18:	b0c00007 	ldb	r3,0(r22)
10108f1c:	003e3906 	br	10108804 <__alt_data_end+0xfffe8804>
10108f20:	dc002715 	stw	r16,156(sp)
10108f24:	d8002515 	stw	zero,148(sp)
10108f28:	1f3ff404 	addi	fp,r3,-48
10108f2c:	0009883a 	mov	r4,zero
10108f30:	b021883a 	mov	r16,r22
10108f34:	01400284 	movi	r5,10
10108f38:	0100c980 	call	10100c98 <__mulsi3>
10108f3c:	80c00007 	ldb	r3,0(r16)
10108f40:	e089883a 	add	r4,fp,r2
10108f44:	b5800044 	addi	r22,r22,1
10108f48:	1f3ff404 	addi	fp,r3,-48
10108f4c:	b021883a 	mov	r16,r22
10108f50:	af3ff82e 	bgeu	r21,fp,10108f34 <__alt_data_end+0xfffe8f34>
10108f54:	d9002515 	stw	r4,148(sp)
10108f58:	dc002717 	ldw	r16,156(sp)
10108f5c:	003e2a06 	br	10108808 <__alt_data_end+0xfffe8808>
10108f60:	9cc03fcc 	andi	r19,r19,255
10108f64:	b811883a 	mov	r8,r23
10108f68:	9802e91e 	bne	r19,zero,10109b10 <___vfiprintf_internal_r+0x1480>
10108f6c:	8c400414 	ori	r17,r17,16
10108f70:	8880080c 	andi	r2,r17,32
10108f74:	103fb81e 	bne	r2,zero,10108e58 <__alt_data_end+0xfffe8e58>
10108f78:	8880040c 	andi	r2,r17,16
10108f7c:	10022e26 	beq	r2,zero,10109838 <___vfiprintf_internal_r+0x11a8>
10108f80:	d9402217 	ldw	r5,136(sp)
10108f84:	2cc00017 	ldw	r19,0(r5)
10108f88:	29400104 	addi	r5,r5,4
10108f8c:	d9402215 	stw	r5,136(sp)
10108f90:	9829d7fa 	srai	r20,r19,31
10108f94:	a005883a 	mov	r2,r20
10108f98:	003fb506 	br	10108e70 <__alt_data_end+0xfffe8e70>
10108f9c:	9cc03fcc 	andi	r19,r19,255
10108fa0:	b811883a 	mov	r8,r23
10108fa4:	9802fa1e 	bne	r19,zero,10109b90 <___vfiprintf_internal_r+0x1500>
10108fa8:	8c400414 	ori	r17,r17,16
10108fac:	8880080c 	andi	r2,r17,32
10108fb0:	103f661e 	bne	r2,zero,10108d4c <__alt_data_end+0xfffe8d4c>
10108fb4:	8880040c 	andi	r2,r17,16
10108fb8:	10020626 	beq	r2,zero,101097d4 <___vfiprintf_internal_r+0x1144>
10108fbc:	d9402217 	ldw	r5,136(sp)
10108fc0:	d8001d85 	stb	zero,118(sp)
10108fc4:	0029883a 	mov	r20,zero
10108fc8:	28800104 	addi	r2,r5,4
10108fcc:	2cc00017 	ldw	r19,0(r5)
10108fd0:	80020816 	blt	r16,zero,101097f4 <___vfiprintf_internal_r+0x1164>
10108fd4:	00ffdfc4 	movi	r3,-129
10108fd8:	d8802215 	stw	r2,136(sp)
10108fdc:	88e2703a 	and	r17,r17,r3
10108fe0:	983f651e 	bne	r19,zero,10108d78 <__alt_data_end+0xfffe8d78>
10108fe4:	002b883a 	mov	r21,zero
10108fe8:	8002cf26 	beq	r16,zero,10109b28 <___vfiprintf_internal_r+0x1498>
10108fec:	0027883a 	mov	r19,zero
10108ff0:	0029883a 	mov	r20,zero
10108ff4:	003f6106 	br	10108d7c <__alt_data_end+0xfffe8d7c>
10108ff8:	9cc03fcc 	andi	r19,r19,255
10108ffc:	b811883a 	mov	r8,r23
10109000:	9802e01e 	bne	r19,zero,10109b84 <___vfiprintf_internal_r+0x14f4>
10109004:	8c400414 	ori	r17,r17,16
10109008:	8880080c 	andi	r2,r17,32
1010900c:	1000641e 	bne	r2,zero,101091a0 <___vfiprintf_internal_r+0xb10>
10109010:	8880040c 	andi	r2,r17,16
10109014:	1001c81e 	bne	r2,zero,10109738 <___vfiprintf_internal_r+0x10a8>
10109018:	8880100c 	andi	r2,r17,64
1010901c:	d8001d85 	stb	zero,118(sp)
10109020:	1002281e 	bne	r2,zero,101098c4 <___vfiprintf_internal_r+0x1234>
10109024:	d9002217 	ldw	r4,136(sp)
10109028:	0029883a 	mov	r20,zero
1010902c:	20800104 	addi	r2,r4,4
10109030:	24c00017 	ldw	r19,0(r4)
10109034:	8001c60e 	bge	r16,zero,10109750 <___vfiprintf_internal_r+0x10c0>
10109038:	d8802215 	stw	r2,136(sp)
1010903c:	002b883a 	mov	r21,zero
10109040:	9d04b03a 	or	r2,r19,r20
10109044:	103f911e 	bne	r2,zero,10108e8c <__alt_data_end+0xfffe8e8c>
10109048:	00800044 	movi	r2,1
1010904c:	10803fcc 	andi	r2,r2,255
10109050:	00c00044 	movi	r3,1
10109054:	10c05f26 	beq	r2,r3,101091d4 <___vfiprintf_internal_r+0xb44>
10109058:	00c00084 	movi	r3,2
1010905c:	10ffe31e 	bne	r2,r3,10108fec <__alt_data_end+0xfffe8fec>
10109060:	0027883a 	mov	r19,zero
10109064:	0029883a 	mov	r20,zero
10109068:	00015106 	br	101095b0 <___vfiprintf_internal_r+0xf20>
1010906c:	9cc03fcc 	andi	r19,r19,255
10109070:	b811883a 	mov	r8,r23
10109074:	9802c01e 	bne	r19,zero,10109b78 <___vfiprintf_internal_r+0x14e8>
10109078:	01440474 	movhi	r5,4113
1010907c:	29419004 	addi	r5,r5,1600
10109080:	d9402615 	stw	r5,152(sp)
10109084:	8880080c 	andi	r2,r17,32
10109088:	103f541e 	bne	r2,zero,10108ddc <__alt_data_end+0xfffe8ddc>
1010908c:	8880040c 	andi	r2,r17,16
10109090:	1001f226 	beq	r2,zero,1010985c <___vfiprintf_internal_r+0x11cc>
10109094:	d9402217 	ldw	r5,136(sp)
10109098:	0029883a 	mov	r20,zero
1010909c:	2cc00017 	ldw	r19,0(r5)
101090a0:	29400104 	addi	r5,r5,4
101090a4:	d9402215 	stw	r5,136(sp)
101090a8:	003f5106 	br	10108df0 <__alt_data_end+0xfffe8df0>
101090ac:	d8c02217 	ldw	r3,136(sp)
101090b0:	b811883a 	mov	r8,r23
101090b4:	d8001d85 	stb	zero,118(sp)
101090b8:	1dc00017 	ldw	r23,0(r3)
101090bc:	1f000104 	addi	fp,r3,4
101090c0:	b8025926 	beq	r23,zero,10109a28 <___vfiprintf_internal_r+0x1398>
101090c4:	80023316 	blt	r16,zero,10109994 <___vfiprintf_internal_r+0x1304>
101090c8:	800d883a 	mov	r6,r16
101090cc:	000b883a 	mov	r5,zero
101090d0:	b809883a 	mov	r4,r23
101090d4:	da002a15 	stw	r8,168(sp)
101090d8:	01069180 	call	10106918 <memchr>
101090dc:	da002a17 	ldw	r8,168(sp)
101090e0:	10026826 	beq	r2,zero,10109a84 <___vfiprintf_internal_r+0x13f4>
101090e4:	15e9c83a 	sub	r20,r2,r23
101090e8:	dd401d83 	ldbu	r21,118(sp)
101090ec:	df002215 	stw	fp,136(sp)
101090f0:	0021883a 	mov	r16,zero
101090f4:	003e6906 	br	10108a9c <__alt_data_end+0xfffe8a9c>
101090f8:	9cc03fcc 	andi	r19,r19,255
101090fc:	b811883a 	mov	r8,r23
10109100:	983fc126 	beq	r19,zero,10109008 <__alt_data_end+0xfffe9008>
10109104:	d8c02303 	ldbu	r3,140(sp)
10109108:	d8c01d85 	stb	r3,118(sp)
1010910c:	003fbe06 	br	10109008 <__alt_data_end+0xfffe9008>
10109110:	d9002217 	ldw	r4,136(sp)
10109114:	d9402217 	ldw	r5,136(sp)
10109118:	21000017 	ldw	r4,0(r4)
1010911c:	28800104 	addi	r2,r5,4
10109120:	d9002515 	stw	r4,148(sp)
10109124:	203e3d16 	blt	r4,zero,10108a1c <__alt_data_end+0xfffe8a1c>
10109128:	d8802215 	stw	r2,136(sp)
1010912c:	b0c00007 	ldb	r3,0(r22)
10109130:	003db406 	br	10108804 <__alt_data_end+0xfffe8804>
10109134:	00c00ac4 	movi	r3,43
10109138:	d8c02305 	stb	r3,140(sp)
1010913c:	04c00044 	movi	r19,1
10109140:	b0c00007 	ldb	r3,0(r22)
10109144:	003daf06 	br	10108804 <__alt_data_end+0xfffe8804>
10109148:	b0c00007 	ldb	r3,0(r22)
1010914c:	01000a84 	movi	r4,42
10109150:	b4000044 	addi	r16,r22,1
10109154:	19025e26 	beq	r3,r4,10109ad0 <___vfiprintf_internal_r+0x1440>
10109158:	1f3ff404 	addi	fp,r3,-48
1010915c:	0009883a 	mov	r4,zero
10109160:	af025236 	bltu	r21,fp,10109aac <___vfiprintf_internal_r+0x141c>
10109164:	01400284 	movi	r5,10
10109168:	0100c980 	call	10100c98 <__mulsi3>
1010916c:	80c00007 	ldb	r3,0(r16)
10109170:	1709883a 	add	r4,r2,fp
10109174:	85800044 	addi	r22,r16,1
10109178:	1f3ff404 	addi	fp,r3,-48
1010917c:	b021883a 	mov	r16,r22
10109180:	af3ff82e 	bgeu	r21,fp,10109164 <__alt_data_end+0xfffe9164>
10109184:	2021883a 	mov	r16,r4
10109188:	203d9f0e 	bge	r4,zero,10108808 <__alt_data_end+0xfffe8808>
1010918c:	043fffc4 	movi	r16,-1
10109190:	003d9d06 	br	10108808 <__alt_data_end+0xfffe8808>
10109194:	8c401014 	ori	r17,r17,64
10109198:	b0c00007 	ldb	r3,0(r22)
1010919c:	003d9906 	br	10108804 <__alt_data_end+0xfffe8804>
101091a0:	d9002217 	ldw	r4,136(sp)
101091a4:	d8001d85 	stb	zero,118(sp)
101091a8:	20c00204 	addi	r3,r4,8
101091ac:	24c00017 	ldw	r19,0(r4)
101091b0:	25000117 	ldw	r20,4(r4)
101091b4:	8001e716 	blt	r16,zero,10109954 <___vfiprintf_internal_r+0x12c4>
101091b8:	013fdfc4 	movi	r4,-129
101091bc:	9d04b03a 	or	r2,r19,r20
101091c0:	d8c02215 	stw	r3,136(sp)
101091c4:	8922703a 	and	r17,r17,r4
101091c8:	002b883a 	mov	r21,zero
101091cc:	103f2f1e 	bne	r2,zero,10108e8c <__alt_data_end+0xfffe8e8c>
101091d0:	803e2f26 	beq	r16,zero,10108a90 <__alt_data_end+0xfffe8a90>
101091d4:	0027883a 	mov	r19,zero
101091d8:	9cc00c04 	addi	r19,r19,48
101091dc:	dcc019c5 	stb	r19,103(sp)
101091e0:	dd002817 	ldw	r20,160(sp)
101091e4:	ddc019c4 	addi	r23,sp,103
101091e8:	003e2c06 	br	10108a9c <__alt_data_end+0xfffe8a9c>
101091ec:	9cc03fcc 	andi	r19,r19,255
101091f0:	b811883a 	mov	r8,r23
101091f4:	9802571e 	bne	r19,zero,10109b54 <___vfiprintf_internal_r+0x14c4>
101091f8:	18005726 	beq	r3,zero,10109358 <___vfiprintf_internal_r+0xcc8>
101091fc:	04c00044 	movi	r19,1
10109200:	d8c01005 	stb	r3,64(sp)
10109204:	d8001d85 	stb	zero,118(sp)
10109208:	9829883a 	mov	r20,r19
1010920c:	ddc01004 	addi	r23,sp,64
10109210:	003f0a06 	br	10108e3c <__alt_data_end+0xfffe8e3c>
10109214:	d9402017 	ldw	r5,128(sp)
10109218:	d9002117 	ldw	r4,132(sp)
1010921c:	d9801a04 	addi	r6,sp,104
10109220:	da802a15 	stw	r10,168(sp)
10109224:	010857c0 	call	1010857c <__sprint_r.part.0>
10109228:	da802a17 	ldw	r10,168(sp)
1010922c:	1000501e 	bne	r2,zero,10109370 <___vfiprintf_internal_r+0xce0>
10109230:	d9801b17 	ldw	r6,108(sp)
10109234:	d8801c17 	ldw	r2,112(sp)
10109238:	d811883a 	mov	r8,sp
1010923c:	31000044 	addi	r4,r6,1
10109240:	003e3606 	br	10108b1c <__alt_data_end+0xfffe8b1c>
10109244:	d9001b17 	ldw	r4,108(sp)
10109248:	d8801c17 	ldw	r2,112(sp)
1010924c:	21400044 	addi	r5,r4,1
10109250:	d9801d87 	ldb	r6,118(sp)
10109254:	303e5226 	beq	r6,zero,10108ba0 <__alt_data_end+0xfffe8ba0>
10109258:	01800044 	movi	r6,1
1010925c:	d9001d84 	addi	r4,sp,118
10109260:	1185883a 	add	r2,r2,r6
10109264:	41000015 	stw	r4,0(r8)
10109268:	41800115 	stw	r6,4(r8)
1010926c:	d8801c15 	stw	r2,112(sp)
10109270:	d9401b15 	stw	r5,108(sp)
10109274:	010001c4 	movi	r4,7
10109278:	2140b00e 	bge	r4,r5,1010953c <___vfiprintf_internal_r+0xeac>
1010927c:	1000f61e 	bne	r2,zero,10109658 <___vfiprintf_internal_r+0xfc8>
10109280:	3800b31e 	bne	r7,zero,10109550 <___vfiprintf_internal_r+0xec0>
10109284:	0009883a 	mov	r4,zero
10109288:	300b883a 	mov	r5,r6
1010928c:	d811883a 	mov	r8,sp
10109290:	01802004 	movi	r6,128
10109294:	19be5226 	beq	r3,r6,10108be0 <__alt_data_end+0xfffe8be0>
10109298:	8521c83a 	sub	r16,r16,r20
1010929c:	043e790e 	bge	zero,r16,10108c84 <__alt_data_end+0xfffe8c84>
101092a0:	05400404 	movi	r21,16
101092a4:	ac01b00e 	bge	r21,r16,10109968 <___vfiprintf_internal_r+0x12d8>
101092a8:	01440474 	movhi	r5,4113
101092ac:	2941f604 	addi	r5,r5,2008
101092b0:	d9402315 	stw	r5,140(sp)
101092b4:	070001c4 	movi	fp,7
101092b8:	00000506 	br	101092d0 <___vfiprintf_internal_r+0xc40>
101092bc:	21400084 	addi	r5,r4,2
101092c0:	42000204 	addi	r8,r8,8
101092c4:	1809883a 	mov	r4,r3
101092c8:	843ffc04 	addi	r16,r16,-16
101092cc:	ac000d0e 	bge	r21,r16,10109304 <___vfiprintf_internal_r+0xc74>
101092d0:	10800404 	addi	r2,r2,16
101092d4:	20c00044 	addi	r3,r4,1
101092d8:	44800015 	stw	r18,0(r8)
101092dc:	45400115 	stw	r21,4(r8)
101092e0:	d8801c15 	stw	r2,112(sp)
101092e4:	d8c01b15 	stw	r3,108(sp)
101092e8:	e0fff40e 	bge	fp,r3,101092bc <__alt_data_end+0xfffe92bc>
101092ec:	1000101e 	bne	r2,zero,10109330 <___vfiprintf_internal_r+0xca0>
101092f0:	843ffc04 	addi	r16,r16,-16
101092f4:	01400044 	movi	r5,1
101092f8:	0009883a 	mov	r4,zero
101092fc:	d811883a 	mov	r8,sp
10109300:	ac3ff316 	blt	r21,r16,101092d0 <__alt_data_end+0xfffe92d0>
10109304:	d8c02317 	ldw	r3,140(sp)
10109308:	1405883a 	add	r2,r2,r16
1010930c:	44000115 	stw	r16,4(r8)
10109310:	40c00015 	stw	r3,0(r8)
10109314:	d8801c15 	stw	r2,112(sp)
10109318:	d9401b15 	stw	r5,108(sp)
1010931c:	00c001c4 	movi	r3,7
10109320:	19401916 	blt	r3,r5,10109388 <___vfiprintf_internal_r+0xcf8>
10109324:	42000204 	addi	r8,r8,8
10109328:	29400044 	addi	r5,r5,1
1010932c:	003e5506 	br	10108c84 <__alt_data_end+0xfffe8c84>
10109330:	d9402017 	ldw	r5,128(sp)
10109334:	d9002117 	ldw	r4,132(sp)
10109338:	d9801a04 	addi	r6,sp,104
1010933c:	010857c0 	call	1010857c <__sprint_r.part.0>
10109340:	10000b1e 	bne	r2,zero,10109370 <___vfiprintf_internal_r+0xce0>
10109344:	d9001b17 	ldw	r4,108(sp)
10109348:	d8801c17 	ldw	r2,112(sp)
1010934c:	d811883a 	mov	r8,sp
10109350:	21400044 	addi	r5,r4,1
10109354:	003fdc06 	br	101092c8 <__alt_data_end+0xfffe92c8>
10109358:	d8801c17 	ldw	r2,112(sp)
1010935c:	10000426 	beq	r2,zero,10109370 <___vfiprintf_internal_r+0xce0>
10109360:	d9402017 	ldw	r5,128(sp)
10109364:	d9002117 	ldw	r4,132(sp)
10109368:	d9801a04 	addi	r6,sp,104
1010936c:	010857c0 	call	1010857c <__sprint_r.part.0>
10109370:	d9402017 	ldw	r5,128(sp)
10109374:	2880030b 	ldhu	r2,12(r5)
10109378:	1080100c 	andi	r2,r2,64
1010937c:	10014d1e 	bne	r2,zero,101098b4 <___vfiprintf_internal_r+0x1224>
10109380:	d8802417 	ldw	r2,144(sp)
10109384:	003d9706 	br	101089e4 <__alt_data_end+0xfffe89e4>
10109388:	1000d21e 	bne	r2,zero,101096d4 <___vfiprintf_internal_r+0x1044>
1010938c:	00c00044 	movi	r3,1
10109390:	a005883a 	mov	r2,r20
10109394:	ddc00015 	stw	r23,0(sp)
10109398:	dd000115 	stw	r20,4(sp)
1010939c:	dd001c15 	stw	r20,112(sp)
101093a0:	d8c01b15 	stw	r3,108(sp)
101093a4:	d811883a 	mov	r8,sp
101093a8:	42000204 	addi	r8,r8,8
101093ac:	8c40010c 	andi	r17,r17,4
101093b0:	88004026 	beq	r17,zero,101094b4 <___vfiprintf_internal_r+0xe24>
101093b4:	d9002517 	ldw	r4,148(sp)
101093b8:	24e3c83a 	sub	r17,r4,r19
101093bc:	04403d0e 	bge	zero,r17,101094b4 <___vfiprintf_internal_r+0xe24>
101093c0:	04000404 	movi	r16,16
101093c4:	8441a90e 	bge	r16,r17,10109a6c <___vfiprintf_internal_r+0x13dc>
101093c8:	00c40474 	movhi	r3,4113
101093cc:	18c1fa04 	addi	r3,r3,2024
101093d0:	d9001b17 	ldw	r4,108(sp)
101093d4:	d8c02315 	stw	r3,140(sp)
101093d8:	050001c4 	movi	r20,7
101093dc:	dd402117 	ldw	r21,132(sp)
101093e0:	ddc02017 	ldw	r23,128(sp)
101093e4:	00000506 	br	101093fc <___vfiprintf_internal_r+0xd6c>
101093e8:	21400084 	addi	r5,r4,2
101093ec:	42000204 	addi	r8,r8,8
101093f0:	1809883a 	mov	r4,r3
101093f4:	8c7ffc04 	addi	r17,r17,-16
101093f8:	84400f0e 	bge	r16,r17,10109438 <___vfiprintf_internal_r+0xda8>
101093fc:	01440474 	movhi	r5,4113
10109400:	10800404 	addi	r2,r2,16
10109404:	20c00044 	addi	r3,r4,1
10109408:	2941fa04 	addi	r5,r5,2024
1010940c:	41400015 	stw	r5,0(r8)
10109410:	44000115 	stw	r16,4(r8)
10109414:	d8801c15 	stw	r2,112(sp)
10109418:	d8c01b15 	stw	r3,108(sp)
1010941c:	a0fff20e 	bge	r20,r3,101093e8 <__alt_data_end+0xfffe93e8>
10109420:	1000141e 	bne	r2,zero,10109474 <___vfiprintf_internal_r+0xde4>
10109424:	8c7ffc04 	addi	r17,r17,-16
10109428:	01400044 	movi	r5,1
1010942c:	0009883a 	mov	r4,zero
10109430:	d811883a 	mov	r8,sp
10109434:	847ff116 	blt	r16,r17,101093fc <__alt_data_end+0xfffe93fc>
10109438:	d8c02317 	ldw	r3,140(sp)
1010943c:	1445883a 	add	r2,r2,r17
10109440:	44400115 	stw	r17,4(r8)
10109444:	40c00015 	stw	r3,0(r8)
10109448:	d8801c15 	stw	r2,112(sp)
1010944c:	d9401b15 	stw	r5,108(sp)
10109450:	00c001c4 	movi	r3,7
10109454:	1940170e 	bge	r3,r5,101094b4 <___vfiprintf_internal_r+0xe24>
10109458:	1000101e 	bne	r2,zero,1010949c <___vfiprintf_internal_r+0xe0c>
1010945c:	d8802517 	ldw	r2,148(sp)
10109460:	14c11616 	blt	r2,r19,101098bc <___vfiprintf_internal_r+0x122c>
10109464:	d9002417 	ldw	r4,144(sp)
10109468:	2089883a 	add	r4,r4,r2
1010946c:	d9002415 	stw	r4,144(sp)
10109470:	003e1806 	br	10108cd4 <__alt_data_end+0xfffe8cd4>
10109474:	d9801a04 	addi	r6,sp,104
10109478:	b80b883a 	mov	r5,r23
1010947c:	a809883a 	mov	r4,r21
10109480:	010857c0 	call	1010857c <__sprint_r.part.0>
10109484:	103fba1e 	bne	r2,zero,10109370 <__alt_data_end+0xfffe9370>
10109488:	d9001b17 	ldw	r4,108(sp)
1010948c:	d8801c17 	ldw	r2,112(sp)
10109490:	d811883a 	mov	r8,sp
10109494:	21400044 	addi	r5,r4,1
10109498:	003fd606 	br	101093f4 <__alt_data_end+0xfffe93f4>
1010949c:	d9402017 	ldw	r5,128(sp)
101094a0:	d9002117 	ldw	r4,132(sp)
101094a4:	d9801a04 	addi	r6,sp,104
101094a8:	010857c0 	call	1010857c <__sprint_r.part.0>
101094ac:	103fb01e 	bne	r2,zero,10109370 <__alt_data_end+0xfffe9370>
101094b0:	d8801c17 	ldw	r2,112(sp)
101094b4:	d8c02517 	ldw	r3,148(sp)
101094b8:	1cc0010e 	bge	r3,r19,101094c0 <___vfiprintf_internal_r+0xe30>
101094bc:	9807883a 	mov	r3,r19
101094c0:	d9002417 	ldw	r4,144(sp)
101094c4:	20c9883a 	add	r4,r4,r3
101094c8:	d9002415 	stw	r4,144(sp)
101094cc:	103e0126 	beq	r2,zero,10108cd4 <__alt_data_end+0xfffe8cd4>
101094d0:	d9402017 	ldw	r5,128(sp)
101094d4:	d9002117 	ldw	r4,132(sp)
101094d8:	d9801a04 	addi	r6,sp,104
101094dc:	010857c0 	call	1010857c <__sprint_r.part.0>
101094e0:	103dfc26 	beq	r2,zero,10108cd4 <__alt_data_end+0xfffe8cd4>
101094e4:	003fa206 	br	10109370 <__alt_data_end+0xfffe9370>
101094e8:	d9402017 	ldw	r5,128(sp)
101094ec:	d9002117 	ldw	r4,132(sp)
101094f0:	d9801a04 	addi	r6,sp,104
101094f4:	d9c02b15 	stw	r7,172(sp)
101094f8:	010857c0 	call	1010857c <__sprint_r.part.0>
101094fc:	d9c02b17 	ldw	r7,172(sp)
10109500:	103f9b1e 	bne	r2,zero,10109370 <__alt_data_end+0xfffe9370>
10109504:	d9001b17 	ldw	r4,108(sp)
10109508:	d8801c17 	ldw	r2,112(sp)
1010950c:	d811883a 	mov	r8,sp
10109510:	21800044 	addi	r6,r4,1
10109514:	003dbf06 	br	10108c14 <__alt_data_end+0xfffe8c14>
10109518:	1000d81e 	bne	r2,zero,1010987c <___vfiprintf_internal_r+0x11ec>
1010951c:	d9001d87 	ldb	r4,118(sp)
10109520:	20000a26 	beq	r4,zero,1010954c <___vfiprintf_internal_r+0xebc>
10109524:	00800044 	movi	r2,1
10109528:	d9001d84 	addi	r4,sp,118
1010952c:	100b883a 	mov	r5,r2
10109530:	d9000015 	stw	r4,0(sp)
10109534:	d8800115 	stw	r2,4(sp)
10109538:	d811883a 	mov	r8,sp
1010953c:	2809883a 	mov	r4,r5
10109540:	42000204 	addi	r8,r8,8
10109544:	29400044 	addi	r5,r5,1
10109548:	003d9506 	br	10108ba0 <__alt_data_end+0xfffe8ba0>
1010954c:	3800fd26 	beq	r7,zero,10109944 <___vfiprintf_internal_r+0x12b4>
10109550:	00800084 	movi	r2,2
10109554:	d9001d04 	addi	r4,sp,116
10109558:	d9000015 	stw	r4,0(sp)
1010955c:	d8800115 	stw	r2,4(sp)
10109560:	01400044 	movi	r5,1
10109564:	d811883a 	mov	r8,sp
10109568:	2809883a 	mov	r4,r5
1010956c:	42000204 	addi	r8,r8,8
10109570:	29400044 	addi	r5,r5,1
10109574:	003f4606 	br	10109290 <__alt_data_end+0xfffe9290>
10109578:	d8802517 	ldw	r2,148(sp)
1010957c:	14c0010e 	bge	r2,r19,10109584 <___vfiprintf_internal_r+0xef4>
10109580:	9805883a 	mov	r2,r19
10109584:	d9402417 	ldw	r5,144(sp)
10109588:	288b883a 	add	r5,r5,r2
1010958c:	d9402415 	stw	r5,144(sp)
10109590:	003dd006 	br	10108cd4 <__alt_data_end+0xfffe8cd4>
10109594:	d8001d85 	stb	zero,118(sp)
10109598:	80005d16 	blt	r16,zero,10109710 <___vfiprintf_internal_r+0x1080>
1010959c:	00ffdfc4 	movi	r3,-129
101095a0:	9d04b03a 	or	r2,r19,r20
101095a4:	88e2703a 	and	r17,r17,r3
101095a8:	103d3726 	beq	r2,zero,10108a88 <__alt_data_end+0xfffe8a88>
101095ac:	002b883a 	mov	r21,zero
101095b0:	d9002617 	ldw	r4,152(sp)
101095b4:	ddc01a04 	addi	r23,sp,104
101095b8:	988003cc 	andi	r2,r19,15
101095bc:	a006973a 	slli	r3,r20,28
101095c0:	2085883a 	add	r2,r4,r2
101095c4:	9826d13a 	srli	r19,r19,4
101095c8:	10800003 	ldbu	r2,0(r2)
101095cc:	a028d13a 	srli	r20,r20,4
101095d0:	bdffffc4 	addi	r23,r23,-1
101095d4:	1ce6b03a 	or	r19,r3,r19
101095d8:	b8800005 	stb	r2,0(r23)
101095dc:	9d04b03a 	or	r2,r19,r20
101095e0:	103ff51e 	bne	r2,zero,101095b8 <__alt_data_end+0xfffe95b8>
101095e4:	d8801e17 	ldw	r2,120(sp)
101095e8:	15e9c83a 	sub	r20,r2,r23
101095ec:	003d2b06 	br	10108a9c <__alt_data_end+0xfffe8a9c>
101095f0:	d9402017 	ldw	r5,128(sp)
101095f4:	d9002117 	ldw	r4,132(sp)
101095f8:	d9801a04 	addi	r6,sp,104
101095fc:	010857c0 	call	1010857c <__sprint_r.part.0>
10109600:	103f5b1e 	bne	r2,zero,10109370 <__alt_data_end+0xfffe9370>
10109604:	d8801c17 	ldw	r2,112(sp)
10109608:	d811883a 	mov	r8,sp
1010960c:	003f6706 	br	101093ac <__alt_data_end+0xfffe93ac>
10109610:	d9402017 	ldw	r5,128(sp)
10109614:	d9002117 	ldw	r4,132(sp)
10109618:	d9801a04 	addi	r6,sp,104
1010961c:	010857c0 	call	1010857c <__sprint_r.part.0>
10109620:	103f531e 	bne	r2,zero,10109370 <__alt_data_end+0xfffe9370>
10109624:	d811883a 	mov	r8,sp
10109628:	003cd906 	br	10108990 <__alt_data_end+0xfffe8990>
1010962c:	10803fcc 	andi	r2,r2,255
10109630:	1080201c 	xori	r2,r2,128
10109634:	10bfe004 	addi	r2,r2,-128
10109638:	00c00c04 	movi	r3,48
1010963c:	10ffe926 	beq	r2,r3,101095e4 <__alt_data_end+0xfffe95e4>
10109640:	b8ffffc5 	stb	r3,-1(r23)
10109644:	d8c01e17 	ldw	r3,120(sp)
10109648:	b8bfffc4 	addi	r2,r23,-1
1010964c:	102f883a 	mov	r23,r2
10109650:	18a9c83a 	sub	r20,r3,r2
10109654:	003d1106 	br	10108a9c <__alt_data_end+0xfffe8a9c>
10109658:	d9402017 	ldw	r5,128(sp)
1010965c:	d9002117 	ldw	r4,132(sp)
10109660:	d9801a04 	addi	r6,sp,104
10109664:	d8c02a15 	stw	r3,168(sp)
10109668:	d9c02b15 	stw	r7,172(sp)
1010966c:	010857c0 	call	1010857c <__sprint_r.part.0>
10109670:	d8c02a17 	ldw	r3,168(sp)
10109674:	d9c02b17 	ldw	r7,172(sp)
10109678:	103f3d1e 	bne	r2,zero,10109370 <__alt_data_end+0xfffe9370>
1010967c:	d9001b17 	ldw	r4,108(sp)
10109680:	d8801c17 	ldw	r2,112(sp)
10109684:	d811883a 	mov	r8,sp
10109688:	21400044 	addi	r5,r4,1
1010968c:	003d4406 	br	10108ba0 <__alt_data_end+0xfffe8ba0>
10109690:	d9402017 	ldw	r5,128(sp)
10109694:	d9002117 	ldw	r4,132(sp)
10109698:	d9801a04 	addi	r6,sp,104
1010969c:	d8c02a15 	stw	r3,168(sp)
101096a0:	010857c0 	call	1010857c <__sprint_r.part.0>
101096a4:	d8c02a17 	ldw	r3,168(sp)
101096a8:	103f311e 	bne	r2,zero,10109370 <__alt_data_end+0xfffe9370>
101096ac:	d9001b17 	ldw	r4,108(sp)
101096b0:	d8801c17 	ldw	r2,112(sp)
101096b4:	d811883a 	mov	r8,sp
101096b8:	21400044 	addi	r5,r4,1
101096bc:	003ef406 	br	10109290 <__alt_data_end+0xfffe9290>
101096c0:	1000bd1e 	bne	r2,zero,101099b8 <___vfiprintf_internal_r+0x1328>
101096c4:	01400044 	movi	r5,1
101096c8:	0009883a 	mov	r4,zero
101096cc:	d811883a 	mov	r8,sp
101096d0:	003ef106 	br	10109298 <__alt_data_end+0xfffe9298>
101096d4:	d9402017 	ldw	r5,128(sp)
101096d8:	d9002117 	ldw	r4,132(sp)
101096dc:	d9801a04 	addi	r6,sp,104
101096e0:	010857c0 	call	1010857c <__sprint_r.part.0>
101096e4:	103f221e 	bne	r2,zero,10109370 <__alt_data_end+0xfffe9370>
101096e8:	d9401b17 	ldw	r5,108(sp)
101096ec:	d8801c17 	ldw	r2,112(sp)
101096f0:	d811883a 	mov	r8,sp
101096f4:	29400044 	addi	r5,r5,1
101096f8:	003d6206 	br	10108c84 <__alt_data_end+0xfffe8c84>
101096fc:	01440474 	movhi	r5,4113
10109700:	29419504 	addi	r5,r5,1620
10109704:	d9402615 	stw	r5,152(sp)
10109708:	d8c02215 	stw	r3,136(sp)
1010970c:	1023883a 	mov	r17,r2
10109710:	9d04b03a 	or	r2,r19,r20
10109714:	103fa51e 	bne	r2,zero,101095ac <__alt_data_end+0xfffe95ac>
10109718:	002b883a 	mov	r21,zero
1010971c:	00800084 	movi	r2,2
10109720:	003e4a06 	br	1010904c <__alt_data_end+0xfffe904c>
10109724:	01440474 	movhi	r5,4113
10109728:	29419504 	addi	r5,r5,1620
1010972c:	002b883a 	mov	r21,zero
10109730:	d9402615 	stw	r5,152(sp)
10109734:	003f9e06 	br	101095b0 <__alt_data_end+0xfffe95b0>
10109738:	d9402217 	ldw	r5,136(sp)
1010973c:	d8001d85 	stb	zero,118(sp)
10109740:	0029883a 	mov	r20,zero
10109744:	28800104 	addi	r2,r5,4
10109748:	2cc00017 	ldw	r19,0(r5)
1010974c:	803e3a16 	blt	r16,zero,10109038 <__alt_data_end+0xfffe9038>
10109750:	00ffdfc4 	movi	r3,-129
10109754:	d8802215 	stw	r2,136(sp)
10109758:	88e2703a 	and	r17,r17,r3
1010975c:	002b883a 	mov	r21,zero
10109760:	983e9b26 	beq	r19,zero,101091d0 <__alt_data_end+0xfffe91d0>
10109764:	00800244 	movi	r2,9
10109768:	14fdc936 	bltu	r2,r19,10108e90 <__alt_data_end+0xfffe8e90>
1010976c:	003e9a06 	br	101091d8 <__alt_data_end+0xfffe91d8>
10109770:	00800c04 	movi	r2,48
10109774:	d8c01d45 	stb	r3,117(sp)
10109778:	d8801d05 	stb	r2,116(sp)
1010977c:	d8001d85 	stb	zero,118(sp)
10109780:	88c00094 	ori	r3,r17,2
10109784:	80009c16 	blt	r16,zero,101099f8 <___vfiprintf_internal_r+0x1368>
10109788:	00bfdfc4 	movi	r2,-129
1010978c:	88a2703a 	and	r17,r17,r2
10109790:	8c400094 	ori	r17,r17,2
10109794:	002b883a 	mov	r21,zero
10109798:	003f8506 	br	101095b0 <__alt_data_end+0xfffe95b0>
1010979c:	b029883a 	mov	r20,r22
101097a0:	003c0b06 	br	101087d0 <__alt_data_end+0xfffe87d0>
101097a4:	04e7c83a 	sub	r19,zero,r19
101097a8:	05400b44 	movi	r21,45
101097ac:	9804c03a 	cmpne	r2,r19,zero
101097b0:	0529c83a 	sub	r20,zero,r20
101097b4:	dd401d85 	stb	r21,118(sp)
101097b8:	a0a9c83a 	sub	r20,r20,r2
101097bc:	80009716 	blt	r16,zero,10109a1c <___vfiprintf_internal_r+0x138c>
101097c0:	00bfdfc4 	movi	r2,-129
101097c4:	88a2703a 	and	r17,r17,r2
101097c8:	003db006 	br	10108e8c <__alt_data_end+0xfffe8e8c>
101097cc:	b0c00007 	ldb	r3,0(r22)
101097d0:	003c0c06 	br	10108804 <__alt_data_end+0xfffe8804>
101097d4:	8880100c 	andi	r2,r17,64
101097d8:	d8001d85 	stb	zero,118(sp)
101097dc:	1000461e 	bne	r2,zero,101098f8 <___vfiprintf_internal_r+0x1268>
101097e0:	d9002217 	ldw	r4,136(sp)
101097e4:	0029883a 	mov	r20,zero
101097e8:	20800104 	addi	r2,r4,4
101097ec:	24c00017 	ldw	r19,0(r4)
101097f0:	803df80e 	bge	r16,zero,10108fd4 <__alt_data_end+0xfffe8fd4>
101097f4:	9d06b03a 	or	r3,r19,r20
101097f8:	d8802215 	stw	r2,136(sp)
101097fc:	183d5e1e 	bne	r3,zero,10108d78 <__alt_data_end+0xfffe8d78>
10109800:	002b883a 	mov	r21,zero
10109804:	0005883a 	mov	r2,zero
10109808:	003e1006 	br	1010904c <__alt_data_end+0xfffe904c>
1010980c:	8880040c 	andi	r2,r17,16
10109810:	1000321e 	bne	r2,zero,101098dc <___vfiprintf_internal_r+0x124c>
10109814:	8c40100c 	andi	r17,r17,64
10109818:	88008d26 	beq	r17,zero,10109a50 <___vfiprintf_internal_r+0x13c0>
1010981c:	d9402217 	ldw	r5,136(sp)
10109820:	d8c02417 	ldw	r3,144(sp)
10109824:	28800017 	ldw	r2,0(r5)
10109828:	29400104 	addi	r5,r5,4
1010982c:	d9402215 	stw	r5,136(sp)
10109830:	10c0000d 	sth	r3,0(r2)
10109834:	003bca06 	br	10108760 <__alt_data_end+0xfffe8760>
10109838:	8880100c 	andi	r2,r17,64
1010983c:	10003a26 	beq	r2,zero,10109928 <___vfiprintf_internal_r+0x1298>
10109840:	d8802217 	ldw	r2,136(sp)
10109844:	14c0000f 	ldh	r19,0(r2)
10109848:	10800104 	addi	r2,r2,4
1010984c:	d8802215 	stw	r2,136(sp)
10109850:	9829d7fa 	srai	r20,r19,31
10109854:	a005883a 	mov	r2,r20
10109858:	003d8506 	br	10108e70 <__alt_data_end+0xfffe8e70>
1010985c:	8880100c 	andi	r2,r17,64
10109860:	10002b26 	beq	r2,zero,10109910 <___vfiprintf_internal_r+0x1280>
10109864:	d8802217 	ldw	r2,136(sp)
10109868:	0029883a 	mov	r20,zero
1010986c:	14c0000b 	ldhu	r19,0(r2)
10109870:	10800104 	addi	r2,r2,4
10109874:	d8802215 	stw	r2,136(sp)
10109878:	003d5d06 	br	10108df0 <__alt_data_end+0xfffe8df0>
1010987c:	d9402017 	ldw	r5,128(sp)
10109880:	d9002117 	ldw	r4,132(sp)
10109884:	d9801a04 	addi	r6,sp,104
10109888:	d8c02a15 	stw	r3,168(sp)
1010988c:	d9c02b15 	stw	r7,172(sp)
10109890:	010857c0 	call	1010857c <__sprint_r.part.0>
10109894:	d8c02a17 	ldw	r3,168(sp)
10109898:	d9c02b17 	ldw	r7,172(sp)
1010989c:	103eb41e 	bne	r2,zero,10109370 <__alt_data_end+0xfffe9370>
101098a0:	d9001b17 	ldw	r4,108(sp)
101098a4:	d8801c17 	ldw	r2,112(sp)
101098a8:	d811883a 	mov	r8,sp
101098ac:	21400044 	addi	r5,r4,1
101098b0:	003e6706 	br	10109250 <__alt_data_end+0xfffe9250>
101098b4:	00bfffc4 	movi	r2,-1
101098b8:	003c4a06 	br	101089e4 <__alt_data_end+0xfffe89e4>
101098bc:	9805883a 	mov	r2,r19
101098c0:	003ee806 	br	10109464 <__alt_data_end+0xfffe9464>
101098c4:	d8c02217 	ldw	r3,136(sp)
101098c8:	0029883a 	mov	r20,zero
101098cc:	18800104 	addi	r2,r3,4
101098d0:	1cc0000b 	ldhu	r19,0(r3)
101098d4:	803f9e0e 	bge	r16,zero,10109750 <__alt_data_end+0xfffe9750>
101098d8:	003dd706 	br	10109038 <__alt_data_end+0xfffe9038>
101098dc:	d8c02217 	ldw	r3,136(sp)
101098e0:	d9002417 	ldw	r4,144(sp)
101098e4:	18800017 	ldw	r2,0(r3)
101098e8:	18c00104 	addi	r3,r3,4
101098ec:	d8c02215 	stw	r3,136(sp)
101098f0:	11000015 	stw	r4,0(r2)
101098f4:	003b9a06 	br	10108760 <__alt_data_end+0xfffe8760>
101098f8:	d8c02217 	ldw	r3,136(sp)
101098fc:	0029883a 	mov	r20,zero
10109900:	18800104 	addi	r2,r3,4
10109904:	1cc0000b 	ldhu	r19,0(r3)
10109908:	803db20e 	bge	r16,zero,10108fd4 <__alt_data_end+0xfffe8fd4>
1010990c:	003fb906 	br	101097f4 <__alt_data_end+0xfffe97f4>
10109910:	d9002217 	ldw	r4,136(sp)
10109914:	0029883a 	mov	r20,zero
10109918:	24c00017 	ldw	r19,0(r4)
1010991c:	21000104 	addi	r4,r4,4
10109920:	d9002215 	stw	r4,136(sp)
10109924:	003d3206 	br	10108df0 <__alt_data_end+0xfffe8df0>
10109928:	d8c02217 	ldw	r3,136(sp)
1010992c:	1cc00017 	ldw	r19,0(r3)
10109930:	18c00104 	addi	r3,r3,4
10109934:	d8c02215 	stw	r3,136(sp)
10109938:	9829d7fa 	srai	r20,r19,31
1010993c:	a005883a 	mov	r2,r20
10109940:	003d4b06 	br	10108e70 <__alt_data_end+0xfffe8e70>
10109944:	0009883a 	mov	r4,zero
10109948:	01400044 	movi	r5,1
1010994c:	d811883a 	mov	r8,sp
10109950:	003e4f06 	br	10109290 <__alt_data_end+0xfffe9290>
10109954:	d8c02215 	stw	r3,136(sp)
10109958:	002b883a 	mov	r21,zero
1010995c:	003db806 	br	10109040 <__alt_data_end+0xfffe9040>
10109960:	d811883a 	mov	r8,sp
10109964:	003e9606 	br	101093c0 <__alt_data_end+0xfffe93c0>
10109968:	01040474 	movhi	r4,4113
1010996c:	2101f604 	addi	r4,r4,2008
10109970:	d9002315 	stw	r4,140(sp)
10109974:	003e6306 	br	10109304 <__alt_data_end+0xfffe9304>
10109978:	b0c00043 	ldbu	r3,1(r22)
1010997c:	8c400814 	ori	r17,r17,32
10109980:	b5800044 	addi	r22,r22,1
10109984:	18c03fcc 	andi	r3,r3,255
10109988:	18c0201c 	xori	r3,r3,128
1010998c:	18ffe004 	addi	r3,r3,-128
10109990:	003b9c06 	br	10108804 <__alt_data_end+0xfffe8804>
10109994:	b809883a 	mov	r4,r23
10109998:	da002a15 	stw	r8,168(sp)
1010999c:	0100f480 	call	10100f48 <strlen>
101099a0:	1029883a 	mov	r20,r2
101099a4:	dd401d83 	ldbu	r21,118(sp)
101099a8:	df002215 	stw	fp,136(sp)
101099ac:	0021883a 	mov	r16,zero
101099b0:	da002a17 	ldw	r8,168(sp)
101099b4:	003c3906 	br	10108a9c <__alt_data_end+0xfffe8a9c>
101099b8:	d9402017 	ldw	r5,128(sp)
101099bc:	d9002117 	ldw	r4,132(sp)
101099c0:	d9801a04 	addi	r6,sp,104
101099c4:	010857c0 	call	1010857c <__sprint_r.part.0>
101099c8:	103e691e 	bne	r2,zero,10109370 <__alt_data_end+0xfffe9370>
101099cc:	d9001b17 	ldw	r4,108(sp)
101099d0:	d8801c17 	ldw	r2,112(sp)
101099d4:	d811883a 	mov	r8,sp
101099d8:	21400044 	addi	r5,r4,1
101099dc:	003e2e06 	br	10109298 <__alt_data_end+0xfffe9298>
101099e0:	01040474 	movhi	r4,4113
101099e4:	2101fa04 	addi	r4,r4,2024
101099e8:	d9002315 	stw	r4,140(sp)
101099ec:	d9001b17 	ldw	r4,108(sp)
101099f0:	21000044 	addi	r4,r4,1
101099f4:	003c5e06 	br	10108b70 <__alt_data_end+0xfffe8b70>
101099f8:	002b883a 	mov	r21,zero
101099fc:	00800084 	movi	r2,2
10109a00:	10803fcc 	andi	r2,r2,255
10109a04:	01000044 	movi	r4,1
10109a08:	11002b26 	beq	r2,r4,10109ab8 <___vfiprintf_internal_r+0x1428>
10109a0c:	01000084 	movi	r4,2
10109a10:	11002b1e 	bne	r2,r4,10109ac0 <___vfiprintf_internal_r+0x1430>
10109a14:	1823883a 	mov	r17,r3
10109a18:	003ee506 	br	101095b0 <__alt_data_end+0xfffe95b0>
10109a1c:	8807883a 	mov	r3,r17
10109a20:	00800044 	movi	r2,1
10109a24:	003ff606 	br	10109a00 <__alt_data_end+0xfffe9a00>
10109a28:	00800184 	movi	r2,6
10109a2c:	1400012e 	bgeu	r2,r16,10109a34 <___vfiprintf_internal_r+0x13a4>
10109a30:	1021883a 	mov	r16,r2
10109a34:	8029883a 	mov	r20,r16
10109a38:	8027883a 	mov	r19,r16
10109a3c:	80002216 	blt	r16,zero,10109ac8 <___vfiprintf_internal_r+0x1438>
10109a40:	05c40474 	movhi	r23,4113
10109a44:	df002215 	stw	fp,136(sp)
10109a48:	bdc19a04 	addi	r23,r23,1640
10109a4c:	003cfb06 	br	10108e3c <__alt_data_end+0xfffe8e3c>
10109a50:	d9002217 	ldw	r4,136(sp)
10109a54:	d9402417 	ldw	r5,144(sp)
10109a58:	20800017 	ldw	r2,0(r4)
10109a5c:	21000104 	addi	r4,r4,4
10109a60:	d9002215 	stw	r4,136(sp)
10109a64:	11400015 	stw	r5,0(r2)
10109a68:	003b3d06 	br	10108760 <__alt_data_end+0xfffe8760>
10109a6c:	01440474 	movhi	r5,4113
10109a70:	2941fa04 	addi	r5,r5,2024
10109a74:	d9402315 	stw	r5,140(sp)
10109a78:	d9401b17 	ldw	r5,108(sp)
10109a7c:	29400044 	addi	r5,r5,1
10109a80:	003e6d06 	br	10109438 <__alt_data_end+0xfffe9438>
10109a84:	8029883a 	mov	r20,r16
10109a88:	dd401d83 	ldbu	r21,118(sp)
10109a8c:	df002215 	stw	fp,136(sp)
10109a90:	0021883a 	mov	r16,zero
10109a94:	003c0106 	br	10108a9c <__alt_data_end+0xfffe8a9c>
10109a98:	00c40474 	movhi	r3,4113
10109a9c:	18c1f604 	addi	r3,r3,2008
10109aa0:	d8c02315 	stw	r3,140(sp)
10109aa4:	280d883a 	mov	r6,r5
10109aa8:	003c6906 	br	10108c50 <__alt_data_end+0xfffe8c50>
10109aac:	802d883a 	mov	r22,r16
10109ab0:	0021883a 	mov	r16,zero
10109ab4:	003b5406 	br	10108808 <__alt_data_end+0xfffe8808>
10109ab8:	1823883a 	mov	r17,r3
10109abc:	003cf306 	br	10108e8c <__alt_data_end+0xfffe8e8c>
10109ac0:	1823883a 	mov	r17,r3
10109ac4:	003cad06 	br	10108d7c <__alt_data_end+0xfffe8d7c>
10109ac8:	0027883a 	mov	r19,zero
10109acc:	003fdc06 	br	10109a40 <__alt_data_end+0xfffe9a40>
10109ad0:	d9402217 	ldw	r5,136(sp)
10109ad4:	8005883a 	mov	r2,r16
10109ad8:	b0c00043 	ldbu	r3,1(r22)
10109adc:	2c000017 	ldw	r16,0(r5)
10109ae0:	29000104 	addi	r4,r5,4
10109ae4:	d9002215 	stw	r4,136(sp)
10109ae8:	102d883a 	mov	r22,r2
10109aec:	803fa50e 	bge	r16,zero,10109984 <__alt_data_end+0xfffe9984>
10109af0:	18c03fcc 	andi	r3,r3,255
10109af4:	18c0201c 	xori	r3,r3,128
10109af8:	043fffc4 	movi	r16,-1
10109afc:	18ffe004 	addi	r3,r3,-128
10109b00:	003b4006 	br	10108804 <__alt_data_end+0xfffe8804>
10109b04:	d9402303 	ldbu	r5,140(sp)
10109b08:	d9401d85 	stb	r5,118(sp)
10109b0c:	003cae06 	br	10108dc8 <__alt_data_end+0xfffe8dc8>
10109b10:	d8c02303 	ldbu	r3,140(sp)
10109b14:	d8c01d85 	stb	r3,118(sp)
10109b18:	003d1406 	br	10108f6c <__alt_data_end+0xfffe8f6c>
10109b1c:	d8c02303 	ldbu	r3,140(sp)
10109b20:	d8c01d85 	stb	r3,118(sp)
10109b24:	003cca06 	br	10108e50 <__alt_data_end+0xfffe8e50>
10109b28:	8880004c 	andi	r2,r17,1
10109b2c:	002b883a 	mov	r21,zero
10109b30:	10000526 	beq	r2,zero,10109b48 <___vfiprintf_internal_r+0x14b8>
10109b34:	00800c04 	movi	r2,48
10109b38:	d88019c5 	stb	r2,103(sp)
10109b3c:	dd002817 	ldw	r20,160(sp)
10109b40:	ddc019c4 	addi	r23,sp,103
10109b44:	003bd506 	br	10108a9c <__alt_data_end+0xfffe8a9c>
10109b48:	0029883a 	mov	r20,zero
10109b4c:	ddc01a04 	addi	r23,sp,104
10109b50:	003bd206 	br	10108a9c <__alt_data_end+0xfffe8a9c>
10109b54:	d9002303 	ldbu	r4,140(sp)
10109b58:	d9001d85 	stb	r4,118(sp)
10109b5c:	003da606 	br	101091f8 <__alt_data_end+0xfffe91f8>
10109b60:	d8c02303 	ldbu	r3,140(sp)
10109b64:	d8c01d85 	stb	r3,118(sp)
10109b68:	003c7606 	br	10108d44 <__alt_data_end+0xfffe8d44>
10109b6c:	d8c02303 	ldbu	r3,140(sp)
10109b70:	d8c01d85 	stb	r3,118(sp)
10109b74:	003c6506 	br	10108d0c <__alt_data_end+0xfffe8d0c>
10109b78:	d9002303 	ldbu	r4,140(sp)
10109b7c:	d9001d85 	stb	r4,118(sp)
10109b80:	003d3d06 	br	10109078 <__alt_data_end+0xfffe9078>
10109b84:	d8c02303 	ldbu	r3,140(sp)
10109b88:	d8c01d85 	stb	r3,118(sp)
10109b8c:	003d1d06 	br	10109004 <__alt_data_end+0xfffe9004>
10109b90:	d8c02303 	ldbu	r3,140(sp)
10109b94:	d8c01d85 	stb	r3,118(sp)
10109b98:	003d0306 	br	10108fa8 <__alt_data_end+0xfffe8fa8>

10109b9c <__vfiprintf_internal>:
10109b9c:	00840474 	movhi	r2,4113
10109ba0:	10890404 	addi	r2,r2,9232
10109ba4:	300f883a 	mov	r7,r6
10109ba8:	280d883a 	mov	r6,r5
10109bac:	200b883a 	mov	r5,r4
10109bb0:	11000017 	ldw	r4,0(r2)
10109bb4:	01086901 	jmpi	10108690 <___vfiprintf_internal_r>

10109bb8 <__sbprintf>:
10109bb8:	2880030b 	ldhu	r2,12(r5)
10109bbc:	2ac01917 	ldw	r11,100(r5)
10109bc0:	2a80038b 	ldhu	r10,14(r5)
10109bc4:	2a400717 	ldw	r9,28(r5)
10109bc8:	2a000917 	ldw	r8,36(r5)
10109bcc:	defee204 	addi	sp,sp,-1144
10109bd0:	00c10004 	movi	r3,1024
10109bd4:	dc011a15 	stw	r16,1128(sp)
10109bd8:	10bfff4c 	andi	r2,r2,65533
10109bdc:	2821883a 	mov	r16,r5
10109be0:	d8cb883a 	add	r5,sp,r3
10109be4:	dc811c15 	stw	r18,1136(sp)
10109be8:	dc411b15 	stw	r17,1132(sp)
10109bec:	dfc11d15 	stw	ra,1140(sp)
10109bf0:	2025883a 	mov	r18,r4
10109bf4:	d881030d 	sth	r2,1036(sp)
10109bf8:	dac11915 	stw	r11,1124(sp)
10109bfc:	da81038d 	sth	r10,1038(sp)
10109c00:	da410715 	stw	r9,1052(sp)
10109c04:	da010915 	stw	r8,1060(sp)
10109c08:	dec10015 	stw	sp,1024(sp)
10109c0c:	dec10415 	stw	sp,1040(sp)
10109c10:	d8c10215 	stw	r3,1032(sp)
10109c14:	d8c10515 	stw	r3,1044(sp)
10109c18:	d8010615 	stw	zero,1048(sp)
10109c1c:	01086900 	call	10108690 <___vfiprintf_internal_r>
10109c20:	1023883a 	mov	r17,r2
10109c24:	10000416 	blt	r2,zero,10109c38 <__sbprintf+0x80>
10109c28:	d9410004 	addi	r5,sp,1024
10109c2c:	9009883a 	mov	r4,r18
10109c30:	0104fb40 	call	10104fb4 <_fflush_r>
10109c34:	10000d1e 	bne	r2,zero,10109c6c <__sbprintf+0xb4>
10109c38:	d881030b 	ldhu	r2,1036(sp)
10109c3c:	1080100c 	andi	r2,r2,64
10109c40:	10000326 	beq	r2,zero,10109c50 <__sbprintf+0x98>
10109c44:	8080030b 	ldhu	r2,12(r16)
10109c48:	10801014 	ori	r2,r2,64
10109c4c:	8080030d 	sth	r2,12(r16)
10109c50:	8805883a 	mov	r2,r17
10109c54:	dfc11d17 	ldw	ra,1140(sp)
10109c58:	dc811c17 	ldw	r18,1136(sp)
10109c5c:	dc411b17 	ldw	r17,1132(sp)
10109c60:	dc011a17 	ldw	r16,1128(sp)
10109c64:	dec11e04 	addi	sp,sp,1144
10109c68:	f800283a 	ret
10109c6c:	047fffc4 	movi	r17,-1
10109c70:	003ff106 	br	10109c38 <__alt_data_end+0xfffe9c38>

10109c74 <_write_r>:
10109c74:	defffd04 	addi	sp,sp,-12
10109c78:	2805883a 	mov	r2,r5
10109c7c:	dc000015 	stw	r16,0(sp)
10109c80:	04040474 	movhi	r16,4113
10109c84:	dc400115 	stw	r17,4(sp)
10109c88:	300b883a 	mov	r5,r6
10109c8c:	84100204 	addi	r16,r16,16392
10109c90:	2023883a 	mov	r17,r4
10109c94:	380d883a 	mov	r6,r7
10109c98:	1009883a 	mov	r4,r2
10109c9c:	dfc00215 	stw	ra,8(sp)
10109ca0:	80000015 	stw	zero,0(r16)
10109ca4:	010e2b80 	call	1010e2b8 <write>
10109ca8:	00ffffc4 	movi	r3,-1
10109cac:	10c00526 	beq	r2,r3,10109cc4 <_write_r+0x50>
10109cb0:	dfc00217 	ldw	ra,8(sp)
10109cb4:	dc400117 	ldw	r17,4(sp)
10109cb8:	dc000017 	ldw	r16,0(sp)
10109cbc:	dec00304 	addi	sp,sp,12
10109cc0:	f800283a 	ret
10109cc4:	80c00017 	ldw	r3,0(r16)
10109cc8:	183ff926 	beq	r3,zero,10109cb0 <__alt_data_end+0xfffe9cb0>
10109ccc:	88c00015 	stw	r3,0(r17)
10109cd0:	003ff706 	br	10109cb0 <__alt_data_end+0xfffe9cb0>

10109cd4 <_close_r>:
10109cd4:	defffd04 	addi	sp,sp,-12
10109cd8:	dc000015 	stw	r16,0(sp)
10109cdc:	04040474 	movhi	r16,4113
10109ce0:	dc400115 	stw	r17,4(sp)
10109ce4:	84100204 	addi	r16,r16,16392
10109ce8:	2023883a 	mov	r17,r4
10109cec:	2809883a 	mov	r4,r5
10109cf0:	dfc00215 	stw	ra,8(sp)
10109cf4:	80000015 	stw	zero,0(r16)
10109cf8:	010da600 	call	1010da60 <close>
10109cfc:	00ffffc4 	movi	r3,-1
10109d00:	10c00526 	beq	r2,r3,10109d18 <_close_r+0x44>
10109d04:	dfc00217 	ldw	ra,8(sp)
10109d08:	dc400117 	ldw	r17,4(sp)
10109d0c:	dc000017 	ldw	r16,0(sp)
10109d10:	dec00304 	addi	sp,sp,12
10109d14:	f800283a 	ret
10109d18:	80c00017 	ldw	r3,0(r16)
10109d1c:	183ff926 	beq	r3,zero,10109d04 <__alt_data_end+0xfffe9d04>
10109d20:	88c00015 	stw	r3,0(r17)
10109d24:	003ff706 	br	10109d04 <__alt_data_end+0xfffe9d04>

10109d28 <_calloc_r>:
10109d28:	defffe04 	addi	sp,sp,-8
10109d2c:	2805883a 	mov	r2,r5
10109d30:	dc000015 	stw	r16,0(sp)
10109d34:	300b883a 	mov	r5,r6
10109d38:	2021883a 	mov	r16,r4
10109d3c:	1009883a 	mov	r4,r2
10109d40:	dfc00115 	stw	ra,4(sp)
10109d44:	0100c980 	call	10100c98 <__mulsi3>
10109d48:	100b883a 	mov	r5,r2
10109d4c:	8009883a 	mov	r4,r16
10109d50:	010610c0 	call	1010610c <_malloc_r>
10109d54:	10002926 	beq	r2,zero,10109dfc <_calloc_r+0xd4>
10109d58:	11bfff17 	ldw	r6,-4(r2)
10109d5c:	1021883a 	mov	r16,r2
10109d60:	00bfff04 	movi	r2,-4
10109d64:	308c703a 	and	r6,r6,r2
10109d68:	00c00904 	movi	r3,36
10109d6c:	308d883a 	add	r6,r6,r2
10109d70:	19801636 	bltu	r3,r6,10109dcc <_calloc_r+0xa4>
10109d74:	008004c4 	movi	r2,19
10109d78:	11800b2e 	bgeu	r2,r6,10109da8 <_calloc_r+0x80>
10109d7c:	80000015 	stw	zero,0(r16)
10109d80:	80000115 	stw	zero,4(r16)
10109d84:	008006c4 	movi	r2,27
10109d88:	11801a2e 	bgeu	r2,r6,10109df4 <_calloc_r+0xcc>
10109d8c:	80000215 	stw	zero,8(r16)
10109d90:	80000315 	stw	zero,12(r16)
10109d94:	30c0151e 	bne	r6,r3,10109dec <_calloc_r+0xc4>
10109d98:	80000415 	stw	zero,16(r16)
10109d9c:	80800604 	addi	r2,r16,24
10109da0:	80000515 	stw	zero,20(r16)
10109da4:	00000106 	br	10109dac <_calloc_r+0x84>
10109da8:	8005883a 	mov	r2,r16
10109dac:	10000015 	stw	zero,0(r2)
10109db0:	10000115 	stw	zero,4(r2)
10109db4:	10000215 	stw	zero,8(r2)
10109db8:	8005883a 	mov	r2,r16
10109dbc:	dfc00117 	ldw	ra,4(sp)
10109dc0:	dc000017 	ldw	r16,0(sp)
10109dc4:	dec00204 	addi	sp,sp,8
10109dc8:	f800283a 	ret
10109dcc:	000b883a 	mov	r5,zero
10109dd0:	8009883a 	mov	r4,r16
10109dd4:	0106b580 	call	10106b58 <memset>
10109dd8:	8005883a 	mov	r2,r16
10109ddc:	dfc00117 	ldw	ra,4(sp)
10109de0:	dc000017 	ldw	r16,0(sp)
10109de4:	dec00204 	addi	sp,sp,8
10109de8:	f800283a 	ret
10109dec:	80800404 	addi	r2,r16,16
10109df0:	003fee06 	br	10109dac <__alt_data_end+0xfffe9dac>
10109df4:	80800204 	addi	r2,r16,8
10109df8:	003fec06 	br	10109dac <__alt_data_end+0xfffe9dac>
10109dfc:	0005883a 	mov	r2,zero
10109e00:	003fee06 	br	10109dbc <__alt_data_end+0xfffe9dbc>

10109e04 <_fclose_r>:
10109e04:	28003926 	beq	r5,zero,10109eec <_fclose_r+0xe8>
10109e08:	defffc04 	addi	sp,sp,-16
10109e0c:	dc400115 	stw	r17,4(sp)
10109e10:	dc000015 	stw	r16,0(sp)
10109e14:	dfc00315 	stw	ra,12(sp)
10109e18:	dc800215 	stw	r18,8(sp)
10109e1c:	2023883a 	mov	r17,r4
10109e20:	2821883a 	mov	r16,r5
10109e24:	20000226 	beq	r4,zero,10109e30 <_fclose_r+0x2c>
10109e28:	20800e17 	ldw	r2,56(r4)
10109e2c:	10002726 	beq	r2,zero,10109ecc <_fclose_r+0xc8>
10109e30:	8080030f 	ldh	r2,12(r16)
10109e34:	1000071e 	bne	r2,zero,10109e54 <_fclose_r+0x50>
10109e38:	0005883a 	mov	r2,zero
10109e3c:	dfc00317 	ldw	ra,12(sp)
10109e40:	dc800217 	ldw	r18,8(sp)
10109e44:	dc400117 	ldw	r17,4(sp)
10109e48:	dc000017 	ldw	r16,0(sp)
10109e4c:	dec00404 	addi	sp,sp,16
10109e50:	f800283a 	ret
10109e54:	800b883a 	mov	r5,r16
10109e58:	8809883a 	mov	r4,r17
10109e5c:	0104d980 	call	10104d98 <__sflush_r>
10109e60:	1025883a 	mov	r18,r2
10109e64:	80800b17 	ldw	r2,44(r16)
10109e68:	10000426 	beq	r2,zero,10109e7c <_fclose_r+0x78>
10109e6c:	81400717 	ldw	r5,28(r16)
10109e70:	8809883a 	mov	r4,r17
10109e74:	103ee83a 	callr	r2
10109e78:	10001616 	blt	r2,zero,10109ed4 <_fclose_r+0xd0>
10109e7c:	8080030b 	ldhu	r2,12(r16)
10109e80:	1080200c 	andi	r2,r2,128
10109e84:	1000151e 	bne	r2,zero,10109edc <_fclose_r+0xd8>
10109e88:	81400c17 	ldw	r5,48(r16)
10109e8c:	28000526 	beq	r5,zero,10109ea4 <_fclose_r+0xa0>
10109e90:	80801004 	addi	r2,r16,64
10109e94:	28800226 	beq	r5,r2,10109ea0 <_fclose_r+0x9c>
10109e98:	8809883a 	mov	r4,r17
10109e9c:	01055140 	call	10105514 <_free_r>
10109ea0:	80000c15 	stw	zero,48(r16)
10109ea4:	81401117 	ldw	r5,68(r16)
10109ea8:	28000326 	beq	r5,zero,10109eb8 <_fclose_r+0xb4>
10109eac:	8809883a 	mov	r4,r17
10109eb0:	01055140 	call	10105514 <_free_r>
10109eb4:	80001115 	stw	zero,68(r16)
10109eb8:	01053b00 	call	101053b0 <__sfp_lock_acquire>
10109ebc:	8000030d 	sth	zero,12(r16)
10109ec0:	01053b40 	call	101053b4 <__sfp_lock_release>
10109ec4:	9005883a 	mov	r2,r18
10109ec8:	003fdc06 	br	10109e3c <__alt_data_end+0xfffe9e3c>
10109ecc:	01053a00 	call	101053a0 <__sinit>
10109ed0:	003fd706 	br	10109e30 <__alt_data_end+0xfffe9e30>
10109ed4:	04bfffc4 	movi	r18,-1
10109ed8:	003fe806 	br	10109e7c <__alt_data_end+0xfffe9e7c>
10109edc:	81400417 	ldw	r5,16(r16)
10109ee0:	8809883a 	mov	r4,r17
10109ee4:	01055140 	call	10105514 <_free_r>
10109ee8:	003fe706 	br	10109e88 <__alt_data_end+0xfffe9e88>
10109eec:	0005883a 	mov	r2,zero
10109ef0:	f800283a 	ret

10109ef4 <fclose>:
10109ef4:	00840474 	movhi	r2,4113
10109ef8:	10890404 	addi	r2,r2,9232
10109efc:	200b883a 	mov	r5,r4
10109f00:	11000017 	ldw	r4,0(r2)
10109f04:	0109e041 	jmpi	10109e04 <_fclose_r>

10109f08 <__fputwc>:
10109f08:	defff804 	addi	sp,sp,-32
10109f0c:	dcc00415 	stw	r19,16(sp)
10109f10:	dc800315 	stw	r18,12(sp)
10109f14:	dc000115 	stw	r16,4(sp)
10109f18:	dfc00715 	stw	ra,28(sp)
10109f1c:	dd400615 	stw	r21,24(sp)
10109f20:	dd000515 	stw	r20,20(sp)
10109f24:	dc400215 	stw	r17,8(sp)
10109f28:	2027883a 	mov	r19,r4
10109f2c:	2825883a 	mov	r18,r5
10109f30:	3021883a 	mov	r16,r6
10109f34:	0105efc0 	call	10105efc <__locale_mb_cur_max>
10109f38:	00c00044 	movi	r3,1
10109f3c:	10c03e26 	beq	r2,r3,1010a038 <__fputwc+0x130>
10109f40:	81c01704 	addi	r7,r16,92
10109f44:	900d883a 	mov	r6,r18
10109f48:	d80b883a 	mov	r5,sp
10109f4c:	9809883a 	mov	r4,r19
10109f50:	010a3d80 	call	1010a3d8 <_wcrtomb_r>
10109f54:	1029883a 	mov	r20,r2
10109f58:	00bfffc4 	movi	r2,-1
10109f5c:	a0802026 	beq	r20,r2,10109fe0 <__fputwc+0xd8>
10109f60:	d9400003 	ldbu	r5,0(sp)
10109f64:	a0001c26 	beq	r20,zero,10109fd8 <__fputwc+0xd0>
10109f68:	0023883a 	mov	r17,zero
10109f6c:	05400284 	movi	r21,10
10109f70:	00000906 	br	10109f98 <__fputwc+0x90>
10109f74:	80800017 	ldw	r2,0(r16)
10109f78:	11400005 	stb	r5,0(r2)
10109f7c:	80c00017 	ldw	r3,0(r16)
10109f80:	18c00044 	addi	r3,r3,1
10109f84:	80c00015 	stw	r3,0(r16)
10109f88:	8c400044 	addi	r17,r17,1
10109f8c:	dc45883a 	add	r2,sp,r17
10109f90:	8d00112e 	bgeu	r17,r20,10109fd8 <__fputwc+0xd0>
10109f94:	11400003 	ldbu	r5,0(r2)
10109f98:	80c00217 	ldw	r3,8(r16)
10109f9c:	18ffffc4 	addi	r3,r3,-1
10109fa0:	80c00215 	stw	r3,8(r16)
10109fa4:	183ff30e 	bge	r3,zero,10109f74 <__alt_data_end+0xfffe9f74>
10109fa8:	80800617 	ldw	r2,24(r16)
10109fac:	18801916 	blt	r3,r2,1010a014 <__fputwc+0x10c>
10109fb0:	80800017 	ldw	r2,0(r16)
10109fb4:	11400005 	stb	r5,0(r2)
10109fb8:	80800017 	ldw	r2,0(r16)
10109fbc:	10c00003 	ldbu	r3,0(r2)
10109fc0:	10800044 	addi	r2,r2,1
10109fc4:	1d402326 	beq	r3,r21,1010a054 <__fputwc+0x14c>
10109fc8:	80800015 	stw	r2,0(r16)
10109fcc:	8c400044 	addi	r17,r17,1
10109fd0:	dc45883a 	add	r2,sp,r17
10109fd4:	8d3fef36 	bltu	r17,r20,10109f94 <__alt_data_end+0xfffe9f94>
10109fd8:	9005883a 	mov	r2,r18
10109fdc:	00000406 	br	10109ff0 <__fputwc+0xe8>
10109fe0:	80c0030b 	ldhu	r3,12(r16)
10109fe4:	a005883a 	mov	r2,r20
10109fe8:	18c01014 	ori	r3,r3,64
10109fec:	80c0030d 	sth	r3,12(r16)
10109ff0:	dfc00717 	ldw	ra,28(sp)
10109ff4:	dd400617 	ldw	r21,24(sp)
10109ff8:	dd000517 	ldw	r20,20(sp)
10109ffc:	dcc00417 	ldw	r19,16(sp)
1010a000:	dc800317 	ldw	r18,12(sp)
1010a004:	dc400217 	ldw	r17,8(sp)
1010a008:	dc000117 	ldw	r16,4(sp)
1010a00c:	dec00804 	addi	sp,sp,32
1010a010:	f800283a 	ret
1010a014:	800d883a 	mov	r6,r16
1010a018:	29403fcc 	andi	r5,r5,255
1010a01c:	9809883a 	mov	r4,r19
1010a020:	010a2800 	call	1010a280 <__swbuf_r>
1010a024:	10bfffe0 	cmpeqi	r2,r2,-1
1010a028:	10803fcc 	andi	r2,r2,255
1010a02c:	103fd626 	beq	r2,zero,10109f88 <__alt_data_end+0xfffe9f88>
1010a030:	00bfffc4 	movi	r2,-1
1010a034:	003fee06 	br	10109ff0 <__alt_data_end+0xfffe9ff0>
1010a038:	90ffffc4 	addi	r3,r18,-1
1010a03c:	01003f84 	movi	r4,254
1010a040:	20ffbf36 	bltu	r4,r3,10109f40 <__alt_data_end+0xfffe9f40>
1010a044:	900b883a 	mov	r5,r18
1010a048:	dc800005 	stb	r18,0(sp)
1010a04c:	1029883a 	mov	r20,r2
1010a050:	003fc506 	br	10109f68 <__alt_data_end+0xfffe9f68>
1010a054:	800d883a 	mov	r6,r16
1010a058:	a80b883a 	mov	r5,r21
1010a05c:	9809883a 	mov	r4,r19
1010a060:	010a2800 	call	1010a280 <__swbuf_r>
1010a064:	10bfffe0 	cmpeqi	r2,r2,-1
1010a068:	003fef06 	br	1010a028 <__alt_data_end+0xfffea028>

1010a06c <_fputwc_r>:
1010a06c:	3080030b 	ldhu	r2,12(r6)
1010a070:	10c8000c 	andi	r3,r2,8192
1010a074:	1800051e 	bne	r3,zero,1010a08c <_fputwc_r+0x20>
1010a078:	30c01917 	ldw	r3,100(r6)
1010a07c:	10880014 	ori	r2,r2,8192
1010a080:	3080030d 	sth	r2,12(r6)
1010a084:	18880014 	ori	r2,r3,8192
1010a088:	30801915 	stw	r2,100(r6)
1010a08c:	0109f081 	jmpi	10109f08 <__fputwc>

1010a090 <fputwc>:
1010a090:	00840474 	movhi	r2,4113
1010a094:	defffc04 	addi	sp,sp,-16
1010a098:	10890404 	addi	r2,r2,9232
1010a09c:	dc000115 	stw	r16,4(sp)
1010a0a0:	14000017 	ldw	r16,0(r2)
1010a0a4:	dc400215 	stw	r17,8(sp)
1010a0a8:	dfc00315 	stw	ra,12(sp)
1010a0ac:	2023883a 	mov	r17,r4
1010a0b0:	80000226 	beq	r16,zero,1010a0bc <fputwc+0x2c>
1010a0b4:	80800e17 	ldw	r2,56(r16)
1010a0b8:	10001026 	beq	r2,zero,1010a0fc <fputwc+0x6c>
1010a0bc:	2880030b 	ldhu	r2,12(r5)
1010a0c0:	10c8000c 	andi	r3,r2,8192
1010a0c4:	1800051e 	bne	r3,zero,1010a0dc <fputwc+0x4c>
1010a0c8:	28c01917 	ldw	r3,100(r5)
1010a0cc:	10880014 	ori	r2,r2,8192
1010a0d0:	2880030d 	sth	r2,12(r5)
1010a0d4:	18880014 	ori	r2,r3,8192
1010a0d8:	28801915 	stw	r2,100(r5)
1010a0dc:	280d883a 	mov	r6,r5
1010a0e0:	8009883a 	mov	r4,r16
1010a0e4:	880b883a 	mov	r5,r17
1010a0e8:	dfc00317 	ldw	ra,12(sp)
1010a0ec:	dc400217 	ldw	r17,8(sp)
1010a0f0:	dc000117 	ldw	r16,4(sp)
1010a0f4:	dec00404 	addi	sp,sp,16
1010a0f8:	0109f081 	jmpi	10109f08 <__fputwc>
1010a0fc:	8009883a 	mov	r4,r16
1010a100:	d9400015 	stw	r5,0(sp)
1010a104:	01053a00 	call	101053a0 <__sinit>
1010a108:	d9400017 	ldw	r5,0(sp)
1010a10c:	003feb06 	br	1010a0bc <__alt_data_end+0xfffea0bc>

1010a110 <_fstat_r>:
1010a110:	defffd04 	addi	sp,sp,-12
1010a114:	2805883a 	mov	r2,r5
1010a118:	dc000015 	stw	r16,0(sp)
1010a11c:	04040474 	movhi	r16,4113
1010a120:	dc400115 	stw	r17,4(sp)
1010a124:	84100204 	addi	r16,r16,16392
1010a128:	2023883a 	mov	r17,r4
1010a12c:	300b883a 	mov	r5,r6
1010a130:	1009883a 	mov	r4,r2
1010a134:	dfc00215 	stw	ra,8(sp)
1010a138:	80000015 	stw	zero,0(r16)
1010a13c:	010dba00 	call	1010dba0 <fstat>
1010a140:	00ffffc4 	movi	r3,-1
1010a144:	10c00526 	beq	r2,r3,1010a15c <_fstat_r+0x4c>
1010a148:	dfc00217 	ldw	ra,8(sp)
1010a14c:	dc400117 	ldw	r17,4(sp)
1010a150:	dc000017 	ldw	r16,0(sp)
1010a154:	dec00304 	addi	sp,sp,12
1010a158:	f800283a 	ret
1010a15c:	80c00017 	ldw	r3,0(r16)
1010a160:	183ff926 	beq	r3,zero,1010a148 <__alt_data_end+0xfffea148>
1010a164:	88c00015 	stw	r3,0(r17)
1010a168:	003ff706 	br	1010a148 <__alt_data_end+0xfffea148>

1010a16c <_isatty_r>:
1010a16c:	defffd04 	addi	sp,sp,-12
1010a170:	dc000015 	stw	r16,0(sp)
1010a174:	04040474 	movhi	r16,4113
1010a178:	dc400115 	stw	r17,4(sp)
1010a17c:	84100204 	addi	r16,r16,16392
1010a180:	2023883a 	mov	r17,r4
1010a184:	2809883a 	mov	r4,r5
1010a188:	dfc00215 	stw	ra,8(sp)
1010a18c:	80000015 	stw	zero,0(r16)
1010a190:	010dc940 	call	1010dc94 <isatty>
1010a194:	00ffffc4 	movi	r3,-1
1010a198:	10c00526 	beq	r2,r3,1010a1b0 <_isatty_r+0x44>
1010a19c:	dfc00217 	ldw	ra,8(sp)
1010a1a0:	dc400117 	ldw	r17,4(sp)
1010a1a4:	dc000017 	ldw	r16,0(sp)
1010a1a8:	dec00304 	addi	sp,sp,12
1010a1ac:	f800283a 	ret
1010a1b0:	80c00017 	ldw	r3,0(r16)
1010a1b4:	183ff926 	beq	r3,zero,1010a19c <__alt_data_end+0xfffea19c>
1010a1b8:	88c00015 	stw	r3,0(r17)
1010a1bc:	003ff706 	br	1010a19c <__alt_data_end+0xfffea19c>

1010a1c0 <_lseek_r>:
1010a1c0:	defffd04 	addi	sp,sp,-12
1010a1c4:	2805883a 	mov	r2,r5
1010a1c8:	dc000015 	stw	r16,0(sp)
1010a1cc:	04040474 	movhi	r16,4113
1010a1d0:	dc400115 	stw	r17,4(sp)
1010a1d4:	300b883a 	mov	r5,r6
1010a1d8:	84100204 	addi	r16,r16,16392
1010a1dc:	2023883a 	mov	r17,r4
1010a1e0:	380d883a 	mov	r6,r7
1010a1e4:	1009883a 	mov	r4,r2
1010a1e8:	dfc00215 	stw	ra,8(sp)
1010a1ec:	80000015 	stw	zero,0(r16)
1010a1f0:	010de680 	call	1010de68 <lseek>
1010a1f4:	00ffffc4 	movi	r3,-1
1010a1f8:	10c00526 	beq	r2,r3,1010a210 <_lseek_r+0x50>
1010a1fc:	dfc00217 	ldw	ra,8(sp)
1010a200:	dc400117 	ldw	r17,4(sp)
1010a204:	dc000017 	ldw	r16,0(sp)
1010a208:	dec00304 	addi	sp,sp,12
1010a20c:	f800283a 	ret
1010a210:	80c00017 	ldw	r3,0(r16)
1010a214:	183ff926 	beq	r3,zero,1010a1fc <__alt_data_end+0xfffea1fc>
1010a218:	88c00015 	stw	r3,0(r17)
1010a21c:	003ff706 	br	1010a1fc <__alt_data_end+0xfffea1fc>

1010a220 <_read_r>:
1010a220:	defffd04 	addi	sp,sp,-12
1010a224:	2805883a 	mov	r2,r5
1010a228:	dc000015 	stw	r16,0(sp)
1010a22c:	04040474 	movhi	r16,4113
1010a230:	dc400115 	stw	r17,4(sp)
1010a234:	300b883a 	mov	r5,r6
1010a238:	84100204 	addi	r16,r16,16392
1010a23c:	2023883a 	mov	r17,r4
1010a240:	380d883a 	mov	r6,r7
1010a244:	1009883a 	mov	r4,r2
1010a248:	dfc00215 	stw	ra,8(sp)
1010a24c:	80000015 	stw	zero,0(r16)
1010a250:	010e0440 	call	1010e044 <read>
1010a254:	00ffffc4 	movi	r3,-1
1010a258:	10c00526 	beq	r2,r3,1010a270 <_read_r+0x50>
1010a25c:	dfc00217 	ldw	ra,8(sp)
1010a260:	dc400117 	ldw	r17,4(sp)
1010a264:	dc000017 	ldw	r16,0(sp)
1010a268:	dec00304 	addi	sp,sp,12
1010a26c:	f800283a 	ret
1010a270:	80c00017 	ldw	r3,0(r16)
1010a274:	183ff926 	beq	r3,zero,1010a25c <__alt_data_end+0xfffea25c>
1010a278:	88c00015 	stw	r3,0(r17)
1010a27c:	003ff706 	br	1010a25c <__alt_data_end+0xfffea25c>

1010a280 <__swbuf_r>:
1010a280:	defffb04 	addi	sp,sp,-20
1010a284:	dcc00315 	stw	r19,12(sp)
1010a288:	dc800215 	stw	r18,8(sp)
1010a28c:	dc000015 	stw	r16,0(sp)
1010a290:	dfc00415 	stw	ra,16(sp)
1010a294:	dc400115 	stw	r17,4(sp)
1010a298:	2025883a 	mov	r18,r4
1010a29c:	2827883a 	mov	r19,r5
1010a2a0:	3021883a 	mov	r16,r6
1010a2a4:	20000226 	beq	r4,zero,1010a2b0 <__swbuf_r+0x30>
1010a2a8:	20800e17 	ldw	r2,56(r4)
1010a2ac:	10004226 	beq	r2,zero,1010a3b8 <__swbuf_r+0x138>
1010a2b0:	80800617 	ldw	r2,24(r16)
1010a2b4:	8100030b 	ldhu	r4,12(r16)
1010a2b8:	80800215 	stw	r2,8(r16)
1010a2bc:	2080020c 	andi	r2,r4,8
1010a2c0:	10003626 	beq	r2,zero,1010a39c <__swbuf_r+0x11c>
1010a2c4:	80c00417 	ldw	r3,16(r16)
1010a2c8:	18003426 	beq	r3,zero,1010a39c <__swbuf_r+0x11c>
1010a2cc:	2088000c 	andi	r2,r4,8192
1010a2d0:	9c403fcc 	andi	r17,r19,255
1010a2d4:	10001a26 	beq	r2,zero,1010a340 <__swbuf_r+0xc0>
1010a2d8:	80800017 	ldw	r2,0(r16)
1010a2dc:	81000517 	ldw	r4,20(r16)
1010a2e0:	10c7c83a 	sub	r3,r2,r3
1010a2e4:	1900200e 	bge	r3,r4,1010a368 <__swbuf_r+0xe8>
1010a2e8:	18c00044 	addi	r3,r3,1
1010a2ec:	81000217 	ldw	r4,8(r16)
1010a2f0:	11400044 	addi	r5,r2,1
1010a2f4:	81400015 	stw	r5,0(r16)
1010a2f8:	213fffc4 	addi	r4,r4,-1
1010a2fc:	81000215 	stw	r4,8(r16)
1010a300:	14c00005 	stb	r19,0(r2)
1010a304:	80800517 	ldw	r2,20(r16)
1010a308:	10c01e26 	beq	r2,r3,1010a384 <__swbuf_r+0x104>
1010a30c:	8080030b 	ldhu	r2,12(r16)
1010a310:	1080004c 	andi	r2,r2,1
1010a314:	10000226 	beq	r2,zero,1010a320 <__swbuf_r+0xa0>
1010a318:	00800284 	movi	r2,10
1010a31c:	88801926 	beq	r17,r2,1010a384 <__swbuf_r+0x104>
1010a320:	8805883a 	mov	r2,r17
1010a324:	dfc00417 	ldw	ra,16(sp)
1010a328:	dcc00317 	ldw	r19,12(sp)
1010a32c:	dc800217 	ldw	r18,8(sp)
1010a330:	dc400117 	ldw	r17,4(sp)
1010a334:	dc000017 	ldw	r16,0(sp)
1010a338:	dec00504 	addi	sp,sp,20
1010a33c:	f800283a 	ret
1010a340:	81401917 	ldw	r5,100(r16)
1010a344:	00b7ffc4 	movi	r2,-8193
1010a348:	21080014 	ori	r4,r4,8192
1010a34c:	2884703a 	and	r2,r5,r2
1010a350:	80801915 	stw	r2,100(r16)
1010a354:	80800017 	ldw	r2,0(r16)
1010a358:	8100030d 	sth	r4,12(r16)
1010a35c:	81000517 	ldw	r4,20(r16)
1010a360:	10c7c83a 	sub	r3,r2,r3
1010a364:	193fe016 	blt	r3,r4,1010a2e8 <__alt_data_end+0xfffea2e8>
1010a368:	800b883a 	mov	r5,r16
1010a36c:	9009883a 	mov	r4,r18
1010a370:	0104fb40 	call	10104fb4 <_fflush_r>
1010a374:	1000071e 	bne	r2,zero,1010a394 <__swbuf_r+0x114>
1010a378:	80800017 	ldw	r2,0(r16)
1010a37c:	00c00044 	movi	r3,1
1010a380:	003fda06 	br	1010a2ec <__alt_data_end+0xfffea2ec>
1010a384:	800b883a 	mov	r5,r16
1010a388:	9009883a 	mov	r4,r18
1010a38c:	0104fb40 	call	10104fb4 <_fflush_r>
1010a390:	103fe326 	beq	r2,zero,1010a320 <__alt_data_end+0xfffea320>
1010a394:	00bfffc4 	movi	r2,-1
1010a398:	003fe206 	br	1010a324 <__alt_data_end+0xfffea324>
1010a39c:	800b883a 	mov	r5,r16
1010a3a0:	9009883a 	mov	r4,r18
1010a3a4:	01033940 	call	10103394 <__swsetup_r>
1010a3a8:	103ffa1e 	bne	r2,zero,1010a394 <__alt_data_end+0xfffea394>
1010a3ac:	8100030b 	ldhu	r4,12(r16)
1010a3b0:	80c00417 	ldw	r3,16(r16)
1010a3b4:	003fc506 	br	1010a2cc <__alt_data_end+0xfffea2cc>
1010a3b8:	01053a00 	call	101053a0 <__sinit>
1010a3bc:	003fbc06 	br	1010a2b0 <__alt_data_end+0xfffea2b0>

1010a3c0 <__swbuf>:
1010a3c0:	00840474 	movhi	r2,4113
1010a3c4:	10890404 	addi	r2,r2,9232
1010a3c8:	280d883a 	mov	r6,r5
1010a3cc:	200b883a 	mov	r5,r4
1010a3d0:	11000017 	ldw	r4,0(r2)
1010a3d4:	010a2801 	jmpi	1010a280 <__swbuf_r>

1010a3d8 <_wcrtomb_r>:
1010a3d8:	defff604 	addi	sp,sp,-40
1010a3dc:	00840474 	movhi	r2,4113
1010a3e0:	dc800815 	stw	r18,32(sp)
1010a3e4:	dc400715 	stw	r17,28(sp)
1010a3e8:	dc000615 	stw	r16,24(sp)
1010a3ec:	10890804 	addi	r2,r2,9248
1010a3f0:	dfc00915 	stw	ra,36(sp)
1010a3f4:	2021883a 	mov	r16,r4
1010a3f8:	3823883a 	mov	r17,r7
1010a3fc:	14800017 	ldw	r18,0(r2)
1010a400:	28001426 	beq	r5,zero,1010a454 <_wcrtomb_r+0x7c>
1010a404:	d9400415 	stw	r5,16(sp)
1010a408:	d9800515 	stw	r6,20(sp)
1010a40c:	0105ef00 	call	10105ef0 <__locale_charset>
1010a410:	d9800517 	ldw	r6,20(sp)
1010a414:	d9400417 	ldw	r5,16(sp)
1010a418:	100f883a 	mov	r7,r2
1010a41c:	dc400015 	stw	r17,0(sp)
1010a420:	8009883a 	mov	r4,r16
1010a424:	903ee83a 	callr	r18
1010a428:	00ffffc4 	movi	r3,-1
1010a42c:	10c0031e 	bne	r2,r3,1010a43c <_wcrtomb_r+0x64>
1010a430:	88000015 	stw	zero,0(r17)
1010a434:	00c02284 	movi	r3,138
1010a438:	80c00015 	stw	r3,0(r16)
1010a43c:	dfc00917 	ldw	ra,36(sp)
1010a440:	dc800817 	ldw	r18,32(sp)
1010a444:	dc400717 	ldw	r17,28(sp)
1010a448:	dc000617 	ldw	r16,24(sp)
1010a44c:	dec00a04 	addi	sp,sp,40
1010a450:	f800283a 	ret
1010a454:	0105ef00 	call	10105ef0 <__locale_charset>
1010a458:	100f883a 	mov	r7,r2
1010a45c:	dc400015 	stw	r17,0(sp)
1010a460:	000d883a 	mov	r6,zero
1010a464:	d9400104 	addi	r5,sp,4
1010a468:	8009883a 	mov	r4,r16
1010a46c:	903ee83a 	callr	r18
1010a470:	003fed06 	br	1010a428 <__alt_data_end+0xfffea428>

1010a474 <wcrtomb>:
1010a474:	defff604 	addi	sp,sp,-40
1010a478:	00840474 	movhi	r2,4113
1010a47c:	dc800615 	stw	r18,24(sp)
1010a480:	dc400515 	stw	r17,20(sp)
1010a484:	10890404 	addi	r2,r2,9232
1010a488:	dfc00915 	stw	ra,36(sp)
1010a48c:	dd000815 	stw	r20,32(sp)
1010a490:	dcc00715 	stw	r19,28(sp)
1010a494:	dc000415 	stw	r16,16(sp)
1010a498:	3025883a 	mov	r18,r6
1010a49c:	14400017 	ldw	r17,0(r2)
1010a4a0:	20001926 	beq	r4,zero,1010a508 <wcrtomb+0x94>
1010a4a4:	00840474 	movhi	r2,4113
1010a4a8:	10890804 	addi	r2,r2,9248
1010a4ac:	15000017 	ldw	r20,0(r2)
1010a4b0:	2021883a 	mov	r16,r4
1010a4b4:	2827883a 	mov	r19,r5
1010a4b8:	0105ef00 	call	10105ef0 <__locale_charset>
1010a4bc:	100f883a 	mov	r7,r2
1010a4c0:	dc800015 	stw	r18,0(sp)
1010a4c4:	980d883a 	mov	r6,r19
1010a4c8:	800b883a 	mov	r5,r16
1010a4cc:	8809883a 	mov	r4,r17
1010a4d0:	a03ee83a 	callr	r20
1010a4d4:	00ffffc4 	movi	r3,-1
1010a4d8:	10c0031e 	bne	r2,r3,1010a4e8 <wcrtomb+0x74>
1010a4dc:	90000015 	stw	zero,0(r18)
1010a4e0:	00c02284 	movi	r3,138
1010a4e4:	88c00015 	stw	r3,0(r17)
1010a4e8:	dfc00917 	ldw	ra,36(sp)
1010a4ec:	dd000817 	ldw	r20,32(sp)
1010a4f0:	dcc00717 	ldw	r19,28(sp)
1010a4f4:	dc800617 	ldw	r18,24(sp)
1010a4f8:	dc400517 	ldw	r17,20(sp)
1010a4fc:	dc000417 	ldw	r16,16(sp)
1010a500:	dec00a04 	addi	sp,sp,40
1010a504:	f800283a 	ret
1010a508:	00840474 	movhi	r2,4113
1010a50c:	10890804 	addi	r2,r2,9248
1010a510:	14000017 	ldw	r16,0(r2)
1010a514:	0105ef00 	call	10105ef0 <__locale_charset>
1010a518:	100f883a 	mov	r7,r2
1010a51c:	dc800015 	stw	r18,0(sp)
1010a520:	000d883a 	mov	r6,zero
1010a524:	d9400104 	addi	r5,sp,4
1010a528:	8809883a 	mov	r4,r17
1010a52c:	803ee83a 	callr	r16
1010a530:	003fe806 	br	1010a4d4 <__alt_data_end+0xfffea4d4>

1010a534 <__ascii_wctomb>:
1010a534:	28000526 	beq	r5,zero,1010a54c <__ascii_wctomb+0x18>
1010a538:	00803fc4 	movi	r2,255
1010a53c:	11800536 	bltu	r2,r6,1010a554 <__ascii_wctomb+0x20>
1010a540:	29800005 	stb	r6,0(r5)
1010a544:	00800044 	movi	r2,1
1010a548:	f800283a 	ret
1010a54c:	0005883a 	mov	r2,zero
1010a550:	f800283a 	ret
1010a554:	00802284 	movi	r2,138
1010a558:	20800015 	stw	r2,0(r4)
1010a55c:	00bfffc4 	movi	r2,-1
1010a560:	f800283a 	ret

1010a564 <_wctomb_r>:
1010a564:	00840474 	movhi	r2,4113
1010a568:	defff904 	addi	sp,sp,-28
1010a56c:	10890804 	addi	r2,r2,9248
1010a570:	dfc00615 	stw	ra,24(sp)
1010a574:	dc400515 	stw	r17,20(sp)
1010a578:	dc000415 	stw	r16,16(sp)
1010a57c:	3823883a 	mov	r17,r7
1010a580:	14000017 	ldw	r16,0(r2)
1010a584:	d9000115 	stw	r4,4(sp)
1010a588:	d9400215 	stw	r5,8(sp)
1010a58c:	d9800315 	stw	r6,12(sp)
1010a590:	0105ef00 	call	10105ef0 <__locale_charset>
1010a594:	d9800317 	ldw	r6,12(sp)
1010a598:	d9400217 	ldw	r5,8(sp)
1010a59c:	d9000117 	ldw	r4,4(sp)
1010a5a0:	100f883a 	mov	r7,r2
1010a5a4:	dc400015 	stw	r17,0(sp)
1010a5a8:	803ee83a 	callr	r16
1010a5ac:	dfc00617 	ldw	ra,24(sp)
1010a5b0:	dc400517 	ldw	r17,20(sp)
1010a5b4:	dc000417 	ldw	r16,16(sp)
1010a5b8:	dec00704 	addi	sp,sp,28
1010a5bc:	f800283a 	ret

1010a5c0 <__udivdi3>:
1010a5c0:	defff404 	addi	sp,sp,-48
1010a5c4:	dcc00515 	stw	r19,20(sp)
1010a5c8:	dc000215 	stw	r16,8(sp)
1010a5cc:	dfc00b15 	stw	ra,44(sp)
1010a5d0:	df000a15 	stw	fp,40(sp)
1010a5d4:	ddc00915 	stw	r23,36(sp)
1010a5d8:	dd800815 	stw	r22,32(sp)
1010a5dc:	dd400715 	stw	r21,28(sp)
1010a5e0:	dd000615 	stw	r20,24(sp)
1010a5e4:	dc800415 	stw	r18,16(sp)
1010a5e8:	dc400315 	stw	r17,12(sp)
1010a5ec:	2027883a 	mov	r19,r4
1010a5f0:	2821883a 	mov	r16,r5
1010a5f4:	3800461e 	bne	r7,zero,1010a710 <__udivdi3+0x150>
1010a5f8:	3023883a 	mov	r17,r6
1010a5fc:	2025883a 	mov	r18,r4
1010a600:	2980572e 	bgeu	r5,r6,1010a760 <__udivdi3+0x1a0>
1010a604:	00bfffd4 	movui	r2,65535
1010a608:	282d883a 	mov	r22,r5
1010a60c:	1180b236 	bltu	r2,r6,1010a8d8 <__udivdi3+0x318>
1010a610:	00803fc4 	movi	r2,255
1010a614:	1185803a 	cmpltu	r2,r2,r6
1010a618:	100490fa 	slli	r2,r2,3
1010a61c:	3086d83a 	srl	r3,r6,r2
1010a620:	01040474 	movhi	r4,4113
1010a624:	2101fe04 	addi	r4,r4,2040
1010a628:	20c7883a 	add	r3,r4,r3
1010a62c:	18c00003 	ldbu	r3,0(r3)
1010a630:	1885883a 	add	r2,r3,r2
1010a634:	00c00804 	movi	r3,32
1010a638:	1887c83a 	sub	r3,r3,r2
1010a63c:	18000526 	beq	r3,zero,1010a654 <__udivdi3+0x94>
1010a640:	80e0983a 	sll	r16,r16,r3
1010a644:	9884d83a 	srl	r2,r19,r2
1010a648:	30e2983a 	sll	r17,r6,r3
1010a64c:	98e4983a 	sll	r18,r19,r3
1010a650:	142cb03a 	or	r22,r2,r16
1010a654:	882ad43a 	srli	r21,r17,16
1010a658:	b009883a 	mov	r4,r22
1010a65c:	8d3fffcc 	andi	r20,r17,65535
1010a660:	a80b883a 	mov	r5,r21
1010a664:	0100c400 	call	10100c40 <__umodsi3>
1010a668:	b009883a 	mov	r4,r22
1010a66c:	a80b883a 	mov	r5,r21
1010a670:	1027883a 	mov	r19,r2
1010a674:	0100bdc0 	call	10100bdc <__udivsi3>
1010a678:	100b883a 	mov	r5,r2
1010a67c:	a009883a 	mov	r4,r20
1010a680:	102d883a 	mov	r22,r2
1010a684:	0100c980 	call	10100c98 <__mulsi3>
1010a688:	9826943a 	slli	r19,r19,16
1010a68c:	9006d43a 	srli	r3,r18,16
1010a690:	1cc6b03a 	or	r3,r3,r19
1010a694:	1880052e 	bgeu	r3,r2,1010a6ac <__udivdi3+0xec>
1010a698:	1c47883a 	add	r3,r3,r17
1010a69c:	b13fffc4 	addi	r4,r22,-1
1010a6a0:	1c400136 	bltu	r3,r17,1010a6a8 <__udivdi3+0xe8>
1010a6a4:	18814236 	bltu	r3,r2,1010abb0 <__udivdi3+0x5f0>
1010a6a8:	202d883a 	mov	r22,r4
1010a6ac:	18a1c83a 	sub	r16,r3,r2
1010a6b0:	8009883a 	mov	r4,r16
1010a6b4:	a80b883a 	mov	r5,r21
1010a6b8:	0100c400 	call	10100c40 <__umodsi3>
1010a6bc:	1027883a 	mov	r19,r2
1010a6c0:	8009883a 	mov	r4,r16
1010a6c4:	a80b883a 	mov	r5,r21
1010a6c8:	9826943a 	slli	r19,r19,16
1010a6cc:	0100bdc0 	call	10100bdc <__udivsi3>
1010a6d0:	100b883a 	mov	r5,r2
1010a6d4:	a009883a 	mov	r4,r20
1010a6d8:	94bfffcc 	andi	r18,r18,65535
1010a6dc:	1021883a 	mov	r16,r2
1010a6e0:	94e4b03a 	or	r18,r18,r19
1010a6e4:	0100c980 	call	10100c98 <__mulsi3>
1010a6e8:	9080052e 	bgeu	r18,r2,1010a700 <__udivdi3+0x140>
1010a6ec:	8ca5883a 	add	r18,r17,r18
1010a6f0:	80ffffc4 	addi	r3,r16,-1
1010a6f4:	94410c36 	bltu	r18,r17,1010ab28 <__udivdi3+0x568>
1010a6f8:	90810b2e 	bgeu	r18,r2,1010ab28 <__udivdi3+0x568>
1010a6fc:	843fff84 	addi	r16,r16,-2
1010a700:	b004943a 	slli	r2,r22,16
1010a704:	0007883a 	mov	r3,zero
1010a708:	1404b03a 	or	r2,r2,r16
1010a70c:	00005e06 	br	1010a888 <__udivdi3+0x2c8>
1010a710:	29c05b36 	bltu	r5,r7,1010a880 <__udivdi3+0x2c0>
1010a714:	00bfffd4 	movui	r2,65535
1010a718:	11c0672e 	bgeu	r2,r7,1010a8b8 <__udivdi3+0x2f8>
1010a71c:	00804034 	movhi	r2,256
1010a720:	10bfffc4 	addi	r2,r2,-1
1010a724:	11c10a36 	bltu	r2,r7,1010ab50 <__udivdi3+0x590>
1010a728:	00800404 	movi	r2,16
1010a72c:	3886d83a 	srl	r3,r7,r2
1010a730:	01040474 	movhi	r4,4113
1010a734:	2101fe04 	addi	r4,r4,2040
1010a738:	20c7883a 	add	r3,r4,r3
1010a73c:	18c00003 	ldbu	r3,0(r3)
1010a740:	05c00804 	movi	r23,32
1010a744:	1885883a 	add	r2,r3,r2
1010a748:	b8afc83a 	sub	r23,r23,r2
1010a74c:	b800671e 	bne	r23,zero,1010a8ec <__udivdi3+0x32c>
1010a750:	3c010536 	bltu	r7,r16,1010ab68 <__udivdi3+0x5a8>
1010a754:	9985403a 	cmpgeu	r2,r19,r6
1010a758:	0007883a 	mov	r3,zero
1010a75c:	00004a06 	br	1010a888 <__udivdi3+0x2c8>
1010a760:	3000041e 	bne	r6,zero,1010a774 <__udivdi3+0x1b4>
1010a764:	000b883a 	mov	r5,zero
1010a768:	01000044 	movi	r4,1
1010a76c:	0100bdc0 	call	10100bdc <__udivsi3>
1010a770:	1023883a 	mov	r17,r2
1010a774:	00bfffd4 	movui	r2,65535
1010a778:	1440532e 	bgeu	r2,r17,1010a8c8 <__udivdi3+0x308>
1010a77c:	00804034 	movhi	r2,256
1010a780:	10bfffc4 	addi	r2,r2,-1
1010a784:	1440f436 	bltu	r2,r17,1010ab58 <__udivdi3+0x598>
1010a788:	00800404 	movi	r2,16
1010a78c:	8886d83a 	srl	r3,r17,r2
1010a790:	01040474 	movhi	r4,4113
1010a794:	2101fe04 	addi	r4,r4,2040
1010a798:	20c7883a 	add	r3,r4,r3
1010a79c:	18c00003 	ldbu	r3,0(r3)
1010a7a0:	1885883a 	add	r2,r3,r2
1010a7a4:	00c00804 	movi	r3,32
1010a7a8:	1887c83a 	sub	r3,r3,r2
1010a7ac:	1800a51e 	bne	r3,zero,1010aa44 <__udivdi3+0x484>
1010a7b0:	882ad43a 	srli	r21,r17,16
1010a7b4:	8461c83a 	sub	r16,r16,r17
1010a7b8:	8d3fffcc 	andi	r20,r17,65535
1010a7bc:	00c00044 	movi	r3,1
1010a7c0:	a80b883a 	mov	r5,r21
1010a7c4:	8009883a 	mov	r4,r16
1010a7c8:	d8c00115 	stw	r3,4(sp)
1010a7cc:	0100c400 	call	10100c40 <__umodsi3>
1010a7d0:	a80b883a 	mov	r5,r21
1010a7d4:	8009883a 	mov	r4,r16
1010a7d8:	1027883a 	mov	r19,r2
1010a7dc:	0100bdc0 	call	10100bdc <__udivsi3>
1010a7e0:	a00b883a 	mov	r5,r20
1010a7e4:	1009883a 	mov	r4,r2
1010a7e8:	102d883a 	mov	r22,r2
1010a7ec:	0100c980 	call	10100c98 <__mulsi3>
1010a7f0:	9826943a 	slli	r19,r19,16
1010a7f4:	900ed43a 	srli	r7,r18,16
1010a7f8:	d8c00117 	ldw	r3,4(sp)
1010a7fc:	3cceb03a 	or	r7,r7,r19
1010a800:	3880052e 	bgeu	r7,r2,1010a818 <__udivdi3+0x258>
1010a804:	3c4f883a 	add	r7,r7,r17
1010a808:	b13fffc4 	addi	r4,r22,-1
1010a80c:	3c400136 	bltu	r7,r17,1010a814 <__udivdi3+0x254>
1010a810:	3880e436 	bltu	r7,r2,1010aba4 <__udivdi3+0x5e4>
1010a814:	202d883a 	mov	r22,r4
1010a818:	38a1c83a 	sub	r16,r7,r2
1010a81c:	8009883a 	mov	r4,r16
1010a820:	a80b883a 	mov	r5,r21
1010a824:	d8c00115 	stw	r3,4(sp)
1010a828:	0100c400 	call	10100c40 <__umodsi3>
1010a82c:	1027883a 	mov	r19,r2
1010a830:	8009883a 	mov	r4,r16
1010a834:	a80b883a 	mov	r5,r21
1010a838:	9826943a 	slli	r19,r19,16
1010a83c:	0100bdc0 	call	10100bdc <__udivsi3>
1010a840:	a00b883a 	mov	r5,r20
1010a844:	1009883a 	mov	r4,r2
1010a848:	94bfffcc 	andi	r18,r18,65535
1010a84c:	1021883a 	mov	r16,r2
1010a850:	94e4b03a 	or	r18,r18,r19
1010a854:	0100c980 	call	10100c98 <__mulsi3>
1010a858:	d8c00117 	ldw	r3,4(sp)
1010a85c:	9080052e 	bgeu	r18,r2,1010a874 <__udivdi3+0x2b4>
1010a860:	8ca5883a 	add	r18,r17,r18
1010a864:	813fffc4 	addi	r4,r16,-1
1010a868:	9440ad36 	bltu	r18,r17,1010ab20 <__udivdi3+0x560>
1010a86c:	9080ac2e 	bgeu	r18,r2,1010ab20 <__udivdi3+0x560>
1010a870:	843fff84 	addi	r16,r16,-2
1010a874:	b004943a 	slli	r2,r22,16
1010a878:	1404b03a 	or	r2,r2,r16
1010a87c:	00000206 	br	1010a888 <__udivdi3+0x2c8>
1010a880:	0007883a 	mov	r3,zero
1010a884:	0005883a 	mov	r2,zero
1010a888:	dfc00b17 	ldw	ra,44(sp)
1010a88c:	df000a17 	ldw	fp,40(sp)
1010a890:	ddc00917 	ldw	r23,36(sp)
1010a894:	dd800817 	ldw	r22,32(sp)
1010a898:	dd400717 	ldw	r21,28(sp)
1010a89c:	dd000617 	ldw	r20,24(sp)
1010a8a0:	dcc00517 	ldw	r19,20(sp)
1010a8a4:	dc800417 	ldw	r18,16(sp)
1010a8a8:	dc400317 	ldw	r17,12(sp)
1010a8ac:	dc000217 	ldw	r16,8(sp)
1010a8b0:	dec00c04 	addi	sp,sp,48
1010a8b4:	f800283a 	ret
1010a8b8:	00803fc4 	movi	r2,255
1010a8bc:	11c5803a 	cmpltu	r2,r2,r7
1010a8c0:	100490fa 	slli	r2,r2,3
1010a8c4:	003f9906 	br	1010a72c <__alt_data_end+0xfffea72c>
1010a8c8:	00803fc4 	movi	r2,255
1010a8cc:	1445803a 	cmpltu	r2,r2,r17
1010a8d0:	100490fa 	slli	r2,r2,3
1010a8d4:	003fad06 	br	1010a78c <__alt_data_end+0xfffea78c>
1010a8d8:	00804034 	movhi	r2,256
1010a8dc:	10bfffc4 	addi	r2,r2,-1
1010a8e0:	11809f36 	bltu	r2,r6,1010ab60 <__udivdi3+0x5a0>
1010a8e4:	00800404 	movi	r2,16
1010a8e8:	003f4c06 	br	1010a61c <__alt_data_end+0xfffea61c>
1010a8ec:	3dce983a 	sll	r7,r7,r23
1010a8f0:	30b8d83a 	srl	fp,r6,r2
1010a8f4:	80a2d83a 	srl	r17,r16,r2
1010a8f8:	35cc983a 	sll	r6,r6,r23
1010a8fc:	3f38b03a 	or	fp,r7,fp
1010a900:	e024d43a 	srli	r18,fp,16
1010a904:	9884d83a 	srl	r2,r19,r2
1010a908:	85e0983a 	sll	r16,r16,r23
1010a90c:	8809883a 	mov	r4,r17
1010a910:	900b883a 	mov	r5,r18
1010a914:	d9800015 	stw	r6,0(sp)
1010a918:	1420b03a 	or	r16,r2,r16
1010a91c:	0100c400 	call	10100c40 <__umodsi3>
1010a920:	900b883a 	mov	r5,r18
1010a924:	8809883a 	mov	r4,r17
1010a928:	1029883a 	mov	r20,r2
1010a92c:	e5bfffcc 	andi	r22,fp,65535
1010a930:	0100bdc0 	call	10100bdc <__udivsi3>
1010a934:	100b883a 	mov	r5,r2
1010a938:	b009883a 	mov	r4,r22
1010a93c:	102b883a 	mov	r21,r2
1010a940:	0100c980 	call	10100c98 <__mulsi3>
1010a944:	a028943a 	slli	r20,r20,16
1010a948:	8006d43a 	srli	r3,r16,16
1010a94c:	1d06b03a 	or	r3,r3,r20
1010a950:	1880042e 	bgeu	r3,r2,1010a964 <__udivdi3+0x3a4>
1010a954:	1f07883a 	add	r3,r3,fp
1010a958:	a93fffc4 	addi	r4,r21,-1
1010a95c:	1f00892e 	bgeu	r3,fp,1010ab84 <__udivdi3+0x5c4>
1010a960:	202b883a 	mov	r21,r4
1010a964:	18a3c83a 	sub	r17,r3,r2
1010a968:	8809883a 	mov	r4,r17
1010a96c:	900b883a 	mov	r5,r18
1010a970:	0100c400 	call	10100c40 <__umodsi3>
1010a974:	1029883a 	mov	r20,r2
1010a978:	8809883a 	mov	r4,r17
1010a97c:	900b883a 	mov	r5,r18
1010a980:	a028943a 	slli	r20,r20,16
1010a984:	0100bdc0 	call	10100bdc <__udivsi3>
1010a988:	100b883a 	mov	r5,r2
1010a98c:	b009883a 	mov	r4,r22
1010a990:	843fffcc 	andi	r16,r16,65535
1010a994:	1023883a 	mov	r17,r2
1010a998:	8520b03a 	or	r16,r16,r20
1010a99c:	0100c980 	call	10100c98 <__mulsi3>
1010a9a0:	8080042e 	bgeu	r16,r2,1010a9b4 <__udivdi3+0x3f4>
1010a9a4:	8721883a 	add	r16,r16,fp
1010a9a8:	88ffffc4 	addi	r3,r17,-1
1010a9ac:	8700712e 	bgeu	r16,fp,1010ab74 <__udivdi3+0x5b4>
1010a9b0:	1823883a 	mov	r17,r3
1010a9b4:	a80e943a 	slli	r7,r21,16
1010a9b8:	d8c00017 	ldw	r3,0(sp)
1010a9bc:	80a1c83a 	sub	r16,r16,r2
1010a9c0:	3c64b03a 	or	r18,r7,r17
1010a9c4:	1d3fffcc 	andi	r20,r3,65535
1010a9c8:	9022d43a 	srli	r17,r18,16
1010a9cc:	95bfffcc 	andi	r22,r18,65535
1010a9d0:	a00b883a 	mov	r5,r20
1010a9d4:	b009883a 	mov	r4,r22
1010a9d8:	182ad43a 	srli	r21,r3,16
1010a9dc:	0100c980 	call	10100c98 <__mulsi3>
1010a9e0:	a00b883a 	mov	r5,r20
1010a9e4:	8809883a 	mov	r4,r17
1010a9e8:	1039883a 	mov	fp,r2
1010a9ec:	0100c980 	call	10100c98 <__mulsi3>
1010a9f0:	8809883a 	mov	r4,r17
1010a9f4:	a80b883a 	mov	r5,r21
1010a9f8:	1029883a 	mov	r20,r2
1010a9fc:	0100c980 	call	10100c98 <__mulsi3>
1010aa00:	a80b883a 	mov	r5,r21
1010aa04:	b009883a 	mov	r4,r22
1010aa08:	1023883a 	mov	r17,r2
1010aa0c:	0100c980 	call	10100c98 <__mulsi3>
1010aa10:	e006d43a 	srli	r3,fp,16
1010aa14:	1505883a 	add	r2,r2,r20
1010aa18:	1887883a 	add	r3,r3,r2
1010aa1c:	1d00022e 	bgeu	r3,r20,1010aa28 <__udivdi3+0x468>
1010aa20:	00800074 	movhi	r2,1
1010aa24:	88a3883a 	add	r17,r17,r2
1010aa28:	1804d43a 	srli	r2,r3,16
1010aa2c:	1463883a 	add	r17,r2,r17
1010aa30:	84404436 	bltu	r16,r17,1010ab44 <__udivdi3+0x584>
1010aa34:	84403e26 	beq	r16,r17,1010ab30 <__udivdi3+0x570>
1010aa38:	9005883a 	mov	r2,r18
1010aa3c:	0007883a 	mov	r3,zero
1010aa40:	003f9106 	br	1010a888 <__alt_data_end+0xfffea888>
1010aa44:	88e2983a 	sll	r17,r17,r3
1010aa48:	80aed83a 	srl	r23,r16,r2
1010aa4c:	80e0983a 	sll	r16,r16,r3
1010aa50:	882ad43a 	srli	r21,r17,16
1010aa54:	9884d83a 	srl	r2,r19,r2
1010aa58:	b809883a 	mov	r4,r23
1010aa5c:	a80b883a 	mov	r5,r21
1010aa60:	98e4983a 	sll	r18,r19,r3
1010aa64:	142cb03a 	or	r22,r2,r16
1010aa68:	0100c400 	call	10100c40 <__umodsi3>
1010aa6c:	b809883a 	mov	r4,r23
1010aa70:	a80b883a 	mov	r5,r21
1010aa74:	1027883a 	mov	r19,r2
1010aa78:	8d3fffcc 	andi	r20,r17,65535
1010aa7c:	0100bdc0 	call	10100bdc <__udivsi3>
1010aa80:	a009883a 	mov	r4,r20
1010aa84:	100b883a 	mov	r5,r2
1010aa88:	102f883a 	mov	r23,r2
1010aa8c:	0100c980 	call	10100c98 <__mulsi3>
1010aa90:	9826943a 	slli	r19,r19,16
1010aa94:	b008d43a 	srli	r4,r22,16
1010aa98:	24c8b03a 	or	r4,r4,r19
1010aa9c:	2080062e 	bgeu	r4,r2,1010aab8 <__udivdi3+0x4f8>
1010aaa0:	2449883a 	add	r4,r4,r17
1010aaa4:	b8ffffc4 	addi	r3,r23,-1
1010aaa8:	24403c36 	bltu	r4,r17,1010ab9c <__udivdi3+0x5dc>
1010aaac:	20803b2e 	bgeu	r4,r2,1010ab9c <__udivdi3+0x5dc>
1010aab0:	bdffff84 	addi	r23,r23,-2
1010aab4:	2449883a 	add	r4,r4,r17
1010aab8:	20a1c83a 	sub	r16,r4,r2
1010aabc:	a80b883a 	mov	r5,r21
1010aac0:	8009883a 	mov	r4,r16
1010aac4:	0100c400 	call	10100c40 <__umodsi3>
1010aac8:	a80b883a 	mov	r5,r21
1010aacc:	8009883a 	mov	r4,r16
1010aad0:	1027883a 	mov	r19,r2
1010aad4:	0100bdc0 	call	10100bdc <__udivsi3>
1010aad8:	a009883a 	mov	r4,r20
1010aadc:	100b883a 	mov	r5,r2
1010aae0:	9826943a 	slli	r19,r19,16
1010aae4:	1039883a 	mov	fp,r2
1010aae8:	0100c980 	call	10100c98 <__mulsi3>
1010aaec:	b13fffcc 	andi	r4,r22,65535
1010aaf0:	24c8b03a 	or	r4,r4,r19
1010aaf4:	2080062e 	bgeu	r4,r2,1010ab10 <__udivdi3+0x550>
1010aaf8:	2449883a 	add	r4,r4,r17
1010aafc:	e0ffffc4 	addi	r3,fp,-1
1010ab00:	24402436 	bltu	r4,r17,1010ab94 <__udivdi3+0x5d4>
1010ab04:	2080232e 	bgeu	r4,r2,1010ab94 <__udivdi3+0x5d4>
1010ab08:	e73fff84 	addi	fp,fp,-2
1010ab0c:	2449883a 	add	r4,r4,r17
1010ab10:	b82e943a 	slli	r23,r23,16
1010ab14:	20a1c83a 	sub	r16,r4,r2
1010ab18:	bf06b03a 	or	r3,r23,fp
1010ab1c:	003f2806 	br	1010a7c0 <__alt_data_end+0xfffea7c0>
1010ab20:	2021883a 	mov	r16,r4
1010ab24:	003f5306 	br	1010a874 <__alt_data_end+0xfffea874>
1010ab28:	1821883a 	mov	r16,r3
1010ab2c:	003ef406 	br	1010a700 <__alt_data_end+0xfffea700>
1010ab30:	1806943a 	slli	r3,r3,16
1010ab34:	9de6983a 	sll	r19,r19,r23
1010ab38:	e73fffcc 	andi	fp,fp,65535
1010ab3c:	1f07883a 	add	r3,r3,fp
1010ab40:	98ffbd2e 	bgeu	r19,r3,1010aa38 <__alt_data_end+0xfffeaa38>
1010ab44:	90bfffc4 	addi	r2,r18,-1
1010ab48:	0007883a 	mov	r3,zero
1010ab4c:	003f4e06 	br	1010a888 <__alt_data_end+0xfffea888>
1010ab50:	00800604 	movi	r2,24
1010ab54:	003ef506 	br	1010a72c <__alt_data_end+0xfffea72c>
1010ab58:	00800604 	movi	r2,24
1010ab5c:	003f0b06 	br	1010a78c <__alt_data_end+0xfffea78c>
1010ab60:	00800604 	movi	r2,24
1010ab64:	003ead06 	br	1010a61c <__alt_data_end+0xfffea61c>
1010ab68:	0007883a 	mov	r3,zero
1010ab6c:	00800044 	movi	r2,1
1010ab70:	003f4506 	br	1010a888 <__alt_data_end+0xfffea888>
1010ab74:	80bf8e2e 	bgeu	r16,r2,1010a9b0 <__alt_data_end+0xfffea9b0>
1010ab78:	8c7fff84 	addi	r17,r17,-2
1010ab7c:	8721883a 	add	r16,r16,fp
1010ab80:	003f8c06 	br	1010a9b4 <__alt_data_end+0xfffea9b4>
1010ab84:	18bf762e 	bgeu	r3,r2,1010a960 <__alt_data_end+0xfffea960>
1010ab88:	ad7fff84 	addi	r21,r21,-2
1010ab8c:	1f07883a 	add	r3,r3,fp
1010ab90:	003f7406 	br	1010a964 <__alt_data_end+0xfffea964>
1010ab94:	1839883a 	mov	fp,r3
1010ab98:	003fdd06 	br	1010ab10 <__alt_data_end+0xfffeab10>
1010ab9c:	182f883a 	mov	r23,r3
1010aba0:	003fc506 	br	1010aab8 <__alt_data_end+0xfffeaab8>
1010aba4:	b5bfff84 	addi	r22,r22,-2
1010aba8:	3c4f883a 	add	r7,r7,r17
1010abac:	003f1a06 	br	1010a818 <__alt_data_end+0xfffea818>
1010abb0:	b5bfff84 	addi	r22,r22,-2
1010abb4:	1c47883a 	add	r3,r3,r17
1010abb8:	003ebc06 	br	1010a6ac <__alt_data_end+0xfffea6ac>

1010abbc <__umoddi3>:
1010abbc:	defff304 	addi	sp,sp,-52
1010abc0:	df000b15 	stw	fp,44(sp)
1010abc4:	dc400415 	stw	r17,16(sp)
1010abc8:	dc000315 	stw	r16,12(sp)
1010abcc:	dfc00c15 	stw	ra,48(sp)
1010abd0:	ddc00a15 	stw	r23,40(sp)
1010abd4:	dd800915 	stw	r22,36(sp)
1010abd8:	dd400815 	stw	r21,32(sp)
1010abdc:	dd000715 	stw	r20,28(sp)
1010abe0:	dcc00615 	stw	r19,24(sp)
1010abe4:	dc800515 	stw	r18,20(sp)
1010abe8:	2021883a 	mov	r16,r4
1010abec:	2823883a 	mov	r17,r5
1010abf0:	2839883a 	mov	fp,r5
1010abf4:	3800401e 	bne	r7,zero,1010acf8 <__umoddi3+0x13c>
1010abf8:	3027883a 	mov	r19,r6
1010abfc:	2029883a 	mov	r20,r4
1010ac00:	2980552e 	bgeu	r5,r6,1010ad58 <__umoddi3+0x19c>
1010ac04:	00bfffd4 	movui	r2,65535
1010ac08:	1180a236 	bltu	r2,r6,1010ae94 <__umoddi3+0x2d8>
1010ac0c:	01003fc4 	movi	r4,255
1010ac10:	2189803a 	cmpltu	r4,r4,r6
1010ac14:	200890fa 	slli	r4,r4,3
1010ac18:	3104d83a 	srl	r2,r6,r4
1010ac1c:	00c40474 	movhi	r3,4113
1010ac20:	18c1fe04 	addi	r3,r3,2040
1010ac24:	1885883a 	add	r2,r3,r2
1010ac28:	10c00003 	ldbu	r3,0(r2)
1010ac2c:	00800804 	movi	r2,32
1010ac30:	1909883a 	add	r4,r3,r4
1010ac34:	1125c83a 	sub	r18,r2,r4
1010ac38:	90000526 	beq	r18,zero,1010ac50 <__umoddi3+0x94>
1010ac3c:	8ca2983a 	sll	r17,r17,r18
1010ac40:	8108d83a 	srl	r4,r16,r4
1010ac44:	34a6983a 	sll	r19,r6,r18
1010ac48:	84a8983a 	sll	r20,r16,r18
1010ac4c:	2478b03a 	or	fp,r4,r17
1010ac50:	982cd43a 	srli	r22,r19,16
1010ac54:	e009883a 	mov	r4,fp
1010ac58:	9dffffcc 	andi	r23,r19,65535
1010ac5c:	b00b883a 	mov	r5,r22
1010ac60:	0100c400 	call	10100c40 <__umodsi3>
1010ac64:	b00b883a 	mov	r5,r22
1010ac68:	e009883a 	mov	r4,fp
1010ac6c:	102b883a 	mov	r21,r2
1010ac70:	0100bdc0 	call	10100bdc <__udivsi3>
1010ac74:	100b883a 	mov	r5,r2
1010ac78:	b809883a 	mov	r4,r23
1010ac7c:	0100c980 	call	10100c98 <__mulsi3>
1010ac80:	a82a943a 	slli	r21,r21,16
1010ac84:	a006d43a 	srli	r3,r20,16
1010ac88:	1d46b03a 	or	r3,r3,r21
1010ac8c:	1880032e 	bgeu	r3,r2,1010ac9c <__umoddi3+0xe0>
1010ac90:	1cc7883a 	add	r3,r3,r19
1010ac94:	1cc00136 	bltu	r3,r19,1010ac9c <__umoddi3+0xe0>
1010ac98:	18813136 	bltu	r3,r2,1010b160 <__umoddi3+0x5a4>
1010ac9c:	18a1c83a 	sub	r16,r3,r2
1010aca0:	b00b883a 	mov	r5,r22
1010aca4:	8009883a 	mov	r4,r16
1010aca8:	0100c400 	call	10100c40 <__umodsi3>
1010acac:	b00b883a 	mov	r5,r22
1010acb0:	8009883a 	mov	r4,r16
1010acb4:	1023883a 	mov	r17,r2
1010acb8:	0100bdc0 	call	10100bdc <__udivsi3>
1010acbc:	100b883a 	mov	r5,r2
1010acc0:	b809883a 	mov	r4,r23
1010acc4:	8822943a 	slli	r17,r17,16
1010acc8:	0100c980 	call	10100c98 <__mulsi3>
1010accc:	a0ffffcc 	andi	r3,r20,65535
1010acd0:	1c46b03a 	or	r3,r3,r17
1010acd4:	1880042e 	bgeu	r3,r2,1010ace8 <__umoddi3+0x12c>
1010acd8:	1cc7883a 	add	r3,r3,r19
1010acdc:	1cc00236 	bltu	r3,r19,1010ace8 <__umoddi3+0x12c>
1010ace0:	1880012e 	bgeu	r3,r2,1010ace8 <__umoddi3+0x12c>
1010ace4:	1cc7883a 	add	r3,r3,r19
1010ace8:	1885c83a 	sub	r2,r3,r2
1010acec:	1484d83a 	srl	r2,r2,r18
1010acf0:	0007883a 	mov	r3,zero
1010acf4:	00005306 	br	1010ae44 <__umoddi3+0x288>
1010acf8:	29c05036 	bltu	r5,r7,1010ae3c <__umoddi3+0x280>
1010acfc:	00bfffd4 	movui	r2,65535
1010ad00:	11c05c2e 	bgeu	r2,r7,1010ae74 <__umoddi3+0x2b8>
1010ad04:	00804034 	movhi	r2,256
1010ad08:	10bfffc4 	addi	r2,r2,-1
1010ad0c:	11c10636 	bltu	r2,r7,1010b128 <__umoddi3+0x56c>
1010ad10:	01000404 	movi	r4,16
1010ad14:	3904d83a 	srl	r2,r7,r4
1010ad18:	00c40474 	movhi	r3,4113
1010ad1c:	18c1fe04 	addi	r3,r3,2040
1010ad20:	1885883a 	add	r2,r3,r2
1010ad24:	14c00003 	ldbu	r19,0(r2)
1010ad28:	00c00804 	movi	r3,32
1010ad2c:	9927883a 	add	r19,r19,r4
1010ad30:	1ce9c83a 	sub	r20,r3,r19
1010ad34:	a0005c1e 	bne	r20,zero,1010aea8 <__umoddi3+0x2ec>
1010ad38:	3c400136 	bltu	r7,r17,1010ad40 <__umoddi3+0x184>
1010ad3c:	81810a36 	bltu	r16,r6,1010b168 <__umoddi3+0x5ac>
1010ad40:	8185c83a 	sub	r2,r16,r6
1010ad44:	89e3c83a 	sub	r17,r17,r7
1010ad48:	8089803a 	cmpltu	r4,r16,r2
1010ad4c:	8939c83a 	sub	fp,r17,r4
1010ad50:	e007883a 	mov	r3,fp
1010ad54:	00003b06 	br	1010ae44 <__umoddi3+0x288>
1010ad58:	3000041e 	bne	r6,zero,1010ad6c <__umoddi3+0x1b0>
1010ad5c:	000b883a 	mov	r5,zero
1010ad60:	01000044 	movi	r4,1
1010ad64:	0100bdc0 	call	10100bdc <__udivsi3>
1010ad68:	1027883a 	mov	r19,r2
1010ad6c:	00bfffd4 	movui	r2,65535
1010ad70:	14c0442e 	bgeu	r2,r19,1010ae84 <__umoddi3+0x2c8>
1010ad74:	00804034 	movhi	r2,256
1010ad78:	10bfffc4 	addi	r2,r2,-1
1010ad7c:	14c0ec36 	bltu	r2,r19,1010b130 <__umoddi3+0x574>
1010ad80:	00800404 	movi	r2,16
1010ad84:	9886d83a 	srl	r3,r19,r2
1010ad88:	01040474 	movhi	r4,4113
1010ad8c:	2101fe04 	addi	r4,r4,2040
1010ad90:	20c7883a 	add	r3,r4,r3
1010ad94:	18c00003 	ldbu	r3,0(r3)
1010ad98:	1887883a 	add	r3,r3,r2
1010ad9c:	00800804 	movi	r2,32
1010ada0:	10e5c83a 	sub	r18,r2,r3
1010ada4:	9000ab1e 	bne	r18,zero,1010b054 <__umoddi3+0x498>
1010ada8:	982cd43a 	srli	r22,r19,16
1010adac:	8ce3c83a 	sub	r17,r17,r19
1010adb0:	9dffffcc 	andi	r23,r19,65535
1010adb4:	b00b883a 	mov	r5,r22
1010adb8:	8809883a 	mov	r4,r17
1010adbc:	0100c400 	call	10100c40 <__umodsi3>
1010adc0:	b00b883a 	mov	r5,r22
1010adc4:	8809883a 	mov	r4,r17
1010adc8:	102b883a 	mov	r21,r2
1010adcc:	0100bdc0 	call	10100bdc <__udivsi3>
1010add0:	b80b883a 	mov	r5,r23
1010add4:	1009883a 	mov	r4,r2
1010add8:	0100c980 	call	10100c98 <__mulsi3>
1010addc:	a82a943a 	slli	r21,r21,16
1010ade0:	a006d43a 	srli	r3,r20,16
1010ade4:	1d46b03a 	or	r3,r3,r21
1010ade8:	1880042e 	bgeu	r3,r2,1010adfc <__umoddi3+0x240>
1010adec:	1cc7883a 	add	r3,r3,r19
1010adf0:	1cc00236 	bltu	r3,r19,1010adfc <__umoddi3+0x240>
1010adf4:	1880012e 	bgeu	r3,r2,1010adfc <__umoddi3+0x240>
1010adf8:	1cc7883a 	add	r3,r3,r19
1010adfc:	18a1c83a 	sub	r16,r3,r2
1010ae00:	b00b883a 	mov	r5,r22
1010ae04:	8009883a 	mov	r4,r16
1010ae08:	0100c400 	call	10100c40 <__umodsi3>
1010ae0c:	1023883a 	mov	r17,r2
1010ae10:	b00b883a 	mov	r5,r22
1010ae14:	8009883a 	mov	r4,r16
1010ae18:	0100bdc0 	call	10100bdc <__udivsi3>
1010ae1c:	8822943a 	slli	r17,r17,16
1010ae20:	b80b883a 	mov	r5,r23
1010ae24:	1009883a 	mov	r4,r2
1010ae28:	0100c980 	call	10100c98 <__mulsi3>
1010ae2c:	a53fffcc 	andi	r20,r20,65535
1010ae30:	a446b03a 	or	r3,r20,r17
1010ae34:	18bfac2e 	bgeu	r3,r2,1010ace8 <__alt_data_end+0xfffeace8>
1010ae38:	003fa706 	br	1010acd8 <__alt_data_end+0xfffeacd8>
1010ae3c:	2005883a 	mov	r2,r4
1010ae40:	2807883a 	mov	r3,r5
1010ae44:	dfc00c17 	ldw	ra,48(sp)
1010ae48:	df000b17 	ldw	fp,44(sp)
1010ae4c:	ddc00a17 	ldw	r23,40(sp)
1010ae50:	dd800917 	ldw	r22,36(sp)
1010ae54:	dd400817 	ldw	r21,32(sp)
1010ae58:	dd000717 	ldw	r20,28(sp)
1010ae5c:	dcc00617 	ldw	r19,24(sp)
1010ae60:	dc800517 	ldw	r18,20(sp)
1010ae64:	dc400417 	ldw	r17,16(sp)
1010ae68:	dc000317 	ldw	r16,12(sp)
1010ae6c:	dec00d04 	addi	sp,sp,52
1010ae70:	f800283a 	ret
1010ae74:	04c03fc4 	movi	r19,255
1010ae78:	99c9803a 	cmpltu	r4,r19,r7
1010ae7c:	200890fa 	slli	r4,r4,3
1010ae80:	003fa406 	br	1010ad14 <__alt_data_end+0xfffead14>
1010ae84:	00803fc4 	movi	r2,255
1010ae88:	14c5803a 	cmpltu	r2,r2,r19
1010ae8c:	100490fa 	slli	r2,r2,3
1010ae90:	003fbc06 	br	1010ad84 <__alt_data_end+0xfffead84>
1010ae94:	00804034 	movhi	r2,256
1010ae98:	10bfffc4 	addi	r2,r2,-1
1010ae9c:	1180a636 	bltu	r2,r6,1010b138 <__umoddi3+0x57c>
1010aea0:	01000404 	movi	r4,16
1010aea4:	003f5c06 	br	1010ac18 <__alt_data_end+0xfffeac18>
1010aea8:	3d0e983a 	sll	r7,r7,r20
1010aeac:	34ead83a 	srl	r21,r6,r19
1010aeb0:	8cc6d83a 	srl	r3,r17,r19
1010aeb4:	8d10983a 	sll	r8,r17,r20
1010aeb8:	3d6ab03a 	or	r21,r7,r21
1010aebc:	a82cd43a 	srli	r22,r21,16
1010aec0:	84e2d83a 	srl	r17,r16,r19
1010aec4:	1809883a 	mov	r4,r3
1010aec8:	b00b883a 	mov	r5,r22
1010aecc:	8a22b03a 	or	r17,r17,r8
1010aed0:	3524983a 	sll	r18,r6,r20
1010aed4:	dc400015 	stw	r17,0(sp)
1010aed8:	d8c00115 	stw	r3,4(sp)
1010aedc:	0100c400 	call	10100c40 <__umodsi3>
1010aee0:	d8c00117 	ldw	r3,4(sp)
1010aee4:	b00b883a 	mov	r5,r22
1010aee8:	1039883a 	mov	fp,r2
1010aeec:	1809883a 	mov	r4,r3
1010aef0:	0100bdc0 	call	10100bdc <__udivsi3>
1010aef4:	adffffcc 	andi	r23,r21,65535
1010aef8:	100b883a 	mov	r5,r2
1010aefc:	b809883a 	mov	r4,r23
1010af00:	1023883a 	mov	r17,r2
1010af04:	0100c980 	call	10100c98 <__mulsi3>
1010af08:	d9400017 	ldw	r5,0(sp)
1010af0c:	e008943a 	slli	r4,fp,16
1010af10:	8520983a 	sll	r16,r16,r20
1010af14:	2806d43a 	srli	r3,r5,16
1010af18:	1906b03a 	or	r3,r3,r4
1010af1c:	1880042e 	bgeu	r3,r2,1010af30 <__umoddi3+0x374>
1010af20:	1d47883a 	add	r3,r3,r21
1010af24:	893fffc4 	addi	r4,r17,-1
1010af28:	1d40892e 	bgeu	r3,r21,1010b150 <__umoddi3+0x594>
1010af2c:	2023883a 	mov	r17,r4
1010af30:	18b9c83a 	sub	fp,r3,r2
1010af34:	b00b883a 	mov	r5,r22
1010af38:	e009883a 	mov	r4,fp
1010af3c:	0100c400 	call	10100c40 <__umodsi3>
1010af40:	b00b883a 	mov	r5,r22
1010af44:	e009883a 	mov	r4,fp
1010af48:	d8800215 	stw	r2,8(sp)
1010af4c:	0100bdc0 	call	10100bdc <__udivsi3>
1010af50:	100b883a 	mov	r5,r2
1010af54:	b809883a 	mov	r4,r23
1010af58:	102d883a 	mov	r22,r2
1010af5c:	0100c980 	call	10100c98 <__mulsi3>
1010af60:	d9800217 	ldw	r6,8(sp)
1010af64:	d8c00017 	ldw	r3,0(sp)
1010af68:	300c943a 	slli	r6,r6,16
1010af6c:	1a3fffcc 	andi	r8,r3,65535
1010af70:	4190b03a 	or	r8,r8,r6
1010af74:	4080042e 	bgeu	r8,r2,1010af88 <__umoddi3+0x3cc>
1010af78:	4551883a 	add	r8,r8,r21
1010af7c:	b0ffffc4 	addi	r3,r22,-1
1010af80:	45406f2e 	bgeu	r8,r21,1010b140 <__umoddi3+0x584>
1010af84:	182d883a 	mov	r22,r3
1010af88:	880e943a 	slli	r7,r17,16
1010af8c:	9006d43a 	srli	r3,r18,16
1010af90:	91bfffcc 	andi	r6,r18,65535
1010af94:	3dacb03a 	or	r22,r7,r22
1010af98:	b02ed43a 	srli	r23,r22,16
1010af9c:	b5bfffcc 	andi	r22,r22,65535
1010afa0:	300b883a 	mov	r5,r6
1010afa4:	b009883a 	mov	r4,r22
1010afa8:	40a3c83a 	sub	r17,r8,r2
1010afac:	d8c00115 	stw	r3,4(sp)
1010afb0:	d9800215 	stw	r6,8(sp)
1010afb4:	0100c980 	call	10100c98 <__mulsi3>
1010afb8:	d9800217 	ldw	r6,8(sp)
1010afbc:	b809883a 	mov	r4,r23
1010afc0:	1039883a 	mov	fp,r2
1010afc4:	300b883a 	mov	r5,r6
1010afc8:	0100c980 	call	10100c98 <__mulsi3>
1010afcc:	d8c00117 	ldw	r3,4(sp)
1010afd0:	b809883a 	mov	r4,r23
1010afd4:	d8800215 	stw	r2,8(sp)
1010afd8:	180b883a 	mov	r5,r3
1010afdc:	0100c980 	call	10100c98 <__mulsi3>
1010afe0:	d8c00117 	ldw	r3,4(sp)
1010afe4:	b009883a 	mov	r4,r22
1010afe8:	102f883a 	mov	r23,r2
1010afec:	180b883a 	mov	r5,r3
1010aff0:	0100c980 	call	10100c98 <__mulsi3>
1010aff4:	d9800217 	ldw	r6,8(sp)
1010aff8:	e006d43a 	srli	r3,fp,16
1010affc:	1185883a 	add	r2,r2,r6
1010b000:	1885883a 	add	r2,r3,r2
1010b004:	1180022e 	bgeu	r2,r6,1010b010 <__umoddi3+0x454>
1010b008:	00c00074 	movhi	r3,1
1010b00c:	b8ef883a 	add	r23,r23,r3
1010b010:	1006d43a 	srli	r3,r2,16
1010b014:	1004943a 	slli	r2,r2,16
1010b018:	e73fffcc 	andi	fp,fp,65535
1010b01c:	1dc7883a 	add	r3,r3,r23
1010b020:	1739883a 	add	fp,r2,fp
1010b024:	88c03a36 	bltu	r17,r3,1010b110 <__umoddi3+0x554>
1010b028:	88c05126 	beq	r17,r3,1010b170 <__umoddi3+0x5b4>
1010b02c:	88c9c83a 	sub	r4,r17,r3
1010b030:	e00f883a 	mov	r7,fp
1010b034:	81cfc83a 	sub	r7,r16,r7
1010b038:	81c7803a 	cmpltu	r3,r16,r7
1010b03c:	20c7c83a 	sub	r3,r4,r3
1010b040:	1cc4983a 	sll	r2,r3,r19
1010b044:	3d0ed83a 	srl	r7,r7,r20
1010b048:	1d06d83a 	srl	r3,r3,r20
1010b04c:	11c4b03a 	or	r2,r2,r7
1010b050:	003f7c06 	br	1010ae44 <__alt_data_end+0xfffeae44>
1010b054:	9ca6983a 	sll	r19,r19,r18
1010b058:	88f8d83a 	srl	fp,r17,r3
1010b05c:	80c4d83a 	srl	r2,r16,r3
1010b060:	982cd43a 	srli	r22,r19,16
1010b064:	8ca2983a 	sll	r17,r17,r18
1010b068:	e009883a 	mov	r4,fp
1010b06c:	b00b883a 	mov	r5,r22
1010b070:	146ab03a 	or	r21,r2,r17
1010b074:	0100c400 	call	10100c40 <__umodsi3>
1010b078:	b00b883a 	mov	r5,r22
1010b07c:	e009883a 	mov	r4,fp
1010b080:	1029883a 	mov	r20,r2
1010b084:	9dffffcc 	andi	r23,r19,65535
1010b088:	0100bdc0 	call	10100bdc <__udivsi3>
1010b08c:	b809883a 	mov	r4,r23
1010b090:	100b883a 	mov	r5,r2
1010b094:	0100c980 	call	10100c98 <__mulsi3>
1010b098:	a008943a 	slli	r4,r20,16
1010b09c:	a806d43a 	srli	r3,r21,16
1010b0a0:	84a8983a 	sll	r20,r16,r18
1010b0a4:	1906b03a 	or	r3,r3,r4
1010b0a8:	1880042e 	bgeu	r3,r2,1010b0bc <__umoddi3+0x500>
1010b0ac:	1cc7883a 	add	r3,r3,r19
1010b0b0:	1cc00236 	bltu	r3,r19,1010b0bc <__umoddi3+0x500>
1010b0b4:	1880012e 	bgeu	r3,r2,1010b0bc <__umoddi3+0x500>
1010b0b8:	1cc7883a 	add	r3,r3,r19
1010b0bc:	18a3c83a 	sub	r17,r3,r2
1010b0c0:	b00b883a 	mov	r5,r22
1010b0c4:	8809883a 	mov	r4,r17
1010b0c8:	0100c400 	call	10100c40 <__umodsi3>
1010b0cc:	b00b883a 	mov	r5,r22
1010b0d0:	8809883a 	mov	r4,r17
1010b0d4:	1021883a 	mov	r16,r2
1010b0d8:	0100bdc0 	call	10100bdc <__udivsi3>
1010b0dc:	100b883a 	mov	r5,r2
1010b0e0:	b809883a 	mov	r4,r23
1010b0e4:	8020943a 	slli	r16,r16,16
1010b0e8:	0100c980 	call	10100c98 <__mulsi3>
1010b0ec:	a8ffffcc 	andi	r3,r21,65535
1010b0f0:	1c06b03a 	or	r3,r3,r16
1010b0f4:	1880042e 	bgeu	r3,r2,1010b108 <__umoddi3+0x54c>
1010b0f8:	1cc7883a 	add	r3,r3,r19
1010b0fc:	1cc00236 	bltu	r3,r19,1010b108 <__umoddi3+0x54c>
1010b100:	1880012e 	bgeu	r3,r2,1010b108 <__umoddi3+0x54c>
1010b104:	1cc7883a 	add	r3,r3,r19
1010b108:	18a3c83a 	sub	r17,r3,r2
1010b10c:	003f2906 	br	1010adb4 <__alt_data_end+0xfffeadb4>
1010b110:	e48fc83a 	sub	r7,fp,r18
1010b114:	1d49c83a 	sub	r4,r3,r21
1010b118:	e1f9803a 	cmpltu	fp,fp,r7
1010b11c:	2739c83a 	sub	fp,r4,fp
1010b120:	8f09c83a 	sub	r4,r17,fp
1010b124:	003fc306 	br	1010b034 <__alt_data_end+0xfffeb034>
1010b128:	01000604 	movi	r4,24
1010b12c:	003ef906 	br	1010ad14 <__alt_data_end+0xfffead14>
1010b130:	00800604 	movi	r2,24
1010b134:	003f1306 	br	1010ad84 <__alt_data_end+0xfffead84>
1010b138:	01000604 	movi	r4,24
1010b13c:	003eb606 	br	1010ac18 <__alt_data_end+0xfffeac18>
1010b140:	40bf902e 	bgeu	r8,r2,1010af84 <__alt_data_end+0xfffeaf84>
1010b144:	b5bfff84 	addi	r22,r22,-2
1010b148:	4551883a 	add	r8,r8,r21
1010b14c:	003f8e06 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b150:	18bf762e 	bgeu	r3,r2,1010af2c <__alt_data_end+0xfffeaf2c>
1010b154:	8c7fff84 	addi	r17,r17,-2
1010b158:	1d47883a 	add	r3,r3,r21
1010b15c:	003f7406 	br	1010af30 <__alt_data_end+0xfffeaf30>
1010b160:	1cc7883a 	add	r3,r3,r19
1010b164:	003ecd06 	br	1010ac9c <__alt_data_end+0xfffeac9c>
1010b168:	8005883a 	mov	r2,r16
1010b16c:	003ef806 	br	1010ad50 <__alt_data_end+0xfffead50>
1010b170:	873fe736 	bltu	r16,fp,1010b110 <__alt_data_end+0xfffeb110>
1010b174:	e00f883a 	mov	r7,fp
1010b178:	0009883a 	mov	r4,zero
1010b17c:	003fad06 	br	1010b034 <__alt_data_end+0xfffeb034>

1010b180 <__adddf3>:
1010b180:	02c00434 	movhi	r11,16
1010b184:	5affffc4 	addi	r11,r11,-1
1010b188:	2806d7fa 	srli	r3,r5,31
1010b18c:	2ad4703a 	and	r10,r5,r11
1010b190:	3ad2703a 	and	r9,r7,r11
1010b194:	3804d53a 	srli	r2,r7,20
1010b198:	3018d77a 	srli	r12,r6,29
1010b19c:	280ad53a 	srli	r5,r5,20
1010b1a0:	501490fa 	slli	r10,r10,3
1010b1a4:	2010d77a 	srli	r8,r4,29
1010b1a8:	481290fa 	slli	r9,r9,3
1010b1ac:	380ed7fa 	srli	r7,r7,31
1010b1b0:	defffb04 	addi	sp,sp,-20
1010b1b4:	dc800215 	stw	r18,8(sp)
1010b1b8:	dc400115 	stw	r17,4(sp)
1010b1bc:	dc000015 	stw	r16,0(sp)
1010b1c0:	dfc00415 	stw	ra,16(sp)
1010b1c4:	dcc00315 	stw	r19,12(sp)
1010b1c8:	1c803fcc 	andi	r18,r3,255
1010b1cc:	2c01ffcc 	andi	r16,r5,2047
1010b1d0:	5210b03a 	or	r8,r10,r8
1010b1d4:	202290fa 	slli	r17,r4,3
1010b1d8:	1081ffcc 	andi	r2,r2,2047
1010b1dc:	4b12b03a 	or	r9,r9,r12
1010b1e0:	300c90fa 	slli	r6,r6,3
1010b1e4:	91c07526 	beq	r18,r7,1010b3bc <__adddf3+0x23c>
1010b1e8:	8087c83a 	sub	r3,r16,r2
1010b1ec:	00c0ab0e 	bge	zero,r3,1010b49c <__adddf3+0x31c>
1010b1f0:	10002a1e 	bne	r2,zero,1010b29c <__adddf3+0x11c>
1010b1f4:	4984b03a 	or	r2,r9,r6
1010b1f8:	1000961e 	bne	r2,zero,1010b454 <__adddf3+0x2d4>
1010b1fc:	888001cc 	andi	r2,r17,7
1010b200:	10000726 	beq	r2,zero,1010b220 <__adddf3+0xa0>
1010b204:	888003cc 	andi	r2,r17,15
1010b208:	00c00104 	movi	r3,4
1010b20c:	10c00426 	beq	r2,r3,1010b220 <__adddf3+0xa0>
1010b210:	88c7883a 	add	r3,r17,r3
1010b214:	1c63803a 	cmpltu	r17,r3,r17
1010b218:	4451883a 	add	r8,r8,r17
1010b21c:	1823883a 	mov	r17,r3
1010b220:	4080202c 	andhi	r2,r8,128
1010b224:	10005926 	beq	r2,zero,1010b38c <__adddf3+0x20c>
1010b228:	84000044 	addi	r16,r16,1
1010b22c:	0081ffc4 	movi	r2,2047
1010b230:	8080ba26 	beq	r16,r2,1010b51c <__adddf3+0x39c>
1010b234:	00bfe034 	movhi	r2,65408
1010b238:	10bfffc4 	addi	r2,r2,-1
1010b23c:	4090703a 	and	r8,r8,r2
1010b240:	4004977a 	slli	r2,r8,29
1010b244:	4010927a 	slli	r8,r8,9
1010b248:	8822d0fa 	srli	r17,r17,3
1010b24c:	8401ffcc 	andi	r16,r16,2047
1010b250:	4010d33a 	srli	r8,r8,12
1010b254:	9007883a 	mov	r3,r18
1010b258:	1444b03a 	or	r2,r2,r17
1010b25c:	8401ffcc 	andi	r16,r16,2047
1010b260:	8020953a 	slli	r16,r16,20
1010b264:	18c03fcc 	andi	r3,r3,255
1010b268:	01000434 	movhi	r4,16
1010b26c:	213fffc4 	addi	r4,r4,-1
1010b270:	180697fa 	slli	r3,r3,31
1010b274:	4110703a 	and	r8,r8,r4
1010b278:	4410b03a 	or	r8,r8,r16
1010b27c:	40c6b03a 	or	r3,r8,r3
1010b280:	dfc00417 	ldw	ra,16(sp)
1010b284:	dcc00317 	ldw	r19,12(sp)
1010b288:	dc800217 	ldw	r18,8(sp)
1010b28c:	dc400117 	ldw	r17,4(sp)
1010b290:	dc000017 	ldw	r16,0(sp)
1010b294:	dec00504 	addi	sp,sp,20
1010b298:	f800283a 	ret
1010b29c:	0081ffc4 	movi	r2,2047
1010b2a0:	80bfd626 	beq	r16,r2,1010b1fc <__alt_data_end+0xfffeb1fc>
1010b2a4:	4a402034 	orhi	r9,r9,128
1010b2a8:	00800e04 	movi	r2,56
1010b2ac:	10c09f16 	blt	r2,r3,1010b52c <__adddf3+0x3ac>
1010b2b0:	008007c4 	movi	r2,31
1010b2b4:	10c0c216 	blt	r2,r3,1010b5c0 <__adddf3+0x440>
1010b2b8:	00800804 	movi	r2,32
1010b2bc:	10c5c83a 	sub	r2,r2,r3
1010b2c0:	488a983a 	sll	r5,r9,r2
1010b2c4:	30c8d83a 	srl	r4,r6,r3
1010b2c8:	3084983a 	sll	r2,r6,r2
1010b2cc:	48c6d83a 	srl	r3,r9,r3
1010b2d0:	290cb03a 	or	r6,r5,r4
1010b2d4:	1004c03a 	cmpne	r2,r2,zero
1010b2d8:	308cb03a 	or	r6,r6,r2
1010b2dc:	898dc83a 	sub	r6,r17,r6
1010b2e0:	89a3803a 	cmpltu	r17,r17,r6
1010b2e4:	40d1c83a 	sub	r8,r8,r3
1010b2e8:	4451c83a 	sub	r8,r8,r17
1010b2ec:	3023883a 	mov	r17,r6
1010b2f0:	4080202c 	andhi	r2,r8,128
1010b2f4:	10002326 	beq	r2,zero,1010b384 <__adddf3+0x204>
1010b2f8:	04c02034 	movhi	r19,128
1010b2fc:	9cffffc4 	addi	r19,r19,-1
1010b300:	44e6703a 	and	r19,r8,r19
1010b304:	98007626 	beq	r19,zero,1010b4e0 <__adddf3+0x360>
1010b308:	9809883a 	mov	r4,r19
1010b30c:	010d9c00 	call	1010d9c0 <__clzsi2>
1010b310:	10fffe04 	addi	r3,r2,-8
1010b314:	010007c4 	movi	r4,31
1010b318:	20c07716 	blt	r4,r3,1010b4f8 <__adddf3+0x378>
1010b31c:	00800804 	movi	r2,32
1010b320:	10c5c83a 	sub	r2,r2,r3
1010b324:	8884d83a 	srl	r2,r17,r2
1010b328:	98d0983a 	sll	r8,r19,r3
1010b32c:	88e2983a 	sll	r17,r17,r3
1010b330:	1204b03a 	or	r2,r2,r8
1010b334:	1c007416 	blt	r3,r16,1010b508 <__adddf3+0x388>
1010b338:	1c21c83a 	sub	r16,r3,r16
1010b33c:	82000044 	addi	r8,r16,1
1010b340:	00c007c4 	movi	r3,31
1010b344:	1a009116 	blt	r3,r8,1010b58c <__adddf3+0x40c>
1010b348:	00c00804 	movi	r3,32
1010b34c:	1a07c83a 	sub	r3,r3,r8
1010b350:	8a08d83a 	srl	r4,r17,r8
1010b354:	88e2983a 	sll	r17,r17,r3
1010b358:	10c6983a 	sll	r3,r2,r3
1010b35c:	1210d83a 	srl	r8,r2,r8
1010b360:	8804c03a 	cmpne	r2,r17,zero
1010b364:	1906b03a 	or	r3,r3,r4
1010b368:	18a2b03a 	or	r17,r3,r2
1010b36c:	0021883a 	mov	r16,zero
1010b370:	003fa206 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b374:	1890b03a 	or	r8,r3,r2
1010b378:	40017d26 	beq	r8,zero,1010b970 <__adddf3+0x7f0>
1010b37c:	1011883a 	mov	r8,r2
1010b380:	1823883a 	mov	r17,r3
1010b384:	888001cc 	andi	r2,r17,7
1010b388:	103f9e1e 	bne	r2,zero,1010b204 <__alt_data_end+0xfffeb204>
1010b38c:	4004977a 	slli	r2,r8,29
1010b390:	8822d0fa 	srli	r17,r17,3
1010b394:	4010d0fa 	srli	r8,r8,3
1010b398:	9007883a 	mov	r3,r18
1010b39c:	1444b03a 	or	r2,r2,r17
1010b3a0:	0101ffc4 	movi	r4,2047
1010b3a4:	81002426 	beq	r16,r4,1010b438 <__adddf3+0x2b8>
1010b3a8:	8120703a 	and	r16,r16,r4
1010b3ac:	01000434 	movhi	r4,16
1010b3b0:	213fffc4 	addi	r4,r4,-1
1010b3b4:	4110703a 	and	r8,r8,r4
1010b3b8:	003fa806 	br	1010b25c <__alt_data_end+0xfffeb25c>
1010b3bc:	8089c83a 	sub	r4,r16,r2
1010b3c0:	01005e0e 	bge	zero,r4,1010b53c <__adddf3+0x3bc>
1010b3c4:	10002b26 	beq	r2,zero,1010b474 <__adddf3+0x2f4>
1010b3c8:	0081ffc4 	movi	r2,2047
1010b3cc:	80bf8b26 	beq	r16,r2,1010b1fc <__alt_data_end+0xfffeb1fc>
1010b3d0:	4a402034 	orhi	r9,r9,128
1010b3d4:	00800e04 	movi	r2,56
1010b3d8:	1100a40e 	bge	r2,r4,1010b66c <__adddf3+0x4ec>
1010b3dc:	498cb03a 	or	r6,r9,r6
1010b3e0:	300ac03a 	cmpne	r5,r6,zero
1010b3e4:	0013883a 	mov	r9,zero
1010b3e8:	2c4b883a 	add	r5,r5,r17
1010b3ec:	2c63803a 	cmpltu	r17,r5,r17
1010b3f0:	4a11883a 	add	r8,r9,r8
1010b3f4:	8a11883a 	add	r8,r17,r8
1010b3f8:	2823883a 	mov	r17,r5
1010b3fc:	4080202c 	andhi	r2,r8,128
1010b400:	103fe026 	beq	r2,zero,1010b384 <__alt_data_end+0xfffeb384>
1010b404:	84000044 	addi	r16,r16,1
1010b408:	0081ffc4 	movi	r2,2047
1010b40c:	8080d226 	beq	r16,r2,1010b758 <__adddf3+0x5d8>
1010b410:	00bfe034 	movhi	r2,65408
1010b414:	10bfffc4 	addi	r2,r2,-1
1010b418:	4090703a 	and	r8,r8,r2
1010b41c:	880ad07a 	srli	r5,r17,1
1010b420:	400897fa 	slli	r4,r8,31
1010b424:	88c0004c 	andi	r3,r17,1
1010b428:	28e2b03a 	or	r17,r5,r3
1010b42c:	4010d07a 	srli	r8,r8,1
1010b430:	2462b03a 	or	r17,r4,r17
1010b434:	003f7106 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b438:	4088b03a 	or	r4,r8,r2
1010b43c:	20014526 	beq	r4,zero,1010b954 <__adddf3+0x7d4>
1010b440:	01000434 	movhi	r4,16
1010b444:	42000234 	orhi	r8,r8,8
1010b448:	213fffc4 	addi	r4,r4,-1
1010b44c:	4110703a 	and	r8,r8,r4
1010b450:	003f8206 	br	1010b25c <__alt_data_end+0xfffeb25c>
1010b454:	18ffffc4 	addi	r3,r3,-1
1010b458:	1800491e 	bne	r3,zero,1010b580 <__adddf3+0x400>
1010b45c:	898bc83a 	sub	r5,r17,r6
1010b460:	8963803a 	cmpltu	r17,r17,r5
1010b464:	4251c83a 	sub	r8,r8,r9
1010b468:	4451c83a 	sub	r8,r8,r17
1010b46c:	2823883a 	mov	r17,r5
1010b470:	003f9f06 	br	1010b2f0 <__alt_data_end+0xfffeb2f0>
1010b474:	4984b03a 	or	r2,r9,r6
1010b478:	103f6026 	beq	r2,zero,1010b1fc <__alt_data_end+0xfffeb1fc>
1010b47c:	213fffc4 	addi	r4,r4,-1
1010b480:	2000931e 	bne	r4,zero,1010b6d0 <__adddf3+0x550>
1010b484:	898d883a 	add	r6,r17,r6
1010b488:	3463803a 	cmpltu	r17,r6,r17
1010b48c:	4251883a 	add	r8,r8,r9
1010b490:	8a11883a 	add	r8,r17,r8
1010b494:	3023883a 	mov	r17,r6
1010b498:	003fd806 	br	1010b3fc <__alt_data_end+0xfffeb3fc>
1010b49c:	1800541e 	bne	r3,zero,1010b5f0 <__adddf3+0x470>
1010b4a0:	80800044 	addi	r2,r16,1
1010b4a4:	1081ffcc 	andi	r2,r2,2047
1010b4a8:	00c00044 	movi	r3,1
1010b4ac:	1880a00e 	bge	r3,r2,1010b730 <__adddf3+0x5b0>
1010b4b0:	8989c83a 	sub	r4,r17,r6
1010b4b4:	8905803a 	cmpltu	r2,r17,r4
1010b4b8:	4267c83a 	sub	r19,r8,r9
1010b4bc:	98a7c83a 	sub	r19,r19,r2
1010b4c0:	9880202c 	andhi	r2,r19,128
1010b4c4:	10006326 	beq	r2,zero,1010b654 <__adddf3+0x4d4>
1010b4c8:	3463c83a 	sub	r17,r6,r17
1010b4cc:	4a07c83a 	sub	r3,r9,r8
1010b4d0:	344d803a 	cmpltu	r6,r6,r17
1010b4d4:	19a7c83a 	sub	r19,r3,r6
1010b4d8:	3825883a 	mov	r18,r7
1010b4dc:	983f8a1e 	bne	r19,zero,1010b308 <__alt_data_end+0xfffeb308>
1010b4e0:	8809883a 	mov	r4,r17
1010b4e4:	010d9c00 	call	1010d9c0 <__clzsi2>
1010b4e8:	10800804 	addi	r2,r2,32
1010b4ec:	10fffe04 	addi	r3,r2,-8
1010b4f0:	010007c4 	movi	r4,31
1010b4f4:	20ff890e 	bge	r4,r3,1010b31c <__alt_data_end+0xfffeb31c>
1010b4f8:	10bff604 	addi	r2,r2,-40
1010b4fc:	8884983a 	sll	r2,r17,r2
1010b500:	0023883a 	mov	r17,zero
1010b504:	1c3f8c0e 	bge	r3,r16,1010b338 <__alt_data_end+0xfffeb338>
1010b508:	023fe034 	movhi	r8,65408
1010b50c:	423fffc4 	addi	r8,r8,-1
1010b510:	80e1c83a 	sub	r16,r16,r3
1010b514:	1210703a 	and	r8,r2,r8
1010b518:	003f3806 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b51c:	9007883a 	mov	r3,r18
1010b520:	0011883a 	mov	r8,zero
1010b524:	0005883a 	mov	r2,zero
1010b528:	003f4c06 	br	1010b25c <__alt_data_end+0xfffeb25c>
1010b52c:	498cb03a 	or	r6,r9,r6
1010b530:	300cc03a 	cmpne	r6,r6,zero
1010b534:	0007883a 	mov	r3,zero
1010b538:	003f6806 	br	1010b2dc <__alt_data_end+0xfffeb2dc>
1010b53c:	20009c1e 	bne	r4,zero,1010b7b0 <__adddf3+0x630>
1010b540:	80800044 	addi	r2,r16,1
1010b544:	1141ffcc 	andi	r5,r2,2047
1010b548:	01000044 	movi	r4,1
1010b54c:	2140670e 	bge	r4,r5,1010b6ec <__adddf3+0x56c>
1010b550:	0101ffc4 	movi	r4,2047
1010b554:	11007f26 	beq	r2,r4,1010b754 <__adddf3+0x5d4>
1010b558:	898d883a 	add	r6,r17,r6
1010b55c:	4247883a 	add	r3,r8,r9
1010b560:	3451803a 	cmpltu	r8,r6,r17
1010b564:	40d1883a 	add	r8,r8,r3
1010b568:	402297fa 	slli	r17,r8,31
1010b56c:	300cd07a 	srli	r6,r6,1
1010b570:	4010d07a 	srli	r8,r8,1
1010b574:	1021883a 	mov	r16,r2
1010b578:	89a2b03a 	or	r17,r17,r6
1010b57c:	003f1f06 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b580:	0081ffc4 	movi	r2,2047
1010b584:	80bf481e 	bne	r16,r2,1010b2a8 <__alt_data_end+0xfffeb2a8>
1010b588:	003f1c06 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b58c:	843ff844 	addi	r16,r16,-31
1010b590:	01000804 	movi	r4,32
1010b594:	1406d83a 	srl	r3,r2,r16
1010b598:	41005026 	beq	r8,r4,1010b6dc <__adddf3+0x55c>
1010b59c:	01001004 	movi	r4,64
1010b5a0:	2211c83a 	sub	r8,r4,r8
1010b5a4:	1204983a 	sll	r2,r2,r8
1010b5a8:	88a2b03a 	or	r17,r17,r2
1010b5ac:	8822c03a 	cmpne	r17,r17,zero
1010b5b0:	1c62b03a 	or	r17,r3,r17
1010b5b4:	0011883a 	mov	r8,zero
1010b5b8:	0021883a 	mov	r16,zero
1010b5bc:	003f7106 	br	1010b384 <__alt_data_end+0xfffeb384>
1010b5c0:	193ff804 	addi	r4,r3,-32
1010b5c4:	00800804 	movi	r2,32
1010b5c8:	4908d83a 	srl	r4,r9,r4
1010b5cc:	18804526 	beq	r3,r2,1010b6e4 <__adddf3+0x564>
1010b5d0:	00801004 	movi	r2,64
1010b5d4:	10c5c83a 	sub	r2,r2,r3
1010b5d8:	4886983a 	sll	r3,r9,r2
1010b5dc:	198cb03a 	or	r6,r3,r6
1010b5e0:	300cc03a 	cmpne	r6,r6,zero
1010b5e4:	218cb03a 	or	r6,r4,r6
1010b5e8:	0007883a 	mov	r3,zero
1010b5ec:	003f3b06 	br	1010b2dc <__alt_data_end+0xfffeb2dc>
1010b5f0:	80002a26 	beq	r16,zero,1010b69c <__adddf3+0x51c>
1010b5f4:	0101ffc4 	movi	r4,2047
1010b5f8:	11006826 	beq	r2,r4,1010b79c <__adddf3+0x61c>
1010b5fc:	00c7c83a 	sub	r3,zero,r3
1010b600:	42002034 	orhi	r8,r8,128
1010b604:	01000e04 	movi	r4,56
1010b608:	20c07c16 	blt	r4,r3,1010b7fc <__adddf3+0x67c>
1010b60c:	010007c4 	movi	r4,31
1010b610:	20c0da16 	blt	r4,r3,1010b97c <__adddf3+0x7fc>
1010b614:	01000804 	movi	r4,32
1010b618:	20c9c83a 	sub	r4,r4,r3
1010b61c:	4114983a 	sll	r10,r8,r4
1010b620:	88cad83a 	srl	r5,r17,r3
1010b624:	8908983a 	sll	r4,r17,r4
1010b628:	40c6d83a 	srl	r3,r8,r3
1010b62c:	5162b03a 	or	r17,r10,r5
1010b630:	2008c03a 	cmpne	r4,r4,zero
1010b634:	8922b03a 	or	r17,r17,r4
1010b638:	3463c83a 	sub	r17,r6,r17
1010b63c:	48c7c83a 	sub	r3,r9,r3
1010b640:	344d803a 	cmpltu	r6,r6,r17
1010b644:	1991c83a 	sub	r8,r3,r6
1010b648:	1021883a 	mov	r16,r2
1010b64c:	3825883a 	mov	r18,r7
1010b650:	003f2706 	br	1010b2f0 <__alt_data_end+0xfffeb2f0>
1010b654:	24d0b03a 	or	r8,r4,r19
1010b658:	40001b1e 	bne	r8,zero,1010b6c8 <__adddf3+0x548>
1010b65c:	0005883a 	mov	r2,zero
1010b660:	0007883a 	mov	r3,zero
1010b664:	0021883a 	mov	r16,zero
1010b668:	003f4d06 	br	1010b3a0 <__alt_data_end+0xfffeb3a0>
1010b66c:	008007c4 	movi	r2,31
1010b670:	11003c16 	blt	r2,r4,1010b764 <__adddf3+0x5e4>
1010b674:	00800804 	movi	r2,32
1010b678:	1105c83a 	sub	r2,r2,r4
1010b67c:	488e983a 	sll	r7,r9,r2
1010b680:	310ad83a 	srl	r5,r6,r4
1010b684:	3084983a 	sll	r2,r6,r2
1010b688:	4912d83a 	srl	r9,r9,r4
1010b68c:	394ab03a 	or	r5,r7,r5
1010b690:	1004c03a 	cmpne	r2,r2,zero
1010b694:	288ab03a 	or	r5,r5,r2
1010b698:	003f5306 	br	1010b3e8 <__alt_data_end+0xfffeb3e8>
1010b69c:	4448b03a 	or	r4,r8,r17
1010b6a0:	20003e26 	beq	r4,zero,1010b79c <__adddf3+0x61c>
1010b6a4:	00c6303a 	nor	r3,zero,r3
1010b6a8:	18003a1e 	bne	r3,zero,1010b794 <__adddf3+0x614>
1010b6ac:	3463c83a 	sub	r17,r6,r17
1010b6b0:	4a07c83a 	sub	r3,r9,r8
1010b6b4:	344d803a 	cmpltu	r6,r6,r17
1010b6b8:	1991c83a 	sub	r8,r3,r6
1010b6bc:	1021883a 	mov	r16,r2
1010b6c0:	3825883a 	mov	r18,r7
1010b6c4:	003f0a06 	br	1010b2f0 <__alt_data_end+0xfffeb2f0>
1010b6c8:	2023883a 	mov	r17,r4
1010b6cc:	003f0d06 	br	1010b304 <__alt_data_end+0xfffeb304>
1010b6d0:	0081ffc4 	movi	r2,2047
1010b6d4:	80bf3f1e 	bne	r16,r2,1010b3d4 <__alt_data_end+0xfffeb3d4>
1010b6d8:	003ec806 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b6dc:	0005883a 	mov	r2,zero
1010b6e0:	003fb106 	br	1010b5a8 <__alt_data_end+0xfffeb5a8>
1010b6e4:	0007883a 	mov	r3,zero
1010b6e8:	003fbc06 	br	1010b5dc <__alt_data_end+0xfffeb5dc>
1010b6ec:	4444b03a 	or	r2,r8,r17
1010b6f0:	8000871e 	bne	r16,zero,1010b910 <__adddf3+0x790>
1010b6f4:	1000ba26 	beq	r2,zero,1010b9e0 <__adddf3+0x860>
1010b6f8:	4984b03a 	or	r2,r9,r6
1010b6fc:	103ebf26 	beq	r2,zero,1010b1fc <__alt_data_end+0xfffeb1fc>
1010b700:	8985883a 	add	r2,r17,r6
1010b704:	4247883a 	add	r3,r8,r9
1010b708:	1451803a 	cmpltu	r8,r2,r17
1010b70c:	40d1883a 	add	r8,r8,r3
1010b710:	40c0202c 	andhi	r3,r8,128
1010b714:	1023883a 	mov	r17,r2
1010b718:	183f1a26 	beq	r3,zero,1010b384 <__alt_data_end+0xfffeb384>
1010b71c:	00bfe034 	movhi	r2,65408
1010b720:	10bfffc4 	addi	r2,r2,-1
1010b724:	2021883a 	mov	r16,r4
1010b728:	4090703a 	and	r8,r8,r2
1010b72c:	003eb306 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b730:	4444b03a 	or	r2,r8,r17
1010b734:	8000291e 	bne	r16,zero,1010b7dc <__adddf3+0x65c>
1010b738:	10004b1e 	bne	r2,zero,1010b868 <__adddf3+0x6e8>
1010b73c:	4990b03a 	or	r8,r9,r6
1010b740:	40008b26 	beq	r8,zero,1010b970 <__adddf3+0x7f0>
1010b744:	4811883a 	mov	r8,r9
1010b748:	3023883a 	mov	r17,r6
1010b74c:	3825883a 	mov	r18,r7
1010b750:	003eaa06 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b754:	1021883a 	mov	r16,r2
1010b758:	0011883a 	mov	r8,zero
1010b75c:	0005883a 	mov	r2,zero
1010b760:	003f0f06 	br	1010b3a0 <__alt_data_end+0xfffeb3a0>
1010b764:	217ff804 	addi	r5,r4,-32
1010b768:	00800804 	movi	r2,32
1010b76c:	494ad83a 	srl	r5,r9,r5
1010b770:	20807d26 	beq	r4,r2,1010b968 <__adddf3+0x7e8>
1010b774:	00801004 	movi	r2,64
1010b778:	1109c83a 	sub	r4,r2,r4
1010b77c:	4912983a 	sll	r9,r9,r4
1010b780:	498cb03a 	or	r6,r9,r6
1010b784:	300cc03a 	cmpne	r6,r6,zero
1010b788:	298ab03a 	or	r5,r5,r6
1010b78c:	0013883a 	mov	r9,zero
1010b790:	003f1506 	br	1010b3e8 <__alt_data_end+0xfffeb3e8>
1010b794:	0101ffc4 	movi	r4,2047
1010b798:	113f9a1e 	bne	r2,r4,1010b604 <__alt_data_end+0xfffeb604>
1010b79c:	4811883a 	mov	r8,r9
1010b7a0:	3023883a 	mov	r17,r6
1010b7a4:	1021883a 	mov	r16,r2
1010b7a8:	3825883a 	mov	r18,r7
1010b7ac:	003e9306 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b7b0:	8000161e 	bne	r16,zero,1010b80c <__adddf3+0x68c>
1010b7b4:	444ab03a 	or	r5,r8,r17
1010b7b8:	28005126 	beq	r5,zero,1010b900 <__adddf3+0x780>
1010b7bc:	0108303a 	nor	r4,zero,r4
1010b7c0:	20004d1e 	bne	r4,zero,1010b8f8 <__adddf3+0x778>
1010b7c4:	89a3883a 	add	r17,r17,r6
1010b7c8:	4253883a 	add	r9,r8,r9
1010b7cc:	898d803a 	cmpltu	r6,r17,r6
1010b7d0:	3251883a 	add	r8,r6,r9
1010b7d4:	1021883a 	mov	r16,r2
1010b7d8:	003f0806 	br	1010b3fc <__alt_data_end+0xfffeb3fc>
1010b7dc:	1000301e 	bne	r2,zero,1010b8a0 <__adddf3+0x720>
1010b7e0:	4984b03a 	or	r2,r9,r6
1010b7e4:	10007126 	beq	r2,zero,1010b9ac <__adddf3+0x82c>
1010b7e8:	4811883a 	mov	r8,r9
1010b7ec:	3023883a 	mov	r17,r6
1010b7f0:	3825883a 	mov	r18,r7
1010b7f4:	0401ffc4 	movi	r16,2047
1010b7f8:	003e8006 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b7fc:	4462b03a 	or	r17,r8,r17
1010b800:	8822c03a 	cmpne	r17,r17,zero
1010b804:	0007883a 	mov	r3,zero
1010b808:	003f8b06 	br	1010b638 <__alt_data_end+0xfffeb638>
1010b80c:	0141ffc4 	movi	r5,2047
1010b810:	11403b26 	beq	r2,r5,1010b900 <__adddf3+0x780>
1010b814:	0109c83a 	sub	r4,zero,r4
1010b818:	42002034 	orhi	r8,r8,128
1010b81c:	01400e04 	movi	r5,56
1010b820:	29006716 	blt	r5,r4,1010b9c0 <__adddf3+0x840>
1010b824:	014007c4 	movi	r5,31
1010b828:	29007016 	blt	r5,r4,1010b9ec <__adddf3+0x86c>
1010b82c:	01400804 	movi	r5,32
1010b830:	290bc83a 	sub	r5,r5,r4
1010b834:	4154983a 	sll	r10,r8,r5
1010b838:	890ed83a 	srl	r7,r17,r4
1010b83c:	894a983a 	sll	r5,r17,r5
1010b840:	4108d83a 	srl	r4,r8,r4
1010b844:	51e2b03a 	or	r17,r10,r7
1010b848:	280ac03a 	cmpne	r5,r5,zero
1010b84c:	8962b03a 	or	r17,r17,r5
1010b850:	89a3883a 	add	r17,r17,r6
1010b854:	2253883a 	add	r9,r4,r9
1010b858:	898d803a 	cmpltu	r6,r17,r6
1010b85c:	3251883a 	add	r8,r6,r9
1010b860:	1021883a 	mov	r16,r2
1010b864:	003ee506 	br	1010b3fc <__alt_data_end+0xfffeb3fc>
1010b868:	4984b03a 	or	r2,r9,r6
1010b86c:	103e6326 	beq	r2,zero,1010b1fc <__alt_data_end+0xfffeb1fc>
1010b870:	8987c83a 	sub	r3,r17,r6
1010b874:	88c9803a 	cmpltu	r4,r17,r3
1010b878:	4245c83a 	sub	r2,r8,r9
1010b87c:	1105c83a 	sub	r2,r2,r4
1010b880:	1100202c 	andhi	r4,r2,128
1010b884:	203ebb26 	beq	r4,zero,1010b374 <__alt_data_end+0xfffeb374>
1010b888:	3463c83a 	sub	r17,r6,r17
1010b88c:	4a07c83a 	sub	r3,r9,r8
1010b890:	344d803a 	cmpltu	r6,r6,r17
1010b894:	1991c83a 	sub	r8,r3,r6
1010b898:	3825883a 	mov	r18,r7
1010b89c:	003e5706 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b8a0:	4984b03a 	or	r2,r9,r6
1010b8a4:	10002e26 	beq	r2,zero,1010b960 <__adddf3+0x7e0>
1010b8a8:	4004d0fa 	srli	r2,r8,3
1010b8ac:	8822d0fa 	srli	r17,r17,3
1010b8b0:	4010977a 	slli	r8,r8,29
1010b8b4:	10c0022c 	andhi	r3,r2,8
1010b8b8:	4462b03a 	or	r17,r8,r17
1010b8bc:	18000826 	beq	r3,zero,1010b8e0 <__adddf3+0x760>
1010b8c0:	4808d0fa 	srli	r4,r9,3
1010b8c4:	20c0022c 	andhi	r3,r4,8
1010b8c8:	1800051e 	bne	r3,zero,1010b8e0 <__adddf3+0x760>
1010b8cc:	300cd0fa 	srli	r6,r6,3
1010b8d0:	4806977a 	slli	r3,r9,29
1010b8d4:	2005883a 	mov	r2,r4
1010b8d8:	3825883a 	mov	r18,r7
1010b8dc:	19a2b03a 	or	r17,r3,r6
1010b8e0:	8810d77a 	srli	r8,r17,29
1010b8e4:	100490fa 	slli	r2,r2,3
1010b8e8:	882290fa 	slli	r17,r17,3
1010b8ec:	0401ffc4 	movi	r16,2047
1010b8f0:	4090b03a 	or	r8,r8,r2
1010b8f4:	003e4106 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b8f8:	0141ffc4 	movi	r5,2047
1010b8fc:	117fc71e 	bne	r2,r5,1010b81c <__alt_data_end+0xfffeb81c>
1010b900:	4811883a 	mov	r8,r9
1010b904:	3023883a 	mov	r17,r6
1010b908:	1021883a 	mov	r16,r2
1010b90c:	003e3b06 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b910:	10002f26 	beq	r2,zero,1010b9d0 <__adddf3+0x850>
1010b914:	4984b03a 	or	r2,r9,r6
1010b918:	10001126 	beq	r2,zero,1010b960 <__adddf3+0x7e0>
1010b91c:	4004d0fa 	srli	r2,r8,3
1010b920:	8822d0fa 	srli	r17,r17,3
1010b924:	4010977a 	slli	r8,r8,29
1010b928:	10c0022c 	andhi	r3,r2,8
1010b92c:	4462b03a 	or	r17,r8,r17
1010b930:	183feb26 	beq	r3,zero,1010b8e0 <__alt_data_end+0xfffeb8e0>
1010b934:	4808d0fa 	srli	r4,r9,3
1010b938:	20c0022c 	andhi	r3,r4,8
1010b93c:	183fe81e 	bne	r3,zero,1010b8e0 <__alt_data_end+0xfffeb8e0>
1010b940:	300cd0fa 	srli	r6,r6,3
1010b944:	4806977a 	slli	r3,r9,29
1010b948:	2005883a 	mov	r2,r4
1010b94c:	19a2b03a 	or	r17,r3,r6
1010b950:	003fe306 	br	1010b8e0 <__alt_data_end+0xfffeb8e0>
1010b954:	0011883a 	mov	r8,zero
1010b958:	0005883a 	mov	r2,zero
1010b95c:	003e3f06 	br	1010b25c <__alt_data_end+0xfffeb25c>
1010b960:	0401ffc4 	movi	r16,2047
1010b964:	003e2506 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b968:	0013883a 	mov	r9,zero
1010b96c:	003f8406 	br	1010b780 <__alt_data_end+0xfffeb780>
1010b970:	0005883a 	mov	r2,zero
1010b974:	0007883a 	mov	r3,zero
1010b978:	003e8906 	br	1010b3a0 <__alt_data_end+0xfffeb3a0>
1010b97c:	197ff804 	addi	r5,r3,-32
1010b980:	01000804 	movi	r4,32
1010b984:	414ad83a 	srl	r5,r8,r5
1010b988:	19002426 	beq	r3,r4,1010ba1c <__adddf3+0x89c>
1010b98c:	01001004 	movi	r4,64
1010b990:	20c7c83a 	sub	r3,r4,r3
1010b994:	40c6983a 	sll	r3,r8,r3
1010b998:	1c46b03a 	or	r3,r3,r17
1010b99c:	1806c03a 	cmpne	r3,r3,zero
1010b9a0:	28e2b03a 	or	r17,r5,r3
1010b9a4:	0007883a 	mov	r3,zero
1010b9a8:	003f2306 	br	1010b638 <__alt_data_end+0xfffeb638>
1010b9ac:	0007883a 	mov	r3,zero
1010b9b0:	5811883a 	mov	r8,r11
1010b9b4:	00bfffc4 	movi	r2,-1
1010b9b8:	0401ffc4 	movi	r16,2047
1010b9bc:	003e7806 	br	1010b3a0 <__alt_data_end+0xfffeb3a0>
1010b9c0:	4462b03a 	or	r17,r8,r17
1010b9c4:	8822c03a 	cmpne	r17,r17,zero
1010b9c8:	0009883a 	mov	r4,zero
1010b9cc:	003fa006 	br	1010b850 <__alt_data_end+0xfffeb850>
1010b9d0:	4811883a 	mov	r8,r9
1010b9d4:	3023883a 	mov	r17,r6
1010b9d8:	0401ffc4 	movi	r16,2047
1010b9dc:	003e0706 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b9e0:	4811883a 	mov	r8,r9
1010b9e4:	3023883a 	mov	r17,r6
1010b9e8:	003e0406 	br	1010b1fc <__alt_data_end+0xfffeb1fc>
1010b9ec:	21fff804 	addi	r7,r4,-32
1010b9f0:	01400804 	movi	r5,32
1010b9f4:	41ced83a 	srl	r7,r8,r7
1010b9f8:	21400a26 	beq	r4,r5,1010ba24 <__adddf3+0x8a4>
1010b9fc:	01401004 	movi	r5,64
1010ba00:	2909c83a 	sub	r4,r5,r4
1010ba04:	4108983a 	sll	r4,r8,r4
1010ba08:	2448b03a 	or	r4,r4,r17
1010ba0c:	2008c03a 	cmpne	r4,r4,zero
1010ba10:	3922b03a 	or	r17,r7,r4
1010ba14:	0009883a 	mov	r4,zero
1010ba18:	003f8d06 	br	1010b850 <__alt_data_end+0xfffeb850>
1010ba1c:	0007883a 	mov	r3,zero
1010ba20:	003fdd06 	br	1010b998 <__alt_data_end+0xfffeb998>
1010ba24:	0009883a 	mov	r4,zero
1010ba28:	003ff706 	br	1010ba08 <__alt_data_end+0xfffeba08>

1010ba2c <__divdf3>:
1010ba2c:	defff004 	addi	sp,sp,-64
1010ba30:	dc800815 	stw	r18,32(sp)
1010ba34:	2824d53a 	srli	r18,r5,20
1010ba38:	dd800c15 	stw	r22,48(sp)
1010ba3c:	282cd7fa 	srli	r22,r5,31
1010ba40:	dc000615 	stw	r16,24(sp)
1010ba44:	04000434 	movhi	r16,16
1010ba48:	843fffc4 	addi	r16,r16,-1
1010ba4c:	dfc00f15 	stw	ra,60(sp)
1010ba50:	df000e15 	stw	fp,56(sp)
1010ba54:	ddc00d15 	stw	r23,52(sp)
1010ba58:	dd400b15 	stw	r21,44(sp)
1010ba5c:	dd000a15 	stw	r20,40(sp)
1010ba60:	dcc00915 	stw	r19,36(sp)
1010ba64:	dc400715 	stw	r17,28(sp)
1010ba68:	9481ffcc 	andi	r18,r18,2047
1010ba6c:	2c20703a 	and	r16,r5,r16
1010ba70:	b2003fcc 	andi	r8,r22,255
1010ba74:	90006126 	beq	r18,zero,1010bbfc <__divdf3+0x1d0>
1010ba78:	0081ffc4 	movi	r2,2047
1010ba7c:	202b883a 	mov	r21,r4
1010ba80:	90803726 	beq	r18,r2,1010bb60 <__divdf3+0x134>
1010ba84:	80800434 	orhi	r2,r16,16
1010ba88:	100490fa 	slli	r2,r2,3
1010ba8c:	2020d77a 	srli	r16,r4,29
1010ba90:	202a90fa 	slli	r21,r4,3
1010ba94:	94bf0044 	addi	r18,r18,-1023
1010ba98:	80a0b03a 	or	r16,r16,r2
1010ba9c:	0013883a 	mov	r9,zero
1010baa0:	000b883a 	mov	r5,zero
1010baa4:	3806d53a 	srli	r3,r7,20
1010baa8:	382ed7fa 	srli	r23,r7,31
1010baac:	04400434 	movhi	r17,16
1010bab0:	8c7fffc4 	addi	r17,r17,-1
1010bab4:	18c1ffcc 	andi	r3,r3,2047
1010bab8:	3029883a 	mov	r20,r6
1010babc:	3c62703a 	and	r17,r7,r17
1010bac0:	bf003fcc 	andi	fp,r23,255
1010bac4:	18006e26 	beq	r3,zero,1010bc80 <__divdf3+0x254>
1010bac8:	0081ffc4 	movi	r2,2047
1010bacc:	18806626 	beq	r3,r2,1010bc68 <__divdf3+0x23c>
1010bad0:	88800434 	orhi	r2,r17,16
1010bad4:	100490fa 	slli	r2,r2,3
1010bad8:	3022d77a 	srli	r17,r6,29
1010badc:	302890fa 	slli	r20,r6,3
1010bae0:	18ff0044 	addi	r3,r3,-1023
1010bae4:	88a2b03a 	or	r17,r17,r2
1010bae8:	000f883a 	mov	r7,zero
1010baec:	b5e6f03a 	xor	r19,r22,r23
1010baf0:	3a4cb03a 	or	r6,r7,r9
1010baf4:	008003c4 	movi	r2,15
1010baf8:	9809883a 	mov	r4,r19
1010bafc:	90c7c83a 	sub	r3,r18,r3
1010bb00:	9cc03fcc 	andi	r19,r19,255
1010bb04:	11809636 	bltu	r2,r6,1010bd60 <__divdf3+0x334>
1010bb08:	300c90ba 	slli	r6,r6,2
1010bb0c:	00840474 	movhi	r2,4113
1010bb10:	10aec804 	addi	r2,r2,-17632
1010bb14:	308d883a 	add	r6,r6,r2
1010bb18:	30800017 	ldw	r2,0(r6)
1010bb1c:	1000683a 	jmp	r2
1010bb20:	1010bd60 	cmpeqi	zero,r2,17141
1010bb24:	1010bb98 	cmpnei	zero,r2,17134
1010bb28:	1010bd50 	cmplti	zero,r2,17141
1010bb2c:	1010bb8c 	andi	zero,r2,17134
1010bb30:	1010bd50 	cmplti	zero,r2,17141
1010bb34:	1010bd24 	muli	zero,r2,17140
1010bb38:	1010bd50 	cmplti	zero,r2,17141
1010bb3c:	1010bb8c 	andi	zero,r2,17134
1010bb40:	1010bb98 	cmpnei	zero,r2,17134
1010bb44:	1010bb98 	cmpnei	zero,r2,17134
1010bb48:	1010bd24 	muli	zero,r2,17140
1010bb4c:	1010bb8c 	andi	zero,r2,17134
1010bb50:	1010bb7c 	xorhi	zero,r2,17133
1010bb54:	1010bb7c 	xorhi	zero,r2,17133
1010bb58:	1010bb7c 	xorhi	zero,r2,17133
1010bb5c:	1010c0e8 	cmpgeui	zero,r2,17155
1010bb60:	2404b03a 	or	r2,r4,r16
1010bb64:	10006c1e 	bne	r2,zero,1010bd18 <__divdf3+0x2ec>
1010bb68:	02400204 	movi	r9,8
1010bb6c:	0021883a 	mov	r16,zero
1010bb70:	002b883a 	mov	r21,zero
1010bb74:	01400084 	movi	r5,2
1010bb78:	003fca06 	br	1010baa4 <__alt_data_end+0xfffebaa4>
1010bb7c:	8023883a 	mov	r17,r16
1010bb80:	a829883a 	mov	r20,r21
1010bb84:	4039883a 	mov	fp,r8
1010bb88:	280f883a 	mov	r7,r5
1010bb8c:	00800084 	movi	r2,2
1010bb90:	3881601e 	bne	r7,r2,1010c114 <__divdf3+0x6e8>
1010bb94:	e027883a 	mov	r19,fp
1010bb98:	9900004c 	andi	r4,r19,1
1010bb9c:	0081ffc4 	movi	r2,2047
1010bba0:	0021883a 	mov	r16,zero
1010bba4:	002b883a 	mov	r21,zero
1010bba8:	1004953a 	slli	r2,r2,20
1010bbac:	20c03fcc 	andi	r3,r4,255
1010bbb0:	01400434 	movhi	r5,16
1010bbb4:	297fffc4 	addi	r5,r5,-1
1010bbb8:	180697fa 	slli	r3,r3,31
1010bbbc:	8160703a 	and	r16,r16,r5
1010bbc0:	80a0b03a 	or	r16,r16,r2
1010bbc4:	80c6b03a 	or	r3,r16,r3
1010bbc8:	a805883a 	mov	r2,r21
1010bbcc:	dfc00f17 	ldw	ra,60(sp)
1010bbd0:	df000e17 	ldw	fp,56(sp)
1010bbd4:	ddc00d17 	ldw	r23,52(sp)
1010bbd8:	dd800c17 	ldw	r22,48(sp)
1010bbdc:	dd400b17 	ldw	r21,44(sp)
1010bbe0:	dd000a17 	ldw	r20,40(sp)
1010bbe4:	dcc00917 	ldw	r19,36(sp)
1010bbe8:	dc800817 	ldw	r18,32(sp)
1010bbec:	dc400717 	ldw	r17,28(sp)
1010bbf0:	dc000617 	ldw	r16,24(sp)
1010bbf4:	dec01004 	addi	sp,sp,64
1010bbf8:	f800283a 	ret
1010bbfc:	2404b03a 	or	r2,r4,r16
1010bc00:	2023883a 	mov	r17,r4
1010bc04:	10003f26 	beq	r2,zero,1010bd04 <__divdf3+0x2d8>
1010bc08:	80015e26 	beq	r16,zero,1010c184 <__divdf3+0x758>
1010bc0c:	8009883a 	mov	r4,r16
1010bc10:	d9800215 	stw	r6,8(sp)
1010bc14:	d9c00515 	stw	r7,20(sp)
1010bc18:	da000415 	stw	r8,16(sp)
1010bc1c:	010d9c00 	call	1010d9c0 <__clzsi2>
1010bc20:	d9800217 	ldw	r6,8(sp)
1010bc24:	d9c00517 	ldw	r7,20(sp)
1010bc28:	da000417 	ldw	r8,16(sp)
1010bc2c:	113ffd44 	addi	r4,r2,-11
1010bc30:	00c00704 	movi	r3,28
1010bc34:	19014f16 	blt	r3,r4,1010c174 <__divdf3+0x748>
1010bc38:	00c00744 	movi	r3,29
1010bc3c:	157ffe04 	addi	r21,r2,-8
1010bc40:	1907c83a 	sub	r3,r3,r4
1010bc44:	8560983a 	sll	r16,r16,r21
1010bc48:	88c6d83a 	srl	r3,r17,r3
1010bc4c:	8d6a983a 	sll	r21,r17,r21
1010bc50:	1c20b03a 	or	r16,r3,r16
1010bc54:	1080fcc4 	addi	r2,r2,1011
1010bc58:	00a5c83a 	sub	r18,zero,r2
1010bc5c:	0013883a 	mov	r9,zero
1010bc60:	000b883a 	mov	r5,zero
1010bc64:	003f8f06 	br	1010baa4 <__alt_data_end+0xfffebaa4>
1010bc68:	3444b03a 	or	r2,r6,r17
1010bc6c:	1000231e 	bne	r2,zero,1010bcfc <__divdf3+0x2d0>
1010bc70:	0023883a 	mov	r17,zero
1010bc74:	0029883a 	mov	r20,zero
1010bc78:	01c00084 	movi	r7,2
1010bc7c:	003f9b06 	br	1010baec <__alt_data_end+0xfffebaec>
1010bc80:	3444b03a 	or	r2,r6,r17
1010bc84:	10001926 	beq	r2,zero,1010bcec <__divdf3+0x2c0>
1010bc88:	88014b26 	beq	r17,zero,1010c1b8 <__divdf3+0x78c>
1010bc8c:	8809883a 	mov	r4,r17
1010bc90:	d9400115 	stw	r5,4(sp)
1010bc94:	d9800215 	stw	r6,8(sp)
1010bc98:	da000415 	stw	r8,16(sp)
1010bc9c:	da400315 	stw	r9,12(sp)
1010bca0:	010d9c00 	call	1010d9c0 <__clzsi2>
1010bca4:	d9400117 	ldw	r5,4(sp)
1010bca8:	d9800217 	ldw	r6,8(sp)
1010bcac:	da000417 	ldw	r8,16(sp)
1010bcb0:	da400317 	ldw	r9,12(sp)
1010bcb4:	113ffd44 	addi	r4,r2,-11
1010bcb8:	00c00704 	movi	r3,28
1010bcbc:	19013a16 	blt	r3,r4,1010c1a8 <__divdf3+0x77c>
1010bcc0:	00c00744 	movi	r3,29
1010bcc4:	153ffe04 	addi	r20,r2,-8
1010bcc8:	1907c83a 	sub	r3,r3,r4
1010bccc:	8d22983a 	sll	r17,r17,r20
1010bcd0:	30c6d83a 	srl	r3,r6,r3
1010bcd4:	3528983a 	sll	r20,r6,r20
1010bcd8:	1c62b03a 	or	r17,r3,r17
1010bcdc:	1080fcc4 	addi	r2,r2,1011
1010bce0:	0087c83a 	sub	r3,zero,r2
1010bce4:	000f883a 	mov	r7,zero
1010bce8:	003f8006 	br	1010baec <__alt_data_end+0xfffebaec>
1010bcec:	0023883a 	mov	r17,zero
1010bcf0:	0029883a 	mov	r20,zero
1010bcf4:	01c00044 	movi	r7,1
1010bcf8:	003f7c06 	br	1010baec <__alt_data_end+0xfffebaec>
1010bcfc:	01c000c4 	movi	r7,3
1010bd00:	003f7a06 	br	1010baec <__alt_data_end+0xfffebaec>
1010bd04:	02400104 	movi	r9,4
1010bd08:	0021883a 	mov	r16,zero
1010bd0c:	002b883a 	mov	r21,zero
1010bd10:	01400044 	movi	r5,1
1010bd14:	003f6306 	br	1010baa4 <__alt_data_end+0xfffebaa4>
1010bd18:	02400304 	movi	r9,12
1010bd1c:	014000c4 	movi	r5,3
1010bd20:	003f6006 	br	1010baa4 <__alt_data_end+0xfffebaa4>
1010bd24:	04000434 	movhi	r16,16
1010bd28:	0009883a 	mov	r4,zero
1010bd2c:	843fffc4 	addi	r16,r16,-1
1010bd30:	057fffc4 	movi	r21,-1
1010bd34:	0081ffc4 	movi	r2,2047
1010bd38:	003f9b06 	br	1010bba8 <__alt_data_end+0xfffebba8>
1010bd3c:	00c00044 	movi	r3,1
1010bd40:	1887c83a 	sub	r3,r3,r2
1010bd44:	01000e04 	movi	r4,56
1010bd48:	20c1530e 	bge	r4,r3,1010c298 <__divdf3+0x86c>
1010bd4c:	9900004c 	andi	r4,r19,1
1010bd50:	0005883a 	mov	r2,zero
1010bd54:	0021883a 	mov	r16,zero
1010bd58:	002b883a 	mov	r21,zero
1010bd5c:	003f9206 	br	1010bba8 <__alt_data_end+0xfffebba8>
1010bd60:	8c012e36 	bltu	r17,r16,1010c21c <__divdf3+0x7f0>
1010bd64:	84412c26 	beq	r16,r17,1010c218 <__divdf3+0x7ec>
1010bd68:	a82f883a 	mov	r23,r21
1010bd6c:	18ffffc4 	addi	r3,r3,-1
1010bd70:	002b883a 	mov	r21,zero
1010bd74:	a004d63a 	srli	r2,r20,24
1010bd78:	8822923a 	slli	r17,r17,8
1010bd7c:	a028923a 	slli	r20,r20,8
1010bd80:	8009883a 	mov	r4,r16
1010bd84:	88acb03a 	or	r22,r17,r2
1010bd88:	dd000015 	stw	r20,0(sp)
1010bd8c:	b028d43a 	srli	r20,r22,16
1010bd90:	d8c00215 	stw	r3,8(sp)
1010bd94:	b4bfffcc 	andi	r18,r22,65535
1010bd98:	a00b883a 	mov	r5,r20
1010bd9c:	0100bdc0 	call	10100bdc <__udivsi3>
1010bda0:	100b883a 	mov	r5,r2
1010bda4:	9009883a 	mov	r4,r18
1010bda8:	1023883a 	mov	r17,r2
1010bdac:	0100c980 	call	10100c98 <__mulsi3>
1010bdb0:	8009883a 	mov	r4,r16
1010bdb4:	a00b883a 	mov	r5,r20
1010bdb8:	1039883a 	mov	fp,r2
1010bdbc:	0100c400 	call	10100c40 <__umodsi3>
1010bdc0:	1004943a 	slli	r2,r2,16
1010bdc4:	b808d43a 	srli	r4,r23,16
1010bdc8:	d8c00217 	ldw	r3,8(sp)
1010bdcc:	2084b03a 	or	r2,r4,r2
1010bdd0:	1700062e 	bgeu	r2,fp,1010bdec <__divdf3+0x3c0>
1010bdd4:	1585883a 	add	r2,r2,r22
1010bdd8:	893fffc4 	addi	r4,r17,-1
1010bddc:	15811d36 	bltu	r2,r22,1010c254 <__divdf3+0x828>
1010bde0:	17011c2e 	bgeu	r2,fp,1010c254 <__divdf3+0x828>
1010bde4:	8c7fff84 	addi	r17,r17,-2
1010bde8:	1585883a 	add	r2,r2,r22
1010bdec:	1739c83a 	sub	fp,r2,fp
1010bdf0:	a00b883a 	mov	r5,r20
1010bdf4:	e009883a 	mov	r4,fp
1010bdf8:	d8c00215 	stw	r3,8(sp)
1010bdfc:	0100bdc0 	call	10100bdc <__udivsi3>
1010be00:	100b883a 	mov	r5,r2
1010be04:	9009883a 	mov	r4,r18
1010be08:	1021883a 	mov	r16,r2
1010be0c:	0100c980 	call	10100c98 <__mulsi3>
1010be10:	a00b883a 	mov	r5,r20
1010be14:	e009883a 	mov	r4,fp
1010be18:	d8800415 	stw	r2,16(sp)
1010be1c:	0100c400 	call	10100c40 <__umodsi3>
1010be20:	1004943a 	slli	r2,r2,16
1010be24:	da000417 	ldw	r8,16(sp)
1010be28:	bdffffcc 	andi	r23,r23,65535
1010be2c:	b884b03a 	or	r2,r23,r2
1010be30:	d8c00217 	ldw	r3,8(sp)
1010be34:	1200062e 	bgeu	r2,r8,1010be50 <__divdf3+0x424>
1010be38:	1585883a 	add	r2,r2,r22
1010be3c:	813fffc4 	addi	r4,r16,-1
1010be40:	15810236 	bltu	r2,r22,1010c24c <__divdf3+0x820>
1010be44:	1201012e 	bgeu	r2,r8,1010c24c <__divdf3+0x820>
1010be48:	843fff84 	addi	r16,r16,-2
1010be4c:	1585883a 	add	r2,r2,r22
1010be50:	8822943a 	slli	r17,r17,16
1010be54:	d9800017 	ldw	r6,0(sp)
1010be58:	1211c83a 	sub	r8,r2,r8
1010be5c:	8c22b03a 	or	r17,r17,r16
1010be60:	373fffcc 	andi	fp,r6,65535
1010be64:	8abfffcc 	andi	r10,r17,65535
1010be68:	8820d43a 	srli	r16,r17,16
1010be6c:	5009883a 	mov	r4,r10
1010be70:	e00b883a 	mov	r5,fp
1010be74:	302ed43a 	srli	r23,r6,16
1010be78:	d8c00215 	stw	r3,8(sp)
1010be7c:	da000415 	stw	r8,16(sp)
1010be80:	da800115 	stw	r10,4(sp)
1010be84:	0100c980 	call	10100c98 <__mulsi3>
1010be88:	800b883a 	mov	r5,r16
1010be8c:	e009883a 	mov	r4,fp
1010be90:	d8800515 	stw	r2,20(sp)
1010be94:	0100c980 	call	10100c98 <__mulsi3>
1010be98:	8009883a 	mov	r4,r16
1010be9c:	b80b883a 	mov	r5,r23
1010bea0:	d8800315 	stw	r2,12(sp)
1010bea4:	0100c980 	call	10100c98 <__mulsi3>
1010bea8:	da800117 	ldw	r10,4(sp)
1010beac:	b80b883a 	mov	r5,r23
1010beb0:	1021883a 	mov	r16,r2
1010beb4:	5009883a 	mov	r4,r10
1010beb8:	0100c980 	call	10100c98 <__mulsi3>
1010bebc:	d9c00517 	ldw	r7,20(sp)
1010bec0:	da400317 	ldw	r9,12(sp)
1010bec4:	d8c00217 	ldw	r3,8(sp)
1010bec8:	3808d43a 	srli	r4,r7,16
1010becc:	1245883a 	add	r2,r2,r9
1010bed0:	da000417 	ldw	r8,16(sp)
1010bed4:	2085883a 	add	r2,r4,r2
1010bed8:	1240022e 	bgeu	r2,r9,1010bee4 <__divdf3+0x4b8>
1010bedc:	01000074 	movhi	r4,1
1010bee0:	8121883a 	add	r16,r16,r4
1010bee4:	1008d43a 	srli	r4,r2,16
1010bee8:	1004943a 	slli	r2,r2,16
1010beec:	39ffffcc 	andi	r7,r7,65535
1010bef0:	2409883a 	add	r4,r4,r16
1010bef4:	11c5883a 	add	r2,r2,r7
1010bef8:	4100bb36 	bltu	r8,r4,1010c1e8 <__divdf3+0x7bc>
1010befc:	4100d726 	beq	r8,r4,1010c25c <__divdf3+0x830>
1010bf00:	4109c83a 	sub	r4,r8,r4
1010bf04:	a8a1c83a 	sub	r16,r21,r2
1010bf08:	ac2b803a 	cmpltu	r21,r21,r16
1010bf0c:	256bc83a 	sub	r21,r4,r21
1010bf10:	b540d926 	beq	r22,r21,1010c278 <__divdf3+0x84c>
1010bf14:	a00b883a 	mov	r5,r20
1010bf18:	a809883a 	mov	r4,r21
1010bf1c:	d8c00215 	stw	r3,8(sp)
1010bf20:	0100bdc0 	call	10100bdc <__udivsi3>
1010bf24:	100b883a 	mov	r5,r2
1010bf28:	9009883a 	mov	r4,r18
1010bf2c:	d8800515 	stw	r2,20(sp)
1010bf30:	0100c980 	call	10100c98 <__mulsi3>
1010bf34:	a809883a 	mov	r4,r21
1010bf38:	a00b883a 	mov	r5,r20
1010bf3c:	d8800415 	stw	r2,16(sp)
1010bf40:	0100c400 	call	10100c40 <__umodsi3>
1010bf44:	1004943a 	slli	r2,r2,16
1010bf48:	8008d43a 	srli	r4,r16,16
1010bf4c:	da000417 	ldw	r8,16(sp)
1010bf50:	d8c00217 	ldw	r3,8(sp)
1010bf54:	2084b03a 	or	r2,r4,r2
1010bf58:	d9c00517 	ldw	r7,20(sp)
1010bf5c:	1200062e 	bgeu	r2,r8,1010bf78 <__divdf3+0x54c>
1010bf60:	1585883a 	add	r2,r2,r22
1010bf64:	393fffc4 	addi	r4,r7,-1
1010bf68:	1580c536 	bltu	r2,r22,1010c280 <__divdf3+0x854>
1010bf6c:	1200c42e 	bgeu	r2,r8,1010c280 <__divdf3+0x854>
1010bf70:	39ffff84 	addi	r7,r7,-2
1010bf74:	1585883a 	add	r2,r2,r22
1010bf78:	122bc83a 	sub	r21,r2,r8
1010bf7c:	a00b883a 	mov	r5,r20
1010bf80:	a809883a 	mov	r4,r21
1010bf84:	d8c00215 	stw	r3,8(sp)
1010bf88:	d9c00515 	stw	r7,20(sp)
1010bf8c:	0100bdc0 	call	10100bdc <__udivsi3>
1010bf90:	9009883a 	mov	r4,r18
1010bf94:	100b883a 	mov	r5,r2
1010bf98:	d8800415 	stw	r2,16(sp)
1010bf9c:	0100c980 	call	10100c98 <__mulsi3>
1010bfa0:	a809883a 	mov	r4,r21
1010bfa4:	a00b883a 	mov	r5,r20
1010bfa8:	1025883a 	mov	r18,r2
1010bfac:	0100c400 	call	10100c40 <__umodsi3>
1010bfb0:	1004943a 	slli	r2,r2,16
1010bfb4:	813fffcc 	andi	r4,r16,65535
1010bfb8:	d8c00217 	ldw	r3,8(sp)
1010bfbc:	20a0b03a 	or	r16,r4,r2
1010bfc0:	d9c00517 	ldw	r7,20(sp)
1010bfc4:	da000417 	ldw	r8,16(sp)
1010bfc8:	8480062e 	bgeu	r16,r18,1010bfe4 <__divdf3+0x5b8>
1010bfcc:	85a1883a 	add	r16,r16,r22
1010bfd0:	40bfffc4 	addi	r2,r8,-1
1010bfd4:	8580ac36 	bltu	r16,r22,1010c288 <__divdf3+0x85c>
1010bfd8:	8480ab2e 	bgeu	r16,r18,1010c288 <__divdf3+0x85c>
1010bfdc:	423fff84 	addi	r8,r8,-2
1010bfe0:	85a1883a 	add	r16,r16,r22
1010bfe4:	3804943a 	slli	r2,r7,16
1010bfe8:	84a1c83a 	sub	r16,r16,r18
1010bfec:	e009883a 	mov	r4,fp
1010bff0:	1228b03a 	or	r20,r2,r8
1010bff4:	a1ffffcc 	andi	r7,r20,65535
1010bff8:	a024d43a 	srli	r18,r20,16
1010bffc:	380b883a 	mov	r5,r7
1010c000:	d8c00215 	stw	r3,8(sp)
1010c004:	d9c00515 	stw	r7,20(sp)
1010c008:	0100c980 	call	10100c98 <__mulsi3>
1010c00c:	900b883a 	mov	r5,r18
1010c010:	e009883a 	mov	r4,fp
1010c014:	102b883a 	mov	r21,r2
1010c018:	0100c980 	call	10100c98 <__mulsi3>
1010c01c:	900b883a 	mov	r5,r18
1010c020:	b809883a 	mov	r4,r23
1010c024:	1039883a 	mov	fp,r2
1010c028:	0100c980 	call	10100c98 <__mulsi3>
1010c02c:	d9c00517 	ldw	r7,20(sp)
1010c030:	b80b883a 	mov	r5,r23
1010c034:	1025883a 	mov	r18,r2
1010c038:	3809883a 	mov	r4,r7
1010c03c:	0100c980 	call	10100c98 <__mulsi3>
1010c040:	a808d43a 	srli	r4,r21,16
1010c044:	1705883a 	add	r2,r2,fp
1010c048:	d8c00217 	ldw	r3,8(sp)
1010c04c:	2085883a 	add	r2,r4,r2
1010c050:	1700022e 	bgeu	r2,fp,1010c05c <__divdf3+0x630>
1010c054:	01000074 	movhi	r4,1
1010c058:	9125883a 	add	r18,r18,r4
1010c05c:	1008d43a 	srli	r4,r2,16
1010c060:	1004943a 	slli	r2,r2,16
1010c064:	ad7fffcc 	andi	r21,r21,65535
1010c068:	2489883a 	add	r4,r4,r18
1010c06c:	1545883a 	add	r2,r2,r21
1010c070:	81003836 	bltu	r16,r4,1010c154 <__divdf3+0x728>
1010c074:	81003626 	beq	r16,r4,1010c150 <__divdf3+0x724>
1010c078:	a5000054 	ori	r20,r20,1
1010c07c:	1880ffc4 	addi	r2,r3,1023
1010c080:	00bf2e0e 	bge	zero,r2,1010bd3c <__alt_data_end+0xfffebd3c>
1010c084:	a10001cc 	andi	r4,r20,7
1010c088:	20000726 	beq	r4,zero,1010c0a8 <__divdf3+0x67c>
1010c08c:	a10003cc 	andi	r4,r20,15
1010c090:	01400104 	movi	r5,4
1010c094:	21400426 	beq	r4,r5,1010c0a8 <__divdf3+0x67c>
1010c098:	a149883a 	add	r4,r20,r5
1010c09c:	2529803a 	cmpltu	r20,r4,r20
1010c0a0:	8d23883a 	add	r17,r17,r20
1010c0a4:	2029883a 	mov	r20,r4
1010c0a8:	8900402c 	andhi	r4,r17,256
1010c0ac:	20000426 	beq	r4,zero,1010c0c0 <__divdf3+0x694>
1010c0b0:	18810004 	addi	r2,r3,1024
1010c0b4:	00ffc034 	movhi	r3,65280
1010c0b8:	18ffffc4 	addi	r3,r3,-1
1010c0bc:	88e2703a 	and	r17,r17,r3
1010c0c0:	00c1ff84 	movi	r3,2046
1010c0c4:	18beb416 	blt	r3,r2,1010bb98 <__alt_data_end+0xfffebb98>
1010c0c8:	a028d0fa 	srli	r20,r20,3
1010c0cc:	882a977a 	slli	r21,r17,29
1010c0d0:	8820927a 	slli	r16,r17,9
1010c0d4:	1081ffcc 	andi	r2,r2,2047
1010c0d8:	ad2ab03a 	or	r21,r21,r20
1010c0dc:	8020d33a 	srli	r16,r16,12
1010c0e0:	9900004c 	andi	r4,r19,1
1010c0e4:	003eb006 	br	1010bba8 <__alt_data_end+0xfffebba8>
1010c0e8:	8080022c 	andhi	r2,r16,8
1010c0ec:	10001226 	beq	r2,zero,1010c138 <__divdf3+0x70c>
1010c0f0:	8880022c 	andhi	r2,r17,8
1010c0f4:	1000101e 	bne	r2,zero,1010c138 <__divdf3+0x70c>
1010c0f8:	00800434 	movhi	r2,16
1010c0fc:	8c000234 	orhi	r16,r17,8
1010c100:	10bfffc4 	addi	r2,r2,-1
1010c104:	b809883a 	mov	r4,r23
1010c108:	80a0703a 	and	r16,r16,r2
1010c10c:	a02b883a 	mov	r21,r20
1010c110:	003f0806 	br	1010bd34 <__alt_data_end+0xfffebd34>
1010c114:	008000c4 	movi	r2,3
1010c118:	3880b126 	beq	r7,r2,1010c3e0 <__divdf3+0x9b4>
1010c11c:	00800044 	movi	r2,1
1010c120:	38805b1e 	bne	r7,r2,1010c290 <__divdf3+0x864>
1010c124:	e009883a 	mov	r4,fp
1010c128:	0005883a 	mov	r2,zero
1010c12c:	0021883a 	mov	r16,zero
1010c130:	002b883a 	mov	r21,zero
1010c134:	003e9c06 	br	1010bba8 <__alt_data_end+0xfffebba8>
1010c138:	00800434 	movhi	r2,16
1010c13c:	84000234 	orhi	r16,r16,8
1010c140:	10bfffc4 	addi	r2,r2,-1
1010c144:	b009883a 	mov	r4,r22
1010c148:	80a0703a 	and	r16,r16,r2
1010c14c:	003ef906 	br	1010bd34 <__alt_data_end+0xfffebd34>
1010c150:	103fca26 	beq	r2,zero,1010c07c <__alt_data_end+0xfffec07c>
1010c154:	b421883a 	add	r16,r22,r16
1010c158:	a17fffc4 	addi	r5,r20,-1
1010c15c:	8580422e 	bgeu	r16,r22,1010c268 <__divdf3+0x83c>
1010c160:	2829883a 	mov	r20,r5
1010c164:	813fc41e 	bne	r16,r4,1010c078 <__alt_data_end+0xfffec078>
1010c168:	d9800017 	ldw	r6,0(sp)
1010c16c:	30bfc21e 	bne	r6,r2,1010c078 <__alt_data_end+0xfffec078>
1010c170:	003fc206 	br	1010c07c <__alt_data_end+0xfffec07c>
1010c174:	143ff604 	addi	r16,r2,-40
1010c178:	8c20983a 	sll	r16,r17,r16
1010c17c:	002b883a 	mov	r21,zero
1010c180:	003eb406 	br	1010bc54 <__alt_data_end+0xfffebc54>
1010c184:	d9800215 	stw	r6,8(sp)
1010c188:	d9c00515 	stw	r7,20(sp)
1010c18c:	da000415 	stw	r8,16(sp)
1010c190:	010d9c00 	call	1010d9c0 <__clzsi2>
1010c194:	10800804 	addi	r2,r2,32
1010c198:	da000417 	ldw	r8,16(sp)
1010c19c:	d9c00517 	ldw	r7,20(sp)
1010c1a0:	d9800217 	ldw	r6,8(sp)
1010c1a4:	003ea106 	br	1010bc2c <__alt_data_end+0xfffebc2c>
1010c1a8:	147ff604 	addi	r17,r2,-40
1010c1ac:	3462983a 	sll	r17,r6,r17
1010c1b0:	0029883a 	mov	r20,zero
1010c1b4:	003ec906 	br	1010bcdc <__alt_data_end+0xfffebcdc>
1010c1b8:	3009883a 	mov	r4,r6
1010c1bc:	d9400115 	stw	r5,4(sp)
1010c1c0:	d9800215 	stw	r6,8(sp)
1010c1c4:	da000415 	stw	r8,16(sp)
1010c1c8:	da400315 	stw	r9,12(sp)
1010c1cc:	010d9c00 	call	1010d9c0 <__clzsi2>
1010c1d0:	10800804 	addi	r2,r2,32
1010c1d4:	da400317 	ldw	r9,12(sp)
1010c1d8:	da000417 	ldw	r8,16(sp)
1010c1dc:	d9800217 	ldw	r6,8(sp)
1010c1e0:	d9400117 	ldw	r5,4(sp)
1010c1e4:	003eb306 	br	1010bcb4 <__alt_data_end+0xfffebcb4>
1010c1e8:	d9800017 	ldw	r6,0(sp)
1010c1ec:	a9ab883a 	add	r21,r21,r6
1010c1f0:	a98b803a 	cmpltu	r5,r21,r6
1010c1f4:	2d8b883a 	add	r5,r5,r22
1010c1f8:	2a11883a 	add	r8,r5,r8
1010c1fc:	897fffc4 	addi	r5,r17,-1
1010c200:	b2000c2e 	bgeu	r22,r8,1010c234 <__divdf3+0x808>
1010c204:	41003f36 	bltu	r8,r4,1010c304 <__divdf3+0x8d8>
1010c208:	22006c26 	beq	r4,r8,1010c3bc <__divdf3+0x990>
1010c20c:	4109c83a 	sub	r4,r8,r4
1010c210:	2823883a 	mov	r17,r5
1010c214:	003f3b06 	br	1010bf04 <__alt_data_end+0xfffebf04>
1010c218:	ad3ed336 	bltu	r21,r20,1010bd68 <__alt_data_end+0xfffebd68>
1010c21c:	a804d07a 	srli	r2,r21,1
1010c220:	802e97fa 	slli	r23,r16,31
1010c224:	a82a97fa 	slli	r21,r21,31
1010c228:	8020d07a 	srli	r16,r16,1
1010c22c:	b8aeb03a 	or	r23,r23,r2
1010c230:	003ed006 	br	1010bd74 <__alt_data_end+0xfffebd74>
1010c234:	b23ff51e 	bne	r22,r8,1010c20c <__alt_data_end+0xfffec20c>
1010c238:	d9800017 	ldw	r6,0(sp)
1010c23c:	a9bff12e 	bgeu	r21,r6,1010c204 <__alt_data_end+0xfffec204>
1010c240:	b109c83a 	sub	r4,r22,r4
1010c244:	2823883a 	mov	r17,r5
1010c248:	003f2e06 	br	1010bf04 <__alt_data_end+0xfffebf04>
1010c24c:	2021883a 	mov	r16,r4
1010c250:	003eff06 	br	1010be50 <__alt_data_end+0xfffebe50>
1010c254:	2023883a 	mov	r17,r4
1010c258:	003ee406 	br	1010bdec <__alt_data_end+0xfffebdec>
1010c25c:	a8bfe236 	bltu	r21,r2,1010c1e8 <__alt_data_end+0xfffec1e8>
1010c260:	0009883a 	mov	r4,zero
1010c264:	003f2706 	br	1010bf04 <__alt_data_end+0xfffebf04>
1010c268:	81002d36 	bltu	r16,r4,1010c320 <__divdf3+0x8f4>
1010c26c:	24005626 	beq	r4,r16,1010c3c8 <__divdf3+0x99c>
1010c270:	2829883a 	mov	r20,r5
1010c274:	003f8006 	br	1010c078 <__alt_data_end+0xfffec078>
1010c278:	053fffc4 	movi	r20,-1
1010c27c:	003f7f06 	br	1010c07c <__alt_data_end+0xfffec07c>
1010c280:	200f883a 	mov	r7,r4
1010c284:	003f3c06 	br	1010bf78 <__alt_data_end+0xfffebf78>
1010c288:	1011883a 	mov	r8,r2
1010c28c:	003f5506 	br	1010bfe4 <__alt_data_end+0xfffebfe4>
1010c290:	e027883a 	mov	r19,fp
1010c294:	003f7906 	br	1010c07c <__alt_data_end+0xfffec07c>
1010c298:	010007c4 	movi	r4,31
1010c29c:	20c02816 	blt	r4,r3,1010c340 <__divdf3+0x914>
1010c2a0:	00800804 	movi	r2,32
1010c2a4:	10c5c83a 	sub	r2,r2,r3
1010c2a8:	888a983a 	sll	r5,r17,r2
1010c2ac:	a0c8d83a 	srl	r4,r20,r3
1010c2b0:	a084983a 	sll	r2,r20,r2
1010c2b4:	88e2d83a 	srl	r17,r17,r3
1010c2b8:	2906b03a 	or	r3,r5,r4
1010c2bc:	1004c03a 	cmpne	r2,r2,zero
1010c2c0:	1886b03a 	or	r3,r3,r2
1010c2c4:	188001cc 	andi	r2,r3,7
1010c2c8:	10000726 	beq	r2,zero,1010c2e8 <__divdf3+0x8bc>
1010c2cc:	188003cc 	andi	r2,r3,15
1010c2d0:	01000104 	movi	r4,4
1010c2d4:	11000426 	beq	r2,r4,1010c2e8 <__divdf3+0x8bc>
1010c2d8:	1805883a 	mov	r2,r3
1010c2dc:	10c00104 	addi	r3,r2,4
1010c2e0:	1885803a 	cmpltu	r2,r3,r2
1010c2e4:	88a3883a 	add	r17,r17,r2
1010c2e8:	8880202c 	andhi	r2,r17,128
1010c2ec:	10002926 	beq	r2,zero,1010c394 <__divdf3+0x968>
1010c2f0:	9900004c 	andi	r4,r19,1
1010c2f4:	00800044 	movi	r2,1
1010c2f8:	0021883a 	mov	r16,zero
1010c2fc:	002b883a 	mov	r21,zero
1010c300:	003e2906 	br	1010bba8 <__alt_data_end+0xfffebba8>
1010c304:	d9800017 	ldw	r6,0(sp)
1010c308:	8c7fff84 	addi	r17,r17,-2
1010c30c:	a9ab883a 	add	r21,r21,r6
1010c310:	a98b803a 	cmpltu	r5,r21,r6
1010c314:	2d8b883a 	add	r5,r5,r22
1010c318:	2a11883a 	add	r8,r5,r8
1010c31c:	003ef806 	br	1010bf00 <__alt_data_end+0xfffebf00>
1010c320:	d9800017 	ldw	r6,0(sp)
1010c324:	318f883a 	add	r7,r6,r6
1010c328:	398b803a 	cmpltu	r5,r7,r6
1010c32c:	2d8d883a 	add	r6,r5,r22
1010c330:	81a1883a 	add	r16,r16,r6
1010c334:	a17fff84 	addi	r5,r20,-2
1010c338:	d9c00015 	stw	r7,0(sp)
1010c33c:	003f8806 	br	1010c160 <__alt_data_end+0xfffec160>
1010c340:	013ff844 	movi	r4,-31
1010c344:	2085c83a 	sub	r2,r4,r2
1010c348:	8888d83a 	srl	r4,r17,r2
1010c34c:	00800804 	movi	r2,32
1010c350:	18802126 	beq	r3,r2,1010c3d8 <__divdf3+0x9ac>
1010c354:	04001004 	movi	r16,64
1010c358:	80c7c83a 	sub	r3,r16,r3
1010c35c:	88e0983a 	sll	r16,r17,r3
1010c360:	8504b03a 	or	r2,r16,r20
1010c364:	1004c03a 	cmpne	r2,r2,zero
1010c368:	2084b03a 	or	r2,r4,r2
1010c36c:	144001cc 	andi	r17,r2,7
1010c370:	88000d1e 	bne	r17,zero,1010c3a8 <__divdf3+0x97c>
1010c374:	0021883a 	mov	r16,zero
1010c378:	102ad0fa 	srli	r21,r2,3
1010c37c:	9900004c 	andi	r4,r19,1
1010c380:	0005883a 	mov	r2,zero
1010c384:	ac6ab03a 	or	r21,r21,r17
1010c388:	003e0706 	br	1010bba8 <__alt_data_end+0xfffebba8>
1010c38c:	1007883a 	mov	r3,r2
1010c390:	0023883a 	mov	r17,zero
1010c394:	8820927a 	slli	r16,r17,9
1010c398:	1805883a 	mov	r2,r3
1010c39c:	8822977a 	slli	r17,r17,29
1010c3a0:	8020d33a 	srli	r16,r16,12
1010c3a4:	003ff406 	br	1010c378 <__alt_data_end+0xfffec378>
1010c3a8:	10c003cc 	andi	r3,r2,15
1010c3ac:	01000104 	movi	r4,4
1010c3b0:	193ff626 	beq	r3,r4,1010c38c <__alt_data_end+0xfffec38c>
1010c3b4:	0023883a 	mov	r17,zero
1010c3b8:	003fc806 	br	1010c2dc <__alt_data_end+0xfffec2dc>
1010c3bc:	a8bfd136 	bltu	r21,r2,1010c304 <__alt_data_end+0xfffec304>
1010c3c0:	2823883a 	mov	r17,r5
1010c3c4:	003fa606 	br	1010c260 <__alt_data_end+0xfffec260>
1010c3c8:	d9800017 	ldw	r6,0(sp)
1010c3cc:	30bfd436 	bltu	r6,r2,1010c320 <__alt_data_end+0xfffec320>
1010c3d0:	2829883a 	mov	r20,r5
1010c3d4:	003f6406 	br	1010c168 <__alt_data_end+0xfffec168>
1010c3d8:	0021883a 	mov	r16,zero
1010c3dc:	003fe006 	br	1010c360 <__alt_data_end+0xfffec360>
1010c3e0:	00800434 	movhi	r2,16
1010c3e4:	8c000234 	orhi	r16,r17,8
1010c3e8:	10bfffc4 	addi	r2,r2,-1
1010c3ec:	e009883a 	mov	r4,fp
1010c3f0:	80a0703a 	and	r16,r16,r2
1010c3f4:	a02b883a 	mov	r21,r20
1010c3f8:	003e4e06 	br	1010bd34 <__alt_data_end+0xfffebd34>

1010c3fc <__eqdf2>:
1010c3fc:	2804d53a 	srli	r2,r5,20
1010c400:	3806d53a 	srli	r3,r7,20
1010c404:	02000434 	movhi	r8,16
1010c408:	423fffc4 	addi	r8,r8,-1
1010c40c:	1081ffcc 	andi	r2,r2,2047
1010c410:	0281ffc4 	movi	r10,2047
1010c414:	2a12703a 	and	r9,r5,r8
1010c418:	18c1ffcc 	andi	r3,r3,2047
1010c41c:	3a10703a 	and	r8,r7,r8
1010c420:	280ad7fa 	srli	r5,r5,31
1010c424:	380ed7fa 	srli	r7,r7,31
1010c428:	12801026 	beq	r2,r10,1010c46c <__eqdf2+0x70>
1010c42c:	0281ffc4 	movi	r10,2047
1010c430:	1a800a26 	beq	r3,r10,1010c45c <__eqdf2+0x60>
1010c434:	10c00226 	beq	r2,r3,1010c440 <__eqdf2+0x44>
1010c438:	00800044 	movi	r2,1
1010c43c:	f800283a 	ret
1010c440:	4a3ffd1e 	bne	r9,r8,1010c438 <__alt_data_end+0xfffec438>
1010c444:	21bffc1e 	bne	r4,r6,1010c438 <__alt_data_end+0xfffec438>
1010c448:	29c00c26 	beq	r5,r7,1010c47c <__eqdf2+0x80>
1010c44c:	103ffa1e 	bne	r2,zero,1010c438 <__alt_data_end+0xfffec438>
1010c450:	2244b03a 	or	r2,r4,r9
1010c454:	1004c03a 	cmpne	r2,r2,zero
1010c458:	f800283a 	ret
1010c45c:	3214b03a 	or	r10,r6,r8
1010c460:	503ff426 	beq	r10,zero,1010c434 <__alt_data_end+0xfffec434>
1010c464:	00800044 	movi	r2,1
1010c468:	f800283a 	ret
1010c46c:	2254b03a 	or	r10,r4,r9
1010c470:	503fee26 	beq	r10,zero,1010c42c <__alt_data_end+0xfffec42c>
1010c474:	00800044 	movi	r2,1
1010c478:	f800283a 	ret
1010c47c:	0005883a 	mov	r2,zero
1010c480:	f800283a 	ret

1010c484 <__gedf2>:
1010c484:	2804d53a 	srli	r2,r5,20
1010c488:	3806d53a 	srli	r3,r7,20
1010c48c:	02000434 	movhi	r8,16
1010c490:	423fffc4 	addi	r8,r8,-1
1010c494:	1081ffcc 	andi	r2,r2,2047
1010c498:	0241ffc4 	movi	r9,2047
1010c49c:	2a14703a 	and	r10,r5,r8
1010c4a0:	18c1ffcc 	andi	r3,r3,2047
1010c4a4:	3a10703a 	and	r8,r7,r8
1010c4a8:	280ad7fa 	srli	r5,r5,31
1010c4ac:	380ed7fa 	srli	r7,r7,31
1010c4b0:	12401d26 	beq	r2,r9,1010c528 <__gedf2+0xa4>
1010c4b4:	0241ffc4 	movi	r9,2047
1010c4b8:	1a401226 	beq	r3,r9,1010c504 <__gedf2+0x80>
1010c4bc:	1000081e 	bne	r2,zero,1010c4e0 <__gedf2+0x5c>
1010c4c0:	2296b03a 	or	r11,r4,r10
1010c4c4:	5813003a 	cmpeq	r9,r11,zero
1010c4c8:	1800091e 	bne	r3,zero,1010c4f0 <__gedf2+0x6c>
1010c4cc:	3218b03a 	or	r12,r6,r8
1010c4d0:	6000071e 	bne	r12,zero,1010c4f0 <__gedf2+0x6c>
1010c4d4:	0005883a 	mov	r2,zero
1010c4d8:	5800101e 	bne	r11,zero,1010c51c <__gedf2+0x98>
1010c4dc:	f800283a 	ret
1010c4e0:	18000c1e 	bne	r3,zero,1010c514 <__gedf2+0x90>
1010c4e4:	3212b03a 	or	r9,r6,r8
1010c4e8:	48000c26 	beq	r9,zero,1010c51c <__gedf2+0x98>
1010c4ec:	0013883a 	mov	r9,zero
1010c4f0:	39c03fcc 	andi	r7,r7,255
1010c4f4:	48000826 	beq	r9,zero,1010c518 <__gedf2+0x94>
1010c4f8:	38000926 	beq	r7,zero,1010c520 <__gedf2+0x9c>
1010c4fc:	00800044 	movi	r2,1
1010c500:	f800283a 	ret
1010c504:	3212b03a 	or	r9,r6,r8
1010c508:	483fec26 	beq	r9,zero,1010c4bc <__alt_data_end+0xfffec4bc>
1010c50c:	00bfff84 	movi	r2,-2
1010c510:	f800283a 	ret
1010c514:	39c03fcc 	andi	r7,r7,255
1010c518:	29c00626 	beq	r5,r7,1010c534 <__gedf2+0xb0>
1010c51c:	283ff726 	beq	r5,zero,1010c4fc <__alt_data_end+0xfffec4fc>
1010c520:	00bfffc4 	movi	r2,-1
1010c524:	f800283a 	ret
1010c528:	2292b03a 	or	r9,r4,r10
1010c52c:	483fe126 	beq	r9,zero,1010c4b4 <__alt_data_end+0xfffec4b4>
1010c530:	003ff606 	br	1010c50c <__alt_data_end+0xfffec50c>
1010c534:	18bff916 	blt	r3,r2,1010c51c <__alt_data_end+0xfffec51c>
1010c538:	10c00316 	blt	r2,r3,1010c548 <__gedf2+0xc4>
1010c53c:	42bff736 	bltu	r8,r10,1010c51c <__alt_data_end+0xfffec51c>
1010c540:	52000326 	beq	r10,r8,1010c550 <__gedf2+0xcc>
1010c544:	5200042e 	bgeu	r10,r8,1010c558 <__gedf2+0xd4>
1010c548:	283fec1e 	bne	r5,zero,1010c4fc <__alt_data_end+0xfffec4fc>
1010c54c:	003ff406 	br	1010c520 <__alt_data_end+0xfffec520>
1010c550:	313ff236 	bltu	r6,r4,1010c51c <__alt_data_end+0xfffec51c>
1010c554:	21bffc36 	bltu	r4,r6,1010c548 <__alt_data_end+0xfffec548>
1010c558:	0005883a 	mov	r2,zero
1010c55c:	f800283a 	ret

1010c560 <__ledf2>:
1010c560:	2804d53a 	srli	r2,r5,20
1010c564:	3810d53a 	srli	r8,r7,20
1010c568:	00c00434 	movhi	r3,16
1010c56c:	18ffffc4 	addi	r3,r3,-1
1010c570:	1081ffcc 	andi	r2,r2,2047
1010c574:	0241ffc4 	movi	r9,2047
1010c578:	28d4703a 	and	r10,r5,r3
1010c57c:	4201ffcc 	andi	r8,r8,2047
1010c580:	38c6703a 	and	r3,r7,r3
1010c584:	280ad7fa 	srli	r5,r5,31
1010c588:	380ed7fa 	srli	r7,r7,31
1010c58c:	12401f26 	beq	r2,r9,1010c60c <__ledf2+0xac>
1010c590:	0241ffc4 	movi	r9,2047
1010c594:	42401426 	beq	r8,r9,1010c5e8 <__ledf2+0x88>
1010c598:	1000091e 	bne	r2,zero,1010c5c0 <__ledf2+0x60>
1010c59c:	2296b03a 	or	r11,r4,r10
1010c5a0:	5813003a 	cmpeq	r9,r11,zero
1010c5a4:	29403fcc 	andi	r5,r5,255
1010c5a8:	40000a1e 	bne	r8,zero,1010c5d4 <__ledf2+0x74>
1010c5ac:	30d8b03a 	or	r12,r6,r3
1010c5b0:	6000081e 	bne	r12,zero,1010c5d4 <__ledf2+0x74>
1010c5b4:	0005883a 	mov	r2,zero
1010c5b8:	5800111e 	bne	r11,zero,1010c600 <__ledf2+0xa0>
1010c5bc:	f800283a 	ret
1010c5c0:	29403fcc 	andi	r5,r5,255
1010c5c4:	40000c1e 	bne	r8,zero,1010c5f8 <__ledf2+0x98>
1010c5c8:	30d2b03a 	or	r9,r6,r3
1010c5cc:	48000c26 	beq	r9,zero,1010c600 <__ledf2+0xa0>
1010c5d0:	0013883a 	mov	r9,zero
1010c5d4:	39c03fcc 	andi	r7,r7,255
1010c5d8:	48000826 	beq	r9,zero,1010c5fc <__ledf2+0x9c>
1010c5dc:	38001126 	beq	r7,zero,1010c624 <__ledf2+0xc4>
1010c5e0:	00800044 	movi	r2,1
1010c5e4:	f800283a 	ret
1010c5e8:	30d2b03a 	or	r9,r6,r3
1010c5ec:	483fea26 	beq	r9,zero,1010c598 <__alt_data_end+0xfffec598>
1010c5f0:	00800084 	movi	r2,2
1010c5f4:	f800283a 	ret
1010c5f8:	39c03fcc 	andi	r7,r7,255
1010c5fc:	39400726 	beq	r7,r5,1010c61c <__ledf2+0xbc>
1010c600:	2800081e 	bne	r5,zero,1010c624 <__ledf2+0xc4>
1010c604:	00800044 	movi	r2,1
1010c608:	f800283a 	ret
1010c60c:	2292b03a 	or	r9,r4,r10
1010c610:	483fdf26 	beq	r9,zero,1010c590 <__alt_data_end+0xfffec590>
1010c614:	00800084 	movi	r2,2
1010c618:	f800283a 	ret
1010c61c:	4080030e 	bge	r8,r2,1010c62c <__ledf2+0xcc>
1010c620:	383fef26 	beq	r7,zero,1010c5e0 <__alt_data_end+0xfffec5e0>
1010c624:	00bfffc4 	movi	r2,-1
1010c628:	f800283a 	ret
1010c62c:	123feb16 	blt	r2,r8,1010c5dc <__alt_data_end+0xfffec5dc>
1010c630:	1abff336 	bltu	r3,r10,1010c600 <__alt_data_end+0xfffec600>
1010c634:	50c00326 	beq	r10,r3,1010c644 <__ledf2+0xe4>
1010c638:	50c0042e 	bgeu	r10,r3,1010c64c <__ledf2+0xec>
1010c63c:	283fe81e 	bne	r5,zero,1010c5e0 <__alt_data_end+0xfffec5e0>
1010c640:	003ff806 	br	1010c624 <__alt_data_end+0xfffec624>
1010c644:	313fee36 	bltu	r6,r4,1010c600 <__alt_data_end+0xfffec600>
1010c648:	21bffc36 	bltu	r4,r6,1010c63c <__alt_data_end+0xfffec63c>
1010c64c:	0005883a 	mov	r2,zero
1010c650:	f800283a 	ret

1010c654 <__muldf3>:
1010c654:	deffee04 	addi	sp,sp,-72
1010c658:	dd000c15 	stw	r20,48(sp)
1010c65c:	2828d53a 	srli	r20,r5,20
1010c660:	ddc00f15 	stw	r23,60(sp)
1010c664:	282ed7fa 	srli	r23,r5,31
1010c668:	dc000815 	stw	r16,32(sp)
1010c66c:	04000434 	movhi	r16,16
1010c670:	dcc00b15 	stw	r19,44(sp)
1010c674:	843fffc4 	addi	r16,r16,-1
1010c678:	dfc01115 	stw	ra,68(sp)
1010c67c:	df001015 	stw	fp,64(sp)
1010c680:	dd800e15 	stw	r22,56(sp)
1010c684:	dd400d15 	stw	r21,52(sp)
1010c688:	dc800a15 	stw	r18,40(sp)
1010c68c:	dc400915 	stw	r17,36(sp)
1010c690:	a501ffcc 	andi	r20,r20,2047
1010c694:	2c20703a 	and	r16,r5,r16
1010c698:	b827883a 	mov	r19,r23
1010c69c:	ba403fcc 	andi	r9,r23,255
1010c6a0:	a0006026 	beq	r20,zero,1010c824 <__muldf3+0x1d0>
1010c6a4:	0081ffc4 	movi	r2,2047
1010c6a8:	202d883a 	mov	r22,r4
1010c6ac:	a0803626 	beq	r20,r2,1010c788 <__muldf3+0x134>
1010c6b0:	84000434 	orhi	r16,r16,16
1010c6b4:	200ad77a 	srli	r5,r4,29
1010c6b8:	800490fa 	slli	r2,r16,3
1010c6bc:	202c90fa 	slli	r22,r4,3
1010c6c0:	a53f0044 	addi	r20,r20,-1023
1010c6c4:	28a0b03a 	or	r16,r5,r2
1010c6c8:	002b883a 	mov	r21,zero
1010c6cc:	000b883a 	mov	r5,zero
1010c6d0:	3804d53a 	srli	r2,r7,20
1010c6d4:	3838d7fa 	srli	fp,r7,31
1010c6d8:	04400434 	movhi	r17,16
1010c6dc:	8c7fffc4 	addi	r17,r17,-1
1010c6e0:	1081ffcc 	andi	r2,r2,2047
1010c6e4:	3025883a 	mov	r18,r6
1010c6e8:	3c62703a 	and	r17,r7,r17
1010c6ec:	e2803fcc 	andi	r10,fp,255
1010c6f0:	10006d26 	beq	r2,zero,1010c8a8 <__muldf3+0x254>
1010c6f4:	00c1ffc4 	movi	r3,2047
1010c6f8:	10c06526 	beq	r2,r3,1010c890 <__muldf3+0x23c>
1010c6fc:	8c400434 	orhi	r17,r17,16
1010c700:	300ed77a 	srli	r7,r6,29
1010c704:	880690fa 	slli	r3,r17,3
1010c708:	302490fa 	slli	r18,r6,3
1010c70c:	10bf0044 	addi	r2,r2,-1023
1010c710:	38e2b03a 	or	r17,r7,r3
1010c714:	000f883a 	mov	r7,zero
1010c718:	a087883a 	add	r3,r20,r2
1010c71c:	010003c4 	movi	r4,15
1010c720:	3d44b03a 	or	r2,r7,r21
1010c724:	e5ccf03a 	xor	r6,fp,r23
1010c728:	1a000044 	addi	r8,r3,1
1010c72c:	20809b36 	bltu	r4,r2,1010c99c <__muldf3+0x348>
1010c730:	100490ba 	slli	r2,r2,2
1010c734:	01040474 	movhi	r4,4113
1010c738:	2131d204 	addi	r4,r4,-14520
1010c73c:	1105883a 	add	r2,r2,r4
1010c740:	10800017 	ldw	r2,0(r2)
1010c744:	1000683a 	jmp	r2
1010c748:	1010c99c 	xori	zero,r2,17190
1010c74c:	1010c7a8 	cmpgeui	zero,r2,17182
1010c750:	1010c7a8 	cmpgeui	zero,r2,17182
1010c754:	1010c7a4 	muli	zero,r2,17182
1010c758:	1010c978 	rdprs	zero,r2,17189
1010c75c:	1010c978 	rdprs	zero,r2,17189
1010c760:	1010c960 	cmpeqi	zero,r2,17189
1010c764:	1010c7a4 	muli	zero,r2,17182
1010c768:	1010c978 	rdprs	zero,r2,17189
1010c76c:	1010c960 	cmpeqi	zero,r2,17189
1010c770:	1010c978 	rdprs	zero,r2,17189
1010c774:	1010c7a4 	muli	zero,r2,17182
1010c778:	1010c988 	cmpgei	zero,r2,17190
1010c77c:	1010c988 	cmpgei	zero,r2,17190
1010c780:	1010c988 	cmpgei	zero,r2,17190
1010c784:	1010cce8 	cmpgeui	zero,r2,17203
1010c788:	2404b03a 	or	r2,r4,r16
1010c78c:	1000711e 	bne	r2,zero,1010c954 <__muldf3+0x300>
1010c790:	05400204 	movi	r21,8
1010c794:	0021883a 	mov	r16,zero
1010c798:	002d883a 	mov	r22,zero
1010c79c:	01400084 	movi	r5,2
1010c7a0:	003fcb06 	br	1010c6d0 <__alt_data_end+0xfffec6d0>
1010c7a4:	500d883a 	mov	r6,r10
1010c7a8:	00800084 	movi	r2,2
1010c7ac:	38805926 	beq	r7,r2,1010c914 <__muldf3+0x2c0>
1010c7b0:	008000c4 	movi	r2,3
1010c7b4:	3881bb26 	beq	r7,r2,1010cea4 <__muldf3+0x850>
1010c7b8:	00800044 	movi	r2,1
1010c7bc:	3881961e 	bne	r7,r2,1010ce18 <__muldf3+0x7c4>
1010c7c0:	3027883a 	mov	r19,r6
1010c7c4:	0005883a 	mov	r2,zero
1010c7c8:	0021883a 	mov	r16,zero
1010c7cc:	002d883a 	mov	r22,zero
1010c7d0:	1004953a 	slli	r2,r2,20
1010c7d4:	98c03fcc 	andi	r3,r19,255
1010c7d8:	04400434 	movhi	r17,16
1010c7dc:	8c7fffc4 	addi	r17,r17,-1
1010c7e0:	180697fa 	slli	r3,r3,31
1010c7e4:	8460703a 	and	r16,r16,r17
1010c7e8:	80a0b03a 	or	r16,r16,r2
1010c7ec:	80c6b03a 	or	r3,r16,r3
1010c7f0:	b005883a 	mov	r2,r22
1010c7f4:	dfc01117 	ldw	ra,68(sp)
1010c7f8:	df001017 	ldw	fp,64(sp)
1010c7fc:	ddc00f17 	ldw	r23,60(sp)
1010c800:	dd800e17 	ldw	r22,56(sp)
1010c804:	dd400d17 	ldw	r21,52(sp)
1010c808:	dd000c17 	ldw	r20,48(sp)
1010c80c:	dcc00b17 	ldw	r19,44(sp)
1010c810:	dc800a17 	ldw	r18,40(sp)
1010c814:	dc400917 	ldw	r17,36(sp)
1010c818:	dc000817 	ldw	r16,32(sp)
1010c81c:	dec01204 	addi	sp,sp,72
1010c820:	f800283a 	ret
1010c824:	2404b03a 	or	r2,r4,r16
1010c828:	202b883a 	mov	r21,r4
1010c82c:	10004426 	beq	r2,zero,1010c940 <__muldf3+0x2ec>
1010c830:	80015126 	beq	r16,zero,1010cd78 <__muldf3+0x724>
1010c834:	8009883a 	mov	r4,r16
1010c838:	d9800715 	stw	r6,28(sp)
1010c83c:	d9c00215 	stw	r7,8(sp)
1010c840:	da400415 	stw	r9,16(sp)
1010c844:	010d9c00 	call	1010d9c0 <__clzsi2>
1010c848:	d9800717 	ldw	r6,28(sp)
1010c84c:	d9c00217 	ldw	r7,8(sp)
1010c850:	da400417 	ldw	r9,16(sp)
1010c854:	113ffd44 	addi	r4,r2,-11
1010c858:	00c00704 	movi	r3,28
1010c85c:	19014216 	blt	r3,r4,1010cd68 <__muldf3+0x714>
1010c860:	00c00744 	movi	r3,29
1010c864:	15bffe04 	addi	r22,r2,-8
1010c868:	1907c83a 	sub	r3,r3,r4
1010c86c:	85a0983a 	sll	r16,r16,r22
1010c870:	a8c6d83a 	srl	r3,r21,r3
1010c874:	adac983a 	sll	r22,r21,r22
1010c878:	1c20b03a 	or	r16,r3,r16
1010c87c:	1080fcc4 	addi	r2,r2,1011
1010c880:	00a9c83a 	sub	r20,zero,r2
1010c884:	002b883a 	mov	r21,zero
1010c888:	000b883a 	mov	r5,zero
1010c88c:	003f9006 	br	1010c6d0 <__alt_data_end+0xfffec6d0>
1010c890:	3446b03a 	or	r3,r6,r17
1010c894:	1800281e 	bne	r3,zero,1010c938 <__muldf3+0x2e4>
1010c898:	0023883a 	mov	r17,zero
1010c89c:	0025883a 	mov	r18,zero
1010c8a0:	01c00084 	movi	r7,2
1010c8a4:	003f9c06 	br	1010c718 <__alt_data_end+0xfffec718>
1010c8a8:	3446b03a 	or	r3,r6,r17
1010c8ac:	18001e26 	beq	r3,zero,1010c928 <__muldf3+0x2d4>
1010c8b0:	88012126 	beq	r17,zero,1010cd38 <__muldf3+0x6e4>
1010c8b4:	8809883a 	mov	r4,r17
1010c8b8:	d9400215 	stw	r5,8(sp)
1010c8bc:	d9800715 	stw	r6,28(sp)
1010c8c0:	da400415 	stw	r9,16(sp)
1010c8c4:	da800315 	stw	r10,12(sp)
1010c8c8:	010d9c00 	call	1010d9c0 <__clzsi2>
1010c8cc:	d9400217 	ldw	r5,8(sp)
1010c8d0:	d9800717 	ldw	r6,28(sp)
1010c8d4:	da400417 	ldw	r9,16(sp)
1010c8d8:	da800317 	ldw	r10,12(sp)
1010c8dc:	113ffd44 	addi	r4,r2,-11
1010c8e0:	00c00704 	movi	r3,28
1010c8e4:	19011016 	blt	r3,r4,1010cd28 <__muldf3+0x6d4>
1010c8e8:	00c00744 	movi	r3,29
1010c8ec:	14bffe04 	addi	r18,r2,-8
1010c8f0:	1907c83a 	sub	r3,r3,r4
1010c8f4:	8ca2983a 	sll	r17,r17,r18
1010c8f8:	30c6d83a 	srl	r3,r6,r3
1010c8fc:	34a4983a 	sll	r18,r6,r18
1010c900:	1c62b03a 	or	r17,r3,r17
1010c904:	1080fcc4 	addi	r2,r2,1011
1010c908:	0085c83a 	sub	r2,zero,r2
1010c90c:	000f883a 	mov	r7,zero
1010c910:	003f8106 	br	1010c718 <__alt_data_end+0xfffec718>
1010c914:	3027883a 	mov	r19,r6
1010c918:	0081ffc4 	movi	r2,2047
1010c91c:	0021883a 	mov	r16,zero
1010c920:	002d883a 	mov	r22,zero
1010c924:	003faa06 	br	1010c7d0 <__alt_data_end+0xfffec7d0>
1010c928:	0023883a 	mov	r17,zero
1010c92c:	0025883a 	mov	r18,zero
1010c930:	01c00044 	movi	r7,1
1010c934:	003f7806 	br	1010c718 <__alt_data_end+0xfffec718>
1010c938:	01c000c4 	movi	r7,3
1010c93c:	003f7606 	br	1010c718 <__alt_data_end+0xfffec718>
1010c940:	05400104 	movi	r21,4
1010c944:	0021883a 	mov	r16,zero
1010c948:	002d883a 	mov	r22,zero
1010c94c:	01400044 	movi	r5,1
1010c950:	003f5f06 	br	1010c6d0 <__alt_data_end+0xfffec6d0>
1010c954:	05400304 	movi	r21,12
1010c958:	014000c4 	movi	r5,3
1010c95c:	003f5c06 	br	1010c6d0 <__alt_data_end+0xfffec6d0>
1010c960:	04000434 	movhi	r16,16
1010c964:	0027883a 	mov	r19,zero
1010c968:	843fffc4 	addi	r16,r16,-1
1010c96c:	05bfffc4 	movi	r22,-1
1010c970:	0081ffc4 	movi	r2,2047
1010c974:	003f9606 	br	1010c7d0 <__alt_data_end+0xfffec7d0>
1010c978:	8023883a 	mov	r17,r16
1010c97c:	b025883a 	mov	r18,r22
1010c980:	280f883a 	mov	r7,r5
1010c984:	003f8806 	br	1010c7a8 <__alt_data_end+0xfffec7a8>
1010c988:	8023883a 	mov	r17,r16
1010c98c:	b025883a 	mov	r18,r22
1010c990:	480d883a 	mov	r6,r9
1010c994:	280f883a 	mov	r7,r5
1010c998:	003f8306 	br	1010c7a8 <__alt_data_end+0xfffec7a8>
1010c99c:	b026d43a 	srli	r19,r22,16
1010c9a0:	902ed43a 	srli	r23,r18,16
1010c9a4:	b5bfffcc 	andi	r22,r22,65535
1010c9a8:	94bfffcc 	andi	r18,r18,65535
1010c9ac:	b00b883a 	mov	r5,r22
1010c9b0:	9009883a 	mov	r4,r18
1010c9b4:	d8c00515 	stw	r3,20(sp)
1010c9b8:	d9800715 	stw	r6,28(sp)
1010c9bc:	da000615 	stw	r8,24(sp)
1010c9c0:	0100c980 	call	10100c98 <__mulsi3>
1010c9c4:	980b883a 	mov	r5,r19
1010c9c8:	9009883a 	mov	r4,r18
1010c9cc:	1029883a 	mov	r20,r2
1010c9d0:	0100c980 	call	10100c98 <__mulsi3>
1010c9d4:	b80b883a 	mov	r5,r23
1010c9d8:	9809883a 	mov	r4,r19
1010c9dc:	102b883a 	mov	r21,r2
1010c9e0:	0100c980 	call	10100c98 <__mulsi3>
1010c9e4:	b809883a 	mov	r4,r23
1010c9e8:	b00b883a 	mov	r5,r22
1010c9ec:	1039883a 	mov	fp,r2
1010c9f0:	0100c980 	call	10100c98 <__mulsi3>
1010c9f4:	a008d43a 	srli	r4,r20,16
1010c9f8:	1545883a 	add	r2,r2,r21
1010c9fc:	d8c00517 	ldw	r3,20(sp)
1010ca00:	2085883a 	add	r2,r4,r2
1010ca04:	d9800717 	ldw	r6,28(sp)
1010ca08:	da000617 	ldw	r8,24(sp)
1010ca0c:	1540022e 	bgeu	r2,r21,1010ca18 <__muldf3+0x3c4>
1010ca10:	01000074 	movhi	r4,1
1010ca14:	e139883a 	add	fp,fp,r4
1010ca18:	100e943a 	slli	r7,r2,16
1010ca1c:	1004d43a 	srli	r2,r2,16
1010ca20:	882ad43a 	srli	r21,r17,16
1010ca24:	a53fffcc 	andi	r20,r20,65535
1010ca28:	8c7fffcc 	andi	r17,r17,65535
1010ca2c:	3d29883a 	add	r20,r7,r20
1010ca30:	b00b883a 	mov	r5,r22
1010ca34:	8809883a 	mov	r4,r17
1010ca38:	d8c00515 	stw	r3,20(sp)
1010ca3c:	d9800715 	stw	r6,28(sp)
1010ca40:	da000615 	stw	r8,24(sp)
1010ca44:	dd000115 	stw	r20,4(sp)
1010ca48:	d8800015 	stw	r2,0(sp)
1010ca4c:	0100c980 	call	10100c98 <__mulsi3>
1010ca50:	980b883a 	mov	r5,r19
1010ca54:	8809883a 	mov	r4,r17
1010ca58:	d8800215 	stw	r2,8(sp)
1010ca5c:	0100c980 	call	10100c98 <__mulsi3>
1010ca60:	9809883a 	mov	r4,r19
1010ca64:	a80b883a 	mov	r5,r21
1010ca68:	1029883a 	mov	r20,r2
1010ca6c:	0100c980 	call	10100c98 <__mulsi3>
1010ca70:	b00b883a 	mov	r5,r22
1010ca74:	a809883a 	mov	r4,r21
1010ca78:	d8800415 	stw	r2,16(sp)
1010ca7c:	0100c980 	call	10100c98 <__mulsi3>
1010ca80:	d9c00217 	ldw	r7,8(sp)
1010ca84:	1505883a 	add	r2,r2,r20
1010ca88:	d8c00517 	ldw	r3,20(sp)
1010ca8c:	3826d43a 	srli	r19,r7,16
1010ca90:	d9800717 	ldw	r6,28(sp)
1010ca94:	da000617 	ldw	r8,24(sp)
1010ca98:	9885883a 	add	r2,r19,r2
1010ca9c:	da400417 	ldw	r9,16(sp)
1010caa0:	1500022e 	bgeu	r2,r20,1010caac <__muldf3+0x458>
1010caa4:	01000074 	movhi	r4,1
1010caa8:	4913883a 	add	r9,r9,r4
1010caac:	1028d43a 	srli	r20,r2,16
1010cab0:	1004943a 	slli	r2,r2,16
1010cab4:	802cd43a 	srli	r22,r16,16
1010cab8:	843fffcc 	andi	r16,r16,65535
1010cabc:	3cffffcc 	andi	r19,r7,65535
1010cac0:	9009883a 	mov	r4,r18
1010cac4:	800b883a 	mov	r5,r16
1010cac8:	a269883a 	add	r20,r20,r9
1010cacc:	d8c00515 	stw	r3,20(sp)
1010cad0:	d9800715 	stw	r6,28(sp)
1010cad4:	da000615 	stw	r8,24(sp)
1010cad8:	14e7883a 	add	r19,r2,r19
1010cadc:	0100c980 	call	10100c98 <__mulsi3>
1010cae0:	9009883a 	mov	r4,r18
1010cae4:	b00b883a 	mov	r5,r22
1010cae8:	d8800315 	stw	r2,12(sp)
1010caec:	0100c980 	call	10100c98 <__mulsi3>
1010caf0:	b809883a 	mov	r4,r23
1010caf4:	b00b883a 	mov	r5,r22
1010caf8:	d8800215 	stw	r2,8(sp)
1010cafc:	0100c980 	call	10100c98 <__mulsi3>
1010cb00:	b80b883a 	mov	r5,r23
1010cb04:	8009883a 	mov	r4,r16
1010cb08:	d8800415 	stw	r2,16(sp)
1010cb0c:	0100c980 	call	10100c98 <__mulsi3>
1010cb10:	da800317 	ldw	r10,12(sp)
1010cb14:	d9c00217 	ldw	r7,8(sp)
1010cb18:	d9000017 	ldw	r4,0(sp)
1010cb1c:	502ed43a 	srli	r23,r10,16
1010cb20:	11c5883a 	add	r2,r2,r7
1010cb24:	24e5883a 	add	r18,r4,r19
1010cb28:	b885883a 	add	r2,r23,r2
1010cb2c:	d8c00517 	ldw	r3,20(sp)
1010cb30:	d9800717 	ldw	r6,28(sp)
1010cb34:	da000617 	ldw	r8,24(sp)
1010cb38:	da400417 	ldw	r9,16(sp)
1010cb3c:	11c0022e 	bgeu	r2,r7,1010cb48 <__muldf3+0x4f4>
1010cb40:	01000074 	movhi	r4,1
1010cb44:	4913883a 	add	r9,r9,r4
1010cb48:	100ed43a 	srli	r7,r2,16
1010cb4c:	1004943a 	slli	r2,r2,16
1010cb50:	55ffffcc 	andi	r23,r10,65535
1010cb54:	3a53883a 	add	r9,r7,r9
1010cb58:	8809883a 	mov	r4,r17
1010cb5c:	800b883a 	mov	r5,r16
1010cb60:	d8c00515 	stw	r3,20(sp)
1010cb64:	d9800715 	stw	r6,28(sp)
1010cb68:	da000615 	stw	r8,24(sp)
1010cb6c:	da400415 	stw	r9,16(sp)
1010cb70:	15ef883a 	add	r23,r2,r23
1010cb74:	0100c980 	call	10100c98 <__mulsi3>
1010cb78:	8809883a 	mov	r4,r17
1010cb7c:	b00b883a 	mov	r5,r22
1010cb80:	d8800215 	stw	r2,8(sp)
1010cb84:	0100c980 	call	10100c98 <__mulsi3>
1010cb88:	b00b883a 	mov	r5,r22
1010cb8c:	a809883a 	mov	r4,r21
1010cb90:	d8800315 	stw	r2,12(sp)
1010cb94:	0100c980 	call	10100c98 <__mulsi3>
1010cb98:	8009883a 	mov	r4,r16
1010cb9c:	a80b883a 	mov	r5,r21
1010cba0:	1023883a 	mov	r17,r2
1010cba4:	0100c980 	call	10100c98 <__mulsi3>
1010cba8:	d9c00217 	ldw	r7,8(sp)
1010cbac:	da800317 	ldw	r10,12(sp)
1010cbb0:	d8c00517 	ldw	r3,20(sp)
1010cbb4:	3808d43a 	srli	r4,r7,16
1010cbb8:	1285883a 	add	r2,r2,r10
1010cbbc:	d9800717 	ldw	r6,28(sp)
1010cbc0:	2085883a 	add	r2,r4,r2
1010cbc4:	da000617 	ldw	r8,24(sp)
1010cbc8:	da400417 	ldw	r9,16(sp)
1010cbcc:	1280022e 	bgeu	r2,r10,1010cbd8 <__muldf3+0x584>
1010cbd0:	01000074 	movhi	r4,1
1010cbd4:	8923883a 	add	r17,r17,r4
1010cbd8:	1008943a 	slli	r4,r2,16
1010cbdc:	39ffffcc 	andi	r7,r7,65535
1010cbe0:	e4b9883a 	add	fp,fp,r18
1010cbe4:	21cf883a 	add	r7,r4,r7
1010cbe8:	e4e7803a 	cmpltu	r19,fp,r19
1010cbec:	3d0f883a 	add	r7,r7,r20
1010cbf0:	bf39883a 	add	fp,r23,fp
1010cbf4:	99c9883a 	add	r4,r19,r7
1010cbf8:	e5ef803a 	cmpltu	r23,fp,r23
1010cbfc:	490b883a 	add	r5,r9,r4
1010cc00:	1004d43a 	srli	r2,r2,16
1010cc04:	b965883a 	add	r18,r23,r5
1010cc08:	24c9803a 	cmpltu	r4,r4,r19
1010cc0c:	3d29803a 	cmpltu	r20,r7,r20
1010cc10:	a128b03a 	or	r20,r20,r4
1010cc14:	95ef803a 	cmpltu	r23,r18,r23
1010cc18:	2a53803a 	cmpltu	r9,r5,r9
1010cc1c:	a0a9883a 	add	r20,r20,r2
1010cc20:	4deeb03a 	or	r23,r9,r23
1010cc24:	a5ef883a 	add	r23,r20,r23
1010cc28:	bc63883a 	add	r17,r23,r17
1010cc2c:	e004927a 	slli	r2,fp,9
1010cc30:	d9000117 	ldw	r4,4(sp)
1010cc34:	882e927a 	slli	r23,r17,9
1010cc38:	9022d5fa 	srli	r17,r18,23
1010cc3c:	e038d5fa 	srli	fp,fp,23
1010cc40:	1104b03a 	or	r2,r2,r4
1010cc44:	9024927a 	slli	r18,r18,9
1010cc48:	1004c03a 	cmpne	r2,r2,zero
1010cc4c:	bc62b03a 	or	r17,r23,r17
1010cc50:	1738b03a 	or	fp,r2,fp
1010cc54:	8880402c 	andhi	r2,r17,256
1010cc58:	e4a4b03a 	or	r18,fp,r18
1010cc5c:	10000726 	beq	r2,zero,1010cc7c <__muldf3+0x628>
1010cc60:	9006d07a 	srli	r3,r18,1
1010cc64:	880497fa 	slli	r2,r17,31
1010cc68:	9480004c 	andi	r18,r18,1
1010cc6c:	8822d07a 	srli	r17,r17,1
1010cc70:	1ca4b03a 	or	r18,r3,r18
1010cc74:	14a4b03a 	or	r18,r2,r18
1010cc78:	4007883a 	mov	r3,r8
1010cc7c:	1880ffc4 	addi	r2,r3,1023
1010cc80:	0080460e 	bge	zero,r2,1010cd9c <__muldf3+0x748>
1010cc84:	910001cc 	andi	r4,r18,7
1010cc88:	20000726 	beq	r4,zero,1010cca8 <__muldf3+0x654>
1010cc8c:	910003cc 	andi	r4,r18,15
1010cc90:	01400104 	movi	r5,4
1010cc94:	21400426 	beq	r4,r5,1010cca8 <__muldf3+0x654>
1010cc98:	9149883a 	add	r4,r18,r5
1010cc9c:	24a5803a 	cmpltu	r18,r4,r18
1010cca0:	8ca3883a 	add	r17,r17,r18
1010cca4:	2025883a 	mov	r18,r4
1010cca8:	8900402c 	andhi	r4,r17,256
1010ccac:	20000426 	beq	r4,zero,1010ccc0 <__muldf3+0x66c>
1010ccb0:	18810004 	addi	r2,r3,1024
1010ccb4:	00ffc034 	movhi	r3,65280
1010ccb8:	18ffffc4 	addi	r3,r3,-1
1010ccbc:	88e2703a 	and	r17,r17,r3
1010ccc0:	00c1ff84 	movi	r3,2046
1010ccc4:	18bf1316 	blt	r3,r2,1010c914 <__alt_data_end+0xfffec914>
1010ccc8:	882c977a 	slli	r22,r17,29
1010cccc:	9024d0fa 	srli	r18,r18,3
1010ccd0:	8822927a 	slli	r17,r17,9
1010ccd4:	1081ffcc 	andi	r2,r2,2047
1010ccd8:	b4acb03a 	or	r22,r22,r18
1010ccdc:	8820d33a 	srli	r16,r17,12
1010cce0:	3027883a 	mov	r19,r6
1010cce4:	003eba06 	br	1010c7d0 <__alt_data_end+0xfffec7d0>
1010cce8:	8080022c 	andhi	r2,r16,8
1010ccec:	10000926 	beq	r2,zero,1010cd14 <__muldf3+0x6c0>
1010ccf0:	8880022c 	andhi	r2,r17,8
1010ccf4:	1000071e 	bne	r2,zero,1010cd14 <__muldf3+0x6c0>
1010ccf8:	00800434 	movhi	r2,16
1010ccfc:	8c000234 	orhi	r16,r17,8
1010cd00:	10bfffc4 	addi	r2,r2,-1
1010cd04:	e027883a 	mov	r19,fp
1010cd08:	80a0703a 	and	r16,r16,r2
1010cd0c:	902d883a 	mov	r22,r18
1010cd10:	003f1706 	br	1010c970 <__alt_data_end+0xfffec970>
1010cd14:	00800434 	movhi	r2,16
1010cd18:	84000234 	orhi	r16,r16,8
1010cd1c:	10bfffc4 	addi	r2,r2,-1
1010cd20:	80a0703a 	and	r16,r16,r2
1010cd24:	003f1206 	br	1010c970 <__alt_data_end+0xfffec970>
1010cd28:	147ff604 	addi	r17,r2,-40
1010cd2c:	3462983a 	sll	r17,r6,r17
1010cd30:	0025883a 	mov	r18,zero
1010cd34:	003ef306 	br	1010c904 <__alt_data_end+0xfffec904>
1010cd38:	3009883a 	mov	r4,r6
1010cd3c:	d9400215 	stw	r5,8(sp)
1010cd40:	d9800715 	stw	r6,28(sp)
1010cd44:	da400415 	stw	r9,16(sp)
1010cd48:	da800315 	stw	r10,12(sp)
1010cd4c:	010d9c00 	call	1010d9c0 <__clzsi2>
1010cd50:	10800804 	addi	r2,r2,32
1010cd54:	da800317 	ldw	r10,12(sp)
1010cd58:	da400417 	ldw	r9,16(sp)
1010cd5c:	d9800717 	ldw	r6,28(sp)
1010cd60:	d9400217 	ldw	r5,8(sp)
1010cd64:	003edd06 	br	1010c8dc <__alt_data_end+0xfffec8dc>
1010cd68:	143ff604 	addi	r16,r2,-40
1010cd6c:	ac20983a 	sll	r16,r21,r16
1010cd70:	002d883a 	mov	r22,zero
1010cd74:	003ec106 	br	1010c87c <__alt_data_end+0xfffec87c>
1010cd78:	d9800715 	stw	r6,28(sp)
1010cd7c:	d9c00215 	stw	r7,8(sp)
1010cd80:	da400415 	stw	r9,16(sp)
1010cd84:	010d9c00 	call	1010d9c0 <__clzsi2>
1010cd88:	10800804 	addi	r2,r2,32
1010cd8c:	da400417 	ldw	r9,16(sp)
1010cd90:	d9c00217 	ldw	r7,8(sp)
1010cd94:	d9800717 	ldw	r6,28(sp)
1010cd98:	003eae06 	br	1010c854 <__alt_data_end+0xfffec854>
1010cd9c:	00c00044 	movi	r3,1
1010cda0:	1887c83a 	sub	r3,r3,r2
1010cda4:	01000e04 	movi	r4,56
1010cda8:	20fe8516 	blt	r4,r3,1010c7c0 <__alt_data_end+0xfffec7c0>
1010cdac:	010007c4 	movi	r4,31
1010cdb0:	20c01b16 	blt	r4,r3,1010ce20 <__muldf3+0x7cc>
1010cdb4:	00800804 	movi	r2,32
1010cdb8:	10c5c83a 	sub	r2,r2,r3
1010cdbc:	888a983a 	sll	r5,r17,r2
1010cdc0:	90c8d83a 	srl	r4,r18,r3
1010cdc4:	9084983a 	sll	r2,r18,r2
1010cdc8:	88e2d83a 	srl	r17,r17,r3
1010cdcc:	2906b03a 	or	r3,r5,r4
1010cdd0:	1004c03a 	cmpne	r2,r2,zero
1010cdd4:	1886b03a 	or	r3,r3,r2
1010cdd8:	188001cc 	andi	r2,r3,7
1010cddc:	10000726 	beq	r2,zero,1010cdfc <__muldf3+0x7a8>
1010cde0:	188003cc 	andi	r2,r3,15
1010cde4:	01000104 	movi	r4,4
1010cde8:	11000426 	beq	r2,r4,1010cdfc <__muldf3+0x7a8>
1010cdec:	1805883a 	mov	r2,r3
1010cdf0:	10c00104 	addi	r3,r2,4
1010cdf4:	1885803a 	cmpltu	r2,r3,r2
1010cdf8:	88a3883a 	add	r17,r17,r2
1010cdfc:	8880202c 	andhi	r2,r17,128
1010ce00:	10001c26 	beq	r2,zero,1010ce74 <__muldf3+0x820>
1010ce04:	3027883a 	mov	r19,r6
1010ce08:	00800044 	movi	r2,1
1010ce0c:	0021883a 	mov	r16,zero
1010ce10:	002d883a 	mov	r22,zero
1010ce14:	003e6e06 	br	1010c7d0 <__alt_data_end+0xfffec7d0>
1010ce18:	4007883a 	mov	r3,r8
1010ce1c:	003f9706 	br	1010cc7c <__alt_data_end+0xfffecc7c>
1010ce20:	017ff844 	movi	r5,-31
1010ce24:	2885c83a 	sub	r2,r5,r2
1010ce28:	888ad83a 	srl	r5,r17,r2
1010ce2c:	00800804 	movi	r2,32
1010ce30:	18801a26 	beq	r3,r2,1010ce9c <__muldf3+0x848>
1010ce34:	01001004 	movi	r4,64
1010ce38:	20c7c83a 	sub	r3,r4,r3
1010ce3c:	88e2983a 	sll	r17,r17,r3
1010ce40:	8ca4b03a 	or	r18,r17,r18
1010ce44:	9004c03a 	cmpne	r2,r18,zero
1010ce48:	2884b03a 	or	r2,r5,r2
1010ce4c:	144001cc 	andi	r17,r2,7
1010ce50:	88000d1e 	bne	r17,zero,1010ce88 <__muldf3+0x834>
1010ce54:	0021883a 	mov	r16,zero
1010ce58:	102cd0fa 	srli	r22,r2,3
1010ce5c:	3027883a 	mov	r19,r6
1010ce60:	0005883a 	mov	r2,zero
1010ce64:	b46cb03a 	or	r22,r22,r17
1010ce68:	003e5906 	br	1010c7d0 <__alt_data_end+0xfffec7d0>
1010ce6c:	1007883a 	mov	r3,r2
1010ce70:	0023883a 	mov	r17,zero
1010ce74:	8820927a 	slli	r16,r17,9
1010ce78:	1805883a 	mov	r2,r3
1010ce7c:	8822977a 	slli	r17,r17,29
1010ce80:	8020d33a 	srli	r16,r16,12
1010ce84:	003ff406 	br	1010ce58 <__alt_data_end+0xfffece58>
1010ce88:	10c003cc 	andi	r3,r2,15
1010ce8c:	01000104 	movi	r4,4
1010ce90:	193ff626 	beq	r3,r4,1010ce6c <__alt_data_end+0xfffece6c>
1010ce94:	0023883a 	mov	r17,zero
1010ce98:	003fd506 	br	1010cdf0 <__alt_data_end+0xfffecdf0>
1010ce9c:	0023883a 	mov	r17,zero
1010cea0:	003fe706 	br	1010ce40 <__alt_data_end+0xfffece40>
1010cea4:	00800434 	movhi	r2,16
1010cea8:	8c000234 	orhi	r16,r17,8
1010ceac:	10bfffc4 	addi	r2,r2,-1
1010ceb0:	3027883a 	mov	r19,r6
1010ceb4:	80a0703a 	and	r16,r16,r2
1010ceb8:	902d883a 	mov	r22,r18
1010cebc:	003eac06 	br	1010c970 <__alt_data_end+0xfffec970>

1010cec0 <__subdf3>:
1010cec0:	02000434 	movhi	r8,16
1010cec4:	423fffc4 	addi	r8,r8,-1
1010cec8:	defffb04 	addi	sp,sp,-20
1010cecc:	2a14703a 	and	r10,r5,r8
1010ced0:	3812d53a 	srli	r9,r7,20
1010ced4:	3a10703a 	and	r8,r7,r8
1010ced8:	2006d77a 	srli	r3,r4,29
1010cedc:	3004d77a 	srli	r2,r6,29
1010cee0:	dc000015 	stw	r16,0(sp)
1010cee4:	501490fa 	slli	r10,r10,3
1010cee8:	2820d53a 	srli	r16,r5,20
1010ceec:	401090fa 	slli	r8,r8,3
1010cef0:	dc800215 	stw	r18,8(sp)
1010cef4:	dc400115 	stw	r17,4(sp)
1010cef8:	dfc00415 	stw	ra,16(sp)
1010cefc:	202290fa 	slli	r17,r4,3
1010cf00:	dcc00315 	stw	r19,12(sp)
1010cf04:	4a41ffcc 	andi	r9,r9,2047
1010cf08:	0101ffc4 	movi	r4,2047
1010cf0c:	2824d7fa 	srli	r18,r5,31
1010cf10:	8401ffcc 	andi	r16,r16,2047
1010cf14:	50c6b03a 	or	r3,r10,r3
1010cf18:	380ed7fa 	srli	r7,r7,31
1010cf1c:	408ab03a 	or	r5,r8,r2
1010cf20:	300c90fa 	slli	r6,r6,3
1010cf24:	49009626 	beq	r9,r4,1010d180 <__subdf3+0x2c0>
1010cf28:	39c0005c 	xori	r7,r7,1
1010cf2c:	8245c83a 	sub	r2,r16,r9
1010cf30:	3c807426 	beq	r7,r18,1010d104 <__subdf3+0x244>
1010cf34:	0080af0e 	bge	zero,r2,1010d1f4 <__subdf3+0x334>
1010cf38:	48002a1e 	bne	r9,zero,1010cfe4 <__subdf3+0x124>
1010cf3c:	2988b03a 	or	r4,r5,r6
1010cf40:	20009a1e 	bne	r4,zero,1010d1ac <__subdf3+0x2ec>
1010cf44:	888001cc 	andi	r2,r17,7
1010cf48:	10000726 	beq	r2,zero,1010cf68 <__subdf3+0xa8>
1010cf4c:	888003cc 	andi	r2,r17,15
1010cf50:	01000104 	movi	r4,4
1010cf54:	11000426 	beq	r2,r4,1010cf68 <__subdf3+0xa8>
1010cf58:	890b883a 	add	r5,r17,r4
1010cf5c:	2c63803a 	cmpltu	r17,r5,r17
1010cf60:	1c47883a 	add	r3,r3,r17
1010cf64:	2823883a 	mov	r17,r5
1010cf68:	1880202c 	andhi	r2,r3,128
1010cf6c:	10005926 	beq	r2,zero,1010d0d4 <__subdf3+0x214>
1010cf70:	84000044 	addi	r16,r16,1
1010cf74:	0081ffc4 	movi	r2,2047
1010cf78:	8080be26 	beq	r16,r2,1010d274 <__subdf3+0x3b4>
1010cf7c:	017fe034 	movhi	r5,65408
1010cf80:	297fffc4 	addi	r5,r5,-1
1010cf84:	1946703a 	and	r3,r3,r5
1010cf88:	1804977a 	slli	r2,r3,29
1010cf8c:	1806927a 	slli	r3,r3,9
1010cf90:	8822d0fa 	srli	r17,r17,3
1010cf94:	8401ffcc 	andi	r16,r16,2047
1010cf98:	180ad33a 	srli	r5,r3,12
1010cf9c:	9100004c 	andi	r4,r18,1
1010cfa0:	1444b03a 	or	r2,r2,r17
1010cfa4:	80c1ffcc 	andi	r3,r16,2047
1010cfa8:	1820953a 	slli	r16,r3,20
1010cfac:	20c03fcc 	andi	r3,r4,255
1010cfb0:	180897fa 	slli	r4,r3,31
1010cfb4:	00c00434 	movhi	r3,16
1010cfb8:	18ffffc4 	addi	r3,r3,-1
1010cfbc:	28c6703a 	and	r3,r5,r3
1010cfc0:	1c06b03a 	or	r3,r3,r16
1010cfc4:	1906b03a 	or	r3,r3,r4
1010cfc8:	dfc00417 	ldw	ra,16(sp)
1010cfcc:	dcc00317 	ldw	r19,12(sp)
1010cfd0:	dc800217 	ldw	r18,8(sp)
1010cfd4:	dc400117 	ldw	r17,4(sp)
1010cfd8:	dc000017 	ldw	r16,0(sp)
1010cfdc:	dec00504 	addi	sp,sp,20
1010cfe0:	f800283a 	ret
1010cfe4:	0101ffc4 	movi	r4,2047
1010cfe8:	813fd626 	beq	r16,r4,1010cf44 <__alt_data_end+0xfffecf44>
1010cfec:	29402034 	orhi	r5,r5,128
1010cff0:	01000e04 	movi	r4,56
1010cff4:	2080a316 	blt	r4,r2,1010d284 <__subdf3+0x3c4>
1010cff8:	010007c4 	movi	r4,31
1010cffc:	2080c616 	blt	r4,r2,1010d318 <__subdf3+0x458>
1010d000:	01000804 	movi	r4,32
1010d004:	2089c83a 	sub	r4,r4,r2
1010d008:	2910983a 	sll	r8,r5,r4
1010d00c:	308ed83a 	srl	r7,r6,r2
1010d010:	3108983a 	sll	r4,r6,r4
1010d014:	2884d83a 	srl	r2,r5,r2
1010d018:	41ccb03a 	or	r6,r8,r7
1010d01c:	2008c03a 	cmpne	r4,r4,zero
1010d020:	310cb03a 	or	r6,r6,r4
1010d024:	898dc83a 	sub	r6,r17,r6
1010d028:	89a3803a 	cmpltu	r17,r17,r6
1010d02c:	1887c83a 	sub	r3,r3,r2
1010d030:	1c47c83a 	sub	r3,r3,r17
1010d034:	3023883a 	mov	r17,r6
1010d038:	1880202c 	andhi	r2,r3,128
1010d03c:	10002326 	beq	r2,zero,1010d0cc <__subdf3+0x20c>
1010d040:	04c02034 	movhi	r19,128
1010d044:	9cffffc4 	addi	r19,r19,-1
1010d048:	1ce6703a 	and	r19,r3,r19
1010d04c:	98007a26 	beq	r19,zero,1010d238 <__subdf3+0x378>
1010d050:	9809883a 	mov	r4,r19
1010d054:	010d9c00 	call	1010d9c0 <__clzsi2>
1010d058:	113ffe04 	addi	r4,r2,-8
1010d05c:	00c007c4 	movi	r3,31
1010d060:	19007b16 	blt	r3,r4,1010d250 <__subdf3+0x390>
1010d064:	00800804 	movi	r2,32
1010d068:	1105c83a 	sub	r2,r2,r4
1010d06c:	8884d83a 	srl	r2,r17,r2
1010d070:	9906983a 	sll	r3,r19,r4
1010d074:	8922983a 	sll	r17,r17,r4
1010d078:	10c4b03a 	or	r2,r2,r3
1010d07c:	24007816 	blt	r4,r16,1010d260 <__subdf3+0x3a0>
1010d080:	2421c83a 	sub	r16,r4,r16
1010d084:	80c00044 	addi	r3,r16,1
1010d088:	010007c4 	movi	r4,31
1010d08c:	20c09516 	blt	r4,r3,1010d2e4 <__subdf3+0x424>
1010d090:	01400804 	movi	r5,32
1010d094:	28cbc83a 	sub	r5,r5,r3
1010d098:	88c8d83a 	srl	r4,r17,r3
1010d09c:	8962983a 	sll	r17,r17,r5
1010d0a0:	114a983a 	sll	r5,r2,r5
1010d0a4:	10c6d83a 	srl	r3,r2,r3
1010d0a8:	8804c03a 	cmpne	r2,r17,zero
1010d0ac:	290ab03a 	or	r5,r5,r4
1010d0b0:	28a2b03a 	or	r17,r5,r2
1010d0b4:	0021883a 	mov	r16,zero
1010d0b8:	003fa206 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d0bc:	2090b03a 	or	r8,r4,r2
1010d0c0:	40018e26 	beq	r8,zero,1010d6fc <__subdf3+0x83c>
1010d0c4:	1007883a 	mov	r3,r2
1010d0c8:	2023883a 	mov	r17,r4
1010d0cc:	888001cc 	andi	r2,r17,7
1010d0d0:	103f9e1e 	bne	r2,zero,1010cf4c <__alt_data_end+0xfffecf4c>
1010d0d4:	1804977a 	slli	r2,r3,29
1010d0d8:	8822d0fa 	srli	r17,r17,3
1010d0dc:	1810d0fa 	srli	r8,r3,3
1010d0e0:	9100004c 	andi	r4,r18,1
1010d0e4:	1444b03a 	or	r2,r2,r17
1010d0e8:	00c1ffc4 	movi	r3,2047
1010d0ec:	80c02826 	beq	r16,r3,1010d190 <__subdf3+0x2d0>
1010d0f0:	01400434 	movhi	r5,16
1010d0f4:	297fffc4 	addi	r5,r5,-1
1010d0f8:	80e0703a 	and	r16,r16,r3
1010d0fc:	414a703a 	and	r5,r8,r5
1010d100:	003fa806 	br	1010cfa4 <__alt_data_end+0xfffecfa4>
1010d104:	0080630e 	bge	zero,r2,1010d294 <__subdf3+0x3d4>
1010d108:	48003026 	beq	r9,zero,1010d1cc <__subdf3+0x30c>
1010d10c:	0101ffc4 	movi	r4,2047
1010d110:	813f8c26 	beq	r16,r4,1010cf44 <__alt_data_end+0xfffecf44>
1010d114:	29402034 	orhi	r5,r5,128
1010d118:	01000e04 	movi	r4,56
1010d11c:	2080a90e 	bge	r4,r2,1010d3c4 <__subdf3+0x504>
1010d120:	298cb03a 	or	r6,r5,r6
1010d124:	3012c03a 	cmpne	r9,r6,zero
1010d128:	0005883a 	mov	r2,zero
1010d12c:	4c53883a 	add	r9,r9,r17
1010d130:	4c63803a 	cmpltu	r17,r9,r17
1010d134:	10c7883a 	add	r3,r2,r3
1010d138:	88c7883a 	add	r3,r17,r3
1010d13c:	4823883a 	mov	r17,r9
1010d140:	1880202c 	andhi	r2,r3,128
1010d144:	1000d026 	beq	r2,zero,1010d488 <__subdf3+0x5c8>
1010d148:	84000044 	addi	r16,r16,1
1010d14c:	0081ffc4 	movi	r2,2047
1010d150:	8080fe26 	beq	r16,r2,1010d54c <__subdf3+0x68c>
1010d154:	00bfe034 	movhi	r2,65408
1010d158:	10bfffc4 	addi	r2,r2,-1
1010d15c:	1886703a 	and	r3,r3,r2
1010d160:	880ad07a 	srli	r5,r17,1
1010d164:	180497fa 	slli	r2,r3,31
1010d168:	8900004c 	andi	r4,r17,1
1010d16c:	2922b03a 	or	r17,r5,r4
1010d170:	1806d07a 	srli	r3,r3,1
1010d174:	1462b03a 	or	r17,r2,r17
1010d178:	3825883a 	mov	r18,r7
1010d17c:	003f7106 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d180:	2984b03a 	or	r2,r5,r6
1010d184:	103f6826 	beq	r2,zero,1010cf28 <__alt_data_end+0xfffecf28>
1010d188:	39c03fcc 	andi	r7,r7,255
1010d18c:	003f6706 	br	1010cf2c <__alt_data_end+0xfffecf2c>
1010d190:	4086b03a 	or	r3,r8,r2
1010d194:	18015226 	beq	r3,zero,1010d6e0 <__subdf3+0x820>
1010d198:	00c00434 	movhi	r3,16
1010d19c:	41400234 	orhi	r5,r8,8
1010d1a0:	18ffffc4 	addi	r3,r3,-1
1010d1a4:	28ca703a 	and	r5,r5,r3
1010d1a8:	003f7e06 	br	1010cfa4 <__alt_data_end+0xfffecfa4>
1010d1ac:	10bfffc4 	addi	r2,r2,-1
1010d1b0:	1000491e 	bne	r2,zero,1010d2d8 <__subdf3+0x418>
1010d1b4:	898fc83a 	sub	r7,r17,r6
1010d1b8:	89e3803a 	cmpltu	r17,r17,r7
1010d1bc:	1947c83a 	sub	r3,r3,r5
1010d1c0:	1c47c83a 	sub	r3,r3,r17
1010d1c4:	3823883a 	mov	r17,r7
1010d1c8:	003f9b06 	br	1010d038 <__alt_data_end+0xfffed038>
1010d1cc:	2988b03a 	or	r4,r5,r6
1010d1d0:	203f5c26 	beq	r4,zero,1010cf44 <__alt_data_end+0xfffecf44>
1010d1d4:	10bfffc4 	addi	r2,r2,-1
1010d1d8:	1000931e 	bne	r2,zero,1010d428 <__subdf3+0x568>
1010d1dc:	898d883a 	add	r6,r17,r6
1010d1e0:	3463803a 	cmpltu	r17,r6,r17
1010d1e4:	1947883a 	add	r3,r3,r5
1010d1e8:	88c7883a 	add	r3,r17,r3
1010d1ec:	3023883a 	mov	r17,r6
1010d1f0:	003fd306 	br	1010d140 <__alt_data_end+0xfffed140>
1010d1f4:	1000541e 	bne	r2,zero,1010d348 <__subdf3+0x488>
1010d1f8:	80800044 	addi	r2,r16,1
1010d1fc:	1081ffcc 	andi	r2,r2,2047
1010d200:	01000044 	movi	r4,1
1010d204:	2080a20e 	bge	r4,r2,1010d490 <__subdf3+0x5d0>
1010d208:	8989c83a 	sub	r4,r17,r6
1010d20c:	8905803a 	cmpltu	r2,r17,r4
1010d210:	1967c83a 	sub	r19,r3,r5
1010d214:	98a7c83a 	sub	r19,r19,r2
1010d218:	9880202c 	andhi	r2,r19,128
1010d21c:	10006326 	beq	r2,zero,1010d3ac <__subdf3+0x4ec>
1010d220:	3463c83a 	sub	r17,r6,r17
1010d224:	28c7c83a 	sub	r3,r5,r3
1010d228:	344d803a 	cmpltu	r6,r6,r17
1010d22c:	19a7c83a 	sub	r19,r3,r6
1010d230:	3825883a 	mov	r18,r7
1010d234:	983f861e 	bne	r19,zero,1010d050 <__alt_data_end+0xfffed050>
1010d238:	8809883a 	mov	r4,r17
1010d23c:	010d9c00 	call	1010d9c0 <__clzsi2>
1010d240:	10800804 	addi	r2,r2,32
1010d244:	113ffe04 	addi	r4,r2,-8
1010d248:	00c007c4 	movi	r3,31
1010d24c:	193f850e 	bge	r3,r4,1010d064 <__alt_data_end+0xfffed064>
1010d250:	10bff604 	addi	r2,r2,-40
1010d254:	8884983a 	sll	r2,r17,r2
1010d258:	0023883a 	mov	r17,zero
1010d25c:	243f880e 	bge	r4,r16,1010d080 <__alt_data_end+0xfffed080>
1010d260:	00ffe034 	movhi	r3,65408
1010d264:	18ffffc4 	addi	r3,r3,-1
1010d268:	8121c83a 	sub	r16,r16,r4
1010d26c:	10c6703a 	and	r3,r2,r3
1010d270:	003f3406 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d274:	9100004c 	andi	r4,r18,1
1010d278:	000b883a 	mov	r5,zero
1010d27c:	0005883a 	mov	r2,zero
1010d280:	003f4806 	br	1010cfa4 <__alt_data_end+0xfffecfa4>
1010d284:	298cb03a 	or	r6,r5,r6
1010d288:	300cc03a 	cmpne	r6,r6,zero
1010d28c:	0005883a 	mov	r2,zero
1010d290:	003f6406 	br	1010d024 <__alt_data_end+0xfffed024>
1010d294:	10009a1e 	bne	r2,zero,1010d500 <__subdf3+0x640>
1010d298:	82400044 	addi	r9,r16,1
1010d29c:	4881ffcc 	andi	r2,r9,2047
1010d2a0:	02800044 	movi	r10,1
1010d2a4:	5080670e 	bge	r10,r2,1010d444 <__subdf3+0x584>
1010d2a8:	0081ffc4 	movi	r2,2047
1010d2ac:	4880af26 	beq	r9,r2,1010d56c <__subdf3+0x6ac>
1010d2b0:	898d883a 	add	r6,r17,r6
1010d2b4:	1945883a 	add	r2,r3,r5
1010d2b8:	3447803a 	cmpltu	r3,r6,r17
1010d2bc:	1887883a 	add	r3,r3,r2
1010d2c0:	182297fa 	slli	r17,r3,31
1010d2c4:	300cd07a 	srli	r6,r6,1
1010d2c8:	1806d07a 	srli	r3,r3,1
1010d2cc:	4821883a 	mov	r16,r9
1010d2d0:	89a2b03a 	or	r17,r17,r6
1010d2d4:	003f1b06 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d2d8:	0101ffc4 	movi	r4,2047
1010d2dc:	813f441e 	bne	r16,r4,1010cff0 <__alt_data_end+0xfffecff0>
1010d2e0:	003f1806 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d2e4:	843ff844 	addi	r16,r16,-31
1010d2e8:	01400804 	movi	r5,32
1010d2ec:	1408d83a 	srl	r4,r2,r16
1010d2f0:	19405026 	beq	r3,r5,1010d434 <__subdf3+0x574>
1010d2f4:	01401004 	movi	r5,64
1010d2f8:	28c7c83a 	sub	r3,r5,r3
1010d2fc:	10c4983a 	sll	r2,r2,r3
1010d300:	88a2b03a 	or	r17,r17,r2
1010d304:	8822c03a 	cmpne	r17,r17,zero
1010d308:	2462b03a 	or	r17,r4,r17
1010d30c:	0007883a 	mov	r3,zero
1010d310:	0021883a 	mov	r16,zero
1010d314:	003f6d06 	br	1010d0cc <__alt_data_end+0xfffed0cc>
1010d318:	11fff804 	addi	r7,r2,-32
1010d31c:	01000804 	movi	r4,32
1010d320:	29ced83a 	srl	r7,r5,r7
1010d324:	11004526 	beq	r2,r4,1010d43c <__subdf3+0x57c>
1010d328:	01001004 	movi	r4,64
1010d32c:	2089c83a 	sub	r4,r4,r2
1010d330:	2904983a 	sll	r2,r5,r4
1010d334:	118cb03a 	or	r6,r2,r6
1010d338:	300cc03a 	cmpne	r6,r6,zero
1010d33c:	398cb03a 	or	r6,r7,r6
1010d340:	0005883a 	mov	r2,zero
1010d344:	003f3706 	br	1010d024 <__alt_data_end+0xfffed024>
1010d348:	80002a26 	beq	r16,zero,1010d3f4 <__subdf3+0x534>
1010d34c:	0101ffc4 	movi	r4,2047
1010d350:	49006626 	beq	r9,r4,1010d4ec <__subdf3+0x62c>
1010d354:	0085c83a 	sub	r2,zero,r2
1010d358:	18c02034 	orhi	r3,r3,128
1010d35c:	01000e04 	movi	r4,56
1010d360:	20807e16 	blt	r4,r2,1010d55c <__subdf3+0x69c>
1010d364:	010007c4 	movi	r4,31
1010d368:	2080e716 	blt	r4,r2,1010d708 <__subdf3+0x848>
1010d36c:	01000804 	movi	r4,32
1010d370:	2089c83a 	sub	r4,r4,r2
1010d374:	1914983a 	sll	r10,r3,r4
1010d378:	8890d83a 	srl	r8,r17,r2
1010d37c:	8908983a 	sll	r4,r17,r4
1010d380:	1884d83a 	srl	r2,r3,r2
1010d384:	5222b03a 	or	r17,r10,r8
1010d388:	2006c03a 	cmpne	r3,r4,zero
1010d38c:	88e2b03a 	or	r17,r17,r3
1010d390:	3463c83a 	sub	r17,r6,r17
1010d394:	2885c83a 	sub	r2,r5,r2
1010d398:	344d803a 	cmpltu	r6,r6,r17
1010d39c:	1187c83a 	sub	r3,r2,r6
1010d3a0:	4821883a 	mov	r16,r9
1010d3a4:	3825883a 	mov	r18,r7
1010d3a8:	003f2306 	br	1010d038 <__alt_data_end+0xfffed038>
1010d3ac:	24d0b03a 	or	r8,r4,r19
1010d3b0:	40001b1e 	bne	r8,zero,1010d420 <__subdf3+0x560>
1010d3b4:	0005883a 	mov	r2,zero
1010d3b8:	0009883a 	mov	r4,zero
1010d3bc:	0021883a 	mov	r16,zero
1010d3c0:	003f4906 	br	1010d0e8 <__alt_data_end+0xfffed0e8>
1010d3c4:	010007c4 	movi	r4,31
1010d3c8:	20803a16 	blt	r4,r2,1010d4b4 <__subdf3+0x5f4>
1010d3cc:	01000804 	movi	r4,32
1010d3d0:	2089c83a 	sub	r4,r4,r2
1010d3d4:	2912983a 	sll	r9,r5,r4
1010d3d8:	3090d83a 	srl	r8,r6,r2
1010d3dc:	3108983a 	sll	r4,r6,r4
1010d3e0:	2884d83a 	srl	r2,r5,r2
1010d3e4:	4a12b03a 	or	r9,r9,r8
1010d3e8:	2008c03a 	cmpne	r4,r4,zero
1010d3ec:	4912b03a 	or	r9,r9,r4
1010d3f0:	003f4e06 	br	1010d12c <__alt_data_end+0xfffed12c>
1010d3f4:	1c48b03a 	or	r4,r3,r17
1010d3f8:	20003c26 	beq	r4,zero,1010d4ec <__subdf3+0x62c>
1010d3fc:	0084303a 	nor	r2,zero,r2
1010d400:	1000381e 	bne	r2,zero,1010d4e4 <__subdf3+0x624>
1010d404:	3463c83a 	sub	r17,r6,r17
1010d408:	28c5c83a 	sub	r2,r5,r3
1010d40c:	344d803a 	cmpltu	r6,r6,r17
1010d410:	1187c83a 	sub	r3,r2,r6
1010d414:	4821883a 	mov	r16,r9
1010d418:	3825883a 	mov	r18,r7
1010d41c:	003f0606 	br	1010d038 <__alt_data_end+0xfffed038>
1010d420:	2023883a 	mov	r17,r4
1010d424:	003f0906 	br	1010d04c <__alt_data_end+0xfffed04c>
1010d428:	0101ffc4 	movi	r4,2047
1010d42c:	813f3a1e 	bne	r16,r4,1010d118 <__alt_data_end+0xfffed118>
1010d430:	003ec406 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d434:	0005883a 	mov	r2,zero
1010d438:	003fb106 	br	1010d300 <__alt_data_end+0xfffed300>
1010d43c:	0005883a 	mov	r2,zero
1010d440:	003fbc06 	br	1010d334 <__alt_data_end+0xfffed334>
1010d444:	1c44b03a 	or	r2,r3,r17
1010d448:	80008e1e 	bne	r16,zero,1010d684 <__subdf3+0x7c4>
1010d44c:	1000c826 	beq	r2,zero,1010d770 <__subdf3+0x8b0>
1010d450:	2984b03a 	or	r2,r5,r6
1010d454:	103ebb26 	beq	r2,zero,1010cf44 <__alt_data_end+0xfffecf44>
1010d458:	8989883a 	add	r4,r17,r6
1010d45c:	1945883a 	add	r2,r3,r5
1010d460:	2447803a 	cmpltu	r3,r4,r17
1010d464:	1887883a 	add	r3,r3,r2
1010d468:	1880202c 	andhi	r2,r3,128
1010d46c:	2023883a 	mov	r17,r4
1010d470:	103f1626 	beq	r2,zero,1010d0cc <__alt_data_end+0xfffed0cc>
1010d474:	00bfe034 	movhi	r2,65408
1010d478:	10bfffc4 	addi	r2,r2,-1
1010d47c:	5021883a 	mov	r16,r10
1010d480:	1886703a 	and	r3,r3,r2
1010d484:	003eaf06 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d488:	3825883a 	mov	r18,r7
1010d48c:	003f0f06 	br	1010d0cc <__alt_data_end+0xfffed0cc>
1010d490:	1c44b03a 	or	r2,r3,r17
1010d494:	8000251e 	bne	r16,zero,1010d52c <__subdf3+0x66c>
1010d498:	1000661e 	bne	r2,zero,1010d634 <__subdf3+0x774>
1010d49c:	2990b03a 	or	r8,r5,r6
1010d4a0:	40009626 	beq	r8,zero,1010d6fc <__subdf3+0x83c>
1010d4a4:	2807883a 	mov	r3,r5
1010d4a8:	3023883a 	mov	r17,r6
1010d4ac:	3825883a 	mov	r18,r7
1010d4b0:	003ea406 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d4b4:	127ff804 	addi	r9,r2,-32
1010d4b8:	01000804 	movi	r4,32
1010d4bc:	2a52d83a 	srl	r9,r5,r9
1010d4c0:	11008c26 	beq	r2,r4,1010d6f4 <__subdf3+0x834>
1010d4c4:	01001004 	movi	r4,64
1010d4c8:	2085c83a 	sub	r2,r4,r2
1010d4cc:	2884983a 	sll	r2,r5,r2
1010d4d0:	118cb03a 	or	r6,r2,r6
1010d4d4:	300cc03a 	cmpne	r6,r6,zero
1010d4d8:	4992b03a 	or	r9,r9,r6
1010d4dc:	0005883a 	mov	r2,zero
1010d4e0:	003f1206 	br	1010d12c <__alt_data_end+0xfffed12c>
1010d4e4:	0101ffc4 	movi	r4,2047
1010d4e8:	493f9c1e 	bne	r9,r4,1010d35c <__alt_data_end+0xfffed35c>
1010d4ec:	2807883a 	mov	r3,r5
1010d4f0:	3023883a 	mov	r17,r6
1010d4f4:	4821883a 	mov	r16,r9
1010d4f8:	3825883a 	mov	r18,r7
1010d4fc:	003e9106 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d500:	80001f1e 	bne	r16,zero,1010d580 <__subdf3+0x6c0>
1010d504:	1c48b03a 	or	r4,r3,r17
1010d508:	20005a26 	beq	r4,zero,1010d674 <__subdf3+0x7b4>
1010d50c:	0084303a 	nor	r2,zero,r2
1010d510:	1000561e 	bne	r2,zero,1010d66c <__subdf3+0x7ac>
1010d514:	89a3883a 	add	r17,r17,r6
1010d518:	1945883a 	add	r2,r3,r5
1010d51c:	898d803a 	cmpltu	r6,r17,r6
1010d520:	3087883a 	add	r3,r6,r2
1010d524:	4821883a 	mov	r16,r9
1010d528:	003f0506 	br	1010d140 <__alt_data_end+0xfffed140>
1010d52c:	10002b1e 	bne	r2,zero,1010d5dc <__subdf3+0x71c>
1010d530:	2984b03a 	or	r2,r5,r6
1010d534:	10008026 	beq	r2,zero,1010d738 <__subdf3+0x878>
1010d538:	2807883a 	mov	r3,r5
1010d53c:	3023883a 	mov	r17,r6
1010d540:	3825883a 	mov	r18,r7
1010d544:	0401ffc4 	movi	r16,2047
1010d548:	003e7e06 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d54c:	3809883a 	mov	r4,r7
1010d550:	0011883a 	mov	r8,zero
1010d554:	0005883a 	mov	r2,zero
1010d558:	003ee306 	br	1010d0e8 <__alt_data_end+0xfffed0e8>
1010d55c:	1c62b03a 	or	r17,r3,r17
1010d560:	8822c03a 	cmpne	r17,r17,zero
1010d564:	0005883a 	mov	r2,zero
1010d568:	003f8906 	br	1010d390 <__alt_data_end+0xfffed390>
1010d56c:	3809883a 	mov	r4,r7
1010d570:	4821883a 	mov	r16,r9
1010d574:	0011883a 	mov	r8,zero
1010d578:	0005883a 	mov	r2,zero
1010d57c:	003eda06 	br	1010d0e8 <__alt_data_end+0xfffed0e8>
1010d580:	0101ffc4 	movi	r4,2047
1010d584:	49003b26 	beq	r9,r4,1010d674 <__subdf3+0x7b4>
1010d588:	0085c83a 	sub	r2,zero,r2
1010d58c:	18c02034 	orhi	r3,r3,128
1010d590:	01000e04 	movi	r4,56
1010d594:	20806e16 	blt	r4,r2,1010d750 <__subdf3+0x890>
1010d598:	010007c4 	movi	r4,31
1010d59c:	20807716 	blt	r4,r2,1010d77c <__subdf3+0x8bc>
1010d5a0:	01000804 	movi	r4,32
1010d5a4:	2089c83a 	sub	r4,r4,r2
1010d5a8:	1914983a 	sll	r10,r3,r4
1010d5ac:	8890d83a 	srl	r8,r17,r2
1010d5b0:	8908983a 	sll	r4,r17,r4
1010d5b4:	1884d83a 	srl	r2,r3,r2
1010d5b8:	5222b03a 	or	r17,r10,r8
1010d5bc:	2006c03a 	cmpne	r3,r4,zero
1010d5c0:	88e2b03a 	or	r17,r17,r3
1010d5c4:	89a3883a 	add	r17,r17,r6
1010d5c8:	1145883a 	add	r2,r2,r5
1010d5cc:	898d803a 	cmpltu	r6,r17,r6
1010d5d0:	3087883a 	add	r3,r6,r2
1010d5d4:	4821883a 	mov	r16,r9
1010d5d8:	003ed906 	br	1010d140 <__alt_data_end+0xfffed140>
1010d5dc:	2984b03a 	or	r2,r5,r6
1010d5e0:	10004226 	beq	r2,zero,1010d6ec <__subdf3+0x82c>
1010d5e4:	1808d0fa 	srli	r4,r3,3
1010d5e8:	8822d0fa 	srli	r17,r17,3
1010d5ec:	1806977a 	slli	r3,r3,29
1010d5f0:	2080022c 	andhi	r2,r4,8
1010d5f4:	1c62b03a 	or	r17,r3,r17
1010d5f8:	10000826 	beq	r2,zero,1010d61c <__subdf3+0x75c>
1010d5fc:	2812d0fa 	srli	r9,r5,3
1010d600:	4880022c 	andhi	r2,r9,8
1010d604:	1000051e 	bne	r2,zero,1010d61c <__subdf3+0x75c>
1010d608:	300cd0fa 	srli	r6,r6,3
1010d60c:	2804977a 	slli	r2,r5,29
1010d610:	4809883a 	mov	r4,r9
1010d614:	3825883a 	mov	r18,r7
1010d618:	11a2b03a 	or	r17,r2,r6
1010d61c:	8806d77a 	srli	r3,r17,29
1010d620:	200890fa 	slli	r4,r4,3
1010d624:	882290fa 	slli	r17,r17,3
1010d628:	0401ffc4 	movi	r16,2047
1010d62c:	1906b03a 	or	r3,r3,r4
1010d630:	003e4406 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d634:	2984b03a 	or	r2,r5,r6
1010d638:	103e4226 	beq	r2,zero,1010cf44 <__alt_data_end+0xfffecf44>
1010d63c:	8989c83a 	sub	r4,r17,r6
1010d640:	8911803a 	cmpltu	r8,r17,r4
1010d644:	1945c83a 	sub	r2,r3,r5
1010d648:	1205c83a 	sub	r2,r2,r8
1010d64c:	1200202c 	andhi	r8,r2,128
1010d650:	403e9a26 	beq	r8,zero,1010d0bc <__alt_data_end+0xfffed0bc>
1010d654:	3463c83a 	sub	r17,r6,r17
1010d658:	28c5c83a 	sub	r2,r5,r3
1010d65c:	344d803a 	cmpltu	r6,r6,r17
1010d660:	1187c83a 	sub	r3,r2,r6
1010d664:	3825883a 	mov	r18,r7
1010d668:	003e3606 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d66c:	0101ffc4 	movi	r4,2047
1010d670:	493fc71e 	bne	r9,r4,1010d590 <__alt_data_end+0xfffed590>
1010d674:	2807883a 	mov	r3,r5
1010d678:	3023883a 	mov	r17,r6
1010d67c:	4821883a 	mov	r16,r9
1010d680:	003e3006 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d684:	10003626 	beq	r2,zero,1010d760 <__subdf3+0x8a0>
1010d688:	2984b03a 	or	r2,r5,r6
1010d68c:	10001726 	beq	r2,zero,1010d6ec <__subdf3+0x82c>
1010d690:	1808d0fa 	srli	r4,r3,3
1010d694:	8822d0fa 	srli	r17,r17,3
1010d698:	1806977a 	slli	r3,r3,29
1010d69c:	2080022c 	andhi	r2,r4,8
1010d6a0:	1c62b03a 	or	r17,r3,r17
1010d6a4:	10000726 	beq	r2,zero,1010d6c4 <__subdf3+0x804>
1010d6a8:	2812d0fa 	srli	r9,r5,3
1010d6ac:	4880022c 	andhi	r2,r9,8
1010d6b0:	1000041e 	bne	r2,zero,1010d6c4 <__subdf3+0x804>
1010d6b4:	300cd0fa 	srli	r6,r6,3
1010d6b8:	2804977a 	slli	r2,r5,29
1010d6bc:	4809883a 	mov	r4,r9
1010d6c0:	11a2b03a 	or	r17,r2,r6
1010d6c4:	8806d77a 	srli	r3,r17,29
1010d6c8:	200890fa 	slli	r4,r4,3
1010d6cc:	882290fa 	slli	r17,r17,3
1010d6d0:	3825883a 	mov	r18,r7
1010d6d4:	1906b03a 	or	r3,r3,r4
1010d6d8:	0401ffc4 	movi	r16,2047
1010d6dc:	003e1906 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d6e0:	000b883a 	mov	r5,zero
1010d6e4:	0005883a 	mov	r2,zero
1010d6e8:	003e2e06 	br	1010cfa4 <__alt_data_end+0xfffecfa4>
1010d6ec:	0401ffc4 	movi	r16,2047
1010d6f0:	003e1406 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d6f4:	0005883a 	mov	r2,zero
1010d6f8:	003f7506 	br	1010d4d0 <__alt_data_end+0xfffed4d0>
1010d6fc:	0005883a 	mov	r2,zero
1010d700:	0009883a 	mov	r4,zero
1010d704:	003e7806 	br	1010d0e8 <__alt_data_end+0xfffed0e8>
1010d708:	123ff804 	addi	r8,r2,-32
1010d70c:	01000804 	movi	r4,32
1010d710:	1a10d83a 	srl	r8,r3,r8
1010d714:	11002526 	beq	r2,r4,1010d7ac <__subdf3+0x8ec>
1010d718:	01001004 	movi	r4,64
1010d71c:	2085c83a 	sub	r2,r4,r2
1010d720:	1884983a 	sll	r2,r3,r2
1010d724:	1444b03a 	or	r2,r2,r17
1010d728:	1004c03a 	cmpne	r2,r2,zero
1010d72c:	40a2b03a 	or	r17,r8,r2
1010d730:	0005883a 	mov	r2,zero
1010d734:	003f1606 	br	1010d390 <__alt_data_end+0xfffed390>
1010d738:	02000434 	movhi	r8,16
1010d73c:	0009883a 	mov	r4,zero
1010d740:	423fffc4 	addi	r8,r8,-1
1010d744:	00bfffc4 	movi	r2,-1
1010d748:	0401ffc4 	movi	r16,2047
1010d74c:	003e6606 	br	1010d0e8 <__alt_data_end+0xfffed0e8>
1010d750:	1c62b03a 	or	r17,r3,r17
1010d754:	8822c03a 	cmpne	r17,r17,zero
1010d758:	0005883a 	mov	r2,zero
1010d75c:	003f9906 	br	1010d5c4 <__alt_data_end+0xfffed5c4>
1010d760:	2807883a 	mov	r3,r5
1010d764:	3023883a 	mov	r17,r6
1010d768:	0401ffc4 	movi	r16,2047
1010d76c:	003df506 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d770:	2807883a 	mov	r3,r5
1010d774:	3023883a 	mov	r17,r6
1010d778:	003df206 	br	1010cf44 <__alt_data_end+0xfffecf44>
1010d77c:	123ff804 	addi	r8,r2,-32
1010d780:	01000804 	movi	r4,32
1010d784:	1a10d83a 	srl	r8,r3,r8
1010d788:	11000a26 	beq	r2,r4,1010d7b4 <__subdf3+0x8f4>
1010d78c:	01001004 	movi	r4,64
1010d790:	2085c83a 	sub	r2,r4,r2
1010d794:	1884983a 	sll	r2,r3,r2
1010d798:	1444b03a 	or	r2,r2,r17
1010d79c:	1004c03a 	cmpne	r2,r2,zero
1010d7a0:	40a2b03a 	or	r17,r8,r2
1010d7a4:	0005883a 	mov	r2,zero
1010d7a8:	003f8606 	br	1010d5c4 <__alt_data_end+0xfffed5c4>
1010d7ac:	0005883a 	mov	r2,zero
1010d7b0:	003fdc06 	br	1010d724 <__alt_data_end+0xfffed724>
1010d7b4:	0005883a 	mov	r2,zero
1010d7b8:	003ff706 	br	1010d798 <__alt_data_end+0xfffed798>

1010d7bc <__fixdfsi>:
1010d7bc:	280cd53a 	srli	r6,r5,20
1010d7c0:	00c00434 	movhi	r3,16
1010d7c4:	18ffffc4 	addi	r3,r3,-1
1010d7c8:	3181ffcc 	andi	r6,r6,2047
1010d7cc:	01c0ff84 	movi	r7,1022
1010d7d0:	28c6703a 	and	r3,r5,r3
1010d7d4:	280ad7fa 	srli	r5,r5,31
1010d7d8:	3980120e 	bge	r7,r6,1010d824 <__fixdfsi+0x68>
1010d7dc:	00810744 	movi	r2,1053
1010d7e0:	11800c16 	blt	r2,r6,1010d814 <__fixdfsi+0x58>
1010d7e4:	00810cc4 	movi	r2,1075
1010d7e8:	1185c83a 	sub	r2,r2,r6
1010d7ec:	01c007c4 	movi	r7,31
1010d7f0:	18c00434 	orhi	r3,r3,16
1010d7f4:	38800d16 	blt	r7,r2,1010d82c <__fixdfsi+0x70>
1010d7f8:	31befb44 	addi	r6,r6,-1043
1010d7fc:	2084d83a 	srl	r2,r4,r2
1010d800:	1986983a 	sll	r3,r3,r6
1010d804:	1884b03a 	or	r2,r3,r2
1010d808:	28000726 	beq	r5,zero,1010d828 <__fixdfsi+0x6c>
1010d80c:	0085c83a 	sub	r2,zero,r2
1010d810:	f800283a 	ret
1010d814:	00a00034 	movhi	r2,32768
1010d818:	10bfffc4 	addi	r2,r2,-1
1010d81c:	2885883a 	add	r2,r5,r2
1010d820:	f800283a 	ret
1010d824:	0005883a 	mov	r2,zero
1010d828:	f800283a 	ret
1010d82c:	008104c4 	movi	r2,1043
1010d830:	1185c83a 	sub	r2,r2,r6
1010d834:	1884d83a 	srl	r2,r3,r2
1010d838:	003ff306 	br	1010d808 <__alt_data_end+0xfffed808>

1010d83c <__floatsidf>:
1010d83c:	defffd04 	addi	sp,sp,-12
1010d840:	dfc00215 	stw	ra,8(sp)
1010d844:	dc400115 	stw	r17,4(sp)
1010d848:	dc000015 	stw	r16,0(sp)
1010d84c:	20002b26 	beq	r4,zero,1010d8fc <__floatsidf+0xc0>
1010d850:	2023883a 	mov	r17,r4
1010d854:	2020d7fa 	srli	r16,r4,31
1010d858:	20002d16 	blt	r4,zero,1010d910 <__floatsidf+0xd4>
1010d85c:	8809883a 	mov	r4,r17
1010d860:	010d9c00 	call	1010d9c0 <__clzsi2>
1010d864:	01410784 	movi	r5,1054
1010d868:	288bc83a 	sub	r5,r5,r2
1010d86c:	01010cc4 	movi	r4,1075
1010d870:	2149c83a 	sub	r4,r4,r5
1010d874:	00c007c4 	movi	r3,31
1010d878:	1900160e 	bge	r3,r4,1010d8d4 <__floatsidf+0x98>
1010d87c:	00c104c4 	movi	r3,1043
1010d880:	1947c83a 	sub	r3,r3,r5
1010d884:	88c6983a 	sll	r3,r17,r3
1010d888:	00800434 	movhi	r2,16
1010d88c:	10bfffc4 	addi	r2,r2,-1
1010d890:	1886703a 	and	r3,r3,r2
1010d894:	2941ffcc 	andi	r5,r5,2047
1010d898:	800d883a 	mov	r6,r16
1010d89c:	0005883a 	mov	r2,zero
1010d8a0:	280a953a 	slli	r5,r5,20
1010d8a4:	31803fcc 	andi	r6,r6,255
1010d8a8:	01000434 	movhi	r4,16
1010d8ac:	300c97fa 	slli	r6,r6,31
1010d8b0:	213fffc4 	addi	r4,r4,-1
1010d8b4:	1906703a 	and	r3,r3,r4
1010d8b8:	1946b03a 	or	r3,r3,r5
1010d8bc:	1986b03a 	or	r3,r3,r6
1010d8c0:	dfc00217 	ldw	ra,8(sp)
1010d8c4:	dc400117 	ldw	r17,4(sp)
1010d8c8:	dc000017 	ldw	r16,0(sp)
1010d8cc:	dec00304 	addi	sp,sp,12
1010d8d0:	f800283a 	ret
1010d8d4:	00c002c4 	movi	r3,11
1010d8d8:	1887c83a 	sub	r3,r3,r2
1010d8dc:	88c6d83a 	srl	r3,r17,r3
1010d8e0:	8904983a 	sll	r2,r17,r4
1010d8e4:	01000434 	movhi	r4,16
1010d8e8:	213fffc4 	addi	r4,r4,-1
1010d8ec:	2941ffcc 	andi	r5,r5,2047
1010d8f0:	1906703a 	and	r3,r3,r4
1010d8f4:	800d883a 	mov	r6,r16
1010d8f8:	003fe906 	br	1010d8a0 <__alt_data_end+0xfffed8a0>
1010d8fc:	000d883a 	mov	r6,zero
1010d900:	000b883a 	mov	r5,zero
1010d904:	0007883a 	mov	r3,zero
1010d908:	0005883a 	mov	r2,zero
1010d90c:	003fe406 	br	1010d8a0 <__alt_data_end+0xfffed8a0>
1010d910:	0123c83a 	sub	r17,zero,r4
1010d914:	003fd106 	br	1010d85c <__alt_data_end+0xfffed85c>

1010d918 <__floatunsidf>:
1010d918:	defffe04 	addi	sp,sp,-8
1010d91c:	dc000015 	stw	r16,0(sp)
1010d920:	dfc00115 	stw	ra,4(sp)
1010d924:	2021883a 	mov	r16,r4
1010d928:	20002226 	beq	r4,zero,1010d9b4 <__floatunsidf+0x9c>
1010d92c:	010d9c00 	call	1010d9c0 <__clzsi2>
1010d930:	01010784 	movi	r4,1054
1010d934:	2089c83a 	sub	r4,r4,r2
1010d938:	01810cc4 	movi	r6,1075
1010d93c:	310dc83a 	sub	r6,r6,r4
1010d940:	00c007c4 	movi	r3,31
1010d944:	1980120e 	bge	r3,r6,1010d990 <__floatunsidf+0x78>
1010d948:	00c104c4 	movi	r3,1043
1010d94c:	1907c83a 	sub	r3,r3,r4
1010d950:	80ca983a 	sll	r5,r16,r3
1010d954:	00800434 	movhi	r2,16
1010d958:	10bfffc4 	addi	r2,r2,-1
1010d95c:	2101ffcc 	andi	r4,r4,2047
1010d960:	0021883a 	mov	r16,zero
1010d964:	288a703a 	and	r5,r5,r2
1010d968:	2008953a 	slli	r4,r4,20
1010d96c:	00c00434 	movhi	r3,16
1010d970:	18ffffc4 	addi	r3,r3,-1
1010d974:	28c6703a 	and	r3,r5,r3
1010d978:	8005883a 	mov	r2,r16
1010d97c:	1906b03a 	or	r3,r3,r4
1010d980:	dfc00117 	ldw	ra,4(sp)
1010d984:	dc000017 	ldw	r16,0(sp)
1010d988:	dec00204 	addi	sp,sp,8
1010d98c:	f800283a 	ret
1010d990:	00c002c4 	movi	r3,11
1010d994:	188bc83a 	sub	r5,r3,r2
1010d998:	814ad83a 	srl	r5,r16,r5
1010d99c:	00c00434 	movhi	r3,16
1010d9a0:	18ffffc4 	addi	r3,r3,-1
1010d9a4:	81a0983a 	sll	r16,r16,r6
1010d9a8:	2101ffcc 	andi	r4,r4,2047
1010d9ac:	28ca703a 	and	r5,r5,r3
1010d9b0:	003fed06 	br	1010d968 <__alt_data_end+0xfffed968>
1010d9b4:	0009883a 	mov	r4,zero
1010d9b8:	000b883a 	mov	r5,zero
1010d9bc:	003fea06 	br	1010d968 <__alt_data_end+0xfffed968>

1010d9c0 <__clzsi2>:
1010d9c0:	00bfffd4 	movui	r2,65535
1010d9c4:	11000536 	bltu	r2,r4,1010d9dc <__clzsi2+0x1c>
1010d9c8:	00803fc4 	movi	r2,255
1010d9cc:	11000f36 	bltu	r2,r4,1010da0c <__clzsi2+0x4c>
1010d9d0:	00800804 	movi	r2,32
1010d9d4:	0007883a 	mov	r3,zero
1010d9d8:	00000506 	br	1010d9f0 <__clzsi2+0x30>
1010d9dc:	00804034 	movhi	r2,256
1010d9e0:	10bfffc4 	addi	r2,r2,-1
1010d9e4:	11000c2e 	bgeu	r2,r4,1010da18 <__clzsi2+0x58>
1010d9e8:	00800204 	movi	r2,8
1010d9ec:	00c00604 	movi	r3,24
1010d9f0:	20c8d83a 	srl	r4,r4,r3
1010d9f4:	00c40474 	movhi	r3,4113
1010d9f8:	18c1fe04 	addi	r3,r3,2040
1010d9fc:	1909883a 	add	r4,r3,r4
1010da00:	20c00003 	ldbu	r3,0(r4)
1010da04:	10c5c83a 	sub	r2,r2,r3
1010da08:	f800283a 	ret
1010da0c:	00800604 	movi	r2,24
1010da10:	00c00204 	movi	r3,8
1010da14:	003ff606 	br	1010d9f0 <__alt_data_end+0xfffed9f0>
1010da18:	00800404 	movi	r2,16
1010da1c:	1007883a 	mov	r3,r2
1010da20:	003ff306 	br	1010d9f0 <__alt_data_end+0xfffed9f0>

1010da24 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010da24:	defffe04 	addi	sp,sp,-8
1010da28:	dfc00115 	stw	ra,4(sp)
1010da2c:	df000015 	stw	fp,0(sp)
1010da30:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010da34:	d0a00b17 	ldw	r2,-32724(gp)
1010da38:	10000326 	beq	r2,zero,1010da48 <alt_get_errno+0x24>
1010da3c:	d0a00b17 	ldw	r2,-32724(gp)
1010da40:	103ee83a 	callr	r2
1010da44:	00000106 	br	1010da4c <alt_get_errno+0x28>
1010da48:	d0a6ff04 	addi	r2,gp,-25604
}
1010da4c:	e037883a 	mov	sp,fp
1010da50:	dfc00117 	ldw	ra,4(sp)
1010da54:	df000017 	ldw	fp,0(sp)
1010da58:	dec00204 	addi	sp,sp,8
1010da5c:	f800283a 	ret

1010da60 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1010da60:	defffb04 	addi	sp,sp,-20
1010da64:	dfc00415 	stw	ra,16(sp)
1010da68:	df000315 	stw	fp,12(sp)
1010da6c:	df000304 	addi	fp,sp,12
1010da70:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1010da74:	e0bfff17 	ldw	r2,-4(fp)
1010da78:	10000816 	blt	r2,zero,1010da9c <close+0x3c>
1010da7c:	01400304 	movi	r5,12
1010da80:	e13fff17 	ldw	r4,-4(fp)
1010da84:	0100c980 	call	10100c98 <__mulsi3>
1010da88:	1007883a 	mov	r3,r2
1010da8c:	00840474 	movhi	r2,4113
1010da90:	10848104 	addi	r2,r2,4612
1010da94:	1885883a 	add	r2,r3,r2
1010da98:	00000106 	br	1010daa0 <close+0x40>
1010da9c:	0005883a 	mov	r2,zero
1010daa0:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1010daa4:	e0bffd17 	ldw	r2,-12(fp)
1010daa8:	10001926 	beq	r2,zero,1010db10 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1010daac:	e0bffd17 	ldw	r2,-12(fp)
1010dab0:	10800017 	ldw	r2,0(r2)
1010dab4:	10800417 	ldw	r2,16(r2)
1010dab8:	10000626 	beq	r2,zero,1010dad4 <close+0x74>
1010dabc:	e0bffd17 	ldw	r2,-12(fp)
1010dac0:	10800017 	ldw	r2,0(r2)
1010dac4:	10800417 	ldw	r2,16(r2)
1010dac8:	e13ffd17 	ldw	r4,-12(fp)
1010dacc:	103ee83a 	callr	r2
1010dad0:	00000106 	br	1010dad8 <close+0x78>
1010dad4:	0005883a 	mov	r2,zero
1010dad8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1010dadc:	e13fff17 	ldw	r4,-4(fp)
1010dae0:	010e1480 	call	1010e148 <alt_release_fd>
    if (rval < 0)
1010dae4:	e0bffe17 	ldw	r2,-8(fp)
1010dae8:	1000070e 	bge	r2,zero,1010db08 <close+0xa8>
    {
      ALT_ERRNO = -rval;
1010daec:	010da240 	call	1010da24 <alt_get_errno>
1010daf0:	1007883a 	mov	r3,r2
1010daf4:	e0bffe17 	ldw	r2,-8(fp)
1010daf8:	0085c83a 	sub	r2,zero,r2
1010dafc:	18800015 	stw	r2,0(r3)
      return -1;
1010db00:	00bfffc4 	movi	r2,-1
1010db04:	00000706 	br	1010db24 <close+0xc4>
    }
    return 0;
1010db08:	0005883a 	mov	r2,zero
1010db0c:	00000506 	br	1010db24 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010db10:	010da240 	call	1010da24 <alt_get_errno>
1010db14:	1007883a 	mov	r3,r2
1010db18:	00801444 	movi	r2,81
1010db1c:	18800015 	stw	r2,0(r3)
    return -1;
1010db20:	00bfffc4 	movi	r2,-1
  }
}
1010db24:	e037883a 	mov	sp,fp
1010db28:	dfc00117 	ldw	ra,4(sp)
1010db2c:	df000017 	ldw	fp,0(sp)
1010db30:	dec00204 	addi	sp,sp,8
1010db34:	f800283a 	ret

1010db38 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1010db38:	defffc04 	addi	sp,sp,-16
1010db3c:	df000315 	stw	fp,12(sp)
1010db40:	df000304 	addi	fp,sp,12
1010db44:	e13ffd15 	stw	r4,-12(fp)
1010db48:	e17ffe15 	stw	r5,-8(fp)
1010db4c:	e1bfff15 	stw	r6,-4(fp)
  return len;
1010db50:	e0bfff17 	ldw	r2,-4(fp)
}
1010db54:	e037883a 	mov	sp,fp
1010db58:	df000017 	ldw	fp,0(sp)
1010db5c:	dec00104 	addi	sp,sp,4
1010db60:	f800283a 	ret

1010db64 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010db64:	defffe04 	addi	sp,sp,-8
1010db68:	dfc00115 	stw	ra,4(sp)
1010db6c:	df000015 	stw	fp,0(sp)
1010db70:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010db74:	d0a00b17 	ldw	r2,-32724(gp)
1010db78:	10000326 	beq	r2,zero,1010db88 <alt_get_errno+0x24>
1010db7c:	d0a00b17 	ldw	r2,-32724(gp)
1010db80:	103ee83a 	callr	r2
1010db84:	00000106 	br	1010db8c <alt_get_errno+0x28>
1010db88:	d0a6ff04 	addi	r2,gp,-25604
}
1010db8c:	e037883a 	mov	sp,fp
1010db90:	dfc00117 	ldw	ra,4(sp)
1010db94:	df000017 	ldw	fp,0(sp)
1010db98:	dec00204 	addi	sp,sp,8
1010db9c:	f800283a 	ret

1010dba0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1010dba0:	defffb04 	addi	sp,sp,-20
1010dba4:	dfc00415 	stw	ra,16(sp)
1010dba8:	df000315 	stw	fp,12(sp)
1010dbac:	df000304 	addi	fp,sp,12
1010dbb0:	e13ffe15 	stw	r4,-8(fp)
1010dbb4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010dbb8:	e0bffe17 	ldw	r2,-8(fp)
1010dbbc:	10000816 	blt	r2,zero,1010dbe0 <fstat+0x40>
1010dbc0:	01400304 	movi	r5,12
1010dbc4:	e13ffe17 	ldw	r4,-8(fp)
1010dbc8:	0100c980 	call	10100c98 <__mulsi3>
1010dbcc:	1007883a 	mov	r3,r2
1010dbd0:	00840474 	movhi	r2,4113
1010dbd4:	10848104 	addi	r2,r2,4612
1010dbd8:	1885883a 	add	r2,r3,r2
1010dbdc:	00000106 	br	1010dbe4 <fstat+0x44>
1010dbe0:	0005883a 	mov	r2,zero
1010dbe4:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1010dbe8:	e0bffd17 	ldw	r2,-12(fp)
1010dbec:	10001026 	beq	r2,zero,1010dc30 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1010dbf0:	e0bffd17 	ldw	r2,-12(fp)
1010dbf4:	10800017 	ldw	r2,0(r2)
1010dbf8:	10800817 	ldw	r2,32(r2)
1010dbfc:	10000726 	beq	r2,zero,1010dc1c <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
1010dc00:	e0bffd17 	ldw	r2,-12(fp)
1010dc04:	10800017 	ldw	r2,0(r2)
1010dc08:	10800817 	ldw	r2,32(r2)
1010dc0c:	e17fff17 	ldw	r5,-4(fp)
1010dc10:	e13ffd17 	ldw	r4,-12(fp)
1010dc14:	103ee83a 	callr	r2
1010dc18:	00000a06 	br	1010dc44 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1010dc1c:	e0bfff17 	ldw	r2,-4(fp)
1010dc20:	00c80004 	movi	r3,8192
1010dc24:	10c00115 	stw	r3,4(r2)
      return 0;
1010dc28:	0005883a 	mov	r2,zero
1010dc2c:	00000506 	br	1010dc44 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010dc30:	010db640 	call	1010db64 <alt_get_errno>
1010dc34:	1007883a 	mov	r3,r2
1010dc38:	00801444 	movi	r2,81
1010dc3c:	18800015 	stw	r2,0(r3)
    return -1;
1010dc40:	00bfffc4 	movi	r2,-1
  }
}
1010dc44:	e037883a 	mov	sp,fp
1010dc48:	dfc00117 	ldw	ra,4(sp)
1010dc4c:	df000017 	ldw	fp,0(sp)
1010dc50:	dec00204 	addi	sp,sp,8
1010dc54:	f800283a 	ret

1010dc58 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010dc58:	defffe04 	addi	sp,sp,-8
1010dc5c:	dfc00115 	stw	ra,4(sp)
1010dc60:	df000015 	stw	fp,0(sp)
1010dc64:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010dc68:	d0a00b17 	ldw	r2,-32724(gp)
1010dc6c:	10000326 	beq	r2,zero,1010dc7c <alt_get_errno+0x24>
1010dc70:	d0a00b17 	ldw	r2,-32724(gp)
1010dc74:	103ee83a 	callr	r2
1010dc78:	00000106 	br	1010dc80 <alt_get_errno+0x28>
1010dc7c:	d0a6ff04 	addi	r2,gp,-25604
}
1010dc80:	e037883a 	mov	sp,fp
1010dc84:	dfc00117 	ldw	ra,4(sp)
1010dc88:	df000017 	ldw	fp,0(sp)
1010dc8c:	dec00204 	addi	sp,sp,8
1010dc90:	f800283a 	ret

1010dc94 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1010dc94:	deffed04 	addi	sp,sp,-76
1010dc98:	dfc01215 	stw	ra,72(sp)
1010dc9c:	df001115 	stw	fp,68(sp)
1010dca0:	df001104 	addi	fp,sp,68
1010dca4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010dca8:	e0bfff17 	ldw	r2,-4(fp)
1010dcac:	10000816 	blt	r2,zero,1010dcd0 <isatty+0x3c>
1010dcb0:	01400304 	movi	r5,12
1010dcb4:	e13fff17 	ldw	r4,-4(fp)
1010dcb8:	0100c980 	call	10100c98 <__mulsi3>
1010dcbc:	1007883a 	mov	r3,r2
1010dcc0:	00840474 	movhi	r2,4113
1010dcc4:	10848104 	addi	r2,r2,4612
1010dcc8:	1885883a 	add	r2,r3,r2
1010dccc:	00000106 	br	1010dcd4 <isatty+0x40>
1010dcd0:	0005883a 	mov	r2,zero
1010dcd4:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1010dcd8:	e0bfef17 	ldw	r2,-68(fp)
1010dcdc:	10000e26 	beq	r2,zero,1010dd18 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1010dce0:	e0bfef17 	ldw	r2,-68(fp)
1010dce4:	10800017 	ldw	r2,0(r2)
1010dce8:	10800817 	ldw	r2,32(r2)
1010dcec:	1000021e 	bne	r2,zero,1010dcf8 <isatty+0x64>
    {
      return 1;
1010dcf0:	00800044 	movi	r2,1
1010dcf4:	00000d06 	br	1010dd2c <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1010dcf8:	e0bff004 	addi	r2,fp,-64
1010dcfc:	100b883a 	mov	r5,r2
1010dd00:	e13fff17 	ldw	r4,-4(fp)
1010dd04:	010dba00 	call	1010dba0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1010dd08:	e0bff117 	ldw	r2,-60(fp)
1010dd0c:	10880020 	cmpeqi	r2,r2,8192
1010dd10:	10803fcc 	andi	r2,r2,255
1010dd14:	00000506 	br	1010dd2c <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010dd18:	010dc580 	call	1010dc58 <alt_get_errno>
1010dd1c:	1007883a 	mov	r3,r2
1010dd20:	00801444 	movi	r2,81
1010dd24:	18800015 	stw	r2,0(r3)
    return 0;
1010dd28:	0005883a 	mov	r2,zero
  }
}
1010dd2c:	e037883a 	mov	sp,fp
1010dd30:	dfc00117 	ldw	ra,4(sp)
1010dd34:	df000017 	ldw	fp,0(sp)
1010dd38:	dec00204 	addi	sp,sp,8
1010dd3c:	f800283a 	ret

1010dd40 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1010dd40:	defffc04 	addi	sp,sp,-16
1010dd44:	df000315 	stw	fp,12(sp)
1010dd48:	df000304 	addi	fp,sp,12
1010dd4c:	e13ffd15 	stw	r4,-12(fp)
1010dd50:	e17ffe15 	stw	r5,-8(fp)
1010dd54:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1010dd58:	e0fffe17 	ldw	r3,-8(fp)
1010dd5c:	e0bffd17 	ldw	r2,-12(fp)
1010dd60:	18800c26 	beq	r3,r2,1010dd94 <alt_load_section+0x54>
  {
    while( to != end )
1010dd64:	00000806 	br	1010dd88 <alt_load_section+0x48>
    {
      *to++ = *from++;
1010dd68:	e0bffe17 	ldw	r2,-8(fp)
1010dd6c:	10c00104 	addi	r3,r2,4
1010dd70:	e0fffe15 	stw	r3,-8(fp)
1010dd74:	e0fffd17 	ldw	r3,-12(fp)
1010dd78:	19000104 	addi	r4,r3,4
1010dd7c:	e13ffd15 	stw	r4,-12(fp)
1010dd80:	18c00017 	ldw	r3,0(r3)
1010dd84:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1010dd88:	e0fffe17 	ldw	r3,-8(fp)
1010dd8c:	e0bfff17 	ldw	r2,-4(fp)
1010dd90:	18bff51e 	bne	r3,r2,1010dd68 <__alt_data_end+0xfffedd68>
    {
      *to++ = *from++;
    }
  }
}
1010dd94:	0001883a 	nop
1010dd98:	e037883a 	mov	sp,fp
1010dd9c:	df000017 	ldw	fp,0(sp)
1010dda0:	dec00104 	addi	sp,sp,4
1010dda4:	f800283a 	ret

1010dda8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1010dda8:	defffe04 	addi	sp,sp,-8
1010ddac:	dfc00115 	stw	ra,4(sp)
1010ddb0:	df000015 	stw	fp,0(sp)
1010ddb4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1010ddb8:	01840474 	movhi	r6,4113
1010ddbc:	31892504 	addi	r6,r6,9364
1010ddc0:	01440474 	movhi	r5,4113
1010ddc4:	29424e04 	addi	r5,r5,2360
1010ddc8:	01040474 	movhi	r4,4113
1010ddcc:	21092504 	addi	r4,r4,9364
1010ddd0:	010dd400 	call	1010dd40 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1010ddd4:	01840434 	movhi	r6,4112
1010ddd8:	31808c04 	addi	r6,r6,560
1010dddc:	01440434 	movhi	r5,4112
1010dde0:	29400804 	addi	r5,r5,32
1010dde4:	01040434 	movhi	r4,4112
1010dde8:	21000804 	addi	r4,r4,32
1010ddec:	010dd400 	call	1010dd40 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1010ddf0:	01840474 	movhi	r6,4113
1010ddf4:	31824e04 	addi	r6,r6,2360
1010ddf8:	01440474 	movhi	r5,4113
1010ddfc:	29417204 	addi	r5,r5,1480
1010de00:	01040474 	movhi	r4,4113
1010de04:	21017204 	addi	r4,r4,1480
1010de08:	010dd400 	call	1010dd40 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1010de0c:	010f4900 	call	1010f490 <alt_dcache_flush_all>
  alt_icache_flush_all();
1010de10:	010f6d00 	call	1010f6d0 <alt_icache_flush_all>
}
1010de14:	0001883a 	nop
1010de18:	e037883a 	mov	sp,fp
1010de1c:	dfc00117 	ldw	ra,4(sp)
1010de20:	df000017 	ldw	fp,0(sp)
1010de24:	dec00204 	addi	sp,sp,8
1010de28:	f800283a 	ret

1010de2c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010de2c:	defffe04 	addi	sp,sp,-8
1010de30:	dfc00115 	stw	ra,4(sp)
1010de34:	df000015 	stw	fp,0(sp)
1010de38:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010de3c:	d0a00b17 	ldw	r2,-32724(gp)
1010de40:	10000326 	beq	r2,zero,1010de50 <alt_get_errno+0x24>
1010de44:	d0a00b17 	ldw	r2,-32724(gp)
1010de48:	103ee83a 	callr	r2
1010de4c:	00000106 	br	1010de54 <alt_get_errno+0x28>
1010de50:	d0a6ff04 	addi	r2,gp,-25604
}
1010de54:	e037883a 	mov	sp,fp
1010de58:	dfc00117 	ldw	ra,4(sp)
1010de5c:	df000017 	ldw	fp,0(sp)
1010de60:	dec00204 	addi	sp,sp,8
1010de64:	f800283a 	ret

1010de68 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1010de68:	defff904 	addi	sp,sp,-28
1010de6c:	dfc00615 	stw	ra,24(sp)
1010de70:	df000515 	stw	fp,20(sp)
1010de74:	df000504 	addi	fp,sp,20
1010de78:	e13ffd15 	stw	r4,-12(fp)
1010de7c:	e17ffe15 	stw	r5,-8(fp)
1010de80:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1010de84:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010de88:	e0bffd17 	ldw	r2,-12(fp)
1010de8c:	10000816 	blt	r2,zero,1010deb0 <lseek+0x48>
1010de90:	01400304 	movi	r5,12
1010de94:	e13ffd17 	ldw	r4,-12(fp)
1010de98:	0100c980 	call	10100c98 <__mulsi3>
1010de9c:	1007883a 	mov	r3,r2
1010dea0:	00840474 	movhi	r2,4113
1010dea4:	10848104 	addi	r2,r2,4612
1010dea8:	1885883a 	add	r2,r3,r2
1010deac:	00000106 	br	1010deb4 <lseek+0x4c>
1010deb0:	0005883a 	mov	r2,zero
1010deb4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1010deb8:	e0bffc17 	ldw	r2,-16(fp)
1010debc:	10001026 	beq	r2,zero,1010df00 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1010dec0:	e0bffc17 	ldw	r2,-16(fp)
1010dec4:	10800017 	ldw	r2,0(r2)
1010dec8:	10800717 	ldw	r2,28(r2)
1010decc:	10000926 	beq	r2,zero,1010def4 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1010ded0:	e0bffc17 	ldw	r2,-16(fp)
1010ded4:	10800017 	ldw	r2,0(r2)
1010ded8:	10800717 	ldw	r2,28(r2)
1010dedc:	e1bfff17 	ldw	r6,-4(fp)
1010dee0:	e17ffe17 	ldw	r5,-8(fp)
1010dee4:	e13ffc17 	ldw	r4,-16(fp)
1010dee8:	103ee83a 	callr	r2
1010deec:	e0bffb15 	stw	r2,-20(fp)
1010def0:	00000506 	br	1010df08 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1010def4:	00bfde84 	movi	r2,-134
1010def8:	e0bffb15 	stw	r2,-20(fp)
1010defc:	00000206 	br	1010df08 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
1010df00:	00bfebc4 	movi	r2,-81
1010df04:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1010df08:	e0bffb17 	ldw	r2,-20(fp)
1010df0c:	1000070e 	bge	r2,zero,1010df2c <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
1010df10:	010de2c0 	call	1010de2c <alt_get_errno>
1010df14:	1007883a 	mov	r3,r2
1010df18:	e0bffb17 	ldw	r2,-20(fp)
1010df1c:	0085c83a 	sub	r2,zero,r2
1010df20:	18800015 	stw	r2,0(r3)
    rc = -1;
1010df24:	00bfffc4 	movi	r2,-1
1010df28:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1010df2c:	e0bffb17 	ldw	r2,-20(fp)
}
1010df30:	e037883a 	mov	sp,fp
1010df34:	dfc00117 	ldw	ra,4(sp)
1010df38:	df000017 	ldw	fp,0(sp)
1010df3c:	dec00204 	addi	sp,sp,8
1010df40:	f800283a 	ret

1010df44 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1010df44:	defffd04 	addi	sp,sp,-12
1010df48:	dfc00215 	stw	ra,8(sp)
1010df4c:	df000115 	stw	fp,4(sp)
1010df50:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1010df54:	0009883a 	mov	r4,zero
1010df58:	010e3ec0 	call	1010e3ec <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1010df5c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1010df60:	010e4240 	call	1010e424 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1010df64:	01840474 	movhi	r6,4113
1010df68:	31824104 	addi	r6,r6,2308
1010df6c:	01440474 	movhi	r5,4113
1010df70:	29424104 	addi	r5,r5,2308
1010df74:	01040474 	movhi	r4,4113
1010df78:	21024104 	addi	r4,r4,2308
1010df7c:	010fa740 	call	1010fa74 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1010df80:	010f5900 	call	1010f590 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1010df84:	01040474 	movhi	r4,4113
1010df88:	213d7c04 	addi	r4,r4,-2576
1010df8c:	01102340 	call	10110234 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1010df90:	d0a70017 	ldw	r2,-25600(gp)
1010df94:	d0e70117 	ldw	r3,-25596(gp)
1010df98:	d1270217 	ldw	r4,-25592(gp)
1010df9c:	200d883a 	mov	r6,r4
1010dfa0:	180b883a 	mov	r5,r3
1010dfa4:	1009883a 	mov	r4,r2
1010dfa8:	0100a7c0 	call	10100a7c <main>
1010dfac:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1010dfb0:	01000044 	movi	r4,1
1010dfb4:	010da600 	call	1010da60 <close>
  exit (result);
1010dfb8:	e13fff17 	ldw	r4,-4(fp)
1010dfbc:	01102480 	call	10110248 <exit>

1010dfc0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1010dfc0:	defffe04 	addi	sp,sp,-8
1010dfc4:	df000115 	stw	fp,4(sp)
1010dfc8:	df000104 	addi	fp,sp,4
1010dfcc:	e13fff15 	stw	r4,-4(fp)
}
1010dfd0:	0001883a 	nop
1010dfd4:	e037883a 	mov	sp,fp
1010dfd8:	df000017 	ldw	fp,0(sp)
1010dfdc:	dec00104 	addi	sp,sp,4
1010dfe0:	f800283a 	ret

1010dfe4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1010dfe4:	defffe04 	addi	sp,sp,-8
1010dfe8:	df000115 	stw	fp,4(sp)
1010dfec:	df000104 	addi	fp,sp,4
1010dff0:	e13fff15 	stw	r4,-4(fp)
}
1010dff4:	0001883a 	nop
1010dff8:	e037883a 	mov	sp,fp
1010dffc:	df000017 	ldw	fp,0(sp)
1010e000:	dec00104 	addi	sp,sp,4
1010e004:	f800283a 	ret

1010e008 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e008:	defffe04 	addi	sp,sp,-8
1010e00c:	dfc00115 	stw	ra,4(sp)
1010e010:	df000015 	stw	fp,0(sp)
1010e014:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e018:	d0a00b17 	ldw	r2,-32724(gp)
1010e01c:	10000326 	beq	r2,zero,1010e02c <alt_get_errno+0x24>
1010e020:	d0a00b17 	ldw	r2,-32724(gp)
1010e024:	103ee83a 	callr	r2
1010e028:	00000106 	br	1010e030 <alt_get_errno+0x28>
1010e02c:	d0a6ff04 	addi	r2,gp,-25604
}
1010e030:	e037883a 	mov	sp,fp
1010e034:	dfc00117 	ldw	ra,4(sp)
1010e038:	df000017 	ldw	fp,0(sp)
1010e03c:	dec00204 	addi	sp,sp,8
1010e040:	f800283a 	ret

1010e044 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1010e044:	defff904 	addi	sp,sp,-28
1010e048:	dfc00615 	stw	ra,24(sp)
1010e04c:	df000515 	stw	fp,20(sp)
1010e050:	df000504 	addi	fp,sp,20
1010e054:	e13ffd15 	stw	r4,-12(fp)
1010e058:	e17ffe15 	stw	r5,-8(fp)
1010e05c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010e060:	e0bffd17 	ldw	r2,-12(fp)
1010e064:	10000816 	blt	r2,zero,1010e088 <read+0x44>
1010e068:	01400304 	movi	r5,12
1010e06c:	e13ffd17 	ldw	r4,-12(fp)
1010e070:	0100c980 	call	10100c98 <__mulsi3>
1010e074:	1007883a 	mov	r3,r2
1010e078:	00840474 	movhi	r2,4113
1010e07c:	10848104 	addi	r2,r2,4612
1010e080:	1885883a 	add	r2,r3,r2
1010e084:	00000106 	br	1010e08c <read+0x48>
1010e088:	0005883a 	mov	r2,zero
1010e08c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010e090:	e0bffb17 	ldw	r2,-20(fp)
1010e094:	10002226 	beq	r2,zero,1010e120 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010e098:	e0bffb17 	ldw	r2,-20(fp)
1010e09c:	10800217 	ldw	r2,8(r2)
1010e0a0:	108000cc 	andi	r2,r2,3
1010e0a4:	10800060 	cmpeqi	r2,r2,1
1010e0a8:	1000181e 	bne	r2,zero,1010e10c <read+0xc8>
        (fd->dev->read))
1010e0ac:	e0bffb17 	ldw	r2,-20(fp)
1010e0b0:	10800017 	ldw	r2,0(r2)
1010e0b4:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010e0b8:	10001426 	beq	r2,zero,1010e10c <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1010e0bc:	e0bffb17 	ldw	r2,-20(fp)
1010e0c0:	10800017 	ldw	r2,0(r2)
1010e0c4:	10800517 	ldw	r2,20(r2)
1010e0c8:	e0ffff17 	ldw	r3,-4(fp)
1010e0cc:	180d883a 	mov	r6,r3
1010e0d0:	e17ffe17 	ldw	r5,-8(fp)
1010e0d4:	e13ffb17 	ldw	r4,-20(fp)
1010e0d8:	103ee83a 	callr	r2
1010e0dc:	e0bffc15 	stw	r2,-16(fp)
1010e0e0:	e0bffc17 	ldw	r2,-16(fp)
1010e0e4:	1000070e 	bge	r2,zero,1010e104 <read+0xc0>
        {
          ALT_ERRNO = -rval;
1010e0e8:	010e0080 	call	1010e008 <alt_get_errno>
1010e0ec:	1007883a 	mov	r3,r2
1010e0f0:	e0bffc17 	ldw	r2,-16(fp)
1010e0f4:	0085c83a 	sub	r2,zero,r2
1010e0f8:	18800015 	stw	r2,0(r3)
          return -1;
1010e0fc:	00bfffc4 	movi	r2,-1
1010e100:	00000c06 	br	1010e134 <read+0xf0>
        }
        return rval;
1010e104:	e0bffc17 	ldw	r2,-16(fp)
1010e108:	00000a06 	br	1010e134 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
1010e10c:	010e0080 	call	1010e008 <alt_get_errno>
1010e110:	1007883a 	mov	r3,r2
1010e114:	00800344 	movi	r2,13
1010e118:	18800015 	stw	r2,0(r3)
1010e11c:	00000406 	br	1010e130 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1010e120:	010e0080 	call	1010e008 <alt_get_errno>
1010e124:	1007883a 	mov	r3,r2
1010e128:	00801444 	movi	r2,81
1010e12c:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010e130:	00bfffc4 	movi	r2,-1
}
1010e134:	e037883a 	mov	sp,fp
1010e138:	dfc00117 	ldw	ra,4(sp)
1010e13c:	df000017 	ldw	fp,0(sp)
1010e140:	dec00204 	addi	sp,sp,8
1010e144:	f800283a 	ret

1010e148 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1010e148:	defffc04 	addi	sp,sp,-16
1010e14c:	dfc00315 	stw	ra,12(sp)
1010e150:	df000215 	stw	fp,8(sp)
1010e154:	dc000115 	stw	r16,4(sp)
1010e158:	df000204 	addi	fp,sp,8
1010e15c:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
1010e160:	e0bffe17 	ldw	r2,-8(fp)
1010e164:	108000d0 	cmplti	r2,r2,3
1010e168:	1000111e 	bne	r2,zero,1010e1b0 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
1010e16c:	04040474 	movhi	r16,4113
1010e170:	84048104 	addi	r16,r16,4612
1010e174:	e0bffe17 	ldw	r2,-8(fp)
1010e178:	01400304 	movi	r5,12
1010e17c:	1009883a 	mov	r4,r2
1010e180:	0100c980 	call	10100c98 <__mulsi3>
1010e184:	8085883a 	add	r2,r16,r2
1010e188:	10800204 	addi	r2,r2,8
1010e18c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1010e190:	04040474 	movhi	r16,4113
1010e194:	84048104 	addi	r16,r16,4612
1010e198:	e0bffe17 	ldw	r2,-8(fp)
1010e19c:	01400304 	movi	r5,12
1010e1a0:	1009883a 	mov	r4,r2
1010e1a4:	0100c980 	call	10100c98 <__mulsi3>
1010e1a8:	8085883a 	add	r2,r16,r2
1010e1ac:	10000015 	stw	zero,0(r2)
  }
}
1010e1b0:	0001883a 	nop
1010e1b4:	e6ffff04 	addi	sp,fp,-4
1010e1b8:	dfc00217 	ldw	ra,8(sp)
1010e1bc:	df000117 	ldw	fp,4(sp)
1010e1c0:	dc000017 	ldw	r16,0(sp)
1010e1c4:	dec00304 	addi	sp,sp,12
1010e1c8:	f800283a 	ret

1010e1cc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1010e1cc:	defff904 	addi	sp,sp,-28
1010e1d0:	df000615 	stw	fp,24(sp)
1010e1d4:	df000604 	addi	fp,sp,24
1010e1d8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e1dc:	0005303a 	rdctl	r2,status
1010e1e0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e1e4:	e0fffe17 	ldw	r3,-8(fp)
1010e1e8:	00bfff84 	movi	r2,-2
1010e1ec:	1884703a 	and	r2,r3,r2
1010e1f0:	1001703a 	wrctl	status,r2
  
  return context;
1010e1f4:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1010e1f8:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1010e1fc:	d0a00c17 	ldw	r2,-32720(gp)
1010e200:	10c000c4 	addi	r3,r2,3
1010e204:	00bfff04 	movi	r2,-4
1010e208:	1884703a 	and	r2,r3,r2
1010e20c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1010e210:	d0e00c17 	ldw	r3,-32720(gp)
1010e214:	e0bfff17 	ldw	r2,-4(fp)
1010e218:	1887883a 	add	r3,r3,r2
1010e21c:	008404b4 	movhi	r2,4114
1010e220:	10800004 	addi	r2,r2,0
1010e224:	10c0062e 	bgeu	r2,r3,1010e240 <sbrk+0x74>
1010e228:	e0bffb17 	ldw	r2,-20(fp)
1010e22c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e230:	e0bffa17 	ldw	r2,-24(fp)
1010e234:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1010e238:	00bfffc4 	movi	r2,-1
1010e23c:	00000b06 	br	1010e26c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1010e240:	d0a00c17 	ldw	r2,-32720(gp)
1010e244:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
1010e248:	d0e00c17 	ldw	r3,-32720(gp)
1010e24c:	e0bfff17 	ldw	r2,-4(fp)
1010e250:	1885883a 	add	r2,r3,r2
1010e254:	d0a00c15 	stw	r2,-32720(gp)
1010e258:	e0bffb17 	ldw	r2,-20(fp)
1010e25c:	e0bffc15 	stw	r2,-16(fp)
1010e260:	e0bffc17 	ldw	r2,-16(fp)
1010e264:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1010e268:	e0bffd17 	ldw	r2,-12(fp)
} 
1010e26c:	e037883a 	mov	sp,fp
1010e270:	df000017 	ldw	fp,0(sp)
1010e274:	dec00104 	addi	sp,sp,4
1010e278:	f800283a 	ret

1010e27c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e27c:	defffe04 	addi	sp,sp,-8
1010e280:	dfc00115 	stw	ra,4(sp)
1010e284:	df000015 	stw	fp,0(sp)
1010e288:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e28c:	d0a00b17 	ldw	r2,-32724(gp)
1010e290:	10000326 	beq	r2,zero,1010e2a0 <alt_get_errno+0x24>
1010e294:	d0a00b17 	ldw	r2,-32724(gp)
1010e298:	103ee83a 	callr	r2
1010e29c:	00000106 	br	1010e2a4 <alt_get_errno+0x28>
1010e2a0:	d0a6ff04 	addi	r2,gp,-25604
}
1010e2a4:	e037883a 	mov	sp,fp
1010e2a8:	dfc00117 	ldw	ra,4(sp)
1010e2ac:	df000017 	ldw	fp,0(sp)
1010e2b0:	dec00204 	addi	sp,sp,8
1010e2b4:	f800283a 	ret

1010e2b8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1010e2b8:	defff904 	addi	sp,sp,-28
1010e2bc:	dfc00615 	stw	ra,24(sp)
1010e2c0:	df000515 	stw	fp,20(sp)
1010e2c4:	df000504 	addi	fp,sp,20
1010e2c8:	e13ffd15 	stw	r4,-12(fp)
1010e2cc:	e17ffe15 	stw	r5,-8(fp)
1010e2d0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010e2d4:	e0bffd17 	ldw	r2,-12(fp)
1010e2d8:	10000816 	blt	r2,zero,1010e2fc <write+0x44>
1010e2dc:	01400304 	movi	r5,12
1010e2e0:	e13ffd17 	ldw	r4,-12(fp)
1010e2e4:	0100c980 	call	10100c98 <__mulsi3>
1010e2e8:	1007883a 	mov	r3,r2
1010e2ec:	00840474 	movhi	r2,4113
1010e2f0:	10848104 	addi	r2,r2,4612
1010e2f4:	1885883a 	add	r2,r3,r2
1010e2f8:	00000106 	br	1010e300 <write+0x48>
1010e2fc:	0005883a 	mov	r2,zero
1010e300:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010e304:	e0bffb17 	ldw	r2,-20(fp)
1010e308:	10002126 	beq	r2,zero,1010e390 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1010e30c:	e0bffb17 	ldw	r2,-20(fp)
1010e310:	10800217 	ldw	r2,8(r2)
1010e314:	108000cc 	andi	r2,r2,3
1010e318:	10001826 	beq	r2,zero,1010e37c <write+0xc4>
1010e31c:	e0bffb17 	ldw	r2,-20(fp)
1010e320:	10800017 	ldw	r2,0(r2)
1010e324:	10800617 	ldw	r2,24(r2)
1010e328:	10001426 	beq	r2,zero,1010e37c <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1010e32c:	e0bffb17 	ldw	r2,-20(fp)
1010e330:	10800017 	ldw	r2,0(r2)
1010e334:	10800617 	ldw	r2,24(r2)
1010e338:	e0ffff17 	ldw	r3,-4(fp)
1010e33c:	180d883a 	mov	r6,r3
1010e340:	e17ffe17 	ldw	r5,-8(fp)
1010e344:	e13ffb17 	ldw	r4,-20(fp)
1010e348:	103ee83a 	callr	r2
1010e34c:	e0bffc15 	stw	r2,-16(fp)
1010e350:	e0bffc17 	ldw	r2,-16(fp)
1010e354:	1000070e 	bge	r2,zero,1010e374 <write+0xbc>
      {
        ALT_ERRNO = -rval;
1010e358:	010e27c0 	call	1010e27c <alt_get_errno>
1010e35c:	1007883a 	mov	r3,r2
1010e360:	e0bffc17 	ldw	r2,-16(fp)
1010e364:	0085c83a 	sub	r2,zero,r2
1010e368:	18800015 	stw	r2,0(r3)
        return -1;
1010e36c:	00bfffc4 	movi	r2,-1
1010e370:	00000c06 	br	1010e3a4 <write+0xec>
      }
      return rval;
1010e374:	e0bffc17 	ldw	r2,-16(fp)
1010e378:	00000a06 	br	1010e3a4 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
1010e37c:	010e27c0 	call	1010e27c <alt_get_errno>
1010e380:	1007883a 	mov	r3,r2
1010e384:	00800344 	movi	r2,13
1010e388:	18800015 	stw	r2,0(r3)
1010e38c:	00000406 	br	1010e3a0 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1010e390:	010e27c0 	call	1010e27c <alt_get_errno>
1010e394:	1007883a 	mov	r3,r2
1010e398:	00801444 	movi	r2,81
1010e39c:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010e3a0:	00bfffc4 	movi	r2,-1
}
1010e3a4:	e037883a 	mov	sp,fp
1010e3a8:	dfc00117 	ldw	ra,4(sp)
1010e3ac:	df000017 	ldw	fp,0(sp)
1010e3b0:	dec00204 	addi	sp,sp,8
1010e3b4:	f800283a 	ret

1010e3b8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1010e3b8:	defffd04 	addi	sp,sp,-12
1010e3bc:	dfc00215 	stw	ra,8(sp)
1010e3c0:	df000115 	stw	fp,4(sp)
1010e3c4:	df000104 	addi	fp,sp,4
1010e3c8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1010e3cc:	d1600804 	addi	r5,gp,-32736
1010e3d0:	e13fff17 	ldw	r4,-4(fp)
1010e3d4:	010f4ec0 	call	1010f4ec <alt_dev_llist_insert>
}
1010e3d8:	e037883a 	mov	sp,fp
1010e3dc:	dfc00117 	ldw	ra,4(sp)
1010e3e0:	df000017 	ldw	fp,0(sp)
1010e3e4:	dec00204 	addi	sp,sp,8
1010e3e8:	f800283a 	ret

1010e3ec <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1010e3ec:	defffd04 	addi	sp,sp,-12
1010e3f0:	dfc00215 	stw	ra,8(sp)
1010e3f4:	df000115 	stw	fp,4(sp)
1010e3f8:	df000104 	addi	fp,sp,4
1010e3fc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1010e400:	010ff180 	call	1010ff18 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1010e404:	00800044 	movi	r2,1
1010e408:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1010e40c:	0001883a 	nop
1010e410:	e037883a 	mov	sp,fp
1010e414:	dfc00117 	ldw	ra,4(sp)
1010e418:	df000017 	ldw	fp,0(sp)
1010e41c:	dec00204 	addi	sp,sp,8
1010e420:	f800283a 	ret

1010e424 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1010e424:	defffe04 	addi	sp,sp,-8
1010e428:	dfc00115 	stw	ra,4(sp)
1010e42c:	df000015 	stw	fp,0(sp)
1010e430:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1010e434:	000d883a 	mov	r6,zero
1010e438:	000b883a 	mov	r5,zero
1010e43c:	01040474 	movhi	r4,4113
1010e440:	2104eb04 	addi	r4,r4,5036
1010e444:	010e5dc0 	call	1010e5dc <altera_avalon_jtag_uart_init>
1010e448:	01040474 	movhi	r4,4113
1010e44c:	2104e104 	addi	r4,r4,4996
1010e450:	010e3b80 	call	1010e3b8 <alt_dev_reg>
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
1010e454:	01040474 	movhi	r4,4113
1010e458:	2108f904 	addi	r4,r4,9188
1010e45c:	010f6500 	call	1010f650 <alt_fs_reg>
}
1010e460:	0001883a 	nop
1010e464:	e037883a 	mov	sp,fp
1010e468:	dfc00117 	ldw	ra,4(sp)
1010e46c:	df000017 	ldw	fp,0(sp)
1010e470:	dec00204 	addi	sp,sp,8
1010e474:	f800283a 	ret

1010e478 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1010e478:	defffa04 	addi	sp,sp,-24
1010e47c:	dfc00515 	stw	ra,20(sp)
1010e480:	df000415 	stw	fp,16(sp)
1010e484:	df000404 	addi	fp,sp,16
1010e488:	e13ffd15 	stw	r4,-12(fp)
1010e48c:	e17ffe15 	stw	r5,-8(fp)
1010e490:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e494:	e0bffd17 	ldw	r2,-12(fp)
1010e498:	10800017 	ldw	r2,0(r2)
1010e49c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1010e4a0:	e0bffc17 	ldw	r2,-16(fp)
1010e4a4:	10c00a04 	addi	r3,r2,40
1010e4a8:	e0bffd17 	ldw	r2,-12(fp)
1010e4ac:	10800217 	ldw	r2,8(r2)
1010e4b0:	100f883a 	mov	r7,r2
1010e4b4:	e1bfff17 	ldw	r6,-4(fp)
1010e4b8:	e17ffe17 	ldw	r5,-8(fp)
1010e4bc:	1809883a 	mov	r4,r3
1010e4c0:	010eaa00 	call	1010eaa0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1010e4c4:	e037883a 	mov	sp,fp
1010e4c8:	dfc00117 	ldw	ra,4(sp)
1010e4cc:	df000017 	ldw	fp,0(sp)
1010e4d0:	dec00204 	addi	sp,sp,8
1010e4d4:	f800283a 	ret

1010e4d8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1010e4d8:	defffa04 	addi	sp,sp,-24
1010e4dc:	dfc00515 	stw	ra,20(sp)
1010e4e0:	df000415 	stw	fp,16(sp)
1010e4e4:	df000404 	addi	fp,sp,16
1010e4e8:	e13ffd15 	stw	r4,-12(fp)
1010e4ec:	e17ffe15 	stw	r5,-8(fp)
1010e4f0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e4f4:	e0bffd17 	ldw	r2,-12(fp)
1010e4f8:	10800017 	ldw	r2,0(r2)
1010e4fc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1010e500:	e0bffc17 	ldw	r2,-16(fp)
1010e504:	10c00a04 	addi	r3,r2,40
1010e508:	e0bffd17 	ldw	r2,-12(fp)
1010e50c:	10800217 	ldw	r2,8(r2)
1010e510:	100f883a 	mov	r7,r2
1010e514:	e1bfff17 	ldw	r6,-4(fp)
1010e518:	e17ffe17 	ldw	r5,-8(fp)
1010e51c:	1809883a 	mov	r4,r3
1010e520:	010ecbc0 	call	1010ecbc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1010e524:	e037883a 	mov	sp,fp
1010e528:	dfc00117 	ldw	ra,4(sp)
1010e52c:	df000017 	ldw	fp,0(sp)
1010e530:	dec00204 	addi	sp,sp,8
1010e534:	f800283a 	ret

1010e538 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1010e538:	defffc04 	addi	sp,sp,-16
1010e53c:	dfc00315 	stw	ra,12(sp)
1010e540:	df000215 	stw	fp,8(sp)
1010e544:	df000204 	addi	fp,sp,8
1010e548:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e54c:	e0bfff17 	ldw	r2,-4(fp)
1010e550:	10800017 	ldw	r2,0(r2)
1010e554:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1010e558:	e0bffe17 	ldw	r2,-8(fp)
1010e55c:	10c00a04 	addi	r3,r2,40
1010e560:	e0bfff17 	ldw	r2,-4(fp)
1010e564:	10800217 	ldw	r2,8(r2)
1010e568:	100b883a 	mov	r5,r2
1010e56c:	1809883a 	mov	r4,r3
1010e570:	010e9480 	call	1010e948 <altera_avalon_jtag_uart_close>
}
1010e574:	e037883a 	mov	sp,fp
1010e578:	dfc00117 	ldw	ra,4(sp)
1010e57c:	df000017 	ldw	fp,0(sp)
1010e580:	dec00204 	addi	sp,sp,8
1010e584:	f800283a 	ret

1010e588 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1010e588:	defffa04 	addi	sp,sp,-24
1010e58c:	dfc00515 	stw	ra,20(sp)
1010e590:	df000415 	stw	fp,16(sp)
1010e594:	df000404 	addi	fp,sp,16
1010e598:	e13ffd15 	stw	r4,-12(fp)
1010e59c:	e17ffe15 	stw	r5,-8(fp)
1010e5a0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1010e5a4:	e0bffd17 	ldw	r2,-12(fp)
1010e5a8:	10800017 	ldw	r2,0(r2)
1010e5ac:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1010e5b0:	e0bffc17 	ldw	r2,-16(fp)
1010e5b4:	10800a04 	addi	r2,r2,40
1010e5b8:	e1bfff17 	ldw	r6,-4(fp)
1010e5bc:	e17ffe17 	ldw	r5,-8(fp)
1010e5c0:	1009883a 	mov	r4,r2
1010e5c4:	010e9b00 	call	1010e9b0 <altera_avalon_jtag_uart_ioctl>
}
1010e5c8:	e037883a 	mov	sp,fp
1010e5cc:	dfc00117 	ldw	ra,4(sp)
1010e5d0:	df000017 	ldw	fp,0(sp)
1010e5d4:	dec00204 	addi	sp,sp,8
1010e5d8:	f800283a 	ret

1010e5dc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1010e5dc:	defffa04 	addi	sp,sp,-24
1010e5e0:	dfc00515 	stw	ra,20(sp)
1010e5e4:	df000415 	stw	fp,16(sp)
1010e5e8:	df000404 	addi	fp,sp,16
1010e5ec:	e13ffd15 	stw	r4,-12(fp)
1010e5f0:	e17ffe15 	stw	r5,-8(fp)
1010e5f4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e5f8:	e0bffd17 	ldw	r2,-12(fp)
1010e5fc:	00c00044 	movi	r3,1
1010e600:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1010e604:	e0bffd17 	ldw	r2,-12(fp)
1010e608:	10800017 	ldw	r2,0(r2)
1010e60c:	10800104 	addi	r2,r2,4
1010e610:	1007883a 	mov	r3,r2
1010e614:	e0bffd17 	ldw	r2,-12(fp)
1010e618:	10800817 	ldw	r2,32(r2)
1010e61c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1010e620:	e0bffe17 	ldw	r2,-8(fp)
1010e624:	e0ffff17 	ldw	r3,-4(fp)
1010e628:	d8000015 	stw	zero,0(sp)
1010e62c:	e1fffd17 	ldw	r7,-12(fp)
1010e630:	01840474 	movhi	r6,4113
1010e634:	31b9a704 	addi	r6,r6,-6500
1010e638:	180b883a 	mov	r5,r3
1010e63c:	1009883a 	mov	r4,r2
1010e640:	010f6f00 	call	1010f6f0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1010e644:	e0bffd17 	ldw	r2,-12(fp)
1010e648:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1010e64c:	e0bffd17 	ldw	r2,-12(fp)
1010e650:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1010e654:	d0e70417 	ldw	r3,-25584(gp)
1010e658:	e1fffd17 	ldw	r7,-12(fp)
1010e65c:	01840474 	movhi	r6,4113
1010e660:	31ba2a04 	addi	r6,r6,-5976
1010e664:	180b883a 	mov	r5,r3
1010e668:	1009883a 	mov	r4,r2
1010e66c:	010f3640 	call	1010f364 <alt_alarm_start>
1010e670:	1000040e 	bge	r2,zero,1010e684 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1010e674:	e0fffd17 	ldw	r3,-12(fp)
1010e678:	00a00034 	movhi	r2,32768
1010e67c:	10bfffc4 	addi	r2,r2,-1
1010e680:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1010e684:	0001883a 	nop
1010e688:	e037883a 	mov	sp,fp
1010e68c:	dfc00117 	ldw	ra,4(sp)
1010e690:	df000017 	ldw	fp,0(sp)
1010e694:	dec00204 	addi	sp,sp,8
1010e698:	f800283a 	ret

1010e69c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1010e69c:	defff804 	addi	sp,sp,-32
1010e6a0:	df000715 	stw	fp,28(sp)
1010e6a4:	df000704 	addi	fp,sp,28
1010e6a8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1010e6ac:	e0bfff17 	ldw	r2,-4(fp)
1010e6b0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1010e6b4:	e0bffb17 	ldw	r2,-20(fp)
1010e6b8:	10800017 	ldw	r2,0(r2)
1010e6bc:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e6c0:	e0bffc17 	ldw	r2,-16(fp)
1010e6c4:	10800104 	addi	r2,r2,4
1010e6c8:	10800037 	ldwio	r2,0(r2)
1010e6cc:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1010e6d0:	e0bffd17 	ldw	r2,-12(fp)
1010e6d4:	1080c00c 	andi	r2,r2,768
1010e6d8:	10006d26 	beq	r2,zero,1010e890 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1010e6dc:	e0bffd17 	ldw	r2,-12(fp)
1010e6e0:	1080400c 	andi	r2,r2,256
1010e6e4:	10003526 	beq	r2,zero,1010e7bc <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1010e6e8:	00800074 	movhi	r2,1
1010e6ec:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e6f0:	e0bffb17 	ldw	r2,-20(fp)
1010e6f4:	10800a17 	ldw	r2,40(r2)
1010e6f8:	10800044 	addi	r2,r2,1
1010e6fc:	1081ffcc 	andi	r2,r2,2047
1010e700:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1010e704:	e0bffb17 	ldw	r2,-20(fp)
1010e708:	10c00b17 	ldw	r3,44(r2)
1010e70c:	e0bffe17 	ldw	r2,-8(fp)
1010e710:	18801526 	beq	r3,r2,1010e768 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1010e714:	e0bffc17 	ldw	r2,-16(fp)
1010e718:	10800037 	ldwio	r2,0(r2)
1010e71c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1010e720:	e0bff917 	ldw	r2,-28(fp)
1010e724:	10a0000c 	andi	r2,r2,32768
1010e728:	10001126 	beq	r2,zero,1010e770 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1010e72c:	e0bffb17 	ldw	r2,-20(fp)
1010e730:	10800a17 	ldw	r2,40(r2)
1010e734:	e0fff917 	ldw	r3,-28(fp)
1010e738:	1809883a 	mov	r4,r3
1010e73c:	e0fffb17 	ldw	r3,-20(fp)
1010e740:	1885883a 	add	r2,r3,r2
1010e744:	10800e04 	addi	r2,r2,56
1010e748:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e74c:	e0bffb17 	ldw	r2,-20(fp)
1010e750:	10800a17 	ldw	r2,40(r2)
1010e754:	10800044 	addi	r2,r2,1
1010e758:	10c1ffcc 	andi	r3,r2,2047
1010e75c:	e0bffb17 	ldw	r2,-20(fp)
1010e760:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1010e764:	003fe206 	br	1010e6f0 <__alt_data_end+0xfffee6f0>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1010e768:	0001883a 	nop
1010e76c:	00000106 	br	1010e774 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1010e770:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1010e774:	e0bff917 	ldw	r2,-28(fp)
1010e778:	10bfffec 	andhi	r2,r2,65535
1010e77c:	10000f26 	beq	r2,zero,1010e7bc <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e780:	e0bffb17 	ldw	r2,-20(fp)
1010e784:	10c00817 	ldw	r3,32(r2)
1010e788:	00bfff84 	movi	r2,-2
1010e78c:	1886703a 	and	r3,r3,r2
1010e790:	e0bffb17 	ldw	r2,-20(fp)
1010e794:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1010e798:	e0bffc17 	ldw	r2,-16(fp)
1010e79c:	10800104 	addi	r2,r2,4
1010e7a0:	1007883a 	mov	r3,r2
1010e7a4:	e0bffb17 	ldw	r2,-20(fp)
1010e7a8:	10800817 	ldw	r2,32(r2)
1010e7ac:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e7b0:	e0bffc17 	ldw	r2,-16(fp)
1010e7b4:	10800104 	addi	r2,r2,4
1010e7b8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1010e7bc:	e0bffd17 	ldw	r2,-12(fp)
1010e7c0:	1080800c 	andi	r2,r2,512
1010e7c4:	103fbe26 	beq	r2,zero,1010e6c0 <__alt_data_end+0xfffee6c0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1010e7c8:	e0bffd17 	ldw	r2,-12(fp)
1010e7cc:	1004d43a 	srli	r2,r2,16
1010e7d0:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1010e7d4:	00001406 	br	1010e828 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1010e7d8:	e0bffc17 	ldw	r2,-16(fp)
1010e7dc:	e0fffb17 	ldw	r3,-20(fp)
1010e7e0:	18c00d17 	ldw	r3,52(r3)
1010e7e4:	e13ffb17 	ldw	r4,-20(fp)
1010e7e8:	20c7883a 	add	r3,r4,r3
1010e7ec:	18c20e04 	addi	r3,r3,2104
1010e7f0:	18c00003 	ldbu	r3,0(r3)
1010e7f4:	18c03fcc 	andi	r3,r3,255
1010e7f8:	18c0201c 	xori	r3,r3,128
1010e7fc:	18ffe004 	addi	r3,r3,-128
1010e800:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e804:	e0bffb17 	ldw	r2,-20(fp)
1010e808:	10800d17 	ldw	r2,52(r2)
1010e80c:	10800044 	addi	r2,r2,1
1010e810:	10c1ffcc 	andi	r3,r2,2047
1010e814:	e0bffb17 	ldw	r2,-20(fp)
1010e818:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1010e81c:	e0bffa17 	ldw	r2,-24(fp)
1010e820:	10bfffc4 	addi	r2,r2,-1
1010e824:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1010e828:	e0bffa17 	ldw	r2,-24(fp)
1010e82c:	10000526 	beq	r2,zero,1010e844 <altera_avalon_jtag_uart_irq+0x1a8>
1010e830:	e0bffb17 	ldw	r2,-20(fp)
1010e834:	10c00d17 	ldw	r3,52(r2)
1010e838:	e0bffb17 	ldw	r2,-20(fp)
1010e83c:	10800c17 	ldw	r2,48(r2)
1010e840:	18bfe51e 	bne	r3,r2,1010e7d8 <__alt_data_end+0xfffee7d8>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1010e844:	e0bffa17 	ldw	r2,-24(fp)
1010e848:	103f9d26 	beq	r2,zero,1010e6c0 <__alt_data_end+0xfffee6c0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010e84c:	e0bffb17 	ldw	r2,-20(fp)
1010e850:	10c00817 	ldw	r3,32(r2)
1010e854:	00bfff44 	movi	r2,-3
1010e858:	1886703a 	and	r3,r3,r2
1010e85c:	e0bffb17 	ldw	r2,-20(fp)
1010e860:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e864:	e0bffb17 	ldw	r2,-20(fp)
1010e868:	10800017 	ldw	r2,0(r2)
1010e86c:	10800104 	addi	r2,r2,4
1010e870:	1007883a 	mov	r3,r2
1010e874:	e0bffb17 	ldw	r2,-20(fp)
1010e878:	10800817 	ldw	r2,32(r2)
1010e87c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e880:	e0bffc17 	ldw	r2,-16(fp)
1010e884:	10800104 	addi	r2,r2,4
1010e888:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1010e88c:	003f8c06 	br	1010e6c0 <__alt_data_end+0xfffee6c0>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1010e890:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1010e894:	0001883a 	nop
1010e898:	e037883a 	mov	sp,fp
1010e89c:	df000017 	ldw	fp,0(sp)
1010e8a0:	dec00104 	addi	sp,sp,4
1010e8a4:	f800283a 	ret

1010e8a8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1010e8a8:	defff804 	addi	sp,sp,-32
1010e8ac:	df000715 	stw	fp,28(sp)
1010e8b0:	df000704 	addi	fp,sp,28
1010e8b4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1010e8b8:	e0bffb17 	ldw	r2,-20(fp)
1010e8bc:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1010e8c0:	e0bff917 	ldw	r2,-28(fp)
1010e8c4:	10800017 	ldw	r2,0(r2)
1010e8c8:	10800104 	addi	r2,r2,4
1010e8cc:	10800037 	ldwio	r2,0(r2)
1010e8d0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1010e8d4:	e0bffa17 	ldw	r2,-24(fp)
1010e8d8:	1081000c 	andi	r2,r2,1024
1010e8dc:	10000b26 	beq	r2,zero,1010e90c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1010e8e0:	e0bff917 	ldw	r2,-28(fp)
1010e8e4:	10800017 	ldw	r2,0(r2)
1010e8e8:	10800104 	addi	r2,r2,4
1010e8ec:	1007883a 	mov	r3,r2
1010e8f0:	e0bff917 	ldw	r2,-28(fp)
1010e8f4:	10800817 	ldw	r2,32(r2)
1010e8f8:	10810014 	ori	r2,r2,1024
1010e8fc:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1010e900:	e0bff917 	ldw	r2,-28(fp)
1010e904:	10000915 	stw	zero,36(r2)
1010e908:	00000a06 	br	1010e934 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1010e90c:	e0bff917 	ldw	r2,-28(fp)
1010e910:	10c00917 	ldw	r3,36(r2)
1010e914:	00a00034 	movhi	r2,32768
1010e918:	10bfff04 	addi	r2,r2,-4
1010e91c:	10c00536 	bltu	r2,r3,1010e934 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1010e920:	e0bff917 	ldw	r2,-28(fp)
1010e924:	10800917 	ldw	r2,36(r2)
1010e928:	10c00044 	addi	r3,r2,1
1010e92c:	e0bff917 	ldw	r2,-28(fp)
1010e930:	10c00915 	stw	r3,36(r2)
1010e934:	d0a70417 	ldw	r2,-25584(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1010e938:	e037883a 	mov	sp,fp
1010e93c:	df000017 	ldw	fp,0(sp)
1010e940:	dec00104 	addi	sp,sp,4
1010e944:	f800283a 	ret

1010e948 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1010e948:	defffd04 	addi	sp,sp,-12
1010e94c:	df000215 	stw	fp,8(sp)
1010e950:	df000204 	addi	fp,sp,8
1010e954:	e13ffe15 	stw	r4,-8(fp)
1010e958:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010e95c:	00000506 	br	1010e974 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1010e960:	e0bfff17 	ldw	r2,-4(fp)
1010e964:	1090000c 	andi	r2,r2,16384
1010e968:	10000226 	beq	r2,zero,1010e974 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1010e96c:	00bffd44 	movi	r2,-11
1010e970:	00000b06 	br	1010e9a0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010e974:	e0bffe17 	ldw	r2,-8(fp)
1010e978:	10c00d17 	ldw	r3,52(r2)
1010e97c:	e0bffe17 	ldw	r2,-8(fp)
1010e980:	10800c17 	ldw	r2,48(r2)
1010e984:	18800526 	beq	r3,r2,1010e99c <altera_avalon_jtag_uart_close+0x54>
1010e988:	e0bffe17 	ldw	r2,-8(fp)
1010e98c:	10c00917 	ldw	r3,36(r2)
1010e990:	e0bffe17 	ldw	r2,-8(fp)
1010e994:	10800117 	ldw	r2,4(r2)
1010e998:	18bff136 	bltu	r3,r2,1010e960 <__alt_data_end+0xfffee960>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1010e99c:	0005883a 	mov	r2,zero
}
1010e9a0:	e037883a 	mov	sp,fp
1010e9a4:	df000017 	ldw	fp,0(sp)
1010e9a8:	dec00104 	addi	sp,sp,4
1010e9ac:	f800283a 	ret

1010e9b0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1010e9b0:	defffa04 	addi	sp,sp,-24
1010e9b4:	df000515 	stw	fp,20(sp)
1010e9b8:	df000504 	addi	fp,sp,20
1010e9bc:	e13ffd15 	stw	r4,-12(fp)
1010e9c0:	e17ffe15 	stw	r5,-8(fp)
1010e9c4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1010e9c8:	00bff9c4 	movi	r2,-25
1010e9cc:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1010e9d0:	e0bffe17 	ldw	r2,-8(fp)
1010e9d4:	10da8060 	cmpeqi	r3,r2,27137
1010e9d8:	1800031e 	bne	r3,zero,1010e9e8 <altera_avalon_jtag_uart_ioctl+0x38>
1010e9dc:	109a80a0 	cmpeqi	r2,r2,27138
1010e9e0:	1000181e 	bne	r2,zero,1010ea44 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1010e9e4:	00002906 	br	1010ea8c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1010e9e8:	e0bffd17 	ldw	r2,-12(fp)
1010e9ec:	10c00117 	ldw	r3,4(r2)
1010e9f0:	00a00034 	movhi	r2,32768
1010e9f4:	10bfffc4 	addi	r2,r2,-1
1010e9f8:	18802126 	beq	r3,r2,1010ea80 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1010e9fc:	e0bfff17 	ldw	r2,-4(fp)
1010ea00:	10800017 	ldw	r2,0(r2)
1010ea04:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1010ea08:	e0bffc17 	ldw	r2,-16(fp)
1010ea0c:	10800090 	cmplti	r2,r2,2
1010ea10:	1000061e 	bne	r2,zero,1010ea2c <altera_avalon_jtag_uart_ioctl+0x7c>
1010ea14:	e0fffc17 	ldw	r3,-16(fp)
1010ea18:	00a00034 	movhi	r2,32768
1010ea1c:	10bfffc4 	addi	r2,r2,-1
1010ea20:	18800226 	beq	r3,r2,1010ea2c <altera_avalon_jtag_uart_ioctl+0x7c>
1010ea24:	e0bffc17 	ldw	r2,-16(fp)
1010ea28:	00000206 	br	1010ea34 <altera_avalon_jtag_uart_ioctl+0x84>
1010ea2c:	00a00034 	movhi	r2,32768
1010ea30:	10bfff84 	addi	r2,r2,-2
1010ea34:	e0fffd17 	ldw	r3,-12(fp)
1010ea38:	18800115 	stw	r2,4(r3)
      rc = 0;
1010ea3c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010ea40:	00000f06 	br	1010ea80 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1010ea44:	e0bffd17 	ldw	r2,-12(fp)
1010ea48:	10c00117 	ldw	r3,4(r2)
1010ea4c:	00a00034 	movhi	r2,32768
1010ea50:	10bfffc4 	addi	r2,r2,-1
1010ea54:	18800c26 	beq	r3,r2,1010ea88 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1010ea58:	e0bffd17 	ldw	r2,-12(fp)
1010ea5c:	10c00917 	ldw	r3,36(r2)
1010ea60:	e0bffd17 	ldw	r2,-12(fp)
1010ea64:	10800117 	ldw	r2,4(r2)
1010ea68:	1885803a 	cmpltu	r2,r3,r2
1010ea6c:	10c03fcc 	andi	r3,r2,255
1010ea70:	e0bfff17 	ldw	r2,-4(fp)
1010ea74:	10c00015 	stw	r3,0(r2)
      rc = 0;
1010ea78:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010ea7c:	00000206 	br	1010ea88 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1010ea80:	0001883a 	nop
1010ea84:	00000106 	br	1010ea8c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1010ea88:	0001883a 	nop

  default:
    break;
  }

  return rc;
1010ea8c:	e0bffb17 	ldw	r2,-20(fp)
}
1010ea90:	e037883a 	mov	sp,fp
1010ea94:	df000017 	ldw	fp,0(sp)
1010ea98:	dec00104 	addi	sp,sp,4
1010ea9c:	f800283a 	ret

1010eaa0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1010eaa0:	defff304 	addi	sp,sp,-52
1010eaa4:	dfc00c15 	stw	ra,48(sp)
1010eaa8:	df000b15 	stw	fp,44(sp)
1010eaac:	df000b04 	addi	fp,sp,44
1010eab0:	e13ffc15 	stw	r4,-16(fp)
1010eab4:	e17ffd15 	stw	r5,-12(fp)
1010eab8:	e1bffe15 	stw	r6,-8(fp)
1010eabc:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1010eac0:	e0bffd17 	ldw	r2,-12(fp)
1010eac4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010eac8:	00004706 	br	1010ebe8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1010eacc:	e0bffc17 	ldw	r2,-16(fp)
1010ead0:	10800a17 	ldw	r2,40(r2)
1010ead4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1010ead8:	e0bffc17 	ldw	r2,-16(fp)
1010eadc:	10800b17 	ldw	r2,44(r2)
1010eae0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1010eae4:	e0fff717 	ldw	r3,-36(fp)
1010eae8:	e0bff817 	ldw	r2,-32(fp)
1010eaec:	18800536 	bltu	r3,r2,1010eb04 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1010eaf0:	e0fff717 	ldw	r3,-36(fp)
1010eaf4:	e0bff817 	ldw	r2,-32(fp)
1010eaf8:	1885c83a 	sub	r2,r3,r2
1010eafc:	e0bff615 	stw	r2,-40(fp)
1010eb00:	00000406 	br	1010eb14 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1010eb04:	00c20004 	movi	r3,2048
1010eb08:	e0bff817 	ldw	r2,-32(fp)
1010eb0c:	1885c83a 	sub	r2,r3,r2
1010eb10:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010eb14:	e0bff617 	ldw	r2,-40(fp)
1010eb18:	10001e26 	beq	r2,zero,1010eb94 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1010eb1c:	e0fffe17 	ldw	r3,-8(fp)
1010eb20:	e0bff617 	ldw	r2,-40(fp)
1010eb24:	1880022e 	bgeu	r3,r2,1010eb30 <altera_avalon_jtag_uart_read+0x90>
        n = space;
1010eb28:	e0bffe17 	ldw	r2,-8(fp)
1010eb2c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1010eb30:	e0bffc17 	ldw	r2,-16(fp)
1010eb34:	10c00e04 	addi	r3,r2,56
1010eb38:	e0bff817 	ldw	r2,-32(fp)
1010eb3c:	1885883a 	add	r2,r3,r2
1010eb40:	e1bff617 	ldw	r6,-40(fp)
1010eb44:	100b883a 	mov	r5,r2
1010eb48:	e13ff517 	ldw	r4,-44(fp)
1010eb4c:	0100cc00 	call	10100cc0 <memcpy>
      ptr   += n;
1010eb50:	e0fff517 	ldw	r3,-44(fp)
1010eb54:	e0bff617 	ldw	r2,-40(fp)
1010eb58:	1885883a 	add	r2,r3,r2
1010eb5c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1010eb60:	e0fffe17 	ldw	r3,-8(fp)
1010eb64:	e0bff617 	ldw	r2,-40(fp)
1010eb68:	1885c83a 	sub	r2,r3,r2
1010eb6c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010eb70:	e0fff817 	ldw	r3,-32(fp)
1010eb74:	e0bff617 	ldw	r2,-40(fp)
1010eb78:	1885883a 	add	r2,r3,r2
1010eb7c:	10c1ffcc 	andi	r3,r2,2047
1010eb80:	e0bffc17 	ldw	r2,-16(fp)
1010eb84:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1010eb88:	e0bffe17 	ldw	r2,-8(fp)
1010eb8c:	00bfcf16 	blt	zero,r2,1010eacc <__alt_data_end+0xfffeeacc>
1010eb90:	00000106 	br	1010eb98 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1010eb94:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1010eb98:	e0fff517 	ldw	r3,-44(fp)
1010eb9c:	e0bffd17 	ldw	r2,-12(fp)
1010eba0:	1880141e 	bne	r3,r2,1010ebf4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1010eba4:	e0bfff17 	ldw	r2,-4(fp)
1010eba8:	1090000c 	andi	r2,r2,16384
1010ebac:	1000131e 	bne	r2,zero,1010ebfc <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1010ebb0:	0001883a 	nop
1010ebb4:	e0bffc17 	ldw	r2,-16(fp)
1010ebb8:	10c00a17 	ldw	r3,40(r2)
1010ebbc:	e0bff717 	ldw	r2,-36(fp)
1010ebc0:	1880051e 	bne	r3,r2,1010ebd8 <altera_avalon_jtag_uart_read+0x138>
1010ebc4:	e0bffc17 	ldw	r2,-16(fp)
1010ebc8:	10c00917 	ldw	r3,36(r2)
1010ebcc:	e0bffc17 	ldw	r2,-16(fp)
1010ebd0:	10800117 	ldw	r2,4(r2)
1010ebd4:	18bff736 	bltu	r3,r2,1010ebb4 <__alt_data_end+0xfffeebb4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1010ebd8:	e0bffc17 	ldw	r2,-16(fp)
1010ebdc:	10c00a17 	ldw	r3,40(r2)
1010ebe0:	e0bff717 	ldw	r2,-36(fp)
1010ebe4:	18800726 	beq	r3,r2,1010ec04 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010ebe8:	e0bffe17 	ldw	r2,-8(fp)
1010ebec:	00bfb716 	blt	zero,r2,1010eacc <__alt_data_end+0xfffeeacc>
1010ebf0:	00000506 	br	1010ec08 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1010ebf4:	0001883a 	nop
1010ebf8:	00000306 	br	1010ec08 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1010ebfc:	0001883a 	nop
1010ec00:	00000106 	br	1010ec08 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1010ec04:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1010ec08:	e0fff517 	ldw	r3,-44(fp)
1010ec0c:	e0bffd17 	ldw	r2,-12(fp)
1010ec10:	18801826 	beq	r3,r2,1010ec74 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010ec14:	0005303a 	rdctl	r2,status
1010ec18:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ec1c:	e0fffb17 	ldw	r3,-20(fp)
1010ec20:	00bfff84 	movi	r2,-2
1010ec24:	1884703a 	and	r2,r3,r2
1010ec28:	1001703a 	wrctl	status,r2
  
  return context;
1010ec2c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1010ec30:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010ec34:	e0bffc17 	ldw	r2,-16(fp)
1010ec38:	10800817 	ldw	r2,32(r2)
1010ec3c:	10c00054 	ori	r3,r2,1
1010ec40:	e0bffc17 	ldw	r2,-16(fp)
1010ec44:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010ec48:	e0bffc17 	ldw	r2,-16(fp)
1010ec4c:	10800017 	ldw	r2,0(r2)
1010ec50:	10800104 	addi	r2,r2,4
1010ec54:	1007883a 	mov	r3,r2
1010ec58:	e0bffc17 	ldw	r2,-16(fp)
1010ec5c:	10800817 	ldw	r2,32(r2)
1010ec60:	18800035 	stwio	r2,0(r3)
1010ec64:	e0bffa17 	ldw	r2,-24(fp)
1010ec68:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ec6c:	e0bff917 	ldw	r2,-28(fp)
1010ec70:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1010ec74:	e0fff517 	ldw	r3,-44(fp)
1010ec78:	e0bffd17 	ldw	r2,-12(fp)
1010ec7c:	18800426 	beq	r3,r2,1010ec90 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1010ec80:	e0fff517 	ldw	r3,-44(fp)
1010ec84:	e0bffd17 	ldw	r2,-12(fp)
1010ec88:	1885c83a 	sub	r2,r3,r2
1010ec8c:	00000606 	br	1010eca8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1010ec90:	e0bfff17 	ldw	r2,-4(fp)
1010ec94:	1090000c 	andi	r2,r2,16384
1010ec98:	10000226 	beq	r2,zero,1010eca4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1010ec9c:	00bffd44 	movi	r2,-11
1010eca0:	00000106 	br	1010eca8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1010eca4:	00bffec4 	movi	r2,-5
}
1010eca8:	e037883a 	mov	sp,fp
1010ecac:	dfc00117 	ldw	ra,4(sp)
1010ecb0:	df000017 	ldw	fp,0(sp)
1010ecb4:	dec00204 	addi	sp,sp,8
1010ecb8:	f800283a 	ret

1010ecbc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1010ecbc:	defff304 	addi	sp,sp,-52
1010ecc0:	dfc00c15 	stw	ra,48(sp)
1010ecc4:	df000b15 	stw	fp,44(sp)
1010ecc8:	df000b04 	addi	fp,sp,44
1010eccc:	e13ffc15 	stw	r4,-16(fp)
1010ecd0:	e17ffd15 	stw	r5,-12(fp)
1010ecd4:	e1bffe15 	stw	r6,-8(fp)
1010ecd8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1010ecdc:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1010ece0:	e0bffd17 	ldw	r2,-12(fp)
1010ece4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010ece8:	00003706 	br	1010edc8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1010ecec:	e0bffc17 	ldw	r2,-16(fp)
1010ecf0:	10800c17 	ldw	r2,48(r2)
1010ecf4:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1010ecf8:	e0bffc17 	ldw	r2,-16(fp)
1010ecfc:	10800d17 	ldw	r2,52(r2)
1010ed00:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1010ed04:	e0fff917 	ldw	r3,-28(fp)
1010ed08:	e0bff517 	ldw	r2,-44(fp)
1010ed0c:	1880062e 	bgeu	r3,r2,1010ed28 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1010ed10:	e0fff517 	ldw	r3,-44(fp)
1010ed14:	e0bff917 	ldw	r2,-28(fp)
1010ed18:	1885c83a 	sub	r2,r3,r2
1010ed1c:	10bfffc4 	addi	r2,r2,-1
1010ed20:	e0bff615 	stw	r2,-40(fp)
1010ed24:	00000b06 	br	1010ed54 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1010ed28:	e0bff517 	ldw	r2,-44(fp)
1010ed2c:	10000526 	beq	r2,zero,1010ed44 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1010ed30:	00c20004 	movi	r3,2048
1010ed34:	e0bff917 	ldw	r2,-28(fp)
1010ed38:	1885c83a 	sub	r2,r3,r2
1010ed3c:	e0bff615 	stw	r2,-40(fp)
1010ed40:	00000406 	br	1010ed54 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1010ed44:	00c1ffc4 	movi	r3,2047
1010ed48:	e0bff917 	ldw	r2,-28(fp)
1010ed4c:	1885c83a 	sub	r2,r3,r2
1010ed50:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010ed54:	e0bff617 	ldw	r2,-40(fp)
1010ed58:	10001e26 	beq	r2,zero,1010edd4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1010ed5c:	e0fffe17 	ldw	r3,-8(fp)
1010ed60:	e0bff617 	ldw	r2,-40(fp)
1010ed64:	1880022e 	bgeu	r3,r2,1010ed70 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1010ed68:	e0bffe17 	ldw	r2,-8(fp)
1010ed6c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1010ed70:	e0bffc17 	ldw	r2,-16(fp)
1010ed74:	10c20e04 	addi	r3,r2,2104
1010ed78:	e0bff917 	ldw	r2,-28(fp)
1010ed7c:	1885883a 	add	r2,r3,r2
1010ed80:	e1bff617 	ldw	r6,-40(fp)
1010ed84:	e17ffd17 	ldw	r5,-12(fp)
1010ed88:	1009883a 	mov	r4,r2
1010ed8c:	0100cc00 	call	10100cc0 <memcpy>
      ptr   += n;
1010ed90:	e0fffd17 	ldw	r3,-12(fp)
1010ed94:	e0bff617 	ldw	r2,-40(fp)
1010ed98:	1885883a 	add	r2,r3,r2
1010ed9c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1010eda0:	e0fffe17 	ldw	r3,-8(fp)
1010eda4:	e0bff617 	ldw	r2,-40(fp)
1010eda8:	1885c83a 	sub	r2,r3,r2
1010edac:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010edb0:	e0fff917 	ldw	r3,-28(fp)
1010edb4:	e0bff617 	ldw	r2,-40(fp)
1010edb8:	1885883a 	add	r2,r3,r2
1010edbc:	10c1ffcc 	andi	r3,r2,2047
1010edc0:	e0bffc17 	ldw	r2,-16(fp)
1010edc4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010edc8:	e0bffe17 	ldw	r2,-8(fp)
1010edcc:	00bfc716 	blt	zero,r2,1010ecec <__alt_data_end+0xfffeecec>
1010edd0:	00000106 	br	1010edd8 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1010edd4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010edd8:	0005303a 	rdctl	r2,status
1010eddc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ede0:	e0fffb17 	ldw	r3,-20(fp)
1010ede4:	00bfff84 	movi	r2,-2
1010ede8:	1884703a 	and	r2,r3,r2
1010edec:	1001703a 	wrctl	status,r2
  
  return context;
1010edf0:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1010edf4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010edf8:	e0bffc17 	ldw	r2,-16(fp)
1010edfc:	10800817 	ldw	r2,32(r2)
1010ee00:	10c00094 	ori	r3,r2,2
1010ee04:	e0bffc17 	ldw	r2,-16(fp)
1010ee08:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010ee0c:	e0bffc17 	ldw	r2,-16(fp)
1010ee10:	10800017 	ldw	r2,0(r2)
1010ee14:	10800104 	addi	r2,r2,4
1010ee18:	1007883a 	mov	r3,r2
1010ee1c:	e0bffc17 	ldw	r2,-16(fp)
1010ee20:	10800817 	ldw	r2,32(r2)
1010ee24:	18800035 	stwio	r2,0(r3)
1010ee28:	e0bffa17 	ldw	r2,-24(fp)
1010ee2c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ee30:	e0bff817 	ldw	r2,-32(fp)
1010ee34:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1010ee38:	e0bffe17 	ldw	r2,-8(fp)
1010ee3c:	0080100e 	bge	zero,r2,1010ee80 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1010ee40:	e0bfff17 	ldw	r2,-4(fp)
1010ee44:	1090000c 	andi	r2,r2,16384
1010ee48:	1000101e 	bne	r2,zero,1010ee8c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1010ee4c:	0001883a 	nop
1010ee50:	e0bffc17 	ldw	r2,-16(fp)
1010ee54:	10c00d17 	ldw	r3,52(r2)
1010ee58:	e0bff517 	ldw	r2,-44(fp)
1010ee5c:	1880051e 	bne	r3,r2,1010ee74 <altera_avalon_jtag_uart_write+0x1b8>
1010ee60:	e0bffc17 	ldw	r2,-16(fp)
1010ee64:	10c00917 	ldw	r3,36(r2)
1010ee68:	e0bffc17 	ldw	r2,-16(fp)
1010ee6c:	10800117 	ldw	r2,4(r2)
1010ee70:	18bff736 	bltu	r3,r2,1010ee50 <__alt_data_end+0xfffeee50>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1010ee74:	e0bffc17 	ldw	r2,-16(fp)
1010ee78:	10800917 	ldw	r2,36(r2)
1010ee7c:	1000051e 	bne	r2,zero,1010ee94 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1010ee80:	e0bffe17 	ldw	r2,-8(fp)
1010ee84:	00bfd016 	blt	zero,r2,1010edc8 <__alt_data_end+0xfffeedc8>
1010ee88:	00000306 	br	1010ee98 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1010ee8c:	0001883a 	nop
1010ee90:	00000106 	br	1010ee98 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1010ee94:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1010ee98:	e0fffd17 	ldw	r3,-12(fp)
1010ee9c:	e0bff717 	ldw	r2,-36(fp)
1010eea0:	18800426 	beq	r3,r2,1010eeb4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1010eea4:	e0fffd17 	ldw	r3,-12(fp)
1010eea8:	e0bff717 	ldw	r2,-36(fp)
1010eeac:	1885c83a 	sub	r2,r3,r2
1010eeb0:	00000606 	br	1010eecc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1010eeb4:	e0bfff17 	ldw	r2,-4(fp)
1010eeb8:	1090000c 	andi	r2,r2,16384
1010eebc:	10000226 	beq	r2,zero,1010eec8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1010eec0:	00bffd44 	movi	r2,-11
1010eec4:	00000106 	br	1010eecc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1010eec8:	00bffec4 	movi	r2,-5
}
1010eecc:	e037883a 	mov	sp,fp
1010eed0:	dfc00117 	ldw	ra,4(sp)
1010eed4:	df000017 	ldw	fp,0(sp)
1010eed8:	dec00204 	addi	sp,sp,8
1010eedc:	f800283a 	ret

1010eee0 <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
1010eee0:	defff404 	addi	sp,sp,-48
1010eee4:	df000b15 	stw	fp,44(sp)
1010eee8:	df000b04 	addi	fp,sp,44
1010eeec:	e13ffc15 	stw	r4,-16(fp)
1010eef0:	e17ffd15 	stw	r5,-12(fp)
1010eef4:	e1bffe15 	stw	r6,-8(fp)
1010eef8:	e1ffff15 	stw	r7,-4(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
1010eefc:	e0bffc17 	ldw	r2,-16(fp)
1010ef00:	10800017 	ldw	r2,0(r2)
1010ef04:	e0bff515 	stw	r2,-44(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
1010ef08:	e0bff517 	ldw	r2,-44(fp)
1010ef0c:	10800217 	ldw	r2,8(r2)
1010ef10:	e0bff615 	stw	r2,-40(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
1010ef14:	e0bff617 	ldw	r2,-40(fp)
1010ef18:	10bfffc4 	addi	r2,r2,-1
1010ef1c:	e0bffb15 	stw	r2,-20(fp)

  while (*++ptr != 0)
1010ef20:	e0bffb17 	ldw	r2,-20(fp)
1010ef24:	10800044 	addi	r2,r2,1
1010ef28:	e0bffb15 	stw	r2,-20(fp)
1010ef2c:	e0bffb17 	ldw	r2,-20(fp)
1010ef30:	10800003 	ldbu	r2,0(r2)
1010ef34:	10803fcc 	andi	r2,r2,255
1010ef38:	1080201c 	xori	r2,r2,128
1010ef3c:	10bfe004 	addi	r2,r2,-128
1010ef40:	103ff71e 	bne	r2,zero,1010ef20 <__alt_data_end+0xfffeef20>
    ;

  return ptr - string;
1010ef44:	e0fffb17 	ldw	r3,-20(fp)
1010ef48:	e0bff617 	ldw	r2,-40(fp)
1010ef4c:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
1010ef50:	10800044 	addi	r2,r2,1
1010ef54:	1007883a 	mov	r3,r2
1010ef58:	e0bffd17 	ldw	r2,-12(fp)
1010ef5c:	10c5883a 	add	r2,r2,r3
1010ef60:	e0bffd15 	stw	r2,-12(fp)

  r3 = (int)&hcinfo;
1010ef64:	d0a00d04 	addi	r2,gp,-32716
1010ef68:	1007883a 	mov	r3,r2
  r4 = (int)name;
1010ef6c:	e0bffd17 	ldw	r2,-12(fp)
1010ef70:	1009883a 	mov	r4,r2
  r5 = flags;
1010ef74:	e17ffe17 	ldw	r5,-8(fp)
  r6 = mode;
1010ef78:	e1bfff17 	ldw	r6,-4(fp)
1010ef7c:	e0bffd17 	ldw	r2,-12(fp)
1010ef80:	e0bff915 	stw	r2,-28(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
1010ef84:	e0bff917 	ldw	r2,-28(fp)
1010ef88:	10bfffc4 	addi	r2,r2,-1
1010ef8c:	e0bffa15 	stw	r2,-24(fp)

  while (*++ptr != 0)
1010ef90:	e0bffa17 	ldw	r2,-24(fp)
1010ef94:	10800044 	addi	r2,r2,1
1010ef98:	e0bffa15 	stw	r2,-24(fp)
1010ef9c:	e0bffa17 	ldw	r2,-24(fp)
1010efa0:	10800003 	ldbu	r2,0(r2)
1010efa4:	10803fcc 	andi	r2,r2,255
1010efa8:	1080201c 	xori	r2,r2,128
1010efac:	10bfe004 	addi	r2,r2,-128
1010efb0:	103ff71e 	bne	r2,zero,1010ef90 <__alt_data_end+0xfffeef90>
    ;

  return ptr - string;
1010efb4:	e1fffa17 	ldw	r7,-24(fp)
1010efb8:	e0bff917 	ldw	r2,-28(fp)
1010efbc:	3885c83a 	sub	r2,r7,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
1010efc0:	100f883a 	mov	r7,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6), "r" (r7) : "memory" );
1010efc4:	003da07a 	break	1

  handle = (void *)r2;
1010efc8:	e0bff715 	stw	r2,-36(fp)
  error = r3;
1010efcc:	e0fff815 	stw	r3,-32(fp)

  if (error == 0)
1010efd0:	e0bff817 	ldw	r2,-32(fp)
1010efd4:	1000031e 	bne	r2,zero,1010efe4 <alt_hostfs_open+0x104>
    fd->priv = handle;
1010efd8:	e0bffc17 	ldw	r2,-16(fp)
1010efdc:	e0fff717 	ldw	r3,-36(fp)
1010efe0:	10c00115 	stw	r3,4(r2)

  return -error;
1010efe4:	e0bff817 	ldw	r2,-32(fp)
1010efe8:	0085c83a 	sub	r2,zero,r2
}
1010efec:	e037883a 	mov	sp,fp
1010eff0:	df000017 	ldw	fp,0(sp)
1010eff4:	dec00104 	addi	sp,sp,4
1010eff8:	f800283a 	ret

1010effc <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
1010effc:	defffd04 	addi	sp,sp,-12
1010f000:	df000215 	stw	fp,8(sp)
1010f004:	df000204 	addi	fp,sp,8
1010f008:	e13fff15 	stw	r4,-4(fp)

  /* Input and output parameters for the hostcall */
  register int r3 asm ("r3");
  register int r4 asm ("r4");

  r3 = (int)&hcinfo;
1010f00c:	d0a01004 	addi	r2,gp,-32704
1010f010:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010f014:	e0bfff17 	ldw	r2,-4(fp)
1010f018:	10800117 	ldw	r2,4(r2)
1010f01c:	1009883a 	mov	r4,r2

  __asm__ volatile("break 1" : "+r" (r3) : "r" (r4) );
1010f020:	003da07a 	break	1

  error = r3;
1010f024:	e0fffe15 	stw	r3,-8(fp)

  return -error;
1010f028:	e0bffe17 	ldw	r2,-8(fp)
1010f02c:	0085c83a 	sub	r2,zero,r2
}
1010f030:	e037883a 	mov	sp,fp
1010f034:	df000017 	ldw	fp,0(sp)
1010f038:	dec00104 	addi	sp,sp,4
1010f03c:	f800283a 	ret

1010f040 <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
1010f040:	defffa04 	addi	sp,sp,-24
1010f044:	df000515 	stw	fp,20(sp)
1010f048:	df000504 	addi	fp,sp,20
1010f04c:	e13ffd15 	stw	r4,-12(fp)
1010f050:	e17ffe15 	stw	r5,-8(fp)
1010f054:	e1bfff15 	stw	r6,-4(fp)
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");


  r3 = (int)&hcinfo;
1010f058:	d0a01304 	addi	r2,gp,-32692
1010f05c:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010f060:	e0bffd17 	ldw	r2,-12(fp)
1010f064:	10800117 	ldw	r2,4(r2)
1010f068:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
1010f06c:	e0bffe17 	ldw	r2,-8(fp)
1010f070:	100b883a 	mov	r5,r2
  r6 = len;
1010f074:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
1010f078:	003da07a 	break	1

  rc = r2;
1010f07c:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
1010f080:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
1010f084:	e0bffc17 	ldw	r2,-16(fp)
1010f088:	10000326 	beq	r2,zero,1010f098 <alt_hostfs_read+0x58>
1010f08c:	e0bffc17 	ldw	r2,-16(fp)
1010f090:	0085c83a 	sub	r2,zero,r2
1010f094:	00000106 	br	1010f09c <alt_hostfs_read+0x5c>
1010f098:	e0bffb17 	ldw	r2,-20(fp)
}
1010f09c:	e037883a 	mov	sp,fp
1010f0a0:	df000017 	ldw	fp,0(sp)
1010f0a4:	dec00104 	addi	sp,sp,4
1010f0a8:	f800283a 	ret

1010f0ac <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
1010f0ac:	defffa04 	addi	sp,sp,-24
1010f0b0:	df000515 	stw	fp,20(sp)
1010f0b4:	df000504 	addi	fp,sp,20
1010f0b8:	e13ffd15 	stw	r4,-12(fp)
1010f0bc:	e17ffe15 	stw	r5,-8(fp)
1010f0c0:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
1010f0c4:	d0a01604 	addi	r2,gp,-32680
1010f0c8:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010f0cc:	e0bffd17 	ldw	r2,-12(fp)
1010f0d0:	10800117 	ldw	r2,4(r2)
1010f0d4:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
1010f0d8:	e0bffe17 	ldw	r2,-8(fp)
1010f0dc:	100b883a 	mov	r5,r2
  r6 = len;
1010f0e0:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
1010f0e4:	003da07a 	break	1

  rc = r2;
1010f0e8:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
1010f0ec:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
1010f0f0:	e0bffc17 	ldw	r2,-16(fp)
1010f0f4:	10000326 	beq	r2,zero,1010f104 <alt_hostfs_write+0x58>
1010f0f8:	e0bffc17 	ldw	r2,-16(fp)
1010f0fc:	0085c83a 	sub	r2,zero,r2
1010f100:	00000106 	br	1010f108 <alt_hostfs_write+0x5c>
1010f104:	e0bffb17 	ldw	r2,-20(fp)
}
1010f108:	e037883a 	mov	sp,fp
1010f10c:	df000017 	ldw	fp,0(sp)
1010f110:	dec00104 	addi	sp,sp,4
1010f114:	f800283a 	ret

1010f118 <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
1010f118:	defffa04 	addi	sp,sp,-24
1010f11c:	df000515 	stw	fp,20(sp)
1010f120:	df000504 	addi	fp,sp,20
1010f124:	e13ffd15 	stw	r4,-12(fp)
1010f128:	e17ffe15 	stw	r5,-8(fp)
1010f12c:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
1010f130:	d0a01904 	addi	r2,gp,-32668
1010f134:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010f138:	e0bffd17 	ldw	r2,-12(fp)
1010f13c:	10800117 	ldw	r2,4(r2)
1010f140:	1009883a 	mov	r4,r2
  r5 = ptr;
1010f144:	e17ffe17 	ldw	r5,-8(fp)
  r6 = dir;
1010f148:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
1010f14c:	003da07a 	break	1

  rc = r2;
1010f150:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
1010f154:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
1010f158:	e0bffc17 	ldw	r2,-16(fp)
1010f15c:	10000326 	beq	r2,zero,1010f16c <alt_hostfs_seek+0x54>
1010f160:	e0bffc17 	ldw	r2,-16(fp)
1010f164:	0085c83a 	sub	r2,zero,r2
1010f168:	00000106 	br	1010f170 <alt_hostfs_seek+0x58>
1010f16c:	e0bffb17 	ldw	r2,-20(fp)
}
1010f170:	e037883a 	mov	sp,fp
1010f174:	df000017 	ldw	fp,0(sp)
1010f178:	dec00104 	addi	sp,sp,4
1010f17c:	f800283a 	ret

1010f180 <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
1010f180:	deffe904 	addi	sp,sp,-92
1010f184:	df001615 	stw	fp,88(sp)
1010f188:	df001604 	addi	fp,sp,88
1010f18c:	e13ffe15 	stw	r4,-8(fp)
1010f190:	e17fff15 	stw	r5,-4(fp)
  register int r2 asm ("r2");
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");

  r3 = (int)&hcinfo;
1010f194:	d0a01c04 	addi	r2,gp,-32656
1010f198:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010f19c:	e0bffe17 	ldw	r2,-8(fp)
1010f1a0:	10800117 	ldw	r2,4(r2)
1010f1a4:	1009883a 	mov	r4,r2
  r5 = (int)&hoststat;
1010f1a8:	e0bfee04 	addi	r2,fp,-72
1010f1ac:	100b883a 	mov	r5,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5) : "memory" );
1010f1b0:	003da07a 	break	1

  rc = r2;
1010f1b4:	e0bfeb15 	stw	r2,-84(fp)
  error = r3;
1010f1b8:	e0ffec15 	stw	r3,-80(fp)

  if (error == 0)
1010f1bc:	e0bfec17 	ldw	r2,-80(fp)
1010f1c0:	1000621e 	bne	r2,zero,1010f34c <alt_hostfs_fstat+0x1cc>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
1010f1c4:	e0bfee04 	addi	r2,fp,-72
1010f1c8:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
1010f1cc:	e0bfea17 	ldw	r2,-88(fp)
1010f1d0:	10801004 	addi	r2,r2,64
1010f1d4:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
1010f1d8:	00001606 	br	1010f234 <alt_hostfs_fstat+0xb4>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
1010f1dc:	e0bfea17 	ldw	r2,-88(fp)
1010f1e0:	10800017 	ldw	r2,0(r2)
1010f1e4:	1006d63a 	srli	r3,r2,24
             ((*ptr & 0x00FF0000) >> 8)  |
1010f1e8:	e0bfea17 	ldw	r2,-88(fp)
1010f1ec:	10800017 	ldw	r2,0(r2)
1010f1f0:	10803fec 	andhi	r2,r2,255
1010f1f4:	1004d23a 	srli	r2,r2,8

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
1010f1f8:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
1010f1fc:	e0bfea17 	ldw	r2,-88(fp)
1010f200:	10800017 	ldw	r2,0(r2)
1010f204:	10bfc00c 	andi	r2,r2,65280
1010f208:	1004923a 	slli	r2,r2,8
#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
1010f20c:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
1010f210:	e0bfea17 	ldw	r2,-88(fp)
1010f214:	10800017 	ldw	r2,0(r2)
1010f218:	1004963a 	slli	r2,r2,24
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
1010f21c:	1886b03a 	or	r3,r3,r2

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
1010f220:	e0bfea17 	ldw	r2,-88(fp)
1010f224:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
1010f228:	e0bfea17 	ldw	r2,-88(fp)
1010f22c:	10800104 	addi	r2,r2,4
1010f230:	e0bfea15 	stw	r2,-88(fp)
1010f234:	e0ffea17 	ldw	r3,-88(fp)
1010f238:	e0bfed17 	ldw	r2,-76(fp)
1010f23c:	18bfe736 	bltu	r3,r2,1010f1dc <__alt_data_end+0xfffef1dc>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
1010f240:	e0bfff17 	ldw	r2,-4(fp)
1010f244:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
1010f248:	e0bfea17 	ldw	r2,-88(fp)
1010f24c:	10800f04 	addi	r2,r2,60
1010f250:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
1010f254:	00000506 	br	1010f26c <alt_hostfs_fstat+0xec>
      *ptr = 0;
1010f258:	e0bfea17 	ldw	r2,-88(fp)
1010f25c:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
1010f260:	e0bfea17 	ldw	r2,-88(fp)
1010f264:	10800104 	addi	r2,r2,4
1010f268:	e0bfea15 	stw	r2,-88(fp)
1010f26c:	e0ffea17 	ldw	r3,-88(fp)
1010f270:	e0bfed17 	ldw	r2,-76(fp)
1010f274:	18bff836 	bltu	r3,r2,1010f258 <__alt_data_end+0xfffef258>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
1010f278:	e0bfee17 	ldw	r2,-72(fp)
1010f27c:	1007883a 	mov	r3,r2
1010f280:	e0bfff17 	ldw	r2,-4(fp)
1010f284:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
1010f288:	e0bfef17 	ldw	r2,-68(fp)
1010f28c:	1007883a 	mov	r3,r2
1010f290:	e0bfff17 	ldw	r2,-4(fp)
1010f294:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
1010f298:	e0fff017 	ldw	r3,-64(fp)
1010f29c:	e0bfff17 	ldw	r2,-4(fp)
1010f2a0:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
1010f2a4:	e0bff117 	ldw	r2,-60(fp)
1010f2a8:	1007883a 	mov	r3,r2
1010f2ac:	e0bfff17 	ldw	r2,-4(fp)
1010f2b0:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
1010f2b4:	e0bff217 	ldw	r2,-56(fp)
1010f2b8:	1007883a 	mov	r3,r2
1010f2bc:	e0bfff17 	ldw	r2,-4(fp)
1010f2c0:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
1010f2c4:	e0bff317 	ldw	r2,-52(fp)
1010f2c8:	1007883a 	mov	r3,r2
1010f2cc:	e0bfff17 	ldw	r2,-4(fp)
1010f2d0:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
1010f2d4:	e0bff417 	ldw	r2,-48(fp)
1010f2d8:	1007883a 	mov	r3,r2
1010f2dc:	e0bfff17 	ldw	r2,-4(fp)
1010f2e0:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
1010f2e4:	e0bff617 	ldw	r2,-40(fp)
1010f2e8:	1007883a 	mov	r3,r2
1010f2ec:	e0bfff17 	ldw	r2,-4(fp)
1010f2f0:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
1010f2f4:	e0bffb17 	ldw	r2,-20(fp)
1010f2f8:	1007883a 	mov	r3,r2
1010f2fc:	e0bfff17 	ldw	r2,-4(fp)
1010f300:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
1010f304:	e0bffc17 	ldw	r2,-16(fp)
1010f308:	1007883a 	mov	r3,r2
1010f30c:	e0bfff17 	ldw	r2,-4(fp)
1010f310:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
1010f314:	e0bffd17 	ldw	r2,-12(fp)
1010f318:	1007883a 	mov	r3,r2
1010f31c:	e0bfff17 	ldw	r2,-4(fp)
1010f320:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
1010f324:	e0bff817 	ldw	r2,-32(fp)
1010f328:	1007883a 	mov	r3,r2
1010f32c:	e0bfff17 	ldw	r2,-4(fp)
1010f330:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
1010f334:	e0bffa17 	ldw	r2,-24(fp)
1010f338:	1007883a 	mov	r3,r2
1010f33c:	e0bfff17 	ldw	r2,-4(fp)
1010f340:	10c00c15 	stw	r3,48(r2)

    return rc;
1010f344:	e0bfeb17 	ldw	r2,-84(fp)
1010f348:	00000206 	br	1010f354 <alt_hostfs_fstat+0x1d4>
  }
  else
    return -error;
1010f34c:	e0bfec17 	ldw	r2,-80(fp)
1010f350:	0085c83a 	sub	r2,zero,r2
}
1010f354:	e037883a 	mov	sp,fp
1010f358:	df000017 	ldw	fp,0(sp)
1010f35c:	dec00104 	addi	sp,sp,4
1010f360:	f800283a 	ret

1010f364 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1010f364:	defff504 	addi	sp,sp,-44
1010f368:	df000a15 	stw	fp,40(sp)
1010f36c:	df000a04 	addi	fp,sp,40
1010f370:	e13ffc15 	stw	r4,-16(fp)
1010f374:	e17ffd15 	stw	r5,-12(fp)
1010f378:	e1bffe15 	stw	r6,-8(fp)
1010f37c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1010f380:	e03ff615 	stw	zero,-40(fp)
1010f384:	d0a70417 	ldw	r2,-25584(gp)
  
  if (alt_ticks_per_second ())
1010f388:	10003c26 	beq	r2,zero,1010f47c <alt_alarm_start+0x118>
  {
    if (alarm)
1010f38c:	e0bffc17 	ldw	r2,-16(fp)
1010f390:	10003826 	beq	r2,zero,1010f474 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
1010f394:	e0bffc17 	ldw	r2,-16(fp)
1010f398:	e0fffe17 	ldw	r3,-8(fp)
1010f39c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1010f3a0:	e0bffc17 	ldw	r2,-16(fp)
1010f3a4:	e0ffff17 	ldw	r3,-4(fp)
1010f3a8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f3ac:	0005303a 	rdctl	r2,status
1010f3b0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f3b4:	e0fff917 	ldw	r3,-28(fp)
1010f3b8:	00bfff84 	movi	r2,-2
1010f3bc:	1884703a 	and	r2,r3,r2
1010f3c0:	1001703a 	wrctl	status,r2
  
  return context;
1010f3c4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1010f3c8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1010f3cc:	d0a70517 	ldw	r2,-25580(gp)
      
      current_nticks = alt_nticks();
1010f3d0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1010f3d4:	e0fffd17 	ldw	r3,-12(fp)
1010f3d8:	e0bff617 	ldw	r2,-40(fp)
1010f3dc:	1885883a 	add	r2,r3,r2
1010f3e0:	10c00044 	addi	r3,r2,1
1010f3e4:	e0bffc17 	ldw	r2,-16(fp)
1010f3e8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1010f3ec:	e0bffc17 	ldw	r2,-16(fp)
1010f3f0:	10c00217 	ldw	r3,8(r2)
1010f3f4:	e0bff617 	ldw	r2,-40(fp)
1010f3f8:	1880042e 	bgeu	r3,r2,1010f40c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
1010f3fc:	e0bffc17 	ldw	r2,-16(fp)
1010f400:	00c00044 	movi	r3,1
1010f404:	10c00405 	stb	r3,16(r2)
1010f408:	00000206 	br	1010f414 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
1010f40c:	e0bffc17 	ldw	r2,-16(fp)
1010f410:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1010f414:	e0bffc17 	ldw	r2,-16(fp)
1010f418:	d0e02004 	addi	r3,gp,-32640
1010f41c:	e0fffa15 	stw	r3,-24(fp)
1010f420:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010f424:	e0bffb17 	ldw	r2,-20(fp)
1010f428:	e0fffa17 	ldw	r3,-24(fp)
1010f42c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010f430:	e0bffa17 	ldw	r2,-24(fp)
1010f434:	10c00017 	ldw	r3,0(r2)
1010f438:	e0bffb17 	ldw	r2,-20(fp)
1010f43c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010f440:	e0bffa17 	ldw	r2,-24(fp)
1010f444:	10800017 	ldw	r2,0(r2)
1010f448:	e0fffb17 	ldw	r3,-20(fp)
1010f44c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010f450:	e0bffa17 	ldw	r2,-24(fp)
1010f454:	e0fffb17 	ldw	r3,-20(fp)
1010f458:	10c00015 	stw	r3,0(r2)
1010f45c:	e0bff817 	ldw	r2,-32(fp)
1010f460:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f464:	e0bff717 	ldw	r2,-36(fp)
1010f468:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1010f46c:	0005883a 	mov	r2,zero
1010f470:	00000306 	br	1010f480 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
1010f474:	00bffa84 	movi	r2,-22
1010f478:	00000106 	br	1010f480 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
1010f47c:	00bfde84 	movi	r2,-134
  }
}
1010f480:	e037883a 	mov	sp,fp
1010f484:	df000017 	ldw	fp,0(sp)
1010f488:	dec00104 	addi	sp,sp,4
1010f48c:	f800283a 	ret

1010f490 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1010f490:	deffff04 	addi	sp,sp,-4
1010f494:	df000015 	stw	fp,0(sp)
1010f498:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1010f49c:	0001883a 	nop
1010f4a0:	e037883a 	mov	sp,fp
1010f4a4:	df000017 	ldw	fp,0(sp)
1010f4a8:	dec00104 	addi	sp,sp,4
1010f4ac:	f800283a 	ret

1010f4b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010f4b0:	defffe04 	addi	sp,sp,-8
1010f4b4:	dfc00115 	stw	ra,4(sp)
1010f4b8:	df000015 	stw	fp,0(sp)
1010f4bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010f4c0:	d0a00b17 	ldw	r2,-32724(gp)
1010f4c4:	10000326 	beq	r2,zero,1010f4d4 <alt_get_errno+0x24>
1010f4c8:	d0a00b17 	ldw	r2,-32724(gp)
1010f4cc:	103ee83a 	callr	r2
1010f4d0:	00000106 	br	1010f4d8 <alt_get_errno+0x28>
1010f4d4:	d0a6ff04 	addi	r2,gp,-25604
}
1010f4d8:	e037883a 	mov	sp,fp
1010f4dc:	dfc00117 	ldw	ra,4(sp)
1010f4e0:	df000017 	ldw	fp,0(sp)
1010f4e4:	dec00204 	addi	sp,sp,8
1010f4e8:	f800283a 	ret

1010f4ec <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1010f4ec:	defffa04 	addi	sp,sp,-24
1010f4f0:	dfc00515 	stw	ra,20(sp)
1010f4f4:	df000415 	stw	fp,16(sp)
1010f4f8:	df000404 	addi	fp,sp,16
1010f4fc:	e13ffe15 	stw	r4,-8(fp)
1010f500:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1010f504:	e0bffe17 	ldw	r2,-8(fp)
1010f508:	10000326 	beq	r2,zero,1010f518 <alt_dev_llist_insert+0x2c>
1010f50c:	e0bffe17 	ldw	r2,-8(fp)
1010f510:	10800217 	ldw	r2,8(r2)
1010f514:	1000061e 	bne	r2,zero,1010f530 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1010f518:	010f4b00 	call	1010f4b0 <alt_get_errno>
1010f51c:	1007883a 	mov	r3,r2
1010f520:	00800584 	movi	r2,22
1010f524:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1010f528:	00bffa84 	movi	r2,-22
1010f52c:	00001306 	br	1010f57c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1010f530:	e0bffe17 	ldw	r2,-8(fp)
1010f534:	e0ffff17 	ldw	r3,-4(fp)
1010f538:	e0fffc15 	stw	r3,-16(fp)
1010f53c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010f540:	e0bffd17 	ldw	r2,-12(fp)
1010f544:	e0fffc17 	ldw	r3,-16(fp)
1010f548:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010f54c:	e0bffc17 	ldw	r2,-16(fp)
1010f550:	10c00017 	ldw	r3,0(r2)
1010f554:	e0bffd17 	ldw	r2,-12(fp)
1010f558:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010f55c:	e0bffc17 	ldw	r2,-16(fp)
1010f560:	10800017 	ldw	r2,0(r2)
1010f564:	e0fffd17 	ldw	r3,-12(fp)
1010f568:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010f56c:	e0bffc17 	ldw	r2,-16(fp)
1010f570:	e0fffd17 	ldw	r3,-12(fp)
1010f574:	10c00015 	stw	r3,0(r2)

  return 0;  
1010f578:	0005883a 	mov	r2,zero
}
1010f57c:	e037883a 	mov	sp,fp
1010f580:	dfc00117 	ldw	ra,4(sp)
1010f584:	df000017 	ldw	fp,0(sp)
1010f588:	dec00204 	addi	sp,sp,8
1010f58c:	f800283a 	ret

1010f590 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1010f590:	defffd04 	addi	sp,sp,-12
1010f594:	dfc00215 	stw	ra,8(sp)
1010f598:	df000115 	stw	fp,4(sp)
1010f59c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010f5a0:	00840474 	movhi	r2,4113
1010f5a4:	10817104 	addi	r2,r2,1476
1010f5a8:	e0bfff15 	stw	r2,-4(fp)
1010f5ac:	00000606 	br	1010f5c8 <_do_ctors+0x38>
        (*ctor) (); 
1010f5b0:	e0bfff17 	ldw	r2,-4(fp)
1010f5b4:	10800017 	ldw	r2,0(r2)
1010f5b8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010f5bc:	e0bfff17 	ldw	r2,-4(fp)
1010f5c0:	10bfff04 	addi	r2,r2,-4
1010f5c4:	e0bfff15 	stw	r2,-4(fp)
1010f5c8:	e0ffff17 	ldw	r3,-4(fp)
1010f5cc:	00840474 	movhi	r2,4113
1010f5d0:	10817204 	addi	r2,r2,1480
1010f5d4:	18bff62e 	bgeu	r3,r2,1010f5b0 <__alt_data_end+0xfffef5b0>
        (*ctor) (); 
}
1010f5d8:	0001883a 	nop
1010f5dc:	e037883a 	mov	sp,fp
1010f5e0:	dfc00117 	ldw	ra,4(sp)
1010f5e4:	df000017 	ldw	fp,0(sp)
1010f5e8:	dec00204 	addi	sp,sp,8
1010f5ec:	f800283a 	ret

1010f5f0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1010f5f0:	defffd04 	addi	sp,sp,-12
1010f5f4:	dfc00215 	stw	ra,8(sp)
1010f5f8:	df000115 	stw	fp,4(sp)
1010f5fc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010f600:	00840474 	movhi	r2,4113
1010f604:	10817104 	addi	r2,r2,1476
1010f608:	e0bfff15 	stw	r2,-4(fp)
1010f60c:	00000606 	br	1010f628 <_do_dtors+0x38>
        (*dtor) (); 
1010f610:	e0bfff17 	ldw	r2,-4(fp)
1010f614:	10800017 	ldw	r2,0(r2)
1010f618:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010f61c:	e0bfff17 	ldw	r2,-4(fp)
1010f620:	10bfff04 	addi	r2,r2,-4
1010f624:	e0bfff15 	stw	r2,-4(fp)
1010f628:	e0ffff17 	ldw	r3,-4(fp)
1010f62c:	00840474 	movhi	r2,4113
1010f630:	10817204 	addi	r2,r2,1480
1010f634:	18bff62e 	bgeu	r3,r2,1010f610 <__alt_data_end+0xfffef610>
        (*dtor) (); 
}
1010f638:	0001883a 	nop
1010f63c:	e037883a 	mov	sp,fp
1010f640:	dfc00117 	ldw	ra,4(sp)
1010f644:	df000017 	ldw	fp,0(sp)
1010f648:	dec00204 	addi	sp,sp,8
1010f64c:	f800283a 	ret

1010f650 <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
1010f650:	defffc04 	addi	sp,sp,-16
1010f654:	df000315 	stw	fp,12(sp)
1010f658:	df000304 	addi	fp,sp,12
1010f65c:	e13fff15 	stw	r4,-4(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
1010f660:	e0bfff17 	ldw	r2,-4(fp)
1010f664:	10800217 	ldw	r2,8(r2)
1010f668:	1000021e 	bne	r2,zero,1010f674 <alt_fs_reg+0x24>
  {
    return -ENODEV;
1010f66c:	00bffb44 	movi	r2,-19
1010f670:	00001306 	br	1010f6c0 <alt_fs_reg+0x70>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
1010f674:	e0bfff17 	ldw	r2,-4(fp)
1010f678:	d0e00604 	addi	r3,gp,-32744
1010f67c:	e0fffd15 	stw	r3,-12(fp)
1010f680:	e0bffe15 	stw	r2,-8(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010f684:	e0bffe17 	ldw	r2,-8(fp)
1010f688:	e0fffd17 	ldw	r3,-12(fp)
1010f68c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010f690:	e0bffd17 	ldw	r2,-12(fp)
1010f694:	10c00017 	ldw	r3,0(r2)
1010f698:	e0bffe17 	ldw	r2,-8(fp)
1010f69c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010f6a0:	e0bffd17 	ldw	r2,-12(fp)
1010f6a4:	10800017 	ldw	r2,0(r2)
1010f6a8:	e0fffe17 	ldw	r3,-8(fp)
1010f6ac:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010f6b0:	e0bffd17 	ldw	r2,-12(fp)
1010f6b4:	e0fffe17 	ldw	r3,-8(fp)
1010f6b8:	10c00015 	stw	r3,0(r2)

  return 0;
1010f6bc:	0005883a 	mov	r2,zero
} 
1010f6c0:	e037883a 	mov	sp,fp
1010f6c4:	df000017 	ldw	fp,0(sp)
1010f6c8:	dec00104 	addi	sp,sp,4
1010f6cc:	f800283a 	ret

1010f6d0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1010f6d0:	deffff04 	addi	sp,sp,-4
1010f6d4:	df000015 	stw	fp,0(sp)
1010f6d8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
1010f6dc:	0001883a 	nop
1010f6e0:	e037883a 	mov	sp,fp
1010f6e4:	df000017 	ldw	fp,0(sp)
1010f6e8:	dec00104 	addi	sp,sp,4
1010f6ec:	f800283a 	ret

1010f6f0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010f6f0:	defff904 	addi	sp,sp,-28
1010f6f4:	dfc00615 	stw	ra,24(sp)
1010f6f8:	df000515 	stw	fp,20(sp)
1010f6fc:	df000504 	addi	fp,sp,20
1010f700:	e13ffc15 	stw	r4,-16(fp)
1010f704:	e17ffd15 	stw	r5,-12(fp)
1010f708:	e1bffe15 	stw	r6,-8(fp)
1010f70c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1010f710:	e0800217 	ldw	r2,8(fp)
1010f714:	d8800015 	stw	r2,0(sp)
1010f718:	e1ffff17 	ldw	r7,-4(fp)
1010f71c:	e1bffe17 	ldw	r6,-8(fp)
1010f720:	e17ffd17 	ldw	r5,-12(fp)
1010f724:	e13ffc17 	ldw	r4,-16(fp)
1010f728:	010f8a00 	call	1010f8a0 <alt_iic_isr_register>
}  
1010f72c:	e037883a 	mov	sp,fp
1010f730:	dfc00117 	ldw	ra,4(sp)
1010f734:	df000017 	ldw	fp,0(sp)
1010f738:	dec00204 	addi	sp,sp,8
1010f73c:	f800283a 	ret

1010f740 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1010f740:	defff904 	addi	sp,sp,-28
1010f744:	df000615 	stw	fp,24(sp)
1010f748:	df000604 	addi	fp,sp,24
1010f74c:	e13ffe15 	stw	r4,-8(fp)
1010f750:	e17fff15 	stw	r5,-4(fp)
1010f754:	e0bfff17 	ldw	r2,-4(fp)
1010f758:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f75c:	0005303a 	rdctl	r2,status
1010f760:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f764:	e0fffb17 	ldw	r3,-20(fp)
1010f768:	00bfff84 	movi	r2,-2
1010f76c:	1884703a 	and	r2,r3,r2
1010f770:	1001703a 	wrctl	status,r2
  
  return context;
1010f774:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010f778:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1010f77c:	00c00044 	movi	r3,1
1010f780:	e0bffa17 	ldw	r2,-24(fp)
1010f784:	1884983a 	sll	r2,r3,r2
1010f788:	1007883a 	mov	r3,r2
1010f78c:	d0a70317 	ldw	r2,-25588(gp)
1010f790:	1884b03a 	or	r2,r3,r2
1010f794:	d0a70315 	stw	r2,-25588(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010f798:	d0a70317 	ldw	r2,-25588(gp)
1010f79c:	100170fa 	wrctl	ienable,r2
1010f7a0:	e0bffc17 	ldw	r2,-16(fp)
1010f7a4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f7a8:	e0bffd17 	ldw	r2,-12(fp)
1010f7ac:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010f7b0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1010f7b4:	0001883a 	nop
}
1010f7b8:	e037883a 	mov	sp,fp
1010f7bc:	df000017 	ldw	fp,0(sp)
1010f7c0:	dec00104 	addi	sp,sp,4
1010f7c4:	f800283a 	ret

1010f7c8 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1010f7c8:	defff904 	addi	sp,sp,-28
1010f7cc:	df000615 	stw	fp,24(sp)
1010f7d0:	df000604 	addi	fp,sp,24
1010f7d4:	e13ffe15 	stw	r4,-8(fp)
1010f7d8:	e17fff15 	stw	r5,-4(fp)
1010f7dc:	e0bfff17 	ldw	r2,-4(fp)
1010f7e0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f7e4:	0005303a 	rdctl	r2,status
1010f7e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f7ec:	e0fffb17 	ldw	r3,-20(fp)
1010f7f0:	00bfff84 	movi	r2,-2
1010f7f4:	1884703a 	and	r2,r3,r2
1010f7f8:	1001703a 	wrctl	status,r2
  
  return context;
1010f7fc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010f800:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1010f804:	00c00044 	movi	r3,1
1010f808:	e0bffa17 	ldw	r2,-24(fp)
1010f80c:	1884983a 	sll	r2,r3,r2
1010f810:	0084303a 	nor	r2,zero,r2
1010f814:	1007883a 	mov	r3,r2
1010f818:	d0a70317 	ldw	r2,-25588(gp)
1010f81c:	1884703a 	and	r2,r3,r2
1010f820:	d0a70315 	stw	r2,-25588(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010f824:	d0a70317 	ldw	r2,-25588(gp)
1010f828:	100170fa 	wrctl	ienable,r2
1010f82c:	e0bffc17 	ldw	r2,-16(fp)
1010f830:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f834:	e0bffd17 	ldw	r2,-12(fp)
1010f838:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010f83c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1010f840:	0001883a 	nop
}
1010f844:	e037883a 	mov	sp,fp
1010f848:	df000017 	ldw	fp,0(sp)
1010f84c:	dec00104 	addi	sp,sp,4
1010f850:	f800283a 	ret

1010f854 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1010f854:	defffc04 	addi	sp,sp,-16
1010f858:	df000315 	stw	fp,12(sp)
1010f85c:	df000304 	addi	fp,sp,12
1010f860:	e13ffe15 	stw	r4,-8(fp)
1010f864:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1010f868:	000530fa 	rdctl	r2,ienable
1010f86c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1010f870:	00c00044 	movi	r3,1
1010f874:	e0bfff17 	ldw	r2,-4(fp)
1010f878:	1884983a 	sll	r2,r3,r2
1010f87c:	1007883a 	mov	r3,r2
1010f880:	e0bffd17 	ldw	r2,-12(fp)
1010f884:	1884703a 	and	r2,r3,r2
1010f888:	1004c03a 	cmpne	r2,r2,zero
1010f88c:	10803fcc 	andi	r2,r2,255
}
1010f890:	e037883a 	mov	sp,fp
1010f894:	df000017 	ldw	fp,0(sp)
1010f898:	dec00104 	addi	sp,sp,4
1010f89c:	f800283a 	ret

1010f8a0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010f8a0:	defff504 	addi	sp,sp,-44
1010f8a4:	dfc00a15 	stw	ra,40(sp)
1010f8a8:	df000915 	stw	fp,36(sp)
1010f8ac:	df000904 	addi	fp,sp,36
1010f8b0:	e13ffc15 	stw	r4,-16(fp)
1010f8b4:	e17ffd15 	stw	r5,-12(fp)
1010f8b8:	e1bffe15 	stw	r6,-8(fp)
1010f8bc:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1010f8c0:	00bffa84 	movi	r2,-22
1010f8c4:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1010f8c8:	e0bffd17 	ldw	r2,-12(fp)
1010f8cc:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1010f8d0:	e0bff817 	ldw	r2,-32(fp)
1010f8d4:	10800808 	cmpgei	r2,r2,32
1010f8d8:	1000271e 	bne	r2,zero,1010f978 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f8dc:	0005303a 	rdctl	r2,status
1010f8e0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f8e4:	e0fffb17 	ldw	r3,-20(fp)
1010f8e8:	00bfff84 	movi	r2,-2
1010f8ec:	1884703a 	and	r2,r3,r2
1010f8f0:	1001703a 	wrctl	status,r2
  
  return context;
1010f8f4:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1010f8f8:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1010f8fc:	00840474 	movhi	r2,4113
1010f900:	10901404 	addi	r2,r2,16464
1010f904:	e0fff817 	ldw	r3,-32(fp)
1010f908:	180690fa 	slli	r3,r3,3
1010f90c:	10c5883a 	add	r2,r2,r3
1010f910:	e0fffe17 	ldw	r3,-8(fp)
1010f914:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1010f918:	00840474 	movhi	r2,4113
1010f91c:	10901404 	addi	r2,r2,16464
1010f920:	e0fff817 	ldw	r3,-32(fp)
1010f924:	180690fa 	slli	r3,r3,3
1010f928:	10c5883a 	add	r2,r2,r3
1010f92c:	10800104 	addi	r2,r2,4
1010f930:	e0ffff17 	ldw	r3,-4(fp)
1010f934:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1010f938:	e0bffe17 	ldw	r2,-8(fp)
1010f93c:	10000526 	beq	r2,zero,1010f954 <alt_iic_isr_register+0xb4>
1010f940:	e0bff817 	ldw	r2,-32(fp)
1010f944:	100b883a 	mov	r5,r2
1010f948:	e13ffc17 	ldw	r4,-16(fp)
1010f94c:	010f7400 	call	1010f740 <alt_ic_irq_enable>
1010f950:	00000406 	br	1010f964 <alt_iic_isr_register+0xc4>
1010f954:	e0bff817 	ldw	r2,-32(fp)
1010f958:	100b883a 	mov	r5,r2
1010f95c:	e13ffc17 	ldw	r4,-16(fp)
1010f960:	010f7c80 	call	1010f7c8 <alt_ic_irq_disable>
1010f964:	e0bff715 	stw	r2,-36(fp)
1010f968:	e0bffa17 	ldw	r2,-24(fp)
1010f96c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f970:	e0bff917 	ldw	r2,-28(fp)
1010f974:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1010f978:	e0bff717 	ldw	r2,-36(fp)
}
1010f97c:	e037883a 	mov	sp,fp
1010f980:	dfc00117 	ldw	ra,4(sp)
1010f984:	df000017 	ldw	fp,0(sp)
1010f988:	dec00204 	addi	sp,sp,8
1010f98c:	f800283a 	ret

1010f990 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1010f990:	defff804 	addi	sp,sp,-32
1010f994:	dfc00715 	stw	ra,28(sp)
1010f998:	df000615 	stw	fp,24(sp)
1010f99c:	dc000515 	stw	r16,20(sp)
1010f9a0:	df000604 	addi	fp,sp,24
1010f9a4:	e13ffb15 	stw	r4,-20(fp)
1010f9a8:	e17ffc15 	stw	r5,-16(fp)
1010f9ac:	e1bffd15 	stw	r6,-12(fp)
1010f9b0:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
1010f9b4:	e1bffe17 	ldw	r6,-8(fp)
1010f9b8:	e17ffd17 	ldw	r5,-12(fp)
1010f9bc:	e13ffc17 	ldw	r4,-16(fp)
1010f9c0:	010fc180 	call	1010fc18 <open>
1010f9c4:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
1010f9c8:	e0bffa17 	ldw	r2,-24(fp)
1010f9cc:	10002216 	blt	r2,zero,1010fa58 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
1010f9d0:	04040474 	movhi	r16,4113
1010f9d4:	84048104 	addi	r16,r16,4612
1010f9d8:	e0bffa17 	ldw	r2,-24(fp)
1010f9dc:	01400304 	movi	r5,12
1010f9e0:	1009883a 	mov	r4,r2
1010f9e4:	0100c980 	call	10100c98 <__mulsi3>
1010f9e8:	8085883a 	add	r2,r16,r2
1010f9ec:	10c00017 	ldw	r3,0(r2)
1010f9f0:	e0bffb17 	ldw	r2,-20(fp)
1010f9f4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1010f9f8:	04040474 	movhi	r16,4113
1010f9fc:	84048104 	addi	r16,r16,4612
1010fa00:	e0bffa17 	ldw	r2,-24(fp)
1010fa04:	01400304 	movi	r5,12
1010fa08:	1009883a 	mov	r4,r2
1010fa0c:	0100c980 	call	10100c98 <__mulsi3>
1010fa10:	8085883a 	add	r2,r16,r2
1010fa14:	10800104 	addi	r2,r2,4
1010fa18:	10c00017 	ldw	r3,0(r2)
1010fa1c:	e0bffb17 	ldw	r2,-20(fp)
1010fa20:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1010fa24:	04040474 	movhi	r16,4113
1010fa28:	84048104 	addi	r16,r16,4612
1010fa2c:	e0bffa17 	ldw	r2,-24(fp)
1010fa30:	01400304 	movi	r5,12
1010fa34:	1009883a 	mov	r4,r2
1010fa38:	0100c980 	call	10100c98 <__mulsi3>
1010fa3c:	8085883a 	add	r2,r16,r2
1010fa40:	10800204 	addi	r2,r2,8
1010fa44:	10c00017 	ldw	r3,0(r2)
1010fa48:	e0bffb17 	ldw	r2,-20(fp)
1010fa4c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1010fa50:	e13ffa17 	ldw	r4,-24(fp)
1010fa54:	010e1480 	call	1010e148 <alt_release_fd>
  }
} 
1010fa58:	0001883a 	nop
1010fa5c:	e6ffff04 	addi	sp,fp,-4
1010fa60:	dfc00217 	ldw	ra,8(sp)
1010fa64:	df000117 	ldw	fp,4(sp)
1010fa68:	dc000017 	ldw	r16,0(sp)
1010fa6c:	dec00304 	addi	sp,sp,12
1010fa70:	f800283a 	ret

1010fa74 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1010fa74:	defffb04 	addi	sp,sp,-20
1010fa78:	dfc00415 	stw	ra,16(sp)
1010fa7c:	df000315 	stw	fp,12(sp)
1010fa80:	df000304 	addi	fp,sp,12
1010fa84:	e13ffd15 	stw	r4,-12(fp)
1010fa88:	e17ffe15 	stw	r5,-8(fp)
1010fa8c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1010fa90:	01c07fc4 	movi	r7,511
1010fa94:	01800044 	movi	r6,1
1010fa98:	e17ffd17 	ldw	r5,-12(fp)
1010fa9c:	01040474 	movhi	r4,4113
1010faa0:	21048404 	addi	r4,r4,4624
1010faa4:	010f9900 	call	1010f990 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1010faa8:	01c07fc4 	movi	r7,511
1010faac:	000d883a 	mov	r6,zero
1010fab0:	e17ffe17 	ldw	r5,-8(fp)
1010fab4:	01040474 	movhi	r4,4113
1010fab8:	21048104 	addi	r4,r4,4612
1010fabc:	010f9900 	call	1010f990 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1010fac0:	01c07fc4 	movi	r7,511
1010fac4:	01800044 	movi	r6,1
1010fac8:	e17fff17 	ldw	r5,-4(fp)
1010facc:	01040474 	movhi	r4,4113
1010fad0:	21048704 	addi	r4,r4,4636
1010fad4:	010f9900 	call	1010f990 <alt_open_fd>
}  
1010fad8:	0001883a 	nop
1010fadc:	e037883a 	mov	sp,fp
1010fae0:	dfc00117 	ldw	ra,4(sp)
1010fae4:	df000017 	ldw	fp,0(sp)
1010fae8:	dec00204 	addi	sp,sp,8
1010faec:	f800283a 	ret

1010faf0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010faf0:	defffe04 	addi	sp,sp,-8
1010faf4:	dfc00115 	stw	ra,4(sp)
1010faf8:	df000015 	stw	fp,0(sp)
1010fafc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010fb00:	d0a00b17 	ldw	r2,-32724(gp)
1010fb04:	10000326 	beq	r2,zero,1010fb14 <alt_get_errno+0x24>
1010fb08:	d0a00b17 	ldw	r2,-32724(gp)
1010fb0c:	103ee83a 	callr	r2
1010fb10:	00000106 	br	1010fb18 <alt_get_errno+0x28>
1010fb14:	d0a6ff04 	addi	r2,gp,-25604
}
1010fb18:	e037883a 	mov	sp,fp
1010fb1c:	dfc00117 	ldw	ra,4(sp)
1010fb20:	df000017 	ldw	fp,0(sp)
1010fb24:	dec00204 	addi	sp,sp,8
1010fb28:	f800283a 	ret

1010fb2c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1010fb2c:	defffb04 	addi	sp,sp,-20
1010fb30:	dfc00415 	stw	ra,16(sp)
1010fb34:	df000315 	stw	fp,12(sp)
1010fb38:	dc000215 	stw	r16,8(sp)
1010fb3c:	df000304 	addi	fp,sp,12
1010fb40:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1010fb44:	e0bffe17 	ldw	r2,-8(fp)
1010fb48:	10800217 	ldw	r2,8(r2)
1010fb4c:	10d00034 	orhi	r3,r2,16384
1010fb50:	e0bffe17 	ldw	r2,-8(fp)
1010fb54:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010fb58:	e03ffd15 	stw	zero,-12(fp)
1010fb5c:	00002306 	br	1010fbec <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010fb60:	04040474 	movhi	r16,4113
1010fb64:	84048104 	addi	r16,r16,4612
1010fb68:	e0bffd17 	ldw	r2,-12(fp)
1010fb6c:	01400304 	movi	r5,12
1010fb70:	1009883a 	mov	r4,r2
1010fb74:	0100c980 	call	10100c98 <__mulsi3>
1010fb78:	8085883a 	add	r2,r16,r2
1010fb7c:	10c00017 	ldw	r3,0(r2)
1010fb80:	e0bffe17 	ldw	r2,-8(fp)
1010fb84:	10800017 	ldw	r2,0(r2)
1010fb88:	1880151e 	bne	r3,r2,1010fbe0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010fb8c:	04040474 	movhi	r16,4113
1010fb90:	84048104 	addi	r16,r16,4612
1010fb94:	e0bffd17 	ldw	r2,-12(fp)
1010fb98:	01400304 	movi	r5,12
1010fb9c:	1009883a 	mov	r4,r2
1010fba0:	0100c980 	call	10100c98 <__mulsi3>
1010fba4:	8085883a 	add	r2,r16,r2
1010fba8:	10800204 	addi	r2,r2,8
1010fbac:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010fbb0:	10000b0e 	bge	r2,zero,1010fbe0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1010fbb4:	01400304 	movi	r5,12
1010fbb8:	e13ffd17 	ldw	r4,-12(fp)
1010fbbc:	0100c980 	call	10100c98 <__mulsi3>
1010fbc0:	1007883a 	mov	r3,r2
1010fbc4:	00840474 	movhi	r2,4113
1010fbc8:	10848104 	addi	r2,r2,4612
1010fbcc:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010fbd0:	e0bffe17 	ldw	r2,-8(fp)
1010fbd4:	18800226 	beq	r3,r2,1010fbe0 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1010fbd8:	00bffcc4 	movi	r2,-13
1010fbdc:	00000806 	br	1010fc00 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010fbe0:	e0bffd17 	ldw	r2,-12(fp)
1010fbe4:	10800044 	addi	r2,r2,1
1010fbe8:	e0bffd15 	stw	r2,-12(fp)
1010fbec:	d0a00a17 	ldw	r2,-32728(gp)
1010fbf0:	1007883a 	mov	r3,r2
1010fbf4:	e0bffd17 	ldw	r2,-12(fp)
1010fbf8:	18bfd92e 	bgeu	r3,r2,1010fb60 <__alt_data_end+0xfffefb60>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1010fbfc:	0005883a 	mov	r2,zero
}
1010fc00:	e6ffff04 	addi	sp,fp,-4
1010fc04:	dfc00217 	ldw	ra,8(sp)
1010fc08:	df000117 	ldw	fp,4(sp)
1010fc0c:	dc000017 	ldw	r16,0(sp)
1010fc10:	dec00304 	addi	sp,sp,12
1010fc14:	f800283a 	ret

1010fc18 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1010fc18:	defff604 	addi	sp,sp,-40
1010fc1c:	dfc00915 	stw	ra,36(sp)
1010fc20:	df000815 	stw	fp,32(sp)
1010fc24:	df000804 	addi	fp,sp,32
1010fc28:	e13ffd15 	stw	r4,-12(fp)
1010fc2c:	e17ffe15 	stw	r5,-8(fp)
1010fc30:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1010fc34:	00bfffc4 	movi	r2,-1
1010fc38:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1010fc3c:	00bffb44 	movi	r2,-19
1010fc40:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1010fc44:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1010fc48:	d1600804 	addi	r5,gp,-32736
1010fc4c:	e13ffd17 	ldw	r4,-12(fp)
1010fc50:	010ff3c0 	call	1010ff3c <alt_find_dev>
1010fc54:	e0bff815 	stw	r2,-32(fp)
1010fc58:	e0bff817 	ldw	r2,-32(fp)
1010fc5c:	1000051e 	bne	r2,zero,1010fc74 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1010fc60:	e13ffd17 	ldw	r4,-12(fp)
1010fc64:	010ffcc0 	call	1010ffcc <alt_find_file>
1010fc68:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1010fc6c:	00800044 	movi	r2,1
1010fc70:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1010fc74:	e0bff817 	ldw	r2,-32(fp)
1010fc78:	10002b26 	beq	r2,zero,1010fd28 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
1010fc7c:	e13ff817 	ldw	r4,-32(fp)
1010fc80:	01100d40 	call	101100d4 <alt_get_fd>
1010fc84:	e0bff915 	stw	r2,-28(fp)
1010fc88:	e0bff917 	ldw	r2,-28(fp)
1010fc8c:	1000030e 	bge	r2,zero,1010fc9c <open+0x84>
    {
      status = index;
1010fc90:	e0bff917 	ldw	r2,-28(fp)
1010fc94:	e0bffa15 	stw	r2,-24(fp)
1010fc98:	00002506 	br	1010fd30 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
1010fc9c:	01400304 	movi	r5,12
1010fca0:	e13ff917 	ldw	r4,-28(fp)
1010fca4:	0100c980 	call	10100c98 <__mulsi3>
1010fca8:	1007883a 	mov	r3,r2
1010fcac:	00840474 	movhi	r2,4113
1010fcb0:	10848104 	addi	r2,r2,4612
1010fcb4:	1885883a 	add	r2,r3,r2
1010fcb8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1010fcbc:	e0fffe17 	ldw	r3,-8(fp)
1010fcc0:	00900034 	movhi	r2,16384
1010fcc4:	10bfffc4 	addi	r2,r2,-1
1010fcc8:	1886703a 	and	r3,r3,r2
1010fccc:	e0bffc17 	ldw	r2,-16(fp)
1010fcd0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1010fcd4:	e0bffb17 	ldw	r2,-20(fp)
1010fcd8:	1000051e 	bne	r2,zero,1010fcf0 <open+0xd8>
1010fcdc:	e13ffc17 	ldw	r4,-16(fp)
1010fce0:	010fb2c0 	call	1010fb2c <alt_file_locked>
1010fce4:	e0bffa15 	stw	r2,-24(fp)
1010fce8:	e0bffa17 	ldw	r2,-24(fp)
1010fcec:	10001016 	blt	r2,zero,1010fd30 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1010fcf0:	e0bff817 	ldw	r2,-32(fp)
1010fcf4:	10800317 	ldw	r2,12(r2)
1010fcf8:	10000826 	beq	r2,zero,1010fd1c <open+0x104>
1010fcfc:	e0bff817 	ldw	r2,-32(fp)
1010fd00:	10800317 	ldw	r2,12(r2)
1010fd04:	e1ffff17 	ldw	r7,-4(fp)
1010fd08:	e1bffe17 	ldw	r6,-8(fp)
1010fd0c:	e17ffd17 	ldw	r5,-12(fp)
1010fd10:	e13ffc17 	ldw	r4,-16(fp)
1010fd14:	103ee83a 	callr	r2
1010fd18:	00000106 	br	1010fd20 <open+0x108>
1010fd1c:	0005883a 	mov	r2,zero
1010fd20:	e0bffa15 	stw	r2,-24(fp)
1010fd24:	00000206 	br	1010fd30 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
1010fd28:	00bffb44 	movi	r2,-19
1010fd2c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1010fd30:	e0bffa17 	ldw	r2,-24(fp)
1010fd34:	1000090e 	bge	r2,zero,1010fd5c <open+0x144>
  {
    alt_release_fd (index);  
1010fd38:	e13ff917 	ldw	r4,-28(fp)
1010fd3c:	010e1480 	call	1010e148 <alt_release_fd>
    ALT_ERRNO = -status;
1010fd40:	010faf00 	call	1010faf0 <alt_get_errno>
1010fd44:	1007883a 	mov	r3,r2
1010fd48:	e0bffa17 	ldw	r2,-24(fp)
1010fd4c:	0085c83a 	sub	r2,zero,r2
1010fd50:	18800015 	stw	r2,0(r3)
    return -1;
1010fd54:	00bfffc4 	movi	r2,-1
1010fd58:	00000106 	br	1010fd60 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
1010fd5c:	e0bff917 	ldw	r2,-28(fp)
}
1010fd60:	e037883a 	mov	sp,fp
1010fd64:	dfc00117 	ldw	ra,4(sp)
1010fd68:	df000017 	ldw	fp,0(sp)
1010fd6c:	dec00204 	addi	sp,sp,8
1010fd70:	f800283a 	ret

1010fd74 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1010fd74:	defffa04 	addi	sp,sp,-24
1010fd78:	df000515 	stw	fp,20(sp)
1010fd7c:	df000504 	addi	fp,sp,20
1010fd80:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010fd84:	0005303a 	rdctl	r2,status
1010fd88:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010fd8c:	e0fffc17 	ldw	r3,-16(fp)
1010fd90:	00bfff84 	movi	r2,-2
1010fd94:	1884703a 	and	r2,r3,r2
1010fd98:	1001703a 	wrctl	status,r2
  
  return context;
1010fd9c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1010fda0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1010fda4:	e0bfff17 	ldw	r2,-4(fp)
1010fda8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1010fdac:	e0bffd17 	ldw	r2,-12(fp)
1010fdb0:	10800017 	ldw	r2,0(r2)
1010fdb4:	e0fffd17 	ldw	r3,-12(fp)
1010fdb8:	18c00117 	ldw	r3,4(r3)
1010fdbc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1010fdc0:	e0bffd17 	ldw	r2,-12(fp)
1010fdc4:	10800117 	ldw	r2,4(r2)
1010fdc8:	e0fffd17 	ldw	r3,-12(fp)
1010fdcc:	18c00017 	ldw	r3,0(r3)
1010fdd0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1010fdd4:	e0bffd17 	ldw	r2,-12(fp)
1010fdd8:	e0fffd17 	ldw	r3,-12(fp)
1010fddc:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1010fde0:	e0bffd17 	ldw	r2,-12(fp)
1010fde4:	e0fffd17 	ldw	r3,-12(fp)
1010fde8:	10c00015 	stw	r3,0(r2)
1010fdec:	e0bffb17 	ldw	r2,-20(fp)
1010fdf0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010fdf4:	e0bffe17 	ldw	r2,-8(fp)
1010fdf8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1010fdfc:	0001883a 	nop
1010fe00:	e037883a 	mov	sp,fp
1010fe04:	df000017 	ldw	fp,0(sp)
1010fe08:	dec00104 	addi	sp,sp,4
1010fe0c:	f800283a 	ret

1010fe10 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1010fe10:	defffb04 	addi	sp,sp,-20
1010fe14:	dfc00415 	stw	ra,16(sp)
1010fe18:	df000315 	stw	fp,12(sp)
1010fe1c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1010fe20:	d0a02017 	ldw	r2,-32640(gp)
1010fe24:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1010fe28:	d0a70517 	ldw	r2,-25580(gp)
1010fe2c:	10800044 	addi	r2,r2,1
1010fe30:	d0a70515 	stw	r2,-25580(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010fe34:	00002e06 	br	1010fef0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1010fe38:	e0bffd17 	ldw	r2,-12(fp)
1010fe3c:	10800017 	ldw	r2,0(r2)
1010fe40:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1010fe44:	e0bffd17 	ldw	r2,-12(fp)
1010fe48:	10800403 	ldbu	r2,16(r2)
1010fe4c:	10803fcc 	andi	r2,r2,255
1010fe50:	10000426 	beq	r2,zero,1010fe64 <alt_tick+0x54>
1010fe54:	d0a70517 	ldw	r2,-25580(gp)
1010fe58:	1000021e 	bne	r2,zero,1010fe64 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1010fe5c:	e0bffd17 	ldw	r2,-12(fp)
1010fe60:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1010fe64:	e0bffd17 	ldw	r2,-12(fp)
1010fe68:	10800217 	ldw	r2,8(r2)
1010fe6c:	d0e70517 	ldw	r3,-25580(gp)
1010fe70:	18801d36 	bltu	r3,r2,1010fee8 <alt_tick+0xd8>
1010fe74:	e0bffd17 	ldw	r2,-12(fp)
1010fe78:	10800403 	ldbu	r2,16(r2)
1010fe7c:	10803fcc 	andi	r2,r2,255
1010fe80:	1000191e 	bne	r2,zero,1010fee8 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1010fe84:	e0bffd17 	ldw	r2,-12(fp)
1010fe88:	10800317 	ldw	r2,12(r2)
1010fe8c:	e0fffd17 	ldw	r3,-12(fp)
1010fe90:	18c00517 	ldw	r3,20(r3)
1010fe94:	1809883a 	mov	r4,r3
1010fe98:	103ee83a 	callr	r2
1010fe9c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1010fea0:	e0bfff17 	ldw	r2,-4(fp)
1010fea4:	1000031e 	bne	r2,zero,1010feb4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1010fea8:	e13ffd17 	ldw	r4,-12(fp)
1010feac:	010fd740 	call	1010fd74 <alt_alarm_stop>
1010feb0:	00000d06 	br	1010fee8 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1010feb4:	e0bffd17 	ldw	r2,-12(fp)
1010feb8:	10c00217 	ldw	r3,8(r2)
1010febc:	e0bfff17 	ldw	r2,-4(fp)
1010fec0:	1887883a 	add	r3,r3,r2
1010fec4:	e0bffd17 	ldw	r2,-12(fp)
1010fec8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1010fecc:	e0bffd17 	ldw	r2,-12(fp)
1010fed0:	10c00217 	ldw	r3,8(r2)
1010fed4:	d0a70517 	ldw	r2,-25580(gp)
1010fed8:	1880032e 	bgeu	r3,r2,1010fee8 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1010fedc:	e0bffd17 	ldw	r2,-12(fp)
1010fee0:	00c00044 	movi	r3,1
1010fee4:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1010fee8:	e0bffe17 	ldw	r2,-8(fp)
1010feec:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010fef0:	e0fffd17 	ldw	r3,-12(fp)
1010fef4:	d0a02004 	addi	r2,gp,-32640
1010fef8:	18bfcf1e 	bne	r3,r2,1010fe38 <__alt_data_end+0xfffefe38>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1010fefc:	0001883a 	nop
}
1010ff00:	0001883a 	nop
1010ff04:	e037883a 	mov	sp,fp
1010ff08:	dfc00117 	ldw	ra,4(sp)
1010ff0c:	df000017 	ldw	fp,0(sp)
1010ff10:	dec00204 	addi	sp,sp,8
1010ff14:	f800283a 	ret

1010ff18 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1010ff18:	deffff04 	addi	sp,sp,-4
1010ff1c:	df000015 	stw	fp,0(sp)
1010ff20:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1010ff24:	000170fa 	wrctl	ienable,zero
}
1010ff28:	0001883a 	nop
1010ff2c:	e037883a 	mov	sp,fp
1010ff30:	df000017 	ldw	fp,0(sp)
1010ff34:	dec00104 	addi	sp,sp,4
1010ff38:	f800283a 	ret

1010ff3c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1010ff3c:	defffa04 	addi	sp,sp,-24
1010ff40:	dfc00515 	stw	ra,20(sp)
1010ff44:	df000415 	stw	fp,16(sp)
1010ff48:	df000404 	addi	fp,sp,16
1010ff4c:	e13ffe15 	stw	r4,-8(fp)
1010ff50:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1010ff54:	e0bfff17 	ldw	r2,-4(fp)
1010ff58:	10800017 	ldw	r2,0(r2)
1010ff5c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1010ff60:	e13ffe17 	ldw	r4,-8(fp)
1010ff64:	0100f480 	call	10100f48 <strlen>
1010ff68:	10800044 	addi	r2,r2,1
1010ff6c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010ff70:	00000d06 	br	1010ffa8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1010ff74:	e0bffc17 	ldw	r2,-16(fp)
1010ff78:	10800217 	ldw	r2,8(r2)
1010ff7c:	e0fffd17 	ldw	r3,-12(fp)
1010ff80:	180d883a 	mov	r6,r3
1010ff84:	e17ffe17 	ldw	r5,-8(fp)
1010ff88:	1009883a 	mov	r4,r2
1010ff8c:	01102800 	call	10110280 <memcmp>
1010ff90:	1000021e 	bne	r2,zero,1010ff9c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1010ff94:	e0bffc17 	ldw	r2,-16(fp)
1010ff98:	00000706 	br	1010ffb8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1010ff9c:	e0bffc17 	ldw	r2,-16(fp)
1010ffa0:	10800017 	ldw	r2,0(r2)
1010ffa4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010ffa8:	e0fffc17 	ldw	r3,-16(fp)
1010ffac:	e0bfff17 	ldw	r2,-4(fp)
1010ffb0:	18bff01e 	bne	r3,r2,1010ff74 <__alt_data_end+0xfffeff74>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1010ffb4:	0005883a 	mov	r2,zero
}
1010ffb8:	e037883a 	mov	sp,fp
1010ffbc:	dfc00117 	ldw	ra,4(sp)
1010ffc0:	df000017 	ldw	fp,0(sp)
1010ffc4:	dec00204 	addi	sp,sp,8
1010ffc8:	f800283a 	ret

1010ffcc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1010ffcc:	defffb04 	addi	sp,sp,-20
1010ffd0:	dfc00415 	stw	ra,16(sp)
1010ffd4:	df000315 	stw	fp,12(sp)
1010ffd8:	df000304 	addi	fp,sp,12
1010ffdc:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1010ffe0:	d0a00617 	ldw	r2,-32744(gp)
1010ffe4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010ffe8:	00003106 	br	101100b0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
1010ffec:	e0bffd17 	ldw	r2,-12(fp)
1010fff0:	10800217 	ldw	r2,8(r2)
1010fff4:	1009883a 	mov	r4,r2
1010fff8:	0100f480 	call	10100f48 <strlen>
1010fffc:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
10110000:	e0bffd17 	ldw	r2,-12(fp)
10110004:	10c00217 	ldw	r3,8(r2)
10110008:	e0bffe17 	ldw	r2,-8(fp)
1011000c:	10bfffc4 	addi	r2,r2,-1
10110010:	1885883a 	add	r2,r3,r2
10110014:	10800003 	ldbu	r2,0(r2)
10110018:	10803fcc 	andi	r2,r2,255
1011001c:	1080201c 	xori	r2,r2,128
10110020:	10bfe004 	addi	r2,r2,-128
10110024:	10800bd8 	cmpnei	r2,r2,47
10110028:	1000031e 	bne	r2,zero,10110038 <alt_find_file+0x6c>
    {
      len -= 1;
1011002c:	e0bffe17 	ldw	r2,-8(fp)
10110030:	10bfffc4 	addi	r2,r2,-1
10110034:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10110038:	e0bffe17 	ldw	r2,-8(fp)
1011003c:	e0ffff17 	ldw	r3,-4(fp)
10110040:	1885883a 	add	r2,r3,r2
10110044:	10800003 	ldbu	r2,0(r2)
10110048:	10803fcc 	andi	r2,r2,255
1011004c:	1080201c 	xori	r2,r2,128
10110050:	10bfe004 	addi	r2,r2,-128
10110054:	10800be0 	cmpeqi	r2,r2,47
10110058:	1000081e 	bne	r2,zero,1011007c <alt_find_file+0xb0>
1011005c:	e0bffe17 	ldw	r2,-8(fp)
10110060:	e0ffff17 	ldw	r3,-4(fp)
10110064:	1885883a 	add	r2,r3,r2
10110068:	10800003 	ldbu	r2,0(r2)
1011006c:	10803fcc 	andi	r2,r2,255
10110070:	1080201c 	xori	r2,r2,128
10110074:	10bfe004 	addi	r2,r2,-128
10110078:	10000a1e 	bne	r2,zero,101100a4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
1011007c:	e0bffd17 	ldw	r2,-12(fp)
10110080:	10800217 	ldw	r2,8(r2)
10110084:	e0fffe17 	ldw	r3,-8(fp)
10110088:	180d883a 	mov	r6,r3
1011008c:	e17fff17 	ldw	r5,-4(fp)
10110090:	1009883a 	mov	r4,r2
10110094:	01102800 	call	10110280 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10110098:	1000021e 	bne	r2,zero,101100a4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1011009c:	e0bffd17 	ldw	r2,-12(fp)
101100a0:	00000706 	br	101100c0 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
101100a4:	e0bffd17 	ldw	r2,-12(fp)
101100a8:	10800017 	ldw	r2,0(r2)
101100ac:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
101100b0:	e0fffd17 	ldw	r3,-12(fp)
101100b4:	d0a00604 	addi	r2,gp,-32744
101100b8:	18bfcc1e 	bne	r3,r2,1010ffec <__alt_data_end+0xfffeffec>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
101100bc:	0005883a 	mov	r2,zero
}
101100c0:	e037883a 	mov	sp,fp
101100c4:	dfc00117 	ldw	ra,4(sp)
101100c8:	df000017 	ldw	fp,0(sp)
101100cc:	dec00204 	addi	sp,sp,8
101100d0:	f800283a 	ret

101100d4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
101100d4:	defffa04 	addi	sp,sp,-24
101100d8:	dfc00515 	stw	ra,20(sp)
101100dc:	df000415 	stw	fp,16(sp)
101100e0:	dc000315 	stw	r16,12(sp)
101100e4:	df000404 	addi	fp,sp,16
101100e8:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
101100ec:	00bffa04 	movi	r2,-24
101100f0:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
101100f4:	e03ffc15 	stw	zero,-16(fp)
101100f8:	00001d06 	br	10110170 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
101100fc:	04040474 	movhi	r16,4113
10110100:	84048104 	addi	r16,r16,4612
10110104:	e0bffc17 	ldw	r2,-16(fp)
10110108:	01400304 	movi	r5,12
1011010c:	1009883a 	mov	r4,r2
10110110:	0100c980 	call	10100c98 <__mulsi3>
10110114:	8085883a 	add	r2,r16,r2
10110118:	10800017 	ldw	r2,0(r2)
1011011c:	1000111e 	bne	r2,zero,10110164 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
10110120:	04040474 	movhi	r16,4113
10110124:	84048104 	addi	r16,r16,4612
10110128:	e0bffc17 	ldw	r2,-16(fp)
1011012c:	01400304 	movi	r5,12
10110130:	1009883a 	mov	r4,r2
10110134:	0100c980 	call	10100c98 <__mulsi3>
10110138:	8085883a 	add	r2,r16,r2
1011013c:	e0fffe17 	ldw	r3,-8(fp)
10110140:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
10110144:	d0e00a17 	ldw	r3,-32728(gp)
10110148:	e0bffc17 	ldw	r2,-16(fp)
1011014c:	1880020e 	bge	r3,r2,10110158 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
10110150:	e0bffc17 	ldw	r2,-16(fp)
10110154:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
10110158:	e0bffc17 	ldw	r2,-16(fp)
1011015c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
10110160:	00000606 	br	1011017c <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10110164:	e0bffc17 	ldw	r2,-16(fp)
10110168:	10800044 	addi	r2,r2,1
1011016c:	e0bffc15 	stw	r2,-16(fp)
10110170:	e0bffc17 	ldw	r2,-16(fp)
10110174:	10800810 	cmplti	r2,r2,32
10110178:	103fe01e 	bne	r2,zero,101100fc <__alt_data_end+0xffff00fc>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1011017c:	e0bffd17 	ldw	r2,-12(fp)
}
10110180:	e6ffff04 	addi	sp,fp,-4
10110184:	dfc00217 	ldw	ra,8(sp)
10110188:	df000117 	ldw	fp,4(sp)
1011018c:	dc000017 	ldw	r16,0(sp)
10110190:	dec00304 	addi	sp,sp,12
10110194:	f800283a 	ret

10110198 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
10110198:	defffe04 	addi	sp,sp,-8
1011019c:	df000115 	stw	fp,4(sp)
101101a0:	df000104 	addi	fp,sp,4
101101a4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
101101a8:	e0bfff17 	ldw	r2,-4(fp)
101101ac:	10bffe84 	addi	r2,r2,-6
101101b0:	10c00428 	cmpgeui	r3,r2,16
101101b4:	18001a1e 	bne	r3,zero,10110220 <alt_exception_cause_generated_bad_addr+0x88>
101101b8:	100690ba 	slli	r3,r2,2
101101bc:	00840474 	movhi	r2,4113
101101c0:	10807404 	addi	r2,r2,464
101101c4:	1885883a 	add	r2,r3,r2
101101c8:	10800017 	ldw	r2,0(r2)
101101cc:	1000683a 	jmp	r2
101101d0:	10110210 	cmplti	zero,r2,17416
101101d4:	10110210 	cmplti	zero,r2,17416
101101d8:	10110220 	cmpeqi	zero,r2,17416
101101dc:	10110220 	cmpeqi	zero,r2,17416
101101e0:	10110220 	cmpeqi	zero,r2,17416
101101e4:	10110210 	cmplti	zero,r2,17416
101101e8:	10110218 	cmpnei	zero,r2,17416
101101ec:	10110220 	cmpeqi	zero,r2,17416
101101f0:	10110210 	cmplti	zero,r2,17416
101101f4:	10110210 	cmplti	zero,r2,17416
101101f8:	10110220 	cmpeqi	zero,r2,17416
101101fc:	10110210 	cmplti	zero,r2,17416
10110200:	10110218 	cmpnei	zero,r2,17416
10110204:	10110220 	cmpeqi	zero,r2,17416
10110208:	10110220 	cmpeqi	zero,r2,17416
1011020c:	10110210 	cmplti	zero,r2,17416
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
10110210:	00800044 	movi	r2,1
10110214:	00000306 	br	10110224 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
10110218:	0005883a 	mov	r2,zero
1011021c:	00000106 	br	10110224 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
10110220:	0005883a 	mov	r2,zero
  }
}
10110224:	e037883a 	mov	sp,fp
10110228:	df000017 	ldw	fp,0(sp)
1011022c:	dec00104 	addi	sp,sp,4
10110230:	f800283a 	ret

10110234 <atexit>:
10110234:	200b883a 	mov	r5,r4
10110238:	000f883a 	mov	r7,zero
1011023c:	000d883a 	mov	r6,zero
10110240:	0009883a 	mov	r4,zero
10110244:	01102fc1 	jmpi	101102fc <__register_exitproc>

10110248 <exit>:
10110248:	defffe04 	addi	sp,sp,-8
1011024c:	000b883a 	mov	r5,zero
10110250:	dc000015 	stw	r16,0(sp)
10110254:	dfc00115 	stw	ra,4(sp)
10110258:	2021883a 	mov	r16,r4
1011025c:	01104140 	call	10110414 <__call_exitprocs>
10110260:	00840474 	movhi	r2,4113
10110264:	10890304 	addi	r2,r2,9228
10110268:	11000017 	ldw	r4,0(r2)
1011026c:	20800f17 	ldw	r2,60(r4)
10110270:	10000126 	beq	r2,zero,10110278 <exit+0x30>
10110274:	103ee83a 	callr	r2
10110278:	8009883a 	mov	r4,r16
1011027c:	01105940 	call	10110594 <_exit>

10110280 <memcmp>:
10110280:	01c000c4 	movi	r7,3
10110284:	3980192e 	bgeu	r7,r6,101102ec <memcmp+0x6c>
10110288:	2144b03a 	or	r2,r4,r5
1011028c:	11c4703a 	and	r2,r2,r7
10110290:	10000f26 	beq	r2,zero,101102d0 <memcmp+0x50>
10110294:	20800003 	ldbu	r2,0(r4)
10110298:	28c00003 	ldbu	r3,0(r5)
1011029c:	10c0151e 	bne	r2,r3,101102f4 <memcmp+0x74>
101102a0:	31bfff84 	addi	r6,r6,-2
101102a4:	01ffffc4 	movi	r7,-1
101102a8:	00000406 	br	101102bc <memcmp+0x3c>
101102ac:	20800003 	ldbu	r2,0(r4)
101102b0:	28c00003 	ldbu	r3,0(r5)
101102b4:	31bfffc4 	addi	r6,r6,-1
101102b8:	10c00e1e 	bne	r2,r3,101102f4 <memcmp+0x74>
101102bc:	21000044 	addi	r4,r4,1
101102c0:	29400044 	addi	r5,r5,1
101102c4:	31fff91e 	bne	r6,r7,101102ac <__alt_data_end+0xffff02ac>
101102c8:	0005883a 	mov	r2,zero
101102cc:	f800283a 	ret
101102d0:	20c00017 	ldw	r3,0(r4)
101102d4:	28800017 	ldw	r2,0(r5)
101102d8:	18bfee1e 	bne	r3,r2,10110294 <__alt_data_end+0xffff0294>
101102dc:	31bfff04 	addi	r6,r6,-4
101102e0:	21000104 	addi	r4,r4,4
101102e4:	29400104 	addi	r5,r5,4
101102e8:	39bff936 	bltu	r7,r6,101102d0 <__alt_data_end+0xffff02d0>
101102ec:	303fe91e 	bne	r6,zero,10110294 <__alt_data_end+0xffff0294>
101102f0:	003ff506 	br	101102c8 <__alt_data_end+0xffff02c8>
101102f4:	10c5c83a 	sub	r2,r2,r3
101102f8:	f800283a 	ret

101102fc <__register_exitproc>:
101102fc:	defffa04 	addi	sp,sp,-24
10110300:	dc000315 	stw	r16,12(sp)
10110304:	04040474 	movhi	r16,4113
10110308:	84090304 	addi	r16,r16,9228
1011030c:	80c00017 	ldw	r3,0(r16)
10110310:	dc400415 	stw	r17,16(sp)
10110314:	dfc00515 	stw	ra,20(sp)
10110318:	18805217 	ldw	r2,328(r3)
1011031c:	2023883a 	mov	r17,r4
10110320:	10003726 	beq	r2,zero,10110400 <__register_exitproc+0x104>
10110324:	10c00117 	ldw	r3,4(r2)
10110328:	010007c4 	movi	r4,31
1011032c:	20c00e16 	blt	r4,r3,10110368 <__register_exitproc+0x6c>
10110330:	1a000044 	addi	r8,r3,1
10110334:	8800221e 	bne	r17,zero,101103c0 <__register_exitproc+0xc4>
10110338:	18c00084 	addi	r3,r3,2
1011033c:	18c7883a 	add	r3,r3,r3
10110340:	18c7883a 	add	r3,r3,r3
10110344:	12000115 	stw	r8,4(r2)
10110348:	10c7883a 	add	r3,r2,r3
1011034c:	19400015 	stw	r5,0(r3)
10110350:	0005883a 	mov	r2,zero
10110354:	dfc00517 	ldw	ra,20(sp)
10110358:	dc400417 	ldw	r17,16(sp)
1011035c:	dc000317 	ldw	r16,12(sp)
10110360:	dec00604 	addi	sp,sp,24
10110364:	f800283a 	ret
10110368:	00800034 	movhi	r2,0
1011036c:	10800004 	addi	r2,r2,0
10110370:	10002626 	beq	r2,zero,1011040c <__register_exitproc+0x110>
10110374:	01006404 	movi	r4,400
10110378:	d9400015 	stw	r5,0(sp)
1011037c:	d9800115 	stw	r6,4(sp)
10110380:	d9c00215 	stw	r7,8(sp)
10110384:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
10110388:	d9400017 	ldw	r5,0(sp)
1011038c:	d9800117 	ldw	r6,4(sp)
10110390:	d9c00217 	ldw	r7,8(sp)
10110394:	10001d26 	beq	r2,zero,1011040c <__register_exitproc+0x110>
10110398:	81000017 	ldw	r4,0(r16)
1011039c:	10000115 	stw	zero,4(r2)
101103a0:	02000044 	movi	r8,1
101103a4:	22405217 	ldw	r9,328(r4)
101103a8:	0007883a 	mov	r3,zero
101103ac:	12400015 	stw	r9,0(r2)
101103b0:	20805215 	stw	r2,328(r4)
101103b4:	10006215 	stw	zero,392(r2)
101103b8:	10006315 	stw	zero,396(r2)
101103bc:	883fde26 	beq	r17,zero,10110338 <__alt_data_end+0xffff0338>
101103c0:	18c9883a 	add	r4,r3,r3
101103c4:	2109883a 	add	r4,r4,r4
101103c8:	1109883a 	add	r4,r2,r4
101103cc:	21802215 	stw	r6,136(r4)
101103d0:	01800044 	movi	r6,1
101103d4:	12406217 	ldw	r9,392(r2)
101103d8:	30cc983a 	sll	r6,r6,r3
101103dc:	4992b03a 	or	r9,r9,r6
101103e0:	12406215 	stw	r9,392(r2)
101103e4:	21c04215 	stw	r7,264(r4)
101103e8:	01000084 	movi	r4,2
101103ec:	893fd21e 	bne	r17,r4,10110338 <__alt_data_end+0xffff0338>
101103f0:	11006317 	ldw	r4,396(r2)
101103f4:	218cb03a 	or	r6,r4,r6
101103f8:	11806315 	stw	r6,396(r2)
101103fc:	003fce06 	br	10110338 <__alt_data_end+0xffff0338>
10110400:	18805304 	addi	r2,r3,332
10110404:	18805215 	stw	r2,328(r3)
10110408:	003fc606 	br	10110324 <__alt_data_end+0xffff0324>
1011040c:	00bfffc4 	movi	r2,-1
10110410:	003fd006 	br	10110354 <__alt_data_end+0xffff0354>

10110414 <__call_exitprocs>:
10110414:	defff504 	addi	sp,sp,-44
10110418:	df000915 	stw	fp,36(sp)
1011041c:	dd400615 	stw	r21,24(sp)
10110420:	dc800315 	stw	r18,12(sp)
10110424:	dfc00a15 	stw	ra,40(sp)
10110428:	ddc00815 	stw	r23,32(sp)
1011042c:	dd800715 	stw	r22,28(sp)
10110430:	dd000515 	stw	r20,20(sp)
10110434:	dcc00415 	stw	r19,16(sp)
10110438:	dc400215 	stw	r17,8(sp)
1011043c:	dc000115 	stw	r16,4(sp)
10110440:	d9000015 	stw	r4,0(sp)
10110444:	2839883a 	mov	fp,r5
10110448:	04800044 	movi	r18,1
1011044c:	057fffc4 	movi	r21,-1
10110450:	00840474 	movhi	r2,4113
10110454:	10890304 	addi	r2,r2,9228
10110458:	12000017 	ldw	r8,0(r2)
1011045c:	45005217 	ldw	r20,328(r8)
10110460:	44c05204 	addi	r19,r8,328
10110464:	a0001c26 	beq	r20,zero,101104d8 <__call_exitprocs+0xc4>
10110468:	a0800117 	ldw	r2,4(r20)
1011046c:	15ffffc4 	addi	r23,r2,-1
10110470:	b8000d16 	blt	r23,zero,101104a8 <__call_exitprocs+0x94>
10110474:	14000044 	addi	r16,r2,1
10110478:	8421883a 	add	r16,r16,r16
1011047c:	8421883a 	add	r16,r16,r16
10110480:	84402004 	addi	r17,r16,128
10110484:	a463883a 	add	r17,r20,r17
10110488:	a421883a 	add	r16,r20,r16
1011048c:	e0001e26 	beq	fp,zero,10110508 <__call_exitprocs+0xf4>
10110490:	80804017 	ldw	r2,256(r16)
10110494:	e0801c26 	beq	fp,r2,10110508 <__call_exitprocs+0xf4>
10110498:	bdffffc4 	addi	r23,r23,-1
1011049c:	843fff04 	addi	r16,r16,-4
101104a0:	8c7fff04 	addi	r17,r17,-4
101104a4:	bd7ff91e 	bne	r23,r21,1011048c <__alt_data_end+0xffff048c>
101104a8:	00800034 	movhi	r2,0
101104ac:	10800004 	addi	r2,r2,0
101104b0:	10000926 	beq	r2,zero,101104d8 <__call_exitprocs+0xc4>
101104b4:	a0800117 	ldw	r2,4(r20)
101104b8:	1000301e 	bne	r2,zero,1011057c <__call_exitprocs+0x168>
101104bc:	a0800017 	ldw	r2,0(r20)
101104c0:	10003226 	beq	r2,zero,1011058c <__call_exitprocs+0x178>
101104c4:	a009883a 	mov	r4,r20
101104c8:	98800015 	stw	r2,0(r19)
101104cc:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
101104d0:	9d000017 	ldw	r20,0(r19)
101104d4:	a03fe41e 	bne	r20,zero,10110468 <__alt_data_end+0xffff0468>
101104d8:	dfc00a17 	ldw	ra,40(sp)
101104dc:	df000917 	ldw	fp,36(sp)
101104e0:	ddc00817 	ldw	r23,32(sp)
101104e4:	dd800717 	ldw	r22,28(sp)
101104e8:	dd400617 	ldw	r21,24(sp)
101104ec:	dd000517 	ldw	r20,20(sp)
101104f0:	dcc00417 	ldw	r19,16(sp)
101104f4:	dc800317 	ldw	r18,12(sp)
101104f8:	dc400217 	ldw	r17,8(sp)
101104fc:	dc000117 	ldw	r16,4(sp)
10110500:	dec00b04 	addi	sp,sp,44
10110504:	f800283a 	ret
10110508:	a0800117 	ldw	r2,4(r20)
1011050c:	80c00017 	ldw	r3,0(r16)
10110510:	10bfffc4 	addi	r2,r2,-1
10110514:	15c01426 	beq	r2,r23,10110568 <__call_exitprocs+0x154>
10110518:	80000015 	stw	zero,0(r16)
1011051c:	183fde26 	beq	r3,zero,10110498 <__alt_data_end+0xffff0498>
10110520:	95c8983a 	sll	r4,r18,r23
10110524:	a0806217 	ldw	r2,392(r20)
10110528:	a5800117 	ldw	r22,4(r20)
1011052c:	2084703a 	and	r2,r4,r2
10110530:	10000b26 	beq	r2,zero,10110560 <__call_exitprocs+0x14c>
10110534:	a0806317 	ldw	r2,396(r20)
10110538:	2088703a 	and	r4,r4,r2
1011053c:	20000c1e 	bne	r4,zero,10110570 <__call_exitprocs+0x15c>
10110540:	89400017 	ldw	r5,0(r17)
10110544:	d9000017 	ldw	r4,0(sp)
10110548:	183ee83a 	callr	r3
1011054c:	a0800117 	ldw	r2,4(r20)
10110550:	15bfbf1e 	bne	r2,r22,10110450 <__alt_data_end+0xffff0450>
10110554:	98800017 	ldw	r2,0(r19)
10110558:	153fcf26 	beq	r2,r20,10110498 <__alt_data_end+0xffff0498>
1011055c:	003fbc06 	br	10110450 <__alt_data_end+0xffff0450>
10110560:	183ee83a 	callr	r3
10110564:	003ff906 	br	1011054c <__alt_data_end+0xffff054c>
10110568:	a5c00115 	stw	r23,4(r20)
1011056c:	003feb06 	br	1011051c <__alt_data_end+0xffff051c>
10110570:	89000017 	ldw	r4,0(r17)
10110574:	183ee83a 	callr	r3
10110578:	003ff406 	br	1011054c <__alt_data_end+0xffff054c>
1011057c:	a0800017 	ldw	r2,0(r20)
10110580:	a027883a 	mov	r19,r20
10110584:	1029883a 	mov	r20,r2
10110588:	003fb606 	br	10110464 <__alt_data_end+0xffff0464>
1011058c:	0005883a 	mov	r2,zero
10110590:	003ffb06 	br	10110580 <__alt_data_end+0xffff0580>

10110594 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
10110594:	defffd04 	addi	sp,sp,-12
10110598:	df000215 	stw	fp,8(sp)
1011059c:	df000204 	addi	fp,sp,8
101105a0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
101105a4:	0001883a 	nop
101105a8:	e0bfff17 	ldw	r2,-4(fp)
101105ac:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
101105b0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
101105b4:	10000226 	beq	r2,zero,101105c0 <_exit+0x2c>
    ALT_SIM_FAIL();
101105b8:	002af070 	cmpltui	zero,zero,43969
101105bc:	00000106 	br	101105c4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
101105c0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
101105c4:	003fff06 	br	101105c4 <__alt_data_end+0xffff05c4>
