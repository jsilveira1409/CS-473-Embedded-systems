
lab4.elf:     file format elf32-littlenios2
lab4.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10100230

Program Header:
    LOAD off    0x00001000 vaddr 0x10100000 paddr 0x10100000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10100020 paddr 0x10100020 align 2**12
         filesz 0x0001043c memsz 0x0001043c flags r-x
    LOAD off    0x0001145c vaddr 0x1011045c paddr 0x10111f48 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00013a34 vaddr 0x10113a34 paddr 0x10113a34 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10100000  10100000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  10100020  10100020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fdf8  10100230  10100230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000434  10110028  10110028  00011028  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  1011045c  10111f48  0001145c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10113a34  10113a34  00013a34  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  10113b94  10113b94  00012f48  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012f48  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e98  00000000  00000000  00012f70  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000233e3  00000000  00000000  00013e08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008ee5  00000000  00000000  000371eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b510  00000000  00000000  000400d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002150  00000000  00000000  0004b5e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003911  00000000  00000000  0004d730  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001786c  00000000  00000000  00051041  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000688b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018d0  00000000  00000000  000688c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006d256  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006d259  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006d265  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006d266  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006d267  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006d272  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006d27d  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  0006d288  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000004e  00000000  00000000  0006d292  2**0
                  CONTENTS, READONLY
 26 .jdi          0000512a  00000000  00000000  0006d2e0  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0027e397  00000000  00000000  0007240a  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10100000 l    d  .entry	00000000 .entry
10100020 l    d  .exceptions	00000000 .exceptions
10100230 l    d  .text	00000000 .text
10110028 l    d  .rodata	00000000 .rodata
1011045c l    d  .rwdata	00000000 .rwdata
10113a34 l    d  .bss	00000000 .bss
10113b94 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/Users/osour/Desktop/EmbSys/Lab4/LAB4-test/lab_4_project_template/sw/nios/application//obj/HAL/src/crt0.o
10100268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
101101a2 l     O .rodata	00000010 zeroes.4404
10103248 l     F .text	000000bc __sbprintf
101101b2 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
10103458 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
10104fb0 l     F .text	00000008 __fp_unlock
10104fc4 l     F .text	0000019c __sinit.part.1
10105160 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
1011045c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
101108a0 l     O .rwdata	00000020 lc_ctype_charset
10110880 l     O .rwdata	00000020 lc_message_charset
101108c0 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
101101e4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
101084ec l     F .text	000000fc __sprint_r.part.0
10110308 l     O .rodata	00000010 zeroes.4349
10109b28 l     F .text	000000bc __sbprintf
10110318 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
1010d994 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1010daa8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1010dad4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
1010dbc8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1010dcb0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1010dd9c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
1010df78 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10111f38 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
1010e1ec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1010e328 l     F .text	00000034 alt_dev_reg
10110ea8 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1010e600 l     F .text	0000020c altera_avalon_jtag_uart_irq
1010e80c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1010ef90 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1010f3f0 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1010f550 l     F .text	0000003c alt_get_errno
1010f58c l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
10113a68 g     O .bss	00000004 alt_instruction_exception_handler
10107b30 g     F .text	00000074 _mprec_log10
10107c1c g     F .text	0000008c __any_on
1010a0dc g     F .text	00000054 _isatty_r
101101f0 g     O .rodata	00000028 __mprec_tinytens
1010deb4 g     F .text	0000007c alt_main
10100de4 g     F .text	000000c0 _puts_r
10113a94 g     O .bss	00000100 alt_irq
1010a130 g     F .text	00000060 _lseek_r
10111f48 g       *ABS*	00000000 __flash_rwdata_start
1010c36c g     F .text	00000088 .hidden __eqdf2
10113b94 g       *ABS*	00000000 __alt_heap_start
10100da8 g     F .text	0000003c printf
1010a348 g     F .text	0000009c _wcrtomb_r
101083ac g     F .text	0000005c __sseek
10105310 g     F .text	00000010 __sinit
1010a1f0 g     F .text	00000140 __swbuf_r
10105de4 g     F .text	0000007c _setlocale_r
10105168 g     F .text	00000078 __sfmoreglue
1010df54 g     F .text	00000024 __malloc_unlock
1010696c g     F .text	0000015c memmove
101052f8 g     F .text	00000018 _cleanup
10106bf0 g     F .text	000000a8 _Balloc
1010c3f4 g     F .text	000000dc .hidden __gtdf2
1010f978 g     F .text	00000024 altera_nios2_gen2_irq_init
10100000 g     F .entry	0000000c __reset
10100020 g       *ABS*	00000000 __flash_exceptions_start
1010a080 g     F .text	0000005c _fstat_r
10113a4c g     O .bss	00000004 errno
10108328 g     F .text	00000008 __seofread
10113a54 g     O .bss	00000004 alt_argv
10119f08 g       *ABS*	00000000 _gp
10110d28 g     O .rwdata	00000180 alt_fd_list
1010f99c g     F .text	00000090 alt_find_dev
10100c30 g     F .text	00000148 memcpy
10104fb8 g     F .text	0000000c _cleanup_r
1010d7ac g     F .text	000000dc .hidden __floatsidf
1010f4d4 g     F .text	0000007c alt_io_redirect
1010c4d0 g     F .text	000000f4 .hidden __ltdf2
10110028 g       *ABS*	00000000 __DTOR_END__
10100ea4 g     F .text	00000014 puts
1010fbf8 g     F .text	0000009c alt_exception_cause_generated_bad_addr
1010820c g     F .text	00000074 __fpclassifyd
10107a8c g     F .text	000000a4 __ratio
10109b0c g     F .text	0000001c __vfiprintf_internal
1010ea04 g     F .text	0000021c altera_avalon_jtag_uart_read
10100d78 g     F .text	00000030 _printf_r
10100000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
10100b4c g     F .text	00000064 .hidden __udivsi3
1010dc04 g     F .text	000000ac isatty
10110240 g     O .rodata	000000c8 __mprec_tens
10105e60 g     F .text	0000000c __locale_charset
10113a48 g     O .bss	00000004 __malloc_top_pad
10111f10 g     O .rwdata	00000004 __mb_cur_max
10105e90 g     F .text	0000000c _localeconv_r
10107024 g     F .text	0000003c __i2b
10105794 g     F .text	000004c8 __sfvwrite_r
10108280 g     F .text	00000054 _sbrk_r
1010a190 g     F .text	00000060 _read_r
10111f30 g     O .rwdata	00000004 alt_max_fd
10109d74 g     F .text	000000f0 _fclose_r
10104f80 g     F .text	00000030 fflush
10113a44 g     O .bss	00000004 __malloc_max_sbrked_mem
1010b0f0 g     F .text	000008ac .hidden __adddf3
10107834 g     F .text	0000010c __b2d
1010ab2c g     F .text	000005c4 .hidden __umoddi3
1010ddd8 g     F .text	000000dc lseek
10111f08 g     O .rwdata	00000004 _global_impure_ptr
10107ca8 g     F .text	00000564 _realloc_r
10113b94 g       *ABS*	00000000 __bss_end
1010f300 g     F .text	000000f0 alt_iic_isr_register
1010f870 g     F .text	00000108 alt_tick
1010a530 g     F .text	000005fc .hidden __udivdi3
10109fdc g     F .text	00000024 _fputwc_r
10110218 g     O .rodata	00000028 __mprec_bigtens
10106e08 g     F .text	00000104 __s2b
1010d888 g     F .text	000000a8 .hidden __floatunsidf
10107574 g     F .text	00000060 __mcmp
10105330 g     F .text	00000018 __fp_lock_all
1010f2b4 g     F .text	0000004c alt_ic_irq_enabled
1010f7d4 g     F .text	0000009c alt_alarm_stop
10113a5c g     O .bss	00000004 alt_irq_active
101000fc g     F .exceptions	000000d4 alt_irq_handler
10110d00 g     O .rwdata	00000028 alt_dev_null
1010ef70 g     F .text	00000020 alt_dcache_flush_all
10106f0c g     F .text	00000068 __hi0bits
1010d72c g     F .text	00000080 .hidden __fixdfsi
10111f48 g       *ABS*	00000000 __ram_rwdata_end
10111f28 g     O .rwdata	00000008 alt_dev_list
1010e228 g     F .text	00000100 write
1011045c g       *ABS*	00000000 __ram_rodata_end
1010db10 g     F .text	000000b8 fstat
1010c4d0 g     F .text	000000f4 .hidden __ledf2
1010026c g     F .text	00000058 lcd_flag_set
101072ec g     F .text	00000140 __pow5mult
10108600 g     F .text	0000150c ___vfiprintf_internal_r
10113a3c g     O .bss	00000004 __nlocale_changed
10100bb0 g     F .text	00000058 .hidden __umodsi3
10113b94 g       *ABS*	00000000 end
1010e540 g     F .text	000000c0 altera_avalon_jtag_uart_init
101001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
10110028 g       *ABS*	00000000 __CTOR_LIST__
10120000 g       *ABS*	00000000 __alt_stack_pointer
1010d930 g     F .text	00000064 .hidden __clzsi2
1010ec20 g     F .text	00000224 altera_avalon_jtag_uart_write
10105320 g     F .text	00000004 __sfp_lock_acquire
10106888 g     F .text	000000e4 memchr
10100f50 g     F .text	000022dc ___vfprintf_internal_r
10105484 g     F .text	00000310 _free_r
10105e6c g     F .text	00000010 __locale_mb_cur_max
1010fe74 g     F .text	00000180 __call_exitprocs
10113a38 g     O .bss	00000004 __mlocale_changed
10111f14 g     O .rwdata	00000004 __malloc_sbrk_base
10100230 g     F .text	0000003c _start
10113a60 g     O .bss	00000004 _alt_tick_rate
1010742c g     F .text	00000148 __lshift
10113a64 g     O .bss	00000004 _alt_nticks
1010dfb4 g     F .text	00000104 read
1010e394 g     F .text	00000048 alt_sys_init
1010fd5c g     F .text	00000118 __register_exitproc
10107060 g     F .text	0000028c __multiply
1010e8ac g     F .text	00000068 altera_avalon_jtag_uart_close
10100c08 g     F .text	00000028 .hidden __mulsi3
1011045c g       *ABS*	00000000 __ram_rwdata_start
10110028 g       *ABS*	00000000 __ram_rodata_start
10113a6c g     O .bss	00000028 __malloc_current_mallinfo
10107940 g     F .text	0000014c __d2b
1010e3dc g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1010fb34 g     F .text	000000c4 alt_get_fd
10109c44 g     F .text	00000054 _close_r
1010fce0 g     F .text	0000007c memcmp
1010e49c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
10113b94 g       *ABS*	00000000 __alt_stack_base
1010e4ec g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10103304 g     F .text	00000154 __swsetup_r
1010b99c g     F .text	000009d0 .hidden __divdf3
101051e0 g     F .text	00000118 __sfp
10107ba4 g     F .text	00000078 __copybits
101108f8 g     O .rwdata	00000408 __malloc_av_
1010532c g     F .text	00000004 __sinit_lock_release
1010c5c4 g     F .text	0000086c .hidden __muldf3
101082d4 g     F .text	00000054 __sread
1010fa2c g     F .text	00000108 alt_find_file
1010efcc g     F .text	000000a4 alt_dev_llist_insert
1010df30 g     F .text	00000024 __malloc_lock
1010e13c g     F .text	000000b0 sbrk
10104f24 g     F .text	0000005c _fflush_r
10109c98 g     F .text	000000dc _calloc_r
1010032c g     F .text	000000f4 send_command
10113a34 g       *ABS*	00000000 __bss_start
10106ac8 g     F .text	00000128 memset
101009a0 g     F .text	000000b4 main
10113a58 g     O .bss	00000004 alt_envp
10113a40 g     O .bss	00000004 __malloc_max_total_mem
1010e43c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
1010a330 g     F .text	00000018 __swbuf
10108408 g     F .text	00000008 __sclose
10120000 g       *ABS*	00000000 __alt_heap_limit
10109e64 g     F .text	00000014 fclose
10103680 g     F .text	00001688 _dtoa_r
1010607c g     F .text	0000080c _malloc_r
1010a4a4 g     F .text	00000030 __ascii_wctomb
10111f34 g     O .rwdata	00000004 alt_errno
10105c5c g     F .text	000000c4 _fwalk
10100a54 g     F .text	00000084 .hidden __divsi3
10105360 g     F .text	00000124 _malloc_trim_r
10110028 g       *ABS*	00000000 __CTOR_END__
10108410 g     F .text	000000dc strcmp
10110028 g       *ABS*	00000000 __flash_rodata_start
10110028 g       *ABS*	00000000 __DTOR_LIST__
1010c36c g     F .text	00000088 .hidden __nedf2
1010e35c g     F .text	00000038 alt_irq_init
1010e0b8 g     F .text	00000084 alt_release_fd
10110328 g     O .rodata	00000100 .hidden __clz_tab
10113a34 g     O .bss	00000004 _PathLocale
10100420 g     F .text	00000068 start_lcd
1010fc94 g     F .text	00000014 atexit
10109be4 g     F .text	00000060 _write_r
10105e9c g     F .text	00000018 setlocale
1010087c g     F .text	00000124 init_image
10111f0c g     O .rwdata	00000004 _impure_ptr
10113a50 g     O .bss	00000004 alt_argc
10104d08 g     F .text	0000021c __sflush_r
1010f0d0 g     F .text	00000060 _do_dtors
10105e88 g     F .text	00000008 __locale_cjk_lang
10100020 g       .exceptions	00000000 alt_irq_entry
101002c4 g     F .text	00000068 lcd_reset
101077d0 g     F .text	00000064 __ulp
10105348 g     F .text	00000018 __fp_unlock_all
10111f20 g     O .rwdata	00000008 alt_fs_list
10100020 g       *ABS*	00000000 __ram_exceptions_start
10105eb4 g     F .text	0000000c localeconv
1010f150 g     F .text	00000050 alt_ic_isr_register
10111f48 g       *ABS*	00000000 _edata
10113b94 g       *ABS*	00000000 _end
10100800 g     F .text	0000007c configure_image
10109e78 g     F .text	00000164 __fputwc
10100230 g       *ABS*	00000000 __ram_exceptions_end
1010e914 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
1010f228 g     F .text	0000008c alt_ic_irq_disable
10108330 g     F .text	0000007c __swrite
10111f18 g     O .rwdata	00000004 __malloc_trim_threshold
10105e7c g     F .text	0000000c __locale_msgcharset
1010fca8 g     F .text	00000038 exit
10105d20 g     F .text	000000c4 _fwalk_reent
101075d4 g     F .text	000001fc __mdiff
10100ad8 g     F .text	00000074 .hidden __modsi3
10100488 g     F .text	00000378 init_lcd
10120000 g       *ABS*	00000000 __alt_data_end
10100020 g     F .exceptions	00000000 alt_exception
10105324 g     F .text	00000004 __sfp_lock_release
1010fff4 g     F .text	00000034 _exit
1010ee44 g     F .text	0000012c alt_alarm_start
10105ec0 g     F .text	000001bc __smakebuf_r
10100eb8 g     F .text	00000098 strlen
1010f678 g     F .text	0000015c open
1010c3f4 g     F .text	000000dc .hidden __gedf2
10111f1c g     O .rwdata	00000004 __wctomb
101085e8 g     F .text	00000018 __sprint_r
1010f130 g     F .text	00000020 alt_icache_flush_all
10111f3c g     O .rwdata	00000004 alt_priority_mask
1010f1a0 g     F .text	00000088 alt_ic_irq_enable
1010322c g     F .text	0000001c __vfprintf_internal
1010a4d4 g     F .text	0000005c _wctomb_r
1010ce30 g     F .text	000008fc .hidden __subdf3
10106f74 g     F .text	000000b0 __lo0bits
10111f40 g     O .rwdata	00000008 alt_alarm_list
1010f070 g     F .text	00000060 _do_ctors
1010a3e4 g     F .text	000000c0 wcrtomb
1010d9d0 g     F .text	000000d8 close
1010dd18 g     F .text	00000084 alt_load
1010a000 g     F .text	00000080 fputwc
10105328 g     F .text	00000004 __sinit_lock_acquire
10106cc0 g     F .text	00000148 __multadd
10106c98 g     F .text	00000028 _Bfree



Disassembly of section .entry:

10100000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10100000:	00440434 	movhi	at,4112
    ori r1, r1, %lo(_start)
10100004:	08408c14 	ori	at,at,560
    jmp r1
10100008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

10100020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10100020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10100024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10100028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1010002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10100030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10100034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10100038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1010003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10100040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10100044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10100048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1010004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10100050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10100054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10100058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1010005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10100060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10100064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10100068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1010006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10100070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10100074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10100078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1010007c:	10000326 	beq	r2,zero,1010008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10100080:	20000226 	beq	r4,zero,1010008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10100084:	01000fc0 	call	101000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10100088:	00000706 	br	101000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1010008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10100090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10100094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10100098:	01001d00 	call	101001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1010009c:	1000021e 	bne	r2,zero,101000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
101000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
101000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
101000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
101000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
101000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
101000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
101000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
101000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
101000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
101000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
101000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
101000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
101000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
101000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
101000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
101000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
101000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
101000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
101000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
101000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
101000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
101000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
101000f8:	ef80083a 	eret

101000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
101000fc:	defff904 	addi	sp,sp,-28
10100100:	dfc00615 	stw	ra,24(sp)
10100104:	df000515 	stw	fp,20(sp)
10100108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1010010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10100110:	0005313a 	rdctl	r2,ipending
10100114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10100118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1010011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10100120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10100124:	00800044 	movi	r2,1
10100128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1010012c:	e0fffb17 	ldw	r3,-20(fp)
10100130:	e0bffc17 	ldw	r2,-16(fp)
10100134:	1884703a 	and	r2,r3,r2
10100138:	10001426 	beq	r2,zero,1010018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1010013c:	00840474 	movhi	r2,4113
10100140:	108ea504 	addi	r2,r2,14996
10100144:	e0fffd17 	ldw	r3,-12(fp)
10100148:	180690fa 	slli	r3,r3,3
1010014c:	10c5883a 	add	r2,r2,r3
10100150:	10c00017 	ldw	r3,0(r2)
10100154:	00840474 	movhi	r2,4113
10100158:	108ea504 	addi	r2,r2,14996
1010015c:	e13ffd17 	ldw	r4,-12(fp)
10100160:	200890fa 	slli	r4,r4,3
10100164:	1105883a 	add	r2,r2,r4
10100168:	10800104 	addi	r2,r2,4
1010016c:	10800017 	ldw	r2,0(r2)
10100170:	1009883a 	mov	r4,r2
10100174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10100178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1010017c:	0005313a 	rdctl	r2,ipending
10100180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10100184:	e0bfff17 	ldw	r2,-4(fp)
10100188:	00000706 	br	101001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1010018c:	e0bffc17 	ldw	r2,-16(fp)
10100190:	1085883a 	add	r2,r2,r2
10100194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10100198:	e0bffd17 	ldw	r2,-12(fp)
1010019c:	10800044 	addi	r2,r2,1
101001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
101001a4:	003fe106 	br	1010012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
101001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
101001ac:	e0bffb17 	ldw	r2,-20(fp)
101001b0:	103fdb1e 	bne	r2,zero,10100120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
101001b4:	0001883a 	nop
}
101001b8:	0001883a 	nop
101001bc:	e037883a 	mov	sp,fp
101001c0:	dfc00117 	ldw	ra,4(sp)
101001c4:	df000017 	ldw	fp,0(sp)
101001c8:	dec00204 	addi	sp,sp,8
101001cc:	f800283a 	ret

101001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
101001d0:	defffb04 	addi	sp,sp,-20
101001d4:	dfc00415 	stw	ra,16(sp)
101001d8:	df000315 	stw	fp,12(sp)
101001dc:	df000304 	addi	fp,sp,12
101001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
101001e4:	00bfffc4 	movi	r2,-1
101001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
101001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
101001f0:	d0a6d817 	ldw	r2,-25760(gp)
101001f4:	10000726 	beq	r2,zero,10100214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
101001f8:	d0a6d817 	ldw	r2,-25760(gp)
101001fc:	e0fffd17 	ldw	r3,-12(fp)
10100200:	e1bffe17 	ldw	r6,-8(fp)
10100204:	e17fff17 	ldw	r5,-4(fp)
10100208:	1809883a 	mov	r4,r3
1010020c:	103ee83a 	callr	r2
10100210:	00000206 	br	1010021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10100214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10100218:	0005883a 	mov	r2,zero
}
1010021c:	e037883a 	mov	sp,fp
10100220:	dfc00117 	ldw	ra,4(sp)
10100224:	df000017 	ldw	fp,0(sp)
10100228:	dec00204 	addi	sp,sp,8
1010022c:	f800283a 	ret

Disassembly of section .text:

10100230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10100230:	06c404b4 	movhi	sp,4114
    ori sp, sp, %lo(__alt_stack_pointer)
10100234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10100238:	06840474 	movhi	gp,4113
    ori gp, gp, %lo(_gp)
1010023c:	d6a7c214 	ori	gp,gp,40712
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10100240:	00840474 	movhi	r2,4113
    ori r2, r2, %lo(__bss_start)
10100244:	108e8d14 	ori	r2,r2,14900

    movhi r3, %hi(__bss_end)
10100248:	00c40474 	movhi	r3,4113
    ori r3, r3, %lo(__bss_end)
1010024c:	18cee514 	ori	r3,r3,15252

    beq r2, r3, 1f
10100250:	10c00326 	beq	r2,r3,10100260 <_start+0x30>

0:
    stw zero, (r2)
10100254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10100258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
1010025c:	10fffd36 	bltu	r2,r3,10100254 <__alt_data_end+0xfffe0254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10100260:	010dd180 	call	1010dd18 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10100264:	010deb40 	call	1010deb4 <alt_main>

10100268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10100268:	003fff06 	br	10100268 <__alt_data_end+0xfffe0268>

1010026c <lcd_flag_set>:
#define LCD_REG_NB_PARAM				0x0C
#define LCD_REG_PARAM(index)+ index*2



void lcd_flag_set (uint16_t flag){
1010026c:	defffd04 	addi	sp,sp,-12
10100270:	df000215 	stw	fp,8(sp)
10100274:	df000204 	addi	fp,sp,8
10100278:	2005883a 	mov	r2,r4
1010027c:	e0bfff0d 	sth	r2,-4(fp)
	uint16_t reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
10100280:	00840034 	movhi	r2,4096
10100284:	10820404 	addi	r2,r2,2064
10100288:	1080002b 	ldhuio	r2,0(r2)
1010028c:	10bfffcc 	andi	r2,r2,65535
10100290:	e0bffe0d 	sth	r2,-8(fp)
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS, reg_flag_val |flag);
10100294:	e0fffe0b 	ldhu	r3,-8(fp)
10100298:	e0bfff0b 	ldhu	r2,-4(fp)
1010029c:	1884b03a 	or	r2,r3,r2
101002a0:	10ffffcc 	andi	r3,r2,65535
101002a4:	00840034 	movhi	r2,4096
101002a8:	10820404 	addi	r2,r2,2064
101002ac:	10c0002d 	sthio	r3,0(r2)
}
101002b0:	0001883a 	nop
101002b4:	e037883a 	mov	sp,fp
101002b8:	df000017 	ldw	fp,0(sp)
101002bc:	dec00104 	addi	sp,sp,4
101002c0:	f800283a 	ret

101002c4 <lcd_reset>:

void lcd_reset(){
101002c4:	defffd04 	addi	sp,sp,-12
101002c8:	dfc00215 	stw	ra,8(sp)
101002cc:	df000115 	stw	fp,4(sp)
101002d0:	df000104 	addi	fp,sp,4
	lcd_flag_set(0x04);
101002d4:	01000104 	movi	r4,4
101002d8:	010026c0 	call	1010026c <lcd_flag_set>
	uint16_t reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
101002dc:	00840034 	movhi	r2,4096
101002e0:	10820404 	addi	r2,r2,2064
101002e4:	1080002b 	ldhuio	r2,0(r2)
101002e8:	10bfffcc 	andi	r2,r2,65535
101002ec:	e0bfff0d 	sth	r2,-4(fp)
	while( reg_flag_val & 0x04){
101002f0:	00000506 	br	10100308 <lcd_reset+0x44>
		reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
101002f4:	00840034 	movhi	r2,4096
101002f8:	10820404 	addi	r2,r2,2064
101002fc:	1080002b 	ldhuio	r2,0(r2)
10100300:	10bfffcc 	andi	r2,r2,65535
10100304:	e0bfff0d 	sth	r2,-4(fp)
}

void lcd_reset(){
	lcd_flag_set(0x04);
	uint16_t reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	while( reg_flag_val & 0x04){
10100308:	e0bfff0b 	ldhu	r2,-4(fp)
1010030c:	1080010c 	andi	r2,r2,4
10100310:	103ff81e 	bne	r2,zero,101002f4 <__alt_data_end+0xfffe02f4>
		reg_flag_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	}
}
10100314:	0001883a 	nop
10100318:	e037883a 	mov	sp,fp
1010031c:	dfc00117 	ldw	ra,4(sp)
10100320:	df000017 	ldw	fp,0(sp)
10100324:	dec00204 	addi	sp,sp,8
10100328:	f800283a 	ret

1010032c <send_command>:

void send_command(uint16_t cmd, uint16_t n, uint16_t* params)
{
1010032c:	defffb04 	addi	sp,sp,-20
10100330:	df000415 	stw	fp,16(sp)
10100334:	df000404 	addi	fp,sp,16
10100338:	2007883a 	mov	r3,r4
1010033c:	2805883a 	mov	r2,r5
10100340:	e1bfff15 	stw	r6,-4(fp)
10100344:	e0fffd0d 	sth	r3,-12(fp)
10100348:	e0bffe0d 	sth	r2,-8(fp)
	uint16_t index = 0;
1010034c:	e03ffc0d 	sth	zero,-16(fp)

	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_CMD_REG, cmd);
10100350:	e0fffd0b 	ldhu	r3,-12(fp)
10100354:	00840034 	movhi	r2,4096
10100358:	10820484 	addi	r2,r2,2066
1010035c:	10c0002d 	sthio	r3,0(r2)
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_NB_PARAM, n);
10100360:	e0fffe0b 	ldhu	r3,-8(fp)
10100364:	00840034 	movhi	r2,4096
10100368:	10820504 	addi	r2,r2,2068
1010036c:	10c0002d 	sthio	r3,0(r2)


	while(index < n){
10100370:	00001106 	br	101003b8 <send_command+0x8c>
		IOWR_16DIRECT(LCD_0_BASE, LCD_REG_PARAM(index), params[index]);
10100374:	e0bffc0b 	ldhu	r2,-16(fp)
10100378:	1085883a 	add	r2,r2,r2
1010037c:	1007883a 	mov	r3,r2
10100380:	00840034 	movhi	r2,4096
10100384:	10820204 	addi	r2,r2,2056
10100388:	1887883a 	add	r3,r3,r2
1010038c:	e0bffc0b 	ldhu	r2,-16(fp)
10100390:	1085883a 	add	r2,r2,r2
10100394:	1009883a 	mov	r4,r2
10100398:	e0bfff17 	ldw	r2,-4(fp)
1010039c:	1105883a 	add	r2,r2,r4
101003a0:	1080000b 	ldhu	r2,0(r2)
101003a4:	10bfffcc 	andi	r2,r2,65535
101003a8:	1880002d 	sthio	r2,0(r3)
		++index;
101003ac:	e0bffc0b 	ldhu	r2,-16(fp)
101003b0:	10800044 	addi	r2,r2,1
101003b4:	e0bffc0d 	sth	r2,-16(fp)

	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_CMD_REG, cmd);
	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_NB_PARAM, n);


	while(index < n){
101003b8:	e0fffc0b 	ldhu	r3,-16(fp)
101003bc:	e0bffe0b 	ldhu	r2,-8(fp)
101003c0:	18bfec36 	bltu	r3,r2,10100374 <__alt_data_end+0xfffe0374>
		IOWR_16DIRECT(LCD_0_BASE, LCD_REG_PARAM(index), params[index]);
		++index;
	}

	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS, 0x2);
101003c4:	00c00084 	movi	r3,2
101003c8:	00840034 	movhi	r2,4096
101003cc:	10820404 	addi	r2,r2,2064
101003d0:	10c0002d 	sthio	r3,0(r2)
	uint16_t reg_flags = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
101003d4:	00840034 	movhi	r2,4096
101003d8:	10820404 	addi	r2,r2,2064
101003dc:	1080002b 	ldhuio	r2,0(r2)
101003e0:	10bfffcc 	andi	r2,r2,65535
101003e4:	e0bffc8d 	sth	r2,-14(fp)
	while(reg_flags & 0x2){
101003e8:	00000506 	br	10100400 <send_command+0xd4>
		reg_flags = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
101003ec:	00840034 	movhi	r2,4096
101003f0:	10820404 	addi	r2,r2,2064
101003f4:	1080002b 	ldhuio	r2,0(r2)
101003f8:	10bfffcc 	andi	r2,r2,65535
101003fc:	e0bffc8d 	sth	r2,-14(fp)
		++index;
	}

	IOWR_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS, 0x2);
	uint16_t reg_flags = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	while(reg_flags & 0x2){
10100400:	e0bffc8b 	ldhu	r2,-14(fp)
10100404:	1080008c 	andi	r2,r2,2
10100408:	103ff81e 	bne	r2,zero,101003ec <__alt_data_end+0xfffe03ec>
		reg_flags = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	}
}
1010040c:	0001883a 	nop
10100410:	e037883a 	mov	sp,fp
10100414:	df000017 	ldw	fp,0(sp)
10100418:	dec00104 	addi	sp,sp,4
1010041c:	f800283a 	ret

10100420 <start_lcd>:

void start_lcd(){
10100420:	defffd04 	addi	sp,sp,-12
10100424:	dfc00215 	stw	ra,8(sp)
10100428:	df000115 	stw	fp,4(sp)
1010042c:	df000104 	addi	fp,sp,4
	lcd_flag_set(0x01);
10100430:	01000044 	movi	r4,1
10100434:	010026c0 	call	1010026c <lcd_flag_set>
	uint16_t reg_flags_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
10100438:	00840034 	movhi	r2,4096
1010043c:	10820404 	addi	r2,r2,2064
10100440:	1080002b 	ldhuio	r2,0(r2)
10100444:	10bfffcc 	andi	r2,r2,65535
10100448:	e0bfff0d 	sth	r2,-4(fp)

	while(reg_flags_val & 0x1){
1010044c:	00000506 	br	10100464 <start_lcd+0x44>
		reg_flags_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
10100450:	00840034 	movhi	r2,4096
10100454:	10820404 	addi	r2,r2,2064
10100458:	1080002b 	ldhuio	r2,0(r2)
1010045c:	10bfffcc 	andi	r2,r2,65535
10100460:	e0bfff0d 	sth	r2,-4(fp)

void start_lcd(){
	lcd_flag_set(0x01);
	uint16_t reg_flags_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);

	while(reg_flags_val & 0x1){
10100464:	e0bfff0b 	ldhu	r2,-4(fp)
10100468:	1080004c 	andi	r2,r2,1
1010046c:	103ff81e 	bne	r2,zero,10100450 <__alt_data_end+0xfffe0450>
		reg_flags_val = IORD_16DIRECT(LCD_0_BASE, LCD_REG_FLAGS);
	}
}
10100470:	0001883a 	nop
10100474:	e037883a 	mov	sp,fp
10100478:	dfc00117 	ldw	ra,4(sp)
1010047c:	df000017 	ldw	fp,0(sp)
10100480:	dec00204 	addi	sp,sp,8
10100484:	f800283a 	ret

10100488 <init_lcd>:

void init_lcd(){
10100488:	deffd804 	addi	sp,sp,-160
1010048c:	dfc02715 	stw	ra,156(sp)
10100490:	df002615 	stw	fp,152(sp)
10100494:	df002604 	addi	fp,sp,152
	send_command(0x11, 0, (uint16_t []){ 0x09, 0x0a});
10100498:	00800244 	movi	r2,9
1010049c:	e0bfff0d 	sth	r2,-4(fp)
101004a0:	00800284 	movi	r2,10
101004a4:	e0bfff8d 	sth	r2,-2(fp)
101004a8:	e0bfff04 	addi	r2,fp,-4
101004ac:	100d883a 	mov	r6,r2
101004b0:	000b883a 	mov	r5,zero
101004b4:	01000444 	movi	r4,17
101004b8:	010032c0 	call	1010032c <send_command>
	send_command(0xcf, 3, (uint16_t []){ 0x0, 0x81, 0xc0});
101004bc:	e03ffd8d 	sth	zero,-10(fp)
101004c0:	00802044 	movi	r2,129
101004c4:	e0bffe0d 	sth	r2,-8(fp)
101004c8:	00803004 	movi	r2,192
101004cc:	e0bffe8d 	sth	r2,-6(fp)
101004d0:	e0bffd84 	addi	r2,fp,-10
101004d4:	100d883a 	mov	r6,r2
101004d8:	014000c4 	movi	r5,3
101004dc:	010033c4 	movi	r4,207
101004e0:	010032c0 	call	1010032c <send_command>
	send_command(0xed, 4, (uint16_t []){ 0x64, 0x03, 0x12, 0x81});
101004e4:	00801904 	movi	r2,100
101004e8:	e0bffb8d 	sth	r2,-18(fp)
101004ec:	008000c4 	movi	r2,3
101004f0:	e0bffc0d 	sth	r2,-16(fp)
101004f4:	00800484 	movi	r2,18
101004f8:	e0bffc8d 	sth	r2,-14(fp)
101004fc:	00802044 	movi	r2,129
10100500:	e0bffd0d 	sth	r2,-12(fp)
10100504:	e0bffb84 	addi	r2,fp,-18
10100508:	100d883a 	mov	r6,r2
1010050c:	01400104 	movi	r5,4
10100510:	01003b44 	movi	r4,237
10100514:	010032c0 	call	1010032c <send_command>
	send_command(0xe8, 3, (uint16_t []){ 0x85, 0x01, 0x0798});
10100518:	00802144 	movi	r2,133
1010051c:	e0bffa0d 	sth	r2,-24(fp)
10100520:	00800044 	movi	r2,1
10100524:	e0bffa8d 	sth	r2,-22(fp)
10100528:	0081e604 	movi	r2,1944
1010052c:	e0bffb0d 	sth	r2,-20(fp)
10100530:	e0bffa04 	addi	r2,fp,-24
10100534:	100d883a 	mov	r6,r2
10100538:	014000c4 	movi	r5,3
1010053c:	01003a04 	movi	r4,232
10100540:	010032c0 	call	1010032c <send_command>
	send_command(0xcb, 5, (uint16_t []){ 0x39, 0x2c, 0x00, 0x34, 0x02});
10100544:	00800e44 	movi	r2,57
10100548:	e0bff78d 	sth	r2,-34(fp)
1010054c:	00800b04 	movi	r2,44
10100550:	e0bff80d 	sth	r2,-32(fp)
10100554:	e03ff88d 	sth	zero,-30(fp)
10100558:	00800d04 	movi	r2,52
1010055c:	e0bff90d 	sth	r2,-28(fp)
10100560:	00800084 	movi	r2,2
10100564:	e0bff98d 	sth	r2,-26(fp)
10100568:	e0bff784 	addi	r2,fp,-34
1010056c:	100d883a 	mov	r6,r2
10100570:	01400144 	movi	r5,5
10100574:	010032c4 	movi	r4,203
10100578:	010032c0 	call	1010032c <send_command>
	send_command(0xf7, 1, (uint16_t []){ 0x20});
1010057c:	00800804 	movi	r2,32
10100580:	e0bff70d 	sth	r2,-36(fp)
10100584:	e0bff704 	addi	r2,fp,-36
10100588:	100d883a 	mov	r6,r2
1010058c:	01400044 	movi	r5,1
10100590:	01003dc4 	movi	r4,247
10100594:	010032c0 	call	1010032c <send_command>
	send_command(0xea, 2, (uint16_t []){ 0x00, 0x00});
10100598:	e03ff60d 	sth	zero,-40(fp)
1010059c:	e03ff68d 	sth	zero,-38(fp)
101005a0:	e0bff604 	addi	r2,fp,-40
101005a4:	100d883a 	mov	r6,r2
101005a8:	01400084 	movi	r5,2
101005ac:	01003a84 	movi	r4,234
101005b0:	010032c0 	call	1010032c <send_command>
	send_command(0xb1, 2, (uint16_t []){ 0x00, 0x1b});
101005b4:	e03ff50d 	sth	zero,-44(fp)
101005b8:	008006c4 	movi	r2,27
101005bc:	e0bff58d 	sth	r2,-42(fp)
101005c0:	e0bff504 	addi	r2,fp,-44
101005c4:	100d883a 	mov	r6,r2
101005c8:	01400084 	movi	r5,2
101005cc:	01002c44 	movi	r4,177
101005d0:	010032c0 	call	1010032c <send_command>
	send_command(0xb6, 2, (uint16_t []){ 0x0a, 0xa2});
101005d4:	00800284 	movi	r2,10
101005d8:	e0bff40d 	sth	r2,-48(fp)
101005dc:	00802884 	movi	r2,162
101005e0:	e0bff48d 	sth	r2,-46(fp)
101005e4:	e0bff404 	addi	r2,fp,-48
101005e8:	100d883a 	mov	r6,r2
101005ec:	01400084 	movi	r5,2
101005f0:	01002d84 	movi	r4,182
101005f4:	010032c0 	call	1010032c <send_command>
	send_command(0xc0, 1, (uint16_t []){ 0x05});
101005f8:	00800144 	movi	r2,5
101005fc:	e0bff38d 	sth	r2,-50(fp)
10100600:	e0bff384 	addi	r2,fp,-50
10100604:	100d883a 	mov	r6,r2
10100608:	01400044 	movi	r5,1
1010060c:	01003004 	movi	r4,192
10100610:	010032c0 	call	1010032c <send_command>
	send_command(0xc1, 1, (uint16_t []){ 0x11});
10100614:	00800444 	movi	r2,17
10100618:	e0bff30d 	sth	r2,-52(fp)
1010061c:	e0bff304 	addi	r2,fp,-52
10100620:	100d883a 	mov	r6,r2
10100624:	01400044 	movi	r5,1
10100628:	01003044 	movi	r4,193
1010062c:	010032c0 	call	1010032c <send_command>
	send_command(0xc5, 2, (uint16_t []){ 0x45, 0x45});
10100630:	00801144 	movi	r2,69
10100634:	e0bff20d 	sth	r2,-56(fp)
10100638:	00801144 	movi	r2,69
1010063c:	e0bff28d 	sth	r2,-54(fp)
10100640:	e0bff204 	addi	r2,fp,-56
10100644:	100d883a 	mov	r6,r2
10100648:	01400084 	movi	r5,2
1010064c:	01003144 	movi	r4,197
10100650:	010032c0 	call	1010032c <send_command>
	send_command(0xc7, 1, (uint16_t []){ 0xa2});
10100654:	00802884 	movi	r2,162
10100658:	e0bff18d 	sth	r2,-58(fp)
1010065c:	e0bff184 	addi	r2,fp,-58
10100660:	100d883a 	mov	r6,r2
10100664:	01400044 	movi	r5,1
10100668:	010031c4 	movi	r4,199
1010066c:	010032c0 	call	1010032c <send_command>
	send_command(0x36, 1, (uint16_t []){ 0x48}); //RGB
10100670:	00801204 	movi	r2,72
10100674:	e0bff10d 	sth	r2,-60(fp)
10100678:	e0bff104 	addi	r2,fp,-60
1010067c:	100d883a 	mov	r6,r2
10100680:	01400044 	movi	r5,1
10100684:	01000d84 	movi	r4,54
10100688:	010032c0 	call	1010032c <send_command>
	send_command(0xf2, 1, (uint16_t []){ 0x00});
1010068c:	e03ff08d 	sth	zero,-62(fp)
10100690:	e0bff084 	addi	r2,fp,-62
10100694:	100d883a 	mov	r6,r2
10100698:	01400044 	movi	r5,1
1010069c:	01003c84 	movi	r4,242
101006a0:	010032c0 	call	1010032c <send_command>
	send_command(0x26, 1, (uint16_t []){ 0x01});
101006a4:	00800044 	movi	r2,1
101006a8:	e0bff00d 	sth	r2,-64(fp)
101006ac:	e0bff004 	addi	r2,fp,-64
101006b0:	100d883a 	mov	r6,r2
101006b4:	01400044 	movi	r5,1
101006b8:	01000984 	movi	r4,38
101006bc:	010032c0 	call	1010032c <send_command>
	send_command(0xe0, 15, (uint16_t []){ 0xf, 0x26, 0x24, 0xb, 0xe, 0x8, 0x4b, 0xa8, 0x3b, 0x0a, 0x14, 0x06, 0x10, 0x09, 0x00});
101006c0:	00840474 	movhi	r2,4113
101006c4:	10800a04 	addi	r2,r2,40
101006c8:	e0ffe884 	addi	r3,fp,-94
101006cc:	1009883a 	mov	r4,r2
101006d0:	00800784 	movi	r2,30
101006d4:	100d883a 	mov	r6,r2
101006d8:	200b883a 	mov	r5,r4
101006dc:	1809883a 	mov	r4,r3
101006e0:	0100c300 	call	10100c30 <memcpy>
101006e4:	e0bfe884 	addi	r2,fp,-94
101006e8:	100d883a 	mov	r6,r2
101006ec:	014003c4 	movi	r5,15
101006f0:	01003804 	movi	r4,224
101006f4:	010032c0 	call	1010032c <send_command>
	send_command(0xe1, 15, (uint16_t []){ 0x0, 0x1c, 0x20, 0x4, 0x10, 0x8, 0x34, 0x47, 0x44, 0x05, 0xb, 0x9, 0x2f, 0x36, 0x0f});
101006f8:	00840474 	movhi	r2,4113
101006fc:	10801184 	addi	r2,r2,70
10100700:	e0ffe104 	addi	r3,fp,-124
10100704:	1009883a 	mov	r4,r2
10100708:	00800784 	movi	r2,30
1010070c:	100d883a 	mov	r6,r2
10100710:	200b883a 	mov	r5,r4
10100714:	1809883a 	mov	r4,r3
10100718:	0100c300 	call	10100c30 <memcpy>
1010071c:	e0bfe104 	addi	r2,fp,-124
10100720:	100d883a 	mov	r6,r2
10100724:	014003c4 	movi	r5,15
10100728:	01003844 	movi	r4,225
1010072c:	010032c0 	call	1010032c <send_command>
	send_command(0x2a, 4, (uint16_t []){ 0x0, 0x0, 0x0, 0xef});
10100730:	e03fdf0d 	sth	zero,-132(fp)
10100734:	e03fdf8d 	sth	zero,-130(fp)
10100738:	e03fe00d 	sth	zero,-128(fp)
1010073c:	00803bc4 	movi	r2,239
10100740:	e0bfe08d 	sth	r2,-126(fp)
10100744:	e0bfdf04 	addi	r2,fp,-132
10100748:	100d883a 	mov	r6,r2
1010074c:	01400104 	movi	r5,4
10100750:	01000a84 	movi	r4,42
10100754:	010032c0 	call	1010032c <send_command>
	send_command(0x2b, 4, (uint16_t []){ 0x0, 0x0, 0x01, 0x3f});
10100758:	e03fdd0d 	sth	zero,-140(fp)
1010075c:	e03fdd8d 	sth	zero,-138(fp)
10100760:	00800044 	movi	r2,1
10100764:	e0bfde0d 	sth	r2,-136(fp)
10100768:	00800fc4 	movi	r2,63
1010076c:	e0bfde8d 	sth	r2,-134(fp)
10100770:	e0bfdd04 	addi	r2,fp,-140
10100774:	100d883a 	mov	r6,r2
10100778:	01400104 	movi	r5,4
1010077c:	01000ac4 	movi	r4,43
10100780:	010032c0 	call	1010032c <send_command>
	send_command(0x3a, 1, (uint16_t []){ 0x55}); //RGB
10100784:	00801544 	movi	r2,85
10100788:	e0bfdc8d 	sth	r2,-142(fp)
1010078c:	e0bfdc84 	addi	r2,fp,-142
10100790:	100d883a 	mov	r6,r2
10100794:	01400044 	movi	r5,1
10100798:	01000e84 	movi	r4,58
1010079c:	010032c0 	call	1010032c <send_command>
	send_command(0xf6, 3, (uint16_t []){ 0x01, 0x30, 0x0});
101007a0:	00800044 	movi	r2,1
101007a4:	e0bfdb0d 	sth	r2,-148(fp)
101007a8:	00800c04 	movi	r2,48
101007ac:	e0bfdb8d 	sth	r2,-146(fp)
101007b0:	e03fdc0d 	sth	zero,-144(fp)
101007b4:	e0bfdb04 	addi	r2,fp,-148
101007b8:	100d883a 	mov	r6,r2
101007bc:	014000c4 	movi	r5,3
101007c0:	01003d84 	movi	r4,246
101007c4:	010032c0 	call	1010032c <send_command>
	send_command(0x29, 0, (uint16_t []){ 0x09, 0x0a});
101007c8:	00800244 	movi	r2,9
101007cc:	e0bfda0d 	sth	r2,-152(fp)
101007d0:	00800284 	movi	r2,10
101007d4:	e0bfda8d 	sth	r2,-150(fp)
101007d8:	e1bfda04 	addi	r6,fp,-152
101007dc:	000b883a 	mov	r5,zero
101007e0:	01000a44 	movi	r4,41
101007e4:	010032c0 	call	1010032c <send_command>
}
101007e8:	0001883a 	nop
101007ec:	e037883a 	mov	sp,fp
101007f0:	dfc00117 	ldw	ra,4(sp)
101007f4:	df000017 	ldw	fp,0(sp)
101007f8:	dec00204 	addi	sp,sp,8
101007fc:	f800283a 	ret

10100800 <configure_image>:

void configure_image(uint32_t image_address, uint32_t image_size){
10100800:	defffc04 	addi	sp,sp,-16
10100804:	dfc00315 	stw	ra,12(sp)
10100808:	df000215 	stw	fp,8(sp)
1010080c:	df000204 	addi	fp,sp,8
10100810:	e13ffe15 	stw	r4,-8(fp)
10100814:	e17fff15 	stw	r5,-4(fp)
	IOWR_32DIRECT(LCD_0_BASE, LCD_REG_IMG_ADDRESS, image_address);
10100818:	e0fffe17 	ldw	r3,-8(fp)
1010081c:	00840034 	movhi	r2,4096
10100820:	10820204 	addi	r2,r2,2056
10100824:	10c00035 	stwio	r3,0(r2)
	IOWR_32DIRECT(LCD_0_BASE, LCD_REG_IMG_LENGTH, image_size);
10100828:	e0ffff17 	ldw	r3,-4(fp)
1010082c:	00840034 	movhi	r2,4096
10100830:	10820304 	addi	r2,r2,2060
10100834:	10c00035 	stwio	r3,0(r2)
	printf("Sent address: %d\nSent length: %d\n", IORD_32DIRECT(LCD_0_BASE, LCD_REG_IMG_ADDRESS), IORD_32DIRECT(LCD_0_BASE, LCD_REG_IMG_LENGTH));
10100838:	00840034 	movhi	r2,4096
1010083c:	10820204 	addi	r2,r2,2056
10100840:	10c00037 	ldwio	r3,0(r2)
10100844:	00840034 	movhi	r2,4096
10100848:	10820304 	addi	r2,r2,2060
1010084c:	10800037 	ldwio	r2,0(r2)
10100850:	100d883a 	mov	r6,r2
10100854:	180b883a 	mov	r5,r3
10100858:	01040474 	movhi	r4,4113
1010085c:	21001904 	addi	r4,r4,100
10100860:	0100da80 	call	10100da8 <printf>
}
10100864:	0001883a 	nop
10100868:	e037883a 	mov	sp,fp
1010086c:	dfc00117 	ldw	ra,4(sp)
10100870:	df000017 	ldw	fp,0(sp)
10100874:	dec00204 	addi	sp,sp,8
10100878:	f800283a 	ret

1010087c <init_image>:


void init_image(uint32_t image_address, uint32_t rows, uint32_t cols){
1010087c:	defff804 	addi	sp,sp,-32
10100880:	dfc00715 	stw	ra,28(sp)
10100884:	df000615 	stw	fp,24(sp)
10100888:	df000604 	addi	fp,sp,24
1010088c:	e13ffd15 	stw	r4,-12(fp)
10100890:	e17ffe15 	stw	r5,-8(fp)
10100894:	e1bfff15 	stw	r6,-4(fp)
	uint32_t i = 0;
10100898:	e03ffa15 	stw	zero,-24(fp)
	uint16_t color = 0xF800;
1010089c:	00be0004 	movi	r2,-2048
101008a0:	e0bffb0d 	sth	r2,-20(fp)

	while(i < rows * sizeof(uint16_t))
101008a4:	00003306 	br	10100974 <init_image+0xf8>
	{
		uint32_t j = 0;
101008a8:	e03ffc15 	stw	zero,-16(fp)
		if(i % 100 == 0)
101008ac:	e0bffa17 	ldw	r2,-24(fp)
101008b0:	01401904 	movi	r5,100
101008b4:	1009883a 	mov	r4,r2
101008b8:	0100bb00 	call	10100bb0 <__umodsi3>
101008bc:	1000251e 	bne	r2,zero,10100954 <init_image+0xd8>
			color = color == 0xF800 ? 0x001F : 0xF800;
101008c0:	e0fffb0b 	ldhu	r3,-20(fp)
101008c4:	00be0014 	movui	r2,63488
101008c8:	1880021e 	bne	r3,r2,101008d4 <init_image+0x58>
101008cc:	008007c4 	movi	r2,31
101008d0:	00000106 	br	101008d8 <init_image+0x5c>
101008d4:	00be0004 	movi	r2,-2048
101008d8:	e0bffb0d 	sth	r2,-20(fp)

		while(j < cols * sizeof(uint16_t))
101008dc:	00001d06 	br	10100954 <init_image+0xd8>
		{
			IOWR_16DIRECT(image_address, i * cols + j, color);
101008e0:	e17fff17 	ldw	r5,-4(fp)
101008e4:	e13ffa17 	ldw	r4,-24(fp)
101008e8:	0100c080 	call	10100c08 <__mulsi3>
101008ec:	1007883a 	mov	r3,r2
101008f0:	e0bffc17 	ldw	r2,-16(fp)
101008f4:	1887883a 	add	r3,r3,r2
101008f8:	e0bffd17 	ldw	r2,-12(fp)
101008fc:	1885883a 	add	r2,r3,r2
10100900:	1007883a 	mov	r3,r2
10100904:	e0bffb0b 	ldhu	r2,-20(fp)
10100908:	1880002d 	sthio	r2,0(r3)
			if(IORD_16DIRECT(image_address, i * cols + j) != color)
1010090c:	e17fff17 	ldw	r5,-4(fp)
10100910:	e13ffa17 	ldw	r4,-24(fp)
10100914:	0100c080 	call	10100c08 <__mulsi3>
10100918:	1007883a 	mov	r3,r2
1010091c:	e0bffc17 	ldw	r2,-16(fp)
10100920:	1887883a 	add	r3,r3,r2
10100924:	e0bffd17 	ldw	r2,-12(fp)
10100928:	1885883a 	add	r2,r3,r2
1010092c:	1080002b 	ldhuio	r2,0(r2)
10100930:	10ffffcc 	andi	r3,r2,65535
10100934:	e0bffb0b 	ldhu	r2,-20(fp)
10100938:	18800326 	beq	r3,r2,10100948 <init_image+0xcc>
			{
				printf("Error writing to extender\n");
1010093c:	01040474 	movhi	r4,4113
10100940:	21002204 	addi	r4,r4,136
10100944:	0100ea40 	call	10100ea4 <puts>
			}
			j += 2;
10100948:	e0bffc17 	ldw	r2,-16(fp)
1010094c:	10800084 	addi	r2,r2,2
10100950:	e0bffc15 	stw	r2,-16(fp)
	{
		uint32_t j = 0;
		if(i % 100 == 0)
			color = color == 0xF800 ? 0x001F : 0xF800;

		while(j < cols * sizeof(uint16_t))
10100954:	e0bfff17 	ldw	r2,-4(fp)
10100958:	1085883a 	add	r2,r2,r2
1010095c:	1007883a 	mov	r3,r2
10100960:	e0bffc17 	ldw	r2,-16(fp)
10100964:	10ffde36 	bltu	r2,r3,101008e0 <__alt_data_end+0xfffe08e0>
				printf("Error writing to extender\n");
			}
			j += 2;
		}

		i += 2;
10100968:	e0bffa17 	ldw	r2,-24(fp)
1010096c:	10800084 	addi	r2,r2,2
10100970:	e0bffa15 	stw	r2,-24(fp)

void init_image(uint32_t image_address, uint32_t rows, uint32_t cols){
	uint32_t i = 0;
	uint16_t color = 0xF800;

	while(i < rows * sizeof(uint16_t))
10100974:	e0bffe17 	ldw	r2,-8(fp)
10100978:	1085883a 	add	r2,r2,r2
1010097c:	1007883a 	mov	r3,r2
10100980:	e0bffa17 	ldw	r2,-24(fp)
10100984:	10ffc836 	bltu	r2,r3,101008a8 <__alt_data_end+0xfffe08a8>
			j += 2;
		}

		i += 2;
	}
}
10100988:	0001883a 	nop
1010098c:	e037883a 	mov	sp,fp
10100990:	dfc00117 	ldw	ra,4(sp)
10100994:	df000017 	ldw	fp,0(sp)
10100998:	dec00204 	addi	sp,sp,8
1010099c:	f800283a 	ret

101009a0 <main>:

int main(){
101009a0:	defffc04 	addi	sp,sp,-16
101009a4:	dfc00315 	stw	ra,12(sp)
101009a8:	df000215 	stw	fp,8(sp)
101009ac:	df000204 	addi	fp,sp,8
lcd_reset();
101009b0:	01002c40 	call	101002c4 <lcd_reset>

	printf("Initializing LCD\n");
101009b4:	01040474 	movhi	r4,4113
101009b8:	21002904 	addi	r4,r4,164
101009bc:	0100ea40 	call	10100ea4 <puts>
	init_lcd();
101009c0:	01004880 	call	10100488 <init_lcd>
	printf("LCD Initialized\n");
101009c4:	01040474 	movhi	r4,4113
101009c8:	21002e04 	addi	r4,r4,184
101009cc:	0100ea40 	call	10100ea4 <puts>

	uint32_t image_size = 320 * 240 * sizeof(uint16_t);
101009d0:	008000b4 	movhi	r2,2
101009d4:	10960004 	addi	r2,r2,22528
101009d8:	e0bffe15 	stw	r2,-8(fp)
	uint32_t image_address = HPS_0_BRIDGES_BASE;
101009dc:	e03fff15 	stw	zero,-4(fp)

	printf("Setting image address and size\n");
101009e0:	01040474 	movhi	r4,4113
101009e4:	21003204 	addi	r4,r4,200
101009e8:	0100ea40 	call	10100ea4 <puts>
	init_image(image_address, 320, 240);
101009ec:	01803c04 	movi	r6,240
101009f0:	01405004 	movi	r5,320
101009f4:	e13fff17 	ldw	r4,-4(fp)
101009f8:	010087c0 	call	1010087c <init_image>
	printf("Image address and size set\n");
101009fc:	01040474 	movhi	r4,4113
10100a00:	21003a04 	addi	r4,r4,232
10100a04:	0100ea40 	call	10100ea4 <puts>

	printf("Configuring default image\n");
10100a08:	01040474 	movhi	r4,4113
10100a0c:	21004104 	addi	r4,r4,260
10100a10:	0100ea40 	call	10100ea4 <puts>
	configure_image(image_address, image_size);
10100a14:	e17ffe17 	ldw	r5,-8(fp)
10100a18:	e13fff17 	ldw	r4,-4(fp)
10100a1c:	01008000 	call	10100800 <configure_image>
	printf("Default image configured... starting LCD\n");
10100a20:	01040474 	movhi	r4,4113
10100a24:	21004804 	addi	r4,r4,288
10100a28:	0100ea40 	call	10100ea4 <puts>
	start_lcd();
10100a2c:	01004200 	call	10100420 <start_lcd>
	printf("Display Stopped\n");
10100a30:	01040474 	movhi	r4,4113
10100a34:	21005304 	addi	r4,r4,332
10100a38:	0100ea40 	call	10100ea4 <puts>

	return 0;
10100a3c:	0005883a 	mov	r2,zero
}
10100a40:	e037883a 	mov	sp,fp
10100a44:	dfc00117 	ldw	ra,4(sp)
10100a48:	df000017 	ldw	fp,0(sp)
10100a4c:	dec00204 	addi	sp,sp,8
10100a50:	f800283a 	ret

10100a54 <__divsi3>:
10100a54:	20001b16 	blt	r4,zero,10100ac4 <__divsi3+0x70>
10100a58:	000f883a 	mov	r7,zero
10100a5c:	28001616 	blt	r5,zero,10100ab8 <__divsi3+0x64>
10100a60:	200d883a 	mov	r6,r4
10100a64:	29001a2e 	bgeu	r5,r4,10100ad0 <__divsi3+0x7c>
10100a68:	00800804 	movi	r2,32
10100a6c:	00c00044 	movi	r3,1
10100a70:	00000106 	br	10100a78 <__divsi3+0x24>
10100a74:	10000d26 	beq	r2,zero,10100aac <__divsi3+0x58>
10100a78:	294b883a 	add	r5,r5,r5
10100a7c:	10bfffc4 	addi	r2,r2,-1
10100a80:	18c7883a 	add	r3,r3,r3
10100a84:	293ffb36 	bltu	r5,r4,10100a74 <__alt_data_end+0xfffe0a74>
10100a88:	0005883a 	mov	r2,zero
10100a8c:	18000726 	beq	r3,zero,10100aac <__divsi3+0x58>
10100a90:	0005883a 	mov	r2,zero
10100a94:	31400236 	bltu	r6,r5,10100aa0 <__divsi3+0x4c>
10100a98:	314dc83a 	sub	r6,r6,r5
10100a9c:	10c4b03a 	or	r2,r2,r3
10100aa0:	1806d07a 	srli	r3,r3,1
10100aa4:	280ad07a 	srli	r5,r5,1
10100aa8:	183ffa1e 	bne	r3,zero,10100a94 <__alt_data_end+0xfffe0a94>
10100aac:	38000126 	beq	r7,zero,10100ab4 <__divsi3+0x60>
10100ab0:	0085c83a 	sub	r2,zero,r2
10100ab4:	f800283a 	ret
10100ab8:	014bc83a 	sub	r5,zero,r5
10100abc:	39c0005c 	xori	r7,r7,1
10100ac0:	003fe706 	br	10100a60 <__alt_data_end+0xfffe0a60>
10100ac4:	0109c83a 	sub	r4,zero,r4
10100ac8:	01c00044 	movi	r7,1
10100acc:	003fe306 	br	10100a5c <__alt_data_end+0xfffe0a5c>
10100ad0:	00c00044 	movi	r3,1
10100ad4:	003fee06 	br	10100a90 <__alt_data_end+0xfffe0a90>

10100ad8 <__modsi3>:
10100ad8:	20001716 	blt	r4,zero,10100b38 <__modsi3+0x60>
10100adc:	000f883a 	mov	r7,zero
10100ae0:	2005883a 	mov	r2,r4
10100ae4:	28001216 	blt	r5,zero,10100b30 <__modsi3+0x58>
10100ae8:	2900162e 	bgeu	r5,r4,10100b44 <__modsi3+0x6c>
10100aec:	01800804 	movi	r6,32
10100af0:	00c00044 	movi	r3,1
10100af4:	00000106 	br	10100afc <__modsi3+0x24>
10100af8:	30000a26 	beq	r6,zero,10100b24 <__modsi3+0x4c>
10100afc:	294b883a 	add	r5,r5,r5
10100b00:	31bfffc4 	addi	r6,r6,-1
10100b04:	18c7883a 	add	r3,r3,r3
10100b08:	293ffb36 	bltu	r5,r4,10100af8 <__alt_data_end+0xfffe0af8>
10100b0c:	18000526 	beq	r3,zero,10100b24 <__modsi3+0x4c>
10100b10:	1806d07a 	srli	r3,r3,1
10100b14:	11400136 	bltu	r2,r5,10100b1c <__modsi3+0x44>
10100b18:	1145c83a 	sub	r2,r2,r5
10100b1c:	280ad07a 	srli	r5,r5,1
10100b20:	183ffb1e 	bne	r3,zero,10100b10 <__alt_data_end+0xfffe0b10>
10100b24:	38000126 	beq	r7,zero,10100b2c <__modsi3+0x54>
10100b28:	0085c83a 	sub	r2,zero,r2
10100b2c:	f800283a 	ret
10100b30:	014bc83a 	sub	r5,zero,r5
10100b34:	003fec06 	br	10100ae8 <__alt_data_end+0xfffe0ae8>
10100b38:	0109c83a 	sub	r4,zero,r4
10100b3c:	01c00044 	movi	r7,1
10100b40:	003fe706 	br	10100ae0 <__alt_data_end+0xfffe0ae0>
10100b44:	00c00044 	movi	r3,1
10100b48:	003ff106 	br	10100b10 <__alt_data_end+0xfffe0b10>

10100b4c <__udivsi3>:
10100b4c:	200d883a 	mov	r6,r4
10100b50:	2900152e 	bgeu	r5,r4,10100ba8 <__udivsi3+0x5c>
10100b54:	28001416 	blt	r5,zero,10100ba8 <__udivsi3+0x5c>
10100b58:	00800804 	movi	r2,32
10100b5c:	00c00044 	movi	r3,1
10100b60:	00000206 	br	10100b6c <__udivsi3+0x20>
10100b64:	10000e26 	beq	r2,zero,10100ba0 <__udivsi3+0x54>
10100b68:	28000516 	blt	r5,zero,10100b80 <__udivsi3+0x34>
10100b6c:	294b883a 	add	r5,r5,r5
10100b70:	10bfffc4 	addi	r2,r2,-1
10100b74:	18c7883a 	add	r3,r3,r3
10100b78:	293ffa36 	bltu	r5,r4,10100b64 <__alt_data_end+0xfffe0b64>
10100b7c:	18000826 	beq	r3,zero,10100ba0 <__udivsi3+0x54>
10100b80:	0005883a 	mov	r2,zero
10100b84:	31400236 	bltu	r6,r5,10100b90 <__udivsi3+0x44>
10100b88:	314dc83a 	sub	r6,r6,r5
10100b8c:	10c4b03a 	or	r2,r2,r3
10100b90:	1806d07a 	srli	r3,r3,1
10100b94:	280ad07a 	srli	r5,r5,1
10100b98:	183ffa1e 	bne	r3,zero,10100b84 <__alt_data_end+0xfffe0b84>
10100b9c:	f800283a 	ret
10100ba0:	0005883a 	mov	r2,zero
10100ba4:	f800283a 	ret
10100ba8:	00c00044 	movi	r3,1
10100bac:	003ff406 	br	10100b80 <__alt_data_end+0xfffe0b80>

10100bb0 <__umodsi3>:
10100bb0:	2005883a 	mov	r2,r4
10100bb4:	2900122e 	bgeu	r5,r4,10100c00 <__umodsi3+0x50>
10100bb8:	28001116 	blt	r5,zero,10100c00 <__umodsi3+0x50>
10100bbc:	01800804 	movi	r6,32
10100bc0:	00c00044 	movi	r3,1
10100bc4:	00000206 	br	10100bd0 <__umodsi3+0x20>
10100bc8:	30000c26 	beq	r6,zero,10100bfc <__umodsi3+0x4c>
10100bcc:	28000516 	blt	r5,zero,10100be4 <__umodsi3+0x34>
10100bd0:	294b883a 	add	r5,r5,r5
10100bd4:	31bfffc4 	addi	r6,r6,-1
10100bd8:	18c7883a 	add	r3,r3,r3
10100bdc:	293ffa36 	bltu	r5,r4,10100bc8 <__alt_data_end+0xfffe0bc8>
10100be0:	18000626 	beq	r3,zero,10100bfc <__umodsi3+0x4c>
10100be4:	1806d07a 	srli	r3,r3,1
10100be8:	11400136 	bltu	r2,r5,10100bf0 <__umodsi3+0x40>
10100bec:	1145c83a 	sub	r2,r2,r5
10100bf0:	280ad07a 	srli	r5,r5,1
10100bf4:	183ffb1e 	bne	r3,zero,10100be4 <__alt_data_end+0xfffe0be4>
10100bf8:	f800283a 	ret
10100bfc:	f800283a 	ret
10100c00:	00c00044 	movi	r3,1
10100c04:	003ff706 	br	10100be4 <__alt_data_end+0xfffe0be4>

10100c08 <__mulsi3>:
10100c08:	0005883a 	mov	r2,zero
10100c0c:	20000726 	beq	r4,zero,10100c2c <__mulsi3+0x24>
10100c10:	20c0004c 	andi	r3,r4,1
10100c14:	2008d07a 	srli	r4,r4,1
10100c18:	18000126 	beq	r3,zero,10100c20 <__mulsi3+0x18>
10100c1c:	1145883a 	add	r2,r2,r5
10100c20:	294b883a 	add	r5,r5,r5
10100c24:	203ffa1e 	bne	r4,zero,10100c10 <__alt_data_end+0xfffe0c10>
10100c28:	f800283a 	ret
10100c2c:	f800283a 	ret

10100c30 <memcpy>:
10100c30:	defffd04 	addi	sp,sp,-12
10100c34:	dfc00215 	stw	ra,8(sp)
10100c38:	dc400115 	stw	r17,4(sp)
10100c3c:	dc000015 	stw	r16,0(sp)
10100c40:	00c003c4 	movi	r3,15
10100c44:	2005883a 	mov	r2,r4
10100c48:	1980452e 	bgeu	r3,r6,10100d60 <memcpy+0x130>
10100c4c:	2906b03a 	or	r3,r5,r4
10100c50:	18c000cc 	andi	r3,r3,3
10100c54:	1800441e 	bne	r3,zero,10100d68 <memcpy+0x138>
10100c58:	347ffc04 	addi	r17,r6,-16
10100c5c:	8822d13a 	srli	r17,r17,4
10100c60:	28c00104 	addi	r3,r5,4
10100c64:	23400104 	addi	r13,r4,4
10100c68:	8820913a 	slli	r16,r17,4
10100c6c:	2b000204 	addi	r12,r5,8
10100c70:	22c00204 	addi	r11,r4,8
10100c74:	84000504 	addi	r16,r16,20
10100c78:	2a800304 	addi	r10,r5,12
10100c7c:	22400304 	addi	r9,r4,12
10100c80:	2c21883a 	add	r16,r5,r16
10100c84:	2811883a 	mov	r8,r5
10100c88:	200f883a 	mov	r7,r4
10100c8c:	41000017 	ldw	r4,0(r8)
10100c90:	1fc00017 	ldw	ra,0(r3)
10100c94:	63c00017 	ldw	r15,0(r12)
10100c98:	39000015 	stw	r4,0(r7)
10100c9c:	53800017 	ldw	r14,0(r10)
10100ca0:	6fc00015 	stw	ra,0(r13)
10100ca4:	5bc00015 	stw	r15,0(r11)
10100ca8:	4b800015 	stw	r14,0(r9)
10100cac:	18c00404 	addi	r3,r3,16
10100cb0:	39c00404 	addi	r7,r7,16
10100cb4:	42000404 	addi	r8,r8,16
10100cb8:	6b400404 	addi	r13,r13,16
10100cbc:	63000404 	addi	r12,r12,16
10100cc0:	5ac00404 	addi	r11,r11,16
10100cc4:	52800404 	addi	r10,r10,16
10100cc8:	4a400404 	addi	r9,r9,16
10100ccc:	1c3fef1e 	bne	r3,r16,10100c8c <__alt_data_end+0xfffe0c8c>
10100cd0:	89c00044 	addi	r7,r17,1
10100cd4:	380e913a 	slli	r7,r7,4
10100cd8:	310003cc 	andi	r4,r6,15
10100cdc:	02c000c4 	movi	r11,3
10100ce0:	11c7883a 	add	r3,r2,r7
10100ce4:	29cb883a 	add	r5,r5,r7
10100ce8:	5900212e 	bgeu	r11,r4,10100d70 <memcpy+0x140>
10100cec:	1813883a 	mov	r9,r3
10100cf0:	2811883a 	mov	r8,r5
10100cf4:	200f883a 	mov	r7,r4
10100cf8:	42800017 	ldw	r10,0(r8)
10100cfc:	4a400104 	addi	r9,r9,4
10100d00:	39ffff04 	addi	r7,r7,-4
10100d04:	4abfff15 	stw	r10,-4(r9)
10100d08:	42000104 	addi	r8,r8,4
10100d0c:	59fffa36 	bltu	r11,r7,10100cf8 <__alt_data_end+0xfffe0cf8>
10100d10:	213fff04 	addi	r4,r4,-4
10100d14:	2008d0ba 	srli	r4,r4,2
10100d18:	318000cc 	andi	r6,r6,3
10100d1c:	21000044 	addi	r4,r4,1
10100d20:	2109883a 	add	r4,r4,r4
10100d24:	2109883a 	add	r4,r4,r4
10100d28:	1907883a 	add	r3,r3,r4
10100d2c:	290b883a 	add	r5,r5,r4
10100d30:	30000626 	beq	r6,zero,10100d4c <memcpy+0x11c>
10100d34:	198d883a 	add	r6,r3,r6
10100d38:	29c00003 	ldbu	r7,0(r5)
10100d3c:	18c00044 	addi	r3,r3,1
10100d40:	29400044 	addi	r5,r5,1
10100d44:	19ffffc5 	stb	r7,-1(r3)
10100d48:	19bffb1e 	bne	r3,r6,10100d38 <__alt_data_end+0xfffe0d38>
10100d4c:	dfc00217 	ldw	ra,8(sp)
10100d50:	dc400117 	ldw	r17,4(sp)
10100d54:	dc000017 	ldw	r16,0(sp)
10100d58:	dec00304 	addi	sp,sp,12
10100d5c:	f800283a 	ret
10100d60:	2007883a 	mov	r3,r4
10100d64:	003ff206 	br	10100d30 <__alt_data_end+0xfffe0d30>
10100d68:	2007883a 	mov	r3,r4
10100d6c:	003ff106 	br	10100d34 <__alt_data_end+0xfffe0d34>
10100d70:	200d883a 	mov	r6,r4
10100d74:	003fee06 	br	10100d30 <__alt_data_end+0xfffe0d30>

10100d78 <_printf_r>:
10100d78:	defffd04 	addi	sp,sp,-12
10100d7c:	2805883a 	mov	r2,r5
10100d80:	dfc00015 	stw	ra,0(sp)
10100d84:	d9800115 	stw	r6,4(sp)
10100d88:	d9c00215 	stw	r7,8(sp)
10100d8c:	21400217 	ldw	r5,8(r4)
10100d90:	d9c00104 	addi	r7,sp,4
10100d94:	100d883a 	mov	r6,r2
10100d98:	0100f500 	call	10100f50 <___vfprintf_internal_r>
10100d9c:	dfc00017 	ldw	ra,0(sp)
10100da0:	dec00304 	addi	sp,sp,12
10100da4:	f800283a 	ret

10100da8 <printf>:
10100da8:	defffc04 	addi	sp,sp,-16
10100dac:	dfc00015 	stw	ra,0(sp)
10100db0:	d9400115 	stw	r5,4(sp)
10100db4:	d9800215 	stw	r6,8(sp)
10100db8:	d9c00315 	stw	r7,12(sp)
10100dbc:	00840474 	movhi	r2,4113
10100dc0:	1087c304 	addi	r2,r2,7948
10100dc4:	10800017 	ldw	r2,0(r2)
10100dc8:	200b883a 	mov	r5,r4
10100dcc:	d9800104 	addi	r6,sp,4
10100dd0:	11000217 	ldw	r4,8(r2)
10100dd4:	010322c0 	call	1010322c <__vfprintf_internal>
10100dd8:	dfc00017 	ldw	ra,0(sp)
10100ddc:	dec00404 	addi	sp,sp,16
10100de0:	f800283a 	ret

10100de4 <_puts_r>:
10100de4:	defff604 	addi	sp,sp,-40
10100de8:	dc000715 	stw	r16,28(sp)
10100dec:	2021883a 	mov	r16,r4
10100df0:	2809883a 	mov	r4,r5
10100df4:	dc400815 	stw	r17,32(sp)
10100df8:	dfc00915 	stw	ra,36(sp)
10100dfc:	2823883a 	mov	r17,r5
10100e00:	0100eb80 	call	10100eb8 <strlen>
10100e04:	10c00044 	addi	r3,r2,1
10100e08:	d8800115 	stw	r2,4(sp)
10100e0c:	00840474 	movhi	r2,4113
10100e10:	10805704 	addi	r2,r2,348
10100e14:	d8800215 	stw	r2,8(sp)
10100e18:	00800044 	movi	r2,1
10100e1c:	d8800315 	stw	r2,12(sp)
10100e20:	00800084 	movi	r2,2
10100e24:	dc400015 	stw	r17,0(sp)
10100e28:	d8c00615 	stw	r3,24(sp)
10100e2c:	dec00415 	stw	sp,16(sp)
10100e30:	d8800515 	stw	r2,20(sp)
10100e34:	80000226 	beq	r16,zero,10100e40 <_puts_r+0x5c>
10100e38:	80800e17 	ldw	r2,56(r16)
10100e3c:	10001426 	beq	r2,zero,10100e90 <_puts_r+0xac>
10100e40:	81400217 	ldw	r5,8(r16)
10100e44:	2880030b 	ldhu	r2,12(r5)
10100e48:	10c8000c 	andi	r3,r2,8192
10100e4c:	1800061e 	bne	r3,zero,10100e68 <_puts_r+0x84>
10100e50:	29001917 	ldw	r4,100(r5)
10100e54:	00f7ffc4 	movi	r3,-8193
10100e58:	10880014 	ori	r2,r2,8192
10100e5c:	20c6703a 	and	r3,r4,r3
10100e60:	2880030d 	sth	r2,12(r5)
10100e64:	28c01915 	stw	r3,100(r5)
10100e68:	d9800404 	addi	r6,sp,16
10100e6c:	8009883a 	mov	r4,r16
10100e70:	01057940 	call	10105794 <__sfvwrite_r>
10100e74:	1000091e 	bne	r2,zero,10100e9c <_puts_r+0xb8>
10100e78:	00800284 	movi	r2,10
10100e7c:	dfc00917 	ldw	ra,36(sp)
10100e80:	dc400817 	ldw	r17,32(sp)
10100e84:	dc000717 	ldw	r16,28(sp)
10100e88:	dec00a04 	addi	sp,sp,40
10100e8c:	f800283a 	ret
10100e90:	8009883a 	mov	r4,r16
10100e94:	01053100 	call	10105310 <__sinit>
10100e98:	003fe906 	br	10100e40 <__alt_data_end+0xfffe0e40>
10100e9c:	00bfffc4 	movi	r2,-1
10100ea0:	003ff606 	br	10100e7c <__alt_data_end+0xfffe0e7c>

10100ea4 <puts>:
10100ea4:	00840474 	movhi	r2,4113
10100ea8:	1087c304 	addi	r2,r2,7948
10100eac:	200b883a 	mov	r5,r4
10100eb0:	11000017 	ldw	r4,0(r2)
10100eb4:	0100de41 	jmpi	10100de4 <_puts_r>

10100eb8 <strlen>:
10100eb8:	208000cc 	andi	r2,r4,3
10100ebc:	10002026 	beq	r2,zero,10100f40 <strlen+0x88>
10100ec0:	20800007 	ldb	r2,0(r4)
10100ec4:	10002026 	beq	r2,zero,10100f48 <strlen+0x90>
10100ec8:	2005883a 	mov	r2,r4
10100ecc:	00000206 	br	10100ed8 <strlen+0x20>
10100ed0:	10c00007 	ldb	r3,0(r2)
10100ed4:	18001826 	beq	r3,zero,10100f38 <strlen+0x80>
10100ed8:	10800044 	addi	r2,r2,1
10100edc:	10c000cc 	andi	r3,r2,3
10100ee0:	183ffb1e 	bne	r3,zero,10100ed0 <__alt_data_end+0xfffe0ed0>
10100ee4:	10c00017 	ldw	r3,0(r2)
10100ee8:	01ffbff4 	movhi	r7,65279
10100eec:	39ffbfc4 	addi	r7,r7,-257
10100ef0:	00ca303a 	nor	r5,zero,r3
10100ef4:	01a02074 	movhi	r6,32897
10100ef8:	19c7883a 	add	r3,r3,r7
10100efc:	31a02004 	addi	r6,r6,-32640
10100f00:	1946703a 	and	r3,r3,r5
10100f04:	1986703a 	and	r3,r3,r6
10100f08:	1800091e 	bne	r3,zero,10100f30 <strlen+0x78>
10100f0c:	10800104 	addi	r2,r2,4
10100f10:	10c00017 	ldw	r3,0(r2)
10100f14:	19cb883a 	add	r5,r3,r7
10100f18:	00c6303a 	nor	r3,zero,r3
10100f1c:	28c6703a 	and	r3,r5,r3
10100f20:	1986703a 	and	r3,r3,r6
10100f24:	183ff926 	beq	r3,zero,10100f0c <__alt_data_end+0xfffe0f0c>
10100f28:	00000106 	br	10100f30 <strlen+0x78>
10100f2c:	10800044 	addi	r2,r2,1
10100f30:	10c00007 	ldb	r3,0(r2)
10100f34:	183ffd1e 	bne	r3,zero,10100f2c <__alt_data_end+0xfffe0f2c>
10100f38:	1105c83a 	sub	r2,r2,r4
10100f3c:	f800283a 	ret
10100f40:	2005883a 	mov	r2,r4
10100f44:	003fe706 	br	10100ee4 <__alt_data_end+0xfffe0ee4>
10100f48:	0005883a 	mov	r2,zero
10100f4c:	f800283a 	ret

10100f50 <___vfprintf_internal_r>:
10100f50:	deffb804 	addi	sp,sp,-288
10100f54:	dfc04715 	stw	ra,284(sp)
10100f58:	ddc04515 	stw	r23,276(sp)
10100f5c:	dd404315 	stw	r21,268(sp)
10100f60:	d9002d15 	stw	r4,180(sp)
10100f64:	282f883a 	mov	r23,r5
10100f68:	302b883a 	mov	r21,r6
10100f6c:	d9c02e15 	stw	r7,184(sp)
10100f70:	df004615 	stw	fp,280(sp)
10100f74:	dd804415 	stw	r22,272(sp)
10100f78:	dd004215 	stw	r20,264(sp)
10100f7c:	dcc04115 	stw	r19,260(sp)
10100f80:	dc804015 	stw	r18,256(sp)
10100f84:	dc403f15 	stw	r17,252(sp)
10100f88:	dc003e15 	stw	r16,248(sp)
10100f8c:	0105e900 	call	10105e90 <_localeconv_r>
10100f90:	10800017 	ldw	r2,0(r2)
10100f94:	1009883a 	mov	r4,r2
10100f98:	d8803415 	stw	r2,208(sp)
10100f9c:	0100eb80 	call	10100eb8 <strlen>
10100fa0:	d8803715 	stw	r2,220(sp)
10100fa4:	d8802d17 	ldw	r2,180(sp)
10100fa8:	10000226 	beq	r2,zero,10100fb4 <___vfprintf_internal_r+0x64>
10100fac:	10800e17 	ldw	r2,56(r2)
10100fb0:	1000fb26 	beq	r2,zero,101013a0 <___vfprintf_internal_r+0x450>
10100fb4:	b880030b 	ldhu	r2,12(r23)
10100fb8:	10c8000c 	andi	r3,r2,8192
10100fbc:	1800061e 	bne	r3,zero,10100fd8 <___vfprintf_internal_r+0x88>
10100fc0:	b9001917 	ldw	r4,100(r23)
10100fc4:	00f7ffc4 	movi	r3,-8193
10100fc8:	10880014 	ori	r2,r2,8192
10100fcc:	20c6703a 	and	r3,r4,r3
10100fd0:	b880030d 	sth	r2,12(r23)
10100fd4:	b8c01915 	stw	r3,100(r23)
10100fd8:	10c0020c 	andi	r3,r2,8
10100fdc:	1800c326 	beq	r3,zero,101012ec <___vfprintf_internal_r+0x39c>
10100fe0:	b8c00417 	ldw	r3,16(r23)
10100fe4:	1800c126 	beq	r3,zero,101012ec <___vfprintf_internal_r+0x39c>
10100fe8:	1080068c 	andi	r2,r2,26
10100fec:	00c00284 	movi	r3,10
10100ff0:	10c0c626 	beq	r2,r3,1010130c <___vfprintf_internal_r+0x3bc>
10100ff4:	d8c00404 	addi	r3,sp,16
10100ff8:	05040474 	movhi	r20,4113
10100ffc:	d9001e04 	addi	r4,sp,120
10101000:	a5006884 	addi	r20,r20,418
10101004:	d8c01e15 	stw	r3,120(sp)
10101008:	d8002015 	stw	zero,128(sp)
1010100c:	d8001f15 	stw	zero,124(sp)
10101010:	d8003315 	stw	zero,204(sp)
10101014:	d8003615 	stw	zero,216(sp)
10101018:	d8003815 	stw	zero,224(sp)
1010101c:	1811883a 	mov	r8,r3
10101020:	d8003915 	stw	zero,228(sp)
10101024:	d8003a15 	stw	zero,232(sp)
10101028:	d8002f15 	stw	zero,188(sp)
1010102c:	d9002815 	stw	r4,160(sp)
10101030:	a8800007 	ldb	r2,0(r21)
10101034:	10028b26 	beq	r2,zero,10101a64 <___vfprintf_internal_r+0xb14>
10101038:	00c00944 	movi	r3,37
1010103c:	a823883a 	mov	r17,r21
10101040:	10c0021e 	bne	r2,r3,1010104c <___vfprintf_internal_r+0xfc>
10101044:	00001406 	br	10101098 <___vfprintf_internal_r+0x148>
10101048:	10c00326 	beq	r2,r3,10101058 <___vfprintf_internal_r+0x108>
1010104c:	8c400044 	addi	r17,r17,1
10101050:	88800007 	ldb	r2,0(r17)
10101054:	103ffc1e 	bne	r2,zero,10101048 <__alt_data_end+0xfffe1048>
10101058:	8d61c83a 	sub	r16,r17,r21
1010105c:	80000e26 	beq	r16,zero,10101098 <___vfprintf_internal_r+0x148>
10101060:	d8c02017 	ldw	r3,128(sp)
10101064:	d8801f17 	ldw	r2,124(sp)
10101068:	45400015 	stw	r21,0(r8)
1010106c:	1c07883a 	add	r3,r3,r16
10101070:	10800044 	addi	r2,r2,1
10101074:	d8c02015 	stw	r3,128(sp)
10101078:	44000115 	stw	r16,4(r8)
1010107c:	d8801f15 	stw	r2,124(sp)
10101080:	00c001c4 	movi	r3,7
10101084:	1880a916 	blt	r3,r2,1010132c <___vfprintf_internal_r+0x3dc>
10101088:	42000204 	addi	r8,r8,8
1010108c:	d9402f17 	ldw	r5,188(sp)
10101090:	2c0b883a 	add	r5,r5,r16
10101094:	d9402f15 	stw	r5,188(sp)
10101098:	88800007 	ldb	r2,0(r17)
1010109c:	1000aa26 	beq	r2,zero,10101348 <___vfprintf_internal_r+0x3f8>
101010a0:	8d400044 	addi	r21,r17,1
101010a4:	8c400047 	ldb	r17,1(r17)
101010a8:	0021883a 	mov	r16,zero
101010ac:	00bfffc4 	movi	r2,-1
101010b0:	0025883a 	mov	r18,zero
101010b4:	dc002905 	stb	r16,164(sp)
101010b8:	d8002785 	stb	zero,158(sp)
101010bc:	d8002b05 	stb	zero,172(sp)
101010c0:	d8802a15 	stw	r2,168(sp)
101010c4:	d8003115 	stw	zero,196(sp)
101010c8:	04c01604 	movi	r19,88
101010cc:	05800244 	movi	r22,9
101010d0:	9021883a 	mov	r16,r18
101010d4:	4039883a 	mov	fp,r8
101010d8:	ad400044 	addi	r21,r21,1
101010dc:	88bff804 	addi	r2,r17,-32
101010e0:	98833236 	bltu	r19,r2,10101dac <___vfprintf_internal_r+0xe5c>
101010e4:	100490ba 	slli	r2,r2,2
101010e8:	00c40434 	movhi	r3,4112
101010ec:	18c43f04 	addi	r3,r3,4348
101010f0:	10c5883a 	add	r2,r2,r3
101010f4:	10800017 	ldw	r2,0(r2)
101010f8:	1000683a 	jmp	r2
101010fc:	10101ca4 	muli	zero,r2,16498
10101100:	10101dac 	andhi	zero,r2,16502
10101104:	10101dac 	andhi	zero,r2,16502
10101108:	10101cc4 	addi	zero,r2,16499
1010110c:	10101dac 	andhi	zero,r2,16502
10101110:	10101dac 	andhi	zero,r2,16502
10101114:	10101dac 	andhi	zero,r2,16502
10101118:	10101dac 	andhi	zero,r2,16502
1010111c:	10101dac 	andhi	zero,r2,16502
10101120:	10101dac 	andhi	zero,r2,16502
10101124:	101013ac 	andhi	zero,r2,16462
10101128:	10101bb4 	orhi	zero,r2,16494
1010112c:	10101dac 	andhi	zero,r2,16502
10101130:	10101270 	cmpltui	zero,r2,16457
10101134:	101013d0 	cmplti	zero,r2,16463
10101138:	10101dac 	andhi	zero,r2,16502
1010113c:	10101420 	cmpeqi	zero,r2,16464
10101140:	1010142c 	andhi	zero,r2,16464
10101144:	1010142c 	andhi	zero,r2,16464
10101148:	1010142c 	andhi	zero,r2,16464
1010114c:	1010142c 	andhi	zero,r2,16464
10101150:	1010142c 	andhi	zero,r2,16464
10101154:	1010142c 	andhi	zero,r2,16464
10101158:	1010142c 	andhi	zero,r2,16464
1010115c:	1010142c 	andhi	zero,r2,16464
10101160:	1010142c 	andhi	zero,r2,16464
10101164:	10101dac 	andhi	zero,r2,16502
10101168:	10101dac 	andhi	zero,r2,16502
1010116c:	10101dac 	andhi	zero,r2,16502
10101170:	10101dac 	andhi	zero,r2,16502
10101174:	10101dac 	andhi	zero,r2,16502
10101178:	10101dac 	andhi	zero,r2,16502
1010117c:	10101dac 	andhi	zero,r2,16502
10101180:	10101dac 	andhi	zero,r2,16502
10101184:	10101dac 	andhi	zero,r2,16502
10101188:	10101dac 	andhi	zero,r2,16502
1010118c:	10101468 	cmpgeui	zero,r2,16465
10101190:	10101530 	cmpltui	zero,r2,16468
10101194:	10101dac 	andhi	zero,r2,16502
10101198:	10101530 	cmpltui	zero,r2,16468
1010119c:	10101dac 	andhi	zero,r2,16502
101011a0:	10101dac 	andhi	zero,r2,16502
101011a4:	10101dac 	andhi	zero,r2,16502
101011a8:	10101dac 	andhi	zero,r2,16502
101011ac:	101015dc 	xori	zero,r2,16471
101011b0:	10101dac 	andhi	zero,r2,16502
101011b4:	10101dac 	andhi	zero,r2,16502
101011b8:	101015e8 	cmpgeui	zero,r2,16471
101011bc:	10101dac 	andhi	zero,r2,16502
101011c0:	10101dac 	andhi	zero,r2,16502
101011c4:	10101dac 	andhi	zero,r2,16502
101011c8:	10101dac 	andhi	zero,r2,16502
101011cc:	10101dac 	andhi	zero,r2,16502
101011d0:	10101a6c 	andhi	zero,r2,16489
101011d4:	10101dac 	andhi	zero,r2,16502
101011d8:	10101dac 	andhi	zero,r2,16502
101011dc:	10101ad8 	cmpnei	zero,r2,16491
101011e0:	10101dac 	andhi	zero,r2,16502
101011e4:	10101dac 	andhi	zero,r2,16502
101011e8:	10101dac 	andhi	zero,r2,16502
101011ec:	10101dac 	andhi	zero,r2,16502
101011f0:	10101dac 	andhi	zero,r2,16502
101011f4:	10101dac 	andhi	zero,r2,16502
101011f8:	10101dac 	andhi	zero,r2,16502
101011fc:	10101dac 	andhi	zero,r2,16502
10101200:	10101dac 	andhi	zero,r2,16502
10101204:	10101dac 	andhi	zero,r2,16502
10101208:	10101d50 	cmplti	zero,r2,16501
1010120c:	10101cd0 	cmplti	zero,r2,16499
10101210:	10101530 	cmpltui	zero,r2,16468
10101214:	10101530 	cmpltui	zero,r2,16468
10101218:	10101530 	cmpltui	zero,r2,16468
1010121c:	10101cf0 	cmpltui	zero,r2,16499
10101220:	10101cd0 	cmplti	zero,r2,16499
10101224:	10101dac 	andhi	zero,r2,16502
10101228:	10101dac 	andhi	zero,r2,16502
1010122c:	10101cfc 	xorhi	zero,r2,16499
10101230:	10101dac 	andhi	zero,r2,16502
10101234:	10101d10 	cmplti	zero,r2,16500
10101238:	10101b94 	ori	zero,r2,16494
1010123c:	1010127c 	xorhi	zero,r2,16457
10101240:	10101bcc 	andi	zero,r2,16495
10101244:	10101dac 	andhi	zero,r2,16502
10101248:	10101bd8 	cmpnei	zero,r2,16495
1010124c:	10101dac 	andhi	zero,r2,16502
10101250:	10101c3c 	xorhi	zero,r2,16496
10101254:	10101dac 	andhi	zero,r2,16502
10101258:	10101dac 	andhi	zero,r2,16502
1010125c:	10101c5c 	xori	zero,r2,16497
10101260:	d8c03117 	ldw	r3,196(sp)
10101264:	d8802e15 	stw	r2,184(sp)
10101268:	00c7c83a 	sub	r3,zero,r3
1010126c:	d8c03115 	stw	r3,196(sp)
10101270:	84000114 	ori	r16,r16,4
10101274:	ac400007 	ldb	r17,0(r21)
10101278:	003f9706 	br	101010d8 <__alt_data_end+0xfffe10d8>
1010127c:	00800c04 	movi	r2,48
10101280:	d8802705 	stb	r2,156(sp)
10101284:	00801e04 	movi	r2,120
10101288:	d8802745 	stb	r2,157(sp)
1010128c:	d9002a17 	ldw	r4,168(sp)
10101290:	d8802e17 	ldw	r2,184(sp)
10101294:	d8002785 	stb	zero,158(sp)
10101298:	e011883a 	mov	r8,fp
1010129c:	10c00104 	addi	r3,r2,4
101012a0:	14c00017 	ldw	r19,0(r2)
101012a4:	002d883a 	mov	r22,zero
101012a8:	80800094 	ori	r2,r16,2
101012ac:	2002ca16 	blt	r4,zero,10101dd8 <___vfprintf_internal_r+0xe88>
101012b0:	00bfdfc4 	movi	r2,-129
101012b4:	80a4703a 	and	r18,r16,r2
101012b8:	d8c02e15 	stw	r3,184(sp)
101012bc:	94800094 	ori	r18,r18,2
101012c0:	9802b41e 	bne	r19,zero,10101d94 <___vfprintf_internal_r+0xe44>
101012c4:	01440474 	movhi	r5,4113
101012c8:	29406104 	addi	r5,r5,388
101012cc:	d9403915 	stw	r5,228(sp)
101012d0:	04401e04 	movi	r17,120
101012d4:	d8802a17 	ldw	r2,168(sp)
101012d8:	0039883a 	mov	fp,zero
101012dc:	1001fa26 	beq	r2,zero,10101ac8 <___vfprintf_internal_r+0xb78>
101012e0:	0027883a 	mov	r19,zero
101012e4:	002d883a 	mov	r22,zero
101012e8:	00021906 	br	10101b50 <___vfprintf_internal_r+0xc00>
101012ec:	d9002d17 	ldw	r4,180(sp)
101012f0:	b80b883a 	mov	r5,r23
101012f4:	01033040 	call	10103304 <__swsetup_r>
101012f8:	1005dc1e 	bne	r2,zero,10102a6c <___vfprintf_internal_r+0x1b1c>
101012fc:	b880030b 	ldhu	r2,12(r23)
10101300:	00c00284 	movi	r3,10
10101304:	1080068c 	andi	r2,r2,26
10101308:	10ff3a1e 	bne	r2,r3,10100ff4 <__alt_data_end+0xfffe0ff4>
1010130c:	b880038f 	ldh	r2,14(r23)
10101310:	103f3816 	blt	r2,zero,10100ff4 <__alt_data_end+0xfffe0ff4>
10101314:	d9c02e17 	ldw	r7,184(sp)
10101318:	d9002d17 	ldw	r4,180(sp)
1010131c:	a80d883a 	mov	r6,r21
10101320:	b80b883a 	mov	r5,r23
10101324:	01032480 	call	10103248 <__sbprintf>
10101328:	00001106 	br	10101370 <___vfprintf_internal_r+0x420>
1010132c:	d9002d17 	ldw	r4,180(sp)
10101330:	d9801e04 	addi	r6,sp,120
10101334:	b80b883a 	mov	r5,r23
10101338:	01085e80 	call	101085e8 <__sprint_r>
1010133c:	1000081e 	bne	r2,zero,10101360 <___vfprintf_internal_r+0x410>
10101340:	da000404 	addi	r8,sp,16
10101344:	003f5106 	br	1010108c <__alt_data_end+0xfffe108c>
10101348:	d8802017 	ldw	r2,128(sp)
1010134c:	10000426 	beq	r2,zero,10101360 <___vfprintf_internal_r+0x410>
10101350:	d9002d17 	ldw	r4,180(sp)
10101354:	d9801e04 	addi	r6,sp,120
10101358:	b80b883a 	mov	r5,r23
1010135c:	01085e80 	call	101085e8 <__sprint_r>
10101360:	b880030b 	ldhu	r2,12(r23)
10101364:	1080100c 	andi	r2,r2,64
10101368:	1005c01e 	bne	r2,zero,10102a6c <___vfprintf_internal_r+0x1b1c>
1010136c:	d8802f17 	ldw	r2,188(sp)
10101370:	dfc04717 	ldw	ra,284(sp)
10101374:	df004617 	ldw	fp,280(sp)
10101378:	ddc04517 	ldw	r23,276(sp)
1010137c:	dd804417 	ldw	r22,272(sp)
10101380:	dd404317 	ldw	r21,268(sp)
10101384:	dd004217 	ldw	r20,264(sp)
10101388:	dcc04117 	ldw	r19,260(sp)
1010138c:	dc804017 	ldw	r18,256(sp)
10101390:	dc403f17 	ldw	r17,252(sp)
10101394:	dc003e17 	ldw	r16,248(sp)
10101398:	dec04804 	addi	sp,sp,288
1010139c:	f800283a 	ret
101013a0:	d9002d17 	ldw	r4,180(sp)
101013a4:	01053100 	call	10105310 <__sinit>
101013a8:	003f0206 	br	10100fb4 <__alt_data_end+0xfffe0fb4>
101013ac:	d9002e17 	ldw	r4,184(sp)
101013b0:	d9402e17 	ldw	r5,184(sp)
101013b4:	21000017 	ldw	r4,0(r4)
101013b8:	28800104 	addi	r2,r5,4
101013bc:	d9003115 	stw	r4,196(sp)
101013c0:	203fa716 	blt	r4,zero,10101260 <__alt_data_end+0xfffe1260>
101013c4:	d8802e15 	stw	r2,184(sp)
101013c8:	ac400007 	ldb	r17,0(r21)
101013cc:	003f4206 	br	101010d8 <__alt_data_end+0xfffe10d8>
101013d0:	ac400007 	ldb	r17,0(r21)
101013d4:	01000a84 	movi	r4,42
101013d8:	a8c00044 	addi	r3,r21,1
101013dc:	89075826 	beq	r17,r4,10103140 <___vfprintf_internal_r+0x21f0>
101013e0:	8cbff404 	addi	r18,r17,-48
101013e4:	b486ae36 	bltu	r22,r18,10102ea0 <___vfprintf_internal_r+0x1f50>
101013e8:	0009883a 	mov	r4,zero
101013ec:	1823883a 	mov	r17,r3
101013f0:	01400284 	movi	r5,10
101013f4:	0100c080 	call	10100c08 <__mulsi3>
101013f8:	88c00007 	ldb	r3,0(r17)
101013fc:	1489883a 	add	r4,r2,r18
10101400:	8d400044 	addi	r21,r17,1
10101404:	1cbff404 	addi	r18,r3,-48
10101408:	a823883a 	mov	r17,r21
1010140c:	b4bff82e 	bgeu	r22,r18,101013f0 <__alt_data_end+0xfffe13f0>
10101410:	1823883a 	mov	r17,r3
10101414:	2005f616 	blt	r4,zero,10102bf0 <___vfprintf_internal_r+0x1ca0>
10101418:	d9002a15 	stw	r4,168(sp)
1010141c:	003f2f06 	br	101010dc <__alt_data_end+0xfffe10dc>
10101420:	84002014 	ori	r16,r16,128
10101424:	ac400007 	ldb	r17,0(r21)
10101428:	003f2b06 	br	101010d8 <__alt_data_end+0xfffe10d8>
1010142c:	8cbff404 	addi	r18,r17,-48
10101430:	d8003115 	stw	zero,196(sp)
10101434:	0009883a 	mov	r4,zero
10101438:	a823883a 	mov	r17,r21
1010143c:	01400284 	movi	r5,10
10101440:	0100c080 	call	10100c08 <__mulsi3>
10101444:	88c00007 	ldb	r3,0(r17)
10101448:	9089883a 	add	r4,r18,r2
1010144c:	ad400044 	addi	r21,r21,1
10101450:	1cbff404 	addi	r18,r3,-48
10101454:	a823883a 	mov	r17,r21
10101458:	b4bff82e 	bgeu	r22,r18,1010143c <__alt_data_end+0xfffe143c>
1010145c:	1823883a 	mov	r17,r3
10101460:	d9003115 	stw	r4,196(sp)
10101464:	003f1d06 	br	101010dc <__alt_data_end+0xfffe10dc>
10101468:	8025883a 	mov	r18,r16
1010146c:	dc002903 	ldbu	r16,164(sp)
10101470:	e011883a 	mov	r8,fp
10101474:	84003fcc 	andi	r16,r16,255
10101478:	8007531e 	bne	r16,zero,101031c8 <___vfprintf_internal_r+0x2278>
1010147c:	94800414 	ori	r18,r18,16
10101480:	9080080c 	andi	r2,r18,32
10101484:	1003a326 	beq	r2,zero,10102314 <___vfprintf_internal_r+0x13c4>
10101488:	d9002e17 	ldw	r4,184(sp)
1010148c:	20800117 	ldw	r2,4(r4)
10101490:	24c00017 	ldw	r19,0(r4)
10101494:	21000204 	addi	r4,r4,8
10101498:	d9002e15 	stw	r4,184(sp)
1010149c:	102d883a 	mov	r22,r2
101014a0:	10047316 	blt	r2,zero,10102670 <___vfprintf_internal_r+0x1720>
101014a4:	d9002a17 	ldw	r4,168(sp)
101014a8:	df002783 	ldbu	fp,158(sp)
101014ac:	2003e416 	blt	r4,zero,10102440 <___vfprintf_internal_r+0x14f0>
101014b0:	00ffdfc4 	movi	r3,-129
101014b4:	9d84b03a 	or	r2,r19,r22
101014b8:	90e4703a 	and	r18,r18,r3
101014bc:	10018026 	beq	r2,zero,10101ac0 <___vfprintf_internal_r+0xb70>
101014c0:	b003ab26 	beq	r22,zero,10102370 <___vfprintf_internal_r+0x1420>
101014c4:	dc402915 	stw	r17,164(sp)
101014c8:	dc001e04 	addi	r16,sp,120
101014cc:	b023883a 	mov	r17,r22
101014d0:	402d883a 	mov	r22,r8
101014d4:	9809883a 	mov	r4,r19
101014d8:	880b883a 	mov	r5,r17
101014dc:	01800284 	movi	r6,10
101014e0:	000f883a 	mov	r7,zero
101014e4:	010ab2c0 	call	1010ab2c <__umoddi3>
101014e8:	10800c04 	addi	r2,r2,48
101014ec:	843fffc4 	addi	r16,r16,-1
101014f0:	9809883a 	mov	r4,r19
101014f4:	880b883a 	mov	r5,r17
101014f8:	80800005 	stb	r2,0(r16)
101014fc:	01800284 	movi	r6,10
10101500:	000f883a 	mov	r7,zero
10101504:	010a5300 	call	1010a530 <__udivdi3>
10101508:	1027883a 	mov	r19,r2
1010150c:	10c4b03a 	or	r2,r2,r3
10101510:	1823883a 	mov	r17,r3
10101514:	103fef1e 	bne	r2,zero,101014d4 <__alt_data_end+0xfffe14d4>
10101518:	d8c02817 	ldw	r3,160(sp)
1010151c:	dc402917 	ldw	r17,164(sp)
10101520:	b011883a 	mov	r8,r22
10101524:	1c07c83a 	sub	r3,r3,r16
10101528:	d8c02b15 	stw	r3,172(sp)
1010152c:	00005f06 	br	101016ac <___vfprintf_internal_r+0x75c>
10101530:	8025883a 	mov	r18,r16
10101534:	dc002903 	ldbu	r16,164(sp)
10101538:	e011883a 	mov	r8,fp
1010153c:	84003fcc 	andi	r16,r16,255
10101540:	80071e1e 	bne	r16,zero,101031bc <___vfprintf_internal_r+0x226c>
10101544:	9080020c 	andi	r2,r18,8
10101548:	1004af26 	beq	r2,zero,10102808 <___vfprintf_internal_r+0x18b8>
1010154c:	d9002e17 	ldw	r4,184(sp)
10101550:	d9402e17 	ldw	r5,184(sp)
10101554:	d8802e17 	ldw	r2,184(sp)
10101558:	21000017 	ldw	r4,0(r4)
1010155c:	29400117 	ldw	r5,4(r5)
10101560:	10800204 	addi	r2,r2,8
10101564:	d9003615 	stw	r4,216(sp)
10101568:	d9403815 	stw	r5,224(sp)
1010156c:	d8802e15 	stw	r2,184(sp)
10101570:	d9003617 	ldw	r4,216(sp)
10101574:	d9403817 	ldw	r5,224(sp)
10101578:	da003d15 	stw	r8,244(sp)
1010157c:	04000044 	movi	r16,1
10101580:	010820c0 	call	1010820c <__fpclassifyd>
10101584:	da003d17 	ldw	r8,244(sp)
10101588:	1404441e 	bne	r2,r16,1010269c <___vfprintf_internal_r+0x174c>
1010158c:	d9003617 	ldw	r4,216(sp)
10101590:	d9403817 	ldw	r5,224(sp)
10101594:	000d883a 	mov	r6,zero
10101598:	000f883a 	mov	r7,zero
1010159c:	010c4d00 	call	1010c4d0 <__ledf2>
101015a0:	da003d17 	ldw	r8,244(sp)
101015a4:	1005e316 	blt	r2,zero,10102d34 <___vfprintf_internal_r+0x1de4>
101015a8:	df002783 	ldbu	fp,158(sp)
101015ac:	008011c4 	movi	r2,71
101015b0:	1445580e 	bge	r2,r17,10102b14 <___vfprintf_internal_r+0x1bc4>
101015b4:	04040474 	movhi	r16,4113
101015b8:	84005904 	addi	r16,r16,356
101015bc:	00c000c4 	movi	r3,3
101015c0:	00bfdfc4 	movi	r2,-129
101015c4:	d8c02915 	stw	r3,164(sp)
101015c8:	90a4703a 	and	r18,r18,r2
101015cc:	d8c02b15 	stw	r3,172(sp)
101015d0:	d8002a15 	stw	zero,168(sp)
101015d4:	d8003215 	stw	zero,200(sp)
101015d8:	00003a06 	br	101016c4 <___vfprintf_internal_r+0x774>
101015dc:	84000214 	ori	r16,r16,8
101015e0:	ac400007 	ldb	r17,0(r21)
101015e4:	003ebc06 	br	101010d8 <__alt_data_end+0xfffe10d8>
101015e8:	8025883a 	mov	r18,r16
101015ec:	dc002903 	ldbu	r16,164(sp)
101015f0:	e011883a 	mov	r8,fp
101015f4:	84003fcc 	andi	r16,r16,255
101015f8:	8007001e 	bne	r16,zero,101031fc <___vfprintf_internal_r+0x22ac>
101015fc:	94800414 	ori	r18,r18,16
10101600:	9080080c 	andi	r2,r18,32
10101604:	1002fa26 	beq	r2,zero,101021f0 <___vfprintf_internal_r+0x12a0>
10101608:	d9002e17 	ldw	r4,184(sp)
1010160c:	d9402a17 	ldw	r5,168(sp)
10101610:	d8002785 	stb	zero,158(sp)
10101614:	20800204 	addi	r2,r4,8
10101618:	24c00017 	ldw	r19,0(r4)
1010161c:	25800117 	ldw	r22,4(r4)
10101620:	2804b116 	blt	r5,zero,101028e8 <___vfprintf_internal_r+0x1998>
10101624:	013fdfc4 	movi	r4,-129
10101628:	9d86b03a 	or	r3,r19,r22
1010162c:	d8802e15 	stw	r2,184(sp)
10101630:	9124703a 	and	r18,r18,r4
10101634:	1802fb1e 	bne	r3,zero,10102224 <___vfprintf_internal_r+0x12d4>
10101638:	d8c02a17 	ldw	r3,168(sp)
1010163c:	0039883a 	mov	fp,zero
10101640:	1805e526 	beq	r3,zero,10102dd8 <___vfprintf_internal_r+0x1e88>
10101644:	0027883a 	mov	r19,zero
10101648:	002d883a 	mov	r22,zero
1010164c:	dc001e04 	addi	r16,sp,120
10101650:	9806d0fa 	srli	r3,r19,3
10101654:	b008977a 	slli	r4,r22,29
10101658:	b02cd0fa 	srli	r22,r22,3
1010165c:	9cc001cc 	andi	r19,r19,7
10101660:	98800c04 	addi	r2,r19,48
10101664:	843fffc4 	addi	r16,r16,-1
10101668:	20e6b03a 	or	r19,r4,r3
1010166c:	80800005 	stb	r2,0(r16)
10101670:	9d86b03a 	or	r3,r19,r22
10101674:	183ff61e 	bne	r3,zero,10101650 <__alt_data_end+0xfffe1650>
10101678:	90c0004c 	andi	r3,r18,1
1010167c:	18014126 	beq	r3,zero,10101b84 <___vfprintf_internal_r+0xc34>
10101680:	10803fcc 	andi	r2,r2,255
10101684:	1080201c 	xori	r2,r2,128
10101688:	10bfe004 	addi	r2,r2,-128
1010168c:	00c00c04 	movi	r3,48
10101690:	10c13c26 	beq	r2,r3,10101b84 <___vfprintf_internal_r+0xc34>
10101694:	80ffffc5 	stb	r3,-1(r16)
10101698:	d8c02817 	ldw	r3,160(sp)
1010169c:	80bfffc4 	addi	r2,r16,-1
101016a0:	1021883a 	mov	r16,r2
101016a4:	1887c83a 	sub	r3,r3,r2
101016a8:	d8c02b15 	stw	r3,172(sp)
101016ac:	d8802b17 	ldw	r2,172(sp)
101016b0:	d9002a17 	ldw	r4,168(sp)
101016b4:	1100010e 	bge	r2,r4,101016bc <___vfprintf_internal_r+0x76c>
101016b8:	2005883a 	mov	r2,r4
101016bc:	d8802915 	stw	r2,164(sp)
101016c0:	d8003215 	stw	zero,200(sp)
101016c4:	e7003fcc 	andi	fp,fp,255
101016c8:	e700201c 	xori	fp,fp,128
101016cc:	e73fe004 	addi	fp,fp,-128
101016d0:	e0000326 	beq	fp,zero,101016e0 <___vfprintf_internal_r+0x790>
101016d4:	d8c02917 	ldw	r3,164(sp)
101016d8:	18c00044 	addi	r3,r3,1
101016dc:	d8c02915 	stw	r3,164(sp)
101016e0:	90c0008c 	andi	r3,r18,2
101016e4:	d8c02c15 	stw	r3,176(sp)
101016e8:	18000326 	beq	r3,zero,101016f8 <___vfprintf_internal_r+0x7a8>
101016ec:	d8c02917 	ldw	r3,164(sp)
101016f0:	18c00084 	addi	r3,r3,2
101016f4:	d8c02915 	stw	r3,164(sp)
101016f8:	90c0210c 	andi	r3,r18,132
101016fc:	d8c03015 	stw	r3,192(sp)
10101700:	1801c51e 	bne	r3,zero,10101e18 <___vfprintf_internal_r+0xec8>
10101704:	d9003117 	ldw	r4,196(sp)
10101708:	d8c02917 	ldw	r3,164(sp)
1010170c:	20e7c83a 	sub	r19,r4,r3
10101710:	04c1c10e 	bge	zero,r19,10101e18 <___vfprintf_internal_r+0xec8>
10101714:	02400404 	movi	r9,16
10101718:	d8c02017 	ldw	r3,128(sp)
1010171c:	d8801f17 	ldw	r2,124(sp)
10101720:	4cc52f0e 	bge	r9,r19,10102be0 <___vfprintf_internal_r+0x1c90>
10101724:	01440474 	movhi	r5,4113
10101728:	29406c84 	addi	r5,r5,434
1010172c:	dc403b15 	stw	r17,236(sp)
10101730:	d9403515 	stw	r5,212(sp)
10101734:	9823883a 	mov	r17,r19
10101738:	482d883a 	mov	r22,r9
1010173c:	9027883a 	mov	r19,r18
10101740:	070001c4 	movi	fp,7
10101744:	8025883a 	mov	r18,r16
10101748:	dc002d17 	ldw	r16,180(sp)
1010174c:	00000306 	br	1010175c <___vfprintf_internal_r+0x80c>
10101750:	8c7ffc04 	addi	r17,r17,-16
10101754:	42000204 	addi	r8,r8,8
10101758:	b440130e 	bge	r22,r17,101017a8 <___vfprintf_internal_r+0x858>
1010175c:	01040474 	movhi	r4,4113
10101760:	18c00404 	addi	r3,r3,16
10101764:	10800044 	addi	r2,r2,1
10101768:	21006c84 	addi	r4,r4,434
1010176c:	41000015 	stw	r4,0(r8)
10101770:	45800115 	stw	r22,4(r8)
10101774:	d8c02015 	stw	r3,128(sp)
10101778:	d8801f15 	stw	r2,124(sp)
1010177c:	e0bff40e 	bge	fp,r2,10101750 <__alt_data_end+0xfffe1750>
10101780:	d9801e04 	addi	r6,sp,120
10101784:	b80b883a 	mov	r5,r23
10101788:	8009883a 	mov	r4,r16
1010178c:	01085e80 	call	101085e8 <__sprint_r>
10101790:	103ef31e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10101794:	8c7ffc04 	addi	r17,r17,-16
10101798:	d8c02017 	ldw	r3,128(sp)
1010179c:	d8801f17 	ldw	r2,124(sp)
101017a0:	da000404 	addi	r8,sp,16
101017a4:	b47fed16 	blt	r22,r17,1010175c <__alt_data_end+0xfffe175c>
101017a8:	9021883a 	mov	r16,r18
101017ac:	9825883a 	mov	r18,r19
101017b0:	8827883a 	mov	r19,r17
101017b4:	dc403b17 	ldw	r17,236(sp)
101017b8:	d9403517 	ldw	r5,212(sp)
101017bc:	98c7883a 	add	r3,r19,r3
101017c0:	10800044 	addi	r2,r2,1
101017c4:	41400015 	stw	r5,0(r8)
101017c8:	44c00115 	stw	r19,4(r8)
101017cc:	d8c02015 	stw	r3,128(sp)
101017d0:	d8801f15 	stw	r2,124(sp)
101017d4:	010001c4 	movi	r4,7
101017d8:	2082c516 	blt	r4,r2,101022f0 <___vfprintf_internal_r+0x13a0>
101017dc:	df002787 	ldb	fp,158(sp)
101017e0:	42000204 	addi	r8,r8,8
101017e4:	e0000c26 	beq	fp,zero,10101818 <___vfprintf_internal_r+0x8c8>
101017e8:	d8801f17 	ldw	r2,124(sp)
101017ec:	d9002784 	addi	r4,sp,158
101017f0:	18c00044 	addi	r3,r3,1
101017f4:	10800044 	addi	r2,r2,1
101017f8:	41000015 	stw	r4,0(r8)
101017fc:	01000044 	movi	r4,1
10101800:	41000115 	stw	r4,4(r8)
10101804:	d8c02015 	stw	r3,128(sp)
10101808:	d8801f15 	stw	r2,124(sp)
1010180c:	010001c4 	movi	r4,7
10101810:	20825e16 	blt	r4,r2,1010218c <___vfprintf_internal_r+0x123c>
10101814:	42000204 	addi	r8,r8,8
10101818:	d8802c17 	ldw	r2,176(sp)
1010181c:	10000c26 	beq	r2,zero,10101850 <___vfprintf_internal_r+0x900>
10101820:	d8801f17 	ldw	r2,124(sp)
10101824:	d9002704 	addi	r4,sp,156
10101828:	18c00084 	addi	r3,r3,2
1010182c:	10800044 	addi	r2,r2,1
10101830:	41000015 	stw	r4,0(r8)
10101834:	01000084 	movi	r4,2
10101838:	41000115 	stw	r4,4(r8)
1010183c:	d8c02015 	stw	r3,128(sp)
10101840:	d8801f15 	stw	r2,124(sp)
10101844:	010001c4 	movi	r4,7
10101848:	20825816 	blt	r4,r2,101021ac <___vfprintf_internal_r+0x125c>
1010184c:	42000204 	addi	r8,r8,8
10101850:	d9003017 	ldw	r4,192(sp)
10101854:	00802004 	movi	r2,128
10101858:	2081bb26 	beq	r4,r2,10101f48 <___vfprintf_internal_r+0xff8>
1010185c:	d9402a17 	ldw	r5,168(sp)
10101860:	d8802b17 	ldw	r2,172(sp)
10101864:	28adc83a 	sub	r22,r5,r2
10101868:	0580310e 	bge	zero,r22,10101930 <___vfprintf_internal_r+0x9e0>
1010186c:	07000404 	movi	fp,16
10101870:	d8801f17 	ldw	r2,124(sp)
10101874:	e584360e 	bge	fp,r22,10102950 <___vfprintf_internal_r+0x1a00>
10101878:	01440474 	movhi	r5,4113
1010187c:	29406884 	addi	r5,r5,418
10101880:	dc402a15 	stw	r17,168(sp)
10101884:	d9402c15 	stw	r5,176(sp)
10101888:	b023883a 	mov	r17,r22
1010188c:	04c001c4 	movi	r19,7
10101890:	a82d883a 	mov	r22,r21
10101894:	902b883a 	mov	r21,r18
10101898:	8025883a 	mov	r18,r16
1010189c:	dc002d17 	ldw	r16,180(sp)
101018a0:	00000306 	br	101018b0 <___vfprintf_internal_r+0x960>
101018a4:	8c7ffc04 	addi	r17,r17,-16
101018a8:	42000204 	addi	r8,r8,8
101018ac:	e440110e 	bge	fp,r17,101018f4 <___vfprintf_internal_r+0x9a4>
101018b0:	18c00404 	addi	r3,r3,16
101018b4:	10800044 	addi	r2,r2,1
101018b8:	45000015 	stw	r20,0(r8)
101018bc:	47000115 	stw	fp,4(r8)
101018c0:	d8c02015 	stw	r3,128(sp)
101018c4:	d8801f15 	stw	r2,124(sp)
101018c8:	98bff60e 	bge	r19,r2,101018a4 <__alt_data_end+0xfffe18a4>
101018cc:	d9801e04 	addi	r6,sp,120
101018d0:	b80b883a 	mov	r5,r23
101018d4:	8009883a 	mov	r4,r16
101018d8:	01085e80 	call	101085e8 <__sprint_r>
101018dc:	103ea01e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
101018e0:	8c7ffc04 	addi	r17,r17,-16
101018e4:	d8c02017 	ldw	r3,128(sp)
101018e8:	d8801f17 	ldw	r2,124(sp)
101018ec:	da000404 	addi	r8,sp,16
101018f0:	e47fef16 	blt	fp,r17,101018b0 <__alt_data_end+0xfffe18b0>
101018f4:	9021883a 	mov	r16,r18
101018f8:	a825883a 	mov	r18,r21
101018fc:	b02b883a 	mov	r21,r22
10101900:	882d883a 	mov	r22,r17
10101904:	dc402a17 	ldw	r17,168(sp)
10101908:	d9002c17 	ldw	r4,176(sp)
1010190c:	1d87883a 	add	r3,r3,r22
10101910:	10800044 	addi	r2,r2,1
10101914:	41000015 	stw	r4,0(r8)
10101918:	45800115 	stw	r22,4(r8)
1010191c:	d8c02015 	stw	r3,128(sp)
10101920:	d8801f15 	stw	r2,124(sp)
10101924:	010001c4 	movi	r4,7
10101928:	20821016 	blt	r4,r2,1010216c <___vfprintf_internal_r+0x121c>
1010192c:	42000204 	addi	r8,r8,8
10101930:	9080400c 	andi	r2,r18,256
10101934:	10013a1e 	bne	r2,zero,10101e20 <___vfprintf_internal_r+0xed0>
10101938:	d9402b17 	ldw	r5,172(sp)
1010193c:	d8801f17 	ldw	r2,124(sp)
10101940:	44000015 	stw	r16,0(r8)
10101944:	1947883a 	add	r3,r3,r5
10101948:	10800044 	addi	r2,r2,1
1010194c:	41400115 	stw	r5,4(r8)
10101950:	d8c02015 	stw	r3,128(sp)
10101954:	d8801f15 	stw	r2,124(sp)
10101958:	010001c4 	movi	r4,7
1010195c:	2081f516 	blt	r4,r2,10102134 <___vfprintf_internal_r+0x11e4>
10101960:	42000204 	addi	r8,r8,8
10101964:	9480010c 	andi	r18,r18,4
10101968:	90003226 	beq	r18,zero,10101a34 <___vfprintf_internal_r+0xae4>
1010196c:	d9403117 	ldw	r5,196(sp)
10101970:	d8802917 	ldw	r2,164(sp)
10101974:	28a1c83a 	sub	r16,r5,r2
10101978:	04002e0e 	bge	zero,r16,10101a34 <___vfprintf_internal_r+0xae4>
1010197c:	04400404 	movi	r17,16
10101980:	d8801f17 	ldw	r2,124(sp)
10101984:	8c04c40e 	bge	r17,r16,10102c98 <___vfprintf_internal_r+0x1d48>
10101988:	01440474 	movhi	r5,4113
1010198c:	29406c84 	addi	r5,r5,434
10101990:	d9403515 	stw	r5,212(sp)
10101994:	048001c4 	movi	r18,7
10101998:	dcc02d17 	ldw	r19,180(sp)
1010199c:	00000306 	br	101019ac <___vfprintf_internal_r+0xa5c>
101019a0:	843ffc04 	addi	r16,r16,-16
101019a4:	42000204 	addi	r8,r8,8
101019a8:	8c00130e 	bge	r17,r16,101019f8 <___vfprintf_internal_r+0xaa8>
101019ac:	01040474 	movhi	r4,4113
101019b0:	18c00404 	addi	r3,r3,16
101019b4:	10800044 	addi	r2,r2,1
101019b8:	21006c84 	addi	r4,r4,434
101019bc:	41000015 	stw	r4,0(r8)
101019c0:	44400115 	stw	r17,4(r8)
101019c4:	d8c02015 	stw	r3,128(sp)
101019c8:	d8801f15 	stw	r2,124(sp)
101019cc:	90bff40e 	bge	r18,r2,101019a0 <__alt_data_end+0xfffe19a0>
101019d0:	d9801e04 	addi	r6,sp,120
101019d4:	b80b883a 	mov	r5,r23
101019d8:	9809883a 	mov	r4,r19
101019dc:	01085e80 	call	101085e8 <__sprint_r>
101019e0:	103e5f1e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
101019e4:	843ffc04 	addi	r16,r16,-16
101019e8:	d8c02017 	ldw	r3,128(sp)
101019ec:	d8801f17 	ldw	r2,124(sp)
101019f0:	da000404 	addi	r8,sp,16
101019f4:	8c3fed16 	blt	r17,r16,101019ac <__alt_data_end+0xfffe19ac>
101019f8:	d9403517 	ldw	r5,212(sp)
101019fc:	1c07883a 	add	r3,r3,r16
10101a00:	10800044 	addi	r2,r2,1
10101a04:	41400015 	stw	r5,0(r8)
10101a08:	44000115 	stw	r16,4(r8)
10101a0c:	d8c02015 	stw	r3,128(sp)
10101a10:	d8801f15 	stw	r2,124(sp)
10101a14:	010001c4 	movi	r4,7
10101a18:	2080060e 	bge	r4,r2,10101a34 <___vfprintf_internal_r+0xae4>
10101a1c:	d9002d17 	ldw	r4,180(sp)
10101a20:	d9801e04 	addi	r6,sp,120
10101a24:	b80b883a 	mov	r5,r23
10101a28:	01085e80 	call	101085e8 <__sprint_r>
10101a2c:	103e4c1e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10101a30:	d8c02017 	ldw	r3,128(sp)
10101a34:	d8803117 	ldw	r2,196(sp)
10101a38:	d9002917 	ldw	r4,164(sp)
10101a3c:	1100010e 	bge	r2,r4,10101a44 <___vfprintf_internal_r+0xaf4>
10101a40:	2005883a 	mov	r2,r4
10101a44:	d9402f17 	ldw	r5,188(sp)
10101a48:	288b883a 	add	r5,r5,r2
10101a4c:	d9402f15 	stw	r5,188(sp)
10101a50:	1801c01e 	bne	r3,zero,10102154 <___vfprintf_internal_r+0x1204>
10101a54:	a8800007 	ldb	r2,0(r21)
10101a58:	d8001f15 	stw	zero,124(sp)
10101a5c:	da000404 	addi	r8,sp,16
10101a60:	103d751e 	bne	r2,zero,10101038 <__alt_data_end+0xfffe1038>
10101a64:	a823883a 	mov	r17,r21
10101a68:	003d8b06 	br	10101098 <__alt_data_end+0xfffe1098>
10101a6c:	8025883a 	mov	r18,r16
10101a70:	dc002903 	ldbu	r16,164(sp)
10101a74:	e011883a 	mov	r8,fp
10101a78:	84003fcc 	andi	r16,r16,255
10101a7c:	8005e51e 	bne	r16,zero,10103214 <___vfprintf_internal_r+0x22c4>
10101a80:	94800414 	ori	r18,r18,16
10101a84:	9080080c 	andi	r2,r18,32
10101a88:	10022b26 	beq	r2,zero,10102338 <___vfprintf_internal_r+0x13e8>
10101a8c:	d9002e17 	ldw	r4,184(sp)
10101a90:	d9402a17 	ldw	r5,168(sp)
10101a94:	d8002785 	stb	zero,158(sp)
10101a98:	20c00204 	addi	r3,r4,8
10101a9c:	24c00017 	ldw	r19,0(r4)
10101aa0:	25800117 	ldw	r22,4(r4)
10101aa4:	28042e16 	blt	r5,zero,10102b60 <___vfprintf_internal_r+0x1c10>
10101aa8:	013fdfc4 	movi	r4,-129
10101aac:	9d84b03a 	or	r2,r19,r22
10101ab0:	d8c02e15 	stw	r3,184(sp)
10101ab4:	9124703a 	and	r18,r18,r4
10101ab8:	0039883a 	mov	fp,zero
10101abc:	103e801e 	bne	r2,zero,101014c0 <__alt_data_end+0xfffe14c0>
10101ac0:	d9002a17 	ldw	r4,168(sp)
10101ac4:	2002e01e 	bne	r4,zero,10102648 <___vfprintf_internal_r+0x16f8>
10101ac8:	d8002a15 	stw	zero,168(sp)
10101acc:	d8002b15 	stw	zero,172(sp)
10101ad0:	dc001e04 	addi	r16,sp,120
10101ad4:	003ef506 	br	101016ac <__alt_data_end+0xfffe16ac>
10101ad8:	8025883a 	mov	r18,r16
10101adc:	dc002903 	ldbu	r16,164(sp)
10101ae0:	e011883a 	mov	r8,fp
10101ae4:	84003fcc 	andi	r16,r16,255
10101ae8:	8005ba1e 	bne	r16,zero,101031d4 <___vfprintf_internal_r+0x2284>
10101aec:	01040474 	movhi	r4,4113
10101af0:	21005c04 	addi	r4,r4,368
10101af4:	d9003915 	stw	r4,228(sp)
10101af8:	9080080c 	andi	r2,r18,32
10101afc:	10006126 	beq	r2,zero,10101c84 <___vfprintf_internal_r+0xd34>
10101b00:	d9402e17 	ldw	r5,184(sp)
10101b04:	2cc00017 	ldw	r19,0(r5)
10101b08:	2d800117 	ldw	r22,4(r5)
10101b0c:	29400204 	addi	r5,r5,8
10101b10:	d9402e15 	stw	r5,184(sp)
10101b14:	9080004c 	andi	r2,r18,1
10101b18:	1001ac26 	beq	r2,zero,101021cc <___vfprintf_internal_r+0x127c>
10101b1c:	9d84b03a 	or	r2,r19,r22
10101b20:	10038526 	beq	r2,zero,10102938 <___vfprintf_internal_r+0x19e8>
10101b24:	d8c02a17 	ldw	r3,168(sp)
10101b28:	00800c04 	movi	r2,48
10101b2c:	d8802705 	stb	r2,156(sp)
10101b30:	dc402745 	stb	r17,157(sp)
10101b34:	d8002785 	stb	zero,158(sp)
10101b38:	90800094 	ori	r2,r18,2
10101b3c:	18047916 	blt	r3,zero,10102d24 <___vfprintf_internal_r+0x1dd4>
10101b40:	00bfdfc4 	movi	r2,-129
10101b44:	90a4703a 	and	r18,r18,r2
10101b48:	94800094 	ori	r18,r18,2
10101b4c:	0039883a 	mov	fp,zero
10101b50:	d9003917 	ldw	r4,228(sp)
10101b54:	dc001e04 	addi	r16,sp,120
10101b58:	988003cc 	andi	r2,r19,15
10101b5c:	b006973a 	slli	r3,r22,28
10101b60:	2085883a 	add	r2,r4,r2
10101b64:	9826d13a 	srli	r19,r19,4
10101b68:	10800003 	ldbu	r2,0(r2)
10101b6c:	b02cd13a 	srli	r22,r22,4
10101b70:	843fffc4 	addi	r16,r16,-1
10101b74:	1ce6b03a 	or	r19,r3,r19
10101b78:	80800005 	stb	r2,0(r16)
10101b7c:	9d84b03a 	or	r2,r19,r22
10101b80:	103ff51e 	bne	r2,zero,10101b58 <__alt_data_end+0xfffe1b58>
10101b84:	d8c02817 	ldw	r3,160(sp)
10101b88:	1c07c83a 	sub	r3,r3,r16
10101b8c:	d8c02b15 	stw	r3,172(sp)
10101b90:	003ec606 	br	101016ac <__alt_data_end+0xfffe16ac>
10101b94:	8025883a 	mov	r18,r16
10101b98:	dc002903 	ldbu	r16,164(sp)
10101b9c:	e011883a 	mov	r8,fp
10101ba0:	84003fcc 	andi	r16,r16,255
10101ba4:	803e9626 	beq	r16,zero,10101600 <__alt_data_end+0xfffe1600>
10101ba8:	d8c02b03 	ldbu	r3,172(sp)
10101bac:	d8c02785 	stb	r3,158(sp)
10101bb0:	003e9306 	br	10101600 <__alt_data_end+0xfffe1600>
10101bb4:	00c00044 	movi	r3,1
10101bb8:	d8c02905 	stb	r3,164(sp)
10101bbc:	00c00ac4 	movi	r3,43
10101bc0:	d8c02b05 	stb	r3,172(sp)
10101bc4:	ac400007 	ldb	r17,0(r21)
10101bc8:	003d4306 	br	101010d8 <__alt_data_end+0xfffe10d8>
10101bcc:	84000814 	ori	r16,r16,32
10101bd0:	ac400007 	ldb	r17,0(r21)
10101bd4:	003d4006 	br	101010d8 <__alt_data_end+0xfffe10d8>
10101bd8:	d8802e17 	ldw	r2,184(sp)
10101bdc:	8025883a 	mov	r18,r16
10101be0:	d8002785 	stb	zero,158(sp)
10101be4:	14000017 	ldw	r16,0(r2)
10101be8:	e011883a 	mov	r8,fp
10101bec:	14c00104 	addi	r19,r2,4
10101bf0:	80042d26 	beq	r16,zero,10102ca8 <___vfprintf_internal_r+0x1d58>
10101bf4:	d8c02a17 	ldw	r3,168(sp)
10101bf8:	1803e416 	blt	r3,zero,10102b8c <___vfprintf_internal_r+0x1c3c>
10101bfc:	180d883a 	mov	r6,r3
10101c00:	000b883a 	mov	r5,zero
10101c04:	8009883a 	mov	r4,r16
10101c08:	df003d15 	stw	fp,244(sp)
10101c0c:	01068880 	call	10106888 <memchr>
10101c10:	da003d17 	ldw	r8,244(sp)
10101c14:	10046826 	beq	r2,zero,10102db8 <___vfprintf_internal_r+0x1e68>
10101c18:	1405c83a 	sub	r2,r2,r16
10101c1c:	d8802b15 	stw	r2,172(sp)
10101c20:	1003e016 	blt	r2,zero,10102ba4 <___vfprintf_internal_r+0x1c54>
10101c24:	df002783 	ldbu	fp,158(sp)
10101c28:	d8802915 	stw	r2,164(sp)
10101c2c:	dcc02e15 	stw	r19,184(sp)
10101c30:	d8002a15 	stw	zero,168(sp)
10101c34:	d8003215 	stw	zero,200(sp)
10101c38:	003ea206 	br	101016c4 <__alt_data_end+0xfffe16c4>
10101c3c:	8025883a 	mov	r18,r16
10101c40:	dc002903 	ldbu	r16,164(sp)
10101c44:	e011883a 	mov	r8,fp
10101c48:	84003fcc 	andi	r16,r16,255
10101c4c:	803f8d26 	beq	r16,zero,10101a84 <__alt_data_end+0xfffe1a84>
10101c50:	d8c02b03 	ldbu	r3,172(sp)
10101c54:	d8c02785 	stb	r3,158(sp)
10101c58:	003f8a06 	br	10101a84 <__alt_data_end+0xfffe1a84>
10101c5c:	8025883a 	mov	r18,r16
10101c60:	dc002903 	ldbu	r16,164(sp)
10101c64:	e011883a 	mov	r8,fp
10101c68:	84003fcc 	andi	r16,r16,255
10101c6c:	8005661e 	bne	r16,zero,10103208 <___vfprintf_internal_r+0x22b8>
10101c70:	01040474 	movhi	r4,4113
10101c74:	21006104 	addi	r4,r4,388
10101c78:	d9003915 	stw	r4,228(sp)
10101c7c:	9080080c 	andi	r2,r18,32
10101c80:	103f9f1e 	bne	r2,zero,10101b00 <__alt_data_end+0xfffe1b00>
10101c84:	9080040c 	andi	r2,r18,16
10101c88:	1002eb26 	beq	r2,zero,10102838 <___vfprintf_internal_r+0x18e8>
10101c8c:	d8802e17 	ldw	r2,184(sp)
10101c90:	002d883a 	mov	r22,zero
10101c94:	14c00017 	ldw	r19,0(r2)
10101c98:	10800104 	addi	r2,r2,4
10101c9c:	d8802e15 	stw	r2,184(sp)
10101ca0:	003f9c06 	br	10101b14 <__alt_data_end+0xfffe1b14>
10101ca4:	d8802b07 	ldb	r2,172(sp)
10101ca8:	1002e11e 	bne	r2,zero,10102830 <___vfprintf_internal_r+0x18e0>
10101cac:	00c00044 	movi	r3,1
10101cb0:	d8c02905 	stb	r3,164(sp)
10101cb4:	00c00804 	movi	r3,32
10101cb8:	d8c02b05 	stb	r3,172(sp)
10101cbc:	ac400007 	ldb	r17,0(r21)
10101cc0:	003d0506 	br	101010d8 <__alt_data_end+0xfffe10d8>
10101cc4:	84000054 	ori	r16,r16,1
10101cc8:	ac400007 	ldb	r17,0(r21)
10101ccc:	003d0206 	br	101010d8 <__alt_data_end+0xfffe10d8>
10101cd0:	8025883a 	mov	r18,r16
10101cd4:	dc002903 	ldbu	r16,164(sp)
10101cd8:	e011883a 	mov	r8,fp
10101cdc:	84003fcc 	andi	r16,r16,255
10101ce0:	803de726 	beq	r16,zero,10101480 <__alt_data_end+0xfffe1480>
10101ce4:	d8c02b03 	ldbu	r3,172(sp)
10101ce8:	d8c02785 	stb	r3,158(sp)
10101cec:	003de406 	br	10101480 <__alt_data_end+0xfffe1480>
10101cf0:	84001014 	ori	r16,r16,64
10101cf4:	ac400007 	ldb	r17,0(r21)
10101cf8:	003cf706 	br	101010d8 <__alt_data_end+0xfffe10d8>
10101cfc:	ac400007 	ldb	r17,0(r21)
10101d00:	00801b04 	movi	r2,108
10101d04:	88838f26 	beq	r17,r2,10102b44 <___vfprintf_internal_r+0x1bf4>
10101d08:	84000414 	ori	r16,r16,16
10101d0c:	003cf206 	br	101010d8 <__alt_data_end+0xfffe10d8>
10101d10:	8025883a 	mov	r18,r16
10101d14:	dc002903 	ldbu	r16,164(sp)
10101d18:	e011883a 	mov	r8,fp
10101d1c:	84003fcc 	andi	r16,r16,255
10101d20:	80053f1e 	bne	r16,zero,10103220 <___vfprintf_internal_r+0x22d0>
10101d24:	9080080c 	andi	r2,r18,32
10101d28:	1002d226 	beq	r2,zero,10102874 <___vfprintf_internal_r+0x1924>
10101d2c:	d9002e17 	ldw	r4,184(sp)
10101d30:	d9402f17 	ldw	r5,188(sp)
10101d34:	20800017 	ldw	r2,0(r4)
10101d38:	2807d7fa 	srai	r3,r5,31
10101d3c:	21000104 	addi	r4,r4,4
10101d40:	d9002e15 	stw	r4,184(sp)
10101d44:	11400015 	stw	r5,0(r2)
10101d48:	10c00115 	stw	r3,4(r2)
10101d4c:	003cb806 	br	10101030 <__alt_data_end+0xfffe1030>
10101d50:	d8c02e17 	ldw	r3,184(sp)
10101d54:	d9002e17 	ldw	r4,184(sp)
10101d58:	8025883a 	mov	r18,r16
10101d5c:	18800017 	ldw	r2,0(r3)
10101d60:	21000104 	addi	r4,r4,4
10101d64:	00c00044 	movi	r3,1
10101d68:	e011883a 	mov	r8,fp
10101d6c:	d8c02915 	stw	r3,164(sp)
10101d70:	d8002785 	stb	zero,158(sp)
10101d74:	d8801405 	stb	r2,80(sp)
10101d78:	d9002e15 	stw	r4,184(sp)
10101d7c:	d8c02b15 	stw	r3,172(sp)
10101d80:	d8002a15 	stw	zero,168(sp)
10101d84:	d8003215 	stw	zero,200(sp)
10101d88:	dc001404 	addi	r16,sp,80
10101d8c:	0039883a 	mov	fp,zero
10101d90:	003e5306 	br	101016e0 <__alt_data_end+0xfffe16e0>
10101d94:	01040474 	movhi	r4,4113
10101d98:	21006104 	addi	r4,r4,388
10101d9c:	0039883a 	mov	fp,zero
10101da0:	d9003915 	stw	r4,228(sp)
10101da4:	04401e04 	movi	r17,120
10101da8:	003f6906 	br	10101b50 <__alt_data_end+0xfffe1b50>
10101dac:	8025883a 	mov	r18,r16
10101db0:	dc002903 	ldbu	r16,164(sp)
10101db4:	e011883a 	mov	r8,fp
10101db8:	84003fcc 	andi	r16,r16,255
10101dbc:	8005081e 	bne	r16,zero,101031e0 <___vfprintf_internal_r+0x2290>
10101dc0:	883d6126 	beq	r17,zero,10101348 <__alt_data_end+0xfffe1348>
10101dc4:	00c00044 	movi	r3,1
10101dc8:	d8c02915 	stw	r3,164(sp)
10101dcc:	dc401405 	stb	r17,80(sp)
10101dd0:	d8002785 	stb	zero,158(sp)
10101dd4:	003fe906 	br	10101d7c <__alt_data_end+0xfffe1d7c>
10101dd8:	01440474 	movhi	r5,4113
10101ddc:	29406104 	addi	r5,r5,388
10101de0:	d9403915 	stw	r5,228(sp)
10101de4:	d8c02e15 	stw	r3,184(sp)
10101de8:	1025883a 	mov	r18,r2
10101dec:	04401e04 	movi	r17,120
10101df0:	9d84b03a 	or	r2,r19,r22
10101df4:	1000fc1e 	bne	r2,zero,101021e8 <___vfprintf_internal_r+0x1298>
10101df8:	0039883a 	mov	fp,zero
10101dfc:	00800084 	movi	r2,2
10101e00:	10803fcc 	andi	r2,r2,255
10101e04:	00c00044 	movi	r3,1
10101e08:	10c20f26 	beq	r2,r3,10102648 <___vfprintf_internal_r+0x16f8>
10101e0c:	00c00084 	movi	r3,2
10101e10:	10fd3326 	beq	r2,r3,101012e0 <__alt_data_end+0xfffe12e0>
10101e14:	003e0b06 	br	10101644 <__alt_data_end+0xfffe1644>
10101e18:	d8c02017 	ldw	r3,128(sp)
10101e1c:	003e7106 	br	101017e4 <__alt_data_end+0xfffe17e4>
10101e20:	00801944 	movi	r2,101
10101e24:	14407e0e 	bge	r2,r17,10102020 <___vfprintf_internal_r+0x10d0>
10101e28:	d9003617 	ldw	r4,216(sp)
10101e2c:	d9403817 	ldw	r5,224(sp)
10101e30:	000d883a 	mov	r6,zero
10101e34:	000f883a 	mov	r7,zero
10101e38:	d8c03c15 	stw	r3,240(sp)
10101e3c:	da003d15 	stw	r8,244(sp)
10101e40:	010c36c0 	call	1010c36c <__eqdf2>
10101e44:	d8c03c17 	ldw	r3,240(sp)
10101e48:	da003d17 	ldw	r8,244(sp)
10101e4c:	1000f71e 	bne	r2,zero,1010222c <___vfprintf_internal_r+0x12dc>
10101e50:	d8801f17 	ldw	r2,124(sp)
10101e54:	01040474 	movhi	r4,4113
10101e58:	21006804 	addi	r4,r4,416
10101e5c:	18c00044 	addi	r3,r3,1
10101e60:	10800044 	addi	r2,r2,1
10101e64:	41000015 	stw	r4,0(r8)
10101e68:	01000044 	movi	r4,1
10101e6c:	41000115 	stw	r4,4(r8)
10101e70:	d8c02015 	stw	r3,128(sp)
10101e74:	d8801f15 	stw	r2,124(sp)
10101e78:	010001c4 	movi	r4,7
10101e7c:	2082b816 	blt	r4,r2,10102960 <___vfprintf_internal_r+0x1a10>
10101e80:	42000204 	addi	r8,r8,8
10101e84:	d8802617 	ldw	r2,152(sp)
10101e88:	d9403317 	ldw	r5,204(sp)
10101e8c:	11400216 	blt	r2,r5,10101e98 <___vfprintf_internal_r+0xf48>
10101e90:	9080004c 	andi	r2,r18,1
10101e94:	103eb326 	beq	r2,zero,10101964 <__alt_data_end+0xfffe1964>
10101e98:	d8803717 	ldw	r2,220(sp)
10101e9c:	d9003417 	ldw	r4,208(sp)
10101ea0:	d9403717 	ldw	r5,220(sp)
10101ea4:	1887883a 	add	r3,r3,r2
10101ea8:	d8801f17 	ldw	r2,124(sp)
10101eac:	41000015 	stw	r4,0(r8)
10101eb0:	41400115 	stw	r5,4(r8)
10101eb4:	10800044 	addi	r2,r2,1
10101eb8:	d8c02015 	stw	r3,128(sp)
10101ebc:	d8801f15 	stw	r2,124(sp)
10101ec0:	010001c4 	movi	r4,7
10101ec4:	20832916 	blt	r4,r2,10102b6c <___vfprintf_internal_r+0x1c1c>
10101ec8:	42000204 	addi	r8,r8,8
10101ecc:	d8803317 	ldw	r2,204(sp)
10101ed0:	143fffc4 	addi	r16,r2,-1
10101ed4:	043ea30e 	bge	zero,r16,10101964 <__alt_data_end+0xfffe1964>
10101ed8:	04400404 	movi	r17,16
10101edc:	d8801f17 	ldw	r2,124(sp)
10101ee0:	8c00880e 	bge	r17,r16,10102104 <___vfprintf_internal_r+0x11b4>
10101ee4:	01440474 	movhi	r5,4113
10101ee8:	29406884 	addi	r5,r5,418
10101eec:	d9402c15 	stw	r5,176(sp)
10101ef0:	058001c4 	movi	r22,7
10101ef4:	dcc02d17 	ldw	r19,180(sp)
10101ef8:	00000306 	br	10101f08 <___vfprintf_internal_r+0xfb8>
10101efc:	42000204 	addi	r8,r8,8
10101f00:	843ffc04 	addi	r16,r16,-16
10101f04:	8c00820e 	bge	r17,r16,10102110 <___vfprintf_internal_r+0x11c0>
10101f08:	18c00404 	addi	r3,r3,16
10101f0c:	10800044 	addi	r2,r2,1
10101f10:	45000015 	stw	r20,0(r8)
10101f14:	44400115 	stw	r17,4(r8)
10101f18:	d8c02015 	stw	r3,128(sp)
10101f1c:	d8801f15 	stw	r2,124(sp)
10101f20:	b0bff60e 	bge	r22,r2,10101efc <__alt_data_end+0xfffe1efc>
10101f24:	d9801e04 	addi	r6,sp,120
10101f28:	b80b883a 	mov	r5,r23
10101f2c:	9809883a 	mov	r4,r19
10101f30:	01085e80 	call	101085e8 <__sprint_r>
10101f34:	103d0a1e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10101f38:	d8c02017 	ldw	r3,128(sp)
10101f3c:	d8801f17 	ldw	r2,124(sp)
10101f40:	da000404 	addi	r8,sp,16
10101f44:	003fee06 	br	10101f00 <__alt_data_end+0xfffe1f00>
10101f48:	d9403117 	ldw	r5,196(sp)
10101f4c:	d8802917 	ldw	r2,164(sp)
10101f50:	28adc83a 	sub	r22,r5,r2
10101f54:	05be410e 	bge	zero,r22,1010185c <__alt_data_end+0xfffe185c>
10101f58:	07000404 	movi	fp,16
10101f5c:	d8801f17 	ldw	r2,124(sp)
10101f60:	e5838f0e 	bge	fp,r22,10102da0 <___vfprintf_internal_r+0x1e50>
10101f64:	01440474 	movhi	r5,4113
10101f68:	29406884 	addi	r5,r5,418
10101f6c:	dc403015 	stw	r17,192(sp)
10101f70:	d9402c15 	stw	r5,176(sp)
10101f74:	b023883a 	mov	r17,r22
10101f78:	04c001c4 	movi	r19,7
10101f7c:	a82d883a 	mov	r22,r21
10101f80:	902b883a 	mov	r21,r18
10101f84:	8025883a 	mov	r18,r16
10101f88:	dc002d17 	ldw	r16,180(sp)
10101f8c:	00000306 	br	10101f9c <___vfprintf_internal_r+0x104c>
10101f90:	8c7ffc04 	addi	r17,r17,-16
10101f94:	42000204 	addi	r8,r8,8
10101f98:	e440110e 	bge	fp,r17,10101fe0 <___vfprintf_internal_r+0x1090>
10101f9c:	18c00404 	addi	r3,r3,16
10101fa0:	10800044 	addi	r2,r2,1
10101fa4:	45000015 	stw	r20,0(r8)
10101fa8:	47000115 	stw	fp,4(r8)
10101fac:	d8c02015 	stw	r3,128(sp)
10101fb0:	d8801f15 	stw	r2,124(sp)
10101fb4:	98bff60e 	bge	r19,r2,10101f90 <__alt_data_end+0xfffe1f90>
10101fb8:	d9801e04 	addi	r6,sp,120
10101fbc:	b80b883a 	mov	r5,r23
10101fc0:	8009883a 	mov	r4,r16
10101fc4:	01085e80 	call	101085e8 <__sprint_r>
10101fc8:	103ce51e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10101fcc:	8c7ffc04 	addi	r17,r17,-16
10101fd0:	d8c02017 	ldw	r3,128(sp)
10101fd4:	d8801f17 	ldw	r2,124(sp)
10101fd8:	da000404 	addi	r8,sp,16
10101fdc:	e47fef16 	blt	fp,r17,10101f9c <__alt_data_end+0xfffe1f9c>
10101fe0:	9021883a 	mov	r16,r18
10101fe4:	a825883a 	mov	r18,r21
10101fe8:	b02b883a 	mov	r21,r22
10101fec:	882d883a 	mov	r22,r17
10101ff0:	dc403017 	ldw	r17,192(sp)
10101ff4:	d9002c17 	ldw	r4,176(sp)
10101ff8:	1d87883a 	add	r3,r3,r22
10101ffc:	10800044 	addi	r2,r2,1
10102000:	41000015 	stw	r4,0(r8)
10102004:	45800115 	stw	r22,4(r8)
10102008:	d8c02015 	stw	r3,128(sp)
1010200c:	d8801f15 	stw	r2,124(sp)
10102010:	010001c4 	movi	r4,7
10102014:	20818e16 	blt	r4,r2,10102650 <___vfprintf_internal_r+0x1700>
10102018:	42000204 	addi	r8,r8,8
1010201c:	003e0f06 	br	1010185c <__alt_data_end+0xfffe185c>
10102020:	d9403317 	ldw	r5,204(sp)
10102024:	00800044 	movi	r2,1
10102028:	18c00044 	addi	r3,r3,1
1010202c:	1141530e 	bge	r2,r5,1010257c <___vfprintf_internal_r+0x162c>
10102030:	dc401f17 	ldw	r17,124(sp)
10102034:	00800044 	movi	r2,1
10102038:	40800115 	stw	r2,4(r8)
1010203c:	8c400044 	addi	r17,r17,1
10102040:	44000015 	stw	r16,0(r8)
10102044:	d8c02015 	stw	r3,128(sp)
10102048:	dc401f15 	stw	r17,124(sp)
1010204c:	008001c4 	movi	r2,7
10102050:	14416b16 	blt	r2,r17,10102600 <___vfprintf_internal_r+0x16b0>
10102054:	42000204 	addi	r8,r8,8
10102058:	d8803717 	ldw	r2,220(sp)
1010205c:	d9003417 	ldw	r4,208(sp)
10102060:	8c400044 	addi	r17,r17,1
10102064:	10c7883a 	add	r3,r2,r3
10102068:	40800115 	stw	r2,4(r8)
1010206c:	41000015 	stw	r4,0(r8)
10102070:	d8c02015 	stw	r3,128(sp)
10102074:	dc401f15 	stw	r17,124(sp)
10102078:	008001c4 	movi	r2,7
1010207c:	14416916 	blt	r2,r17,10102624 <___vfprintf_internal_r+0x16d4>
10102080:	45800204 	addi	r22,r8,8
10102084:	d9003617 	ldw	r4,216(sp)
10102088:	d9403817 	ldw	r5,224(sp)
1010208c:	000d883a 	mov	r6,zero
10102090:	000f883a 	mov	r7,zero
10102094:	d8c03c15 	stw	r3,240(sp)
10102098:	010c36c0 	call	1010c36c <__eqdf2>
1010209c:	d8c03c17 	ldw	r3,240(sp)
101020a0:	1000bc26 	beq	r2,zero,10102394 <___vfprintf_internal_r+0x1444>
101020a4:	d9403317 	ldw	r5,204(sp)
101020a8:	84000044 	addi	r16,r16,1
101020ac:	8c400044 	addi	r17,r17,1
101020b0:	28bfffc4 	addi	r2,r5,-1
101020b4:	1887883a 	add	r3,r3,r2
101020b8:	b0800115 	stw	r2,4(r22)
101020bc:	b4000015 	stw	r16,0(r22)
101020c0:	d8c02015 	stw	r3,128(sp)
101020c4:	dc401f15 	stw	r17,124(sp)
101020c8:	008001c4 	movi	r2,7
101020cc:	14414316 	blt	r2,r17,101025dc <___vfprintf_internal_r+0x168c>
101020d0:	b5800204 	addi	r22,r22,8
101020d4:	d9003a17 	ldw	r4,232(sp)
101020d8:	df0022c4 	addi	fp,sp,139
101020dc:	8c400044 	addi	r17,r17,1
101020e0:	20c7883a 	add	r3,r4,r3
101020e4:	b7000015 	stw	fp,0(r22)
101020e8:	b1000115 	stw	r4,4(r22)
101020ec:	d8c02015 	stw	r3,128(sp)
101020f0:	dc401f15 	stw	r17,124(sp)
101020f4:	008001c4 	movi	r2,7
101020f8:	14400e16 	blt	r2,r17,10102134 <___vfprintf_internal_r+0x11e4>
101020fc:	b2000204 	addi	r8,r22,8
10102100:	003e1806 	br	10101964 <__alt_data_end+0xfffe1964>
10102104:	01040474 	movhi	r4,4113
10102108:	21006884 	addi	r4,r4,418
1010210c:	d9002c15 	stw	r4,176(sp)
10102110:	d9002c17 	ldw	r4,176(sp)
10102114:	1c07883a 	add	r3,r3,r16
10102118:	44000115 	stw	r16,4(r8)
1010211c:	41000015 	stw	r4,0(r8)
10102120:	10800044 	addi	r2,r2,1
10102124:	d8c02015 	stw	r3,128(sp)
10102128:	d8801f15 	stw	r2,124(sp)
1010212c:	010001c4 	movi	r4,7
10102130:	20be0b0e 	bge	r4,r2,10101960 <__alt_data_end+0xfffe1960>
10102134:	d9002d17 	ldw	r4,180(sp)
10102138:	d9801e04 	addi	r6,sp,120
1010213c:	b80b883a 	mov	r5,r23
10102140:	01085e80 	call	101085e8 <__sprint_r>
10102144:	103c861e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102148:	d8c02017 	ldw	r3,128(sp)
1010214c:	da000404 	addi	r8,sp,16
10102150:	003e0406 	br	10101964 <__alt_data_end+0xfffe1964>
10102154:	d9002d17 	ldw	r4,180(sp)
10102158:	d9801e04 	addi	r6,sp,120
1010215c:	b80b883a 	mov	r5,r23
10102160:	01085e80 	call	101085e8 <__sprint_r>
10102164:	103e3b26 	beq	r2,zero,10101a54 <__alt_data_end+0xfffe1a54>
10102168:	003c7d06 	br	10101360 <__alt_data_end+0xfffe1360>
1010216c:	d9002d17 	ldw	r4,180(sp)
10102170:	d9801e04 	addi	r6,sp,120
10102174:	b80b883a 	mov	r5,r23
10102178:	01085e80 	call	101085e8 <__sprint_r>
1010217c:	103c781e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102180:	d8c02017 	ldw	r3,128(sp)
10102184:	da000404 	addi	r8,sp,16
10102188:	003de906 	br	10101930 <__alt_data_end+0xfffe1930>
1010218c:	d9002d17 	ldw	r4,180(sp)
10102190:	d9801e04 	addi	r6,sp,120
10102194:	b80b883a 	mov	r5,r23
10102198:	01085e80 	call	101085e8 <__sprint_r>
1010219c:	103c701e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
101021a0:	d8c02017 	ldw	r3,128(sp)
101021a4:	da000404 	addi	r8,sp,16
101021a8:	003d9b06 	br	10101818 <__alt_data_end+0xfffe1818>
101021ac:	d9002d17 	ldw	r4,180(sp)
101021b0:	d9801e04 	addi	r6,sp,120
101021b4:	b80b883a 	mov	r5,r23
101021b8:	01085e80 	call	101085e8 <__sprint_r>
101021bc:	103c681e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
101021c0:	d8c02017 	ldw	r3,128(sp)
101021c4:	da000404 	addi	r8,sp,16
101021c8:	003da106 	br	10101850 <__alt_data_end+0xfffe1850>
101021cc:	d9402a17 	ldw	r5,168(sp)
101021d0:	d8002785 	stb	zero,158(sp)
101021d4:	283f0616 	blt	r5,zero,10101df0 <__alt_data_end+0xfffe1df0>
101021d8:	00ffdfc4 	movi	r3,-129
101021dc:	9d84b03a 	or	r2,r19,r22
101021e0:	90e4703a 	and	r18,r18,r3
101021e4:	103c3b26 	beq	r2,zero,101012d4 <__alt_data_end+0xfffe12d4>
101021e8:	0039883a 	mov	fp,zero
101021ec:	003e5806 	br	10101b50 <__alt_data_end+0xfffe1b50>
101021f0:	9080040c 	andi	r2,r18,16
101021f4:	1001b326 	beq	r2,zero,101028c4 <___vfprintf_internal_r+0x1974>
101021f8:	d8c02e17 	ldw	r3,184(sp)
101021fc:	d9002a17 	ldw	r4,168(sp)
10102200:	d8002785 	stb	zero,158(sp)
10102204:	18800104 	addi	r2,r3,4
10102208:	1cc00017 	ldw	r19,0(r3)
1010220c:	002d883a 	mov	r22,zero
10102210:	2001b516 	blt	r4,zero,101028e8 <___vfprintf_internal_r+0x1998>
10102214:	00ffdfc4 	movi	r3,-129
10102218:	d8802e15 	stw	r2,184(sp)
1010221c:	90e4703a 	and	r18,r18,r3
10102220:	983d0526 	beq	r19,zero,10101638 <__alt_data_end+0xfffe1638>
10102224:	0039883a 	mov	fp,zero
10102228:	003d0806 	br	1010164c <__alt_data_end+0xfffe164c>
1010222c:	dc402617 	ldw	r17,152(sp)
10102230:	0441d30e 	bge	zero,r17,10102980 <___vfprintf_internal_r+0x1a30>
10102234:	dc403217 	ldw	r17,200(sp)
10102238:	d8803317 	ldw	r2,204(sp)
1010223c:	1440010e 	bge	r2,r17,10102244 <___vfprintf_internal_r+0x12f4>
10102240:	1023883a 	mov	r17,r2
10102244:	04400a0e 	bge	zero,r17,10102270 <___vfprintf_internal_r+0x1320>
10102248:	d8801f17 	ldw	r2,124(sp)
1010224c:	1c47883a 	add	r3,r3,r17
10102250:	44000015 	stw	r16,0(r8)
10102254:	10800044 	addi	r2,r2,1
10102258:	44400115 	stw	r17,4(r8)
1010225c:	d8c02015 	stw	r3,128(sp)
10102260:	d8801f15 	stw	r2,124(sp)
10102264:	010001c4 	movi	r4,7
10102268:	20826516 	blt	r4,r2,10102c00 <___vfprintf_internal_r+0x1cb0>
1010226c:	42000204 	addi	r8,r8,8
10102270:	88026116 	blt	r17,zero,10102bf8 <___vfprintf_internal_r+0x1ca8>
10102274:	d9003217 	ldw	r4,200(sp)
10102278:	2463c83a 	sub	r17,r4,r17
1010227c:	04407b0e 	bge	zero,r17,1010246c <___vfprintf_internal_r+0x151c>
10102280:	05800404 	movi	r22,16
10102284:	d8801f17 	ldw	r2,124(sp)
10102288:	b4419d0e 	bge	r22,r17,10102900 <___vfprintf_internal_r+0x19b0>
1010228c:	01040474 	movhi	r4,4113
10102290:	21006884 	addi	r4,r4,418
10102294:	d9002c15 	stw	r4,176(sp)
10102298:	070001c4 	movi	fp,7
1010229c:	dcc02d17 	ldw	r19,180(sp)
101022a0:	00000306 	br	101022b0 <___vfprintf_internal_r+0x1360>
101022a4:	42000204 	addi	r8,r8,8
101022a8:	8c7ffc04 	addi	r17,r17,-16
101022ac:	b441970e 	bge	r22,r17,1010290c <___vfprintf_internal_r+0x19bc>
101022b0:	18c00404 	addi	r3,r3,16
101022b4:	10800044 	addi	r2,r2,1
101022b8:	45000015 	stw	r20,0(r8)
101022bc:	45800115 	stw	r22,4(r8)
101022c0:	d8c02015 	stw	r3,128(sp)
101022c4:	d8801f15 	stw	r2,124(sp)
101022c8:	e0bff60e 	bge	fp,r2,101022a4 <__alt_data_end+0xfffe22a4>
101022cc:	d9801e04 	addi	r6,sp,120
101022d0:	b80b883a 	mov	r5,r23
101022d4:	9809883a 	mov	r4,r19
101022d8:	01085e80 	call	101085e8 <__sprint_r>
101022dc:	103c201e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
101022e0:	d8c02017 	ldw	r3,128(sp)
101022e4:	d8801f17 	ldw	r2,124(sp)
101022e8:	da000404 	addi	r8,sp,16
101022ec:	003fee06 	br	101022a8 <__alt_data_end+0xfffe22a8>
101022f0:	d9002d17 	ldw	r4,180(sp)
101022f4:	d9801e04 	addi	r6,sp,120
101022f8:	b80b883a 	mov	r5,r23
101022fc:	01085e80 	call	101085e8 <__sprint_r>
10102300:	103c171e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102304:	d8c02017 	ldw	r3,128(sp)
10102308:	df002787 	ldb	fp,158(sp)
1010230c:	da000404 	addi	r8,sp,16
10102310:	003d3406 	br	101017e4 <__alt_data_end+0xfffe17e4>
10102314:	9080040c 	andi	r2,r18,16
10102318:	10016126 	beq	r2,zero,101028a0 <___vfprintf_internal_r+0x1950>
1010231c:	d9402e17 	ldw	r5,184(sp)
10102320:	2cc00017 	ldw	r19,0(r5)
10102324:	29400104 	addi	r5,r5,4
10102328:	d9402e15 	stw	r5,184(sp)
1010232c:	982dd7fa 	srai	r22,r19,31
10102330:	b005883a 	mov	r2,r22
10102334:	003c5a06 	br	101014a0 <__alt_data_end+0xfffe14a0>
10102338:	9080040c 	andi	r2,r18,16
1010233c:	10003526 	beq	r2,zero,10102414 <___vfprintf_internal_r+0x14c4>
10102340:	d8c02e17 	ldw	r3,184(sp)
10102344:	d9002a17 	ldw	r4,168(sp)
10102348:	d8002785 	stb	zero,158(sp)
1010234c:	18800104 	addi	r2,r3,4
10102350:	1cc00017 	ldw	r19,0(r3)
10102354:	002d883a 	mov	r22,zero
10102358:	20003716 	blt	r4,zero,10102438 <___vfprintf_internal_r+0x14e8>
1010235c:	00ffdfc4 	movi	r3,-129
10102360:	d8802e15 	stw	r2,184(sp)
10102364:	90e4703a 	and	r18,r18,r3
10102368:	0039883a 	mov	fp,zero
1010236c:	983dd426 	beq	r19,zero,10101ac0 <__alt_data_end+0xfffe1ac0>
10102370:	00800244 	movi	r2,9
10102374:	14fc5336 	bltu	r2,r19,101014c4 <__alt_data_end+0xfffe14c4>
10102378:	d8c02817 	ldw	r3,160(sp)
1010237c:	dc001dc4 	addi	r16,sp,119
10102380:	9cc00c04 	addi	r19,r19,48
10102384:	1c07c83a 	sub	r3,r3,r16
10102388:	dcc01dc5 	stb	r19,119(sp)
1010238c:	d8c02b15 	stw	r3,172(sp)
10102390:	003cc606 	br	101016ac <__alt_data_end+0xfffe16ac>
10102394:	d8803317 	ldw	r2,204(sp)
10102398:	143fffc4 	addi	r16,r2,-1
1010239c:	043f4d0e 	bge	zero,r16,101020d4 <__alt_data_end+0xfffe20d4>
101023a0:	07000404 	movi	fp,16
101023a4:	e400810e 	bge	fp,r16,101025ac <___vfprintf_internal_r+0x165c>
101023a8:	01440474 	movhi	r5,4113
101023ac:	29406884 	addi	r5,r5,418
101023b0:	d9402c15 	stw	r5,176(sp)
101023b4:	01c001c4 	movi	r7,7
101023b8:	dcc02d17 	ldw	r19,180(sp)
101023bc:	00000306 	br	101023cc <___vfprintf_internal_r+0x147c>
101023c0:	b5800204 	addi	r22,r22,8
101023c4:	843ffc04 	addi	r16,r16,-16
101023c8:	e4007b0e 	bge	fp,r16,101025b8 <___vfprintf_internal_r+0x1668>
101023cc:	18c00404 	addi	r3,r3,16
101023d0:	8c400044 	addi	r17,r17,1
101023d4:	b5000015 	stw	r20,0(r22)
101023d8:	b7000115 	stw	fp,4(r22)
101023dc:	d8c02015 	stw	r3,128(sp)
101023e0:	dc401f15 	stw	r17,124(sp)
101023e4:	3c7ff60e 	bge	r7,r17,101023c0 <__alt_data_end+0xfffe23c0>
101023e8:	d9801e04 	addi	r6,sp,120
101023ec:	b80b883a 	mov	r5,r23
101023f0:	9809883a 	mov	r4,r19
101023f4:	d9c03c15 	stw	r7,240(sp)
101023f8:	01085e80 	call	101085e8 <__sprint_r>
101023fc:	d9c03c17 	ldw	r7,240(sp)
10102400:	103bd71e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102404:	d8c02017 	ldw	r3,128(sp)
10102408:	dc401f17 	ldw	r17,124(sp)
1010240c:	dd800404 	addi	r22,sp,16
10102410:	003fec06 	br	101023c4 <__alt_data_end+0xfffe23c4>
10102414:	9080100c 	andi	r2,r18,64
10102418:	d8002785 	stb	zero,158(sp)
1010241c:	10010e26 	beq	r2,zero,10102858 <___vfprintf_internal_r+0x1908>
10102420:	d9402e17 	ldw	r5,184(sp)
10102424:	d8c02a17 	ldw	r3,168(sp)
10102428:	002d883a 	mov	r22,zero
1010242c:	28800104 	addi	r2,r5,4
10102430:	2cc0000b 	ldhu	r19,0(r5)
10102434:	183fc90e 	bge	r3,zero,1010235c <__alt_data_end+0xfffe235c>
10102438:	d8802e15 	stw	r2,184(sp)
1010243c:	0039883a 	mov	fp,zero
10102440:	9d84b03a 	or	r2,r19,r22
10102444:	103c1e1e 	bne	r2,zero,101014c0 <__alt_data_end+0xfffe14c0>
10102448:	00800044 	movi	r2,1
1010244c:	003e6c06 	br	10101e00 <__alt_data_end+0xfffe1e00>
10102450:	d9002d17 	ldw	r4,180(sp)
10102454:	d9801e04 	addi	r6,sp,120
10102458:	b80b883a 	mov	r5,r23
1010245c:	01085e80 	call	101085e8 <__sprint_r>
10102460:	103bbf1e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102464:	d8c02017 	ldw	r3,128(sp)
10102468:	da000404 	addi	r8,sp,16
1010246c:	d9003217 	ldw	r4,200(sp)
10102470:	d8802617 	ldw	r2,152(sp)
10102474:	d9403317 	ldw	r5,204(sp)
10102478:	8123883a 	add	r17,r16,r4
1010247c:	11400216 	blt	r2,r5,10102488 <___vfprintf_internal_r+0x1538>
10102480:	9100004c 	andi	r4,r18,1
10102484:	20000d26 	beq	r4,zero,101024bc <___vfprintf_internal_r+0x156c>
10102488:	d9003717 	ldw	r4,220(sp)
1010248c:	d9403417 	ldw	r5,208(sp)
10102490:	1907883a 	add	r3,r3,r4
10102494:	d9001f17 	ldw	r4,124(sp)
10102498:	41400015 	stw	r5,0(r8)
1010249c:	d9403717 	ldw	r5,220(sp)
101024a0:	21000044 	addi	r4,r4,1
101024a4:	d8c02015 	stw	r3,128(sp)
101024a8:	41400115 	stw	r5,4(r8)
101024ac:	d9001f15 	stw	r4,124(sp)
101024b0:	014001c4 	movi	r5,7
101024b4:	2901e816 	blt	r5,r4,10102c58 <___vfprintf_internal_r+0x1d08>
101024b8:	42000204 	addi	r8,r8,8
101024bc:	d9003317 	ldw	r4,204(sp)
101024c0:	8121883a 	add	r16,r16,r4
101024c4:	2085c83a 	sub	r2,r4,r2
101024c8:	8461c83a 	sub	r16,r16,r17
101024cc:	1400010e 	bge	r2,r16,101024d4 <___vfprintf_internal_r+0x1584>
101024d0:	1021883a 	mov	r16,r2
101024d4:	04000a0e 	bge	zero,r16,10102500 <___vfprintf_internal_r+0x15b0>
101024d8:	d9001f17 	ldw	r4,124(sp)
101024dc:	1c07883a 	add	r3,r3,r16
101024e0:	44400015 	stw	r17,0(r8)
101024e4:	21000044 	addi	r4,r4,1
101024e8:	44000115 	stw	r16,4(r8)
101024ec:	d8c02015 	stw	r3,128(sp)
101024f0:	d9001f15 	stw	r4,124(sp)
101024f4:	014001c4 	movi	r5,7
101024f8:	2901fb16 	blt	r5,r4,10102ce8 <___vfprintf_internal_r+0x1d98>
101024fc:	42000204 	addi	r8,r8,8
10102500:	8001f716 	blt	r16,zero,10102ce0 <___vfprintf_internal_r+0x1d90>
10102504:	1421c83a 	sub	r16,r2,r16
10102508:	043d160e 	bge	zero,r16,10101964 <__alt_data_end+0xfffe1964>
1010250c:	04400404 	movi	r17,16
10102510:	d8801f17 	ldw	r2,124(sp)
10102514:	8c3efb0e 	bge	r17,r16,10102104 <__alt_data_end+0xfffe2104>
10102518:	01440474 	movhi	r5,4113
1010251c:	29406884 	addi	r5,r5,418
10102520:	d9402c15 	stw	r5,176(sp)
10102524:	058001c4 	movi	r22,7
10102528:	dcc02d17 	ldw	r19,180(sp)
1010252c:	00000306 	br	1010253c <___vfprintf_internal_r+0x15ec>
10102530:	42000204 	addi	r8,r8,8
10102534:	843ffc04 	addi	r16,r16,-16
10102538:	8c3ef50e 	bge	r17,r16,10102110 <__alt_data_end+0xfffe2110>
1010253c:	18c00404 	addi	r3,r3,16
10102540:	10800044 	addi	r2,r2,1
10102544:	45000015 	stw	r20,0(r8)
10102548:	44400115 	stw	r17,4(r8)
1010254c:	d8c02015 	stw	r3,128(sp)
10102550:	d8801f15 	stw	r2,124(sp)
10102554:	b0bff60e 	bge	r22,r2,10102530 <__alt_data_end+0xfffe2530>
10102558:	d9801e04 	addi	r6,sp,120
1010255c:	b80b883a 	mov	r5,r23
10102560:	9809883a 	mov	r4,r19
10102564:	01085e80 	call	101085e8 <__sprint_r>
10102568:	103b7d1e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
1010256c:	d8c02017 	ldw	r3,128(sp)
10102570:	d8801f17 	ldw	r2,124(sp)
10102574:	da000404 	addi	r8,sp,16
10102578:	003fee06 	br	10102534 <__alt_data_end+0xfffe2534>
1010257c:	9088703a 	and	r4,r18,r2
10102580:	203eab1e 	bne	r4,zero,10102030 <__alt_data_end+0xfffe2030>
10102584:	dc401f17 	ldw	r17,124(sp)
10102588:	40800115 	stw	r2,4(r8)
1010258c:	44000015 	stw	r16,0(r8)
10102590:	8c400044 	addi	r17,r17,1
10102594:	d8c02015 	stw	r3,128(sp)
10102598:	dc401f15 	stw	r17,124(sp)
1010259c:	008001c4 	movi	r2,7
101025a0:	14400e16 	blt	r2,r17,101025dc <___vfprintf_internal_r+0x168c>
101025a4:	45800204 	addi	r22,r8,8
101025a8:	003eca06 	br	101020d4 <__alt_data_end+0xfffe20d4>
101025ac:	01040474 	movhi	r4,4113
101025b0:	21006884 	addi	r4,r4,418
101025b4:	d9002c15 	stw	r4,176(sp)
101025b8:	d8802c17 	ldw	r2,176(sp)
101025bc:	1c07883a 	add	r3,r3,r16
101025c0:	8c400044 	addi	r17,r17,1
101025c4:	b0800015 	stw	r2,0(r22)
101025c8:	b4000115 	stw	r16,4(r22)
101025cc:	d8c02015 	stw	r3,128(sp)
101025d0:	dc401f15 	stw	r17,124(sp)
101025d4:	008001c4 	movi	r2,7
101025d8:	147ebd0e 	bge	r2,r17,101020d0 <__alt_data_end+0xfffe20d0>
101025dc:	d9002d17 	ldw	r4,180(sp)
101025e0:	d9801e04 	addi	r6,sp,120
101025e4:	b80b883a 	mov	r5,r23
101025e8:	01085e80 	call	101085e8 <__sprint_r>
101025ec:	103b5c1e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
101025f0:	d8c02017 	ldw	r3,128(sp)
101025f4:	dc401f17 	ldw	r17,124(sp)
101025f8:	dd800404 	addi	r22,sp,16
101025fc:	003eb506 	br	101020d4 <__alt_data_end+0xfffe20d4>
10102600:	d9002d17 	ldw	r4,180(sp)
10102604:	d9801e04 	addi	r6,sp,120
10102608:	b80b883a 	mov	r5,r23
1010260c:	01085e80 	call	101085e8 <__sprint_r>
10102610:	103b531e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102614:	d8c02017 	ldw	r3,128(sp)
10102618:	dc401f17 	ldw	r17,124(sp)
1010261c:	da000404 	addi	r8,sp,16
10102620:	003e8d06 	br	10102058 <__alt_data_end+0xfffe2058>
10102624:	d9002d17 	ldw	r4,180(sp)
10102628:	d9801e04 	addi	r6,sp,120
1010262c:	b80b883a 	mov	r5,r23
10102630:	01085e80 	call	101085e8 <__sprint_r>
10102634:	103b4a1e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102638:	d8c02017 	ldw	r3,128(sp)
1010263c:	dc401f17 	ldw	r17,124(sp)
10102640:	dd800404 	addi	r22,sp,16
10102644:	003e8f06 	br	10102084 <__alt_data_end+0xfffe2084>
10102648:	0027883a 	mov	r19,zero
1010264c:	003f4a06 	br	10102378 <__alt_data_end+0xfffe2378>
10102650:	d9002d17 	ldw	r4,180(sp)
10102654:	d9801e04 	addi	r6,sp,120
10102658:	b80b883a 	mov	r5,r23
1010265c:	01085e80 	call	101085e8 <__sprint_r>
10102660:	103b3f1e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102664:	d8c02017 	ldw	r3,128(sp)
10102668:	da000404 	addi	r8,sp,16
1010266c:	003c7b06 	br	1010185c <__alt_data_end+0xfffe185c>
10102670:	d9402a17 	ldw	r5,168(sp)
10102674:	04e7c83a 	sub	r19,zero,r19
10102678:	07000b44 	movi	fp,45
1010267c:	9804c03a 	cmpne	r2,r19,zero
10102680:	05adc83a 	sub	r22,zero,r22
10102684:	df002785 	stb	fp,158(sp)
10102688:	b0adc83a 	sub	r22,r22,r2
1010268c:	28017b16 	blt	r5,zero,10102c7c <___vfprintf_internal_r+0x1d2c>
10102690:	00bfdfc4 	movi	r2,-129
10102694:	90a4703a 	and	r18,r18,r2
10102698:	003b8906 	br	101014c0 <__alt_data_end+0xfffe14c0>
1010269c:	d9003617 	ldw	r4,216(sp)
101026a0:	d9403817 	ldw	r5,224(sp)
101026a4:	da003d15 	stw	r8,244(sp)
101026a8:	010820c0 	call	1010820c <__fpclassifyd>
101026ac:	da003d17 	ldw	r8,244(sp)
101026b0:	1000f026 	beq	r2,zero,10102a74 <___vfprintf_internal_r+0x1b24>
101026b4:	d9002a17 	ldw	r4,168(sp)
101026b8:	05bff7c4 	movi	r22,-33
101026bc:	00bfffc4 	movi	r2,-1
101026c0:	8dac703a 	and	r22,r17,r22
101026c4:	20820026 	beq	r4,r2,10102ec8 <___vfprintf_internal_r+0x1f78>
101026c8:	008011c4 	movi	r2,71
101026cc:	b081f726 	beq	r22,r2,10102eac <___vfprintf_internal_r+0x1f5c>
101026d0:	d9003817 	ldw	r4,224(sp)
101026d4:	90c04014 	ori	r3,r18,256
101026d8:	d8c02c15 	stw	r3,176(sp)
101026dc:	20021516 	blt	r4,zero,10102f34 <___vfprintf_internal_r+0x1fe4>
101026e0:	dcc03817 	ldw	r19,224(sp)
101026e4:	d8002905 	stb	zero,164(sp)
101026e8:	00801984 	movi	r2,102
101026ec:	8881f926 	beq	r17,r2,10102ed4 <___vfprintf_internal_r+0x1f84>
101026f0:	00801184 	movi	r2,70
101026f4:	88821c26 	beq	r17,r2,10102f68 <___vfprintf_internal_r+0x2018>
101026f8:	00801144 	movi	r2,69
101026fc:	b081ef26 	beq	r22,r2,10102ebc <___vfprintf_internal_r+0x1f6c>
10102700:	d8c02a17 	ldw	r3,168(sp)
10102704:	d8802104 	addi	r2,sp,132
10102708:	d8800315 	stw	r2,12(sp)
1010270c:	d9403617 	ldw	r5,216(sp)
10102710:	d8802504 	addi	r2,sp,148
10102714:	d9002d17 	ldw	r4,180(sp)
10102718:	d8800215 	stw	r2,8(sp)
1010271c:	d8802604 	addi	r2,sp,152
10102720:	d8c00015 	stw	r3,0(sp)
10102724:	d8800115 	stw	r2,4(sp)
10102728:	01c00084 	movi	r7,2
1010272c:	980d883a 	mov	r6,r19
10102730:	d8c03c15 	stw	r3,240(sp)
10102734:	da003d15 	stw	r8,244(sp)
10102738:	01036800 	call	10103680 <_dtoa_r>
1010273c:	1021883a 	mov	r16,r2
10102740:	008019c4 	movi	r2,103
10102744:	d8c03c17 	ldw	r3,240(sp)
10102748:	da003d17 	ldw	r8,244(sp)
1010274c:	88817126 	beq	r17,r2,10102d14 <___vfprintf_internal_r+0x1dc4>
10102750:	008011c4 	movi	r2,71
10102754:	88829126 	beq	r17,r2,1010319c <___vfprintf_internal_r+0x224c>
10102758:	80f9883a 	add	fp,r16,r3
1010275c:	d9003617 	ldw	r4,216(sp)
10102760:	000d883a 	mov	r6,zero
10102764:	000f883a 	mov	r7,zero
10102768:	980b883a 	mov	r5,r19
1010276c:	da003d15 	stw	r8,244(sp)
10102770:	010c36c0 	call	1010c36c <__eqdf2>
10102774:	da003d17 	ldw	r8,244(sp)
10102778:	10018d26 	beq	r2,zero,10102db0 <___vfprintf_internal_r+0x1e60>
1010277c:	d8802117 	ldw	r2,132(sp)
10102780:	1700062e 	bgeu	r2,fp,1010279c <___vfprintf_internal_r+0x184c>
10102784:	01000c04 	movi	r4,48
10102788:	10c00044 	addi	r3,r2,1
1010278c:	d8c02115 	stw	r3,132(sp)
10102790:	11000005 	stb	r4,0(r2)
10102794:	d8802117 	ldw	r2,132(sp)
10102798:	173ffb36 	bltu	r2,fp,10102788 <__alt_data_end+0xfffe2788>
1010279c:	1405c83a 	sub	r2,r2,r16
101027a0:	d8803315 	stw	r2,204(sp)
101027a4:	008011c4 	movi	r2,71
101027a8:	b0817626 	beq	r22,r2,10102d84 <___vfprintf_internal_r+0x1e34>
101027ac:	00801944 	movi	r2,101
101027b0:	1442800e 	bge	r2,r17,101031b4 <___vfprintf_internal_r+0x2264>
101027b4:	d8c02617 	ldw	r3,152(sp)
101027b8:	00801984 	movi	r2,102
101027bc:	d8c03215 	stw	r3,200(sp)
101027c0:	8881fe26 	beq	r17,r2,10102fbc <___vfprintf_internal_r+0x206c>
101027c4:	d8c03217 	ldw	r3,200(sp)
101027c8:	d9003317 	ldw	r4,204(sp)
101027cc:	1901dd16 	blt	r3,r4,10102f44 <___vfprintf_internal_r+0x1ff4>
101027d0:	9480004c 	andi	r18,r18,1
101027d4:	90022b1e 	bne	r18,zero,10103084 <___vfprintf_internal_r+0x2134>
101027d8:	1805883a 	mov	r2,r3
101027dc:	18028316 	blt	r3,zero,101031ec <___vfprintf_internal_r+0x229c>
101027e0:	d8c03217 	ldw	r3,200(sp)
101027e4:	044019c4 	movi	r17,103
101027e8:	d8c02b15 	stw	r3,172(sp)
101027ec:	df002907 	ldb	fp,164(sp)
101027f0:	e001531e 	bne	fp,zero,10102d40 <___vfprintf_internal_r+0x1df0>
101027f4:	df002783 	ldbu	fp,158(sp)
101027f8:	d8802915 	stw	r2,164(sp)
101027fc:	dc802c17 	ldw	r18,176(sp)
10102800:	d8002a15 	stw	zero,168(sp)
10102804:	003baf06 	br	101016c4 <__alt_data_end+0xfffe16c4>
10102808:	d8c02e17 	ldw	r3,184(sp)
1010280c:	d9002e17 	ldw	r4,184(sp)
10102810:	d9402e17 	ldw	r5,184(sp)
10102814:	18c00017 	ldw	r3,0(r3)
10102818:	21000117 	ldw	r4,4(r4)
1010281c:	29400204 	addi	r5,r5,8
10102820:	d8c03615 	stw	r3,216(sp)
10102824:	d9003815 	stw	r4,224(sp)
10102828:	d9402e15 	stw	r5,184(sp)
1010282c:	003b5006 	br	10101570 <__alt_data_end+0xfffe1570>
10102830:	ac400007 	ldb	r17,0(r21)
10102834:	003a2806 	br	101010d8 <__alt_data_end+0xfffe10d8>
10102838:	9080100c 	andi	r2,r18,64
1010283c:	1000a826 	beq	r2,zero,10102ae0 <___vfprintf_internal_r+0x1b90>
10102840:	d8c02e17 	ldw	r3,184(sp)
10102844:	002d883a 	mov	r22,zero
10102848:	1cc0000b 	ldhu	r19,0(r3)
1010284c:	18c00104 	addi	r3,r3,4
10102850:	d8c02e15 	stw	r3,184(sp)
10102854:	003caf06 	br	10101b14 <__alt_data_end+0xfffe1b14>
10102858:	d9002e17 	ldw	r4,184(sp)
1010285c:	d9402a17 	ldw	r5,168(sp)
10102860:	002d883a 	mov	r22,zero
10102864:	20800104 	addi	r2,r4,4
10102868:	24c00017 	ldw	r19,0(r4)
1010286c:	283ebb0e 	bge	r5,zero,1010235c <__alt_data_end+0xfffe235c>
10102870:	003ef106 	br	10102438 <__alt_data_end+0xfffe2438>
10102874:	9080040c 	andi	r2,r18,16
10102878:	1000921e 	bne	r2,zero,10102ac4 <___vfprintf_internal_r+0x1b74>
1010287c:	9480100c 	andi	r18,r18,64
10102880:	90013926 	beq	r18,zero,10102d68 <___vfprintf_internal_r+0x1e18>
10102884:	d9402e17 	ldw	r5,184(sp)
10102888:	d8c02f17 	ldw	r3,188(sp)
1010288c:	28800017 	ldw	r2,0(r5)
10102890:	29400104 	addi	r5,r5,4
10102894:	d9402e15 	stw	r5,184(sp)
10102898:	10c0000d 	sth	r3,0(r2)
1010289c:	0039e406 	br	10101030 <__alt_data_end+0xfffe1030>
101028a0:	9080100c 	andi	r2,r18,64
101028a4:	10008026 	beq	r2,zero,10102aa8 <___vfprintf_internal_r+0x1b58>
101028a8:	d8802e17 	ldw	r2,184(sp)
101028ac:	14c0000f 	ldh	r19,0(r2)
101028b0:	10800104 	addi	r2,r2,4
101028b4:	d8802e15 	stw	r2,184(sp)
101028b8:	982dd7fa 	srai	r22,r19,31
101028bc:	b005883a 	mov	r2,r22
101028c0:	003af706 	br	101014a0 <__alt_data_end+0xfffe14a0>
101028c4:	9080100c 	andi	r2,r18,64
101028c8:	d8002785 	stb	zero,158(sp)
101028cc:	10008a1e 	bne	r2,zero,10102af8 <___vfprintf_internal_r+0x1ba8>
101028d0:	d9002e17 	ldw	r4,184(sp)
101028d4:	d9402a17 	ldw	r5,168(sp)
101028d8:	002d883a 	mov	r22,zero
101028dc:	20800104 	addi	r2,r4,4
101028e0:	24c00017 	ldw	r19,0(r4)
101028e4:	283e4b0e 	bge	r5,zero,10102214 <__alt_data_end+0xfffe2214>
101028e8:	9d86b03a 	or	r3,r19,r22
101028ec:	d8802e15 	stw	r2,184(sp)
101028f0:	183e4c1e 	bne	r3,zero,10102224 <__alt_data_end+0xfffe2224>
101028f4:	0039883a 	mov	fp,zero
101028f8:	0005883a 	mov	r2,zero
101028fc:	003d4006 	br	10101e00 <__alt_data_end+0xfffe1e00>
10102900:	01440474 	movhi	r5,4113
10102904:	29406884 	addi	r5,r5,418
10102908:	d9402c15 	stw	r5,176(sp)
1010290c:	d9402c17 	ldw	r5,176(sp)
10102910:	1c47883a 	add	r3,r3,r17
10102914:	10800044 	addi	r2,r2,1
10102918:	41400015 	stw	r5,0(r8)
1010291c:	44400115 	stw	r17,4(r8)
10102920:	d8c02015 	stw	r3,128(sp)
10102924:	d8801f15 	stw	r2,124(sp)
10102928:	010001c4 	movi	r4,7
1010292c:	20bec816 	blt	r4,r2,10102450 <__alt_data_end+0xfffe2450>
10102930:	42000204 	addi	r8,r8,8
10102934:	003ecd06 	br	1010246c <__alt_data_end+0xfffe246c>
10102938:	d9002a17 	ldw	r4,168(sp)
1010293c:	d8002785 	stb	zero,158(sp)
10102940:	203d2d16 	blt	r4,zero,10101df8 <__alt_data_end+0xfffe1df8>
10102944:	00bfdfc4 	movi	r2,-129
10102948:	90a4703a 	and	r18,r18,r2
1010294c:	003a6106 	br	101012d4 <__alt_data_end+0xfffe12d4>
10102950:	01040474 	movhi	r4,4113
10102954:	21006884 	addi	r4,r4,418
10102958:	d9002c15 	stw	r4,176(sp)
1010295c:	003bea06 	br	10101908 <__alt_data_end+0xfffe1908>
10102960:	d9002d17 	ldw	r4,180(sp)
10102964:	d9801e04 	addi	r6,sp,120
10102968:	b80b883a 	mov	r5,r23
1010296c:	01085e80 	call	101085e8 <__sprint_r>
10102970:	103a7b1e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102974:	d8c02017 	ldw	r3,128(sp)
10102978:	da000404 	addi	r8,sp,16
1010297c:	003d4106 	br	10101e84 <__alt_data_end+0xfffe1e84>
10102980:	d8801f17 	ldw	r2,124(sp)
10102984:	01440474 	movhi	r5,4113
10102988:	01000044 	movi	r4,1
1010298c:	18c00044 	addi	r3,r3,1
10102990:	10800044 	addi	r2,r2,1
10102994:	29406804 	addi	r5,r5,416
10102998:	41000115 	stw	r4,4(r8)
1010299c:	41400015 	stw	r5,0(r8)
101029a0:	d8c02015 	stw	r3,128(sp)
101029a4:	d8801f15 	stw	r2,124(sp)
101029a8:	010001c4 	movi	r4,7
101029ac:	20805c16 	blt	r4,r2,10102b20 <___vfprintf_internal_r+0x1bd0>
101029b0:	42000204 	addi	r8,r8,8
101029b4:	8800041e 	bne	r17,zero,101029c8 <___vfprintf_internal_r+0x1a78>
101029b8:	d8803317 	ldw	r2,204(sp)
101029bc:	1000021e 	bne	r2,zero,101029c8 <___vfprintf_internal_r+0x1a78>
101029c0:	9080004c 	andi	r2,r18,1
101029c4:	103be726 	beq	r2,zero,10101964 <__alt_data_end+0xfffe1964>
101029c8:	d9003717 	ldw	r4,220(sp)
101029cc:	d8801f17 	ldw	r2,124(sp)
101029d0:	d9403417 	ldw	r5,208(sp)
101029d4:	20c7883a 	add	r3,r4,r3
101029d8:	10800044 	addi	r2,r2,1
101029dc:	41000115 	stw	r4,4(r8)
101029e0:	41400015 	stw	r5,0(r8)
101029e4:	d8c02015 	stw	r3,128(sp)
101029e8:	d8801f15 	stw	r2,124(sp)
101029ec:	010001c4 	movi	r4,7
101029f0:	20812116 	blt	r4,r2,10102e78 <___vfprintf_internal_r+0x1f28>
101029f4:	42000204 	addi	r8,r8,8
101029f8:	0463c83a 	sub	r17,zero,r17
101029fc:	0440730e 	bge	zero,r17,10102bcc <___vfprintf_internal_r+0x1c7c>
10102a00:	05800404 	movi	r22,16
10102a04:	b440860e 	bge	r22,r17,10102c20 <___vfprintf_internal_r+0x1cd0>
10102a08:	01440474 	movhi	r5,4113
10102a0c:	29406884 	addi	r5,r5,418
10102a10:	d9402c15 	stw	r5,176(sp)
10102a14:	070001c4 	movi	fp,7
10102a18:	dcc02d17 	ldw	r19,180(sp)
10102a1c:	00000306 	br	10102a2c <___vfprintf_internal_r+0x1adc>
10102a20:	42000204 	addi	r8,r8,8
10102a24:	8c7ffc04 	addi	r17,r17,-16
10102a28:	b440800e 	bge	r22,r17,10102c2c <___vfprintf_internal_r+0x1cdc>
10102a2c:	18c00404 	addi	r3,r3,16
10102a30:	10800044 	addi	r2,r2,1
10102a34:	45000015 	stw	r20,0(r8)
10102a38:	45800115 	stw	r22,4(r8)
10102a3c:	d8c02015 	stw	r3,128(sp)
10102a40:	d8801f15 	stw	r2,124(sp)
10102a44:	e0bff60e 	bge	fp,r2,10102a20 <__alt_data_end+0xfffe2a20>
10102a48:	d9801e04 	addi	r6,sp,120
10102a4c:	b80b883a 	mov	r5,r23
10102a50:	9809883a 	mov	r4,r19
10102a54:	01085e80 	call	101085e8 <__sprint_r>
10102a58:	103a411e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102a5c:	d8c02017 	ldw	r3,128(sp)
10102a60:	d8801f17 	ldw	r2,124(sp)
10102a64:	da000404 	addi	r8,sp,16
10102a68:	003fee06 	br	10102a24 <__alt_data_end+0xfffe2a24>
10102a6c:	00bfffc4 	movi	r2,-1
10102a70:	003a3f06 	br	10101370 <__alt_data_end+0xfffe1370>
10102a74:	008011c4 	movi	r2,71
10102a78:	1440b816 	blt	r2,r17,10102d5c <___vfprintf_internal_r+0x1e0c>
10102a7c:	04040474 	movhi	r16,4113
10102a80:	84005a04 	addi	r16,r16,360
10102a84:	00c000c4 	movi	r3,3
10102a88:	00bfdfc4 	movi	r2,-129
10102a8c:	d8c02915 	stw	r3,164(sp)
10102a90:	90a4703a 	and	r18,r18,r2
10102a94:	df002783 	ldbu	fp,158(sp)
10102a98:	d8c02b15 	stw	r3,172(sp)
10102a9c:	d8002a15 	stw	zero,168(sp)
10102aa0:	d8003215 	stw	zero,200(sp)
10102aa4:	003b0706 	br	101016c4 <__alt_data_end+0xfffe16c4>
10102aa8:	d8c02e17 	ldw	r3,184(sp)
10102aac:	1cc00017 	ldw	r19,0(r3)
10102ab0:	18c00104 	addi	r3,r3,4
10102ab4:	d8c02e15 	stw	r3,184(sp)
10102ab8:	982dd7fa 	srai	r22,r19,31
10102abc:	b005883a 	mov	r2,r22
10102ac0:	003a7706 	br	101014a0 <__alt_data_end+0xfffe14a0>
10102ac4:	d8c02e17 	ldw	r3,184(sp)
10102ac8:	d9002f17 	ldw	r4,188(sp)
10102acc:	18800017 	ldw	r2,0(r3)
10102ad0:	18c00104 	addi	r3,r3,4
10102ad4:	d8c02e15 	stw	r3,184(sp)
10102ad8:	11000015 	stw	r4,0(r2)
10102adc:	00395406 	br	10101030 <__alt_data_end+0xfffe1030>
10102ae0:	d9002e17 	ldw	r4,184(sp)
10102ae4:	002d883a 	mov	r22,zero
10102ae8:	24c00017 	ldw	r19,0(r4)
10102aec:	21000104 	addi	r4,r4,4
10102af0:	d9002e15 	stw	r4,184(sp)
10102af4:	003c0706 	br	10101b14 <__alt_data_end+0xfffe1b14>
10102af8:	d9402e17 	ldw	r5,184(sp)
10102afc:	d8c02a17 	ldw	r3,168(sp)
10102b00:	002d883a 	mov	r22,zero
10102b04:	28800104 	addi	r2,r5,4
10102b08:	2cc0000b 	ldhu	r19,0(r5)
10102b0c:	183dc10e 	bge	r3,zero,10102214 <__alt_data_end+0xfffe2214>
10102b10:	003f7506 	br	101028e8 <__alt_data_end+0xfffe28e8>
10102b14:	04040474 	movhi	r16,4113
10102b18:	84005804 	addi	r16,r16,352
10102b1c:	003aa706 	br	101015bc <__alt_data_end+0xfffe15bc>
10102b20:	d9002d17 	ldw	r4,180(sp)
10102b24:	d9801e04 	addi	r6,sp,120
10102b28:	b80b883a 	mov	r5,r23
10102b2c:	01085e80 	call	101085e8 <__sprint_r>
10102b30:	103a0b1e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102b34:	dc402617 	ldw	r17,152(sp)
10102b38:	d8c02017 	ldw	r3,128(sp)
10102b3c:	da000404 	addi	r8,sp,16
10102b40:	003f9c06 	br	101029b4 <__alt_data_end+0xfffe29b4>
10102b44:	ac400043 	ldbu	r17,1(r21)
10102b48:	84000814 	ori	r16,r16,32
10102b4c:	ad400044 	addi	r21,r21,1
10102b50:	8c403fcc 	andi	r17,r17,255
10102b54:	8c40201c 	xori	r17,r17,128
10102b58:	8c7fe004 	addi	r17,r17,-128
10102b5c:	00395e06 	br	101010d8 <__alt_data_end+0xfffe10d8>
10102b60:	d8c02e15 	stw	r3,184(sp)
10102b64:	0039883a 	mov	fp,zero
10102b68:	003e3506 	br	10102440 <__alt_data_end+0xfffe2440>
10102b6c:	d9002d17 	ldw	r4,180(sp)
10102b70:	d9801e04 	addi	r6,sp,120
10102b74:	b80b883a 	mov	r5,r23
10102b78:	01085e80 	call	101085e8 <__sprint_r>
10102b7c:	1039f81e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102b80:	d8c02017 	ldw	r3,128(sp)
10102b84:	da000404 	addi	r8,sp,16
10102b88:	003cd006 	br	10101ecc <__alt_data_end+0xfffe1ecc>
10102b8c:	8009883a 	mov	r4,r16
10102b90:	df003d15 	stw	fp,244(sp)
10102b94:	0100eb80 	call	10100eb8 <strlen>
10102b98:	d8802b15 	stw	r2,172(sp)
10102b9c:	da003d17 	ldw	r8,244(sp)
10102ba0:	103c200e 	bge	r2,zero,10101c24 <__alt_data_end+0xfffe1c24>
10102ba4:	0005883a 	mov	r2,zero
10102ba8:	003c1e06 	br	10101c24 <__alt_data_end+0xfffe1c24>
10102bac:	d9002d17 	ldw	r4,180(sp)
10102bb0:	d9801e04 	addi	r6,sp,120
10102bb4:	b80b883a 	mov	r5,r23
10102bb8:	01085e80 	call	101085e8 <__sprint_r>
10102bbc:	1039e81e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102bc0:	d8c02017 	ldw	r3,128(sp)
10102bc4:	d8801f17 	ldw	r2,124(sp)
10102bc8:	da000404 	addi	r8,sp,16
10102bcc:	d9403317 	ldw	r5,204(sp)
10102bd0:	10800044 	addi	r2,r2,1
10102bd4:	44000015 	stw	r16,0(r8)
10102bd8:	28c7883a 	add	r3,r5,r3
10102bdc:	003b5b06 	br	1010194c <__alt_data_end+0xfffe194c>
10102be0:	01040474 	movhi	r4,4113
10102be4:	21006c84 	addi	r4,r4,434
10102be8:	d9003515 	stw	r4,212(sp)
10102bec:	003af206 	br	101017b8 <__alt_data_end+0xfffe17b8>
10102bf0:	013fffc4 	movi	r4,-1
10102bf4:	003a0806 	br	10101418 <__alt_data_end+0xfffe1418>
10102bf8:	0023883a 	mov	r17,zero
10102bfc:	003d9d06 	br	10102274 <__alt_data_end+0xfffe2274>
10102c00:	d9002d17 	ldw	r4,180(sp)
10102c04:	d9801e04 	addi	r6,sp,120
10102c08:	b80b883a 	mov	r5,r23
10102c0c:	01085e80 	call	101085e8 <__sprint_r>
10102c10:	1039d31e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102c14:	d8c02017 	ldw	r3,128(sp)
10102c18:	da000404 	addi	r8,sp,16
10102c1c:	003d9406 	br	10102270 <__alt_data_end+0xfffe2270>
10102c20:	01040474 	movhi	r4,4113
10102c24:	21006884 	addi	r4,r4,418
10102c28:	d9002c15 	stw	r4,176(sp)
10102c2c:	d9002c17 	ldw	r4,176(sp)
10102c30:	1c47883a 	add	r3,r3,r17
10102c34:	10800044 	addi	r2,r2,1
10102c38:	41000015 	stw	r4,0(r8)
10102c3c:	44400115 	stw	r17,4(r8)
10102c40:	d8c02015 	stw	r3,128(sp)
10102c44:	d8801f15 	stw	r2,124(sp)
10102c48:	010001c4 	movi	r4,7
10102c4c:	20bfd716 	blt	r4,r2,10102bac <__alt_data_end+0xfffe2bac>
10102c50:	42000204 	addi	r8,r8,8
10102c54:	003fdd06 	br	10102bcc <__alt_data_end+0xfffe2bcc>
10102c58:	d9002d17 	ldw	r4,180(sp)
10102c5c:	d9801e04 	addi	r6,sp,120
10102c60:	b80b883a 	mov	r5,r23
10102c64:	01085e80 	call	101085e8 <__sprint_r>
10102c68:	1039bd1e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102c6c:	d8802617 	ldw	r2,152(sp)
10102c70:	d8c02017 	ldw	r3,128(sp)
10102c74:	da000404 	addi	r8,sp,16
10102c78:	003e1006 	br	101024bc <__alt_data_end+0xfffe24bc>
10102c7c:	00800044 	movi	r2,1
10102c80:	10803fcc 	andi	r2,r2,255
10102c84:	00c00044 	movi	r3,1
10102c88:	10fa0d26 	beq	r2,r3,101014c0 <__alt_data_end+0xfffe14c0>
10102c8c:	00c00084 	movi	r3,2
10102c90:	10fbaf26 	beq	r2,r3,10101b50 <__alt_data_end+0xfffe1b50>
10102c94:	003a6d06 	br	1010164c <__alt_data_end+0xfffe164c>
10102c98:	01040474 	movhi	r4,4113
10102c9c:	21006c84 	addi	r4,r4,434
10102ca0:	d9003515 	stw	r4,212(sp)
10102ca4:	003b5406 	br	101019f8 <__alt_data_end+0xfffe19f8>
10102ca8:	d8802a17 	ldw	r2,168(sp)
10102cac:	00c00184 	movi	r3,6
10102cb0:	1880012e 	bgeu	r3,r2,10102cb8 <___vfprintf_internal_r+0x1d68>
10102cb4:	1805883a 	mov	r2,r3
10102cb8:	d8802b15 	stw	r2,172(sp)
10102cbc:	1000ef16 	blt	r2,zero,1010307c <___vfprintf_internal_r+0x212c>
10102cc0:	04040474 	movhi	r16,4113
10102cc4:	d8802915 	stw	r2,164(sp)
10102cc8:	dcc02e15 	stw	r19,184(sp)
10102ccc:	d8002a15 	stw	zero,168(sp)
10102cd0:	d8003215 	stw	zero,200(sp)
10102cd4:	84006604 	addi	r16,r16,408
10102cd8:	0039883a 	mov	fp,zero
10102cdc:	003a8006 	br	101016e0 <__alt_data_end+0xfffe16e0>
10102ce0:	0021883a 	mov	r16,zero
10102ce4:	003e0706 	br	10102504 <__alt_data_end+0xfffe2504>
10102ce8:	d9002d17 	ldw	r4,180(sp)
10102cec:	d9801e04 	addi	r6,sp,120
10102cf0:	b80b883a 	mov	r5,r23
10102cf4:	01085e80 	call	101085e8 <__sprint_r>
10102cf8:	1039991e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102cfc:	d8802617 	ldw	r2,152(sp)
10102d00:	d9403317 	ldw	r5,204(sp)
10102d04:	d8c02017 	ldw	r3,128(sp)
10102d08:	da000404 	addi	r8,sp,16
10102d0c:	2885c83a 	sub	r2,r5,r2
10102d10:	003dfb06 	br	10102500 <__alt_data_end+0xfffe2500>
10102d14:	9080004c 	andi	r2,r18,1
10102d18:	103e8f1e 	bne	r2,zero,10102758 <__alt_data_end+0xfffe2758>
10102d1c:	d8802117 	ldw	r2,132(sp)
10102d20:	003e9e06 	br	1010279c <__alt_data_end+0xfffe279c>
10102d24:	1025883a 	mov	r18,r2
10102d28:	0039883a 	mov	fp,zero
10102d2c:	00800084 	movi	r2,2
10102d30:	003fd306 	br	10102c80 <__alt_data_end+0xfffe2c80>
10102d34:	07000b44 	movi	fp,45
10102d38:	df002785 	stb	fp,158(sp)
10102d3c:	003a1b06 	br	101015ac <__alt_data_end+0xfffe15ac>
10102d40:	00c00b44 	movi	r3,45
10102d44:	d8c02785 	stb	r3,158(sp)
10102d48:	d8802915 	stw	r2,164(sp)
10102d4c:	dc802c17 	ldw	r18,176(sp)
10102d50:	d8002a15 	stw	zero,168(sp)
10102d54:	07000b44 	movi	fp,45
10102d58:	003a5e06 	br	101016d4 <__alt_data_end+0xfffe16d4>
10102d5c:	04040474 	movhi	r16,4113
10102d60:	84005b04 	addi	r16,r16,364
10102d64:	003f4706 	br	10102a84 <__alt_data_end+0xfffe2a84>
10102d68:	d9002e17 	ldw	r4,184(sp)
10102d6c:	d9402f17 	ldw	r5,188(sp)
10102d70:	20800017 	ldw	r2,0(r4)
10102d74:	21000104 	addi	r4,r4,4
10102d78:	d9002e15 	stw	r4,184(sp)
10102d7c:	11400015 	stw	r5,0(r2)
10102d80:	0038ab06 	br	10101030 <__alt_data_end+0xfffe1030>
10102d84:	dd802617 	ldw	r22,152(sp)
10102d88:	00bfff44 	movi	r2,-3
10102d8c:	b0801c16 	blt	r22,r2,10102e00 <___vfprintf_internal_r+0x1eb0>
10102d90:	d9402a17 	ldw	r5,168(sp)
10102d94:	2d801a16 	blt	r5,r22,10102e00 <___vfprintf_internal_r+0x1eb0>
10102d98:	dd803215 	stw	r22,200(sp)
10102d9c:	003e8906 	br	101027c4 <__alt_data_end+0xfffe27c4>
10102da0:	01040474 	movhi	r4,4113
10102da4:	21006884 	addi	r4,r4,418
10102da8:	d9002c15 	stw	r4,176(sp)
10102dac:	003c9106 	br	10101ff4 <__alt_data_end+0xfffe1ff4>
10102db0:	e005883a 	mov	r2,fp
10102db4:	003e7906 	br	1010279c <__alt_data_end+0xfffe279c>
10102db8:	d9002a17 	ldw	r4,168(sp)
10102dbc:	df002783 	ldbu	fp,158(sp)
10102dc0:	dcc02e15 	stw	r19,184(sp)
10102dc4:	d9002915 	stw	r4,164(sp)
10102dc8:	d9002b15 	stw	r4,172(sp)
10102dcc:	d8002a15 	stw	zero,168(sp)
10102dd0:	d8003215 	stw	zero,200(sp)
10102dd4:	003a3b06 	br	101016c4 <__alt_data_end+0xfffe16c4>
10102dd8:	9080004c 	andi	r2,r18,1
10102ddc:	0039883a 	mov	fp,zero
10102de0:	10000426 	beq	r2,zero,10102df4 <___vfprintf_internal_r+0x1ea4>
10102de4:	00800c04 	movi	r2,48
10102de8:	dc001dc4 	addi	r16,sp,119
10102dec:	d8801dc5 	stb	r2,119(sp)
10102df0:	003b6406 	br	10101b84 <__alt_data_end+0xfffe1b84>
10102df4:	d8002b15 	stw	zero,172(sp)
10102df8:	dc001e04 	addi	r16,sp,120
10102dfc:	003a2b06 	br	101016ac <__alt_data_end+0xfffe16ac>
10102e00:	8c7fff84 	addi	r17,r17,-2
10102e04:	b5bfffc4 	addi	r22,r22,-1
10102e08:	dd802615 	stw	r22,152(sp)
10102e0c:	dc4022c5 	stb	r17,139(sp)
10102e10:	b000bf16 	blt	r22,zero,10103110 <___vfprintf_internal_r+0x21c0>
10102e14:	00800ac4 	movi	r2,43
10102e18:	d8802305 	stb	r2,140(sp)
10102e1c:	00800244 	movi	r2,9
10102e20:	15807016 	blt	r2,r22,10102fe4 <___vfprintf_internal_r+0x2094>
10102e24:	00800c04 	movi	r2,48
10102e28:	b5800c04 	addi	r22,r22,48
10102e2c:	d8802345 	stb	r2,141(sp)
10102e30:	dd802385 	stb	r22,142(sp)
10102e34:	d88023c4 	addi	r2,sp,143
10102e38:	df0022c4 	addi	fp,sp,139
10102e3c:	d8c03317 	ldw	r3,204(sp)
10102e40:	1739c83a 	sub	fp,r2,fp
10102e44:	d9003317 	ldw	r4,204(sp)
10102e48:	e0c7883a 	add	r3,fp,r3
10102e4c:	df003a15 	stw	fp,232(sp)
10102e50:	d8c02b15 	stw	r3,172(sp)
10102e54:	00800044 	movi	r2,1
10102e58:	1100b30e 	bge	r2,r4,10103128 <___vfprintf_internal_r+0x21d8>
10102e5c:	d8c02b17 	ldw	r3,172(sp)
10102e60:	18c00044 	addi	r3,r3,1
10102e64:	d8c02b15 	stw	r3,172(sp)
10102e68:	1805883a 	mov	r2,r3
10102e6c:	1800ac16 	blt	r3,zero,10103120 <___vfprintf_internal_r+0x21d0>
10102e70:	d8003215 	stw	zero,200(sp)
10102e74:	003e5d06 	br	101027ec <__alt_data_end+0xfffe27ec>
10102e78:	d9002d17 	ldw	r4,180(sp)
10102e7c:	d9801e04 	addi	r6,sp,120
10102e80:	b80b883a 	mov	r5,r23
10102e84:	01085e80 	call	101085e8 <__sprint_r>
10102e88:	1039351e 	bne	r2,zero,10101360 <__alt_data_end+0xfffe1360>
10102e8c:	dc402617 	ldw	r17,152(sp)
10102e90:	d8c02017 	ldw	r3,128(sp)
10102e94:	d8801f17 	ldw	r2,124(sp)
10102e98:	da000404 	addi	r8,sp,16
10102e9c:	003ed606 	br	101029f8 <__alt_data_end+0xfffe29f8>
10102ea0:	182b883a 	mov	r21,r3
10102ea4:	d8002a15 	stw	zero,168(sp)
10102ea8:	00388c06 	br	101010dc <__alt_data_end+0xfffe10dc>
10102eac:	d8802a17 	ldw	r2,168(sp)
10102eb0:	103e071e 	bne	r2,zero,101026d0 <__alt_data_end+0xfffe26d0>
10102eb4:	dc002a15 	stw	r16,168(sp)
10102eb8:	003e0506 	br	101026d0 <__alt_data_end+0xfffe26d0>
10102ebc:	d9002a17 	ldw	r4,168(sp)
10102ec0:	20c00044 	addi	r3,r4,1
10102ec4:	003e0f06 	br	10102704 <__alt_data_end+0xfffe2704>
10102ec8:	01400184 	movi	r5,6
10102ecc:	d9402a15 	stw	r5,168(sp)
10102ed0:	003dff06 	br	101026d0 <__alt_data_end+0xfffe26d0>
10102ed4:	d8802104 	addi	r2,sp,132
10102ed8:	d8800315 	stw	r2,12(sp)
10102edc:	d8802504 	addi	r2,sp,148
10102ee0:	d8800215 	stw	r2,8(sp)
10102ee4:	d8802604 	addi	r2,sp,152
10102ee8:	d8800115 	stw	r2,4(sp)
10102eec:	d8802a17 	ldw	r2,168(sp)
10102ef0:	d9403617 	ldw	r5,216(sp)
10102ef4:	d9002d17 	ldw	r4,180(sp)
10102ef8:	d8800015 	stw	r2,0(sp)
10102efc:	01c000c4 	movi	r7,3
10102f00:	980d883a 	mov	r6,r19
10102f04:	da003d15 	stw	r8,244(sp)
10102f08:	01036800 	call	10103680 <_dtoa_r>
10102f0c:	d8c02a17 	ldw	r3,168(sp)
10102f10:	da003d17 	ldw	r8,244(sp)
10102f14:	1021883a 	mov	r16,r2
10102f18:	10f9883a 	add	fp,r2,r3
10102f1c:	81000007 	ldb	r4,0(r16)
10102f20:	00800c04 	movi	r2,48
10102f24:	20805e26 	beq	r4,r2,101030a0 <___vfprintf_internal_r+0x2150>
10102f28:	d8c02617 	ldw	r3,152(sp)
10102f2c:	e0f9883a 	add	fp,fp,r3
10102f30:	003e0a06 	br	1010275c <__alt_data_end+0xfffe275c>
10102f34:	00c00b44 	movi	r3,45
10102f38:	24e0003c 	xorhi	r19,r4,32768
10102f3c:	d8c02905 	stb	r3,164(sp)
10102f40:	003de906 	br	101026e8 <__alt_data_end+0xfffe26e8>
10102f44:	d8c03217 	ldw	r3,200(sp)
10102f48:	00c07a0e 	bge	zero,r3,10103134 <___vfprintf_internal_r+0x21e4>
10102f4c:	00800044 	movi	r2,1
10102f50:	d9003317 	ldw	r4,204(sp)
10102f54:	1105883a 	add	r2,r2,r4
10102f58:	d8802b15 	stw	r2,172(sp)
10102f5c:	10004e16 	blt	r2,zero,10103098 <___vfprintf_internal_r+0x2148>
10102f60:	044019c4 	movi	r17,103
10102f64:	003e2106 	br	101027ec <__alt_data_end+0xfffe27ec>
10102f68:	d9002a17 	ldw	r4,168(sp)
10102f6c:	d8802104 	addi	r2,sp,132
10102f70:	d8800315 	stw	r2,12(sp)
10102f74:	d9000015 	stw	r4,0(sp)
10102f78:	d8802504 	addi	r2,sp,148
10102f7c:	d9403617 	ldw	r5,216(sp)
10102f80:	d9002d17 	ldw	r4,180(sp)
10102f84:	d8800215 	stw	r2,8(sp)
10102f88:	d8802604 	addi	r2,sp,152
10102f8c:	d8800115 	stw	r2,4(sp)
10102f90:	01c000c4 	movi	r7,3
10102f94:	980d883a 	mov	r6,r19
10102f98:	da003d15 	stw	r8,244(sp)
10102f9c:	01036800 	call	10103680 <_dtoa_r>
10102fa0:	d8c02a17 	ldw	r3,168(sp)
10102fa4:	da003d17 	ldw	r8,244(sp)
10102fa8:	1021883a 	mov	r16,r2
10102fac:	00801184 	movi	r2,70
10102fb0:	80f9883a 	add	fp,r16,r3
10102fb4:	88bfd926 	beq	r17,r2,10102f1c <__alt_data_end+0xfffe2f1c>
10102fb8:	003de806 	br	1010275c <__alt_data_end+0xfffe275c>
10102fbc:	d9002a17 	ldw	r4,168(sp)
10102fc0:	00c04d0e 	bge	zero,r3,101030f8 <___vfprintf_internal_r+0x21a8>
10102fc4:	2000441e 	bne	r4,zero,101030d8 <___vfprintf_internal_r+0x2188>
10102fc8:	9480004c 	andi	r18,r18,1
10102fcc:	9000421e 	bne	r18,zero,101030d8 <___vfprintf_internal_r+0x2188>
10102fd0:	1805883a 	mov	r2,r3
10102fd4:	18006f16 	blt	r3,zero,10103194 <___vfprintf_internal_r+0x2244>
10102fd8:	d8c03217 	ldw	r3,200(sp)
10102fdc:	d8c02b15 	stw	r3,172(sp)
10102fe0:	003e0206 	br	101027ec <__alt_data_end+0xfffe27ec>
10102fe4:	df0022c4 	addi	fp,sp,139
10102fe8:	dc002a15 	stw	r16,168(sp)
10102fec:	4027883a 	mov	r19,r8
10102ff0:	e021883a 	mov	r16,fp
10102ff4:	b009883a 	mov	r4,r22
10102ff8:	01400284 	movi	r5,10
10102ffc:	0100ad80 	call	10100ad8 <__modsi3>
10103000:	10800c04 	addi	r2,r2,48
10103004:	843fffc4 	addi	r16,r16,-1
10103008:	b009883a 	mov	r4,r22
1010300c:	01400284 	movi	r5,10
10103010:	80800005 	stb	r2,0(r16)
10103014:	0100a540 	call	10100a54 <__divsi3>
10103018:	102d883a 	mov	r22,r2
1010301c:	00800244 	movi	r2,9
10103020:	15bff416 	blt	r2,r22,10102ff4 <__alt_data_end+0xfffe2ff4>
10103024:	9811883a 	mov	r8,r19
10103028:	b0800c04 	addi	r2,r22,48
1010302c:	8027883a 	mov	r19,r16
10103030:	997fffc4 	addi	r5,r19,-1
10103034:	98bfffc5 	stb	r2,-1(r19)
10103038:	dc002a17 	ldw	r16,168(sp)
1010303c:	2f006d2e 	bgeu	r5,fp,101031f4 <___vfprintf_internal_r+0x22a4>
10103040:	d9c02384 	addi	r7,sp,142
10103044:	3ccfc83a 	sub	r7,r7,r19
10103048:	d9002344 	addi	r4,sp,141
1010304c:	e1cf883a 	add	r7,fp,r7
10103050:	00000106 	br	10103058 <___vfprintf_internal_r+0x2108>
10103054:	28800003 	ldbu	r2,0(r5)
10103058:	20800005 	stb	r2,0(r4)
1010305c:	21000044 	addi	r4,r4,1
10103060:	29400044 	addi	r5,r5,1
10103064:	393ffb1e 	bne	r7,r4,10103054 <__alt_data_end+0xfffe3054>
10103068:	d8802304 	addi	r2,sp,140
1010306c:	14c5c83a 	sub	r2,r2,r19
10103070:	d8c02344 	addi	r3,sp,141
10103074:	1885883a 	add	r2,r3,r2
10103078:	003f7006 	br	10102e3c <__alt_data_end+0xfffe2e3c>
1010307c:	0005883a 	mov	r2,zero
10103080:	003f0f06 	br	10102cc0 <__alt_data_end+0xfffe2cc0>
10103084:	d8c03217 	ldw	r3,200(sp)
10103088:	18c00044 	addi	r3,r3,1
1010308c:	d8c02b15 	stw	r3,172(sp)
10103090:	1805883a 	mov	r2,r3
10103094:	183fb20e 	bge	r3,zero,10102f60 <__alt_data_end+0xfffe2f60>
10103098:	0005883a 	mov	r2,zero
1010309c:	003fb006 	br	10102f60 <__alt_data_end+0xfffe2f60>
101030a0:	d9003617 	ldw	r4,216(sp)
101030a4:	000d883a 	mov	r6,zero
101030a8:	000f883a 	mov	r7,zero
101030ac:	980b883a 	mov	r5,r19
101030b0:	d8c03c15 	stw	r3,240(sp)
101030b4:	da003d15 	stw	r8,244(sp)
101030b8:	010c36c0 	call	1010c36c <__eqdf2>
101030bc:	d8c03c17 	ldw	r3,240(sp)
101030c0:	da003d17 	ldw	r8,244(sp)
101030c4:	103f9826 	beq	r2,zero,10102f28 <__alt_data_end+0xfffe2f28>
101030c8:	00800044 	movi	r2,1
101030cc:	10c7c83a 	sub	r3,r2,r3
101030d0:	d8c02615 	stw	r3,152(sp)
101030d4:	003f9506 	br	10102f2c <__alt_data_end+0xfffe2f2c>
101030d8:	d9002a17 	ldw	r4,168(sp)
101030dc:	d8c03217 	ldw	r3,200(sp)
101030e0:	20800044 	addi	r2,r4,1
101030e4:	1885883a 	add	r2,r3,r2
101030e8:	d8802b15 	stw	r2,172(sp)
101030ec:	103dbf0e 	bge	r2,zero,101027ec <__alt_data_end+0xfffe27ec>
101030f0:	0005883a 	mov	r2,zero
101030f4:	003dbd06 	br	101027ec <__alt_data_end+0xfffe27ec>
101030f8:	2000201e 	bne	r4,zero,1010317c <___vfprintf_internal_r+0x222c>
101030fc:	9480004c 	andi	r18,r18,1
10103100:	90001e1e 	bne	r18,zero,1010317c <___vfprintf_internal_r+0x222c>
10103104:	00800044 	movi	r2,1
10103108:	d8802b15 	stw	r2,172(sp)
1010310c:	003db706 	br	101027ec <__alt_data_end+0xfffe27ec>
10103110:	00800b44 	movi	r2,45
10103114:	05adc83a 	sub	r22,zero,r22
10103118:	d8802305 	stb	r2,140(sp)
1010311c:	003f3f06 	br	10102e1c <__alt_data_end+0xfffe2e1c>
10103120:	0005883a 	mov	r2,zero
10103124:	003f5206 	br	10102e70 <__alt_data_end+0xfffe2e70>
10103128:	90a4703a 	and	r18,r18,r2
1010312c:	903f4e26 	beq	r18,zero,10102e68 <__alt_data_end+0xfffe2e68>
10103130:	003f4a06 	br	10102e5c <__alt_data_end+0xfffe2e5c>
10103134:	00800084 	movi	r2,2
10103138:	10c5c83a 	sub	r2,r2,r3
1010313c:	003f8406 	br	10102f50 <__alt_data_end+0xfffe2f50>
10103140:	d9402e17 	ldw	r5,184(sp)
10103144:	d9002e17 	ldw	r4,184(sp)
10103148:	ac400043 	ldbu	r17,1(r21)
1010314c:	29400017 	ldw	r5,0(r5)
10103150:	20800104 	addi	r2,r4,4
10103154:	d8802e15 	stw	r2,184(sp)
10103158:	d9402a15 	stw	r5,168(sp)
1010315c:	182b883a 	mov	r21,r3
10103160:	283e7b0e 	bge	r5,zero,10102b50 <__alt_data_end+0xfffe2b50>
10103164:	8c403fcc 	andi	r17,r17,255
10103168:	017fffc4 	movi	r5,-1
1010316c:	8c40201c 	xori	r17,r17,128
10103170:	d9402a15 	stw	r5,168(sp)
10103174:	8c7fe004 	addi	r17,r17,-128
10103178:	0037d706 	br	101010d8 <__alt_data_end+0xfffe10d8>
1010317c:	d8c02a17 	ldw	r3,168(sp)
10103180:	18c00084 	addi	r3,r3,2
10103184:	d8c02b15 	stw	r3,172(sp)
10103188:	1805883a 	mov	r2,r3
1010318c:	183d970e 	bge	r3,zero,101027ec <__alt_data_end+0xfffe27ec>
10103190:	003fd706 	br	101030f0 <__alt_data_end+0xfffe30f0>
10103194:	0005883a 	mov	r2,zero
10103198:	003f8f06 	br	10102fd8 <__alt_data_end+0xfffe2fd8>
1010319c:	9080004c 	andi	r2,r18,1
101031a0:	103f821e 	bne	r2,zero,10102fac <__alt_data_end+0xfffe2fac>
101031a4:	d8802117 	ldw	r2,132(sp)
101031a8:	1405c83a 	sub	r2,r2,r16
101031ac:	d8803315 	stw	r2,204(sp)
101031b0:	b47ef426 	beq	r22,r17,10102d84 <__alt_data_end+0xfffe2d84>
101031b4:	dd802617 	ldw	r22,152(sp)
101031b8:	003f1206 	br	10102e04 <__alt_data_end+0xfffe2e04>
101031bc:	d8c02b03 	ldbu	r3,172(sp)
101031c0:	d8c02785 	stb	r3,158(sp)
101031c4:	0038df06 	br	10101544 <__alt_data_end+0xfffe1544>
101031c8:	d8c02b03 	ldbu	r3,172(sp)
101031cc:	d8c02785 	stb	r3,158(sp)
101031d0:	0038aa06 	br	1010147c <__alt_data_end+0xfffe147c>
101031d4:	d8c02b03 	ldbu	r3,172(sp)
101031d8:	d8c02785 	stb	r3,158(sp)
101031dc:	003a4306 	br	10101aec <__alt_data_end+0xfffe1aec>
101031e0:	d8c02b03 	ldbu	r3,172(sp)
101031e4:	d8c02785 	stb	r3,158(sp)
101031e8:	003af506 	br	10101dc0 <__alt_data_end+0xfffe1dc0>
101031ec:	0005883a 	mov	r2,zero
101031f0:	003d7b06 	br	101027e0 <__alt_data_end+0xfffe27e0>
101031f4:	d8802344 	addi	r2,sp,141
101031f8:	003f1006 	br	10102e3c <__alt_data_end+0xfffe2e3c>
101031fc:	d8c02b03 	ldbu	r3,172(sp)
10103200:	d8c02785 	stb	r3,158(sp)
10103204:	0038fd06 	br	101015fc <__alt_data_end+0xfffe15fc>
10103208:	d8c02b03 	ldbu	r3,172(sp)
1010320c:	d8c02785 	stb	r3,158(sp)
10103210:	003a9706 	br	10101c70 <__alt_data_end+0xfffe1c70>
10103214:	d8c02b03 	ldbu	r3,172(sp)
10103218:	d8c02785 	stb	r3,158(sp)
1010321c:	003a1806 	br	10101a80 <__alt_data_end+0xfffe1a80>
10103220:	d8c02b03 	ldbu	r3,172(sp)
10103224:	d8c02785 	stb	r3,158(sp)
10103228:	003abe06 	br	10101d24 <__alt_data_end+0xfffe1d24>

1010322c <__vfprintf_internal>:
1010322c:	00840474 	movhi	r2,4113
10103230:	1087c304 	addi	r2,r2,7948
10103234:	300f883a 	mov	r7,r6
10103238:	280d883a 	mov	r6,r5
1010323c:	200b883a 	mov	r5,r4
10103240:	11000017 	ldw	r4,0(r2)
10103244:	0100f501 	jmpi	10100f50 <___vfprintf_internal_r>

10103248 <__sbprintf>:
10103248:	2880030b 	ldhu	r2,12(r5)
1010324c:	2ac01917 	ldw	r11,100(r5)
10103250:	2a80038b 	ldhu	r10,14(r5)
10103254:	2a400717 	ldw	r9,28(r5)
10103258:	2a000917 	ldw	r8,36(r5)
1010325c:	defee204 	addi	sp,sp,-1144
10103260:	00c10004 	movi	r3,1024
10103264:	dc011a15 	stw	r16,1128(sp)
10103268:	10bfff4c 	andi	r2,r2,65533
1010326c:	2821883a 	mov	r16,r5
10103270:	d8cb883a 	add	r5,sp,r3
10103274:	dc811c15 	stw	r18,1136(sp)
10103278:	dc411b15 	stw	r17,1132(sp)
1010327c:	dfc11d15 	stw	ra,1140(sp)
10103280:	2025883a 	mov	r18,r4
10103284:	d881030d 	sth	r2,1036(sp)
10103288:	dac11915 	stw	r11,1124(sp)
1010328c:	da81038d 	sth	r10,1038(sp)
10103290:	da410715 	stw	r9,1052(sp)
10103294:	da010915 	stw	r8,1060(sp)
10103298:	dec10015 	stw	sp,1024(sp)
1010329c:	dec10415 	stw	sp,1040(sp)
101032a0:	d8c10215 	stw	r3,1032(sp)
101032a4:	d8c10515 	stw	r3,1044(sp)
101032a8:	d8010615 	stw	zero,1048(sp)
101032ac:	0100f500 	call	10100f50 <___vfprintf_internal_r>
101032b0:	1023883a 	mov	r17,r2
101032b4:	10000416 	blt	r2,zero,101032c8 <__sbprintf+0x80>
101032b8:	d9410004 	addi	r5,sp,1024
101032bc:	9009883a 	mov	r4,r18
101032c0:	0104f240 	call	10104f24 <_fflush_r>
101032c4:	10000d1e 	bne	r2,zero,101032fc <__sbprintf+0xb4>
101032c8:	d881030b 	ldhu	r2,1036(sp)
101032cc:	1080100c 	andi	r2,r2,64
101032d0:	10000326 	beq	r2,zero,101032e0 <__sbprintf+0x98>
101032d4:	8080030b 	ldhu	r2,12(r16)
101032d8:	10801014 	ori	r2,r2,64
101032dc:	8080030d 	sth	r2,12(r16)
101032e0:	8805883a 	mov	r2,r17
101032e4:	dfc11d17 	ldw	ra,1140(sp)
101032e8:	dc811c17 	ldw	r18,1136(sp)
101032ec:	dc411b17 	ldw	r17,1132(sp)
101032f0:	dc011a17 	ldw	r16,1128(sp)
101032f4:	dec11e04 	addi	sp,sp,1144
101032f8:	f800283a 	ret
101032fc:	047fffc4 	movi	r17,-1
10103300:	003ff106 	br	101032c8 <__alt_data_end+0xfffe32c8>

10103304 <__swsetup_r>:
10103304:	00840474 	movhi	r2,4113
10103308:	defffd04 	addi	sp,sp,-12
1010330c:	1087c304 	addi	r2,r2,7948
10103310:	dc400115 	stw	r17,4(sp)
10103314:	2023883a 	mov	r17,r4
10103318:	11000017 	ldw	r4,0(r2)
1010331c:	dc000015 	stw	r16,0(sp)
10103320:	dfc00215 	stw	ra,8(sp)
10103324:	2821883a 	mov	r16,r5
10103328:	20000226 	beq	r4,zero,10103334 <__swsetup_r+0x30>
1010332c:	20800e17 	ldw	r2,56(r4)
10103330:	10003126 	beq	r2,zero,101033f8 <__swsetup_r+0xf4>
10103334:	8080030b 	ldhu	r2,12(r16)
10103338:	10c0020c 	andi	r3,r2,8
1010333c:	1009883a 	mov	r4,r2
10103340:	18000f26 	beq	r3,zero,10103380 <__swsetup_r+0x7c>
10103344:	80c00417 	ldw	r3,16(r16)
10103348:	18001526 	beq	r3,zero,101033a0 <__swsetup_r+0x9c>
1010334c:	1100004c 	andi	r4,r2,1
10103350:	20001c1e 	bne	r4,zero,101033c4 <__swsetup_r+0xc0>
10103354:	1080008c 	andi	r2,r2,2
10103358:	1000291e 	bne	r2,zero,10103400 <__swsetup_r+0xfc>
1010335c:	80800517 	ldw	r2,20(r16)
10103360:	80800215 	stw	r2,8(r16)
10103364:	18001c26 	beq	r3,zero,101033d8 <__swsetup_r+0xd4>
10103368:	0005883a 	mov	r2,zero
1010336c:	dfc00217 	ldw	ra,8(sp)
10103370:	dc400117 	ldw	r17,4(sp)
10103374:	dc000017 	ldw	r16,0(sp)
10103378:	dec00304 	addi	sp,sp,12
1010337c:	f800283a 	ret
10103380:	2080040c 	andi	r2,r4,16
10103384:	10002e26 	beq	r2,zero,10103440 <__swsetup_r+0x13c>
10103388:	2080010c 	andi	r2,r4,4
1010338c:	10001e1e 	bne	r2,zero,10103408 <__swsetup_r+0x104>
10103390:	80c00417 	ldw	r3,16(r16)
10103394:	20800214 	ori	r2,r4,8
10103398:	8080030d 	sth	r2,12(r16)
1010339c:	183feb1e 	bne	r3,zero,1010334c <__alt_data_end+0xfffe334c>
101033a0:	1100a00c 	andi	r4,r2,640
101033a4:	01408004 	movi	r5,512
101033a8:	217fe826 	beq	r4,r5,1010334c <__alt_data_end+0xfffe334c>
101033ac:	800b883a 	mov	r5,r16
101033b0:	8809883a 	mov	r4,r17
101033b4:	0105ec00 	call	10105ec0 <__smakebuf_r>
101033b8:	8080030b 	ldhu	r2,12(r16)
101033bc:	80c00417 	ldw	r3,16(r16)
101033c0:	003fe206 	br	1010334c <__alt_data_end+0xfffe334c>
101033c4:	80800517 	ldw	r2,20(r16)
101033c8:	80000215 	stw	zero,8(r16)
101033cc:	0085c83a 	sub	r2,zero,r2
101033d0:	80800615 	stw	r2,24(r16)
101033d4:	183fe41e 	bne	r3,zero,10103368 <__alt_data_end+0xfffe3368>
101033d8:	80c0030b 	ldhu	r3,12(r16)
101033dc:	0005883a 	mov	r2,zero
101033e0:	1900200c 	andi	r4,r3,128
101033e4:	203fe126 	beq	r4,zero,1010336c <__alt_data_end+0xfffe336c>
101033e8:	18c01014 	ori	r3,r3,64
101033ec:	80c0030d 	sth	r3,12(r16)
101033f0:	00bfffc4 	movi	r2,-1
101033f4:	003fdd06 	br	1010336c <__alt_data_end+0xfffe336c>
101033f8:	01053100 	call	10105310 <__sinit>
101033fc:	003fcd06 	br	10103334 <__alt_data_end+0xfffe3334>
10103400:	0005883a 	mov	r2,zero
10103404:	003fd606 	br	10103360 <__alt_data_end+0xfffe3360>
10103408:	81400c17 	ldw	r5,48(r16)
1010340c:	28000626 	beq	r5,zero,10103428 <__swsetup_r+0x124>
10103410:	80801004 	addi	r2,r16,64
10103414:	28800326 	beq	r5,r2,10103424 <__swsetup_r+0x120>
10103418:	8809883a 	mov	r4,r17
1010341c:	01054840 	call	10105484 <_free_r>
10103420:	8100030b 	ldhu	r4,12(r16)
10103424:	80000c15 	stw	zero,48(r16)
10103428:	80c00417 	ldw	r3,16(r16)
1010342c:	00bff6c4 	movi	r2,-37
10103430:	1108703a 	and	r4,r2,r4
10103434:	80000115 	stw	zero,4(r16)
10103438:	80c00015 	stw	r3,0(r16)
1010343c:	003fd506 	br	10103394 <__alt_data_end+0xfffe3394>
10103440:	00800244 	movi	r2,9
10103444:	88800015 	stw	r2,0(r17)
10103448:	20801014 	ori	r2,r4,64
1010344c:	8080030d 	sth	r2,12(r16)
10103450:	00bfffc4 	movi	r2,-1
10103454:	003fc506 	br	1010336c <__alt_data_end+0xfffe336c>

10103458 <quorem>:
10103458:	defff204 	addi	sp,sp,-56
1010345c:	ddc00b15 	stw	r23,44(sp)
10103460:	20800417 	ldw	r2,16(r4)
10103464:	2dc00417 	ldw	r23,16(r5)
10103468:	dfc00d15 	stw	ra,52(sp)
1010346c:	df000c15 	stw	fp,48(sp)
10103470:	dd800a15 	stw	r22,40(sp)
10103474:	dd400915 	stw	r21,36(sp)
10103478:	dd000815 	stw	r20,32(sp)
1010347c:	dcc00715 	stw	r19,28(sp)
10103480:	dc800615 	stw	r18,24(sp)
10103484:	dc400515 	stw	r17,20(sp)
10103488:	dc000415 	stw	r16,16(sp)
1010348c:	15c07a16 	blt	r2,r23,10103678 <quorem+0x220>
10103490:	bdffffc4 	addi	r23,r23,-1
10103494:	bde9883a 	add	r20,r23,r23
10103498:	28c00504 	addi	r3,r5,20
1010349c:	a529883a 	add	r20,r20,r20
101034a0:	1d39883a 	add	fp,r3,r20
101034a4:	24c00504 	addi	r19,r4,20
101034a8:	d9400215 	stw	r5,8(sp)
101034ac:	9d29883a 	add	r20,r19,r20
101034b0:	e1400017 	ldw	r5,0(fp)
101034b4:	d9000015 	stw	r4,0(sp)
101034b8:	a1000017 	ldw	r4,0(r20)
101034bc:	29400044 	addi	r5,r5,1
101034c0:	d8c00115 	stw	r3,4(sp)
101034c4:	dd000315 	stw	r20,12(sp)
101034c8:	0100b4c0 	call	10100b4c <__udivsi3>
101034cc:	1025883a 	mov	r18,r2
101034d0:	10003026 	beq	r2,zero,10103594 <quorem+0x13c>
101034d4:	dc400117 	ldw	r17,4(sp)
101034d8:	9829883a 	mov	r20,r19
101034dc:	002d883a 	mov	r22,zero
101034e0:	0021883a 	mov	r16,zero
101034e4:	8d400017 	ldw	r21,0(r17)
101034e8:	900b883a 	mov	r5,r18
101034ec:	8c400104 	addi	r17,r17,4
101034f0:	a93fffcc 	andi	r4,r21,65535
101034f4:	0100c080 	call	10100c08 <__mulsi3>
101034f8:	a808d43a 	srli	r4,r21,16
101034fc:	900b883a 	mov	r5,r18
10103500:	15ad883a 	add	r22,r2,r22
10103504:	0100c080 	call	10100c08 <__mulsi3>
10103508:	a1000017 	ldw	r4,0(r20)
1010350c:	b00cd43a 	srli	r6,r22,16
10103510:	b0ffffcc 	andi	r3,r22,65535
10103514:	217fffcc 	andi	r5,r4,65535
10103518:	2c21883a 	add	r16,r5,r16
1010351c:	80c7c83a 	sub	r3,r16,r3
10103520:	2008d43a 	srli	r4,r4,16
10103524:	1185883a 	add	r2,r2,r6
10103528:	1821d43a 	srai	r16,r3,16
1010352c:	117fffcc 	andi	r5,r2,65535
10103530:	2149c83a 	sub	r4,r4,r5
10103534:	2421883a 	add	r16,r4,r16
10103538:	8008943a 	slli	r4,r16,16
1010353c:	18ffffcc 	andi	r3,r3,65535
10103540:	102cd43a 	srli	r22,r2,16
10103544:	20c8b03a 	or	r4,r4,r3
10103548:	a1000015 	stw	r4,0(r20)
1010354c:	8021d43a 	srai	r16,r16,16
10103550:	a5000104 	addi	r20,r20,4
10103554:	e47fe32e 	bgeu	fp,r17,101034e4 <__alt_data_end+0xfffe34e4>
10103558:	d8c00317 	ldw	r3,12(sp)
1010355c:	18800017 	ldw	r2,0(r3)
10103560:	10000c1e 	bne	r2,zero,10103594 <quorem+0x13c>
10103564:	18bfff04 	addi	r2,r3,-4
10103568:	9880082e 	bgeu	r19,r2,1010358c <quorem+0x134>
1010356c:	18ffff17 	ldw	r3,-4(r3)
10103570:	18000326 	beq	r3,zero,10103580 <quorem+0x128>
10103574:	00000506 	br	1010358c <quorem+0x134>
10103578:	10c00017 	ldw	r3,0(r2)
1010357c:	1800031e 	bne	r3,zero,1010358c <quorem+0x134>
10103580:	10bfff04 	addi	r2,r2,-4
10103584:	bdffffc4 	addi	r23,r23,-1
10103588:	98bffb36 	bltu	r19,r2,10103578 <__alt_data_end+0xfffe3578>
1010358c:	d8c00017 	ldw	r3,0(sp)
10103590:	1dc00415 	stw	r23,16(r3)
10103594:	d9400217 	ldw	r5,8(sp)
10103598:	d9000017 	ldw	r4,0(sp)
1010359c:	01075740 	call	10107574 <__mcmp>
101035a0:	10002816 	blt	r2,zero,10103644 <quorem+0x1ec>
101035a4:	dc400117 	ldw	r17,4(sp)
101035a8:	94800044 	addi	r18,r18,1
101035ac:	980d883a 	mov	r6,r19
101035b0:	0007883a 	mov	r3,zero
101035b4:	31000017 	ldw	r4,0(r6)
101035b8:	89400017 	ldw	r5,0(r17)
101035bc:	31800104 	addi	r6,r6,4
101035c0:	20bfffcc 	andi	r2,r4,65535
101035c4:	10c7883a 	add	r3,r2,r3
101035c8:	28bfffcc 	andi	r2,r5,65535
101035cc:	1885c83a 	sub	r2,r3,r2
101035d0:	280ad43a 	srli	r5,r5,16
101035d4:	2008d43a 	srli	r4,r4,16
101035d8:	1007d43a 	srai	r3,r2,16
101035dc:	10bfffcc 	andi	r2,r2,65535
101035e0:	2149c83a 	sub	r4,r4,r5
101035e4:	20c9883a 	add	r4,r4,r3
101035e8:	200a943a 	slli	r5,r4,16
101035ec:	8c400104 	addi	r17,r17,4
101035f0:	2007d43a 	srai	r3,r4,16
101035f4:	2884b03a 	or	r2,r5,r2
101035f8:	30bfff15 	stw	r2,-4(r6)
101035fc:	e47fed2e 	bgeu	fp,r17,101035b4 <__alt_data_end+0xfffe35b4>
10103600:	bdc5883a 	add	r2,r23,r23
10103604:	1085883a 	add	r2,r2,r2
10103608:	9887883a 	add	r3,r19,r2
1010360c:	18800017 	ldw	r2,0(r3)
10103610:	10000c1e 	bne	r2,zero,10103644 <quorem+0x1ec>
10103614:	18bfff04 	addi	r2,r3,-4
10103618:	9880082e 	bgeu	r19,r2,1010363c <quorem+0x1e4>
1010361c:	18ffff17 	ldw	r3,-4(r3)
10103620:	18000326 	beq	r3,zero,10103630 <quorem+0x1d8>
10103624:	00000506 	br	1010363c <quorem+0x1e4>
10103628:	10c00017 	ldw	r3,0(r2)
1010362c:	1800031e 	bne	r3,zero,1010363c <quorem+0x1e4>
10103630:	10bfff04 	addi	r2,r2,-4
10103634:	bdffffc4 	addi	r23,r23,-1
10103638:	98bffb36 	bltu	r19,r2,10103628 <__alt_data_end+0xfffe3628>
1010363c:	d8c00017 	ldw	r3,0(sp)
10103640:	1dc00415 	stw	r23,16(r3)
10103644:	9005883a 	mov	r2,r18
10103648:	dfc00d17 	ldw	ra,52(sp)
1010364c:	df000c17 	ldw	fp,48(sp)
10103650:	ddc00b17 	ldw	r23,44(sp)
10103654:	dd800a17 	ldw	r22,40(sp)
10103658:	dd400917 	ldw	r21,36(sp)
1010365c:	dd000817 	ldw	r20,32(sp)
10103660:	dcc00717 	ldw	r19,28(sp)
10103664:	dc800617 	ldw	r18,24(sp)
10103668:	dc400517 	ldw	r17,20(sp)
1010366c:	dc000417 	ldw	r16,16(sp)
10103670:	dec00e04 	addi	sp,sp,56
10103674:	f800283a 	ret
10103678:	0005883a 	mov	r2,zero
1010367c:	003ff206 	br	10103648 <__alt_data_end+0xfffe3648>

10103680 <_dtoa_r>:
10103680:	20801017 	ldw	r2,64(r4)
10103684:	deffde04 	addi	sp,sp,-136
10103688:	df002015 	stw	fp,128(sp)
1010368c:	dcc01b15 	stw	r19,108(sp)
10103690:	dc801a15 	stw	r18,104(sp)
10103694:	dc401915 	stw	r17,100(sp)
10103698:	dc001815 	stw	r16,96(sp)
1010369c:	dfc02115 	stw	ra,132(sp)
101036a0:	ddc01f15 	stw	r23,124(sp)
101036a4:	dd801e15 	stw	r22,120(sp)
101036a8:	dd401d15 	stw	r21,116(sp)
101036ac:	dd001c15 	stw	r20,112(sp)
101036b0:	d9c00315 	stw	r7,12(sp)
101036b4:	2039883a 	mov	fp,r4
101036b8:	3023883a 	mov	r17,r6
101036bc:	2825883a 	mov	r18,r5
101036c0:	dc002417 	ldw	r16,144(sp)
101036c4:	3027883a 	mov	r19,r6
101036c8:	10000826 	beq	r2,zero,101036ec <_dtoa_r+0x6c>
101036cc:	21801117 	ldw	r6,68(r4)
101036d0:	00c00044 	movi	r3,1
101036d4:	100b883a 	mov	r5,r2
101036d8:	1986983a 	sll	r3,r3,r6
101036dc:	11800115 	stw	r6,4(r2)
101036e0:	10c00215 	stw	r3,8(r2)
101036e4:	0106c980 	call	10106c98 <_Bfree>
101036e8:	e0001015 	stw	zero,64(fp)
101036ec:	88002e16 	blt	r17,zero,101037a8 <_dtoa_r+0x128>
101036f0:	80000015 	stw	zero,0(r16)
101036f4:	889ffc2c 	andhi	r2,r17,32752
101036f8:	00dffc34 	movhi	r3,32752
101036fc:	10c01c26 	beq	r2,r3,10103770 <_dtoa_r+0xf0>
10103700:	000d883a 	mov	r6,zero
10103704:	000f883a 	mov	r7,zero
10103708:	9009883a 	mov	r4,r18
1010370c:	980b883a 	mov	r5,r19
10103710:	010c36c0 	call	1010c36c <__eqdf2>
10103714:	10002b1e 	bne	r2,zero,101037c4 <_dtoa_r+0x144>
10103718:	d9c02317 	ldw	r7,140(sp)
1010371c:	00800044 	movi	r2,1
10103720:	38800015 	stw	r2,0(r7)
10103724:	d8802517 	ldw	r2,148(sp)
10103728:	10019e26 	beq	r2,zero,10103da4 <_dtoa_r+0x724>
1010372c:	d8c02517 	ldw	r3,148(sp)
10103730:	00840474 	movhi	r2,4113
10103734:	10806844 	addi	r2,r2,417
10103738:	18800015 	stw	r2,0(r3)
1010373c:	10bfffc4 	addi	r2,r2,-1
10103740:	dfc02117 	ldw	ra,132(sp)
10103744:	df002017 	ldw	fp,128(sp)
10103748:	ddc01f17 	ldw	r23,124(sp)
1010374c:	dd801e17 	ldw	r22,120(sp)
10103750:	dd401d17 	ldw	r21,116(sp)
10103754:	dd001c17 	ldw	r20,112(sp)
10103758:	dcc01b17 	ldw	r19,108(sp)
1010375c:	dc801a17 	ldw	r18,104(sp)
10103760:	dc401917 	ldw	r17,100(sp)
10103764:	dc001817 	ldw	r16,96(sp)
10103768:	dec02204 	addi	sp,sp,136
1010376c:	f800283a 	ret
10103770:	d8c02317 	ldw	r3,140(sp)
10103774:	0089c3c4 	movi	r2,9999
10103778:	18800015 	stw	r2,0(r3)
1010377c:	90017726 	beq	r18,zero,10103d5c <_dtoa_r+0x6dc>
10103780:	00840474 	movhi	r2,4113
10103784:	10807404 	addi	r2,r2,464
10103788:	d9002517 	ldw	r4,148(sp)
1010378c:	203fec26 	beq	r4,zero,10103740 <__alt_data_end+0xfffe3740>
10103790:	10c000c7 	ldb	r3,3(r2)
10103794:	1801781e 	bne	r3,zero,10103d78 <_dtoa_r+0x6f8>
10103798:	10c000c4 	addi	r3,r2,3
1010379c:	d9802517 	ldw	r6,148(sp)
101037a0:	30c00015 	stw	r3,0(r6)
101037a4:	003fe606 	br	10103740 <__alt_data_end+0xfffe3740>
101037a8:	04e00034 	movhi	r19,32768
101037ac:	9cffffc4 	addi	r19,r19,-1
101037b0:	00800044 	movi	r2,1
101037b4:	8ce6703a 	and	r19,r17,r19
101037b8:	80800015 	stw	r2,0(r16)
101037bc:	9823883a 	mov	r17,r19
101037c0:	003fcc06 	br	101036f4 <__alt_data_end+0xfffe36f4>
101037c4:	d8800204 	addi	r2,sp,8
101037c8:	d8800015 	stw	r2,0(sp)
101037cc:	d9c00104 	addi	r7,sp,4
101037d0:	900b883a 	mov	r5,r18
101037d4:	980d883a 	mov	r6,r19
101037d8:	e009883a 	mov	r4,fp
101037dc:	8820d53a 	srli	r16,r17,20
101037e0:	01079400 	call	10107940 <__d2b>
101037e4:	d8800915 	stw	r2,36(sp)
101037e8:	8001651e 	bne	r16,zero,10103d80 <_dtoa_r+0x700>
101037ec:	dd800217 	ldw	r22,8(sp)
101037f0:	dc000117 	ldw	r16,4(sp)
101037f4:	00800804 	movi	r2,32
101037f8:	b421883a 	add	r16,r22,r16
101037fc:	80c10c84 	addi	r3,r16,1074
10103800:	10c2d10e 	bge	r2,r3,10104348 <_dtoa_r+0xcc8>
10103804:	00801004 	movi	r2,64
10103808:	81010484 	addi	r4,r16,1042
1010380c:	10c7c83a 	sub	r3,r2,r3
10103810:	9108d83a 	srl	r4,r18,r4
10103814:	88e2983a 	sll	r17,r17,r3
10103818:	2448b03a 	or	r4,r4,r17
1010381c:	010d8880 	call	1010d888 <__floatunsidf>
10103820:	017f8434 	movhi	r5,65040
10103824:	01800044 	movi	r6,1
10103828:	1009883a 	mov	r4,r2
1010382c:	194b883a 	add	r5,r3,r5
10103830:	843fffc4 	addi	r16,r16,-1
10103834:	d9801115 	stw	r6,68(sp)
10103838:	000d883a 	mov	r6,zero
1010383c:	01cffe34 	movhi	r7,16376
10103840:	010ce300 	call	1010ce30 <__subdf3>
10103844:	0198dbf4 	movhi	r6,25455
10103848:	01cff4f4 	movhi	r7,16339
1010384c:	3190d844 	addi	r6,r6,17249
10103850:	39e1e9c4 	addi	r7,r7,-30809
10103854:	1009883a 	mov	r4,r2
10103858:	180b883a 	mov	r5,r3
1010385c:	010c5c40 	call	1010c5c4 <__muldf3>
10103860:	01a2d874 	movhi	r6,35681
10103864:	01cff1f4 	movhi	r7,16327
10103868:	31b22cc4 	addi	r6,r6,-14157
1010386c:	39e28a04 	addi	r7,r7,-30168
10103870:	180b883a 	mov	r5,r3
10103874:	1009883a 	mov	r4,r2
10103878:	010b0f00 	call	1010b0f0 <__adddf3>
1010387c:	8009883a 	mov	r4,r16
10103880:	1029883a 	mov	r20,r2
10103884:	1823883a 	mov	r17,r3
10103888:	010d7ac0 	call	1010d7ac <__floatsidf>
1010388c:	019427f4 	movhi	r6,20639
10103890:	01cff4f4 	movhi	r7,16339
10103894:	319e7ec4 	addi	r6,r6,31227
10103898:	39d104c4 	addi	r7,r7,17427
1010389c:	1009883a 	mov	r4,r2
101038a0:	180b883a 	mov	r5,r3
101038a4:	010c5c40 	call	1010c5c4 <__muldf3>
101038a8:	100d883a 	mov	r6,r2
101038ac:	180f883a 	mov	r7,r3
101038b0:	a009883a 	mov	r4,r20
101038b4:	880b883a 	mov	r5,r17
101038b8:	010b0f00 	call	1010b0f0 <__adddf3>
101038bc:	1009883a 	mov	r4,r2
101038c0:	180b883a 	mov	r5,r3
101038c4:	1029883a 	mov	r20,r2
101038c8:	1823883a 	mov	r17,r3
101038cc:	010d72c0 	call	1010d72c <__fixdfsi>
101038d0:	000d883a 	mov	r6,zero
101038d4:	000f883a 	mov	r7,zero
101038d8:	a009883a 	mov	r4,r20
101038dc:	880b883a 	mov	r5,r17
101038e0:	d8800515 	stw	r2,20(sp)
101038e4:	010c4d00 	call	1010c4d0 <__ledf2>
101038e8:	10028716 	blt	r2,zero,10104308 <_dtoa_r+0xc88>
101038ec:	d8c00517 	ldw	r3,20(sp)
101038f0:	00800584 	movi	r2,22
101038f4:	10c27536 	bltu	r2,r3,101042cc <_dtoa_r+0xc4c>
101038f8:	180490fa 	slli	r2,r3,3
101038fc:	00c40474 	movhi	r3,4113
10103900:	18c09004 	addi	r3,r3,576
10103904:	1885883a 	add	r2,r3,r2
10103908:	11000017 	ldw	r4,0(r2)
1010390c:	11400117 	ldw	r5,4(r2)
10103910:	900d883a 	mov	r6,r18
10103914:	980f883a 	mov	r7,r19
10103918:	010c3f40 	call	1010c3f4 <__gedf2>
1010391c:	00828d0e 	bge	zero,r2,10104354 <_dtoa_r+0xcd4>
10103920:	d9000517 	ldw	r4,20(sp)
10103924:	d8000e15 	stw	zero,56(sp)
10103928:	213fffc4 	addi	r4,r4,-1
1010392c:	d9000515 	stw	r4,20(sp)
10103930:	b42dc83a 	sub	r22,r22,r16
10103934:	b5bfffc4 	addi	r22,r22,-1
10103938:	b0026f16 	blt	r22,zero,101042f8 <_dtoa_r+0xc78>
1010393c:	d8000815 	stw	zero,32(sp)
10103940:	d9c00517 	ldw	r7,20(sp)
10103944:	38026416 	blt	r7,zero,101042d8 <_dtoa_r+0xc58>
10103948:	b1ed883a 	add	r22,r22,r7
1010394c:	d9c00d15 	stw	r7,52(sp)
10103950:	d8000a15 	stw	zero,40(sp)
10103954:	d9800317 	ldw	r6,12(sp)
10103958:	00800244 	movi	r2,9
1010395c:	11811436 	bltu	r2,r6,10103db0 <_dtoa_r+0x730>
10103960:	00800144 	movi	r2,5
10103964:	1184e10e 	bge	r2,r6,10104cec <_dtoa_r+0x166c>
10103968:	31bfff04 	addi	r6,r6,-4
1010396c:	d9800315 	stw	r6,12(sp)
10103970:	0023883a 	mov	r17,zero
10103974:	d9800317 	ldw	r6,12(sp)
10103978:	008000c4 	movi	r2,3
1010397c:	30836726 	beq	r6,r2,1010471c <_dtoa_r+0x109c>
10103980:	1183410e 	bge	r2,r6,10104688 <_dtoa_r+0x1008>
10103984:	d9c00317 	ldw	r7,12(sp)
10103988:	00800104 	movi	r2,4
1010398c:	38827c26 	beq	r7,r2,10104380 <_dtoa_r+0xd00>
10103990:	00800144 	movi	r2,5
10103994:	3884c41e 	bne	r7,r2,10104ca8 <_dtoa_r+0x1628>
10103998:	00800044 	movi	r2,1
1010399c:	d8800b15 	stw	r2,44(sp)
101039a0:	d8c00517 	ldw	r3,20(sp)
101039a4:	d9002217 	ldw	r4,136(sp)
101039a8:	1907883a 	add	r3,r3,r4
101039ac:	19800044 	addi	r6,r3,1
101039b0:	d8c00c15 	stw	r3,48(sp)
101039b4:	d9800615 	stw	r6,24(sp)
101039b8:	0183a40e 	bge	zero,r6,1010484c <_dtoa_r+0x11cc>
101039bc:	d9800617 	ldw	r6,24(sp)
101039c0:	3021883a 	mov	r16,r6
101039c4:	e0001115 	stw	zero,68(fp)
101039c8:	008005c4 	movi	r2,23
101039cc:	1184c92e 	bgeu	r2,r6,10104cf4 <_dtoa_r+0x1674>
101039d0:	00c00044 	movi	r3,1
101039d4:	00800104 	movi	r2,4
101039d8:	1085883a 	add	r2,r2,r2
101039dc:	11000504 	addi	r4,r2,20
101039e0:	180b883a 	mov	r5,r3
101039e4:	18c00044 	addi	r3,r3,1
101039e8:	313ffb2e 	bgeu	r6,r4,101039d8 <__alt_data_end+0xfffe39d8>
101039ec:	e1401115 	stw	r5,68(fp)
101039f0:	e009883a 	mov	r4,fp
101039f4:	0106bf00 	call	10106bf0 <_Balloc>
101039f8:	d8800715 	stw	r2,28(sp)
101039fc:	e0801015 	stw	r2,64(fp)
10103a00:	00800384 	movi	r2,14
10103a04:	1400f736 	bltu	r2,r16,10103de4 <_dtoa_r+0x764>
10103a08:	8800f626 	beq	r17,zero,10103de4 <_dtoa_r+0x764>
10103a0c:	d9c00517 	ldw	r7,20(sp)
10103a10:	01c39a0e 	bge	zero,r7,1010487c <_dtoa_r+0x11fc>
10103a14:	388003cc 	andi	r2,r7,15
10103a18:	100490fa 	slli	r2,r2,3
10103a1c:	382bd13a 	srai	r21,r7,4
10103a20:	00c40474 	movhi	r3,4113
10103a24:	18c09004 	addi	r3,r3,576
10103a28:	1885883a 	add	r2,r3,r2
10103a2c:	a8c0040c 	andi	r3,r21,16
10103a30:	12400017 	ldw	r9,0(r2)
10103a34:	12000117 	ldw	r8,4(r2)
10103a38:	18037926 	beq	r3,zero,10104820 <_dtoa_r+0x11a0>
10103a3c:	00840474 	movhi	r2,4113
10103a40:	10808604 	addi	r2,r2,536
10103a44:	11800817 	ldw	r6,32(r2)
10103a48:	11c00917 	ldw	r7,36(r2)
10103a4c:	9009883a 	mov	r4,r18
10103a50:	980b883a 	mov	r5,r19
10103a54:	da001715 	stw	r8,92(sp)
10103a58:	da401615 	stw	r9,88(sp)
10103a5c:	010b99c0 	call	1010b99c <__divdf3>
10103a60:	da001717 	ldw	r8,92(sp)
10103a64:	da401617 	ldw	r9,88(sp)
10103a68:	ad4003cc 	andi	r21,r21,15
10103a6c:	040000c4 	movi	r16,3
10103a70:	1023883a 	mov	r17,r2
10103a74:	1829883a 	mov	r20,r3
10103a78:	a8001126 	beq	r21,zero,10103ac0 <_dtoa_r+0x440>
10103a7c:	05c40474 	movhi	r23,4113
10103a80:	bdc08604 	addi	r23,r23,536
10103a84:	4805883a 	mov	r2,r9
10103a88:	4007883a 	mov	r3,r8
10103a8c:	a980004c 	andi	r6,r21,1
10103a90:	1009883a 	mov	r4,r2
10103a94:	a82bd07a 	srai	r21,r21,1
10103a98:	180b883a 	mov	r5,r3
10103a9c:	30000426 	beq	r6,zero,10103ab0 <_dtoa_r+0x430>
10103aa0:	b9800017 	ldw	r6,0(r23)
10103aa4:	b9c00117 	ldw	r7,4(r23)
10103aa8:	84000044 	addi	r16,r16,1
10103aac:	010c5c40 	call	1010c5c4 <__muldf3>
10103ab0:	bdc00204 	addi	r23,r23,8
10103ab4:	a83ff51e 	bne	r21,zero,10103a8c <__alt_data_end+0xfffe3a8c>
10103ab8:	1013883a 	mov	r9,r2
10103abc:	1811883a 	mov	r8,r3
10103ac0:	480d883a 	mov	r6,r9
10103ac4:	400f883a 	mov	r7,r8
10103ac8:	8809883a 	mov	r4,r17
10103acc:	a00b883a 	mov	r5,r20
10103ad0:	010b99c0 	call	1010b99c <__divdf3>
10103ad4:	d8800f15 	stw	r2,60(sp)
10103ad8:	d8c01015 	stw	r3,64(sp)
10103adc:	d8c00e17 	ldw	r3,56(sp)
10103ae0:	18000626 	beq	r3,zero,10103afc <_dtoa_r+0x47c>
10103ae4:	d9000f17 	ldw	r4,60(sp)
10103ae8:	d9401017 	ldw	r5,64(sp)
10103aec:	000d883a 	mov	r6,zero
10103af0:	01cffc34 	movhi	r7,16368
10103af4:	010c4d00 	call	1010c4d0 <__ledf2>
10103af8:	10040b16 	blt	r2,zero,10104b28 <_dtoa_r+0x14a8>
10103afc:	8009883a 	mov	r4,r16
10103b00:	010d7ac0 	call	1010d7ac <__floatsidf>
10103b04:	d9800f17 	ldw	r6,60(sp)
10103b08:	d9c01017 	ldw	r7,64(sp)
10103b0c:	1009883a 	mov	r4,r2
10103b10:	180b883a 	mov	r5,r3
10103b14:	010c5c40 	call	1010c5c4 <__muldf3>
10103b18:	000d883a 	mov	r6,zero
10103b1c:	01d00734 	movhi	r7,16412
10103b20:	1009883a 	mov	r4,r2
10103b24:	180b883a 	mov	r5,r3
10103b28:	010b0f00 	call	1010b0f0 <__adddf3>
10103b2c:	1021883a 	mov	r16,r2
10103b30:	d8800617 	ldw	r2,24(sp)
10103b34:	047f3034 	movhi	r17,64704
10103b38:	1c63883a 	add	r17,r3,r17
10103b3c:	10031826 	beq	r2,zero,101047a0 <_dtoa_r+0x1120>
10103b40:	d8c00517 	ldw	r3,20(sp)
10103b44:	db000617 	ldw	r12,24(sp)
10103b48:	d8c01315 	stw	r3,76(sp)
10103b4c:	d9000b17 	ldw	r4,44(sp)
10103b50:	20038f26 	beq	r4,zero,10104990 <_dtoa_r+0x1310>
10103b54:	60bfffc4 	addi	r2,r12,-1
10103b58:	100490fa 	slli	r2,r2,3
10103b5c:	00c40474 	movhi	r3,4113
10103b60:	18c09004 	addi	r3,r3,576
10103b64:	1885883a 	add	r2,r3,r2
10103b68:	11800017 	ldw	r6,0(r2)
10103b6c:	11c00117 	ldw	r7,4(r2)
10103b70:	d8800717 	ldw	r2,28(sp)
10103b74:	0009883a 	mov	r4,zero
10103b78:	014ff834 	movhi	r5,16352
10103b7c:	db001615 	stw	r12,88(sp)
10103b80:	15c00044 	addi	r23,r2,1
10103b84:	010b99c0 	call	1010b99c <__divdf3>
10103b88:	800d883a 	mov	r6,r16
10103b8c:	880f883a 	mov	r7,r17
10103b90:	1009883a 	mov	r4,r2
10103b94:	180b883a 	mov	r5,r3
10103b98:	010ce300 	call	1010ce30 <__subdf3>
10103b9c:	d9401017 	ldw	r5,64(sp)
10103ba0:	d9000f17 	ldw	r4,60(sp)
10103ba4:	102b883a 	mov	r21,r2
10103ba8:	d8c01215 	stw	r3,72(sp)
10103bac:	010d72c0 	call	1010d72c <__fixdfsi>
10103bb0:	1009883a 	mov	r4,r2
10103bb4:	1029883a 	mov	r20,r2
10103bb8:	010d7ac0 	call	1010d7ac <__floatsidf>
10103bbc:	d9000f17 	ldw	r4,60(sp)
10103bc0:	d9401017 	ldw	r5,64(sp)
10103bc4:	100d883a 	mov	r6,r2
10103bc8:	180f883a 	mov	r7,r3
10103bcc:	010ce300 	call	1010ce30 <__subdf3>
10103bd0:	1823883a 	mov	r17,r3
10103bd4:	d8c00717 	ldw	r3,28(sp)
10103bd8:	d9401217 	ldw	r5,72(sp)
10103bdc:	a2000c04 	addi	r8,r20,48
10103be0:	1021883a 	mov	r16,r2
10103be4:	1a000005 	stb	r8,0(r3)
10103be8:	800d883a 	mov	r6,r16
10103bec:	880f883a 	mov	r7,r17
10103bf0:	a809883a 	mov	r4,r21
10103bf4:	4029883a 	mov	r20,r8
10103bf8:	010c3f40 	call	1010c3f4 <__gedf2>
10103bfc:	00841d16 	blt	zero,r2,10104c74 <_dtoa_r+0x15f4>
10103c00:	800d883a 	mov	r6,r16
10103c04:	880f883a 	mov	r7,r17
10103c08:	0009883a 	mov	r4,zero
10103c0c:	014ffc34 	movhi	r5,16368
10103c10:	010ce300 	call	1010ce30 <__subdf3>
10103c14:	d9401217 	ldw	r5,72(sp)
10103c18:	100d883a 	mov	r6,r2
10103c1c:	180f883a 	mov	r7,r3
10103c20:	a809883a 	mov	r4,r21
10103c24:	010c3f40 	call	1010c3f4 <__gedf2>
10103c28:	db001617 	ldw	r12,88(sp)
10103c2c:	00840e16 	blt	zero,r2,10104c68 <_dtoa_r+0x15e8>
10103c30:	00800044 	movi	r2,1
10103c34:	13006b0e 	bge	r2,r12,10103de4 <_dtoa_r+0x764>
10103c38:	d9000717 	ldw	r4,28(sp)
10103c3c:	dd800f15 	stw	r22,60(sp)
10103c40:	dcc01015 	stw	r19,64(sp)
10103c44:	2319883a 	add	r12,r4,r12
10103c48:	dcc01217 	ldw	r19,72(sp)
10103c4c:	602d883a 	mov	r22,r12
10103c50:	dc801215 	stw	r18,72(sp)
10103c54:	b825883a 	mov	r18,r23
10103c58:	00000906 	br	10103c80 <_dtoa_r+0x600>
10103c5c:	010ce300 	call	1010ce30 <__subdf3>
10103c60:	a80d883a 	mov	r6,r21
10103c64:	980f883a 	mov	r7,r19
10103c68:	1009883a 	mov	r4,r2
10103c6c:	180b883a 	mov	r5,r3
10103c70:	010c4d00 	call	1010c4d0 <__ledf2>
10103c74:	1003e816 	blt	r2,zero,10104c18 <_dtoa_r+0x1598>
10103c78:	b825883a 	mov	r18,r23
10103c7c:	bd83e926 	beq	r23,r22,10104c24 <_dtoa_r+0x15a4>
10103c80:	a809883a 	mov	r4,r21
10103c84:	980b883a 	mov	r5,r19
10103c88:	000d883a 	mov	r6,zero
10103c8c:	01d00934 	movhi	r7,16420
10103c90:	010c5c40 	call	1010c5c4 <__muldf3>
10103c94:	000d883a 	mov	r6,zero
10103c98:	01d00934 	movhi	r7,16420
10103c9c:	8009883a 	mov	r4,r16
10103ca0:	880b883a 	mov	r5,r17
10103ca4:	102b883a 	mov	r21,r2
10103ca8:	1827883a 	mov	r19,r3
10103cac:	010c5c40 	call	1010c5c4 <__muldf3>
10103cb0:	180b883a 	mov	r5,r3
10103cb4:	1009883a 	mov	r4,r2
10103cb8:	1821883a 	mov	r16,r3
10103cbc:	1023883a 	mov	r17,r2
10103cc0:	010d72c0 	call	1010d72c <__fixdfsi>
10103cc4:	1009883a 	mov	r4,r2
10103cc8:	1029883a 	mov	r20,r2
10103ccc:	010d7ac0 	call	1010d7ac <__floatsidf>
10103cd0:	8809883a 	mov	r4,r17
10103cd4:	800b883a 	mov	r5,r16
10103cd8:	100d883a 	mov	r6,r2
10103cdc:	180f883a 	mov	r7,r3
10103ce0:	010ce300 	call	1010ce30 <__subdf3>
10103ce4:	a5000c04 	addi	r20,r20,48
10103ce8:	a80d883a 	mov	r6,r21
10103cec:	980f883a 	mov	r7,r19
10103cf0:	1009883a 	mov	r4,r2
10103cf4:	180b883a 	mov	r5,r3
10103cf8:	95000005 	stb	r20,0(r18)
10103cfc:	1021883a 	mov	r16,r2
10103d00:	1823883a 	mov	r17,r3
10103d04:	010c4d00 	call	1010c4d0 <__ledf2>
10103d08:	bdc00044 	addi	r23,r23,1
10103d0c:	800d883a 	mov	r6,r16
10103d10:	880f883a 	mov	r7,r17
10103d14:	0009883a 	mov	r4,zero
10103d18:	014ffc34 	movhi	r5,16368
10103d1c:	103fcf0e 	bge	r2,zero,10103c5c <__alt_data_end+0xfffe3c5c>
10103d20:	d8c01317 	ldw	r3,76(sp)
10103d24:	d8c00515 	stw	r3,20(sp)
10103d28:	d9400917 	ldw	r5,36(sp)
10103d2c:	e009883a 	mov	r4,fp
10103d30:	0106c980 	call	10106c98 <_Bfree>
10103d34:	d9000517 	ldw	r4,20(sp)
10103d38:	d9802317 	ldw	r6,140(sp)
10103d3c:	d9c02517 	ldw	r7,148(sp)
10103d40:	b8000005 	stb	zero,0(r23)
10103d44:	20800044 	addi	r2,r4,1
10103d48:	30800015 	stw	r2,0(r6)
10103d4c:	3802aa26 	beq	r7,zero,101047f8 <_dtoa_r+0x1178>
10103d50:	3dc00015 	stw	r23,0(r7)
10103d54:	d8800717 	ldw	r2,28(sp)
10103d58:	003e7906 	br	10103740 <__alt_data_end+0xfffe3740>
10103d5c:	00800434 	movhi	r2,16
10103d60:	10bfffc4 	addi	r2,r2,-1
10103d64:	88a2703a 	and	r17,r17,r2
10103d68:	883e851e 	bne	r17,zero,10103780 <__alt_data_end+0xfffe3780>
10103d6c:	00840474 	movhi	r2,4113
10103d70:	10807104 	addi	r2,r2,452
10103d74:	003e8406 	br	10103788 <__alt_data_end+0xfffe3788>
10103d78:	10c00204 	addi	r3,r2,8
10103d7c:	003e8706 	br	1010379c <__alt_data_end+0xfffe379c>
10103d80:	01400434 	movhi	r5,16
10103d84:	297fffc4 	addi	r5,r5,-1
10103d88:	994a703a 	and	r5,r19,r5
10103d8c:	9009883a 	mov	r4,r18
10103d90:	843f0044 	addi	r16,r16,-1023
10103d94:	294ffc34 	orhi	r5,r5,16368
10103d98:	dd800217 	ldw	r22,8(sp)
10103d9c:	d8001115 	stw	zero,68(sp)
10103da0:	003ea506 	br	10103838 <__alt_data_end+0xfffe3838>
10103da4:	00840474 	movhi	r2,4113
10103da8:	10806804 	addi	r2,r2,416
10103dac:	003e6406 	br	10103740 <__alt_data_end+0xfffe3740>
10103db0:	e0001115 	stw	zero,68(fp)
10103db4:	000b883a 	mov	r5,zero
10103db8:	e009883a 	mov	r4,fp
10103dbc:	0106bf00 	call	10106bf0 <_Balloc>
10103dc0:	01bfffc4 	movi	r6,-1
10103dc4:	01c00044 	movi	r7,1
10103dc8:	d8800715 	stw	r2,28(sp)
10103dcc:	d9800c15 	stw	r6,48(sp)
10103dd0:	e0801015 	stw	r2,64(fp)
10103dd4:	d8000315 	stw	zero,12(sp)
10103dd8:	d9c00b15 	stw	r7,44(sp)
10103ddc:	d9800615 	stw	r6,24(sp)
10103de0:	d8002215 	stw	zero,136(sp)
10103de4:	d8800117 	ldw	r2,4(sp)
10103de8:	10008916 	blt	r2,zero,10104010 <_dtoa_r+0x990>
10103dec:	d9000517 	ldw	r4,20(sp)
10103df0:	00c00384 	movi	r3,14
10103df4:	19008616 	blt	r3,r4,10104010 <_dtoa_r+0x990>
10103df8:	200490fa 	slli	r2,r4,3
10103dfc:	00c40474 	movhi	r3,4113
10103e00:	d9802217 	ldw	r6,136(sp)
10103e04:	18c09004 	addi	r3,r3,576
10103e08:	1885883a 	add	r2,r3,r2
10103e0c:	14000017 	ldw	r16,0(r2)
10103e10:	14400117 	ldw	r17,4(r2)
10103e14:	30016316 	blt	r6,zero,101043a4 <_dtoa_r+0xd24>
10103e18:	800d883a 	mov	r6,r16
10103e1c:	880f883a 	mov	r7,r17
10103e20:	9009883a 	mov	r4,r18
10103e24:	980b883a 	mov	r5,r19
10103e28:	010b99c0 	call	1010b99c <__divdf3>
10103e2c:	180b883a 	mov	r5,r3
10103e30:	1009883a 	mov	r4,r2
10103e34:	010d72c0 	call	1010d72c <__fixdfsi>
10103e38:	1009883a 	mov	r4,r2
10103e3c:	102b883a 	mov	r21,r2
10103e40:	010d7ac0 	call	1010d7ac <__floatsidf>
10103e44:	800d883a 	mov	r6,r16
10103e48:	880f883a 	mov	r7,r17
10103e4c:	1009883a 	mov	r4,r2
10103e50:	180b883a 	mov	r5,r3
10103e54:	010c5c40 	call	1010c5c4 <__muldf3>
10103e58:	100d883a 	mov	r6,r2
10103e5c:	180f883a 	mov	r7,r3
10103e60:	9009883a 	mov	r4,r18
10103e64:	980b883a 	mov	r5,r19
10103e68:	010ce300 	call	1010ce30 <__subdf3>
10103e6c:	d9c00717 	ldw	r7,28(sp)
10103e70:	1009883a 	mov	r4,r2
10103e74:	a8800c04 	addi	r2,r21,48
10103e78:	38800005 	stb	r2,0(r7)
10103e7c:	3dc00044 	addi	r23,r7,1
10103e80:	d9c00617 	ldw	r7,24(sp)
10103e84:	01800044 	movi	r6,1
10103e88:	180b883a 	mov	r5,r3
10103e8c:	2005883a 	mov	r2,r4
10103e90:	39803826 	beq	r7,r6,10103f74 <_dtoa_r+0x8f4>
10103e94:	000d883a 	mov	r6,zero
10103e98:	01d00934 	movhi	r7,16420
10103e9c:	010c5c40 	call	1010c5c4 <__muldf3>
10103ea0:	000d883a 	mov	r6,zero
10103ea4:	000f883a 	mov	r7,zero
10103ea8:	1009883a 	mov	r4,r2
10103eac:	180b883a 	mov	r5,r3
10103eb0:	1025883a 	mov	r18,r2
10103eb4:	1827883a 	mov	r19,r3
10103eb8:	010c36c0 	call	1010c36c <__eqdf2>
10103ebc:	103f9a26 	beq	r2,zero,10103d28 <__alt_data_end+0xfffe3d28>
10103ec0:	d9c00617 	ldw	r7,24(sp)
10103ec4:	d8c00717 	ldw	r3,28(sp)
10103ec8:	b829883a 	mov	r20,r23
10103ecc:	38bfffc4 	addi	r2,r7,-1
10103ed0:	18ad883a 	add	r22,r3,r2
10103ed4:	00000a06 	br	10103f00 <_dtoa_r+0x880>
10103ed8:	010c5c40 	call	1010c5c4 <__muldf3>
10103edc:	000d883a 	mov	r6,zero
10103ee0:	000f883a 	mov	r7,zero
10103ee4:	1009883a 	mov	r4,r2
10103ee8:	180b883a 	mov	r5,r3
10103eec:	1025883a 	mov	r18,r2
10103ef0:	1827883a 	mov	r19,r3
10103ef4:	b829883a 	mov	r20,r23
10103ef8:	010c36c0 	call	1010c36c <__eqdf2>
10103efc:	103f8a26 	beq	r2,zero,10103d28 <__alt_data_end+0xfffe3d28>
10103f00:	800d883a 	mov	r6,r16
10103f04:	880f883a 	mov	r7,r17
10103f08:	9009883a 	mov	r4,r18
10103f0c:	980b883a 	mov	r5,r19
10103f10:	010b99c0 	call	1010b99c <__divdf3>
10103f14:	180b883a 	mov	r5,r3
10103f18:	1009883a 	mov	r4,r2
10103f1c:	010d72c0 	call	1010d72c <__fixdfsi>
10103f20:	1009883a 	mov	r4,r2
10103f24:	102b883a 	mov	r21,r2
10103f28:	010d7ac0 	call	1010d7ac <__floatsidf>
10103f2c:	800d883a 	mov	r6,r16
10103f30:	880f883a 	mov	r7,r17
10103f34:	1009883a 	mov	r4,r2
10103f38:	180b883a 	mov	r5,r3
10103f3c:	010c5c40 	call	1010c5c4 <__muldf3>
10103f40:	100d883a 	mov	r6,r2
10103f44:	180f883a 	mov	r7,r3
10103f48:	9009883a 	mov	r4,r18
10103f4c:	980b883a 	mov	r5,r19
10103f50:	010ce300 	call	1010ce30 <__subdf3>
10103f54:	aa000c04 	addi	r8,r21,48
10103f58:	a2000005 	stb	r8,0(r20)
10103f5c:	000d883a 	mov	r6,zero
10103f60:	01d00934 	movhi	r7,16420
10103f64:	1009883a 	mov	r4,r2
10103f68:	180b883a 	mov	r5,r3
10103f6c:	a5c00044 	addi	r23,r20,1
10103f70:	b53fd91e 	bne	r22,r20,10103ed8 <__alt_data_end+0xfffe3ed8>
10103f74:	100d883a 	mov	r6,r2
10103f78:	180f883a 	mov	r7,r3
10103f7c:	1009883a 	mov	r4,r2
10103f80:	180b883a 	mov	r5,r3
10103f84:	010b0f00 	call	1010b0f0 <__adddf3>
10103f88:	100d883a 	mov	r6,r2
10103f8c:	180f883a 	mov	r7,r3
10103f90:	8009883a 	mov	r4,r16
10103f94:	880b883a 	mov	r5,r17
10103f98:	1027883a 	mov	r19,r2
10103f9c:	1825883a 	mov	r18,r3
10103fa0:	010c4d00 	call	1010c4d0 <__ledf2>
10103fa4:	10000816 	blt	r2,zero,10103fc8 <_dtoa_r+0x948>
10103fa8:	980d883a 	mov	r6,r19
10103fac:	900f883a 	mov	r7,r18
10103fb0:	8009883a 	mov	r4,r16
10103fb4:	880b883a 	mov	r5,r17
10103fb8:	010c36c0 	call	1010c36c <__eqdf2>
10103fbc:	103f5a1e 	bne	r2,zero,10103d28 <__alt_data_end+0xfffe3d28>
10103fc0:	ad40004c 	andi	r21,r21,1
10103fc4:	a83f5826 	beq	r21,zero,10103d28 <__alt_data_end+0xfffe3d28>
10103fc8:	bd3fffc3 	ldbu	r20,-1(r23)
10103fcc:	b8bfffc4 	addi	r2,r23,-1
10103fd0:	1007883a 	mov	r3,r2
10103fd4:	01400e44 	movi	r5,57
10103fd8:	d9800717 	ldw	r6,28(sp)
10103fdc:	00000506 	br	10103ff4 <_dtoa_r+0x974>
10103fe0:	18ffffc4 	addi	r3,r3,-1
10103fe4:	11824726 	beq	r2,r6,10104904 <_dtoa_r+0x1284>
10103fe8:	1d000003 	ldbu	r20,0(r3)
10103fec:	102f883a 	mov	r23,r2
10103ff0:	10bfffc4 	addi	r2,r2,-1
10103ff4:	a1003fcc 	andi	r4,r20,255
10103ff8:	2100201c 	xori	r4,r4,128
10103ffc:	213fe004 	addi	r4,r4,-128
10104000:	217ff726 	beq	r4,r5,10103fe0 <__alt_data_end+0xfffe3fe0>
10104004:	a2000044 	addi	r8,r20,1
10104008:	12000005 	stb	r8,0(r2)
1010400c:	003f4606 	br	10103d28 <__alt_data_end+0xfffe3d28>
10104010:	d9000b17 	ldw	r4,44(sp)
10104014:	2000c826 	beq	r4,zero,10104338 <_dtoa_r+0xcb8>
10104018:	d9800317 	ldw	r6,12(sp)
1010401c:	00c00044 	movi	r3,1
10104020:	1980f90e 	bge	r3,r6,10104408 <_dtoa_r+0xd88>
10104024:	d8800617 	ldw	r2,24(sp)
10104028:	d8c00a17 	ldw	r3,40(sp)
1010402c:	157fffc4 	addi	r21,r2,-1
10104030:	1d41f316 	blt	r3,r21,10104800 <_dtoa_r+0x1180>
10104034:	1d6bc83a 	sub	r21,r3,r21
10104038:	d9c00617 	ldw	r7,24(sp)
1010403c:	3802aa16 	blt	r7,zero,10104ae8 <_dtoa_r+0x1468>
10104040:	dd000817 	ldw	r20,32(sp)
10104044:	d8800617 	ldw	r2,24(sp)
10104048:	d8c00817 	ldw	r3,32(sp)
1010404c:	01400044 	movi	r5,1
10104050:	e009883a 	mov	r4,fp
10104054:	1887883a 	add	r3,r3,r2
10104058:	d8c00815 	stw	r3,32(sp)
1010405c:	b0ad883a 	add	r22,r22,r2
10104060:	01070240 	call	10107024 <__i2b>
10104064:	1023883a 	mov	r17,r2
10104068:	a0000826 	beq	r20,zero,1010408c <_dtoa_r+0xa0c>
1010406c:	0580070e 	bge	zero,r22,1010408c <_dtoa_r+0xa0c>
10104070:	a005883a 	mov	r2,r20
10104074:	b500b916 	blt	r22,r20,1010435c <_dtoa_r+0xcdc>
10104078:	d9000817 	ldw	r4,32(sp)
1010407c:	a0a9c83a 	sub	r20,r20,r2
10104080:	b0adc83a 	sub	r22,r22,r2
10104084:	2089c83a 	sub	r4,r4,r2
10104088:	d9000815 	stw	r4,32(sp)
1010408c:	d9800a17 	ldw	r6,40(sp)
10104090:	0181810e 	bge	zero,r6,10104698 <_dtoa_r+0x1018>
10104094:	d9c00b17 	ldw	r7,44(sp)
10104098:	3800b326 	beq	r7,zero,10104368 <_dtoa_r+0xce8>
1010409c:	a800b226 	beq	r21,zero,10104368 <_dtoa_r+0xce8>
101040a0:	880b883a 	mov	r5,r17
101040a4:	a80d883a 	mov	r6,r21
101040a8:	e009883a 	mov	r4,fp
101040ac:	01072ec0 	call	101072ec <__pow5mult>
101040b0:	d9800917 	ldw	r6,36(sp)
101040b4:	100b883a 	mov	r5,r2
101040b8:	e009883a 	mov	r4,fp
101040bc:	1023883a 	mov	r17,r2
101040c0:	01070600 	call	10107060 <__multiply>
101040c4:	1021883a 	mov	r16,r2
101040c8:	d8800a17 	ldw	r2,40(sp)
101040cc:	d9400917 	ldw	r5,36(sp)
101040d0:	e009883a 	mov	r4,fp
101040d4:	1545c83a 	sub	r2,r2,r21
101040d8:	d8800a15 	stw	r2,40(sp)
101040dc:	0106c980 	call	10106c98 <_Bfree>
101040e0:	d8c00a17 	ldw	r3,40(sp)
101040e4:	18009f1e 	bne	r3,zero,10104364 <_dtoa_r+0xce4>
101040e8:	05c00044 	movi	r23,1
101040ec:	e009883a 	mov	r4,fp
101040f0:	b80b883a 	mov	r5,r23
101040f4:	01070240 	call	10107024 <__i2b>
101040f8:	d9000d17 	ldw	r4,52(sp)
101040fc:	102b883a 	mov	r21,r2
10104100:	2000ce26 	beq	r4,zero,1010443c <_dtoa_r+0xdbc>
10104104:	200d883a 	mov	r6,r4
10104108:	100b883a 	mov	r5,r2
1010410c:	e009883a 	mov	r4,fp
10104110:	01072ec0 	call	101072ec <__pow5mult>
10104114:	d9800317 	ldw	r6,12(sp)
10104118:	102b883a 	mov	r21,r2
1010411c:	b981810e 	bge	r23,r6,10104724 <_dtoa_r+0x10a4>
10104120:	0027883a 	mov	r19,zero
10104124:	a8800417 	ldw	r2,16(r21)
10104128:	05c00804 	movi	r23,32
1010412c:	10800104 	addi	r2,r2,4
10104130:	1085883a 	add	r2,r2,r2
10104134:	1085883a 	add	r2,r2,r2
10104138:	a885883a 	add	r2,r21,r2
1010413c:	11000017 	ldw	r4,0(r2)
10104140:	0106f0c0 	call	10106f0c <__hi0bits>
10104144:	b885c83a 	sub	r2,r23,r2
10104148:	1585883a 	add	r2,r2,r22
1010414c:	108007cc 	andi	r2,r2,31
10104150:	1000b326 	beq	r2,zero,10104420 <_dtoa_r+0xda0>
10104154:	00c00804 	movi	r3,32
10104158:	1887c83a 	sub	r3,r3,r2
1010415c:	01000104 	movi	r4,4
10104160:	20c2cd0e 	bge	r4,r3,10104c98 <_dtoa_r+0x1618>
10104164:	00c00704 	movi	r3,28
10104168:	1885c83a 	sub	r2,r3,r2
1010416c:	d8c00817 	ldw	r3,32(sp)
10104170:	a0a9883a 	add	r20,r20,r2
10104174:	b0ad883a 	add	r22,r22,r2
10104178:	1887883a 	add	r3,r3,r2
1010417c:	d8c00815 	stw	r3,32(sp)
10104180:	d9800817 	ldw	r6,32(sp)
10104184:	0180040e 	bge	zero,r6,10104198 <_dtoa_r+0xb18>
10104188:	800b883a 	mov	r5,r16
1010418c:	e009883a 	mov	r4,fp
10104190:	010742c0 	call	1010742c <__lshift>
10104194:	1021883a 	mov	r16,r2
10104198:	0580050e 	bge	zero,r22,101041b0 <_dtoa_r+0xb30>
1010419c:	a80b883a 	mov	r5,r21
101041a0:	b00d883a 	mov	r6,r22
101041a4:	e009883a 	mov	r4,fp
101041a8:	010742c0 	call	1010742c <__lshift>
101041ac:	102b883a 	mov	r21,r2
101041b0:	d9c00e17 	ldw	r7,56(sp)
101041b4:	3801211e 	bne	r7,zero,1010463c <_dtoa_r+0xfbc>
101041b8:	d9800617 	ldw	r6,24(sp)
101041bc:	0181380e 	bge	zero,r6,101046a0 <_dtoa_r+0x1020>
101041c0:	d8c00b17 	ldw	r3,44(sp)
101041c4:	1800ab1e 	bne	r3,zero,10104474 <_dtoa_r+0xdf4>
101041c8:	dc800717 	ldw	r18,28(sp)
101041cc:	dcc00617 	ldw	r19,24(sp)
101041d0:	9029883a 	mov	r20,r18
101041d4:	00000206 	br	101041e0 <_dtoa_r+0xb60>
101041d8:	0106cc00 	call	10106cc0 <__multadd>
101041dc:	1021883a 	mov	r16,r2
101041e0:	a80b883a 	mov	r5,r21
101041e4:	8009883a 	mov	r4,r16
101041e8:	01034580 	call	10103458 <quorem>
101041ec:	10800c04 	addi	r2,r2,48
101041f0:	90800005 	stb	r2,0(r18)
101041f4:	94800044 	addi	r18,r18,1
101041f8:	9507c83a 	sub	r3,r18,r20
101041fc:	000f883a 	mov	r7,zero
10104200:	01800284 	movi	r6,10
10104204:	800b883a 	mov	r5,r16
10104208:	e009883a 	mov	r4,fp
1010420c:	1cfff216 	blt	r3,r19,101041d8 <__alt_data_end+0xfffe41d8>
10104210:	1011883a 	mov	r8,r2
10104214:	d8800617 	ldw	r2,24(sp)
10104218:	0082370e 	bge	zero,r2,10104af8 <_dtoa_r+0x1478>
1010421c:	d9000717 	ldw	r4,28(sp)
10104220:	0025883a 	mov	r18,zero
10104224:	20af883a 	add	r23,r4,r2
10104228:	01800044 	movi	r6,1
1010422c:	800b883a 	mov	r5,r16
10104230:	e009883a 	mov	r4,fp
10104234:	da001715 	stw	r8,92(sp)
10104238:	010742c0 	call	1010742c <__lshift>
1010423c:	a80b883a 	mov	r5,r21
10104240:	1009883a 	mov	r4,r2
10104244:	d8800915 	stw	r2,36(sp)
10104248:	01075740 	call	10107574 <__mcmp>
1010424c:	da001717 	ldw	r8,92(sp)
10104250:	0081800e 	bge	zero,r2,10104854 <_dtoa_r+0x11d4>
10104254:	b93fffc3 	ldbu	r4,-1(r23)
10104258:	b8bfffc4 	addi	r2,r23,-1
1010425c:	1007883a 	mov	r3,r2
10104260:	01800e44 	movi	r6,57
10104264:	d9c00717 	ldw	r7,28(sp)
10104268:	00000506 	br	10104280 <_dtoa_r+0xc00>
1010426c:	18ffffc4 	addi	r3,r3,-1
10104270:	11c12326 	beq	r2,r7,10104700 <_dtoa_r+0x1080>
10104274:	19000003 	ldbu	r4,0(r3)
10104278:	102f883a 	mov	r23,r2
1010427c:	10bfffc4 	addi	r2,r2,-1
10104280:	21403fcc 	andi	r5,r4,255
10104284:	2940201c 	xori	r5,r5,128
10104288:	297fe004 	addi	r5,r5,-128
1010428c:	29bff726 	beq	r5,r6,1010426c <__alt_data_end+0xfffe426c>
10104290:	21000044 	addi	r4,r4,1
10104294:	11000005 	stb	r4,0(r2)
10104298:	a80b883a 	mov	r5,r21
1010429c:	e009883a 	mov	r4,fp
101042a0:	0106c980 	call	10106c98 <_Bfree>
101042a4:	883ea026 	beq	r17,zero,10103d28 <__alt_data_end+0xfffe3d28>
101042a8:	90000426 	beq	r18,zero,101042bc <_dtoa_r+0xc3c>
101042ac:	94400326 	beq	r18,r17,101042bc <_dtoa_r+0xc3c>
101042b0:	900b883a 	mov	r5,r18
101042b4:	e009883a 	mov	r4,fp
101042b8:	0106c980 	call	10106c98 <_Bfree>
101042bc:	880b883a 	mov	r5,r17
101042c0:	e009883a 	mov	r4,fp
101042c4:	0106c980 	call	10106c98 <_Bfree>
101042c8:	003e9706 	br	10103d28 <__alt_data_end+0xfffe3d28>
101042cc:	01800044 	movi	r6,1
101042d0:	d9800e15 	stw	r6,56(sp)
101042d4:	003d9606 	br	10103930 <__alt_data_end+0xfffe3930>
101042d8:	d8800817 	ldw	r2,32(sp)
101042dc:	d8c00517 	ldw	r3,20(sp)
101042e0:	d8000d15 	stw	zero,52(sp)
101042e4:	10c5c83a 	sub	r2,r2,r3
101042e8:	00c9c83a 	sub	r4,zero,r3
101042ec:	d8800815 	stw	r2,32(sp)
101042f0:	d9000a15 	stw	r4,40(sp)
101042f4:	003d9706 	br	10103954 <__alt_data_end+0xfffe3954>
101042f8:	05adc83a 	sub	r22,zero,r22
101042fc:	dd800815 	stw	r22,32(sp)
10104300:	002d883a 	mov	r22,zero
10104304:	003d8e06 	br	10103940 <__alt_data_end+0xfffe3940>
10104308:	d9000517 	ldw	r4,20(sp)
1010430c:	010d7ac0 	call	1010d7ac <__floatsidf>
10104310:	100d883a 	mov	r6,r2
10104314:	180f883a 	mov	r7,r3
10104318:	a009883a 	mov	r4,r20
1010431c:	880b883a 	mov	r5,r17
10104320:	010c36c0 	call	1010c36c <__eqdf2>
10104324:	103d7126 	beq	r2,zero,101038ec <__alt_data_end+0xfffe38ec>
10104328:	d9c00517 	ldw	r7,20(sp)
1010432c:	39ffffc4 	addi	r7,r7,-1
10104330:	d9c00515 	stw	r7,20(sp)
10104334:	003d6d06 	br	101038ec <__alt_data_end+0xfffe38ec>
10104338:	dd400a17 	ldw	r21,40(sp)
1010433c:	dd000817 	ldw	r20,32(sp)
10104340:	0023883a 	mov	r17,zero
10104344:	003f4806 	br	10104068 <__alt_data_end+0xfffe4068>
10104348:	10e3c83a 	sub	r17,r2,r3
1010434c:	9448983a 	sll	r4,r18,r17
10104350:	003d3206 	br	1010381c <__alt_data_end+0xfffe381c>
10104354:	d8000e15 	stw	zero,56(sp)
10104358:	003d7506 	br	10103930 <__alt_data_end+0xfffe3930>
1010435c:	b005883a 	mov	r2,r22
10104360:	003f4506 	br	10104078 <__alt_data_end+0xfffe4078>
10104364:	dc000915 	stw	r16,36(sp)
10104368:	d9800a17 	ldw	r6,40(sp)
1010436c:	d9400917 	ldw	r5,36(sp)
10104370:	e009883a 	mov	r4,fp
10104374:	01072ec0 	call	101072ec <__pow5mult>
10104378:	1021883a 	mov	r16,r2
1010437c:	003f5a06 	br	101040e8 <__alt_data_end+0xfffe40e8>
10104380:	01c00044 	movi	r7,1
10104384:	d9c00b15 	stw	r7,44(sp)
10104388:	d8802217 	ldw	r2,136(sp)
1010438c:	0081280e 	bge	zero,r2,10104830 <_dtoa_r+0x11b0>
10104390:	100d883a 	mov	r6,r2
10104394:	1021883a 	mov	r16,r2
10104398:	d8800c15 	stw	r2,48(sp)
1010439c:	d8800615 	stw	r2,24(sp)
101043a0:	003d8806 	br	101039c4 <__alt_data_end+0xfffe39c4>
101043a4:	d8800617 	ldw	r2,24(sp)
101043a8:	00be9b16 	blt	zero,r2,10103e18 <__alt_data_end+0xfffe3e18>
101043ac:	10010f1e 	bne	r2,zero,101047ec <_dtoa_r+0x116c>
101043b0:	880b883a 	mov	r5,r17
101043b4:	000d883a 	mov	r6,zero
101043b8:	01d00534 	movhi	r7,16404
101043bc:	8009883a 	mov	r4,r16
101043c0:	010c5c40 	call	1010c5c4 <__muldf3>
101043c4:	900d883a 	mov	r6,r18
101043c8:	980f883a 	mov	r7,r19
101043cc:	1009883a 	mov	r4,r2
101043d0:	180b883a 	mov	r5,r3
101043d4:	010c3f40 	call	1010c3f4 <__gedf2>
101043d8:	002b883a 	mov	r21,zero
101043dc:	0023883a 	mov	r17,zero
101043e0:	1000bf16 	blt	r2,zero,101046e0 <_dtoa_r+0x1060>
101043e4:	d9802217 	ldw	r6,136(sp)
101043e8:	ddc00717 	ldw	r23,28(sp)
101043ec:	018c303a 	nor	r6,zero,r6
101043f0:	d9800515 	stw	r6,20(sp)
101043f4:	a80b883a 	mov	r5,r21
101043f8:	e009883a 	mov	r4,fp
101043fc:	0106c980 	call	10106c98 <_Bfree>
10104400:	883e4926 	beq	r17,zero,10103d28 <__alt_data_end+0xfffe3d28>
10104404:	003fad06 	br	101042bc <__alt_data_end+0xfffe42bc>
10104408:	d9c01117 	ldw	r7,68(sp)
1010440c:	3801bc26 	beq	r7,zero,10104b00 <_dtoa_r+0x1480>
10104410:	10810cc4 	addi	r2,r2,1075
10104414:	dd400a17 	ldw	r21,40(sp)
10104418:	dd000817 	ldw	r20,32(sp)
1010441c:	003f0a06 	br	10104048 <__alt_data_end+0xfffe4048>
10104420:	00800704 	movi	r2,28
10104424:	d9000817 	ldw	r4,32(sp)
10104428:	a0a9883a 	add	r20,r20,r2
1010442c:	b0ad883a 	add	r22,r22,r2
10104430:	2089883a 	add	r4,r4,r2
10104434:	d9000815 	stw	r4,32(sp)
10104438:	003f5106 	br	10104180 <__alt_data_end+0xfffe4180>
1010443c:	d8c00317 	ldw	r3,12(sp)
10104440:	b8c1fc0e 	bge	r23,r3,10104c34 <_dtoa_r+0x15b4>
10104444:	0027883a 	mov	r19,zero
10104448:	b805883a 	mov	r2,r23
1010444c:	003f3e06 	br	10104148 <__alt_data_end+0xfffe4148>
10104450:	880b883a 	mov	r5,r17
10104454:	e009883a 	mov	r4,fp
10104458:	000f883a 	mov	r7,zero
1010445c:	01800284 	movi	r6,10
10104460:	0106cc00 	call	10106cc0 <__multadd>
10104464:	d9000c17 	ldw	r4,48(sp)
10104468:	1023883a 	mov	r17,r2
1010446c:	0102040e 	bge	zero,r4,10104c80 <_dtoa_r+0x1600>
10104470:	d9000615 	stw	r4,24(sp)
10104474:	0500050e 	bge	zero,r20,1010448c <_dtoa_r+0xe0c>
10104478:	880b883a 	mov	r5,r17
1010447c:	a00d883a 	mov	r6,r20
10104480:	e009883a 	mov	r4,fp
10104484:	010742c0 	call	1010742c <__lshift>
10104488:	1023883a 	mov	r17,r2
1010448c:	9801241e 	bne	r19,zero,10104920 <_dtoa_r+0x12a0>
10104490:	8829883a 	mov	r20,r17
10104494:	d9000617 	ldw	r4,24(sp)
10104498:	dcc00717 	ldw	r19,28(sp)
1010449c:	9480004c 	andi	r18,r18,1
101044a0:	20bfffc4 	addi	r2,r4,-1
101044a4:	9885883a 	add	r2,r19,r2
101044a8:	d8800415 	stw	r2,16(sp)
101044ac:	dc800615 	stw	r18,24(sp)
101044b0:	a80b883a 	mov	r5,r21
101044b4:	8009883a 	mov	r4,r16
101044b8:	01034580 	call	10103458 <quorem>
101044bc:	880b883a 	mov	r5,r17
101044c0:	8009883a 	mov	r4,r16
101044c4:	102f883a 	mov	r23,r2
101044c8:	01075740 	call	10107574 <__mcmp>
101044cc:	a80b883a 	mov	r5,r21
101044d0:	a00d883a 	mov	r6,r20
101044d4:	e009883a 	mov	r4,fp
101044d8:	102d883a 	mov	r22,r2
101044dc:	01075d40 	call	101075d4 <__mdiff>
101044e0:	1007883a 	mov	r3,r2
101044e4:	10800317 	ldw	r2,12(r2)
101044e8:	bc800c04 	addi	r18,r23,48
101044ec:	180b883a 	mov	r5,r3
101044f0:	10004e1e 	bne	r2,zero,1010462c <_dtoa_r+0xfac>
101044f4:	8009883a 	mov	r4,r16
101044f8:	d8c01615 	stw	r3,88(sp)
101044fc:	01075740 	call	10107574 <__mcmp>
10104500:	d8c01617 	ldw	r3,88(sp)
10104504:	e009883a 	mov	r4,fp
10104508:	d8801615 	stw	r2,88(sp)
1010450c:	180b883a 	mov	r5,r3
10104510:	0106c980 	call	10106c98 <_Bfree>
10104514:	d8801617 	ldw	r2,88(sp)
10104518:	1000041e 	bne	r2,zero,1010452c <_dtoa_r+0xeac>
1010451c:	d9800317 	ldw	r6,12(sp)
10104520:	3000021e 	bne	r6,zero,1010452c <_dtoa_r+0xeac>
10104524:	d8c00617 	ldw	r3,24(sp)
10104528:	18003726 	beq	r3,zero,10104608 <_dtoa_r+0xf88>
1010452c:	b0002016 	blt	r22,zero,101045b0 <_dtoa_r+0xf30>
10104530:	b000041e 	bne	r22,zero,10104544 <_dtoa_r+0xec4>
10104534:	d9000317 	ldw	r4,12(sp)
10104538:	2000021e 	bne	r4,zero,10104544 <_dtoa_r+0xec4>
1010453c:	d8c00617 	ldw	r3,24(sp)
10104540:	18001b26 	beq	r3,zero,101045b0 <_dtoa_r+0xf30>
10104544:	00810716 	blt	zero,r2,10104964 <_dtoa_r+0x12e4>
10104548:	d8c00417 	ldw	r3,16(sp)
1010454c:	9d800044 	addi	r22,r19,1
10104550:	9c800005 	stb	r18,0(r19)
10104554:	b02f883a 	mov	r23,r22
10104558:	98c10626 	beq	r19,r3,10104974 <_dtoa_r+0x12f4>
1010455c:	800b883a 	mov	r5,r16
10104560:	000f883a 	mov	r7,zero
10104564:	01800284 	movi	r6,10
10104568:	e009883a 	mov	r4,fp
1010456c:	0106cc00 	call	10106cc0 <__multadd>
10104570:	1021883a 	mov	r16,r2
10104574:	000f883a 	mov	r7,zero
10104578:	01800284 	movi	r6,10
1010457c:	880b883a 	mov	r5,r17
10104580:	e009883a 	mov	r4,fp
10104584:	8d002526 	beq	r17,r20,1010461c <_dtoa_r+0xf9c>
10104588:	0106cc00 	call	10106cc0 <__multadd>
1010458c:	a00b883a 	mov	r5,r20
10104590:	000f883a 	mov	r7,zero
10104594:	01800284 	movi	r6,10
10104598:	e009883a 	mov	r4,fp
1010459c:	1023883a 	mov	r17,r2
101045a0:	0106cc00 	call	10106cc0 <__multadd>
101045a4:	1029883a 	mov	r20,r2
101045a8:	b027883a 	mov	r19,r22
101045ac:	003fc006 	br	101044b0 <__alt_data_end+0xfffe44b0>
101045b0:	9011883a 	mov	r8,r18
101045b4:	00800e0e 	bge	zero,r2,101045f0 <_dtoa_r+0xf70>
101045b8:	800b883a 	mov	r5,r16
101045bc:	01800044 	movi	r6,1
101045c0:	e009883a 	mov	r4,fp
101045c4:	da001715 	stw	r8,92(sp)
101045c8:	010742c0 	call	1010742c <__lshift>
101045cc:	a80b883a 	mov	r5,r21
101045d0:	1009883a 	mov	r4,r2
101045d4:	1021883a 	mov	r16,r2
101045d8:	01075740 	call	10107574 <__mcmp>
101045dc:	da001717 	ldw	r8,92(sp)
101045e0:	0081960e 	bge	zero,r2,10104c3c <_dtoa_r+0x15bc>
101045e4:	00800e44 	movi	r2,57
101045e8:	40817026 	beq	r8,r2,10104bac <_dtoa_r+0x152c>
101045ec:	ba000c44 	addi	r8,r23,49
101045f0:	8825883a 	mov	r18,r17
101045f4:	9dc00044 	addi	r23,r19,1
101045f8:	9a000005 	stb	r8,0(r19)
101045fc:	a023883a 	mov	r17,r20
10104600:	dc000915 	stw	r16,36(sp)
10104604:	003f2406 	br	10104298 <__alt_data_end+0xfffe4298>
10104608:	00800e44 	movi	r2,57
1010460c:	9011883a 	mov	r8,r18
10104610:	90816626 	beq	r18,r2,10104bac <_dtoa_r+0x152c>
10104614:	05bff516 	blt	zero,r22,101045ec <__alt_data_end+0xfffe45ec>
10104618:	003ff506 	br	101045f0 <__alt_data_end+0xfffe45f0>
1010461c:	0106cc00 	call	10106cc0 <__multadd>
10104620:	1023883a 	mov	r17,r2
10104624:	1029883a 	mov	r20,r2
10104628:	003fdf06 	br	101045a8 <__alt_data_end+0xfffe45a8>
1010462c:	e009883a 	mov	r4,fp
10104630:	0106c980 	call	10106c98 <_Bfree>
10104634:	00800044 	movi	r2,1
10104638:	003fbc06 	br	1010452c <__alt_data_end+0xfffe452c>
1010463c:	a80b883a 	mov	r5,r21
10104640:	8009883a 	mov	r4,r16
10104644:	01075740 	call	10107574 <__mcmp>
10104648:	103edb0e 	bge	r2,zero,101041b8 <__alt_data_end+0xfffe41b8>
1010464c:	800b883a 	mov	r5,r16
10104650:	000f883a 	mov	r7,zero
10104654:	01800284 	movi	r6,10
10104658:	e009883a 	mov	r4,fp
1010465c:	0106cc00 	call	10106cc0 <__multadd>
10104660:	1021883a 	mov	r16,r2
10104664:	d8800517 	ldw	r2,20(sp)
10104668:	d8c00b17 	ldw	r3,44(sp)
1010466c:	10bfffc4 	addi	r2,r2,-1
10104670:	d8800515 	stw	r2,20(sp)
10104674:	183f761e 	bne	r3,zero,10104450 <__alt_data_end+0xfffe4450>
10104678:	d9000c17 	ldw	r4,48(sp)
1010467c:	0101730e 	bge	zero,r4,10104c4c <_dtoa_r+0x15cc>
10104680:	d9000615 	stw	r4,24(sp)
10104684:	003ed006 	br	101041c8 <__alt_data_end+0xfffe41c8>
10104688:	00800084 	movi	r2,2
1010468c:	3081861e 	bne	r6,r2,10104ca8 <_dtoa_r+0x1628>
10104690:	d8000b15 	stw	zero,44(sp)
10104694:	003f3c06 	br	10104388 <__alt_data_end+0xfffe4388>
10104698:	dc000917 	ldw	r16,36(sp)
1010469c:	003e9206 	br	101040e8 <__alt_data_end+0xfffe40e8>
101046a0:	d9c00317 	ldw	r7,12(sp)
101046a4:	00800084 	movi	r2,2
101046a8:	11fec50e 	bge	r2,r7,101041c0 <__alt_data_end+0xfffe41c0>
101046ac:	d9000617 	ldw	r4,24(sp)
101046b0:	20013c1e 	bne	r4,zero,10104ba4 <_dtoa_r+0x1524>
101046b4:	a80b883a 	mov	r5,r21
101046b8:	000f883a 	mov	r7,zero
101046bc:	01800144 	movi	r6,5
101046c0:	e009883a 	mov	r4,fp
101046c4:	0106cc00 	call	10106cc0 <__multadd>
101046c8:	100b883a 	mov	r5,r2
101046cc:	8009883a 	mov	r4,r16
101046d0:	102b883a 	mov	r21,r2
101046d4:	01075740 	call	10107574 <__mcmp>
101046d8:	dc000915 	stw	r16,36(sp)
101046dc:	00bf410e 	bge	zero,r2,101043e4 <__alt_data_end+0xfffe43e4>
101046e0:	d9c00717 	ldw	r7,28(sp)
101046e4:	00800c44 	movi	r2,49
101046e8:	38800005 	stb	r2,0(r7)
101046ec:	d8800517 	ldw	r2,20(sp)
101046f0:	3dc00044 	addi	r23,r7,1
101046f4:	10800044 	addi	r2,r2,1
101046f8:	d8800515 	stw	r2,20(sp)
101046fc:	003f3d06 	br	101043f4 <__alt_data_end+0xfffe43f4>
10104700:	d9800517 	ldw	r6,20(sp)
10104704:	d9c00717 	ldw	r7,28(sp)
10104708:	00800c44 	movi	r2,49
1010470c:	31800044 	addi	r6,r6,1
10104710:	d9800515 	stw	r6,20(sp)
10104714:	38800005 	stb	r2,0(r7)
10104718:	003edf06 	br	10104298 <__alt_data_end+0xfffe4298>
1010471c:	d8000b15 	stw	zero,44(sp)
10104720:	003c9f06 	br	101039a0 <__alt_data_end+0xfffe39a0>
10104724:	903e7e1e 	bne	r18,zero,10104120 <__alt_data_end+0xfffe4120>
10104728:	00800434 	movhi	r2,16
1010472c:	10bfffc4 	addi	r2,r2,-1
10104730:	9884703a 	and	r2,r19,r2
10104734:	1000ea1e 	bne	r2,zero,10104ae0 <_dtoa_r+0x1460>
10104738:	9cdffc2c 	andhi	r19,r19,32752
1010473c:	9800e826 	beq	r19,zero,10104ae0 <_dtoa_r+0x1460>
10104740:	d9c00817 	ldw	r7,32(sp)
10104744:	b5800044 	addi	r22,r22,1
10104748:	04c00044 	movi	r19,1
1010474c:	39c00044 	addi	r7,r7,1
10104750:	d9c00815 	stw	r7,32(sp)
10104754:	d8800d17 	ldw	r2,52(sp)
10104758:	103e721e 	bne	r2,zero,10104124 <__alt_data_end+0xfffe4124>
1010475c:	00800044 	movi	r2,1
10104760:	003e7906 	br	10104148 <__alt_data_end+0xfffe4148>
10104764:	8009883a 	mov	r4,r16
10104768:	010d7ac0 	call	1010d7ac <__floatsidf>
1010476c:	d9800f17 	ldw	r6,60(sp)
10104770:	d9c01017 	ldw	r7,64(sp)
10104774:	1009883a 	mov	r4,r2
10104778:	180b883a 	mov	r5,r3
1010477c:	010c5c40 	call	1010c5c4 <__muldf3>
10104780:	000d883a 	mov	r6,zero
10104784:	01d00734 	movhi	r7,16412
10104788:	1009883a 	mov	r4,r2
1010478c:	180b883a 	mov	r5,r3
10104790:	010b0f00 	call	1010b0f0 <__adddf3>
10104794:	047f3034 	movhi	r17,64704
10104798:	1021883a 	mov	r16,r2
1010479c:	1c63883a 	add	r17,r3,r17
101047a0:	d9000f17 	ldw	r4,60(sp)
101047a4:	d9401017 	ldw	r5,64(sp)
101047a8:	000d883a 	mov	r6,zero
101047ac:	01d00534 	movhi	r7,16404
101047b0:	010ce300 	call	1010ce30 <__subdf3>
101047b4:	800d883a 	mov	r6,r16
101047b8:	880f883a 	mov	r7,r17
101047bc:	1009883a 	mov	r4,r2
101047c0:	180b883a 	mov	r5,r3
101047c4:	102b883a 	mov	r21,r2
101047c8:	1829883a 	mov	r20,r3
101047cc:	010c3f40 	call	1010c3f4 <__gedf2>
101047d0:	00806c16 	blt	zero,r2,10104984 <_dtoa_r+0x1304>
101047d4:	89e0003c 	xorhi	r7,r17,32768
101047d8:	800d883a 	mov	r6,r16
101047dc:	a809883a 	mov	r4,r21
101047e0:	a00b883a 	mov	r5,r20
101047e4:	010c4d00 	call	1010c4d0 <__ledf2>
101047e8:	103d7e0e 	bge	r2,zero,10103de4 <__alt_data_end+0xfffe3de4>
101047ec:	002b883a 	mov	r21,zero
101047f0:	0023883a 	mov	r17,zero
101047f4:	003efb06 	br	101043e4 <__alt_data_end+0xfffe43e4>
101047f8:	d8800717 	ldw	r2,28(sp)
101047fc:	003bd006 	br	10103740 <__alt_data_end+0xfffe3740>
10104800:	d9000a17 	ldw	r4,40(sp)
10104804:	d9800d17 	ldw	r6,52(sp)
10104808:	dd400a15 	stw	r21,40(sp)
1010480c:	a905c83a 	sub	r2,r21,r4
10104810:	308d883a 	add	r6,r6,r2
10104814:	d9800d15 	stw	r6,52(sp)
10104818:	002b883a 	mov	r21,zero
1010481c:	003e0606 	br	10104038 <__alt_data_end+0xfffe4038>
10104820:	9023883a 	mov	r17,r18
10104824:	9829883a 	mov	r20,r19
10104828:	04000084 	movi	r16,2
1010482c:	003c9206 	br	10103a78 <__alt_data_end+0xfffe3a78>
10104830:	04000044 	movi	r16,1
10104834:	dc000c15 	stw	r16,48(sp)
10104838:	dc000615 	stw	r16,24(sp)
1010483c:	dc002215 	stw	r16,136(sp)
10104840:	e0001115 	stw	zero,68(fp)
10104844:	000b883a 	mov	r5,zero
10104848:	003c6906 	br	101039f0 <__alt_data_end+0xfffe39f0>
1010484c:	3021883a 	mov	r16,r6
10104850:	003ffb06 	br	10104840 <__alt_data_end+0xfffe4840>
10104854:	1000021e 	bne	r2,zero,10104860 <_dtoa_r+0x11e0>
10104858:	4200004c 	andi	r8,r8,1
1010485c:	403e7d1e 	bne	r8,zero,10104254 <__alt_data_end+0xfffe4254>
10104860:	01000c04 	movi	r4,48
10104864:	00000106 	br	1010486c <_dtoa_r+0x11ec>
10104868:	102f883a 	mov	r23,r2
1010486c:	b8bfffc4 	addi	r2,r23,-1
10104870:	10c00007 	ldb	r3,0(r2)
10104874:	193ffc26 	beq	r3,r4,10104868 <__alt_data_end+0xfffe4868>
10104878:	003e8706 	br	10104298 <__alt_data_end+0xfffe4298>
1010487c:	d8800517 	ldw	r2,20(sp)
10104880:	00a3c83a 	sub	r17,zero,r2
10104884:	8800a426 	beq	r17,zero,10104b18 <_dtoa_r+0x1498>
10104888:	888003cc 	andi	r2,r17,15
1010488c:	100490fa 	slli	r2,r2,3
10104890:	00c40474 	movhi	r3,4113
10104894:	18c09004 	addi	r3,r3,576
10104898:	1885883a 	add	r2,r3,r2
1010489c:	11800017 	ldw	r6,0(r2)
101048a0:	11c00117 	ldw	r7,4(r2)
101048a4:	9009883a 	mov	r4,r18
101048a8:	980b883a 	mov	r5,r19
101048ac:	8823d13a 	srai	r17,r17,4
101048b0:	010c5c40 	call	1010c5c4 <__muldf3>
101048b4:	d8800f15 	stw	r2,60(sp)
101048b8:	d8c01015 	stw	r3,64(sp)
101048bc:	8800e826 	beq	r17,zero,10104c60 <_dtoa_r+0x15e0>
101048c0:	05040474 	movhi	r20,4113
101048c4:	a5008604 	addi	r20,r20,536
101048c8:	04000084 	movi	r16,2
101048cc:	8980004c 	andi	r6,r17,1
101048d0:	1009883a 	mov	r4,r2
101048d4:	8823d07a 	srai	r17,r17,1
101048d8:	180b883a 	mov	r5,r3
101048dc:	30000426 	beq	r6,zero,101048f0 <_dtoa_r+0x1270>
101048e0:	a1800017 	ldw	r6,0(r20)
101048e4:	a1c00117 	ldw	r7,4(r20)
101048e8:	84000044 	addi	r16,r16,1
101048ec:	010c5c40 	call	1010c5c4 <__muldf3>
101048f0:	a5000204 	addi	r20,r20,8
101048f4:	883ff51e 	bne	r17,zero,101048cc <__alt_data_end+0xfffe48cc>
101048f8:	d8800f15 	stw	r2,60(sp)
101048fc:	d8c01015 	stw	r3,64(sp)
10104900:	003c7606 	br	10103adc <__alt_data_end+0xfffe3adc>
10104904:	00c00c04 	movi	r3,48
10104908:	10c00005 	stb	r3,0(r2)
1010490c:	d8c00517 	ldw	r3,20(sp)
10104910:	bd3fffc3 	ldbu	r20,-1(r23)
10104914:	18c00044 	addi	r3,r3,1
10104918:	d8c00515 	stw	r3,20(sp)
1010491c:	003db906 	br	10104004 <__alt_data_end+0xfffe4004>
10104920:	89400117 	ldw	r5,4(r17)
10104924:	e009883a 	mov	r4,fp
10104928:	0106bf00 	call	10106bf0 <_Balloc>
1010492c:	89800417 	ldw	r6,16(r17)
10104930:	89400304 	addi	r5,r17,12
10104934:	11000304 	addi	r4,r2,12
10104938:	31800084 	addi	r6,r6,2
1010493c:	318d883a 	add	r6,r6,r6
10104940:	318d883a 	add	r6,r6,r6
10104944:	1027883a 	mov	r19,r2
10104948:	0100c300 	call	10100c30 <memcpy>
1010494c:	01800044 	movi	r6,1
10104950:	980b883a 	mov	r5,r19
10104954:	e009883a 	mov	r4,fp
10104958:	010742c0 	call	1010742c <__lshift>
1010495c:	1029883a 	mov	r20,r2
10104960:	003ecc06 	br	10104494 <__alt_data_end+0xfffe4494>
10104964:	00800e44 	movi	r2,57
10104968:	90809026 	beq	r18,r2,10104bac <_dtoa_r+0x152c>
1010496c:	92000044 	addi	r8,r18,1
10104970:	003f1f06 	br	101045f0 <__alt_data_end+0xfffe45f0>
10104974:	9011883a 	mov	r8,r18
10104978:	8825883a 	mov	r18,r17
1010497c:	a023883a 	mov	r17,r20
10104980:	003e2906 	br	10104228 <__alt_data_end+0xfffe4228>
10104984:	002b883a 	mov	r21,zero
10104988:	0023883a 	mov	r17,zero
1010498c:	003f5406 	br	101046e0 <__alt_data_end+0xfffe46e0>
10104990:	61bfffc4 	addi	r6,r12,-1
10104994:	300490fa 	slli	r2,r6,3
10104998:	00c40474 	movhi	r3,4113
1010499c:	18c09004 	addi	r3,r3,576
101049a0:	1885883a 	add	r2,r3,r2
101049a4:	11000017 	ldw	r4,0(r2)
101049a8:	11400117 	ldw	r5,4(r2)
101049ac:	d8800717 	ldw	r2,28(sp)
101049b0:	880f883a 	mov	r7,r17
101049b4:	d9801215 	stw	r6,72(sp)
101049b8:	800d883a 	mov	r6,r16
101049bc:	db001615 	stw	r12,88(sp)
101049c0:	15c00044 	addi	r23,r2,1
101049c4:	010c5c40 	call	1010c5c4 <__muldf3>
101049c8:	d9401017 	ldw	r5,64(sp)
101049cc:	d9000f17 	ldw	r4,60(sp)
101049d0:	d8c01515 	stw	r3,84(sp)
101049d4:	d8801415 	stw	r2,80(sp)
101049d8:	010d72c0 	call	1010d72c <__fixdfsi>
101049dc:	1009883a 	mov	r4,r2
101049e0:	1021883a 	mov	r16,r2
101049e4:	010d7ac0 	call	1010d7ac <__floatsidf>
101049e8:	d9000f17 	ldw	r4,60(sp)
101049ec:	d9401017 	ldw	r5,64(sp)
101049f0:	100d883a 	mov	r6,r2
101049f4:	180f883a 	mov	r7,r3
101049f8:	010ce300 	call	1010ce30 <__subdf3>
101049fc:	1829883a 	mov	r20,r3
10104a00:	d8c00717 	ldw	r3,28(sp)
10104a04:	84000c04 	addi	r16,r16,48
10104a08:	1023883a 	mov	r17,r2
10104a0c:	1c000005 	stb	r16,0(r3)
10104a10:	db001617 	ldw	r12,88(sp)
10104a14:	00800044 	movi	r2,1
10104a18:	60802226 	beq	r12,r2,10104aa4 <_dtoa_r+0x1424>
10104a1c:	d9c00717 	ldw	r7,28(sp)
10104a20:	8805883a 	mov	r2,r17
10104a24:	b82b883a 	mov	r21,r23
10104a28:	3b19883a 	add	r12,r7,r12
10104a2c:	6023883a 	mov	r17,r12
10104a30:	a007883a 	mov	r3,r20
10104a34:	dc800f15 	stw	r18,60(sp)
10104a38:	000d883a 	mov	r6,zero
10104a3c:	01d00934 	movhi	r7,16420
10104a40:	1009883a 	mov	r4,r2
10104a44:	180b883a 	mov	r5,r3
10104a48:	010c5c40 	call	1010c5c4 <__muldf3>
10104a4c:	180b883a 	mov	r5,r3
10104a50:	1009883a 	mov	r4,r2
10104a54:	1829883a 	mov	r20,r3
10104a58:	1025883a 	mov	r18,r2
10104a5c:	010d72c0 	call	1010d72c <__fixdfsi>
10104a60:	1009883a 	mov	r4,r2
10104a64:	1021883a 	mov	r16,r2
10104a68:	010d7ac0 	call	1010d7ac <__floatsidf>
10104a6c:	100d883a 	mov	r6,r2
10104a70:	180f883a 	mov	r7,r3
10104a74:	9009883a 	mov	r4,r18
10104a78:	a00b883a 	mov	r5,r20
10104a7c:	84000c04 	addi	r16,r16,48
10104a80:	010ce300 	call	1010ce30 <__subdf3>
10104a84:	ad400044 	addi	r21,r21,1
10104a88:	ac3fffc5 	stb	r16,-1(r21)
10104a8c:	ac7fea1e 	bne	r21,r17,10104a38 <__alt_data_end+0xfffe4a38>
10104a90:	1023883a 	mov	r17,r2
10104a94:	d8801217 	ldw	r2,72(sp)
10104a98:	dc800f17 	ldw	r18,60(sp)
10104a9c:	1829883a 	mov	r20,r3
10104aa0:	b8af883a 	add	r23,r23,r2
10104aa4:	d9001417 	ldw	r4,80(sp)
10104aa8:	d9401517 	ldw	r5,84(sp)
10104aac:	000d883a 	mov	r6,zero
10104ab0:	01cff834 	movhi	r7,16352
10104ab4:	010b0f00 	call	1010b0f0 <__adddf3>
10104ab8:	880d883a 	mov	r6,r17
10104abc:	a00f883a 	mov	r7,r20
10104ac0:	1009883a 	mov	r4,r2
10104ac4:	180b883a 	mov	r5,r3
10104ac8:	010c4d00 	call	1010c4d0 <__ledf2>
10104acc:	10003e0e 	bge	r2,zero,10104bc8 <_dtoa_r+0x1548>
10104ad0:	d9001317 	ldw	r4,76(sp)
10104ad4:	bd3fffc3 	ldbu	r20,-1(r23)
10104ad8:	d9000515 	stw	r4,20(sp)
10104adc:	003d3b06 	br	10103fcc <__alt_data_end+0xfffe3fcc>
10104ae0:	0027883a 	mov	r19,zero
10104ae4:	003f1b06 	br	10104754 <__alt_data_end+0xfffe4754>
10104ae8:	d8800817 	ldw	r2,32(sp)
10104aec:	11e9c83a 	sub	r20,r2,r7
10104af0:	0005883a 	mov	r2,zero
10104af4:	003d5406 	br	10104048 <__alt_data_end+0xfffe4048>
10104af8:	00800044 	movi	r2,1
10104afc:	003dc706 	br	1010421c <__alt_data_end+0xfffe421c>
10104b00:	d8c00217 	ldw	r3,8(sp)
10104b04:	00800d84 	movi	r2,54
10104b08:	dd400a17 	ldw	r21,40(sp)
10104b0c:	10c5c83a 	sub	r2,r2,r3
10104b10:	dd000817 	ldw	r20,32(sp)
10104b14:	003d4c06 	br	10104048 <__alt_data_end+0xfffe4048>
10104b18:	dc800f15 	stw	r18,60(sp)
10104b1c:	dcc01015 	stw	r19,64(sp)
10104b20:	04000084 	movi	r16,2
10104b24:	003bed06 	br	10103adc <__alt_data_end+0xfffe3adc>
10104b28:	d9000617 	ldw	r4,24(sp)
10104b2c:	203f0d26 	beq	r4,zero,10104764 <__alt_data_end+0xfffe4764>
10104b30:	d9800c17 	ldw	r6,48(sp)
10104b34:	01bcab0e 	bge	zero,r6,10103de4 <__alt_data_end+0xfffe3de4>
10104b38:	d9401017 	ldw	r5,64(sp)
10104b3c:	d9000f17 	ldw	r4,60(sp)
10104b40:	000d883a 	mov	r6,zero
10104b44:	01d00934 	movhi	r7,16420
10104b48:	010c5c40 	call	1010c5c4 <__muldf3>
10104b4c:	81000044 	addi	r4,r16,1
10104b50:	d8800f15 	stw	r2,60(sp)
10104b54:	d8c01015 	stw	r3,64(sp)
10104b58:	010d7ac0 	call	1010d7ac <__floatsidf>
10104b5c:	d9800f17 	ldw	r6,60(sp)
10104b60:	d9c01017 	ldw	r7,64(sp)
10104b64:	1009883a 	mov	r4,r2
10104b68:	180b883a 	mov	r5,r3
10104b6c:	010c5c40 	call	1010c5c4 <__muldf3>
10104b70:	01d00734 	movhi	r7,16412
10104b74:	000d883a 	mov	r6,zero
10104b78:	1009883a 	mov	r4,r2
10104b7c:	180b883a 	mov	r5,r3
10104b80:	010b0f00 	call	1010b0f0 <__adddf3>
10104b84:	d9c00517 	ldw	r7,20(sp)
10104b88:	047f3034 	movhi	r17,64704
10104b8c:	1021883a 	mov	r16,r2
10104b90:	39ffffc4 	addi	r7,r7,-1
10104b94:	d9c01315 	stw	r7,76(sp)
10104b98:	1c63883a 	add	r17,r3,r17
10104b9c:	db000c17 	ldw	r12,48(sp)
10104ba0:	003bea06 	br	10103b4c <__alt_data_end+0xfffe3b4c>
10104ba4:	dc000915 	stw	r16,36(sp)
10104ba8:	003e0e06 	br	101043e4 <__alt_data_end+0xfffe43e4>
10104bac:	01000e44 	movi	r4,57
10104bb0:	8825883a 	mov	r18,r17
10104bb4:	9dc00044 	addi	r23,r19,1
10104bb8:	99000005 	stb	r4,0(r19)
10104bbc:	a023883a 	mov	r17,r20
10104bc0:	dc000915 	stw	r16,36(sp)
10104bc4:	003da406 	br	10104258 <__alt_data_end+0xfffe4258>
10104bc8:	d9801417 	ldw	r6,80(sp)
10104bcc:	d9c01517 	ldw	r7,84(sp)
10104bd0:	0009883a 	mov	r4,zero
10104bd4:	014ff834 	movhi	r5,16352
10104bd8:	010ce300 	call	1010ce30 <__subdf3>
10104bdc:	880d883a 	mov	r6,r17
10104be0:	a00f883a 	mov	r7,r20
10104be4:	1009883a 	mov	r4,r2
10104be8:	180b883a 	mov	r5,r3
10104bec:	010c3f40 	call	1010c3f4 <__gedf2>
10104bf0:	00bc7c0e 	bge	zero,r2,10103de4 <__alt_data_end+0xfffe3de4>
10104bf4:	01000c04 	movi	r4,48
10104bf8:	00000106 	br	10104c00 <_dtoa_r+0x1580>
10104bfc:	102f883a 	mov	r23,r2
10104c00:	b8bfffc4 	addi	r2,r23,-1
10104c04:	10c00007 	ldb	r3,0(r2)
10104c08:	193ffc26 	beq	r3,r4,10104bfc <__alt_data_end+0xfffe4bfc>
10104c0c:	d9801317 	ldw	r6,76(sp)
10104c10:	d9800515 	stw	r6,20(sp)
10104c14:	003c4406 	br	10103d28 <__alt_data_end+0xfffe3d28>
10104c18:	d9801317 	ldw	r6,76(sp)
10104c1c:	d9800515 	stw	r6,20(sp)
10104c20:	003cea06 	br	10103fcc <__alt_data_end+0xfffe3fcc>
10104c24:	dd800f17 	ldw	r22,60(sp)
10104c28:	dcc01017 	ldw	r19,64(sp)
10104c2c:	dc801217 	ldw	r18,72(sp)
10104c30:	003c6c06 	br	10103de4 <__alt_data_end+0xfffe3de4>
10104c34:	903e031e 	bne	r18,zero,10104444 <__alt_data_end+0xfffe4444>
10104c38:	003ebb06 	br	10104728 <__alt_data_end+0xfffe4728>
10104c3c:	103e6c1e 	bne	r2,zero,101045f0 <__alt_data_end+0xfffe45f0>
10104c40:	4080004c 	andi	r2,r8,1
10104c44:	103e6a26 	beq	r2,zero,101045f0 <__alt_data_end+0xfffe45f0>
10104c48:	003e6606 	br	101045e4 <__alt_data_end+0xfffe45e4>
10104c4c:	d8c00317 	ldw	r3,12(sp)
10104c50:	00800084 	movi	r2,2
10104c54:	10c02916 	blt	r2,r3,10104cfc <_dtoa_r+0x167c>
10104c58:	d9000c17 	ldw	r4,48(sp)
10104c5c:	003e8806 	br	10104680 <__alt_data_end+0xfffe4680>
10104c60:	04000084 	movi	r16,2
10104c64:	003b9d06 	br	10103adc <__alt_data_end+0xfffe3adc>
10104c68:	d9001317 	ldw	r4,76(sp)
10104c6c:	d9000515 	stw	r4,20(sp)
10104c70:	003cd606 	br	10103fcc <__alt_data_end+0xfffe3fcc>
10104c74:	d8801317 	ldw	r2,76(sp)
10104c78:	d8800515 	stw	r2,20(sp)
10104c7c:	003c2a06 	br	10103d28 <__alt_data_end+0xfffe3d28>
10104c80:	d9800317 	ldw	r6,12(sp)
10104c84:	00800084 	movi	r2,2
10104c88:	11801516 	blt	r2,r6,10104ce0 <_dtoa_r+0x1660>
10104c8c:	d9c00c17 	ldw	r7,48(sp)
10104c90:	d9c00615 	stw	r7,24(sp)
10104c94:	003df706 	br	10104474 <__alt_data_end+0xfffe4474>
10104c98:	193d3926 	beq	r3,r4,10104180 <__alt_data_end+0xfffe4180>
10104c9c:	00c00f04 	movi	r3,60
10104ca0:	1885c83a 	sub	r2,r3,r2
10104ca4:	003ddf06 	br	10104424 <__alt_data_end+0xfffe4424>
10104ca8:	e009883a 	mov	r4,fp
10104cac:	e0001115 	stw	zero,68(fp)
10104cb0:	000b883a 	mov	r5,zero
10104cb4:	0106bf00 	call	10106bf0 <_Balloc>
10104cb8:	d8800715 	stw	r2,28(sp)
10104cbc:	d8c00717 	ldw	r3,28(sp)
10104cc0:	00bfffc4 	movi	r2,-1
10104cc4:	01000044 	movi	r4,1
10104cc8:	d8800c15 	stw	r2,48(sp)
10104ccc:	e0c01015 	stw	r3,64(fp)
10104cd0:	d9000b15 	stw	r4,44(sp)
10104cd4:	d8800615 	stw	r2,24(sp)
10104cd8:	d8002215 	stw	zero,136(sp)
10104cdc:	003c4106 	br	10103de4 <__alt_data_end+0xfffe3de4>
10104ce0:	d8c00c17 	ldw	r3,48(sp)
10104ce4:	d8c00615 	stw	r3,24(sp)
10104ce8:	003e7006 	br	101046ac <__alt_data_end+0xfffe46ac>
10104cec:	04400044 	movi	r17,1
10104cf0:	003b2006 	br	10103974 <__alt_data_end+0xfffe3974>
10104cf4:	000b883a 	mov	r5,zero
10104cf8:	003b3d06 	br	101039f0 <__alt_data_end+0xfffe39f0>
10104cfc:	d8800c17 	ldw	r2,48(sp)
10104d00:	d8800615 	stw	r2,24(sp)
10104d04:	003e6906 	br	101046ac <__alt_data_end+0xfffe46ac>

10104d08 <__sflush_r>:
10104d08:	2880030b 	ldhu	r2,12(r5)
10104d0c:	defffb04 	addi	sp,sp,-20
10104d10:	dcc00315 	stw	r19,12(sp)
10104d14:	dc400115 	stw	r17,4(sp)
10104d18:	dfc00415 	stw	ra,16(sp)
10104d1c:	dc800215 	stw	r18,8(sp)
10104d20:	dc000015 	stw	r16,0(sp)
10104d24:	10c0020c 	andi	r3,r2,8
10104d28:	2823883a 	mov	r17,r5
10104d2c:	2027883a 	mov	r19,r4
10104d30:	1800311e 	bne	r3,zero,10104df8 <__sflush_r+0xf0>
10104d34:	28c00117 	ldw	r3,4(r5)
10104d38:	10820014 	ori	r2,r2,2048
10104d3c:	2880030d 	sth	r2,12(r5)
10104d40:	00c04b0e 	bge	zero,r3,10104e70 <__sflush_r+0x168>
10104d44:	8a000a17 	ldw	r8,40(r17)
10104d48:	40002326 	beq	r8,zero,10104dd8 <__sflush_r+0xd0>
10104d4c:	9c000017 	ldw	r16,0(r19)
10104d50:	10c4000c 	andi	r3,r2,4096
10104d54:	98000015 	stw	zero,0(r19)
10104d58:	18004826 	beq	r3,zero,10104e7c <__sflush_r+0x174>
10104d5c:	89801417 	ldw	r6,80(r17)
10104d60:	10c0010c 	andi	r3,r2,4
10104d64:	18000626 	beq	r3,zero,10104d80 <__sflush_r+0x78>
10104d68:	88c00117 	ldw	r3,4(r17)
10104d6c:	88800c17 	ldw	r2,48(r17)
10104d70:	30cdc83a 	sub	r6,r6,r3
10104d74:	10000226 	beq	r2,zero,10104d80 <__sflush_r+0x78>
10104d78:	88800f17 	ldw	r2,60(r17)
10104d7c:	308dc83a 	sub	r6,r6,r2
10104d80:	89400717 	ldw	r5,28(r17)
10104d84:	000f883a 	mov	r7,zero
10104d88:	9809883a 	mov	r4,r19
10104d8c:	403ee83a 	callr	r8
10104d90:	00ffffc4 	movi	r3,-1
10104d94:	10c04426 	beq	r2,r3,10104ea8 <__sflush_r+0x1a0>
10104d98:	88c0030b 	ldhu	r3,12(r17)
10104d9c:	89000417 	ldw	r4,16(r17)
10104da0:	88000115 	stw	zero,4(r17)
10104da4:	197dffcc 	andi	r5,r3,63487
10104da8:	8940030d 	sth	r5,12(r17)
10104dac:	89000015 	stw	r4,0(r17)
10104db0:	18c4000c 	andi	r3,r3,4096
10104db4:	18002c1e 	bne	r3,zero,10104e68 <__sflush_r+0x160>
10104db8:	89400c17 	ldw	r5,48(r17)
10104dbc:	9c000015 	stw	r16,0(r19)
10104dc0:	28000526 	beq	r5,zero,10104dd8 <__sflush_r+0xd0>
10104dc4:	88801004 	addi	r2,r17,64
10104dc8:	28800226 	beq	r5,r2,10104dd4 <__sflush_r+0xcc>
10104dcc:	9809883a 	mov	r4,r19
10104dd0:	01054840 	call	10105484 <_free_r>
10104dd4:	88000c15 	stw	zero,48(r17)
10104dd8:	0005883a 	mov	r2,zero
10104ddc:	dfc00417 	ldw	ra,16(sp)
10104de0:	dcc00317 	ldw	r19,12(sp)
10104de4:	dc800217 	ldw	r18,8(sp)
10104de8:	dc400117 	ldw	r17,4(sp)
10104dec:	dc000017 	ldw	r16,0(sp)
10104df0:	dec00504 	addi	sp,sp,20
10104df4:	f800283a 	ret
10104df8:	2c800417 	ldw	r18,16(r5)
10104dfc:	903ff626 	beq	r18,zero,10104dd8 <__alt_data_end+0xfffe4dd8>
10104e00:	2c000017 	ldw	r16,0(r5)
10104e04:	108000cc 	andi	r2,r2,3
10104e08:	2c800015 	stw	r18,0(r5)
10104e0c:	84a1c83a 	sub	r16,r16,r18
10104e10:	1000131e 	bne	r2,zero,10104e60 <__sflush_r+0x158>
10104e14:	28800517 	ldw	r2,20(r5)
10104e18:	88800215 	stw	r2,8(r17)
10104e1c:	04000316 	blt	zero,r16,10104e2c <__sflush_r+0x124>
10104e20:	003fed06 	br	10104dd8 <__alt_data_end+0xfffe4dd8>
10104e24:	90a5883a 	add	r18,r18,r2
10104e28:	043feb0e 	bge	zero,r16,10104dd8 <__alt_data_end+0xfffe4dd8>
10104e2c:	88800917 	ldw	r2,36(r17)
10104e30:	89400717 	ldw	r5,28(r17)
10104e34:	800f883a 	mov	r7,r16
10104e38:	900d883a 	mov	r6,r18
10104e3c:	9809883a 	mov	r4,r19
10104e40:	103ee83a 	callr	r2
10104e44:	80a1c83a 	sub	r16,r16,r2
10104e48:	00bff616 	blt	zero,r2,10104e24 <__alt_data_end+0xfffe4e24>
10104e4c:	88c0030b 	ldhu	r3,12(r17)
10104e50:	00bfffc4 	movi	r2,-1
10104e54:	18c01014 	ori	r3,r3,64
10104e58:	88c0030d 	sth	r3,12(r17)
10104e5c:	003fdf06 	br	10104ddc <__alt_data_end+0xfffe4ddc>
10104e60:	0005883a 	mov	r2,zero
10104e64:	003fec06 	br	10104e18 <__alt_data_end+0xfffe4e18>
10104e68:	88801415 	stw	r2,80(r17)
10104e6c:	003fd206 	br	10104db8 <__alt_data_end+0xfffe4db8>
10104e70:	28c00f17 	ldw	r3,60(r5)
10104e74:	00ffb316 	blt	zero,r3,10104d44 <__alt_data_end+0xfffe4d44>
10104e78:	003fd706 	br	10104dd8 <__alt_data_end+0xfffe4dd8>
10104e7c:	89400717 	ldw	r5,28(r17)
10104e80:	000d883a 	mov	r6,zero
10104e84:	01c00044 	movi	r7,1
10104e88:	9809883a 	mov	r4,r19
10104e8c:	403ee83a 	callr	r8
10104e90:	100d883a 	mov	r6,r2
10104e94:	00bfffc4 	movi	r2,-1
10104e98:	30801426 	beq	r6,r2,10104eec <__sflush_r+0x1e4>
10104e9c:	8880030b 	ldhu	r2,12(r17)
10104ea0:	8a000a17 	ldw	r8,40(r17)
10104ea4:	003fae06 	br	10104d60 <__alt_data_end+0xfffe4d60>
10104ea8:	98c00017 	ldw	r3,0(r19)
10104eac:	183fba26 	beq	r3,zero,10104d98 <__alt_data_end+0xfffe4d98>
10104eb0:	01000744 	movi	r4,29
10104eb4:	19000626 	beq	r3,r4,10104ed0 <__sflush_r+0x1c8>
10104eb8:	01000584 	movi	r4,22
10104ebc:	19000426 	beq	r3,r4,10104ed0 <__sflush_r+0x1c8>
10104ec0:	88c0030b 	ldhu	r3,12(r17)
10104ec4:	18c01014 	ori	r3,r3,64
10104ec8:	88c0030d 	sth	r3,12(r17)
10104ecc:	003fc306 	br	10104ddc <__alt_data_end+0xfffe4ddc>
10104ed0:	8880030b 	ldhu	r2,12(r17)
10104ed4:	88c00417 	ldw	r3,16(r17)
10104ed8:	88000115 	stw	zero,4(r17)
10104edc:	10bdffcc 	andi	r2,r2,63487
10104ee0:	8880030d 	sth	r2,12(r17)
10104ee4:	88c00015 	stw	r3,0(r17)
10104ee8:	003fb306 	br	10104db8 <__alt_data_end+0xfffe4db8>
10104eec:	98800017 	ldw	r2,0(r19)
10104ef0:	103fea26 	beq	r2,zero,10104e9c <__alt_data_end+0xfffe4e9c>
10104ef4:	00c00744 	movi	r3,29
10104ef8:	10c00226 	beq	r2,r3,10104f04 <__sflush_r+0x1fc>
10104efc:	00c00584 	movi	r3,22
10104f00:	10c0031e 	bne	r2,r3,10104f10 <__sflush_r+0x208>
10104f04:	9c000015 	stw	r16,0(r19)
10104f08:	0005883a 	mov	r2,zero
10104f0c:	003fb306 	br	10104ddc <__alt_data_end+0xfffe4ddc>
10104f10:	88c0030b 	ldhu	r3,12(r17)
10104f14:	3005883a 	mov	r2,r6
10104f18:	18c01014 	ori	r3,r3,64
10104f1c:	88c0030d 	sth	r3,12(r17)
10104f20:	003fae06 	br	10104ddc <__alt_data_end+0xfffe4ddc>

10104f24 <_fflush_r>:
10104f24:	defffd04 	addi	sp,sp,-12
10104f28:	dc000115 	stw	r16,4(sp)
10104f2c:	dfc00215 	stw	ra,8(sp)
10104f30:	2021883a 	mov	r16,r4
10104f34:	20000226 	beq	r4,zero,10104f40 <_fflush_r+0x1c>
10104f38:	20800e17 	ldw	r2,56(r4)
10104f3c:	10000c26 	beq	r2,zero,10104f70 <_fflush_r+0x4c>
10104f40:	2880030f 	ldh	r2,12(r5)
10104f44:	1000051e 	bne	r2,zero,10104f5c <_fflush_r+0x38>
10104f48:	0005883a 	mov	r2,zero
10104f4c:	dfc00217 	ldw	ra,8(sp)
10104f50:	dc000117 	ldw	r16,4(sp)
10104f54:	dec00304 	addi	sp,sp,12
10104f58:	f800283a 	ret
10104f5c:	8009883a 	mov	r4,r16
10104f60:	dfc00217 	ldw	ra,8(sp)
10104f64:	dc000117 	ldw	r16,4(sp)
10104f68:	dec00304 	addi	sp,sp,12
10104f6c:	0104d081 	jmpi	10104d08 <__sflush_r>
10104f70:	d9400015 	stw	r5,0(sp)
10104f74:	01053100 	call	10105310 <__sinit>
10104f78:	d9400017 	ldw	r5,0(sp)
10104f7c:	003ff006 	br	10104f40 <__alt_data_end+0xfffe4f40>

10104f80 <fflush>:
10104f80:	20000526 	beq	r4,zero,10104f98 <fflush+0x18>
10104f84:	00840474 	movhi	r2,4113
10104f88:	1087c304 	addi	r2,r2,7948
10104f8c:	200b883a 	mov	r5,r4
10104f90:	11000017 	ldw	r4,0(r2)
10104f94:	0104f241 	jmpi	10104f24 <_fflush_r>
10104f98:	00840474 	movhi	r2,4113
10104f9c:	1087c204 	addi	r2,r2,7944
10104fa0:	11000017 	ldw	r4,0(r2)
10104fa4:	01440434 	movhi	r5,4112
10104fa8:	2953c904 	addi	r5,r5,20260
10104fac:	0105d201 	jmpi	10105d20 <_fwalk_reent>

10104fb0 <__fp_unlock>:
10104fb0:	0005883a 	mov	r2,zero
10104fb4:	f800283a 	ret

10104fb8 <_cleanup_r>:
10104fb8:	01440474 	movhi	r5,4113
10104fbc:	29675d04 	addi	r5,r5,-25228
10104fc0:	0105d201 	jmpi	10105d20 <_fwalk_reent>

10104fc4 <__sinit.part.1>:
10104fc4:	defff704 	addi	sp,sp,-36
10104fc8:	00c40434 	movhi	r3,4112
10104fcc:	dfc00815 	stw	ra,32(sp)
10104fd0:	ddc00715 	stw	r23,28(sp)
10104fd4:	dd800615 	stw	r22,24(sp)
10104fd8:	dd400515 	stw	r21,20(sp)
10104fdc:	dd000415 	stw	r20,16(sp)
10104fe0:	dcc00315 	stw	r19,12(sp)
10104fe4:	dc800215 	stw	r18,8(sp)
10104fe8:	dc400115 	stw	r17,4(sp)
10104fec:	dc000015 	stw	r16,0(sp)
10104ff0:	18d3ee04 	addi	r3,r3,20408
10104ff4:	24000117 	ldw	r16,4(r4)
10104ff8:	20c00f15 	stw	r3,60(r4)
10104ffc:	2080bb04 	addi	r2,r4,748
10105000:	00c000c4 	movi	r3,3
10105004:	20c0b915 	stw	r3,740(r4)
10105008:	2080ba15 	stw	r2,744(r4)
1010500c:	2000b815 	stw	zero,736(r4)
10105010:	05c00204 	movi	r23,8
10105014:	00800104 	movi	r2,4
10105018:	2025883a 	mov	r18,r4
1010501c:	b80d883a 	mov	r6,r23
10105020:	81001704 	addi	r4,r16,92
10105024:	000b883a 	mov	r5,zero
10105028:	80000015 	stw	zero,0(r16)
1010502c:	80000115 	stw	zero,4(r16)
10105030:	80000215 	stw	zero,8(r16)
10105034:	8080030d 	sth	r2,12(r16)
10105038:	80001915 	stw	zero,100(r16)
1010503c:	8000038d 	sth	zero,14(r16)
10105040:	80000415 	stw	zero,16(r16)
10105044:	80000515 	stw	zero,20(r16)
10105048:	80000615 	stw	zero,24(r16)
1010504c:	0106ac80 	call	10106ac8 <memset>
10105050:	05840474 	movhi	r22,4113
10105054:	94400217 	ldw	r17,8(r18)
10105058:	05440474 	movhi	r21,4113
1010505c:	05040474 	movhi	r20,4113
10105060:	04c40474 	movhi	r19,4113
10105064:	b5a0b504 	addi	r22,r22,-32044
10105068:	ad60cc04 	addi	r21,r21,-31952
1010506c:	a520eb04 	addi	r20,r20,-31828
10105070:	9ce10204 	addi	r19,r19,-31736
10105074:	85800815 	stw	r22,32(r16)
10105078:	85400915 	stw	r21,36(r16)
1010507c:	85000a15 	stw	r20,40(r16)
10105080:	84c00b15 	stw	r19,44(r16)
10105084:	84000715 	stw	r16,28(r16)
10105088:	00800284 	movi	r2,10
1010508c:	8880030d 	sth	r2,12(r17)
10105090:	00800044 	movi	r2,1
10105094:	b80d883a 	mov	r6,r23
10105098:	89001704 	addi	r4,r17,92
1010509c:	000b883a 	mov	r5,zero
101050a0:	88000015 	stw	zero,0(r17)
101050a4:	88000115 	stw	zero,4(r17)
101050a8:	88000215 	stw	zero,8(r17)
101050ac:	88001915 	stw	zero,100(r17)
101050b0:	8880038d 	sth	r2,14(r17)
101050b4:	88000415 	stw	zero,16(r17)
101050b8:	88000515 	stw	zero,20(r17)
101050bc:	88000615 	stw	zero,24(r17)
101050c0:	0106ac80 	call	10106ac8 <memset>
101050c4:	94000317 	ldw	r16,12(r18)
101050c8:	00800484 	movi	r2,18
101050cc:	8c400715 	stw	r17,28(r17)
101050d0:	8d800815 	stw	r22,32(r17)
101050d4:	8d400915 	stw	r21,36(r17)
101050d8:	8d000a15 	stw	r20,40(r17)
101050dc:	8cc00b15 	stw	r19,44(r17)
101050e0:	8080030d 	sth	r2,12(r16)
101050e4:	00800084 	movi	r2,2
101050e8:	80000015 	stw	zero,0(r16)
101050ec:	80000115 	stw	zero,4(r16)
101050f0:	80000215 	stw	zero,8(r16)
101050f4:	80001915 	stw	zero,100(r16)
101050f8:	8080038d 	sth	r2,14(r16)
101050fc:	80000415 	stw	zero,16(r16)
10105100:	80000515 	stw	zero,20(r16)
10105104:	80000615 	stw	zero,24(r16)
10105108:	b80d883a 	mov	r6,r23
1010510c:	000b883a 	mov	r5,zero
10105110:	81001704 	addi	r4,r16,92
10105114:	0106ac80 	call	10106ac8 <memset>
10105118:	00800044 	movi	r2,1
1010511c:	84000715 	stw	r16,28(r16)
10105120:	85800815 	stw	r22,32(r16)
10105124:	85400915 	stw	r21,36(r16)
10105128:	85000a15 	stw	r20,40(r16)
1010512c:	84c00b15 	stw	r19,44(r16)
10105130:	90800e15 	stw	r2,56(r18)
10105134:	dfc00817 	ldw	ra,32(sp)
10105138:	ddc00717 	ldw	r23,28(sp)
1010513c:	dd800617 	ldw	r22,24(sp)
10105140:	dd400517 	ldw	r21,20(sp)
10105144:	dd000417 	ldw	r20,16(sp)
10105148:	dcc00317 	ldw	r19,12(sp)
1010514c:	dc800217 	ldw	r18,8(sp)
10105150:	dc400117 	ldw	r17,4(sp)
10105154:	dc000017 	ldw	r16,0(sp)
10105158:	dec00904 	addi	sp,sp,36
1010515c:	f800283a 	ret

10105160 <__fp_lock>:
10105160:	0005883a 	mov	r2,zero
10105164:	f800283a 	ret

10105168 <__sfmoreglue>:
10105168:	defffc04 	addi	sp,sp,-16
1010516c:	dc800215 	stw	r18,8(sp)
10105170:	2825883a 	mov	r18,r5
10105174:	dc000015 	stw	r16,0(sp)
10105178:	01401a04 	movi	r5,104
1010517c:	2021883a 	mov	r16,r4
10105180:	913fffc4 	addi	r4,r18,-1
10105184:	dfc00315 	stw	ra,12(sp)
10105188:	dc400115 	stw	r17,4(sp)
1010518c:	0100c080 	call	10100c08 <__mulsi3>
10105190:	8009883a 	mov	r4,r16
10105194:	11401d04 	addi	r5,r2,116
10105198:	1023883a 	mov	r17,r2
1010519c:	010607c0 	call	1010607c <_malloc_r>
101051a0:	1021883a 	mov	r16,r2
101051a4:	10000726 	beq	r2,zero,101051c4 <__sfmoreglue+0x5c>
101051a8:	11000304 	addi	r4,r2,12
101051ac:	10000015 	stw	zero,0(r2)
101051b0:	14800115 	stw	r18,4(r2)
101051b4:	11000215 	stw	r4,8(r2)
101051b8:	89801a04 	addi	r6,r17,104
101051bc:	000b883a 	mov	r5,zero
101051c0:	0106ac80 	call	10106ac8 <memset>
101051c4:	8005883a 	mov	r2,r16
101051c8:	dfc00317 	ldw	ra,12(sp)
101051cc:	dc800217 	ldw	r18,8(sp)
101051d0:	dc400117 	ldw	r17,4(sp)
101051d4:	dc000017 	ldw	r16,0(sp)
101051d8:	dec00404 	addi	sp,sp,16
101051dc:	f800283a 	ret

101051e0 <__sfp>:
101051e0:	defffb04 	addi	sp,sp,-20
101051e4:	dc000015 	stw	r16,0(sp)
101051e8:	04040474 	movhi	r16,4113
101051ec:	8407c204 	addi	r16,r16,7944
101051f0:	dcc00315 	stw	r19,12(sp)
101051f4:	2027883a 	mov	r19,r4
101051f8:	81000017 	ldw	r4,0(r16)
101051fc:	dfc00415 	stw	ra,16(sp)
10105200:	dc800215 	stw	r18,8(sp)
10105204:	20800e17 	ldw	r2,56(r4)
10105208:	dc400115 	stw	r17,4(sp)
1010520c:	1000021e 	bne	r2,zero,10105218 <__sfp+0x38>
10105210:	0104fc40 	call	10104fc4 <__sinit.part.1>
10105214:	81000017 	ldw	r4,0(r16)
10105218:	2480b804 	addi	r18,r4,736
1010521c:	047fffc4 	movi	r17,-1
10105220:	91000117 	ldw	r4,4(r18)
10105224:	94000217 	ldw	r16,8(r18)
10105228:	213fffc4 	addi	r4,r4,-1
1010522c:	20000a16 	blt	r4,zero,10105258 <__sfp+0x78>
10105230:	8080030f 	ldh	r2,12(r16)
10105234:	10000c26 	beq	r2,zero,10105268 <__sfp+0x88>
10105238:	80c01d04 	addi	r3,r16,116
1010523c:	00000206 	br	10105248 <__sfp+0x68>
10105240:	18bfe60f 	ldh	r2,-104(r3)
10105244:	10000826 	beq	r2,zero,10105268 <__sfp+0x88>
10105248:	213fffc4 	addi	r4,r4,-1
1010524c:	1c3ffd04 	addi	r16,r3,-12
10105250:	18c01a04 	addi	r3,r3,104
10105254:	247ffa1e 	bne	r4,r17,10105240 <__alt_data_end+0xfffe5240>
10105258:	90800017 	ldw	r2,0(r18)
1010525c:	10001d26 	beq	r2,zero,101052d4 <__sfp+0xf4>
10105260:	1025883a 	mov	r18,r2
10105264:	003fee06 	br	10105220 <__alt_data_end+0xfffe5220>
10105268:	00bfffc4 	movi	r2,-1
1010526c:	8080038d 	sth	r2,14(r16)
10105270:	00800044 	movi	r2,1
10105274:	8080030d 	sth	r2,12(r16)
10105278:	80001915 	stw	zero,100(r16)
1010527c:	80000015 	stw	zero,0(r16)
10105280:	80000215 	stw	zero,8(r16)
10105284:	80000115 	stw	zero,4(r16)
10105288:	80000415 	stw	zero,16(r16)
1010528c:	80000515 	stw	zero,20(r16)
10105290:	80000615 	stw	zero,24(r16)
10105294:	01800204 	movi	r6,8
10105298:	000b883a 	mov	r5,zero
1010529c:	81001704 	addi	r4,r16,92
101052a0:	0106ac80 	call	10106ac8 <memset>
101052a4:	8005883a 	mov	r2,r16
101052a8:	80000c15 	stw	zero,48(r16)
101052ac:	80000d15 	stw	zero,52(r16)
101052b0:	80001115 	stw	zero,68(r16)
101052b4:	80001215 	stw	zero,72(r16)
101052b8:	dfc00417 	ldw	ra,16(sp)
101052bc:	dcc00317 	ldw	r19,12(sp)
101052c0:	dc800217 	ldw	r18,8(sp)
101052c4:	dc400117 	ldw	r17,4(sp)
101052c8:	dc000017 	ldw	r16,0(sp)
101052cc:	dec00504 	addi	sp,sp,20
101052d0:	f800283a 	ret
101052d4:	01400104 	movi	r5,4
101052d8:	9809883a 	mov	r4,r19
101052dc:	01051680 	call	10105168 <__sfmoreglue>
101052e0:	90800015 	stw	r2,0(r18)
101052e4:	103fde1e 	bne	r2,zero,10105260 <__alt_data_end+0xfffe5260>
101052e8:	00800304 	movi	r2,12
101052ec:	98800015 	stw	r2,0(r19)
101052f0:	0005883a 	mov	r2,zero
101052f4:	003ff006 	br	101052b8 <__alt_data_end+0xfffe52b8>

101052f8 <_cleanup>:
101052f8:	00840474 	movhi	r2,4113
101052fc:	1087c204 	addi	r2,r2,7944
10105300:	11000017 	ldw	r4,0(r2)
10105304:	01440474 	movhi	r5,4113
10105308:	29675d04 	addi	r5,r5,-25228
1010530c:	0105d201 	jmpi	10105d20 <_fwalk_reent>

10105310 <__sinit>:
10105310:	20800e17 	ldw	r2,56(r4)
10105314:	10000126 	beq	r2,zero,1010531c <__sinit+0xc>
10105318:	f800283a 	ret
1010531c:	0104fc41 	jmpi	10104fc4 <__sinit.part.1>

10105320 <__sfp_lock_acquire>:
10105320:	f800283a 	ret

10105324 <__sfp_lock_release>:
10105324:	f800283a 	ret

10105328 <__sinit_lock_acquire>:
10105328:	f800283a 	ret

1010532c <__sinit_lock_release>:
1010532c:	f800283a 	ret

10105330 <__fp_lock_all>:
10105330:	00840474 	movhi	r2,4113
10105334:	1087c304 	addi	r2,r2,7948
10105338:	11000017 	ldw	r4,0(r2)
1010533c:	01440434 	movhi	r5,4112
10105340:	29545804 	addi	r5,r5,20832
10105344:	0105c5c1 	jmpi	10105c5c <_fwalk>

10105348 <__fp_unlock_all>:
10105348:	00840474 	movhi	r2,4113
1010534c:	1087c304 	addi	r2,r2,7948
10105350:	11000017 	ldw	r4,0(r2)
10105354:	01440434 	movhi	r5,4112
10105358:	2953ec04 	addi	r5,r5,20400
1010535c:	0105c5c1 	jmpi	10105c5c <_fwalk>

10105360 <_malloc_trim_r>:
10105360:	defffb04 	addi	sp,sp,-20
10105364:	dcc00315 	stw	r19,12(sp)
10105368:	04c40474 	movhi	r19,4113
1010536c:	dc800215 	stw	r18,8(sp)
10105370:	dc400115 	stw	r17,4(sp)
10105374:	dc000015 	stw	r16,0(sp)
10105378:	dfc00415 	stw	ra,16(sp)
1010537c:	2821883a 	mov	r16,r5
10105380:	9cc23e04 	addi	r19,r19,2296
10105384:	2025883a 	mov	r18,r4
10105388:	010df300 	call	1010df30 <__malloc_lock>
1010538c:	98800217 	ldw	r2,8(r19)
10105390:	14400117 	ldw	r17,4(r2)
10105394:	00bfff04 	movi	r2,-4
10105398:	88a2703a 	and	r17,r17,r2
1010539c:	8c21c83a 	sub	r16,r17,r16
101053a0:	8403fbc4 	addi	r16,r16,4079
101053a4:	8020d33a 	srli	r16,r16,12
101053a8:	0083ffc4 	movi	r2,4095
101053ac:	843fffc4 	addi	r16,r16,-1
101053b0:	8020933a 	slli	r16,r16,12
101053b4:	1400060e 	bge	r2,r16,101053d0 <_malloc_trim_r+0x70>
101053b8:	000b883a 	mov	r5,zero
101053bc:	9009883a 	mov	r4,r18
101053c0:	01082800 	call	10108280 <_sbrk_r>
101053c4:	98c00217 	ldw	r3,8(r19)
101053c8:	1c47883a 	add	r3,r3,r17
101053cc:	10c00a26 	beq	r2,r3,101053f8 <_malloc_trim_r+0x98>
101053d0:	9009883a 	mov	r4,r18
101053d4:	010df540 	call	1010df54 <__malloc_unlock>
101053d8:	0005883a 	mov	r2,zero
101053dc:	dfc00417 	ldw	ra,16(sp)
101053e0:	dcc00317 	ldw	r19,12(sp)
101053e4:	dc800217 	ldw	r18,8(sp)
101053e8:	dc400117 	ldw	r17,4(sp)
101053ec:	dc000017 	ldw	r16,0(sp)
101053f0:	dec00504 	addi	sp,sp,20
101053f4:	f800283a 	ret
101053f8:	040bc83a 	sub	r5,zero,r16
101053fc:	9009883a 	mov	r4,r18
10105400:	01082800 	call	10108280 <_sbrk_r>
10105404:	00ffffc4 	movi	r3,-1
10105408:	10c00d26 	beq	r2,r3,10105440 <_malloc_trim_r+0xe0>
1010540c:	00c40474 	movhi	r3,4113
10105410:	18ce9b04 	addi	r3,r3,14956
10105414:	18800017 	ldw	r2,0(r3)
10105418:	99000217 	ldw	r4,8(r19)
1010541c:	8c23c83a 	sub	r17,r17,r16
10105420:	8c400054 	ori	r17,r17,1
10105424:	1421c83a 	sub	r16,r2,r16
10105428:	24400115 	stw	r17,4(r4)
1010542c:	9009883a 	mov	r4,r18
10105430:	1c000015 	stw	r16,0(r3)
10105434:	010df540 	call	1010df54 <__malloc_unlock>
10105438:	00800044 	movi	r2,1
1010543c:	003fe706 	br	101053dc <__alt_data_end+0xfffe53dc>
10105440:	000b883a 	mov	r5,zero
10105444:	9009883a 	mov	r4,r18
10105448:	01082800 	call	10108280 <_sbrk_r>
1010544c:	99000217 	ldw	r4,8(r19)
10105450:	014003c4 	movi	r5,15
10105454:	1107c83a 	sub	r3,r2,r4
10105458:	28ffdd0e 	bge	r5,r3,101053d0 <__alt_data_end+0xfffe53d0>
1010545c:	01440474 	movhi	r5,4113
10105460:	2947c504 	addi	r5,r5,7956
10105464:	29400017 	ldw	r5,0(r5)
10105468:	18c00054 	ori	r3,r3,1
1010546c:	20c00115 	stw	r3,4(r4)
10105470:	00c40474 	movhi	r3,4113
10105474:	1145c83a 	sub	r2,r2,r5
10105478:	18ce9b04 	addi	r3,r3,14956
1010547c:	18800015 	stw	r2,0(r3)
10105480:	003fd306 	br	101053d0 <__alt_data_end+0xfffe53d0>

10105484 <_free_r>:
10105484:	28004126 	beq	r5,zero,1010558c <_free_r+0x108>
10105488:	defffd04 	addi	sp,sp,-12
1010548c:	dc400115 	stw	r17,4(sp)
10105490:	dc000015 	stw	r16,0(sp)
10105494:	2023883a 	mov	r17,r4
10105498:	2821883a 	mov	r16,r5
1010549c:	dfc00215 	stw	ra,8(sp)
101054a0:	010df300 	call	1010df30 <__malloc_lock>
101054a4:	81ffff17 	ldw	r7,-4(r16)
101054a8:	00bfff84 	movi	r2,-2
101054ac:	01040474 	movhi	r4,4113
101054b0:	81bffe04 	addi	r6,r16,-8
101054b4:	3884703a 	and	r2,r7,r2
101054b8:	21023e04 	addi	r4,r4,2296
101054bc:	308b883a 	add	r5,r6,r2
101054c0:	2a400117 	ldw	r9,4(r5)
101054c4:	22000217 	ldw	r8,8(r4)
101054c8:	00ffff04 	movi	r3,-4
101054cc:	48c6703a 	and	r3,r9,r3
101054d0:	2a005726 	beq	r5,r8,10105630 <_free_r+0x1ac>
101054d4:	28c00115 	stw	r3,4(r5)
101054d8:	39c0004c 	andi	r7,r7,1
101054dc:	3800091e 	bne	r7,zero,10105504 <_free_r+0x80>
101054e0:	823ffe17 	ldw	r8,-8(r16)
101054e4:	22400204 	addi	r9,r4,8
101054e8:	320dc83a 	sub	r6,r6,r8
101054ec:	31c00217 	ldw	r7,8(r6)
101054f0:	1205883a 	add	r2,r2,r8
101054f4:	3a406526 	beq	r7,r9,1010568c <_free_r+0x208>
101054f8:	32000317 	ldw	r8,12(r6)
101054fc:	3a000315 	stw	r8,12(r7)
10105500:	41c00215 	stw	r7,8(r8)
10105504:	28cf883a 	add	r7,r5,r3
10105508:	39c00117 	ldw	r7,4(r7)
1010550c:	39c0004c 	andi	r7,r7,1
10105510:	38003a26 	beq	r7,zero,101055fc <_free_r+0x178>
10105514:	10c00054 	ori	r3,r2,1
10105518:	30c00115 	stw	r3,4(r6)
1010551c:	3087883a 	add	r3,r6,r2
10105520:	18800015 	stw	r2,0(r3)
10105524:	00c07fc4 	movi	r3,511
10105528:	18801936 	bltu	r3,r2,10105590 <_free_r+0x10c>
1010552c:	1004d0fa 	srli	r2,r2,3
10105530:	01c00044 	movi	r7,1
10105534:	21400117 	ldw	r5,4(r4)
10105538:	10c00044 	addi	r3,r2,1
1010553c:	18c7883a 	add	r3,r3,r3
10105540:	1005d0ba 	srai	r2,r2,2
10105544:	18c7883a 	add	r3,r3,r3
10105548:	18c7883a 	add	r3,r3,r3
1010554c:	1907883a 	add	r3,r3,r4
10105550:	3884983a 	sll	r2,r7,r2
10105554:	19c00017 	ldw	r7,0(r3)
10105558:	1a3ffe04 	addi	r8,r3,-8
1010555c:	1144b03a 	or	r2,r2,r5
10105560:	32000315 	stw	r8,12(r6)
10105564:	31c00215 	stw	r7,8(r6)
10105568:	20800115 	stw	r2,4(r4)
1010556c:	19800015 	stw	r6,0(r3)
10105570:	39800315 	stw	r6,12(r7)
10105574:	8809883a 	mov	r4,r17
10105578:	dfc00217 	ldw	ra,8(sp)
1010557c:	dc400117 	ldw	r17,4(sp)
10105580:	dc000017 	ldw	r16,0(sp)
10105584:	dec00304 	addi	sp,sp,12
10105588:	010df541 	jmpi	1010df54 <__malloc_unlock>
1010558c:	f800283a 	ret
10105590:	100ad27a 	srli	r5,r2,9
10105594:	00c00104 	movi	r3,4
10105598:	19404a36 	bltu	r3,r5,101056c4 <_free_r+0x240>
1010559c:	100ad1ba 	srli	r5,r2,6
101055a0:	28c00e44 	addi	r3,r5,57
101055a4:	18c7883a 	add	r3,r3,r3
101055a8:	29400e04 	addi	r5,r5,56
101055ac:	18c7883a 	add	r3,r3,r3
101055b0:	18c7883a 	add	r3,r3,r3
101055b4:	1909883a 	add	r4,r3,r4
101055b8:	20c00017 	ldw	r3,0(r4)
101055bc:	01c40474 	movhi	r7,4113
101055c0:	213ffe04 	addi	r4,r4,-8
101055c4:	39c23e04 	addi	r7,r7,2296
101055c8:	20c04426 	beq	r4,r3,101056dc <_free_r+0x258>
101055cc:	01ffff04 	movi	r7,-4
101055d0:	19400117 	ldw	r5,4(r3)
101055d4:	29ca703a 	and	r5,r5,r7
101055d8:	1140022e 	bgeu	r2,r5,101055e4 <_free_r+0x160>
101055dc:	18c00217 	ldw	r3,8(r3)
101055e0:	20fffb1e 	bne	r4,r3,101055d0 <__alt_data_end+0xfffe55d0>
101055e4:	19000317 	ldw	r4,12(r3)
101055e8:	31000315 	stw	r4,12(r6)
101055ec:	30c00215 	stw	r3,8(r6)
101055f0:	21800215 	stw	r6,8(r4)
101055f4:	19800315 	stw	r6,12(r3)
101055f8:	003fde06 	br	10105574 <__alt_data_end+0xfffe5574>
101055fc:	29c00217 	ldw	r7,8(r5)
10105600:	10c5883a 	add	r2,r2,r3
10105604:	00c40474 	movhi	r3,4113
10105608:	18c24004 	addi	r3,r3,2304
1010560c:	38c03b26 	beq	r7,r3,101056fc <_free_r+0x278>
10105610:	2a000317 	ldw	r8,12(r5)
10105614:	11400054 	ori	r5,r2,1
10105618:	3087883a 	add	r3,r6,r2
1010561c:	3a000315 	stw	r8,12(r7)
10105620:	41c00215 	stw	r7,8(r8)
10105624:	31400115 	stw	r5,4(r6)
10105628:	18800015 	stw	r2,0(r3)
1010562c:	003fbd06 	br	10105524 <__alt_data_end+0xfffe5524>
10105630:	39c0004c 	andi	r7,r7,1
10105634:	10c5883a 	add	r2,r2,r3
10105638:	3800071e 	bne	r7,zero,10105658 <_free_r+0x1d4>
1010563c:	81fffe17 	ldw	r7,-8(r16)
10105640:	31cdc83a 	sub	r6,r6,r7
10105644:	30c00317 	ldw	r3,12(r6)
10105648:	31400217 	ldw	r5,8(r6)
1010564c:	11c5883a 	add	r2,r2,r7
10105650:	28c00315 	stw	r3,12(r5)
10105654:	19400215 	stw	r5,8(r3)
10105658:	10c00054 	ori	r3,r2,1
1010565c:	30c00115 	stw	r3,4(r6)
10105660:	00c40474 	movhi	r3,4113
10105664:	18c7c604 	addi	r3,r3,7960
10105668:	18c00017 	ldw	r3,0(r3)
1010566c:	21800215 	stw	r6,8(r4)
10105670:	10ffc036 	bltu	r2,r3,10105574 <__alt_data_end+0xfffe5574>
10105674:	00840474 	movhi	r2,4113
10105678:	108e9204 	addi	r2,r2,14920
1010567c:	11400017 	ldw	r5,0(r2)
10105680:	8809883a 	mov	r4,r17
10105684:	01053600 	call	10105360 <_malloc_trim_r>
10105688:	003fba06 	br	10105574 <__alt_data_end+0xfffe5574>
1010568c:	28c9883a 	add	r4,r5,r3
10105690:	21000117 	ldw	r4,4(r4)
10105694:	2100004c 	andi	r4,r4,1
10105698:	2000391e 	bne	r4,zero,10105780 <_free_r+0x2fc>
1010569c:	29c00217 	ldw	r7,8(r5)
101056a0:	29000317 	ldw	r4,12(r5)
101056a4:	1885883a 	add	r2,r3,r2
101056a8:	10c00054 	ori	r3,r2,1
101056ac:	39000315 	stw	r4,12(r7)
101056b0:	21c00215 	stw	r7,8(r4)
101056b4:	30c00115 	stw	r3,4(r6)
101056b8:	308d883a 	add	r6,r6,r2
101056bc:	30800015 	stw	r2,0(r6)
101056c0:	003fac06 	br	10105574 <__alt_data_end+0xfffe5574>
101056c4:	00c00504 	movi	r3,20
101056c8:	19401536 	bltu	r3,r5,10105720 <_free_r+0x29c>
101056cc:	28c01704 	addi	r3,r5,92
101056d0:	18c7883a 	add	r3,r3,r3
101056d4:	294016c4 	addi	r5,r5,91
101056d8:	003fb406 	br	101055ac <__alt_data_end+0xfffe55ac>
101056dc:	280bd0ba 	srai	r5,r5,2
101056e0:	00c00044 	movi	r3,1
101056e4:	38800117 	ldw	r2,4(r7)
101056e8:	194a983a 	sll	r5,r3,r5
101056ec:	2007883a 	mov	r3,r4
101056f0:	2884b03a 	or	r2,r5,r2
101056f4:	38800115 	stw	r2,4(r7)
101056f8:	003fbb06 	br	101055e8 <__alt_data_end+0xfffe55e8>
101056fc:	21800515 	stw	r6,20(r4)
10105700:	21800415 	stw	r6,16(r4)
10105704:	10c00054 	ori	r3,r2,1
10105708:	31c00315 	stw	r7,12(r6)
1010570c:	31c00215 	stw	r7,8(r6)
10105710:	30c00115 	stw	r3,4(r6)
10105714:	308d883a 	add	r6,r6,r2
10105718:	30800015 	stw	r2,0(r6)
1010571c:	003f9506 	br	10105574 <__alt_data_end+0xfffe5574>
10105720:	00c01504 	movi	r3,84
10105724:	19400536 	bltu	r3,r5,1010573c <_free_r+0x2b8>
10105728:	100ad33a 	srli	r5,r2,12
1010572c:	28c01bc4 	addi	r3,r5,111
10105730:	18c7883a 	add	r3,r3,r3
10105734:	29401b84 	addi	r5,r5,110
10105738:	003f9c06 	br	101055ac <__alt_data_end+0xfffe55ac>
1010573c:	00c05504 	movi	r3,340
10105740:	19400536 	bltu	r3,r5,10105758 <_free_r+0x2d4>
10105744:	100ad3fa 	srli	r5,r2,15
10105748:	28c01e04 	addi	r3,r5,120
1010574c:	18c7883a 	add	r3,r3,r3
10105750:	29401dc4 	addi	r5,r5,119
10105754:	003f9506 	br	101055ac <__alt_data_end+0xfffe55ac>
10105758:	00c15504 	movi	r3,1364
1010575c:	19400536 	bltu	r3,r5,10105774 <_free_r+0x2f0>
10105760:	100ad4ba 	srli	r5,r2,18
10105764:	28c01f44 	addi	r3,r5,125
10105768:	18c7883a 	add	r3,r3,r3
1010576c:	29401f04 	addi	r5,r5,124
10105770:	003f8e06 	br	101055ac <__alt_data_end+0xfffe55ac>
10105774:	00c03f84 	movi	r3,254
10105778:	01401f84 	movi	r5,126
1010577c:	003f8b06 	br	101055ac <__alt_data_end+0xfffe55ac>
10105780:	10c00054 	ori	r3,r2,1
10105784:	30c00115 	stw	r3,4(r6)
10105788:	308d883a 	add	r6,r6,r2
1010578c:	30800015 	stw	r2,0(r6)
10105790:	003f7806 	br	10105574 <__alt_data_end+0xfffe5574>

10105794 <__sfvwrite_r>:
10105794:	30800217 	ldw	r2,8(r6)
10105798:	10006726 	beq	r2,zero,10105938 <__sfvwrite_r+0x1a4>
1010579c:	28c0030b 	ldhu	r3,12(r5)
101057a0:	defff404 	addi	sp,sp,-48
101057a4:	dd400715 	stw	r21,28(sp)
101057a8:	dd000615 	stw	r20,24(sp)
101057ac:	dc000215 	stw	r16,8(sp)
101057b0:	dfc00b15 	stw	ra,44(sp)
101057b4:	df000a15 	stw	fp,40(sp)
101057b8:	ddc00915 	stw	r23,36(sp)
101057bc:	dd800815 	stw	r22,32(sp)
101057c0:	dcc00515 	stw	r19,20(sp)
101057c4:	dc800415 	stw	r18,16(sp)
101057c8:	dc400315 	stw	r17,12(sp)
101057cc:	1880020c 	andi	r2,r3,8
101057d0:	2821883a 	mov	r16,r5
101057d4:	202b883a 	mov	r21,r4
101057d8:	3029883a 	mov	r20,r6
101057dc:	10002726 	beq	r2,zero,1010587c <__sfvwrite_r+0xe8>
101057e0:	28800417 	ldw	r2,16(r5)
101057e4:	10002526 	beq	r2,zero,1010587c <__sfvwrite_r+0xe8>
101057e8:	1880008c 	andi	r2,r3,2
101057ec:	a4400017 	ldw	r17,0(r20)
101057f0:	10002a26 	beq	r2,zero,1010589c <__sfvwrite_r+0x108>
101057f4:	05a00034 	movhi	r22,32768
101057f8:	0027883a 	mov	r19,zero
101057fc:	0025883a 	mov	r18,zero
10105800:	b5bf0004 	addi	r22,r22,-1024
10105804:	980d883a 	mov	r6,r19
10105808:	a809883a 	mov	r4,r21
1010580c:	90004626 	beq	r18,zero,10105928 <__sfvwrite_r+0x194>
10105810:	900f883a 	mov	r7,r18
10105814:	b480022e 	bgeu	r22,r18,10105820 <__sfvwrite_r+0x8c>
10105818:	01e00034 	movhi	r7,32768
1010581c:	39ff0004 	addi	r7,r7,-1024
10105820:	80800917 	ldw	r2,36(r16)
10105824:	81400717 	ldw	r5,28(r16)
10105828:	103ee83a 	callr	r2
1010582c:	00805a0e 	bge	zero,r2,10105998 <__sfvwrite_r+0x204>
10105830:	a0c00217 	ldw	r3,8(r20)
10105834:	98a7883a 	add	r19,r19,r2
10105838:	90a5c83a 	sub	r18,r18,r2
1010583c:	1885c83a 	sub	r2,r3,r2
10105840:	a0800215 	stw	r2,8(r20)
10105844:	103fef1e 	bne	r2,zero,10105804 <__alt_data_end+0xfffe5804>
10105848:	0005883a 	mov	r2,zero
1010584c:	dfc00b17 	ldw	ra,44(sp)
10105850:	df000a17 	ldw	fp,40(sp)
10105854:	ddc00917 	ldw	r23,36(sp)
10105858:	dd800817 	ldw	r22,32(sp)
1010585c:	dd400717 	ldw	r21,28(sp)
10105860:	dd000617 	ldw	r20,24(sp)
10105864:	dcc00517 	ldw	r19,20(sp)
10105868:	dc800417 	ldw	r18,16(sp)
1010586c:	dc400317 	ldw	r17,12(sp)
10105870:	dc000217 	ldw	r16,8(sp)
10105874:	dec00c04 	addi	sp,sp,48
10105878:	f800283a 	ret
1010587c:	800b883a 	mov	r5,r16
10105880:	a809883a 	mov	r4,r21
10105884:	01033040 	call	10103304 <__swsetup_r>
10105888:	1000ee1e 	bne	r2,zero,10105c44 <__sfvwrite_r+0x4b0>
1010588c:	80c0030b 	ldhu	r3,12(r16)
10105890:	a4400017 	ldw	r17,0(r20)
10105894:	1880008c 	andi	r2,r3,2
10105898:	103fd61e 	bne	r2,zero,101057f4 <__alt_data_end+0xfffe57f4>
1010589c:	1880004c 	andi	r2,r3,1
101058a0:	1000421e 	bne	r2,zero,101059ac <__sfvwrite_r+0x218>
101058a4:	0039883a 	mov	fp,zero
101058a8:	0025883a 	mov	r18,zero
101058ac:	90001a26 	beq	r18,zero,10105918 <__sfvwrite_r+0x184>
101058b0:	1880800c 	andi	r2,r3,512
101058b4:	84c00217 	ldw	r19,8(r16)
101058b8:	10002126 	beq	r2,zero,10105940 <__sfvwrite_r+0x1ac>
101058bc:	982f883a 	mov	r23,r19
101058c0:	94c09636 	bltu	r18,r19,10105b1c <__sfvwrite_r+0x388>
101058c4:	1881200c 	andi	r2,r3,1152
101058c8:	1000a11e 	bne	r2,zero,10105b50 <__sfvwrite_r+0x3bc>
101058cc:	81000017 	ldw	r4,0(r16)
101058d0:	b80d883a 	mov	r6,r23
101058d4:	e00b883a 	mov	r5,fp
101058d8:	010696c0 	call	1010696c <memmove>
101058dc:	80c00217 	ldw	r3,8(r16)
101058e0:	81000017 	ldw	r4,0(r16)
101058e4:	9005883a 	mov	r2,r18
101058e8:	1ce7c83a 	sub	r19,r3,r19
101058ec:	25cf883a 	add	r7,r4,r23
101058f0:	84c00215 	stw	r19,8(r16)
101058f4:	81c00015 	stw	r7,0(r16)
101058f8:	a0c00217 	ldw	r3,8(r20)
101058fc:	e0b9883a 	add	fp,fp,r2
10105900:	90a5c83a 	sub	r18,r18,r2
10105904:	18a7c83a 	sub	r19,r3,r2
10105908:	a4c00215 	stw	r19,8(r20)
1010590c:	983fce26 	beq	r19,zero,10105848 <__alt_data_end+0xfffe5848>
10105910:	80c0030b 	ldhu	r3,12(r16)
10105914:	903fe61e 	bne	r18,zero,101058b0 <__alt_data_end+0xfffe58b0>
10105918:	8f000017 	ldw	fp,0(r17)
1010591c:	8c800117 	ldw	r18,4(r17)
10105920:	8c400204 	addi	r17,r17,8
10105924:	003fe106 	br	101058ac <__alt_data_end+0xfffe58ac>
10105928:	8cc00017 	ldw	r19,0(r17)
1010592c:	8c800117 	ldw	r18,4(r17)
10105930:	8c400204 	addi	r17,r17,8
10105934:	003fb306 	br	10105804 <__alt_data_end+0xfffe5804>
10105938:	0005883a 	mov	r2,zero
1010593c:	f800283a 	ret
10105940:	81000017 	ldw	r4,0(r16)
10105944:	80800417 	ldw	r2,16(r16)
10105948:	11005a36 	bltu	r2,r4,10105ab4 <__sfvwrite_r+0x320>
1010594c:	85c00517 	ldw	r23,20(r16)
10105950:	95c05836 	bltu	r18,r23,10105ab4 <__sfvwrite_r+0x320>
10105954:	00a00034 	movhi	r2,32768
10105958:	10bfffc4 	addi	r2,r2,-1
1010595c:	9009883a 	mov	r4,r18
10105960:	1480012e 	bgeu	r2,r18,10105968 <__sfvwrite_r+0x1d4>
10105964:	1009883a 	mov	r4,r2
10105968:	b80b883a 	mov	r5,r23
1010596c:	0100a540 	call	10100a54 <__divsi3>
10105970:	b80b883a 	mov	r5,r23
10105974:	1009883a 	mov	r4,r2
10105978:	0100c080 	call	10100c08 <__mulsi3>
1010597c:	81400717 	ldw	r5,28(r16)
10105980:	80c00917 	ldw	r3,36(r16)
10105984:	100f883a 	mov	r7,r2
10105988:	e00d883a 	mov	r6,fp
1010598c:	a809883a 	mov	r4,r21
10105990:	183ee83a 	callr	r3
10105994:	00bfd816 	blt	zero,r2,101058f8 <__alt_data_end+0xfffe58f8>
10105998:	8080030b 	ldhu	r2,12(r16)
1010599c:	10801014 	ori	r2,r2,64
101059a0:	8080030d 	sth	r2,12(r16)
101059a4:	00bfffc4 	movi	r2,-1
101059a8:	003fa806 	br	1010584c <__alt_data_end+0xfffe584c>
101059ac:	0027883a 	mov	r19,zero
101059b0:	0011883a 	mov	r8,zero
101059b4:	0039883a 	mov	fp,zero
101059b8:	0025883a 	mov	r18,zero
101059bc:	90001f26 	beq	r18,zero,10105a3c <__sfvwrite_r+0x2a8>
101059c0:	40005a26 	beq	r8,zero,10105b2c <__sfvwrite_r+0x398>
101059c4:	982d883a 	mov	r22,r19
101059c8:	94c0012e 	bgeu	r18,r19,101059d0 <__sfvwrite_r+0x23c>
101059cc:	902d883a 	mov	r22,r18
101059d0:	81000017 	ldw	r4,0(r16)
101059d4:	80800417 	ldw	r2,16(r16)
101059d8:	b02f883a 	mov	r23,r22
101059dc:	81c00517 	ldw	r7,20(r16)
101059e0:	1100032e 	bgeu	r2,r4,101059f0 <__sfvwrite_r+0x25c>
101059e4:	80c00217 	ldw	r3,8(r16)
101059e8:	38c7883a 	add	r3,r7,r3
101059ec:	1d801816 	blt	r3,r22,10105a50 <__sfvwrite_r+0x2bc>
101059f0:	b1c03e16 	blt	r22,r7,10105aec <__sfvwrite_r+0x358>
101059f4:	80800917 	ldw	r2,36(r16)
101059f8:	81400717 	ldw	r5,28(r16)
101059fc:	e00d883a 	mov	r6,fp
10105a00:	da000115 	stw	r8,4(sp)
10105a04:	a809883a 	mov	r4,r21
10105a08:	103ee83a 	callr	r2
10105a0c:	102f883a 	mov	r23,r2
10105a10:	da000117 	ldw	r8,4(sp)
10105a14:	00bfe00e 	bge	zero,r2,10105998 <__alt_data_end+0xfffe5998>
10105a18:	9de7c83a 	sub	r19,r19,r23
10105a1c:	98001f26 	beq	r19,zero,10105a9c <__sfvwrite_r+0x308>
10105a20:	a0800217 	ldw	r2,8(r20)
10105a24:	e5f9883a 	add	fp,fp,r23
10105a28:	95e5c83a 	sub	r18,r18,r23
10105a2c:	15efc83a 	sub	r23,r2,r23
10105a30:	a5c00215 	stw	r23,8(r20)
10105a34:	b83f8426 	beq	r23,zero,10105848 <__alt_data_end+0xfffe5848>
10105a38:	903fe11e 	bne	r18,zero,101059c0 <__alt_data_end+0xfffe59c0>
10105a3c:	8f000017 	ldw	fp,0(r17)
10105a40:	8c800117 	ldw	r18,4(r17)
10105a44:	0011883a 	mov	r8,zero
10105a48:	8c400204 	addi	r17,r17,8
10105a4c:	003fdb06 	br	101059bc <__alt_data_end+0xfffe59bc>
10105a50:	180d883a 	mov	r6,r3
10105a54:	e00b883a 	mov	r5,fp
10105a58:	da000115 	stw	r8,4(sp)
10105a5c:	d8c00015 	stw	r3,0(sp)
10105a60:	010696c0 	call	1010696c <memmove>
10105a64:	d8c00017 	ldw	r3,0(sp)
10105a68:	80800017 	ldw	r2,0(r16)
10105a6c:	800b883a 	mov	r5,r16
10105a70:	a809883a 	mov	r4,r21
10105a74:	10c5883a 	add	r2,r2,r3
10105a78:	80800015 	stw	r2,0(r16)
10105a7c:	d8c00015 	stw	r3,0(sp)
10105a80:	0104f240 	call	10104f24 <_fflush_r>
10105a84:	d8c00017 	ldw	r3,0(sp)
10105a88:	da000117 	ldw	r8,4(sp)
10105a8c:	103fc21e 	bne	r2,zero,10105998 <__alt_data_end+0xfffe5998>
10105a90:	182f883a 	mov	r23,r3
10105a94:	9de7c83a 	sub	r19,r19,r23
10105a98:	983fe11e 	bne	r19,zero,10105a20 <__alt_data_end+0xfffe5a20>
10105a9c:	800b883a 	mov	r5,r16
10105aa0:	a809883a 	mov	r4,r21
10105aa4:	0104f240 	call	10104f24 <_fflush_r>
10105aa8:	103fbb1e 	bne	r2,zero,10105998 <__alt_data_end+0xfffe5998>
10105aac:	0011883a 	mov	r8,zero
10105ab0:	003fdb06 	br	10105a20 <__alt_data_end+0xfffe5a20>
10105ab4:	94c0012e 	bgeu	r18,r19,10105abc <__sfvwrite_r+0x328>
10105ab8:	9027883a 	mov	r19,r18
10105abc:	980d883a 	mov	r6,r19
10105ac0:	e00b883a 	mov	r5,fp
10105ac4:	010696c0 	call	1010696c <memmove>
10105ac8:	80800217 	ldw	r2,8(r16)
10105acc:	80c00017 	ldw	r3,0(r16)
10105ad0:	14c5c83a 	sub	r2,r2,r19
10105ad4:	1cc7883a 	add	r3,r3,r19
10105ad8:	80800215 	stw	r2,8(r16)
10105adc:	80c00015 	stw	r3,0(r16)
10105ae0:	10004326 	beq	r2,zero,10105bf0 <__sfvwrite_r+0x45c>
10105ae4:	9805883a 	mov	r2,r19
10105ae8:	003f8306 	br	101058f8 <__alt_data_end+0xfffe58f8>
10105aec:	b00d883a 	mov	r6,r22
10105af0:	e00b883a 	mov	r5,fp
10105af4:	da000115 	stw	r8,4(sp)
10105af8:	010696c0 	call	1010696c <memmove>
10105afc:	80800217 	ldw	r2,8(r16)
10105b00:	80c00017 	ldw	r3,0(r16)
10105b04:	da000117 	ldw	r8,4(sp)
10105b08:	1585c83a 	sub	r2,r2,r22
10105b0c:	1dad883a 	add	r22,r3,r22
10105b10:	80800215 	stw	r2,8(r16)
10105b14:	85800015 	stw	r22,0(r16)
10105b18:	003fbf06 	br	10105a18 <__alt_data_end+0xfffe5a18>
10105b1c:	81000017 	ldw	r4,0(r16)
10105b20:	9027883a 	mov	r19,r18
10105b24:	902f883a 	mov	r23,r18
10105b28:	003f6906 	br	101058d0 <__alt_data_end+0xfffe58d0>
10105b2c:	900d883a 	mov	r6,r18
10105b30:	01400284 	movi	r5,10
10105b34:	e009883a 	mov	r4,fp
10105b38:	01068880 	call	10106888 <memchr>
10105b3c:	10003e26 	beq	r2,zero,10105c38 <__sfvwrite_r+0x4a4>
10105b40:	10800044 	addi	r2,r2,1
10105b44:	1727c83a 	sub	r19,r2,fp
10105b48:	02000044 	movi	r8,1
10105b4c:	003f9d06 	br	101059c4 <__alt_data_end+0xfffe59c4>
10105b50:	80800517 	ldw	r2,20(r16)
10105b54:	81400417 	ldw	r5,16(r16)
10105b58:	81c00017 	ldw	r7,0(r16)
10105b5c:	10a7883a 	add	r19,r2,r2
10105b60:	9885883a 	add	r2,r19,r2
10105b64:	1026d7fa 	srli	r19,r2,31
10105b68:	396dc83a 	sub	r22,r7,r5
10105b6c:	b1000044 	addi	r4,r22,1
10105b70:	9885883a 	add	r2,r19,r2
10105b74:	1027d07a 	srai	r19,r2,1
10105b78:	2485883a 	add	r2,r4,r18
10105b7c:	980d883a 	mov	r6,r19
10105b80:	9880022e 	bgeu	r19,r2,10105b8c <__sfvwrite_r+0x3f8>
10105b84:	1027883a 	mov	r19,r2
10105b88:	100d883a 	mov	r6,r2
10105b8c:	18c1000c 	andi	r3,r3,1024
10105b90:	18001c26 	beq	r3,zero,10105c04 <__sfvwrite_r+0x470>
10105b94:	300b883a 	mov	r5,r6
10105b98:	a809883a 	mov	r4,r21
10105b9c:	010607c0 	call	1010607c <_malloc_r>
10105ba0:	102f883a 	mov	r23,r2
10105ba4:	10002926 	beq	r2,zero,10105c4c <__sfvwrite_r+0x4b8>
10105ba8:	81400417 	ldw	r5,16(r16)
10105bac:	b00d883a 	mov	r6,r22
10105bb0:	1009883a 	mov	r4,r2
10105bb4:	0100c300 	call	10100c30 <memcpy>
10105bb8:	8080030b 	ldhu	r2,12(r16)
10105bbc:	00fedfc4 	movi	r3,-1153
10105bc0:	10c4703a 	and	r2,r2,r3
10105bc4:	10802014 	ori	r2,r2,128
10105bc8:	8080030d 	sth	r2,12(r16)
10105bcc:	bd89883a 	add	r4,r23,r22
10105bd0:	9d8fc83a 	sub	r7,r19,r22
10105bd4:	85c00415 	stw	r23,16(r16)
10105bd8:	84c00515 	stw	r19,20(r16)
10105bdc:	81000015 	stw	r4,0(r16)
10105be0:	9027883a 	mov	r19,r18
10105be4:	81c00215 	stw	r7,8(r16)
10105be8:	902f883a 	mov	r23,r18
10105bec:	003f3806 	br	101058d0 <__alt_data_end+0xfffe58d0>
10105bf0:	800b883a 	mov	r5,r16
10105bf4:	a809883a 	mov	r4,r21
10105bf8:	0104f240 	call	10104f24 <_fflush_r>
10105bfc:	103fb926 	beq	r2,zero,10105ae4 <__alt_data_end+0xfffe5ae4>
10105c00:	003f6506 	br	10105998 <__alt_data_end+0xfffe5998>
10105c04:	a809883a 	mov	r4,r21
10105c08:	0107ca80 	call	10107ca8 <_realloc_r>
10105c0c:	102f883a 	mov	r23,r2
10105c10:	103fee1e 	bne	r2,zero,10105bcc <__alt_data_end+0xfffe5bcc>
10105c14:	81400417 	ldw	r5,16(r16)
10105c18:	a809883a 	mov	r4,r21
10105c1c:	01054840 	call	10105484 <_free_r>
10105c20:	8080030b 	ldhu	r2,12(r16)
10105c24:	00ffdfc4 	movi	r3,-129
10105c28:	1884703a 	and	r2,r3,r2
10105c2c:	00c00304 	movi	r3,12
10105c30:	a8c00015 	stw	r3,0(r21)
10105c34:	003f5906 	br	1010599c <__alt_data_end+0xfffe599c>
10105c38:	94c00044 	addi	r19,r18,1
10105c3c:	02000044 	movi	r8,1
10105c40:	003f6006 	br	101059c4 <__alt_data_end+0xfffe59c4>
10105c44:	00bfffc4 	movi	r2,-1
10105c48:	003f0006 	br	1010584c <__alt_data_end+0xfffe584c>
10105c4c:	00800304 	movi	r2,12
10105c50:	a8800015 	stw	r2,0(r21)
10105c54:	8080030b 	ldhu	r2,12(r16)
10105c58:	003f5006 	br	1010599c <__alt_data_end+0xfffe599c>

10105c5c <_fwalk>:
10105c5c:	defff704 	addi	sp,sp,-36
10105c60:	dd000415 	stw	r20,16(sp)
10105c64:	dfc00815 	stw	ra,32(sp)
10105c68:	ddc00715 	stw	r23,28(sp)
10105c6c:	dd800615 	stw	r22,24(sp)
10105c70:	dd400515 	stw	r21,20(sp)
10105c74:	dcc00315 	stw	r19,12(sp)
10105c78:	dc800215 	stw	r18,8(sp)
10105c7c:	dc400115 	stw	r17,4(sp)
10105c80:	dc000015 	stw	r16,0(sp)
10105c84:	2500b804 	addi	r20,r4,736
10105c88:	a0002326 	beq	r20,zero,10105d18 <_fwalk+0xbc>
10105c8c:	282b883a 	mov	r21,r5
10105c90:	002f883a 	mov	r23,zero
10105c94:	05800044 	movi	r22,1
10105c98:	04ffffc4 	movi	r19,-1
10105c9c:	a4400117 	ldw	r17,4(r20)
10105ca0:	a4800217 	ldw	r18,8(r20)
10105ca4:	8c7fffc4 	addi	r17,r17,-1
10105ca8:	88000d16 	blt	r17,zero,10105ce0 <_fwalk+0x84>
10105cac:	94000304 	addi	r16,r18,12
10105cb0:	94800384 	addi	r18,r18,14
10105cb4:	8080000b 	ldhu	r2,0(r16)
10105cb8:	8c7fffc4 	addi	r17,r17,-1
10105cbc:	813ffd04 	addi	r4,r16,-12
10105cc0:	b080042e 	bgeu	r22,r2,10105cd4 <_fwalk+0x78>
10105cc4:	9080000f 	ldh	r2,0(r18)
10105cc8:	14c00226 	beq	r2,r19,10105cd4 <_fwalk+0x78>
10105ccc:	a83ee83a 	callr	r21
10105cd0:	b8aeb03a 	or	r23,r23,r2
10105cd4:	84001a04 	addi	r16,r16,104
10105cd8:	94801a04 	addi	r18,r18,104
10105cdc:	8cfff51e 	bne	r17,r19,10105cb4 <__alt_data_end+0xfffe5cb4>
10105ce0:	a5000017 	ldw	r20,0(r20)
10105ce4:	a03fed1e 	bne	r20,zero,10105c9c <__alt_data_end+0xfffe5c9c>
10105ce8:	b805883a 	mov	r2,r23
10105cec:	dfc00817 	ldw	ra,32(sp)
10105cf0:	ddc00717 	ldw	r23,28(sp)
10105cf4:	dd800617 	ldw	r22,24(sp)
10105cf8:	dd400517 	ldw	r21,20(sp)
10105cfc:	dd000417 	ldw	r20,16(sp)
10105d00:	dcc00317 	ldw	r19,12(sp)
10105d04:	dc800217 	ldw	r18,8(sp)
10105d08:	dc400117 	ldw	r17,4(sp)
10105d0c:	dc000017 	ldw	r16,0(sp)
10105d10:	dec00904 	addi	sp,sp,36
10105d14:	f800283a 	ret
10105d18:	002f883a 	mov	r23,zero
10105d1c:	003ff206 	br	10105ce8 <__alt_data_end+0xfffe5ce8>

10105d20 <_fwalk_reent>:
10105d20:	defff704 	addi	sp,sp,-36
10105d24:	dd000415 	stw	r20,16(sp)
10105d28:	dfc00815 	stw	ra,32(sp)
10105d2c:	ddc00715 	stw	r23,28(sp)
10105d30:	dd800615 	stw	r22,24(sp)
10105d34:	dd400515 	stw	r21,20(sp)
10105d38:	dcc00315 	stw	r19,12(sp)
10105d3c:	dc800215 	stw	r18,8(sp)
10105d40:	dc400115 	stw	r17,4(sp)
10105d44:	dc000015 	stw	r16,0(sp)
10105d48:	2500b804 	addi	r20,r4,736
10105d4c:	a0002326 	beq	r20,zero,10105ddc <_fwalk_reent+0xbc>
10105d50:	282b883a 	mov	r21,r5
10105d54:	2027883a 	mov	r19,r4
10105d58:	002f883a 	mov	r23,zero
10105d5c:	05800044 	movi	r22,1
10105d60:	04bfffc4 	movi	r18,-1
10105d64:	a4400117 	ldw	r17,4(r20)
10105d68:	a4000217 	ldw	r16,8(r20)
10105d6c:	8c7fffc4 	addi	r17,r17,-1
10105d70:	88000c16 	blt	r17,zero,10105da4 <_fwalk_reent+0x84>
10105d74:	84000304 	addi	r16,r16,12
10105d78:	8080000b 	ldhu	r2,0(r16)
10105d7c:	8c7fffc4 	addi	r17,r17,-1
10105d80:	817ffd04 	addi	r5,r16,-12
10105d84:	b080052e 	bgeu	r22,r2,10105d9c <_fwalk_reent+0x7c>
10105d88:	8080008f 	ldh	r2,2(r16)
10105d8c:	9809883a 	mov	r4,r19
10105d90:	14800226 	beq	r2,r18,10105d9c <_fwalk_reent+0x7c>
10105d94:	a83ee83a 	callr	r21
10105d98:	b8aeb03a 	or	r23,r23,r2
10105d9c:	84001a04 	addi	r16,r16,104
10105da0:	8cbff51e 	bne	r17,r18,10105d78 <__alt_data_end+0xfffe5d78>
10105da4:	a5000017 	ldw	r20,0(r20)
10105da8:	a03fee1e 	bne	r20,zero,10105d64 <__alt_data_end+0xfffe5d64>
10105dac:	b805883a 	mov	r2,r23
10105db0:	dfc00817 	ldw	ra,32(sp)
10105db4:	ddc00717 	ldw	r23,28(sp)
10105db8:	dd800617 	ldw	r22,24(sp)
10105dbc:	dd400517 	ldw	r21,20(sp)
10105dc0:	dd000417 	ldw	r20,16(sp)
10105dc4:	dcc00317 	ldw	r19,12(sp)
10105dc8:	dc800217 	ldw	r18,8(sp)
10105dcc:	dc400117 	ldw	r17,4(sp)
10105dd0:	dc000017 	ldw	r16,0(sp)
10105dd4:	dec00904 	addi	sp,sp,36
10105dd8:	f800283a 	ret
10105ddc:	002f883a 	mov	r23,zero
10105de0:	003ff206 	br	10105dac <__alt_data_end+0xfffe5dac>

10105de4 <_setlocale_r>:
10105de4:	30001b26 	beq	r6,zero,10105e54 <_setlocale_r+0x70>
10105de8:	01440474 	movhi	r5,4113
10105dec:	defffe04 	addi	sp,sp,-8
10105df0:	29407604 	addi	r5,r5,472
10105df4:	3009883a 	mov	r4,r6
10105df8:	dc000015 	stw	r16,0(sp)
10105dfc:	dfc00115 	stw	ra,4(sp)
10105e00:	3021883a 	mov	r16,r6
10105e04:	01084100 	call	10108410 <strcmp>
10105e08:	1000061e 	bne	r2,zero,10105e24 <_setlocale_r+0x40>
10105e0c:	00840474 	movhi	r2,4113
10105e10:	10807504 	addi	r2,r2,468
10105e14:	dfc00117 	ldw	ra,4(sp)
10105e18:	dc000017 	ldw	r16,0(sp)
10105e1c:	dec00204 	addi	sp,sp,8
10105e20:	f800283a 	ret
10105e24:	01440474 	movhi	r5,4113
10105e28:	29407504 	addi	r5,r5,468
10105e2c:	8009883a 	mov	r4,r16
10105e30:	01084100 	call	10108410 <strcmp>
10105e34:	103ff526 	beq	r2,zero,10105e0c <__alt_data_end+0xfffe5e0c>
10105e38:	01440474 	movhi	r5,4113
10105e3c:	29406004 	addi	r5,r5,384
10105e40:	8009883a 	mov	r4,r16
10105e44:	01084100 	call	10108410 <strcmp>
10105e48:	103ff026 	beq	r2,zero,10105e0c <__alt_data_end+0xfffe5e0c>
10105e4c:	0005883a 	mov	r2,zero
10105e50:	003ff006 	br	10105e14 <__alt_data_end+0xfffe5e14>
10105e54:	00840474 	movhi	r2,4113
10105e58:	10807504 	addi	r2,r2,468
10105e5c:	f800283a 	ret

10105e60 <__locale_charset>:
10105e60:	00840474 	movhi	r2,4113
10105e64:	10822804 	addi	r2,r2,2208
10105e68:	f800283a 	ret

10105e6c <__locale_mb_cur_max>:
10105e6c:	00840474 	movhi	r2,4113
10105e70:	1087c404 	addi	r2,r2,7952
10105e74:	10800017 	ldw	r2,0(r2)
10105e78:	f800283a 	ret

10105e7c <__locale_msgcharset>:
10105e7c:	00840474 	movhi	r2,4113
10105e80:	10822004 	addi	r2,r2,2176
10105e84:	f800283a 	ret

10105e88 <__locale_cjk_lang>:
10105e88:	0005883a 	mov	r2,zero
10105e8c:	f800283a 	ret

10105e90 <_localeconv_r>:
10105e90:	00840474 	movhi	r2,4113
10105e94:	10823004 	addi	r2,r2,2240
10105e98:	f800283a 	ret

10105e9c <setlocale>:
10105e9c:	00840474 	movhi	r2,4113
10105ea0:	1087c304 	addi	r2,r2,7948
10105ea4:	280d883a 	mov	r6,r5
10105ea8:	200b883a 	mov	r5,r4
10105eac:	11000017 	ldw	r4,0(r2)
10105eb0:	0105de41 	jmpi	10105de4 <_setlocale_r>

10105eb4 <localeconv>:
10105eb4:	00840474 	movhi	r2,4113
10105eb8:	10823004 	addi	r2,r2,2240
10105ebc:	f800283a 	ret

10105ec0 <__smakebuf_r>:
10105ec0:	2880030b 	ldhu	r2,12(r5)
10105ec4:	10c0008c 	andi	r3,r2,2
10105ec8:	1800411e 	bne	r3,zero,10105fd0 <__smakebuf_r+0x110>
10105ecc:	deffec04 	addi	sp,sp,-80
10105ed0:	dc000f15 	stw	r16,60(sp)
10105ed4:	2821883a 	mov	r16,r5
10105ed8:	2940038f 	ldh	r5,14(r5)
10105edc:	dc401015 	stw	r17,64(sp)
10105ee0:	dfc01315 	stw	ra,76(sp)
10105ee4:	dcc01215 	stw	r19,72(sp)
10105ee8:	dc801115 	stw	r18,68(sp)
10105eec:	2023883a 	mov	r17,r4
10105ef0:	28001c16 	blt	r5,zero,10105f64 <__smakebuf_r+0xa4>
10105ef4:	d80d883a 	mov	r6,sp
10105ef8:	010a0800 	call	1010a080 <_fstat_r>
10105efc:	10001816 	blt	r2,zero,10105f60 <__smakebuf_r+0xa0>
10105f00:	d8800117 	ldw	r2,4(sp)
10105f04:	00e00014 	movui	r3,32768
10105f08:	10bc000c 	andi	r2,r2,61440
10105f0c:	14c80020 	cmpeqi	r19,r2,8192
10105f10:	10c03726 	beq	r2,r3,10105ff0 <__smakebuf_r+0x130>
10105f14:	80c0030b 	ldhu	r3,12(r16)
10105f18:	18c20014 	ori	r3,r3,2048
10105f1c:	80c0030d 	sth	r3,12(r16)
10105f20:	00c80004 	movi	r3,8192
10105f24:	10c0521e 	bne	r2,r3,10106070 <__smakebuf_r+0x1b0>
10105f28:	8140038f 	ldh	r5,14(r16)
10105f2c:	8809883a 	mov	r4,r17
10105f30:	010a0dc0 	call	1010a0dc <_isatty_r>
10105f34:	10004c26 	beq	r2,zero,10106068 <__smakebuf_r+0x1a8>
10105f38:	8080030b 	ldhu	r2,12(r16)
10105f3c:	80c010c4 	addi	r3,r16,67
10105f40:	80c00015 	stw	r3,0(r16)
10105f44:	10800054 	ori	r2,r2,1
10105f48:	8080030d 	sth	r2,12(r16)
10105f4c:	00800044 	movi	r2,1
10105f50:	80c00415 	stw	r3,16(r16)
10105f54:	80800515 	stw	r2,20(r16)
10105f58:	04810004 	movi	r18,1024
10105f5c:	00000706 	br	10105f7c <__smakebuf_r+0xbc>
10105f60:	8080030b 	ldhu	r2,12(r16)
10105f64:	10c0200c 	andi	r3,r2,128
10105f68:	18001f1e 	bne	r3,zero,10105fe8 <__smakebuf_r+0x128>
10105f6c:	04810004 	movi	r18,1024
10105f70:	10820014 	ori	r2,r2,2048
10105f74:	8080030d 	sth	r2,12(r16)
10105f78:	0027883a 	mov	r19,zero
10105f7c:	900b883a 	mov	r5,r18
10105f80:	8809883a 	mov	r4,r17
10105f84:	010607c0 	call	1010607c <_malloc_r>
10105f88:	10002c26 	beq	r2,zero,1010603c <__smakebuf_r+0x17c>
10105f8c:	80c0030b 	ldhu	r3,12(r16)
10105f90:	01040434 	movhi	r4,4112
10105f94:	2113ee04 	addi	r4,r4,20408
10105f98:	89000f15 	stw	r4,60(r17)
10105f9c:	18c02014 	ori	r3,r3,128
10105fa0:	80c0030d 	sth	r3,12(r16)
10105fa4:	80800015 	stw	r2,0(r16)
10105fa8:	80800415 	stw	r2,16(r16)
10105fac:	84800515 	stw	r18,20(r16)
10105fb0:	98001a1e 	bne	r19,zero,1010601c <__smakebuf_r+0x15c>
10105fb4:	dfc01317 	ldw	ra,76(sp)
10105fb8:	dcc01217 	ldw	r19,72(sp)
10105fbc:	dc801117 	ldw	r18,68(sp)
10105fc0:	dc401017 	ldw	r17,64(sp)
10105fc4:	dc000f17 	ldw	r16,60(sp)
10105fc8:	dec01404 	addi	sp,sp,80
10105fcc:	f800283a 	ret
10105fd0:	288010c4 	addi	r2,r5,67
10105fd4:	28800015 	stw	r2,0(r5)
10105fd8:	28800415 	stw	r2,16(r5)
10105fdc:	00800044 	movi	r2,1
10105fe0:	28800515 	stw	r2,20(r5)
10105fe4:	f800283a 	ret
10105fe8:	04801004 	movi	r18,64
10105fec:	003fe006 	br	10105f70 <__alt_data_end+0xfffe5f70>
10105ff0:	81000a17 	ldw	r4,40(r16)
10105ff4:	00c40474 	movhi	r3,4113
10105ff8:	18e0eb04 	addi	r3,r3,-31828
10105ffc:	20ffc51e 	bne	r4,r3,10105f14 <__alt_data_end+0xfffe5f14>
10106000:	8080030b 	ldhu	r2,12(r16)
10106004:	04810004 	movi	r18,1024
10106008:	84801315 	stw	r18,76(r16)
1010600c:	1484b03a 	or	r2,r2,r18
10106010:	8080030d 	sth	r2,12(r16)
10106014:	0027883a 	mov	r19,zero
10106018:	003fd806 	br	10105f7c <__alt_data_end+0xfffe5f7c>
1010601c:	8140038f 	ldh	r5,14(r16)
10106020:	8809883a 	mov	r4,r17
10106024:	010a0dc0 	call	1010a0dc <_isatty_r>
10106028:	103fe226 	beq	r2,zero,10105fb4 <__alt_data_end+0xfffe5fb4>
1010602c:	8080030b 	ldhu	r2,12(r16)
10106030:	10800054 	ori	r2,r2,1
10106034:	8080030d 	sth	r2,12(r16)
10106038:	003fde06 	br	10105fb4 <__alt_data_end+0xfffe5fb4>
1010603c:	8080030b 	ldhu	r2,12(r16)
10106040:	10c0800c 	andi	r3,r2,512
10106044:	183fdb1e 	bne	r3,zero,10105fb4 <__alt_data_end+0xfffe5fb4>
10106048:	10800094 	ori	r2,r2,2
1010604c:	80c010c4 	addi	r3,r16,67
10106050:	8080030d 	sth	r2,12(r16)
10106054:	00800044 	movi	r2,1
10106058:	80c00015 	stw	r3,0(r16)
1010605c:	80c00415 	stw	r3,16(r16)
10106060:	80800515 	stw	r2,20(r16)
10106064:	003fd306 	br	10105fb4 <__alt_data_end+0xfffe5fb4>
10106068:	04810004 	movi	r18,1024
1010606c:	003fc306 	br	10105f7c <__alt_data_end+0xfffe5f7c>
10106070:	0027883a 	mov	r19,zero
10106074:	04810004 	movi	r18,1024
10106078:	003fc006 	br	10105f7c <__alt_data_end+0xfffe5f7c>

1010607c <_malloc_r>:
1010607c:	defff504 	addi	sp,sp,-44
10106080:	dc800315 	stw	r18,12(sp)
10106084:	dfc00a15 	stw	ra,40(sp)
10106088:	df000915 	stw	fp,36(sp)
1010608c:	ddc00815 	stw	r23,32(sp)
10106090:	dd800715 	stw	r22,28(sp)
10106094:	dd400615 	stw	r21,24(sp)
10106098:	dd000515 	stw	r20,20(sp)
1010609c:	dcc00415 	stw	r19,16(sp)
101060a0:	dc400215 	stw	r17,8(sp)
101060a4:	dc000115 	stw	r16,4(sp)
101060a8:	288002c4 	addi	r2,r5,11
101060ac:	00c00584 	movi	r3,22
101060b0:	2025883a 	mov	r18,r4
101060b4:	18807f2e 	bgeu	r3,r2,101062b4 <_malloc_r+0x238>
101060b8:	047ffe04 	movi	r17,-8
101060bc:	1462703a 	and	r17,r2,r17
101060c0:	8800a316 	blt	r17,zero,10106350 <_malloc_r+0x2d4>
101060c4:	8940a236 	bltu	r17,r5,10106350 <_malloc_r+0x2d4>
101060c8:	010df300 	call	1010df30 <__malloc_lock>
101060cc:	00807dc4 	movi	r2,503
101060d0:	1441e92e 	bgeu	r2,r17,10106878 <_malloc_r+0x7fc>
101060d4:	8804d27a 	srli	r2,r17,9
101060d8:	1000a126 	beq	r2,zero,10106360 <_malloc_r+0x2e4>
101060dc:	00c00104 	movi	r3,4
101060e0:	18811e36 	bltu	r3,r2,1010655c <_malloc_r+0x4e0>
101060e4:	8804d1ba 	srli	r2,r17,6
101060e8:	12000e44 	addi	r8,r2,57
101060ec:	11c00e04 	addi	r7,r2,56
101060f0:	4209883a 	add	r4,r8,r8
101060f4:	04c40474 	movhi	r19,4113
101060f8:	2109883a 	add	r4,r4,r4
101060fc:	9cc23e04 	addi	r19,r19,2296
10106100:	2109883a 	add	r4,r4,r4
10106104:	9909883a 	add	r4,r19,r4
10106108:	24000117 	ldw	r16,4(r4)
1010610c:	213ffe04 	addi	r4,r4,-8
10106110:	24009726 	beq	r4,r16,10106370 <_malloc_r+0x2f4>
10106114:	80800117 	ldw	r2,4(r16)
10106118:	01bfff04 	movi	r6,-4
1010611c:	014003c4 	movi	r5,15
10106120:	1184703a 	and	r2,r2,r6
10106124:	1447c83a 	sub	r3,r2,r17
10106128:	28c00716 	blt	r5,r3,10106148 <_malloc_r+0xcc>
1010612c:	1800920e 	bge	r3,zero,10106378 <_malloc_r+0x2fc>
10106130:	84000317 	ldw	r16,12(r16)
10106134:	24008e26 	beq	r4,r16,10106370 <_malloc_r+0x2f4>
10106138:	80800117 	ldw	r2,4(r16)
1010613c:	1184703a 	and	r2,r2,r6
10106140:	1447c83a 	sub	r3,r2,r17
10106144:	28fff90e 	bge	r5,r3,1010612c <__alt_data_end+0xfffe612c>
10106148:	3809883a 	mov	r4,r7
1010614c:	01840474 	movhi	r6,4113
10106150:	9c000417 	ldw	r16,16(r19)
10106154:	31823e04 	addi	r6,r6,2296
10106158:	32000204 	addi	r8,r6,8
1010615c:	82013426 	beq	r16,r8,10106630 <_malloc_r+0x5b4>
10106160:	80c00117 	ldw	r3,4(r16)
10106164:	00bfff04 	movi	r2,-4
10106168:	188e703a 	and	r7,r3,r2
1010616c:	3c45c83a 	sub	r2,r7,r17
10106170:	00c003c4 	movi	r3,15
10106174:	18811f16 	blt	r3,r2,101065f4 <_malloc_r+0x578>
10106178:	32000515 	stw	r8,20(r6)
1010617c:	32000415 	stw	r8,16(r6)
10106180:	10007f0e 	bge	r2,zero,10106380 <_malloc_r+0x304>
10106184:	00807fc4 	movi	r2,511
10106188:	11c0fd36 	bltu	r2,r7,10106580 <_malloc_r+0x504>
1010618c:	3806d0fa 	srli	r3,r7,3
10106190:	01c00044 	movi	r7,1
10106194:	30800117 	ldw	r2,4(r6)
10106198:	19400044 	addi	r5,r3,1
1010619c:	294b883a 	add	r5,r5,r5
101061a0:	1807d0ba 	srai	r3,r3,2
101061a4:	294b883a 	add	r5,r5,r5
101061a8:	294b883a 	add	r5,r5,r5
101061ac:	298b883a 	add	r5,r5,r6
101061b0:	38c6983a 	sll	r3,r7,r3
101061b4:	29c00017 	ldw	r7,0(r5)
101061b8:	2a7ffe04 	addi	r9,r5,-8
101061bc:	1886b03a 	or	r3,r3,r2
101061c0:	82400315 	stw	r9,12(r16)
101061c4:	81c00215 	stw	r7,8(r16)
101061c8:	30c00115 	stw	r3,4(r6)
101061cc:	2c000015 	stw	r16,0(r5)
101061d0:	3c000315 	stw	r16,12(r7)
101061d4:	2005d0ba 	srai	r2,r4,2
101061d8:	01400044 	movi	r5,1
101061dc:	288a983a 	sll	r5,r5,r2
101061e0:	19406f36 	bltu	r3,r5,101063a0 <_malloc_r+0x324>
101061e4:	28c4703a 	and	r2,r5,r3
101061e8:	10000a1e 	bne	r2,zero,10106214 <_malloc_r+0x198>
101061ec:	00bfff04 	movi	r2,-4
101061f0:	294b883a 	add	r5,r5,r5
101061f4:	2088703a 	and	r4,r4,r2
101061f8:	28c4703a 	and	r2,r5,r3
101061fc:	21000104 	addi	r4,r4,4
10106200:	1000041e 	bne	r2,zero,10106214 <_malloc_r+0x198>
10106204:	294b883a 	add	r5,r5,r5
10106208:	28c4703a 	and	r2,r5,r3
1010620c:	21000104 	addi	r4,r4,4
10106210:	103ffc26 	beq	r2,zero,10106204 <__alt_data_end+0xfffe6204>
10106214:	02bfff04 	movi	r10,-4
10106218:	024003c4 	movi	r9,15
1010621c:	21800044 	addi	r6,r4,1
10106220:	318d883a 	add	r6,r6,r6
10106224:	318d883a 	add	r6,r6,r6
10106228:	318d883a 	add	r6,r6,r6
1010622c:	998d883a 	add	r6,r19,r6
10106230:	333ffe04 	addi	r12,r6,-8
10106234:	2017883a 	mov	r11,r4
10106238:	31800104 	addi	r6,r6,4
1010623c:	34000017 	ldw	r16,0(r6)
10106240:	31fffd04 	addi	r7,r6,-12
10106244:	81c0041e 	bne	r16,r7,10106258 <_malloc_r+0x1dc>
10106248:	0000fb06 	br	10106638 <_malloc_r+0x5bc>
1010624c:	1801030e 	bge	r3,zero,1010665c <_malloc_r+0x5e0>
10106250:	84000317 	ldw	r16,12(r16)
10106254:	81c0f826 	beq	r16,r7,10106638 <_malloc_r+0x5bc>
10106258:	80800117 	ldw	r2,4(r16)
1010625c:	1284703a 	and	r2,r2,r10
10106260:	1447c83a 	sub	r3,r2,r17
10106264:	48fff90e 	bge	r9,r3,1010624c <__alt_data_end+0xfffe624c>
10106268:	80800317 	ldw	r2,12(r16)
1010626c:	81000217 	ldw	r4,8(r16)
10106270:	89400054 	ori	r5,r17,1
10106274:	81400115 	stw	r5,4(r16)
10106278:	20800315 	stw	r2,12(r4)
1010627c:	11000215 	stw	r4,8(r2)
10106280:	8463883a 	add	r17,r16,r17
10106284:	9c400515 	stw	r17,20(r19)
10106288:	9c400415 	stw	r17,16(r19)
1010628c:	18800054 	ori	r2,r3,1
10106290:	88800115 	stw	r2,4(r17)
10106294:	8a000315 	stw	r8,12(r17)
10106298:	8a000215 	stw	r8,8(r17)
1010629c:	88e3883a 	add	r17,r17,r3
101062a0:	88c00015 	stw	r3,0(r17)
101062a4:	9009883a 	mov	r4,r18
101062a8:	010df540 	call	1010df54 <__malloc_unlock>
101062ac:	80800204 	addi	r2,r16,8
101062b0:	00001b06 	br	10106320 <_malloc_r+0x2a4>
101062b4:	04400404 	movi	r17,16
101062b8:	89402536 	bltu	r17,r5,10106350 <_malloc_r+0x2d4>
101062bc:	010df300 	call	1010df30 <__malloc_lock>
101062c0:	00800184 	movi	r2,6
101062c4:	01000084 	movi	r4,2
101062c8:	04c40474 	movhi	r19,4113
101062cc:	1085883a 	add	r2,r2,r2
101062d0:	9cc23e04 	addi	r19,r19,2296
101062d4:	1085883a 	add	r2,r2,r2
101062d8:	9885883a 	add	r2,r19,r2
101062dc:	14000117 	ldw	r16,4(r2)
101062e0:	10fffe04 	addi	r3,r2,-8
101062e4:	80c0d926 	beq	r16,r3,1010664c <_malloc_r+0x5d0>
101062e8:	80c00117 	ldw	r3,4(r16)
101062ec:	81000317 	ldw	r4,12(r16)
101062f0:	00bfff04 	movi	r2,-4
101062f4:	1884703a 	and	r2,r3,r2
101062f8:	81400217 	ldw	r5,8(r16)
101062fc:	8085883a 	add	r2,r16,r2
10106300:	10c00117 	ldw	r3,4(r2)
10106304:	29000315 	stw	r4,12(r5)
10106308:	21400215 	stw	r5,8(r4)
1010630c:	18c00054 	ori	r3,r3,1
10106310:	10c00115 	stw	r3,4(r2)
10106314:	9009883a 	mov	r4,r18
10106318:	010df540 	call	1010df54 <__malloc_unlock>
1010631c:	80800204 	addi	r2,r16,8
10106320:	dfc00a17 	ldw	ra,40(sp)
10106324:	df000917 	ldw	fp,36(sp)
10106328:	ddc00817 	ldw	r23,32(sp)
1010632c:	dd800717 	ldw	r22,28(sp)
10106330:	dd400617 	ldw	r21,24(sp)
10106334:	dd000517 	ldw	r20,20(sp)
10106338:	dcc00417 	ldw	r19,16(sp)
1010633c:	dc800317 	ldw	r18,12(sp)
10106340:	dc400217 	ldw	r17,8(sp)
10106344:	dc000117 	ldw	r16,4(sp)
10106348:	dec00b04 	addi	sp,sp,44
1010634c:	f800283a 	ret
10106350:	00800304 	movi	r2,12
10106354:	90800015 	stw	r2,0(r18)
10106358:	0005883a 	mov	r2,zero
1010635c:	003ff006 	br	10106320 <__alt_data_end+0xfffe6320>
10106360:	01002004 	movi	r4,128
10106364:	02001004 	movi	r8,64
10106368:	01c00fc4 	movi	r7,63
1010636c:	003f6106 	br	101060f4 <__alt_data_end+0xfffe60f4>
10106370:	4009883a 	mov	r4,r8
10106374:	003f7506 	br	1010614c <__alt_data_end+0xfffe614c>
10106378:	81000317 	ldw	r4,12(r16)
1010637c:	003fde06 	br	101062f8 <__alt_data_end+0xfffe62f8>
10106380:	81c5883a 	add	r2,r16,r7
10106384:	11400117 	ldw	r5,4(r2)
10106388:	9009883a 	mov	r4,r18
1010638c:	29400054 	ori	r5,r5,1
10106390:	11400115 	stw	r5,4(r2)
10106394:	010df540 	call	1010df54 <__malloc_unlock>
10106398:	80800204 	addi	r2,r16,8
1010639c:	003fe006 	br	10106320 <__alt_data_end+0xfffe6320>
101063a0:	9c000217 	ldw	r16,8(r19)
101063a4:	00bfff04 	movi	r2,-4
101063a8:	85800117 	ldw	r22,4(r16)
101063ac:	b0ac703a 	and	r22,r22,r2
101063b0:	b4400336 	bltu	r22,r17,101063c0 <_malloc_r+0x344>
101063b4:	b445c83a 	sub	r2,r22,r17
101063b8:	00c003c4 	movi	r3,15
101063bc:	18805d16 	blt	r3,r2,10106534 <_malloc_r+0x4b8>
101063c0:	05c40474 	movhi	r23,4113
101063c4:	00840474 	movhi	r2,4113
101063c8:	108e9204 	addi	r2,r2,14920
101063cc:	bdc7c504 	addi	r23,r23,7956
101063d0:	15400017 	ldw	r21,0(r2)
101063d4:	b8c00017 	ldw	r3,0(r23)
101063d8:	00bfffc4 	movi	r2,-1
101063dc:	858d883a 	add	r6,r16,r22
101063e0:	8d6b883a 	add	r21,r17,r21
101063e4:	1880ea26 	beq	r3,r2,10106790 <_malloc_r+0x714>
101063e8:	ad4403c4 	addi	r21,r21,4111
101063ec:	00bc0004 	movi	r2,-4096
101063f0:	a8aa703a 	and	r21,r21,r2
101063f4:	a80b883a 	mov	r5,r21
101063f8:	9009883a 	mov	r4,r18
101063fc:	d9800015 	stw	r6,0(sp)
10106400:	01082800 	call	10108280 <_sbrk_r>
10106404:	1029883a 	mov	r20,r2
10106408:	00bfffc4 	movi	r2,-1
1010640c:	d9800017 	ldw	r6,0(sp)
10106410:	a080e826 	beq	r20,r2,101067b4 <_malloc_r+0x738>
10106414:	a180a636 	bltu	r20,r6,101066b0 <_malloc_r+0x634>
10106418:	07040474 	movhi	fp,4113
1010641c:	e70e9b04 	addi	fp,fp,14956
10106420:	e0800017 	ldw	r2,0(fp)
10106424:	a887883a 	add	r3,r21,r2
10106428:	e0c00015 	stw	r3,0(fp)
1010642c:	3500e626 	beq	r6,r20,101067c8 <_malloc_r+0x74c>
10106430:	b9000017 	ldw	r4,0(r23)
10106434:	00bfffc4 	movi	r2,-1
10106438:	2080ee26 	beq	r4,r2,101067f4 <_malloc_r+0x778>
1010643c:	a185c83a 	sub	r2,r20,r6
10106440:	10c5883a 	add	r2,r2,r3
10106444:	e0800015 	stw	r2,0(fp)
10106448:	a0c001cc 	andi	r3,r20,7
1010644c:	1800bc26 	beq	r3,zero,10106740 <_malloc_r+0x6c4>
10106450:	a0e9c83a 	sub	r20,r20,r3
10106454:	00840204 	movi	r2,4104
10106458:	a5000204 	addi	r20,r20,8
1010645c:	10c7c83a 	sub	r3,r2,r3
10106460:	a545883a 	add	r2,r20,r21
10106464:	1083ffcc 	andi	r2,r2,4095
10106468:	18abc83a 	sub	r21,r3,r2
1010646c:	a80b883a 	mov	r5,r21
10106470:	9009883a 	mov	r4,r18
10106474:	01082800 	call	10108280 <_sbrk_r>
10106478:	00ffffc4 	movi	r3,-1
1010647c:	10c0e126 	beq	r2,r3,10106804 <_malloc_r+0x788>
10106480:	1505c83a 	sub	r2,r2,r20
10106484:	1545883a 	add	r2,r2,r21
10106488:	10800054 	ori	r2,r2,1
1010648c:	e0c00017 	ldw	r3,0(fp)
10106490:	9d000215 	stw	r20,8(r19)
10106494:	a0800115 	stw	r2,4(r20)
10106498:	a8c7883a 	add	r3,r21,r3
1010649c:	e0c00015 	stw	r3,0(fp)
101064a0:	84c00e26 	beq	r16,r19,101064dc <_malloc_r+0x460>
101064a4:	018003c4 	movi	r6,15
101064a8:	3580a72e 	bgeu	r6,r22,10106748 <_malloc_r+0x6cc>
101064ac:	81400117 	ldw	r5,4(r16)
101064b0:	013ffe04 	movi	r4,-8
101064b4:	b0bffd04 	addi	r2,r22,-12
101064b8:	1104703a 	and	r2,r2,r4
101064bc:	2900004c 	andi	r4,r5,1
101064c0:	2088b03a 	or	r4,r4,r2
101064c4:	81000115 	stw	r4,4(r16)
101064c8:	01400144 	movi	r5,5
101064cc:	8089883a 	add	r4,r16,r2
101064d0:	21400115 	stw	r5,4(r4)
101064d4:	21400215 	stw	r5,8(r4)
101064d8:	3080cd36 	bltu	r6,r2,10106810 <_malloc_r+0x794>
101064dc:	00840474 	movhi	r2,4113
101064e0:	108e9104 	addi	r2,r2,14916
101064e4:	11000017 	ldw	r4,0(r2)
101064e8:	20c0012e 	bgeu	r4,r3,101064f0 <_malloc_r+0x474>
101064ec:	10c00015 	stw	r3,0(r2)
101064f0:	00840474 	movhi	r2,4113
101064f4:	108e9004 	addi	r2,r2,14912
101064f8:	11000017 	ldw	r4,0(r2)
101064fc:	9c000217 	ldw	r16,8(r19)
10106500:	20c0012e 	bgeu	r4,r3,10106508 <_malloc_r+0x48c>
10106504:	10c00015 	stw	r3,0(r2)
10106508:	80c00117 	ldw	r3,4(r16)
1010650c:	00bfff04 	movi	r2,-4
10106510:	1886703a 	and	r3,r3,r2
10106514:	1c45c83a 	sub	r2,r3,r17
10106518:	1c400236 	bltu	r3,r17,10106524 <_malloc_r+0x4a8>
1010651c:	00c003c4 	movi	r3,15
10106520:	18800416 	blt	r3,r2,10106534 <_malloc_r+0x4b8>
10106524:	9009883a 	mov	r4,r18
10106528:	010df540 	call	1010df54 <__malloc_unlock>
1010652c:	0005883a 	mov	r2,zero
10106530:	003f7b06 	br	10106320 <__alt_data_end+0xfffe6320>
10106534:	88c00054 	ori	r3,r17,1
10106538:	80c00115 	stw	r3,4(r16)
1010653c:	8463883a 	add	r17,r16,r17
10106540:	10800054 	ori	r2,r2,1
10106544:	9c400215 	stw	r17,8(r19)
10106548:	88800115 	stw	r2,4(r17)
1010654c:	9009883a 	mov	r4,r18
10106550:	010df540 	call	1010df54 <__malloc_unlock>
10106554:	80800204 	addi	r2,r16,8
10106558:	003f7106 	br	10106320 <__alt_data_end+0xfffe6320>
1010655c:	00c00504 	movi	r3,20
10106560:	18804a2e 	bgeu	r3,r2,1010668c <_malloc_r+0x610>
10106564:	00c01504 	movi	r3,84
10106568:	18806e36 	bltu	r3,r2,10106724 <_malloc_r+0x6a8>
1010656c:	8804d33a 	srli	r2,r17,12
10106570:	12001bc4 	addi	r8,r2,111
10106574:	11c01b84 	addi	r7,r2,110
10106578:	4209883a 	add	r4,r8,r8
1010657c:	003edd06 	br	101060f4 <__alt_data_end+0xfffe60f4>
10106580:	3804d27a 	srli	r2,r7,9
10106584:	00c00104 	movi	r3,4
10106588:	1880442e 	bgeu	r3,r2,1010669c <_malloc_r+0x620>
1010658c:	00c00504 	movi	r3,20
10106590:	18808136 	bltu	r3,r2,10106798 <_malloc_r+0x71c>
10106594:	11401704 	addi	r5,r2,92
10106598:	10c016c4 	addi	r3,r2,91
1010659c:	294b883a 	add	r5,r5,r5
101065a0:	294b883a 	add	r5,r5,r5
101065a4:	294b883a 	add	r5,r5,r5
101065a8:	994b883a 	add	r5,r19,r5
101065ac:	28800017 	ldw	r2,0(r5)
101065b0:	01840474 	movhi	r6,4113
101065b4:	297ffe04 	addi	r5,r5,-8
101065b8:	31823e04 	addi	r6,r6,2296
101065bc:	28806526 	beq	r5,r2,10106754 <_malloc_r+0x6d8>
101065c0:	01bfff04 	movi	r6,-4
101065c4:	10c00117 	ldw	r3,4(r2)
101065c8:	1986703a 	and	r3,r3,r6
101065cc:	38c0022e 	bgeu	r7,r3,101065d8 <_malloc_r+0x55c>
101065d0:	10800217 	ldw	r2,8(r2)
101065d4:	28bffb1e 	bne	r5,r2,101065c4 <__alt_data_end+0xfffe65c4>
101065d8:	11400317 	ldw	r5,12(r2)
101065dc:	98c00117 	ldw	r3,4(r19)
101065e0:	81400315 	stw	r5,12(r16)
101065e4:	80800215 	stw	r2,8(r16)
101065e8:	2c000215 	stw	r16,8(r5)
101065ec:	14000315 	stw	r16,12(r2)
101065f0:	003ef806 	br	101061d4 <__alt_data_end+0xfffe61d4>
101065f4:	88c00054 	ori	r3,r17,1
101065f8:	80c00115 	stw	r3,4(r16)
101065fc:	8463883a 	add	r17,r16,r17
10106600:	34400515 	stw	r17,20(r6)
10106604:	34400415 	stw	r17,16(r6)
10106608:	10c00054 	ori	r3,r2,1
1010660c:	8a000315 	stw	r8,12(r17)
10106610:	8a000215 	stw	r8,8(r17)
10106614:	88c00115 	stw	r3,4(r17)
10106618:	88a3883a 	add	r17,r17,r2
1010661c:	88800015 	stw	r2,0(r17)
10106620:	9009883a 	mov	r4,r18
10106624:	010df540 	call	1010df54 <__malloc_unlock>
10106628:	80800204 	addi	r2,r16,8
1010662c:	003f3c06 	br	10106320 <__alt_data_end+0xfffe6320>
10106630:	30c00117 	ldw	r3,4(r6)
10106634:	003ee706 	br	101061d4 <__alt_data_end+0xfffe61d4>
10106638:	5ac00044 	addi	r11,r11,1
1010663c:	588000cc 	andi	r2,r11,3
10106640:	31800204 	addi	r6,r6,8
10106644:	103efd1e 	bne	r2,zero,1010623c <__alt_data_end+0xfffe623c>
10106648:	00002406 	br	101066dc <_malloc_r+0x660>
1010664c:	14000317 	ldw	r16,12(r2)
10106650:	143f251e 	bne	r2,r16,101062e8 <__alt_data_end+0xfffe62e8>
10106654:	21000084 	addi	r4,r4,2
10106658:	003ebc06 	br	1010614c <__alt_data_end+0xfffe614c>
1010665c:	8085883a 	add	r2,r16,r2
10106660:	10c00117 	ldw	r3,4(r2)
10106664:	81000317 	ldw	r4,12(r16)
10106668:	81400217 	ldw	r5,8(r16)
1010666c:	18c00054 	ori	r3,r3,1
10106670:	10c00115 	stw	r3,4(r2)
10106674:	29000315 	stw	r4,12(r5)
10106678:	21400215 	stw	r5,8(r4)
1010667c:	9009883a 	mov	r4,r18
10106680:	010df540 	call	1010df54 <__malloc_unlock>
10106684:	80800204 	addi	r2,r16,8
10106688:	003f2506 	br	10106320 <__alt_data_end+0xfffe6320>
1010668c:	12001704 	addi	r8,r2,92
10106690:	11c016c4 	addi	r7,r2,91
10106694:	4209883a 	add	r4,r8,r8
10106698:	003e9606 	br	101060f4 <__alt_data_end+0xfffe60f4>
1010669c:	3804d1ba 	srli	r2,r7,6
101066a0:	11400e44 	addi	r5,r2,57
101066a4:	10c00e04 	addi	r3,r2,56
101066a8:	294b883a 	add	r5,r5,r5
101066ac:	003fbc06 	br	101065a0 <__alt_data_end+0xfffe65a0>
101066b0:	84ff5926 	beq	r16,r19,10106418 <__alt_data_end+0xfffe6418>
101066b4:	00840474 	movhi	r2,4113
101066b8:	10823e04 	addi	r2,r2,2296
101066bc:	14000217 	ldw	r16,8(r2)
101066c0:	00bfff04 	movi	r2,-4
101066c4:	80c00117 	ldw	r3,4(r16)
101066c8:	1886703a 	and	r3,r3,r2
101066cc:	003f9106 	br	10106514 <__alt_data_end+0xfffe6514>
101066d0:	60800217 	ldw	r2,8(r12)
101066d4:	213fffc4 	addi	r4,r4,-1
101066d8:	1300651e 	bne	r2,r12,10106870 <_malloc_r+0x7f4>
101066dc:	208000cc 	andi	r2,r4,3
101066e0:	633ffe04 	addi	r12,r12,-8
101066e4:	103ffa1e 	bne	r2,zero,101066d0 <__alt_data_end+0xfffe66d0>
101066e8:	98800117 	ldw	r2,4(r19)
101066ec:	0146303a 	nor	r3,zero,r5
101066f0:	1884703a 	and	r2,r3,r2
101066f4:	98800115 	stw	r2,4(r19)
101066f8:	294b883a 	add	r5,r5,r5
101066fc:	117f2836 	bltu	r2,r5,101063a0 <__alt_data_end+0xfffe63a0>
10106700:	283f2726 	beq	r5,zero,101063a0 <__alt_data_end+0xfffe63a0>
10106704:	2886703a 	and	r3,r5,r2
10106708:	5809883a 	mov	r4,r11
1010670c:	183ec31e 	bne	r3,zero,1010621c <__alt_data_end+0xfffe621c>
10106710:	294b883a 	add	r5,r5,r5
10106714:	2886703a 	and	r3,r5,r2
10106718:	21000104 	addi	r4,r4,4
1010671c:	183ffc26 	beq	r3,zero,10106710 <__alt_data_end+0xfffe6710>
10106720:	003ebe06 	br	1010621c <__alt_data_end+0xfffe621c>
10106724:	00c05504 	movi	r3,340
10106728:	18801236 	bltu	r3,r2,10106774 <_malloc_r+0x6f8>
1010672c:	8804d3fa 	srli	r2,r17,15
10106730:	12001e04 	addi	r8,r2,120
10106734:	11c01dc4 	addi	r7,r2,119
10106738:	4209883a 	add	r4,r8,r8
1010673c:	003e6d06 	br	101060f4 <__alt_data_end+0xfffe60f4>
10106740:	00c40004 	movi	r3,4096
10106744:	003f4606 	br	10106460 <__alt_data_end+0xfffe6460>
10106748:	00800044 	movi	r2,1
1010674c:	a0800115 	stw	r2,4(r20)
10106750:	003f7406 	br	10106524 <__alt_data_end+0xfffe6524>
10106754:	1805d0ba 	srai	r2,r3,2
10106758:	01c00044 	movi	r7,1
1010675c:	30c00117 	ldw	r3,4(r6)
10106760:	388e983a 	sll	r7,r7,r2
10106764:	2805883a 	mov	r2,r5
10106768:	38c6b03a 	or	r3,r7,r3
1010676c:	30c00115 	stw	r3,4(r6)
10106770:	003f9b06 	br	101065e0 <__alt_data_end+0xfffe65e0>
10106774:	00c15504 	movi	r3,1364
10106778:	18801a36 	bltu	r3,r2,101067e4 <_malloc_r+0x768>
1010677c:	8804d4ba 	srli	r2,r17,18
10106780:	12001f44 	addi	r8,r2,125
10106784:	11c01f04 	addi	r7,r2,124
10106788:	4209883a 	add	r4,r8,r8
1010678c:	003e5906 	br	101060f4 <__alt_data_end+0xfffe60f4>
10106790:	ad400404 	addi	r21,r21,16
10106794:	003f1706 	br	101063f4 <__alt_data_end+0xfffe63f4>
10106798:	00c01504 	movi	r3,84
1010679c:	18802336 	bltu	r3,r2,1010682c <_malloc_r+0x7b0>
101067a0:	3804d33a 	srli	r2,r7,12
101067a4:	11401bc4 	addi	r5,r2,111
101067a8:	10c01b84 	addi	r3,r2,110
101067ac:	294b883a 	add	r5,r5,r5
101067b0:	003f7b06 	br	101065a0 <__alt_data_end+0xfffe65a0>
101067b4:	9c000217 	ldw	r16,8(r19)
101067b8:	00bfff04 	movi	r2,-4
101067bc:	80c00117 	ldw	r3,4(r16)
101067c0:	1886703a 	and	r3,r3,r2
101067c4:	003f5306 	br	10106514 <__alt_data_end+0xfffe6514>
101067c8:	3083ffcc 	andi	r2,r6,4095
101067cc:	103f181e 	bne	r2,zero,10106430 <__alt_data_end+0xfffe6430>
101067d0:	99000217 	ldw	r4,8(r19)
101067d4:	b545883a 	add	r2,r22,r21
101067d8:	10800054 	ori	r2,r2,1
101067dc:	20800115 	stw	r2,4(r4)
101067e0:	003f3e06 	br	101064dc <__alt_data_end+0xfffe64dc>
101067e4:	01003f84 	movi	r4,254
101067e8:	02001fc4 	movi	r8,127
101067ec:	01c01f84 	movi	r7,126
101067f0:	003e4006 	br	101060f4 <__alt_data_end+0xfffe60f4>
101067f4:	00840474 	movhi	r2,4113
101067f8:	1087c504 	addi	r2,r2,7956
101067fc:	15000015 	stw	r20,0(r2)
10106800:	003f1106 	br	10106448 <__alt_data_end+0xfffe6448>
10106804:	00800044 	movi	r2,1
10106808:	002b883a 	mov	r21,zero
1010680c:	003f1f06 	br	1010648c <__alt_data_end+0xfffe648c>
10106810:	81400204 	addi	r5,r16,8
10106814:	9009883a 	mov	r4,r18
10106818:	01054840 	call	10105484 <_free_r>
1010681c:	00840474 	movhi	r2,4113
10106820:	108e9b04 	addi	r2,r2,14956
10106824:	10c00017 	ldw	r3,0(r2)
10106828:	003f2c06 	br	101064dc <__alt_data_end+0xfffe64dc>
1010682c:	00c05504 	movi	r3,340
10106830:	18800536 	bltu	r3,r2,10106848 <_malloc_r+0x7cc>
10106834:	3804d3fa 	srli	r2,r7,15
10106838:	11401e04 	addi	r5,r2,120
1010683c:	10c01dc4 	addi	r3,r2,119
10106840:	294b883a 	add	r5,r5,r5
10106844:	003f5606 	br	101065a0 <__alt_data_end+0xfffe65a0>
10106848:	00c15504 	movi	r3,1364
1010684c:	18800536 	bltu	r3,r2,10106864 <_malloc_r+0x7e8>
10106850:	3804d4ba 	srli	r2,r7,18
10106854:	11401f44 	addi	r5,r2,125
10106858:	10c01f04 	addi	r3,r2,124
1010685c:	294b883a 	add	r5,r5,r5
10106860:	003f4f06 	br	101065a0 <__alt_data_end+0xfffe65a0>
10106864:	01403f84 	movi	r5,254
10106868:	00c01f84 	movi	r3,126
1010686c:	003f4c06 	br	101065a0 <__alt_data_end+0xfffe65a0>
10106870:	98800117 	ldw	r2,4(r19)
10106874:	003fa006 	br	101066f8 <__alt_data_end+0xfffe66f8>
10106878:	8808d0fa 	srli	r4,r17,3
1010687c:	20800044 	addi	r2,r4,1
10106880:	1085883a 	add	r2,r2,r2
10106884:	003e9006 	br	101062c8 <__alt_data_end+0xfffe62c8>

10106888 <memchr>:
10106888:	208000cc 	andi	r2,r4,3
1010688c:	280f883a 	mov	r7,r5
10106890:	10003426 	beq	r2,zero,10106964 <memchr+0xdc>
10106894:	30bfffc4 	addi	r2,r6,-1
10106898:	30001a26 	beq	r6,zero,10106904 <memchr+0x7c>
1010689c:	20c00003 	ldbu	r3,0(r4)
101068a0:	29803fcc 	andi	r6,r5,255
101068a4:	30c0051e 	bne	r6,r3,101068bc <memchr+0x34>
101068a8:	00001806 	br	1010690c <memchr+0x84>
101068ac:	10001526 	beq	r2,zero,10106904 <memchr+0x7c>
101068b0:	20c00003 	ldbu	r3,0(r4)
101068b4:	10bfffc4 	addi	r2,r2,-1
101068b8:	30c01426 	beq	r6,r3,1010690c <memchr+0x84>
101068bc:	21000044 	addi	r4,r4,1
101068c0:	20c000cc 	andi	r3,r4,3
101068c4:	183ff91e 	bne	r3,zero,101068ac <__alt_data_end+0xfffe68ac>
101068c8:	020000c4 	movi	r8,3
101068cc:	40801136 	bltu	r8,r2,10106914 <memchr+0x8c>
101068d0:	10000c26 	beq	r2,zero,10106904 <memchr+0x7c>
101068d4:	20c00003 	ldbu	r3,0(r4)
101068d8:	29403fcc 	andi	r5,r5,255
101068dc:	28c00b26 	beq	r5,r3,1010690c <memchr+0x84>
101068e0:	20c00044 	addi	r3,r4,1
101068e4:	39803fcc 	andi	r6,r7,255
101068e8:	2089883a 	add	r4,r4,r2
101068ec:	00000306 	br	101068fc <memchr+0x74>
101068f0:	18c00044 	addi	r3,r3,1
101068f4:	197fffc3 	ldbu	r5,-1(r3)
101068f8:	31400526 	beq	r6,r5,10106910 <memchr+0x88>
101068fc:	1805883a 	mov	r2,r3
10106900:	20fffb1e 	bne	r4,r3,101068f0 <__alt_data_end+0xfffe68f0>
10106904:	0005883a 	mov	r2,zero
10106908:	f800283a 	ret
1010690c:	2005883a 	mov	r2,r4
10106910:	f800283a 	ret
10106914:	28c03fcc 	andi	r3,r5,255
10106918:	1812923a 	slli	r9,r3,8
1010691c:	02ffbff4 	movhi	r11,65279
10106920:	02a02074 	movhi	r10,32897
10106924:	48d2b03a 	or	r9,r9,r3
10106928:	4806943a 	slli	r3,r9,16
1010692c:	5affbfc4 	addi	r11,r11,-257
10106930:	52a02004 	addi	r10,r10,-32640
10106934:	48d2b03a 	or	r9,r9,r3
10106938:	20c00017 	ldw	r3,0(r4)
1010693c:	48c6f03a 	xor	r3,r9,r3
10106940:	1acd883a 	add	r6,r3,r11
10106944:	00c6303a 	nor	r3,zero,r3
10106948:	30c6703a 	and	r3,r6,r3
1010694c:	1a86703a 	and	r3,r3,r10
10106950:	183fe01e 	bne	r3,zero,101068d4 <__alt_data_end+0xfffe68d4>
10106954:	10bfff04 	addi	r2,r2,-4
10106958:	21000104 	addi	r4,r4,4
1010695c:	40bff636 	bltu	r8,r2,10106938 <__alt_data_end+0xfffe6938>
10106960:	003fdb06 	br	101068d0 <__alt_data_end+0xfffe68d0>
10106964:	3005883a 	mov	r2,r6
10106968:	003fd706 	br	101068c8 <__alt_data_end+0xfffe68c8>

1010696c <memmove>:
1010696c:	2005883a 	mov	r2,r4
10106970:	29000b2e 	bgeu	r5,r4,101069a0 <memmove+0x34>
10106974:	298f883a 	add	r7,r5,r6
10106978:	21c0092e 	bgeu	r4,r7,101069a0 <memmove+0x34>
1010697c:	2187883a 	add	r3,r4,r6
10106980:	198bc83a 	sub	r5,r3,r6
10106984:	30004826 	beq	r6,zero,10106aa8 <memmove+0x13c>
10106988:	39ffffc4 	addi	r7,r7,-1
1010698c:	39000003 	ldbu	r4,0(r7)
10106990:	18ffffc4 	addi	r3,r3,-1
10106994:	19000005 	stb	r4,0(r3)
10106998:	28fffb1e 	bne	r5,r3,10106988 <__alt_data_end+0xfffe6988>
1010699c:	f800283a 	ret
101069a0:	00c003c4 	movi	r3,15
101069a4:	1980412e 	bgeu	r3,r6,10106aac <memmove+0x140>
101069a8:	2886b03a 	or	r3,r5,r2
101069ac:	18c000cc 	andi	r3,r3,3
101069b0:	1800401e 	bne	r3,zero,10106ab4 <memmove+0x148>
101069b4:	33fffc04 	addi	r15,r6,-16
101069b8:	781ed13a 	srli	r15,r15,4
101069bc:	28c00104 	addi	r3,r5,4
101069c0:	13400104 	addi	r13,r2,4
101069c4:	781c913a 	slli	r14,r15,4
101069c8:	2b000204 	addi	r12,r5,8
101069cc:	12c00204 	addi	r11,r2,8
101069d0:	73800504 	addi	r14,r14,20
101069d4:	2a800304 	addi	r10,r5,12
101069d8:	12400304 	addi	r9,r2,12
101069dc:	2b9d883a 	add	r14,r5,r14
101069e0:	2811883a 	mov	r8,r5
101069e4:	100f883a 	mov	r7,r2
101069e8:	41000017 	ldw	r4,0(r8)
101069ec:	39c00404 	addi	r7,r7,16
101069f0:	18c00404 	addi	r3,r3,16
101069f4:	393ffc15 	stw	r4,-16(r7)
101069f8:	193ffc17 	ldw	r4,-16(r3)
101069fc:	6b400404 	addi	r13,r13,16
10106a00:	5ac00404 	addi	r11,r11,16
10106a04:	693ffc15 	stw	r4,-16(r13)
10106a08:	61000017 	ldw	r4,0(r12)
10106a0c:	4a400404 	addi	r9,r9,16
10106a10:	42000404 	addi	r8,r8,16
10106a14:	593ffc15 	stw	r4,-16(r11)
10106a18:	51000017 	ldw	r4,0(r10)
10106a1c:	63000404 	addi	r12,r12,16
10106a20:	52800404 	addi	r10,r10,16
10106a24:	493ffc15 	stw	r4,-16(r9)
10106a28:	1bbfef1e 	bne	r3,r14,101069e8 <__alt_data_end+0xfffe69e8>
10106a2c:	79000044 	addi	r4,r15,1
10106a30:	2008913a 	slli	r4,r4,4
10106a34:	328003cc 	andi	r10,r6,15
10106a38:	02c000c4 	movi	r11,3
10106a3c:	1107883a 	add	r3,r2,r4
10106a40:	290b883a 	add	r5,r5,r4
10106a44:	5a801e2e 	bgeu	r11,r10,10106ac0 <memmove+0x154>
10106a48:	1813883a 	mov	r9,r3
10106a4c:	2811883a 	mov	r8,r5
10106a50:	500f883a 	mov	r7,r10
10106a54:	41000017 	ldw	r4,0(r8)
10106a58:	4a400104 	addi	r9,r9,4
10106a5c:	39ffff04 	addi	r7,r7,-4
10106a60:	493fff15 	stw	r4,-4(r9)
10106a64:	42000104 	addi	r8,r8,4
10106a68:	59fffa36 	bltu	r11,r7,10106a54 <__alt_data_end+0xfffe6a54>
10106a6c:	513fff04 	addi	r4,r10,-4
10106a70:	2008d0ba 	srli	r4,r4,2
10106a74:	318000cc 	andi	r6,r6,3
10106a78:	21000044 	addi	r4,r4,1
10106a7c:	2109883a 	add	r4,r4,r4
10106a80:	2109883a 	add	r4,r4,r4
10106a84:	1907883a 	add	r3,r3,r4
10106a88:	290b883a 	add	r5,r5,r4
10106a8c:	30000b26 	beq	r6,zero,10106abc <memmove+0x150>
10106a90:	198d883a 	add	r6,r3,r6
10106a94:	29c00003 	ldbu	r7,0(r5)
10106a98:	18c00044 	addi	r3,r3,1
10106a9c:	29400044 	addi	r5,r5,1
10106aa0:	19ffffc5 	stb	r7,-1(r3)
10106aa4:	19bffb1e 	bne	r3,r6,10106a94 <__alt_data_end+0xfffe6a94>
10106aa8:	f800283a 	ret
10106aac:	1007883a 	mov	r3,r2
10106ab0:	003ff606 	br	10106a8c <__alt_data_end+0xfffe6a8c>
10106ab4:	1007883a 	mov	r3,r2
10106ab8:	003ff506 	br	10106a90 <__alt_data_end+0xfffe6a90>
10106abc:	f800283a 	ret
10106ac0:	500d883a 	mov	r6,r10
10106ac4:	003ff106 	br	10106a8c <__alt_data_end+0xfffe6a8c>

10106ac8 <memset>:
10106ac8:	20c000cc 	andi	r3,r4,3
10106acc:	2005883a 	mov	r2,r4
10106ad0:	18004426 	beq	r3,zero,10106be4 <memset+0x11c>
10106ad4:	31ffffc4 	addi	r7,r6,-1
10106ad8:	30004026 	beq	r6,zero,10106bdc <memset+0x114>
10106adc:	2813883a 	mov	r9,r5
10106ae0:	200d883a 	mov	r6,r4
10106ae4:	2007883a 	mov	r3,r4
10106ae8:	00000406 	br	10106afc <memset+0x34>
10106aec:	3a3fffc4 	addi	r8,r7,-1
10106af0:	31800044 	addi	r6,r6,1
10106af4:	38003926 	beq	r7,zero,10106bdc <memset+0x114>
10106af8:	400f883a 	mov	r7,r8
10106afc:	18c00044 	addi	r3,r3,1
10106b00:	32400005 	stb	r9,0(r6)
10106b04:	1a0000cc 	andi	r8,r3,3
10106b08:	403ff81e 	bne	r8,zero,10106aec <__alt_data_end+0xfffe6aec>
10106b0c:	010000c4 	movi	r4,3
10106b10:	21c02d2e 	bgeu	r4,r7,10106bc8 <memset+0x100>
10106b14:	29003fcc 	andi	r4,r5,255
10106b18:	200c923a 	slli	r6,r4,8
10106b1c:	3108b03a 	or	r4,r6,r4
10106b20:	200c943a 	slli	r6,r4,16
10106b24:	218cb03a 	or	r6,r4,r6
10106b28:	010003c4 	movi	r4,15
10106b2c:	21c0182e 	bgeu	r4,r7,10106b90 <memset+0xc8>
10106b30:	3b3ffc04 	addi	r12,r7,-16
10106b34:	6018d13a 	srli	r12,r12,4
10106b38:	1a000104 	addi	r8,r3,4
10106b3c:	1ac00204 	addi	r11,r3,8
10106b40:	6008913a 	slli	r4,r12,4
10106b44:	1a800304 	addi	r10,r3,12
10106b48:	1813883a 	mov	r9,r3
10106b4c:	21000504 	addi	r4,r4,20
10106b50:	1909883a 	add	r4,r3,r4
10106b54:	49800015 	stw	r6,0(r9)
10106b58:	41800015 	stw	r6,0(r8)
10106b5c:	59800015 	stw	r6,0(r11)
10106b60:	51800015 	stw	r6,0(r10)
10106b64:	42000404 	addi	r8,r8,16
10106b68:	4a400404 	addi	r9,r9,16
10106b6c:	5ac00404 	addi	r11,r11,16
10106b70:	52800404 	addi	r10,r10,16
10106b74:	413ff71e 	bne	r8,r4,10106b54 <__alt_data_end+0xfffe6b54>
10106b78:	63000044 	addi	r12,r12,1
10106b7c:	6018913a 	slli	r12,r12,4
10106b80:	39c003cc 	andi	r7,r7,15
10106b84:	010000c4 	movi	r4,3
10106b88:	1b07883a 	add	r3,r3,r12
10106b8c:	21c00e2e 	bgeu	r4,r7,10106bc8 <memset+0x100>
10106b90:	1813883a 	mov	r9,r3
10106b94:	3811883a 	mov	r8,r7
10106b98:	010000c4 	movi	r4,3
10106b9c:	49800015 	stw	r6,0(r9)
10106ba0:	423fff04 	addi	r8,r8,-4
10106ba4:	4a400104 	addi	r9,r9,4
10106ba8:	223ffc36 	bltu	r4,r8,10106b9c <__alt_data_end+0xfffe6b9c>
10106bac:	393fff04 	addi	r4,r7,-4
10106bb0:	2008d0ba 	srli	r4,r4,2
10106bb4:	39c000cc 	andi	r7,r7,3
10106bb8:	21000044 	addi	r4,r4,1
10106bbc:	2109883a 	add	r4,r4,r4
10106bc0:	2109883a 	add	r4,r4,r4
10106bc4:	1907883a 	add	r3,r3,r4
10106bc8:	38000526 	beq	r7,zero,10106be0 <memset+0x118>
10106bcc:	19cf883a 	add	r7,r3,r7
10106bd0:	19400005 	stb	r5,0(r3)
10106bd4:	18c00044 	addi	r3,r3,1
10106bd8:	38fffd1e 	bne	r7,r3,10106bd0 <__alt_data_end+0xfffe6bd0>
10106bdc:	f800283a 	ret
10106be0:	f800283a 	ret
10106be4:	2007883a 	mov	r3,r4
10106be8:	300f883a 	mov	r7,r6
10106bec:	003fc706 	br	10106b0c <__alt_data_end+0xfffe6b0c>

10106bf0 <_Balloc>:
10106bf0:	20801317 	ldw	r2,76(r4)
10106bf4:	defffc04 	addi	sp,sp,-16
10106bf8:	dc400115 	stw	r17,4(sp)
10106bfc:	dc000015 	stw	r16,0(sp)
10106c00:	dfc00315 	stw	ra,12(sp)
10106c04:	dc800215 	stw	r18,8(sp)
10106c08:	2023883a 	mov	r17,r4
10106c0c:	2821883a 	mov	r16,r5
10106c10:	10000f26 	beq	r2,zero,10106c50 <_Balloc+0x60>
10106c14:	8407883a 	add	r3,r16,r16
10106c18:	18c7883a 	add	r3,r3,r3
10106c1c:	10c7883a 	add	r3,r2,r3
10106c20:	18800017 	ldw	r2,0(r3)
10106c24:	10001126 	beq	r2,zero,10106c6c <_Balloc+0x7c>
10106c28:	11000017 	ldw	r4,0(r2)
10106c2c:	19000015 	stw	r4,0(r3)
10106c30:	10000415 	stw	zero,16(r2)
10106c34:	10000315 	stw	zero,12(r2)
10106c38:	dfc00317 	ldw	ra,12(sp)
10106c3c:	dc800217 	ldw	r18,8(sp)
10106c40:	dc400117 	ldw	r17,4(sp)
10106c44:	dc000017 	ldw	r16,0(sp)
10106c48:	dec00404 	addi	sp,sp,16
10106c4c:	f800283a 	ret
10106c50:	01800844 	movi	r6,33
10106c54:	01400104 	movi	r5,4
10106c58:	0109c980 	call	10109c98 <_calloc_r>
10106c5c:	88801315 	stw	r2,76(r17)
10106c60:	103fec1e 	bne	r2,zero,10106c14 <__alt_data_end+0xfffe6c14>
10106c64:	0005883a 	mov	r2,zero
10106c68:	003ff306 	br	10106c38 <__alt_data_end+0xfffe6c38>
10106c6c:	01400044 	movi	r5,1
10106c70:	2c24983a 	sll	r18,r5,r16
10106c74:	8809883a 	mov	r4,r17
10106c78:	91800144 	addi	r6,r18,5
10106c7c:	318d883a 	add	r6,r6,r6
10106c80:	318d883a 	add	r6,r6,r6
10106c84:	0109c980 	call	10109c98 <_calloc_r>
10106c88:	103ff626 	beq	r2,zero,10106c64 <__alt_data_end+0xfffe6c64>
10106c8c:	14000115 	stw	r16,4(r2)
10106c90:	14800215 	stw	r18,8(r2)
10106c94:	003fe606 	br	10106c30 <__alt_data_end+0xfffe6c30>

10106c98 <_Bfree>:
10106c98:	28000826 	beq	r5,zero,10106cbc <_Bfree+0x24>
10106c9c:	28c00117 	ldw	r3,4(r5)
10106ca0:	20801317 	ldw	r2,76(r4)
10106ca4:	18c7883a 	add	r3,r3,r3
10106ca8:	18c7883a 	add	r3,r3,r3
10106cac:	10c5883a 	add	r2,r2,r3
10106cb0:	10c00017 	ldw	r3,0(r2)
10106cb4:	28c00015 	stw	r3,0(r5)
10106cb8:	11400015 	stw	r5,0(r2)
10106cbc:	f800283a 	ret

10106cc0 <__multadd>:
10106cc0:	defff704 	addi	sp,sp,-36
10106cc4:	dc800215 	stw	r18,8(sp)
10106cc8:	2c800417 	ldw	r18,16(r5)
10106ccc:	dd800615 	stw	r22,24(sp)
10106cd0:	dd400515 	stw	r21,20(sp)
10106cd4:	dd000415 	stw	r20,16(sp)
10106cd8:	dcc00315 	stw	r19,12(sp)
10106cdc:	dc400115 	stw	r17,4(sp)
10106ce0:	dc000015 	stw	r16,0(sp)
10106ce4:	dfc00815 	stw	ra,32(sp)
10106ce8:	ddc00715 	stw	r23,28(sp)
10106cec:	2827883a 	mov	r19,r5
10106cf0:	2029883a 	mov	r20,r4
10106cf4:	3023883a 	mov	r17,r6
10106cf8:	3821883a 	mov	r16,r7
10106cfc:	2d400504 	addi	r21,r5,20
10106d00:	002d883a 	mov	r22,zero
10106d04:	adc00017 	ldw	r23,0(r21)
10106d08:	880b883a 	mov	r5,r17
10106d0c:	ad400104 	addi	r21,r21,4
10106d10:	b93fffcc 	andi	r4,r23,65535
10106d14:	0100c080 	call	10100c08 <__mulsi3>
10106d18:	b808d43a 	srli	r4,r23,16
10106d1c:	880b883a 	mov	r5,r17
10106d20:	1421883a 	add	r16,r2,r16
10106d24:	0100c080 	call	10100c08 <__mulsi3>
10106d28:	800ed43a 	srli	r7,r16,16
10106d2c:	80ffffcc 	andi	r3,r16,65535
10106d30:	b5800044 	addi	r22,r22,1
10106d34:	11c5883a 	add	r2,r2,r7
10106d38:	100e943a 	slli	r7,r2,16
10106d3c:	1020d43a 	srli	r16,r2,16
10106d40:	38c7883a 	add	r3,r7,r3
10106d44:	a8ffff15 	stw	r3,-4(r21)
10106d48:	b4bfee16 	blt	r22,r18,10106d04 <__alt_data_end+0xfffe6d04>
10106d4c:	80000926 	beq	r16,zero,10106d74 <__multadd+0xb4>
10106d50:	98800217 	ldw	r2,8(r19)
10106d54:	9080130e 	bge	r18,r2,10106da4 <__multadd+0xe4>
10106d58:	90800144 	addi	r2,r18,5
10106d5c:	1085883a 	add	r2,r2,r2
10106d60:	1085883a 	add	r2,r2,r2
10106d64:	9885883a 	add	r2,r19,r2
10106d68:	14000015 	stw	r16,0(r2)
10106d6c:	94800044 	addi	r18,r18,1
10106d70:	9c800415 	stw	r18,16(r19)
10106d74:	9805883a 	mov	r2,r19
10106d78:	dfc00817 	ldw	ra,32(sp)
10106d7c:	ddc00717 	ldw	r23,28(sp)
10106d80:	dd800617 	ldw	r22,24(sp)
10106d84:	dd400517 	ldw	r21,20(sp)
10106d88:	dd000417 	ldw	r20,16(sp)
10106d8c:	dcc00317 	ldw	r19,12(sp)
10106d90:	dc800217 	ldw	r18,8(sp)
10106d94:	dc400117 	ldw	r17,4(sp)
10106d98:	dc000017 	ldw	r16,0(sp)
10106d9c:	dec00904 	addi	sp,sp,36
10106da0:	f800283a 	ret
10106da4:	99400117 	ldw	r5,4(r19)
10106da8:	a009883a 	mov	r4,r20
10106dac:	29400044 	addi	r5,r5,1
10106db0:	0106bf00 	call	10106bf0 <_Balloc>
10106db4:	99800417 	ldw	r6,16(r19)
10106db8:	99400304 	addi	r5,r19,12
10106dbc:	11000304 	addi	r4,r2,12
10106dc0:	31800084 	addi	r6,r6,2
10106dc4:	318d883a 	add	r6,r6,r6
10106dc8:	318d883a 	add	r6,r6,r6
10106dcc:	1023883a 	mov	r17,r2
10106dd0:	0100c300 	call	10100c30 <memcpy>
10106dd4:	98000a26 	beq	r19,zero,10106e00 <__multadd+0x140>
10106dd8:	98c00117 	ldw	r3,4(r19)
10106ddc:	a0801317 	ldw	r2,76(r20)
10106de0:	18c7883a 	add	r3,r3,r3
10106de4:	18c7883a 	add	r3,r3,r3
10106de8:	10c5883a 	add	r2,r2,r3
10106dec:	10c00017 	ldw	r3,0(r2)
10106df0:	98c00015 	stw	r3,0(r19)
10106df4:	14c00015 	stw	r19,0(r2)
10106df8:	8827883a 	mov	r19,r17
10106dfc:	003fd606 	br	10106d58 <__alt_data_end+0xfffe6d58>
10106e00:	8827883a 	mov	r19,r17
10106e04:	003fd406 	br	10106d58 <__alt_data_end+0xfffe6d58>

10106e08 <__s2b>:
10106e08:	defff904 	addi	sp,sp,-28
10106e0c:	dc400115 	stw	r17,4(sp)
10106e10:	dc000015 	stw	r16,0(sp)
10106e14:	2023883a 	mov	r17,r4
10106e18:	2821883a 	mov	r16,r5
10106e1c:	39000204 	addi	r4,r7,8
10106e20:	01400244 	movi	r5,9
10106e24:	dcc00315 	stw	r19,12(sp)
10106e28:	dc800215 	stw	r18,8(sp)
10106e2c:	dfc00615 	stw	ra,24(sp)
10106e30:	dd400515 	stw	r21,20(sp)
10106e34:	dd000415 	stw	r20,16(sp)
10106e38:	3825883a 	mov	r18,r7
10106e3c:	3027883a 	mov	r19,r6
10106e40:	0100a540 	call	10100a54 <__divsi3>
10106e44:	00c00044 	movi	r3,1
10106e48:	000b883a 	mov	r5,zero
10106e4c:	1880030e 	bge	r3,r2,10106e5c <__s2b+0x54>
10106e50:	18c7883a 	add	r3,r3,r3
10106e54:	29400044 	addi	r5,r5,1
10106e58:	18bffd16 	blt	r3,r2,10106e50 <__alt_data_end+0xfffe6e50>
10106e5c:	8809883a 	mov	r4,r17
10106e60:	0106bf00 	call	10106bf0 <_Balloc>
10106e64:	d8c00717 	ldw	r3,28(sp)
10106e68:	10c00515 	stw	r3,20(r2)
10106e6c:	00c00044 	movi	r3,1
10106e70:	10c00415 	stw	r3,16(r2)
10106e74:	00c00244 	movi	r3,9
10106e78:	1cc0210e 	bge	r3,r19,10106f00 <__s2b+0xf8>
10106e7c:	80eb883a 	add	r21,r16,r3
10106e80:	a829883a 	mov	r20,r21
10106e84:	84e1883a 	add	r16,r16,r19
10106e88:	a1c00007 	ldb	r7,0(r20)
10106e8c:	01800284 	movi	r6,10
10106e90:	a5000044 	addi	r20,r20,1
10106e94:	100b883a 	mov	r5,r2
10106e98:	39fff404 	addi	r7,r7,-48
10106e9c:	8809883a 	mov	r4,r17
10106ea0:	0106cc00 	call	10106cc0 <__multadd>
10106ea4:	a43ff81e 	bne	r20,r16,10106e88 <__alt_data_end+0xfffe6e88>
10106ea8:	ace1883a 	add	r16,r21,r19
10106eac:	843ffe04 	addi	r16,r16,-8
10106eb0:	9c800a0e 	bge	r19,r18,10106edc <__s2b+0xd4>
10106eb4:	94e5c83a 	sub	r18,r18,r19
10106eb8:	84a5883a 	add	r18,r16,r18
10106ebc:	81c00007 	ldb	r7,0(r16)
10106ec0:	01800284 	movi	r6,10
10106ec4:	84000044 	addi	r16,r16,1
10106ec8:	100b883a 	mov	r5,r2
10106ecc:	39fff404 	addi	r7,r7,-48
10106ed0:	8809883a 	mov	r4,r17
10106ed4:	0106cc00 	call	10106cc0 <__multadd>
10106ed8:	84bff81e 	bne	r16,r18,10106ebc <__alt_data_end+0xfffe6ebc>
10106edc:	dfc00617 	ldw	ra,24(sp)
10106ee0:	dd400517 	ldw	r21,20(sp)
10106ee4:	dd000417 	ldw	r20,16(sp)
10106ee8:	dcc00317 	ldw	r19,12(sp)
10106eec:	dc800217 	ldw	r18,8(sp)
10106ef0:	dc400117 	ldw	r17,4(sp)
10106ef4:	dc000017 	ldw	r16,0(sp)
10106ef8:	dec00704 	addi	sp,sp,28
10106efc:	f800283a 	ret
10106f00:	84000284 	addi	r16,r16,10
10106f04:	1827883a 	mov	r19,r3
10106f08:	003fe906 	br	10106eb0 <__alt_data_end+0xfffe6eb0>

10106f0c <__hi0bits>:
10106f0c:	20bfffec 	andhi	r2,r4,65535
10106f10:	1000141e 	bne	r2,zero,10106f64 <__hi0bits+0x58>
10106f14:	2008943a 	slli	r4,r4,16
10106f18:	00800404 	movi	r2,16
10106f1c:	20ffc02c 	andhi	r3,r4,65280
10106f20:	1800021e 	bne	r3,zero,10106f2c <__hi0bits+0x20>
10106f24:	2008923a 	slli	r4,r4,8
10106f28:	10800204 	addi	r2,r2,8
10106f2c:	20fc002c 	andhi	r3,r4,61440
10106f30:	1800021e 	bne	r3,zero,10106f3c <__hi0bits+0x30>
10106f34:	2008913a 	slli	r4,r4,4
10106f38:	10800104 	addi	r2,r2,4
10106f3c:	20f0002c 	andhi	r3,r4,49152
10106f40:	1800031e 	bne	r3,zero,10106f50 <__hi0bits+0x44>
10106f44:	2109883a 	add	r4,r4,r4
10106f48:	10800084 	addi	r2,r2,2
10106f4c:	2109883a 	add	r4,r4,r4
10106f50:	20000316 	blt	r4,zero,10106f60 <__hi0bits+0x54>
10106f54:	2110002c 	andhi	r4,r4,16384
10106f58:	2000041e 	bne	r4,zero,10106f6c <__hi0bits+0x60>
10106f5c:	00800804 	movi	r2,32
10106f60:	f800283a 	ret
10106f64:	0005883a 	mov	r2,zero
10106f68:	003fec06 	br	10106f1c <__alt_data_end+0xfffe6f1c>
10106f6c:	10800044 	addi	r2,r2,1
10106f70:	f800283a 	ret

10106f74 <__lo0bits>:
10106f74:	20c00017 	ldw	r3,0(r4)
10106f78:	188001cc 	andi	r2,r3,7
10106f7c:	10000826 	beq	r2,zero,10106fa0 <__lo0bits+0x2c>
10106f80:	1880004c 	andi	r2,r3,1
10106f84:	1000211e 	bne	r2,zero,1010700c <__lo0bits+0x98>
10106f88:	1880008c 	andi	r2,r3,2
10106f8c:	1000211e 	bne	r2,zero,10107014 <__lo0bits+0xa0>
10106f90:	1806d0ba 	srli	r3,r3,2
10106f94:	00800084 	movi	r2,2
10106f98:	20c00015 	stw	r3,0(r4)
10106f9c:	f800283a 	ret
10106fa0:	18bfffcc 	andi	r2,r3,65535
10106fa4:	10001326 	beq	r2,zero,10106ff4 <__lo0bits+0x80>
10106fa8:	0005883a 	mov	r2,zero
10106fac:	19403fcc 	andi	r5,r3,255
10106fb0:	2800021e 	bne	r5,zero,10106fbc <__lo0bits+0x48>
10106fb4:	1806d23a 	srli	r3,r3,8
10106fb8:	10800204 	addi	r2,r2,8
10106fbc:	194003cc 	andi	r5,r3,15
10106fc0:	2800021e 	bne	r5,zero,10106fcc <__lo0bits+0x58>
10106fc4:	1806d13a 	srli	r3,r3,4
10106fc8:	10800104 	addi	r2,r2,4
10106fcc:	194000cc 	andi	r5,r3,3
10106fd0:	2800021e 	bne	r5,zero,10106fdc <__lo0bits+0x68>
10106fd4:	1806d0ba 	srli	r3,r3,2
10106fd8:	10800084 	addi	r2,r2,2
10106fdc:	1940004c 	andi	r5,r3,1
10106fe0:	2800081e 	bne	r5,zero,10107004 <__lo0bits+0x90>
10106fe4:	1806d07a 	srli	r3,r3,1
10106fe8:	1800051e 	bne	r3,zero,10107000 <__lo0bits+0x8c>
10106fec:	00800804 	movi	r2,32
10106ff0:	f800283a 	ret
10106ff4:	1806d43a 	srli	r3,r3,16
10106ff8:	00800404 	movi	r2,16
10106ffc:	003feb06 	br	10106fac <__alt_data_end+0xfffe6fac>
10107000:	10800044 	addi	r2,r2,1
10107004:	20c00015 	stw	r3,0(r4)
10107008:	f800283a 	ret
1010700c:	0005883a 	mov	r2,zero
10107010:	f800283a 	ret
10107014:	1806d07a 	srli	r3,r3,1
10107018:	00800044 	movi	r2,1
1010701c:	20c00015 	stw	r3,0(r4)
10107020:	f800283a 	ret

10107024 <__i2b>:
10107024:	defffd04 	addi	sp,sp,-12
10107028:	dc000015 	stw	r16,0(sp)
1010702c:	04000044 	movi	r16,1
10107030:	dc400115 	stw	r17,4(sp)
10107034:	2823883a 	mov	r17,r5
10107038:	800b883a 	mov	r5,r16
1010703c:	dfc00215 	stw	ra,8(sp)
10107040:	0106bf00 	call	10106bf0 <_Balloc>
10107044:	14400515 	stw	r17,20(r2)
10107048:	14000415 	stw	r16,16(r2)
1010704c:	dfc00217 	ldw	ra,8(sp)
10107050:	dc400117 	ldw	r17,4(sp)
10107054:	dc000017 	ldw	r16,0(sp)
10107058:	dec00304 	addi	sp,sp,12
1010705c:	f800283a 	ret

10107060 <__multiply>:
10107060:	deffef04 	addi	sp,sp,-68
10107064:	dc400815 	stw	r17,32(sp)
10107068:	dc000715 	stw	r16,28(sp)
1010706c:	34400417 	ldw	r17,16(r6)
10107070:	2c000417 	ldw	r16,16(r5)
10107074:	dd800d15 	stw	r22,52(sp)
10107078:	dc800915 	stw	r18,36(sp)
1010707c:	dfc01015 	stw	ra,64(sp)
10107080:	df000f15 	stw	fp,60(sp)
10107084:	ddc00e15 	stw	r23,56(sp)
10107088:	dd400c15 	stw	r21,48(sp)
1010708c:	dd000b15 	stw	r20,44(sp)
10107090:	dcc00a15 	stw	r19,40(sp)
10107094:	2825883a 	mov	r18,r5
10107098:	302d883a 	mov	r22,r6
1010709c:	8440050e 	bge	r16,r17,101070b4 <__multiply+0x54>
101070a0:	8007883a 	mov	r3,r16
101070a4:	3025883a 	mov	r18,r6
101070a8:	8821883a 	mov	r16,r17
101070ac:	282d883a 	mov	r22,r5
101070b0:	1823883a 	mov	r17,r3
101070b4:	90800217 	ldw	r2,8(r18)
101070b8:	8447883a 	add	r3,r16,r17
101070bc:	d8c00215 	stw	r3,8(sp)
101070c0:	91400117 	ldw	r5,4(r18)
101070c4:	10c0010e 	bge	r2,r3,101070cc <__multiply+0x6c>
101070c8:	29400044 	addi	r5,r5,1
101070cc:	0106bf00 	call	10106bf0 <_Balloc>
101070d0:	d8c00217 	ldw	r3,8(sp)
101070d4:	d8800615 	stw	r2,24(sp)
101070d8:	18eb883a 	add	r21,r3,r3
101070dc:	ad6b883a 	add	r21,r21,r21
101070e0:	10c00504 	addi	r3,r2,20
101070e4:	1d6b883a 	add	r21,r3,r21
101070e8:	d8c00115 	stw	r3,4(sp)
101070ec:	dd400315 	stw	r21,12(sp)
101070f0:	1805883a 	mov	r2,r3
101070f4:	1d40042e 	bgeu	r3,r21,10107108 <__multiply+0xa8>
101070f8:	d8c00317 	ldw	r3,12(sp)
101070fc:	10000015 	stw	zero,0(r2)
10107100:	10800104 	addi	r2,r2,4
10107104:	10fffc36 	bltu	r2,r3,101070f8 <__alt_data_end+0xfffe70f8>
10107108:	8c63883a 	add	r17,r17,r17
1010710c:	b5800504 	addi	r22,r22,20
10107110:	8c63883a 	add	r17,r17,r17
10107114:	94800504 	addi	r18,r18,20
10107118:	8421883a 	add	r16,r16,r16
1010711c:	b463883a 	add	r17,r22,r17
10107120:	8421883a 	add	r16,r16,r16
10107124:	dd800015 	stw	r22,0(sp)
10107128:	dc800415 	stw	r18,16(sp)
1010712c:	dc400515 	stw	r17,20(sp)
10107130:	9429883a 	add	r20,r18,r16
10107134:	b4404f2e 	bgeu	r22,r17,10107274 <__multiply+0x214>
10107138:	d8c00017 	ldw	r3,0(sp)
1010713c:	1c800017 	ldw	r18,0(r3)
10107140:	947fffcc 	andi	r17,r18,65535
10107144:	88001e26 	beq	r17,zero,101071c0 <__multiply+0x160>
10107148:	dd800117 	ldw	r22,4(sp)
1010714c:	dd400417 	ldw	r21,16(sp)
10107150:	0027883a 	mov	r19,zero
10107154:	ac800017 	ldw	r18,0(r21)
10107158:	b4000017 	ldw	r16,0(r22)
1010715c:	880b883a 	mov	r5,r17
10107160:	913fffcc 	andi	r4,r18,65535
10107164:	0100c080 	call	10100c08 <__mulsi3>
10107168:	9008d43a 	srli	r4,r18,16
1010716c:	84bfffcc 	andi	r18,r16,65535
10107170:	1485883a 	add	r2,r2,r18
10107174:	14e5883a 	add	r18,r2,r19
10107178:	8020d43a 	srli	r16,r16,16
1010717c:	9026d43a 	srli	r19,r18,16
10107180:	880b883a 	mov	r5,r17
10107184:	0100c080 	call	10100c08 <__mulsi3>
10107188:	1405883a 	add	r2,r2,r16
1010718c:	14e1883a 	add	r16,r2,r19
10107190:	90ffffcc 	andi	r3,r18,65535
10107194:	8024943a 	slli	r18,r16,16
10107198:	ad400104 	addi	r21,r21,4
1010719c:	b005883a 	mov	r2,r22
101071a0:	90c6b03a 	or	r3,r18,r3
101071a4:	b0c00015 	stw	r3,0(r22)
101071a8:	8026d43a 	srli	r19,r16,16
101071ac:	b5800104 	addi	r22,r22,4
101071b0:	ad3fe836 	bltu	r21,r20,10107154 <__alt_data_end+0xfffe7154>
101071b4:	d8c00017 	ldw	r3,0(sp)
101071b8:	14c00115 	stw	r19,4(r2)
101071bc:	1c800017 	ldw	r18,0(r3)
101071c0:	9024d43a 	srli	r18,r18,16
101071c4:	90002226 	beq	r18,zero,10107250 <__multiply+0x1f0>
101071c8:	d8c00117 	ldw	r3,4(sp)
101071cc:	dd800417 	ldw	r22,16(sp)
101071d0:	002f883a 	mov	r23,zero
101071d4:	1f000017 	ldw	fp,0(r3)
101071d8:	1823883a 	mov	r17,r3
101071dc:	182b883a 	mov	r21,r3
101071e0:	e021883a 	mov	r16,fp
101071e4:	00000106 	br	101071ec <__multiply+0x18c>
101071e8:	982b883a 	mov	r21,r19
101071ec:	b100000b 	ldhu	r4,0(r22)
101071f0:	8020d43a 	srli	r16,r16,16
101071f4:	900b883a 	mov	r5,r18
101071f8:	0100c080 	call	10100c08 <__mulsi3>
101071fc:	1405883a 	add	r2,r2,r16
10107200:	15ef883a 	add	r23,r2,r23
10107204:	b804943a 	slli	r2,r23,16
10107208:	e0ffffcc 	andi	r3,fp,65535
1010720c:	8c400104 	addi	r17,r17,4
10107210:	10c6b03a 	or	r3,r2,r3
10107214:	88ffff15 	stw	r3,-4(r17)
10107218:	b5800104 	addi	r22,r22,4
1010721c:	b13fff17 	ldw	r4,-4(r22)
10107220:	acc00104 	addi	r19,r21,4
10107224:	900b883a 	mov	r5,r18
10107228:	2008d43a 	srli	r4,r4,16
1010722c:	9c000017 	ldw	r16,0(r19)
10107230:	0100c080 	call	10100c08 <__mulsi3>
10107234:	b806d43a 	srli	r3,r23,16
10107238:	813fffcc 	andi	r4,r16,65535
1010723c:	1105883a 	add	r2,r2,r4
10107240:	10f9883a 	add	fp,r2,r3
10107244:	e02ed43a 	srli	r23,fp,16
10107248:	b53fe736 	bltu	r22,r20,101071e8 <__alt_data_end+0xfffe71e8>
1010724c:	af000115 	stw	fp,4(r21)
10107250:	d8c00017 	ldw	r3,0(sp)
10107254:	d9000517 	ldw	r4,20(sp)
10107258:	18c00104 	addi	r3,r3,4
1010725c:	d8c00015 	stw	r3,0(sp)
10107260:	d8c00117 	ldw	r3,4(sp)
10107264:	18c00104 	addi	r3,r3,4
10107268:	d8c00115 	stw	r3,4(sp)
1010726c:	d8c00017 	ldw	r3,0(sp)
10107270:	193fb136 	bltu	r3,r4,10107138 <__alt_data_end+0xfffe7138>
10107274:	d8c00217 	ldw	r3,8(sp)
10107278:	00c00c0e 	bge	zero,r3,101072ac <__multiply+0x24c>
1010727c:	d8c00317 	ldw	r3,12(sp)
10107280:	18bfff17 	ldw	r2,-4(r3)
10107284:	1d7fff04 	addi	r21,r3,-4
10107288:	10000326 	beq	r2,zero,10107298 <__multiply+0x238>
1010728c:	00000706 	br	101072ac <__multiply+0x24c>
10107290:	a8800017 	ldw	r2,0(r21)
10107294:	1000051e 	bne	r2,zero,101072ac <__multiply+0x24c>
10107298:	d8c00217 	ldw	r3,8(sp)
1010729c:	ad7fff04 	addi	r21,r21,-4
101072a0:	18ffffc4 	addi	r3,r3,-1
101072a4:	d8c00215 	stw	r3,8(sp)
101072a8:	183ff91e 	bne	r3,zero,10107290 <__alt_data_end+0xfffe7290>
101072ac:	d8c00617 	ldw	r3,24(sp)
101072b0:	d9000217 	ldw	r4,8(sp)
101072b4:	1805883a 	mov	r2,r3
101072b8:	19000415 	stw	r4,16(r3)
101072bc:	dfc01017 	ldw	ra,64(sp)
101072c0:	df000f17 	ldw	fp,60(sp)
101072c4:	ddc00e17 	ldw	r23,56(sp)
101072c8:	dd800d17 	ldw	r22,52(sp)
101072cc:	dd400c17 	ldw	r21,48(sp)
101072d0:	dd000b17 	ldw	r20,44(sp)
101072d4:	dcc00a17 	ldw	r19,40(sp)
101072d8:	dc800917 	ldw	r18,36(sp)
101072dc:	dc400817 	ldw	r17,32(sp)
101072e0:	dc000717 	ldw	r16,28(sp)
101072e4:	dec01104 	addi	sp,sp,68
101072e8:	f800283a 	ret

101072ec <__pow5mult>:
101072ec:	defffa04 	addi	sp,sp,-24
101072f0:	dcc00315 	stw	r19,12(sp)
101072f4:	dc000015 	stw	r16,0(sp)
101072f8:	dfc00515 	stw	ra,20(sp)
101072fc:	dd000415 	stw	r20,16(sp)
10107300:	dc800215 	stw	r18,8(sp)
10107304:	dc400115 	stw	r17,4(sp)
10107308:	308000cc 	andi	r2,r6,3
1010730c:	3021883a 	mov	r16,r6
10107310:	2027883a 	mov	r19,r4
10107314:	10002f1e 	bne	r2,zero,101073d4 <__pow5mult+0xe8>
10107318:	2825883a 	mov	r18,r5
1010731c:	8021d0ba 	srai	r16,r16,2
10107320:	80001a26 	beq	r16,zero,1010738c <__pow5mult+0xa0>
10107324:	9c401217 	ldw	r17,72(r19)
10107328:	8800061e 	bne	r17,zero,10107344 <__pow5mult+0x58>
1010732c:	00003406 	br	10107400 <__pow5mult+0x114>
10107330:	8021d07a 	srai	r16,r16,1
10107334:	80001526 	beq	r16,zero,1010738c <__pow5mult+0xa0>
10107338:	88800017 	ldw	r2,0(r17)
1010733c:	10001c26 	beq	r2,zero,101073b0 <__pow5mult+0xc4>
10107340:	1023883a 	mov	r17,r2
10107344:	8080004c 	andi	r2,r16,1
10107348:	103ff926 	beq	r2,zero,10107330 <__alt_data_end+0xfffe7330>
1010734c:	880d883a 	mov	r6,r17
10107350:	900b883a 	mov	r5,r18
10107354:	9809883a 	mov	r4,r19
10107358:	01070600 	call	10107060 <__multiply>
1010735c:	90001b26 	beq	r18,zero,101073cc <__pow5mult+0xe0>
10107360:	91000117 	ldw	r4,4(r18)
10107364:	98c01317 	ldw	r3,76(r19)
10107368:	8021d07a 	srai	r16,r16,1
1010736c:	2109883a 	add	r4,r4,r4
10107370:	2109883a 	add	r4,r4,r4
10107374:	1907883a 	add	r3,r3,r4
10107378:	19000017 	ldw	r4,0(r3)
1010737c:	91000015 	stw	r4,0(r18)
10107380:	1c800015 	stw	r18,0(r3)
10107384:	1025883a 	mov	r18,r2
10107388:	803feb1e 	bne	r16,zero,10107338 <__alt_data_end+0xfffe7338>
1010738c:	9005883a 	mov	r2,r18
10107390:	dfc00517 	ldw	ra,20(sp)
10107394:	dd000417 	ldw	r20,16(sp)
10107398:	dcc00317 	ldw	r19,12(sp)
1010739c:	dc800217 	ldw	r18,8(sp)
101073a0:	dc400117 	ldw	r17,4(sp)
101073a4:	dc000017 	ldw	r16,0(sp)
101073a8:	dec00604 	addi	sp,sp,24
101073ac:	f800283a 	ret
101073b0:	880d883a 	mov	r6,r17
101073b4:	880b883a 	mov	r5,r17
101073b8:	9809883a 	mov	r4,r19
101073bc:	01070600 	call	10107060 <__multiply>
101073c0:	88800015 	stw	r2,0(r17)
101073c4:	10000015 	stw	zero,0(r2)
101073c8:	003fdd06 	br	10107340 <__alt_data_end+0xfffe7340>
101073cc:	1025883a 	mov	r18,r2
101073d0:	003fd706 	br	10107330 <__alt_data_end+0xfffe7330>
101073d4:	10bfffc4 	addi	r2,r2,-1
101073d8:	1085883a 	add	r2,r2,r2
101073dc:	00c40474 	movhi	r3,4113
101073e0:	18c07904 	addi	r3,r3,484
101073e4:	1085883a 	add	r2,r2,r2
101073e8:	1885883a 	add	r2,r3,r2
101073ec:	11800017 	ldw	r6,0(r2)
101073f0:	000f883a 	mov	r7,zero
101073f4:	0106cc00 	call	10106cc0 <__multadd>
101073f8:	1025883a 	mov	r18,r2
101073fc:	003fc706 	br	1010731c <__alt_data_end+0xfffe731c>
10107400:	05000044 	movi	r20,1
10107404:	a00b883a 	mov	r5,r20
10107408:	9809883a 	mov	r4,r19
1010740c:	0106bf00 	call	10106bf0 <_Balloc>
10107410:	1023883a 	mov	r17,r2
10107414:	00809c44 	movi	r2,625
10107418:	88800515 	stw	r2,20(r17)
1010741c:	8d000415 	stw	r20,16(r17)
10107420:	9c401215 	stw	r17,72(r19)
10107424:	88000015 	stw	zero,0(r17)
10107428:	003fc606 	br	10107344 <__alt_data_end+0xfffe7344>

1010742c <__lshift>:
1010742c:	defff904 	addi	sp,sp,-28
10107430:	dd400515 	stw	r21,20(sp)
10107434:	dcc00315 	stw	r19,12(sp)
10107438:	302bd17a 	srai	r21,r6,5
1010743c:	2cc00417 	ldw	r19,16(r5)
10107440:	28800217 	ldw	r2,8(r5)
10107444:	dd000415 	stw	r20,16(sp)
10107448:	ace7883a 	add	r19,r21,r19
1010744c:	dc800215 	stw	r18,8(sp)
10107450:	dc400115 	stw	r17,4(sp)
10107454:	dc000015 	stw	r16,0(sp)
10107458:	dfc00615 	stw	ra,24(sp)
1010745c:	9c000044 	addi	r16,r19,1
10107460:	2823883a 	mov	r17,r5
10107464:	3029883a 	mov	r20,r6
10107468:	2025883a 	mov	r18,r4
1010746c:	29400117 	ldw	r5,4(r5)
10107470:	1400030e 	bge	r2,r16,10107480 <__lshift+0x54>
10107474:	1085883a 	add	r2,r2,r2
10107478:	29400044 	addi	r5,r5,1
1010747c:	143ffd16 	blt	r2,r16,10107474 <__alt_data_end+0xfffe7474>
10107480:	9009883a 	mov	r4,r18
10107484:	0106bf00 	call	10106bf0 <_Balloc>
10107488:	10c00504 	addi	r3,r2,20
1010748c:	0540070e 	bge	zero,r21,101074ac <__lshift+0x80>
10107490:	ad6b883a 	add	r21,r21,r21
10107494:	ad6b883a 	add	r21,r21,r21
10107498:	1809883a 	mov	r4,r3
1010749c:	1d47883a 	add	r3,r3,r21
101074a0:	20000015 	stw	zero,0(r4)
101074a4:	21000104 	addi	r4,r4,4
101074a8:	193ffd1e 	bne	r3,r4,101074a0 <__alt_data_end+0xfffe74a0>
101074ac:	8a000417 	ldw	r8,16(r17)
101074b0:	89000504 	addi	r4,r17,20
101074b4:	a18007cc 	andi	r6,r20,31
101074b8:	4211883a 	add	r8,r8,r8
101074bc:	4211883a 	add	r8,r8,r8
101074c0:	2211883a 	add	r8,r4,r8
101074c4:	30002326 	beq	r6,zero,10107554 <__lshift+0x128>
101074c8:	02400804 	movi	r9,32
101074cc:	4993c83a 	sub	r9,r9,r6
101074d0:	000b883a 	mov	r5,zero
101074d4:	21c00017 	ldw	r7,0(r4)
101074d8:	1815883a 	mov	r10,r3
101074dc:	18c00104 	addi	r3,r3,4
101074e0:	398e983a 	sll	r7,r7,r6
101074e4:	21000104 	addi	r4,r4,4
101074e8:	394ab03a 	or	r5,r7,r5
101074ec:	197fff15 	stw	r5,-4(r3)
101074f0:	217fff17 	ldw	r5,-4(r4)
101074f4:	2a4ad83a 	srl	r5,r5,r9
101074f8:	223ff636 	bltu	r4,r8,101074d4 <__alt_data_end+0xfffe74d4>
101074fc:	51400115 	stw	r5,4(r10)
10107500:	28001a1e 	bne	r5,zero,1010756c <__lshift+0x140>
10107504:	843fffc4 	addi	r16,r16,-1
10107508:	14000415 	stw	r16,16(r2)
1010750c:	88000826 	beq	r17,zero,10107530 <__lshift+0x104>
10107510:	89000117 	ldw	r4,4(r17)
10107514:	90c01317 	ldw	r3,76(r18)
10107518:	2109883a 	add	r4,r4,r4
1010751c:	2109883a 	add	r4,r4,r4
10107520:	1907883a 	add	r3,r3,r4
10107524:	19000017 	ldw	r4,0(r3)
10107528:	89000015 	stw	r4,0(r17)
1010752c:	1c400015 	stw	r17,0(r3)
10107530:	dfc00617 	ldw	ra,24(sp)
10107534:	dd400517 	ldw	r21,20(sp)
10107538:	dd000417 	ldw	r20,16(sp)
1010753c:	dcc00317 	ldw	r19,12(sp)
10107540:	dc800217 	ldw	r18,8(sp)
10107544:	dc400117 	ldw	r17,4(sp)
10107548:	dc000017 	ldw	r16,0(sp)
1010754c:	dec00704 	addi	sp,sp,28
10107550:	f800283a 	ret
10107554:	21400017 	ldw	r5,0(r4)
10107558:	18c00104 	addi	r3,r3,4
1010755c:	21000104 	addi	r4,r4,4
10107560:	197fff15 	stw	r5,-4(r3)
10107564:	223ffb36 	bltu	r4,r8,10107554 <__alt_data_end+0xfffe7554>
10107568:	003fe606 	br	10107504 <__alt_data_end+0xfffe7504>
1010756c:	9c000084 	addi	r16,r19,2
10107570:	003fe406 	br	10107504 <__alt_data_end+0xfffe7504>

10107574 <__mcmp>:
10107574:	20800417 	ldw	r2,16(r4)
10107578:	28c00417 	ldw	r3,16(r5)
1010757c:	10c5c83a 	sub	r2,r2,r3
10107580:	1000111e 	bne	r2,zero,101075c8 <__mcmp+0x54>
10107584:	18c7883a 	add	r3,r3,r3
10107588:	18c7883a 	add	r3,r3,r3
1010758c:	21000504 	addi	r4,r4,20
10107590:	29400504 	addi	r5,r5,20
10107594:	20c5883a 	add	r2,r4,r3
10107598:	28cb883a 	add	r5,r5,r3
1010759c:	00000106 	br	101075a4 <__mcmp+0x30>
101075a0:	20800a2e 	bgeu	r4,r2,101075cc <__mcmp+0x58>
101075a4:	10bfff04 	addi	r2,r2,-4
101075a8:	297fff04 	addi	r5,r5,-4
101075ac:	11800017 	ldw	r6,0(r2)
101075b0:	28c00017 	ldw	r3,0(r5)
101075b4:	30fffa26 	beq	r6,r3,101075a0 <__alt_data_end+0xfffe75a0>
101075b8:	30c00236 	bltu	r6,r3,101075c4 <__mcmp+0x50>
101075bc:	00800044 	movi	r2,1
101075c0:	f800283a 	ret
101075c4:	00bfffc4 	movi	r2,-1
101075c8:	f800283a 	ret
101075cc:	0005883a 	mov	r2,zero
101075d0:	f800283a 	ret

101075d4 <__mdiff>:
101075d4:	28c00417 	ldw	r3,16(r5)
101075d8:	30800417 	ldw	r2,16(r6)
101075dc:	defffa04 	addi	sp,sp,-24
101075e0:	dcc00315 	stw	r19,12(sp)
101075e4:	dc800215 	stw	r18,8(sp)
101075e8:	dfc00515 	stw	ra,20(sp)
101075ec:	dd000415 	stw	r20,16(sp)
101075f0:	dc400115 	stw	r17,4(sp)
101075f4:	dc000015 	stw	r16,0(sp)
101075f8:	1887c83a 	sub	r3,r3,r2
101075fc:	2825883a 	mov	r18,r5
10107600:	3027883a 	mov	r19,r6
10107604:	1800141e 	bne	r3,zero,10107658 <__mdiff+0x84>
10107608:	1085883a 	add	r2,r2,r2
1010760c:	1085883a 	add	r2,r2,r2
10107610:	2a000504 	addi	r8,r5,20
10107614:	34000504 	addi	r16,r6,20
10107618:	4087883a 	add	r3,r8,r2
1010761c:	8085883a 	add	r2,r16,r2
10107620:	00000106 	br	10107628 <__mdiff+0x54>
10107624:	40c0592e 	bgeu	r8,r3,1010778c <__mdiff+0x1b8>
10107628:	18ffff04 	addi	r3,r3,-4
1010762c:	10bfff04 	addi	r2,r2,-4
10107630:	19c00017 	ldw	r7,0(r3)
10107634:	11400017 	ldw	r5,0(r2)
10107638:	397ffa26 	beq	r7,r5,10107624 <__alt_data_end+0xfffe7624>
1010763c:	3940592e 	bgeu	r7,r5,101077a4 <__mdiff+0x1d0>
10107640:	9005883a 	mov	r2,r18
10107644:	4023883a 	mov	r17,r8
10107648:	9825883a 	mov	r18,r19
1010764c:	05000044 	movi	r20,1
10107650:	1027883a 	mov	r19,r2
10107654:	00000406 	br	10107668 <__mdiff+0x94>
10107658:	18005616 	blt	r3,zero,101077b4 <__mdiff+0x1e0>
1010765c:	34400504 	addi	r17,r6,20
10107660:	2c000504 	addi	r16,r5,20
10107664:	0029883a 	mov	r20,zero
10107668:	91400117 	ldw	r5,4(r18)
1010766c:	0106bf00 	call	10106bf0 <_Balloc>
10107670:	92400417 	ldw	r9,16(r18)
10107674:	9b000417 	ldw	r12,16(r19)
10107678:	12c00504 	addi	r11,r2,20
1010767c:	4a51883a 	add	r8,r9,r9
10107680:	6319883a 	add	r12,r12,r12
10107684:	4211883a 	add	r8,r8,r8
10107688:	6319883a 	add	r12,r12,r12
1010768c:	15000315 	stw	r20,12(r2)
10107690:	8211883a 	add	r8,r16,r8
10107694:	8b19883a 	add	r12,r17,r12
10107698:	0007883a 	mov	r3,zero
1010769c:	81400017 	ldw	r5,0(r16)
101076a0:	89c00017 	ldw	r7,0(r17)
101076a4:	59800104 	addi	r6,r11,4
101076a8:	293fffcc 	andi	r4,r5,65535
101076ac:	20c7883a 	add	r3,r4,r3
101076b0:	393fffcc 	andi	r4,r7,65535
101076b4:	1909c83a 	sub	r4,r3,r4
101076b8:	280ad43a 	srli	r5,r5,16
101076bc:	380ed43a 	srli	r7,r7,16
101076c0:	2007d43a 	srai	r3,r4,16
101076c4:	213fffcc 	andi	r4,r4,65535
101076c8:	29cbc83a 	sub	r5,r5,r7
101076cc:	28c7883a 	add	r3,r5,r3
101076d0:	180a943a 	slli	r5,r3,16
101076d4:	8c400104 	addi	r17,r17,4
101076d8:	84000104 	addi	r16,r16,4
101076dc:	2908b03a 	or	r4,r5,r4
101076e0:	59000015 	stw	r4,0(r11)
101076e4:	1807d43a 	srai	r3,r3,16
101076e8:	3015883a 	mov	r10,r6
101076ec:	3017883a 	mov	r11,r6
101076f0:	8b3fea36 	bltu	r17,r12,1010769c <__alt_data_end+0xfffe769c>
101076f4:	8200162e 	bgeu	r16,r8,10107750 <__mdiff+0x17c>
101076f8:	8017883a 	mov	r11,r16
101076fc:	59400017 	ldw	r5,0(r11)
10107700:	31800104 	addi	r6,r6,4
10107704:	5ac00104 	addi	r11,r11,4
10107708:	293fffcc 	andi	r4,r5,65535
1010770c:	20c7883a 	add	r3,r4,r3
10107710:	280ed43a 	srli	r7,r5,16
10107714:	180bd43a 	srai	r5,r3,16
10107718:	193fffcc 	andi	r4,r3,65535
1010771c:	3947883a 	add	r3,r7,r5
10107720:	180a943a 	slli	r5,r3,16
10107724:	1807d43a 	srai	r3,r3,16
10107728:	2908b03a 	or	r4,r5,r4
1010772c:	313fff15 	stw	r4,-4(r6)
10107730:	5a3ff236 	bltu	r11,r8,101076fc <__alt_data_end+0xfffe76fc>
10107734:	0406303a 	nor	r3,zero,r16
10107738:	1a07883a 	add	r3,r3,r8
1010773c:	1806d0ba 	srli	r3,r3,2
10107740:	18c00044 	addi	r3,r3,1
10107744:	18c7883a 	add	r3,r3,r3
10107748:	18c7883a 	add	r3,r3,r3
1010774c:	50d5883a 	add	r10,r10,r3
10107750:	50ffff04 	addi	r3,r10,-4
10107754:	2000041e 	bne	r4,zero,10107768 <__mdiff+0x194>
10107758:	18ffff04 	addi	r3,r3,-4
1010775c:	19000017 	ldw	r4,0(r3)
10107760:	4a7fffc4 	addi	r9,r9,-1
10107764:	203ffc26 	beq	r4,zero,10107758 <__alt_data_end+0xfffe7758>
10107768:	12400415 	stw	r9,16(r2)
1010776c:	dfc00517 	ldw	ra,20(sp)
10107770:	dd000417 	ldw	r20,16(sp)
10107774:	dcc00317 	ldw	r19,12(sp)
10107778:	dc800217 	ldw	r18,8(sp)
1010777c:	dc400117 	ldw	r17,4(sp)
10107780:	dc000017 	ldw	r16,0(sp)
10107784:	dec00604 	addi	sp,sp,24
10107788:	f800283a 	ret
1010778c:	000b883a 	mov	r5,zero
10107790:	0106bf00 	call	10106bf0 <_Balloc>
10107794:	00c00044 	movi	r3,1
10107798:	10c00415 	stw	r3,16(r2)
1010779c:	10000515 	stw	zero,20(r2)
101077a0:	003ff206 	br	1010776c <__alt_data_end+0xfffe776c>
101077a4:	8023883a 	mov	r17,r16
101077a8:	0029883a 	mov	r20,zero
101077ac:	4021883a 	mov	r16,r8
101077b0:	003fad06 	br	10107668 <__alt_data_end+0xfffe7668>
101077b4:	9005883a 	mov	r2,r18
101077b8:	94400504 	addi	r17,r18,20
101077bc:	9c000504 	addi	r16,r19,20
101077c0:	9825883a 	mov	r18,r19
101077c4:	05000044 	movi	r20,1
101077c8:	1027883a 	mov	r19,r2
101077cc:	003fa606 	br	10107668 <__alt_data_end+0xfffe7668>

101077d0 <__ulp>:
101077d0:	295ffc2c 	andhi	r5,r5,32752
101077d4:	00bf3034 	movhi	r2,64704
101077d8:	2887883a 	add	r3,r5,r2
101077dc:	00c0020e 	bge	zero,r3,101077e8 <__ulp+0x18>
101077e0:	0005883a 	mov	r2,zero
101077e4:	f800283a 	ret
101077e8:	00c7c83a 	sub	r3,zero,r3
101077ec:	1807d53a 	srai	r3,r3,20
101077f0:	008004c4 	movi	r2,19
101077f4:	10c00b0e 	bge	r2,r3,10107824 <__ulp+0x54>
101077f8:	18bffb04 	addi	r2,r3,-20
101077fc:	01000784 	movi	r4,30
10107800:	0007883a 	mov	r3,zero
10107804:	20800516 	blt	r4,r2,1010781c <__ulp+0x4c>
10107808:	010007c4 	movi	r4,31
1010780c:	2089c83a 	sub	r4,r4,r2
10107810:	00800044 	movi	r2,1
10107814:	1104983a 	sll	r2,r2,r4
10107818:	f800283a 	ret
1010781c:	00800044 	movi	r2,1
10107820:	f800283a 	ret
10107824:	01400234 	movhi	r5,8
10107828:	28c7d83a 	sra	r3,r5,r3
1010782c:	0005883a 	mov	r2,zero
10107830:	f800283a 	ret

10107834 <__b2d>:
10107834:	defffa04 	addi	sp,sp,-24
10107838:	dc000015 	stw	r16,0(sp)
1010783c:	24000417 	ldw	r16,16(r4)
10107840:	dc400115 	stw	r17,4(sp)
10107844:	24400504 	addi	r17,r4,20
10107848:	8421883a 	add	r16,r16,r16
1010784c:	8421883a 	add	r16,r16,r16
10107850:	8c21883a 	add	r16,r17,r16
10107854:	dc800215 	stw	r18,8(sp)
10107858:	84bfff17 	ldw	r18,-4(r16)
1010785c:	dd000415 	stw	r20,16(sp)
10107860:	dcc00315 	stw	r19,12(sp)
10107864:	9009883a 	mov	r4,r18
10107868:	2829883a 	mov	r20,r5
1010786c:	dfc00515 	stw	ra,20(sp)
10107870:	0106f0c0 	call	10106f0c <__hi0bits>
10107874:	00c00804 	movi	r3,32
10107878:	1889c83a 	sub	r4,r3,r2
1010787c:	a1000015 	stw	r4,0(r20)
10107880:	01000284 	movi	r4,10
10107884:	84ffff04 	addi	r19,r16,-4
10107888:	20801216 	blt	r4,r2,101078d4 <__b2d+0xa0>
1010788c:	018002c4 	movi	r6,11
10107890:	308dc83a 	sub	r6,r6,r2
10107894:	9186d83a 	srl	r3,r18,r6
10107898:	18cffc34 	orhi	r3,r3,16368
1010789c:	8cc0212e 	bgeu	r17,r19,10107924 <__b2d+0xf0>
101078a0:	813ffe17 	ldw	r4,-8(r16)
101078a4:	218cd83a 	srl	r6,r4,r6
101078a8:	10800544 	addi	r2,r2,21
101078ac:	9084983a 	sll	r2,r18,r2
101078b0:	1184b03a 	or	r2,r2,r6
101078b4:	dfc00517 	ldw	ra,20(sp)
101078b8:	dd000417 	ldw	r20,16(sp)
101078bc:	dcc00317 	ldw	r19,12(sp)
101078c0:	dc800217 	ldw	r18,8(sp)
101078c4:	dc400117 	ldw	r17,4(sp)
101078c8:	dc000017 	ldw	r16,0(sp)
101078cc:	dec00604 	addi	sp,sp,24
101078d0:	f800283a 	ret
101078d4:	8cc00f2e 	bgeu	r17,r19,10107914 <__b2d+0xe0>
101078d8:	117ffd44 	addi	r5,r2,-11
101078dc:	80bffe17 	ldw	r2,-8(r16)
101078e0:	28000e26 	beq	r5,zero,1010791c <__b2d+0xe8>
101078e4:	1949c83a 	sub	r4,r3,r5
101078e8:	9164983a 	sll	r18,r18,r5
101078ec:	1106d83a 	srl	r3,r2,r4
101078f0:	81bffe04 	addi	r6,r16,-8
101078f4:	948ffc34 	orhi	r18,r18,16368
101078f8:	90c6b03a 	or	r3,r18,r3
101078fc:	89800e2e 	bgeu	r17,r6,10107938 <__b2d+0x104>
10107900:	81bffd17 	ldw	r6,-12(r16)
10107904:	1144983a 	sll	r2,r2,r5
10107908:	310ad83a 	srl	r5,r6,r4
1010790c:	2884b03a 	or	r2,r5,r2
10107910:	003fe806 	br	101078b4 <__alt_data_end+0xfffe78b4>
10107914:	10bffd44 	addi	r2,r2,-11
10107918:	1000041e 	bne	r2,zero,1010792c <__b2d+0xf8>
1010791c:	90cffc34 	orhi	r3,r18,16368
10107920:	003fe406 	br	101078b4 <__alt_data_end+0xfffe78b4>
10107924:	000d883a 	mov	r6,zero
10107928:	003fdf06 	br	101078a8 <__alt_data_end+0xfffe78a8>
1010792c:	90a4983a 	sll	r18,r18,r2
10107930:	0005883a 	mov	r2,zero
10107934:	003ff906 	br	1010791c <__alt_data_end+0xfffe791c>
10107938:	1144983a 	sll	r2,r2,r5
1010793c:	003fdd06 	br	101078b4 <__alt_data_end+0xfffe78b4>

10107940 <__d2b>:
10107940:	defff804 	addi	sp,sp,-32
10107944:	dc000215 	stw	r16,8(sp)
10107948:	3021883a 	mov	r16,r6
1010794c:	dc400315 	stw	r17,12(sp)
10107950:	8022907a 	slli	r17,r16,1
10107954:	dd000615 	stw	r20,24(sp)
10107958:	2829883a 	mov	r20,r5
1010795c:	01400044 	movi	r5,1
10107960:	dcc00515 	stw	r19,20(sp)
10107964:	dc800415 	stw	r18,16(sp)
10107968:	dfc00715 	stw	ra,28(sp)
1010796c:	3825883a 	mov	r18,r7
10107970:	8822d57a 	srli	r17,r17,21
10107974:	0106bf00 	call	10106bf0 <_Balloc>
10107978:	1027883a 	mov	r19,r2
1010797c:	00800434 	movhi	r2,16
10107980:	10bfffc4 	addi	r2,r2,-1
10107984:	808c703a 	and	r6,r16,r2
10107988:	88000126 	beq	r17,zero,10107990 <__d2b+0x50>
1010798c:	31800434 	orhi	r6,r6,16
10107990:	d9800015 	stw	r6,0(sp)
10107994:	a0002426 	beq	r20,zero,10107a28 <__d2b+0xe8>
10107998:	d9000104 	addi	r4,sp,4
1010799c:	dd000115 	stw	r20,4(sp)
101079a0:	0106f740 	call	10106f74 <__lo0bits>
101079a4:	d8c00017 	ldw	r3,0(sp)
101079a8:	10002f1e 	bne	r2,zero,10107a68 <__d2b+0x128>
101079ac:	d9000117 	ldw	r4,4(sp)
101079b0:	99000515 	stw	r4,20(r19)
101079b4:	1821003a 	cmpeq	r16,r3,zero
101079b8:	01000084 	movi	r4,2
101079bc:	2421c83a 	sub	r16,r4,r16
101079c0:	98c00615 	stw	r3,24(r19)
101079c4:	9c000415 	stw	r16,16(r19)
101079c8:	88001f1e 	bne	r17,zero,10107a48 <__d2b+0x108>
101079cc:	10bef384 	addi	r2,r2,-1074
101079d0:	90800015 	stw	r2,0(r18)
101079d4:	00900034 	movhi	r2,16384
101079d8:	10bfffc4 	addi	r2,r2,-1
101079dc:	8085883a 	add	r2,r16,r2
101079e0:	1085883a 	add	r2,r2,r2
101079e4:	1085883a 	add	r2,r2,r2
101079e8:	9885883a 	add	r2,r19,r2
101079ec:	11000517 	ldw	r4,20(r2)
101079f0:	8020917a 	slli	r16,r16,5
101079f4:	0106f0c0 	call	10106f0c <__hi0bits>
101079f8:	d8c00817 	ldw	r3,32(sp)
101079fc:	8085c83a 	sub	r2,r16,r2
10107a00:	18800015 	stw	r2,0(r3)
10107a04:	9805883a 	mov	r2,r19
10107a08:	dfc00717 	ldw	ra,28(sp)
10107a0c:	dd000617 	ldw	r20,24(sp)
10107a10:	dcc00517 	ldw	r19,20(sp)
10107a14:	dc800417 	ldw	r18,16(sp)
10107a18:	dc400317 	ldw	r17,12(sp)
10107a1c:	dc000217 	ldw	r16,8(sp)
10107a20:	dec00804 	addi	sp,sp,32
10107a24:	f800283a 	ret
10107a28:	d809883a 	mov	r4,sp
10107a2c:	0106f740 	call	10106f74 <__lo0bits>
10107a30:	d8c00017 	ldw	r3,0(sp)
10107a34:	04000044 	movi	r16,1
10107a38:	9c000415 	stw	r16,16(r19)
10107a3c:	98c00515 	stw	r3,20(r19)
10107a40:	10800804 	addi	r2,r2,32
10107a44:	883fe126 	beq	r17,zero,101079cc <__alt_data_end+0xfffe79cc>
10107a48:	00c00d44 	movi	r3,53
10107a4c:	8c7ef344 	addi	r17,r17,-1075
10107a50:	88a3883a 	add	r17,r17,r2
10107a54:	1885c83a 	sub	r2,r3,r2
10107a58:	d8c00817 	ldw	r3,32(sp)
10107a5c:	94400015 	stw	r17,0(r18)
10107a60:	18800015 	stw	r2,0(r3)
10107a64:	003fe706 	br	10107a04 <__alt_data_end+0xfffe7a04>
10107a68:	01000804 	movi	r4,32
10107a6c:	2089c83a 	sub	r4,r4,r2
10107a70:	1908983a 	sll	r4,r3,r4
10107a74:	d9400117 	ldw	r5,4(sp)
10107a78:	1886d83a 	srl	r3,r3,r2
10107a7c:	2148b03a 	or	r4,r4,r5
10107a80:	99000515 	stw	r4,20(r19)
10107a84:	d8c00015 	stw	r3,0(sp)
10107a88:	003fca06 	br	101079b4 <__alt_data_end+0xfffe79b4>

10107a8c <__ratio>:
10107a8c:	defff904 	addi	sp,sp,-28
10107a90:	dc400315 	stw	r17,12(sp)
10107a94:	2823883a 	mov	r17,r5
10107a98:	d9400104 	addi	r5,sp,4
10107a9c:	dfc00615 	stw	ra,24(sp)
10107aa0:	dcc00515 	stw	r19,20(sp)
10107aa4:	dc800415 	stw	r18,16(sp)
10107aa8:	2027883a 	mov	r19,r4
10107aac:	dc000215 	stw	r16,8(sp)
10107ab0:	01078340 	call	10107834 <__b2d>
10107ab4:	d80b883a 	mov	r5,sp
10107ab8:	8809883a 	mov	r4,r17
10107abc:	1025883a 	mov	r18,r2
10107ac0:	1821883a 	mov	r16,r3
10107ac4:	01078340 	call	10107834 <__b2d>
10107ac8:	8a000417 	ldw	r8,16(r17)
10107acc:	99000417 	ldw	r4,16(r19)
10107ad0:	d9400117 	ldw	r5,4(sp)
10107ad4:	2209c83a 	sub	r4,r4,r8
10107ad8:	2010917a 	slli	r8,r4,5
10107adc:	d9000017 	ldw	r4,0(sp)
10107ae0:	2909c83a 	sub	r4,r5,r4
10107ae4:	4109883a 	add	r4,r8,r4
10107ae8:	01000e0e 	bge	zero,r4,10107b24 <__ratio+0x98>
10107aec:	2008953a 	slli	r4,r4,20
10107af0:	2421883a 	add	r16,r4,r16
10107af4:	100d883a 	mov	r6,r2
10107af8:	180f883a 	mov	r7,r3
10107afc:	9009883a 	mov	r4,r18
10107b00:	800b883a 	mov	r5,r16
10107b04:	010b99c0 	call	1010b99c <__divdf3>
10107b08:	dfc00617 	ldw	ra,24(sp)
10107b0c:	dcc00517 	ldw	r19,20(sp)
10107b10:	dc800417 	ldw	r18,16(sp)
10107b14:	dc400317 	ldw	r17,12(sp)
10107b18:	dc000217 	ldw	r16,8(sp)
10107b1c:	dec00704 	addi	sp,sp,28
10107b20:	f800283a 	ret
10107b24:	2008953a 	slli	r4,r4,20
10107b28:	1907c83a 	sub	r3,r3,r4
10107b2c:	003ff106 	br	10107af4 <__alt_data_end+0xfffe7af4>

10107b30 <_mprec_log10>:
10107b30:	defffe04 	addi	sp,sp,-8
10107b34:	dc000015 	stw	r16,0(sp)
10107b38:	dfc00115 	stw	ra,4(sp)
10107b3c:	008005c4 	movi	r2,23
10107b40:	2021883a 	mov	r16,r4
10107b44:	11000d0e 	bge	r2,r4,10107b7c <_mprec_log10+0x4c>
10107b48:	0005883a 	mov	r2,zero
10107b4c:	00cffc34 	movhi	r3,16368
10107b50:	843fffc4 	addi	r16,r16,-1
10107b54:	000d883a 	mov	r6,zero
10107b58:	01d00934 	movhi	r7,16420
10107b5c:	1009883a 	mov	r4,r2
10107b60:	180b883a 	mov	r5,r3
10107b64:	010c5c40 	call	1010c5c4 <__muldf3>
10107b68:	803ff91e 	bne	r16,zero,10107b50 <__alt_data_end+0xfffe7b50>
10107b6c:	dfc00117 	ldw	ra,4(sp)
10107b70:	dc000017 	ldw	r16,0(sp)
10107b74:	dec00204 	addi	sp,sp,8
10107b78:	f800283a 	ret
10107b7c:	202090fa 	slli	r16,r4,3
10107b80:	00840474 	movhi	r2,4113
10107b84:	10809004 	addi	r2,r2,576
10107b88:	1421883a 	add	r16,r2,r16
10107b8c:	80800017 	ldw	r2,0(r16)
10107b90:	80c00117 	ldw	r3,4(r16)
10107b94:	dfc00117 	ldw	ra,4(sp)
10107b98:	dc000017 	ldw	r16,0(sp)
10107b9c:	dec00204 	addi	sp,sp,8
10107ba0:	f800283a 	ret

10107ba4 <__copybits>:
10107ba4:	297fffc4 	addi	r5,r5,-1
10107ba8:	280fd17a 	srai	r7,r5,5
10107bac:	30c00417 	ldw	r3,16(r6)
10107bb0:	30800504 	addi	r2,r6,20
10107bb4:	39c00044 	addi	r7,r7,1
10107bb8:	18c7883a 	add	r3,r3,r3
10107bbc:	39cf883a 	add	r7,r7,r7
10107bc0:	18c7883a 	add	r3,r3,r3
10107bc4:	39cf883a 	add	r7,r7,r7
10107bc8:	10c7883a 	add	r3,r2,r3
10107bcc:	21cf883a 	add	r7,r4,r7
10107bd0:	10c00d2e 	bgeu	r2,r3,10107c08 <__copybits+0x64>
10107bd4:	200b883a 	mov	r5,r4
10107bd8:	12000017 	ldw	r8,0(r2)
10107bdc:	29400104 	addi	r5,r5,4
10107be0:	10800104 	addi	r2,r2,4
10107be4:	2a3fff15 	stw	r8,-4(r5)
10107be8:	10fffb36 	bltu	r2,r3,10107bd8 <__alt_data_end+0xfffe7bd8>
10107bec:	1985c83a 	sub	r2,r3,r6
10107bf0:	10bffac4 	addi	r2,r2,-21
10107bf4:	1004d0ba 	srli	r2,r2,2
10107bf8:	10800044 	addi	r2,r2,1
10107bfc:	1085883a 	add	r2,r2,r2
10107c00:	1085883a 	add	r2,r2,r2
10107c04:	2089883a 	add	r4,r4,r2
10107c08:	21c0032e 	bgeu	r4,r7,10107c18 <__copybits+0x74>
10107c0c:	20000015 	stw	zero,0(r4)
10107c10:	21000104 	addi	r4,r4,4
10107c14:	21fffd36 	bltu	r4,r7,10107c0c <__alt_data_end+0xfffe7c0c>
10107c18:	f800283a 	ret

10107c1c <__any_on>:
10107c1c:	20c00417 	ldw	r3,16(r4)
10107c20:	2805d17a 	srai	r2,r5,5
10107c24:	21000504 	addi	r4,r4,20
10107c28:	18800d0e 	bge	r3,r2,10107c60 <__any_on+0x44>
10107c2c:	18c7883a 	add	r3,r3,r3
10107c30:	18c7883a 	add	r3,r3,r3
10107c34:	20c7883a 	add	r3,r4,r3
10107c38:	20c0192e 	bgeu	r4,r3,10107ca0 <__any_on+0x84>
10107c3c:	18bfff17 	ldw	r2,-4(r3)
10107c40:	18ffff04 	addi	r3,r3,-4
10107c44:	1000041e 	bne	r2,zero,10107c58 <__any_on+0x3c>
10107c48:	20c0142e 	bgeu	r4,r3,10107c9c <__any_on+0x80>
10107c4c:	18ffff04 	addi	r3,r3,-4
10107c50:	19400017 	ldw	r5,0(r3)
10107c54:	283ffc26 	beq	r5,zero,10107c48 <__alt_data_end+0xfffe7c48>
10107c58:	00800044 	movi	r2,1
10107c5c:	f800283a 	ret
10107c60:	10c00a0e 	bge	r2,r3,10107c8c <__any_on+0x70>
10107c64:	1085883a 	add	r2,r2,r2
10107c68:	1085883a 	add	r2,r2,r2
10107c6c:	294007cc 	andi	r5,r5,31
10107c70:	2087883a 	add	r3,r4,r2
10107c74:	283ff026 	beq	r5,zero,10107c38 <__alt_data_end+0xfffe7c38>
10107c78:	19800017 	ldw	r6,0(r3)
10107c7c:	3144d83a 	srl	r2,r6,r5
10107c80:	114a983a 	sll	r5,r2,r5
10107c84:	317ff41e 	bne	r6,r5,10107c58 <__alt_data_end+0xfffe7c58>
10107c88:	003feb06 	br	10107c38 <__alt_data_end+0xfffe7c38>
10107c8c:	1085883a 	add	r2,r2,r2
10107c90:	1085883a 	add	r2,r2,r2
10107c94:	2087883a 	add	r3,r4,r2
10107c98:	003fe706 	br	10107c38 <__alt_data_end+0xfffe7c38>
10107c9c:	f800283a 	ret
10107ca0:	0005883a 	mov	r2,zero
10107ca4:	f800283a 	ret

10107ca8 <_realloc_r>:
10107ca8:	defff604 	addi	sp,sp,-40
10107cac:	dc800215 	stw	r18,8(sp)
10107cb0:	dfc00915 	stw	ra,36(sp)
10107cb4:	df000815 	stw	fp,32(sp)
10107cb8:	ddc00715 	stw	r23,28(sp)
10107cbc:	dd800615 	stw	r22,24(sp)
10107cc0:	dd400515 	stw	r21,20(sp)
10107cc4:	dd000415 	stw	r20,16(sp)
10107cc8:	dcc00315 	stw	r19,12(sp)
10107ccc:	dc400115 	stw	r17,4(sp)
10107cd0:	dc000015 	stw	r16,0(sp)
10107cd4:	3025883a 	mov	r18,r6
10107cd8:	2800b726 	beq	r5,zero,10107fb8 <_realloc_r+0x310>
10107cdc:	282b883a 	mov	r21,r5
10107ce0:	2029883a 	mov	r20,r4
10107ce4:	010df300 	call	1010df30 <__malloc_lock>
10107ce8:	a8bfff17 	ldw	r2,-4(r21)
10107cec:	043fff04 	movi	r16,-4
10107cf0:	90c002c4 	addi	r3,r18,11
10107cf4:	01000584 	movi	r4,22
10107cf8:	acfffe04 	addi	r19,r21,-8
10107cfc:	1420703a 	and	r16,r2,r16
10107d00:	20c0332e 	bgeu	r4,r3,10107dd0 <_realloc_r+0x128>
10107d04:	047ffe04 	movi	r17,-8
10107d08:	1c62703a 	and	r17,r3,r17
10107d0c:	8807883a 	mov	r3,r17
10107d10:	88005816 	blt	r17,zero,10107e74 <_realloc_r+0x1cc>
10107d14:	8c805736 	bltu	r17,r18,10107e74 <_realloc_r+0x1cc>
10107d18:	80c0300e 	bge	r16,r3,10107ddc <_realloc_r+0x134>
10107d1c:	07040474 	movhi	fp,4113
10107d20:	e7023e04 	addi	fp,fp,2296
10107d24:	e1c00217 	ldw	r7,8(fp)
10107d28:	9c09883a 	add	r4,r19,r16
10107d2c:	22000117 	ldw	r8,4(r4)
10107d30:	21c06326 	beq	r4,r7,10107ec0 <_realloc_r+0x218>
10107d34:	017fff84 	movi	r5,-2
10107d38:	414a703a 	and	r5,r8,r5
10107d3c:	214b883a 	add	r5,r4,r5
10107d40:	29800117 	ldw	r6,4(r5)
10107d44:	3180004c 	andi	r6,r6,1
10107d48:	30003f26 	beq	r6,zero,10107e48 <_realloc_r+0x1a0>
10107d4c:	1080004c 	andi	r2,r2,1
10107d50:	10008326 	beq	r2,zero,10107f60 <_realloc_r+0x2b8>
10107d54:	900b883a 	mov	r5,r18
10107d58:	a009883a 	mov	r4,r20
10107d5c:	010607c0 	call	1010607c <_malloc_r>
10107d60:	1025883a 	mov	r18,r2
10107d64:	10011e26 	beq	r2,zero,101081e0 <_realloc_r+0x538>
10107d68:	a93fff17 	ldw	r4,-4(r21)
10107d6c:	10fffe04 	addi	r3,r2,-8
10107d70:	00bfff84 	movi	r2,-2
10107d74:	2084703a 	and	r2,r4,r2
10107d78:	9885883a 	add	r2,r19,r2
10107d7c:	1880ee26 	beq	r3,r2,10108138 <_realloc_r+0x490>
10107d80:	81bfff04 	addi	r6,r16,-4
10107d84:	00800904 	movi	r2,36
10107d88:	1180b836 	bltu	r2,r6,1010806c <_realloc_r+0x3c4>
10107d8c:	00c004c4 	movi	r3,19
10107d90:	19809636 	bltu	r3,r6,10107fec <_realloc_r+0x344>
10107d94:	9005883a 	mov	r2,r18
10107d98:	a807883a 	mov	r3,r21
10107d9c:	19000017 	ldw	r4,0(r3)
10107da0:	11000015 	stw	r4,0(r2)
10107da4:	19000117 	ldw	r4,4(r3)
10107da8:	11000115 	stw	r4,4(r2)
10107dac:	18c00217 	ldw	r3,8(r3)
10107db0:	10c00215 	stw	r3,8(r2)
10107db4:	a80b883a 	mov	r5,r21
10107db8:	a009883a 	mov	r4,r20
10107dbc:	01054840 	call	10105484 <_free_r>
10107dc0:	a009883a 	mov	r4,r20
10107dc4:	010df540 	call	1010df54 <__malloc_unlock>
10107dc8:	9005883a 	mov	r2,r18
10107dcc:	00001206 	br	10107e18 <_realloc_r+0x170>
10107dd0:	00c00404 	movi	r3,16
10107dd4:	1823883a 	mov	r17,r3
10107dd8:	003fce06 	br	10107d14 <__alt_data_end+0xfffe7d14>
10107ddc:	a825883a 	mov	r18,r21
10107de0:	8445c83a 	sub	r2,r16,r17
10107de4:	00c003c4 	movi	r3,15
10107de8:	18802636 	bltu	r3,r2,10107e84 <_realloc_r+0x1dc>
10107dec:	99800117 	ldw	r6,4(r19)
10107df0:	9c07883a 	add	r3,r19,r16
10107df4:	3180004c 	andi	r6,r6,1
10107df8:	3420b03a 	or	r16,r6,r16
10107dfc:	9c000115 	stw	r16,4(r19)
10107e00:	18800117 	ldw	r2,4(r3)
10107e04:	10800054 	ori	r2,r2,1
10107e08:	18800115 	stw	r2,4(r3)
10107e0c:	a009883a 	mov	r4,r20
10107e10:	010df540 	call	1010df54 <__malloc_unlock>
10107e14:	9005883a 	mov	r2,r18
10107e18:	dfc00917 	ldw	ra,36(sp)
10107e1c:	df000817 	ldw	fp,32(sp)
10107e20:	ddc00717 	ldw	r23,28(sp)
10107e24:	dd800617 	ldw	r22,24(sp)
10107e28:	dd400517 	ldw	r21,20(sp)
10107e2c:	dd000417 	ldw	r20,16(sp)
10107e30:	dcc00317 	ldw	r19,12(sp)
10107e34:	dc800217 	ldw	r18,8(sp)
10107e38:	dc400117 	ldw	r17,4(sp)
10107e3c:	dc000017 	ldw	r16,0(sp)
10107e40:	dec00a04 	addi	sp,sp,40
10107e44:	f800283a 	ret
10107e48:	017fff04 	movi	r5,-4
10107e4c:	414a703a 	and	r5,r8,r5
10107e50:	814d883a 	add	r6,r16,r5
10107e54:	30c01f16 	blt	r6,r3,10107ed4 <_realloc_r+0x22c>
10107e58:	20800317 	ldw	r2,12(r4)
10107e5c:	20c00217 	ldw	r3,8(r4)
10107e60:	a825883a 	mov	r18,r21
10107e64:	3021883a 	mov	r16,r6
10107e68:	18800315 	stw	r2,12(r3)
10107e6c:	10c00215 	stw	r3,8(r2)
10107e70:	003fdb06 	br	10107de0 <__alt_data_end+0xfffe7de0>
10107e74:	00800304 	movi	r2,12
10107e78:	a0800015 	stw	r2,0(r20)
10107e7c:	0005883a 	mov	r2,zero
10107e80:	003fe506 	br	10107e18 <__alt_data_end+0xfffe7e18>
10107e84:	98c00117 	ldw	r3,4(r19)
10107e88:	9c4b883a 	add	r5,r19,r17
10107e8c:	11000054 	ori	r4,r2,1
10107e90:	18c0004c 	andi	r3,r3,1
10107e94:	1c62b03a 	or	r17,r3,r17
10107e98:	9c400115 	stw	r17,4(r19)
10107e9c:	29000115 	stw	r4,4(r5)
10107ea0:	2885883a 	add	r2,r5,r2
10107ea4:	10c00117 	ldw	r3,4(r2)
10107ea8:	29400204 	addi	r5,r5,8
10107eac:	a009883a 	mov	r4,r20
10107eb0:	18c00054 	ori	r3,r3,1
10107eb4:	10c00115 	stw	r3,4(r2)
10107eb8:	01054840 	call	10105484 <_free_r>
10107ebc:	003fd306 	br	10107e0c <__alt_data_end+0xfffe7e0c>
10107ec0:	017fff04 	movi	r5,-4
10107ec4:	414a703a 	and	r5,r8,r5
10107ec8:	89800404 	addi	r6,r17,16
10107ecc:	8151883a 	add	r8,r16,r5
10107ed0:	4180590e 	bge	r8,r6,10108038 <_realloc_r+0x390>
10107ed4:	1080004c 	andi	r2,r2,1
10107ed8:	103f9e1e 	bne	r2,zero,10107d54 <__alt_data_end+0xfffe7d54>
10107edc:	adbffe17 	ldw	r22,-8(r21)
10107ee0:	00bfff04 	movi	r2,-4
10107ee4:	9dadc83a 	sub	r22,r19,r22
10107ee8:	b1800117 	ldw	r6,4(r22)
10107eec:	3084703a 	and	r2,r6,r2
10107ef0:	20002026 	beq	r4,zero,10107f74 <_realloc_r+0x2cc>
10107ef4:	80af883a 	add	r23,r16,r2
10107ef8:	b96f883a 	add	r23,r23,r5
10107efc:	21c05f26 	beq	r4,r7,1010807c <_realloc_r+0x3d4>
10107f00:	b8c01c16 	blt	r23,r3,10107f74 <_realloc_r+0x2cc>
10107f04:	20800317 	ldw	r2,12(r4)
10107f08:	20c00217 	ldw	r3,8(r4)
10107f0c:	81bfff04 	addi	r6,r16,-4
10107f10:	01000904 	movi	r4,36
10107f14:	18800315 	stw	r2,12(r3)
10107f18:	10c00215 	stw	r3,8(r2)
10107f1c:	b0c00217 	ldw	r3,8(r22)
10107f20:	b0800317 	ldw	r2,12(r22)
10107f24:	b4800204 	addi	r18,r22,8
10107f28:	18800315 	stw	r2,12(r3)
10107f2c:	10c00215 	stw	r3,8(r2)
10107f30:	21801b36 	bltu	r4,r6,10107fa0 <_realloc_r+0x2f8>
10107f34:	008004c4 	movi	r2,19
10107f38:	1180352e 	bgeu	r2,r6,10108010 <_realloc_r+0x368>
10107f3c:	a8800017 	ldw	r2,0(r21)
10107f40:	b0800215 	stw	r2,8(r22)
10107f44:	a8800117 	ldw	r2,4(r21)
10107f48:	b0800315 	stw	r2,12(r22)
10107f4c:	008006c4 	movi	r2,27
10107f50:	11807f36 	bltu	r2,r6,10108150 <_realloc_r+0x4a8>
10107f54:	b0800404 	addi	r2,r22,16
10107f58:	ad400204 	addi	r21,r21,8
10107f5c:	00002d06 	br	10108014 <_realloc_r+0x36c>
10107f60:	adbffe17 	ldw	r22,-8(r21)
10107f64:	00bfff04 	movi	r2,-4
10107f68:	9dadc83a 	sub	r22,r19,r22
10107f6c:	b1000117 	ldw	r4,4(r22)
10107f70:	2084703a 	and	r2,r4,r2
10107f74:	b03f7726 	beq	r22,zero,10107d54 <__alt_data_end+0xfffe7d54>
10107f78:	80af883a 	add	r23,r16,r2
10107f7c:	b8ff7516 	blt	r23,r3,10107d54 <__alt_data_end+0xfffe7d54>
10107f80:	b0800317 	ldw	r2,12(r22)
10107f84:	b0c00217 	ldw	r3,8(r22)
10107f88:	81bfff04 	addi	r6,r16,-4
10107f8c:	01000904 	movi	r4,36
10107f90:	18800315 	stw	r2,12(r3)
10107f94:	10c00215 	stw	r3,8(r2)
10107f98:	b4800204 	addi	r18,r22,8
10107f9c:	21bfe52e 	bgeu	r4,r6,10107f34 <__alt_data_end+0xfffe7f34>
10107fa0:	a80b883a 	mov	r5,r21
10107fa4:	9009883a 	mov	r4,r18
10107fa8:	010696c0 	call	1010696c <memmove>
10107fac:	b821883a 	mov	r16,r23
10107fb0:	b027883a 	mov	r19,r22
10107fb4:	003f8a06 	br	10107de0 <__alt_data_end+0xfffe7de0>
10107fb8:	300b883a 	mov	r5,r6
10107fbc:	dfc00917 	ldw	ra,36(sp)
10107fc0:	df000817 	ldw	fp,32(sp)
10107fc4:	ddc00717 	ldw	r23,28(sp)
10107fc8:	dd800617 	ldw	r22,24(sp)
10107fcc:	dd400517 	ldw	r21,20(sp)
10107fd0:	dd000417 	ldw	r20,16(sp)
10107fd4:	dcc00317 	ldw	r19,12(sp)
10107fd8:	dc800217 	ldw	r18,8(sp)
10107fdc:	dc400117 	ldw	r17,4(sp)
10107fe0:	dc000017 	ldw	r16,0(sp)
10107fe4:	dec00a04 	addi	sp,sp,40
10107fe8:	010607c1 	jmpi	1010607c <_malloc_r>
10107fec:	a8c00017 	ldw	r3,0(r21)
10107ff0:	90c00015 	stw	r3,0(r18)
10107ff4:	a8c00117 	ldw	r3,4(r21)
10107ff8:	90c00115 	stw	r3,4(r18)
10107ffc:	00c006c4 	movi	r3,27
10108000:	19804536 	bltu	r3,r6,10108118 <_realloc_r+0x470>
10108004:	90800204 	addi	r2,r18,8
10108008:	a8c00204 	addi	r3,r21,8
1010800c:	003f6306 	br	10107d9c <__alt_data_end+0xfffe7d9c>
10108010:	9005883a 	mov	r2,r18
10108014:	a8c00017 	ldw	r3,0(r21)
10108018:	b821883a 	mov	r16,r23
1010801c:	b027883a 	mov	r19,r22
10108020:	10c00015 	stw	r3,0(r2)
10108024:	a8c00117 	ldw	r3,4(r21)
10108028:	10c00115 	stw	r3,4(r2)
1010802c:	a8c00217 	ldw	r3,8(r21)
10108030:	10c00215 	stw	r3,8(r2)
10108034:	003f6a06 	br	10107de0 <__alt_data_end+0xfffe7de0>
10108038:	9c67883a 	add	r19,r19,r17
1010803c:	4445c83a 	sub	r2,r8,r17
10108040:	e4c00215 	stw	r19,8(fp)
10108044:	10800054 	ori	r2,r2,1
10108048:	98800115 	stw	r2,4(r19)
1010804c:	a8bfff17 	ldw	r2,-4(r21)
10108050:	a009883a 	mov	r4,r20
10108054:	1080004c 	andi	r2,r2,1
10108058:	1462b03a 	or	r17,r2,r17
1010805c:	ac7fff15 	stw	r17,-4(r21)
10108060:	010df540 	call	1010df54 <__malloc_unlock>
10108064:	a805883a 	mov	r2,r21
10108068:	003f6b06 	br	10107e18 <__alt_data_end+0xfffe7e18>
1010806c:	a80b883a 	mov	r5,r21
10108070:	9009883a 	mov	r4,r18
10108074:	010696c0 	call	1010696c <memmove>
10108078:	003f4e06 	br	10107db4 <__alt_data_end+0xfffe7db4>
1010807c:	89000404 	addi	r4,r17,16
10108080:	b93fbc16 	blt	r23,r4,10107f74 <__alt_data_end+0xfffe7f74>
10108084:	b0800317 	ldw	r2,12(r22)
10108088:	b0c00217 	ldw	r3,8(r22)
1010808c:	81bfff04 	addi	r6,r16,-4
10108090:	01000904 	movi	r4,36
10108094:	18800315 	stw	r2,12(r3)
10108098:	10c00215 	stw	r3,8(r2)
1010809c:	b4800204 	addi	r18,r22,8
101080a0:	21804336 	bltu	r4,r6,101081b0 <_realloc_r+0x508>
101080a4:	008004c4 	movi	r2,19
101080a8:	11803f2e 	bgeu	r2,r6,101081a8 <_realloc_r+0x500>
101080ac:	a8800017 	ldw	r2,0(r21)
101080b0:	b0800215 	stw	r2,8(r22)
101080b4:	a8800117 	ldw	r2,4(r21)
101080b8:	b0800315 	stw	r2,12(r22)
101080bc:	008006c4 	movi	r2,27
101080c0:	11803f36 	bltu	r2,r6,101081c0 <_realloc_r+0x518>
101080c4:	b0800404 	addi	r2,r22,16
101080c8:	ad400204 	addi	r21,r21,8
101080cc:	a8c00017 	ldw	r3,0(r21)
101080d0:	10c00015 	stw	r3,0(r2)
101080d4:	a8c00117 	ldw	r3,4(r21)
101080d8:	10c00115 	stw	r3,4(r2)
101080dc:	a8c00217 	ldw	r3,8(r21)
101080e0:	10c00215 	stw	r3,8(r2)
101080e4:	b447883a 	add	r3,r22,r17
101080e8:	bc45c83a 	sub	r2,r23,r17
101080ec:	e0c00215 	stw	r3,8(fp)
101080f0:	10800054 	ori	r2,r2,1
101080f4:	18800115 	stw	r2,4(r3)
101080f8:	b0800117 	ldw	r2,4(r22)
101080fc:	a009883a 	mov	r4,r20
10108100:	1080004c 	andi	r2,r2,1
10108104:	1462b03a 	or	r17,r2,r17
10108108:	b4400115 	stw	r17,4(r22)
1010810c:	010df540 	call	1010df54 <__malloc_unlock>
10108110:	9005883a 	mov	r2,r18
10108114:	003f4006 	br	10107e18 <__alt_data_end+0xfffe7e18>
10108118:	a8c00217 	ldw	r3,8(r21)
1010811c:	90c00215 	stw	r3,8(r18)
10108120:	a8c00317 	ldw	r3,12(r21)
10108124:	90c00315 	stw	r3,12(r18)
10108128:	30801126 	beq	r6,r2,10108170 <_realloc_r+0x4c8>
1010812c:	90800404 	addi	r2,r18,16
10108130:	a8c00404 	addi	r3,r21,16
10108134:	003f1906 	br	10107d9c <__alt_data_end+0xfffe7d9c>
10108138:	90ffff17 	ldw	r3,-4(r18)
1010813c:	00bfff04 	movi	r2,-4
10108140:	a825883a 	mov	r18,r21
10108144:	1884703a 	and	r2,r3,r2
10108148:	80a1883a 	add	r16,r16,r2
1010814c:	003f2406 	br	10107de0 <__alt_data_end+0xfffe7de0>
10108150:	a8800217 	ldw	r2,8(r21)
10108154:	b0800415 	stw	r2,16(r22)
10108158:	a8800317 	ldw	r2,12(r21)
1010815c:	b0800515 	stw	r2,20(r22)
10108160:	31000a26 	beq	r6,r4,1010818c <_realloc_r+0x4e4>
10108164:	b0800604 	addi	r2,r22,24
10108168:	ad400404 	addi	r21,r21,16
1010816c:	003fa906 	br	10108014 <__alt_data_end+0xfffe8014>
10108170:	a9000417 	ldw	r4,16(r21)
10108174:	90800604 	addi	r2,r18,24
10108178:	a8c00604 	addi	r3,r21,24
1010817c:	91000415 	stw	r4,16(r18)
10108180:	a9000517 	ldw	r4,20(r21)
10108184:	91000515 	stw	r4,20(r18)
10108188:	003f0406 	br	10107d9c <__alt_data_end+0xfffe7d9c>
1010818c:	a8c00417 	ldw	r3,16(r21)
10108190:	ad400604 	addi	r21,r21,24
10108194:	b0800804 	addi	r2,r22,32
10108198:	b0c00615 	stw	r3,24(r22)
1010819c:	a8ffff17 	ldw	r3,-4(r21)
101081a0:	b0c00715 	stw	r3,28(r22)
101081a4:	003f9b06 	br	10108014 <__alt_data_end+0xfffe8014>
101081a8:	9005883a 	mov	r2,r18
101081ac:	003fc706 	br	101080cc <__alt_data_end+0xfffe80cc>
101081b0:	a80b883a 	mov	r5,r21
101081b4:	9009883a 	mov	r4,r18
101081b8:	010696c0 	call	1010696c <memmove>
101081bc:	003fc906 	br	101080e4 <__alt_data_end+0xfffe80e4>
101081c0:	a8800217 	ldw	r2,8(r21)
101081c4:	b0800415 	stw	r2,16(r22)
101081c8:	a8800317 	ldw	r2,12(r21)
101081cc:	b0800515 	stw	r2,20(r22)
101081d0:	31000726 	beq	r6,r4,101081f0 <_realloc_r+0x548>
101081d4:	b0800604 	addi	r2,r22,24
101081d8:	ad400404 	addi	r21,r21,16
101081dc:	003fbb06 	br	101080cc <__alt_data_end+0xfffe80cc>
101081e0:	a009883a 	mov	r4,r20
101081e4:	010df540 	call	1010df54 <__malloc_unlock>
101081e8:	0005883a 	mov	r2,zero
101081ec:	003f0a06 	br	10107e18 <__alt_data_end+0xfffe7e18>
101081f0:	a8c00417 	ldw	r3,16(r21)
101081f4:	ad400604 	addi	r21,r21,24
101081f8:	b0800804 	addi	r2,r22,32
101081fc:	b0c00615 	stw	r3,24(r22)
10108200:	a8ffff17 	ldw	r3,-4(r21)
10108204:	b0c00715 	stw	r3,28(r22)
10108208:	003fb006 	br	101080cc <__alt_data_end+0xfffe80cc>

1010820c <__fpclassifyd>:
1010820c:	00a00034 	movhi	r2,32768
10108210:	10bfffc4 	addi	r2,r2,-1
10108214:	2884703a 	and	r2,r5,r2
10108218:	10000726 	beq	r2,zero,10108238 <__fpclassifyd+0x2c>
1010821c:	00fffc34 	movhi	r3,65520
10108220:	019ff834 	movhi	r6,32736
10108224:	28c7883a 	add	r3,r5,r3
10108228:	31bfffc4 	addi	r6,r6,-1
1010822c:	30c00536 	bltu	r6,r3,10108244 <__fpclassifyd+0x38>
10108230:	00800104 	movi	r2,4
10108234:	f800283a 	ret
10108238:	2000021e 	bne	r4,zero,10108244 <__fpclassifyd+0x38>
1010823c:	00800084 	movi	r2,2
10108240:	f800283a 	ret
10108244:	00dffc34 	movhi	r3,32752
10108248:	019ff834 	movhi	r6,32736
1010824c:	28cb883a 	add	r5,r5,r3
10108250:	31bfffc4 	addi	r6,r6,-1
10108254:	317ff62e 	bgeu	r6,r5,10108230 <__alt_data_end+0xfffe8230>
10108258:	01400434 	movhi	r5,16
1010825c:	297fffc4 	addi	r5,r5,-1
10108260:	28800236 	bltu	r5,r2,1010826c <__fpclassifyd+0x60>
10108264:	008000c4 	movi	r2,3
10108268:	f800283a 	ret
1010826c:	10c00226 	beq	r2,r3,10108278 <__fpclassifyd+0x6c>
10108270:	0005883a 	mov	r2,zero
10108274:	f800283a 	ret
10108278:	2005003a 	cmpeq	r2,r4,zero
1010827c:	f800283a 	ret

10108280 <_sbrk_r>:
10108280:	defffd04 	addi	sp,sp,-12
10108284:	dc000015 	stw	r16,0(sp)
10108288:	04040474 	movhi	r16,4113
1010828c:	dc400115 	stw	r17,4(sp)
10108290:	840e9304 	addi	r16,r16,14924
10108294:	2023883a 	mov	r17,r4
10108298:	2809883a 	mov	r4,r5
1010829c:	dfc00215 	stw	ra,8(sp)
101082a0:	80000015 	stw	zero,0(r16)
101082a4:	010e13c0 	call	1010e13c <sbrk>
101082a8:	00ffffc4 	movi	r3,-1
101082ac:	10c00526 	beq	r2,r3,101082c4 <_sbrk_r+0x44>
101082b0:	dfc00217 	ldw	ra,8(sp)
101082b4:	dc400117 	ldw	r17,4(sp)
101082b8:	dc000017 	ldw	r16,0(sp)
101082bc:	dec00304 	addi	sp,sp,12
101082c0:	f800283a 	ret
101082c4:	80c00017 	ldw	r3,0(r16)
101082c8:	183ff926 	beq	r3,zero,101082b0 <__alt_data_end+0xfffe82b0>
101082cc:	88c00015 	stw	r3,0(r17)
101082d0:	003ff706 	br	101082b0 <__alt_data_end+0xfffe82b0>

101082d4 <__sread>:
101082d4:	defffe04 	addi	sp,sp,-8
101082d8:	dc000015 	stw	r16,0(sp)
101082dc:	2821883a 	mov	r16,r5
101082e0:	2940038f 	ldh	r5,14(r5)
101082e4:	dfc00115 	stw	ra,4(sp)
101082e8:	010a1900 	call	1010a190 <_read_r>
101082ec:	10000716 	blt	r2,zero,1010830c <__sread+0x38>
101082f0:	80c01417 	ldw	r3,80(r16)
101082f4:	1887883a 	add	r3,r3,r2
101082f8:	80c01415 	stw	r3,80(r16)
101082fc:	dfc00117 	ldw	ra,4(sp)
10108300:	dc000017 	ldw	r16,0(sp)
10108304:	dec00204 	addi	sp,sp,8
10108308:	f800283a 	ret
1010830c:	80c0030b 	ldhu	r3,12(r16)
10108310:	18fbffcc 	andi	r3,r3,61439
10108314:	80c0030d 	sth	r3,12(r16)
10108318:	dfc00117 	ldw	ra,4(sp)
1010831c:	dc000017 	ldw	r16,0(sp)
10108320:	dec00204 	addi	sp,sp,8
10108324:	f800283a 	ret

10108328 <__seofread>:
10108328:	0005883a 	mov	r2,zero
1010832c:	f800283a 	ret

10108330 <__swrite>:
10108330:	2880030b 	ldhu	r2,12(r5)
10108334:	defffb04 	addi	sp,sp,-20
10108338:	dcc00315 	stw	r19,12(sp)
1010833c:	dc800215 	stw	r18,8(sp)
10108340:	dc400115 	stw	r17,4(sp)
10108344:	dc000015 	stw	r16,0(sp)
10108348:	dfc00415 	stw	ra,16(sp)
1010834c:	10c0400c 	andi	r3,r2,256
10108350:	2821883a 	mov	r16,r5
10108354:	2023883a 	mov	r17,r4
10108358:	3025883a 	mov	r18,r6
1010835c:	3827883a 	mov	r19,r7
10108360:	18000526 	beq	r3,zero,10108378 <__swrite+0x48>
10108364:	2940038f 	ldh	r5,14(r5)
10108368:	01c00084 	movi	r7,2
1010836c:	000d883a 	mov	r6,zero
10108370:	010a1300 	call	1010a130 <_lseek_r>
10108374:	8080030b 	ldhu	r2,12(r16)
10108378:	8140038f 	ldh	r5,14(r16)
1010837c:	10bbffcc 	andi	r2,r2,61439
10108380:	980f883a 	mov	r7,r19
10108384:	900d883a 	mov	r6,r18
10108388:	8809883a 	mov	r4,r17
1010838c:	8080030d 	sth	r2,12(r16)
10108390:	dfc00417 	ldw	ra,16(sp)
10108394:	dcc00317 	ldw	r19,12(sp)
10108398:	dc800217 	ldw	r18,8(sp)
1010839c:	dc400117 	ldw	r17,4(sp)
101083a0:	dc000017 	ldw	r16,0(sp)
101083a4:	dec00504 	addi	sp,sp,20
101083a8:	0109be41 	jmpi	10109be4 <_write_r>

101083ac <__sseek>:
101083ac:	defffe04 	addi	sp,sp,-8
101083b0:	dc000015 	stw	r16,0(sp)
101083b4:	2821883a 	mov	r16,r5
101083b8:	2940038f 	ldh	r5,14(r5)
101083bc:	dfc00115 	stw	ra,4(sp)
101083c0:	010a1300 	call	1010a130 <_lseek_r>
101083c4:	00ffffc4 	movi	r3,-1
101083c8:	10c00826 	beq	r2,r3,101083ec <__sseek+0x40>
101083cc:	80c0030b 	ldhu	r3,12(r16)
101083d0:	80801415 	stw	r2,80(r16)
101083d4:	18c40014 	ori	r3,r3,4096
101083d8:	80c0030d 	sth	r3,12(r16)
101083dc:	dfc00117 	ldw	ra,4(sp)
101083e0:	dc000017 	ldw	r16,0(sp)
101083e4:	dec00204 	addi	sp,sp,8
101083e8:	f800283a 	ret
101083ec:	80c0030b 	ldhu	r3,12(r16)
101083f0:	18fbffcc 	andi	r3,r3,61439
101083f4:	80c0030d 	sth	r3,12(r16)
101083f8:	dfc00117 	ldw	ra,4(sp)
101083fc:	dc000017 	ldw	r16,0(sp)
10108400:	dec00204 	addi	sp,sp,8
10108404:	f800283a 	ret

10108408 <__sclose>:
10108408:	2940038f 	ldh	r5,14(r5)
1010840c:	0109c441 	jmpi	10109c44 <_close_r>

10108410 <strcmp>:
10108410:	2144b03a 	or	r2,r4,r5
10108414:	108000cc 	andi	r2,r2,3
10108418:	1000171e 	bne	r2,zero,10108478 <strcmp+0x68>
1010841c:	20800017 	ldw	r2,0(r4)
10108420:	28c00017 	ldw	r3,0(r5)
10108424:	10c0141e 	bne	r2,r3,10108478 <strcmp+0x68>
10108428:	027fbff4 	movhi	r9,65279
1010842c:	4a7fbfc4 	addi	r9,r9,-257
10108430:	0086303a 	nor	r3,zero,r2
10108434:	02202074 	movhi	r8,32897
10108438:	1245883a 	add	r2,r2,r9
1010843c:	42202004 	addi	r8,r8,-32640
10108440:	10c4703a 	and	r2,r2,r3
10108444:	1204703a 	and	r2,r2,r8
10108448:	10000226 	beq	r2,zero,10108454 <strcmp+0x44>
1010844c:	00002306 	br	101084dc <strcmp+0xcc>
10108450:	1000221e 	bne	r2,zero,101084dc <strcmp+0xcc>
10108454:	21000104 	addi	r4,r4,4
10108458:	20c00017 	ldw	r3,0(r4)
1010845c:	29400104 	addi	r5,r5,4
10108460:	29800017 	ldw	r6,0(r5)
10108464:	1a4f883a 	add	r7,r3,r9
10108468:	00c4303a 	nor	r2,zero,r3
1010846c:	3884703a 	and	r2,r7,r2
10108470:	1204703a 	and	r2,r2,r8
10108474:	19bff626 	beq	r3,r6,10108450 <__alt_data_end+0xfffe8450>
10108478:	20800003 	ldbu	r2,0(r4)
1010847c:	10c03fcc 	andi	r3,r2,255
10108480:	18c0201c 	xori	r3,r3,128
10108484:	18ffe004 	addi	r3,r3,-128
10108488:	18000c26 	beq	r3,zero,101084bc <strcmp+0xac>
1010848c:	29800007 	ldb	r6,0(r5)
10108490:	19800326 	beq	r3,r6,101084a0 <strcmp+0x90>
10108494:	00001306 	br	101084e4 <strcmp+0xd4>
10108498:	29800007 	ldb	r6,0(r5)
1010849c:	11800b1e 	bne	r2,r6,101084cc <strcmp+0xbc>
101084a0:	21000044 	addi	r4,r4,1
101084a4:	20c00003 	ldbu	r3,0(r4)
101084a8:	29400044 	addi	r5,r5,1
101084ac:	18803fcc 	andi	r2,r3,255
101084b0:	1080201c 	xori	r2,r2,128
101084b4:	10bfe004 	addi	r2,r2,-128
101084b8:	103ff71e 	bne	r2,zero,10108498 <__alt_data_end+0xfffe8498>
101084bc:	0007883a 	mov	r3,zero
101084c0:	28800003 	ldbu	r2,0(r5)
101084c4:	1885c83a 	sub	r2,r3,r2
101084c8:	f800283a 	ret
101084cc:	28800003 	ldbu	r2,0(r5)
101084d0:	18c03fcc 	andi	r3,r3,255
101084d4:	1885c83a 	sub	r2,r3,r2
101084d8:	f800283a 	ret
101084dc:	0005883a 	mov	r2,zero
101084e0:	f800283a 	ret
101084e4:	10c03fcc 	andi	r3,r2,255
101084e8:	003ff506 	br	101084c0 <__alt_data_end+0xfffe84c0>

101084ec <__sprint_r.part.0>:
101084ec:	28801917 	ldw	r2,100(r5)
101084f0:	defff604 	addi	sp,sp,-40
101084f4:	dd400515 	stw	r21,20(sp)
101084f8:	dfc00915 	stw	ra,36(sp)
101084fc:	df000815 	stw	fp,32(sp)
10108500:	ddc00715 	stw	r23,28(sp)
10108504:	dd800615 	stw	r22,24(sp)
10108508:	dd000415 	stw	r20,16(sp)
1010850c:	dcc00315 	stw	r19,12(sp)
10108510:	dc800215 	stw	r18,8(sp)
10108514:	dc400115 	stw	r17,4(sp)
10108518:	dc000015 	stw	r16,0(sp)
1010851c:	1088000c 	andi	r2,r2,8192
10108520:	302b883a 	mov	r21,r6
10108524:	10002e26 	beq	r2,zero,101085e0 <__sprint_r.part.0+0xf4>
10108528:	30800217 	ldw	r2,8(r6)
1010852c:	35800017 	ldw	r22,0(r6)
10108530:	10002926 	beq	r2,zero,101085d8 <__sprint_r.part.0+0xec>
10108534:	2827883a 	mov	r19,r5
10108538:	2029883a 	mov	r20,r4
1010853c:	b5c00104 	addi	r23,r22,4
10108540:	04bfffc4 	movi	r18,-1
10108544:	bc400017 	ldw	r17,0(r23)
10108548:	b4000017 	ldw	r16,0(r22)
1010854c:	0039883a 	mov	fp,zero
10108550:	8822d0ba 	srli	r17,r17,2
10108554:	8800031e 	bne	r17,zero,10108564 <__sprint_r.part.0+0x78>
10108558:	00001806 	br	101085bc <__sprint_r.part.0+0xd0>
1010855c:	84000104 	addi	r16,r16,4
10108560:	8f001526 	beq	r17,fp,101085b8 <__sprint_r.part.0+0xcc>
10108564:	81400017 	ldw	r5,0(r16)
10108568:	980d883a 	mov	r6,r19
1010856c:	a009883a 	mov	r4,r20
10108570:	0109fdc0 	call	10109fdc <_fputwc_r>
10108574:	e7000044 	addi	fp,fp,1
10108578:	14bff81e 	bne	r2,r18,1010855c <__alt_data_end+0xfffe855c>
1010857c:	9005883a 	mov	r2,r18
10108580:	a8000215 	stw	zero,8(r21)
10108584:	a8000115 	stw	zero,4(r21)
10108588:	dfc00917 	ldw	ra,36(sp)
1010858c:	df000817 	ldw	fp,32(sp)
10108590:	ddc00717 	ldw	r23,28(sp)
10108594:	dd800617 	ldw	r22,24(sp)
10108598:	dd400517 	ldw	r21,20(sp)
1010859c:	dd000417 	ldw	r20,16(sp)
101085a0:	dcc00317 	ldw	r19,12(sp)
101085a4:	dc800217 	ldw	r18,8(sp)
101085a8:	dc400117 	ldw	r17,4(sp)
101085ac:	dc000017 	ldw	r16,0(sp)
101085b0:	dec00a04 	addi	sp,sp,40
101085b4:	f800283a 	ret
101085b8:	a8800217 	ldw	r2,8(r21)
101085bc:	8c63883a 	add	r17,r17,r17
101085c0:	8c63883a 	add	r17,r17,r17
101085c4:	1445c83a 	sub	r2,r2,r17
101085c8:	a8800215 	stw	r2,8(r21)
101085cc:	b5800204 	addi	r22,r22,8
101085d0:	bdc00204 	addi	r23,r23,8
101085d4:	103fdb1e 	bne	r2,zero,10108544 <__alt_data_end+0xfffe8544>
101085d8:	0005883a 	mov	r2,zero
101085dc:	003fe806 	br	10108580 <__alt_data_end+0xfffe8580>
101085e0:	01057940 	call	10105794 <__sfvwrite_r>
101085e4:	003fe606 	br	10108580 <__alt_data_end+0xfffe8580>

101085e8 <__sprint_r>:
101085e8:	30c00217 	ldw	r3,8(r6)
101085ec:	18000126 	beq	r3,zero,101085f4 <__sprint_r+0xc>
101085f0:	01084ec1 	jmpi	101084ec <__sprint_r.part.0>
101085f4:	30000115 	stw	zero,4(r6)
101085f8:	0005883a 	mov	r2,zero
101085fc:	f800283a 	ret

10108600 <___vfiprintf_internal_r>:
10108600:	deffca04 	addi	sp,sp,-216
10108604:	dd403115 	stw	r21,196(sp)
10108608:	dfc03515 	stw	ra,212(sp)
1010860c:	df003415 	stw	fp,208(sp)
10108610:	ddc03315 	stw	r23,204(sp)
10108614:	dd803215 	stw	r22,200(sp)
10108618:	dd003015 	stw	r20,192(sp)
1010861c:	dcc02f15 	stw	r19,188(sp)
10108620:	dc802e15 	stw	r18,184(sp)
10108624:	dc402d15 	stw	r17,180(sp)
10108628:	dc002c15 	stw	r16,176(sp)
1010862c:	d9002115 	stw	r4,132(sp)
10108630:	d9402015 	stw	r5,128(sp)
10108634:	d9c02215 	stw	r7,136(sp)
10108638:	302b883a 	mov	r21,r6
1010863c:	20000226 	beq	r4,zero,10108648 <___vfiprintf_internal_r+0x48>
10108640:	20800e17 	ldw	r2,56(r4)
10108644:	1000cf26 	beq	r2,zero,10108984 <___vfiprintf_internal_r+0x384>
10108648:	d8c02017 	ldw	r3,128(sp)
1010864c:	1880030b 	ldhu	r2,12(r3)
10108650:	10c8000c 	andi	r3,r2,8192
10108654:	1800071e 	bne	r3,zero,10108674 <___vfiprintf_internal_r+0x74>
10108658:	d9402017 	ldw	r5,128(sp)
1010865c:	00f7ffc4 	movi	r3,-8193
10108660:	10880014 	ori	r2,r2,8192
10108664:	29001917 	ldw	r4,100(r5)
10108668:	2880030d 	sth	r2,12(r5)
1010866c:	20c6703a 	and	r3,r4,r3
10108670:	28c01915 	stw	r3,100(r5)
10108674:	10c0020c 	andi	r3,r2,8
10108678:	1800a526 	beq	r3,zero,10108910 <___vfiprintf_internal_r+0x310>
1010867c:	d9002017 	ldw	r4,128(sp)
10108680:	20c00417 	ldw	r3,16(r4)
10108684:	1800a226 	beq	r3,zero,10108910 <___vfiprintf_internal_r+0x310>
10108688:	1080068c 	andi	r2,r2,26
1010868c:	00c00284 	movi	r3,10
10108690:	10c0a826 	beq	r2,r3,10108934 <___vfiprintf_internal_r+0x334>
10108694:	d9001a04 	addi	r4,sp,104
10108698:	d94019c4 	addi	r5,sp,103
1010869c:	04840474 	movhi	r18,4113
101086a0:	2145c83a 	sub	r2,r4,r5
101086a4:	9480c204 	addi	r18,r18,776
101086a8:	d9001e15 	stw	r4,120(sp)
101086ac:	d9401f15 	stw	r5,124(sp)
101086b0:	dec01a15 	stw	sp,104(sp)
101086b4:	d8001c15 	stw	zero,112(sp)
101086b8:	d8001b15 	stw	zero,108(sp)
101086bc:	d811883a 	mov	r8,sp
101086c0:	d8002615 	stw	zero,152(sp)
101086c4:	d8002415 	stw	zero,144(sp)
101086c8:	d8802815 	stw	r2,160(sp)
101086cc:	a82d883a 	mov	r22,r21
101086d0:	b0800007 	ldb	r2,0(r22)
101086d4:	10040d26 	beq	r2,zero,1010970c <___vfiprintf_internal_r+0x110c>
101086d8:	00c00944 	movi	r3,37
101086dc:	b029883a 	mov	r20,r22
101086e0:	10c0021e 	bne	r2,r3,101086ec <___vfiprintf_internal_r+0xec>
101086e4:	00001606 	br	10108740 <___vfiprintf_internal_r+0x140>
101086e8:	10c00326 	beq	r2,r3,101086f8 <___vfiprintf_internal_r+0xf8>
101086ec:	a5000044 	addi	r20,r20,1
101086f0:	a0800007 	ldb	r2,0(r20)
101086f4:	103ffc1e 	bne	r2,zero,101086e8 <__alt_data_end+0xfffe86e8>
101086f8:	a5a1c83a 	sub	r16,r20,r22
101086fc:	80001026 	beq	r16,zero,10108740 <___vfiprintf_internal_r+0x140>
10108700:	d8c01c17 	ldw	r3,112(sp)
10108704:	d8801b17 	ldw	r2,108(sp)
10108708:	45800015 	stw	r22,0(r8)
1010870c:	80c7883a 	add	r3,r16,r3
10108710:	10800044 	addi	r2,r2,1
10108714:	44000115 	stw	r16,4(r8)
10108718:	d8c01c15 	stw	r3,112(sp)
1010871c:	d8801b15 	stw	r2,108(sp)
10108720:	010001c4 	movi	r4,7
10108724:	2080750e 	bge	r4,r2,101088fc <___vfiprintf_internal_r+0x2fc>
10108728:	1803951e 	bne	r3,zero,10109580 <___vfiprintf_internal_r+0xf80>
1010872c:	d8c02417 	ldw	r3,144(sp)
10108730:	d8001b15 	stw	zero,108(sp)
10108734:	d811883a 	mov	r8,sp
10108738:	1c07883a 	add	r3,r3,r16
1010873c:	d8c02415 	stw	r3,144(sp)
10108740:	a0800007 	ldb	r2,0(r20)
10108744:	1002e026 	beq	r2,zero,101092c8 <___vfiprintf_internal_r+0xcc8>
10108748:	a5800044 	addi	r22,r20,1
1010874c:	a0c00047 	ldb	r3,1(r20)
10108750:	d8001d85 	stb	zero,118(sp)
10108754:	0027883a 	mov	r19,zero
10108758:	d8002305 	stb	zero,140(sp)
1010875c:	043fffc4 	movi	r16,-1
10108760:	d8002515 	stw	zero,148(sp)
10108764:	0023883a 	mov	r17,zero
10108768:	05001604 	movi	r20,88
1010876c:	05400244 	movi	r21,9
10108770:	402f883a 	mov	r23,r8
10108774:	b5800044 	addi	r22,r22,1
10108778:	18bff804 	addi	r2,r3,-32
1010877c:	a0827736 	bltu	r20,r2,1010915c <___vfiprintf_internal_r+0xb5c>
10108780:	100490ba 	slli	r2,r2,2
10108784:	01040474 	movhi	r4,4113
10108788:	2121e604 	addi	r4,r4,-30824
1010878c:	1105883a 	add	r2,r2,r4
10108790:	10800017 	ldw	r2,0(r2)
10108794:	1000683a 	jmp	r2
10108798:	10108e5c 	xori	zero,r2,16953
1010879c:	1010915c 	xori	zero,r2,16965
101087a0:	1010915c 	xori	zero,r2,16965
101087a4:	10108e78 	rdprs	zero,r2,16953
101087a8:	1010915c 	xori	zero,r2,16965
101087ac:	1010915c 	xori	zero,r2,16965
101087b0:	1010915c 	xori	zero,r2,16965
101087b4:	1010915c 	xori	zero,r2,16965
101087b8:	1010915c 	xori	zero,r2,16965
101087bc:	1010915c 	xori	zero,r2,16965
101087c0:	10109080 	call	11010908 <__alt_data_end+0xef0908>
101087c4:	101090a4 	muli	zero,r2,16962
101087c8:	1010915c 	xori	zero,r2,16965
101087cc:	1010899c 	xori	zero,r2,16934
101087d0:	101090b8 	rdprs	zero,r2,16962
101087d4:	1010915c 	xori	zero,r2,16965
101087d8:	10108e84 	addi	zero,r2,16954
101087dc:	10108e90 	cmplti	zero,r2,16954
101087e0:	10108e90 	cmplti	zero,r2,16954
101087e4:	10108e90 	cmplti	zero,r2,16954
101087e8:	10108e90 	cmplti	zero,r2,16954
101087ec:	10108e90 	cmplti	zero,r2,16954
101087f0:	10108e90 	cmplti	zero,r2,16954
101087f4:	10108e90 	cmplti	zero,r2,16954
101087f8:	10108e90 	cmplti	zero,r2,16954
101087fc:	10108e90 	cmplti	zero,r2,16954
10108800:	1010915c 	xori	zero,r2,16965
10108804:	1010915c 	xori	zero,r2,16965
10108808:	1010915c 	xori	zero,r2,16965
1010880c:	1010915c 	xori	zero,r2,16965
10108810:	1010915c 	xori	zero,r2,16965
10108814:	1010915c 	xori	zero,r2,16965
10108818:	1010915c 	xori	zero,r2,16965
1010881c:	1010915c 	xori	zero,r2,16965
10108820:	1010915c 	xori	zero,r2,16965
10108824:	1010915c 	xori	zero,r2,16965
10108828:	10108ed0 	cmplti	zero,r2,16955
1010882c:	1010915c 	xori	zero,r2,16965
10108830:	1010915c 	xori	zero,r2,16965
10108834:	1010915c 	xori	zero,r2,16965
10108838:	1010915c 	xori	zero,r2,16965
1010883c:	1010915c 	xori	zero,r2,16965
10108840:	1010915c 	xori	zero,r2,16965
10108844:	1010915c 	xori	zero,r2,16965
10108848:	1010915c 	xori	zero,r2,16965
1010884c:	1010915c 	xori	zero,r2,16965
10108850:	1010915c 	xori	zero,r2,16965
10108854:	10108f0c 	andi	zero,r2,16956
10108858:	1010915c 	xori	zero,r2,16965
1010885c:	1010915c 	xori	zero,r2,16965
10108860:	1010915c 	xori	zero,r2,16965
10108864:	1010915c 	xori	zero,r2,16965
10108868:	1010915c 	xori	zero,r2,16965
1010886c:	10108f68 	cmpgeui	zero,r2,16957
10108870:	1010915c 	xori	zero,r2,16965
10108874:	1010915c 	xori	zero,r2,16965
10108878:	10108fdc 	xori	zero,r2,16959
1010887c:	1010915c 	xori	zero,r2,16965
10108880:	1010915c 	xori	zero,r2,16965
10108884:	1010915c 	xori	zero,r2,16965
10108888:	1010915c 	xori	zero,r2,16965
1010888c:	1010915c 	xori	zero,r2,16965
10108890:	1010915c 	xori	zero,r2,16965
10108894:	1010915c 	xori	zero,r2,16965
10108898:	1010915c 	xori	zero,r2,16965
1010889c:	1010915c 	xori	zero,r2,16965
101088a0:	1010915c 	xori	zero,r2,16965
101088a4:	10108d84 	addi	zero,r2,16950
101088a8:	10108db4 	orhi	zero,r2,16950
101088ac:	1010915c 	xori	zero,r2,16965
101088b0:	1010915c 	xori	zero,r2,16965
101088b4:	1010915c 	xori	zero,r2,16965
101088b8:	10109104 	addi	zero,r2,16964
101088bc:	10108db4 	orhi	zero,r2,16950
101088c0:	1010915c 	xori	zero,r2,16965
101088c4:	1010915c 	xori	zero,r2,16965
101088c8:	10108c5c 	xori	zero,r2,16945
101088cc:	1010915c 	xori	zero,r2,16965
101088d0:	10108c70 	cmpltui	zero,r2,16945
101088d4:	10108ca8 	cmpgeui	zero,r2,16946
101088d8:	101089a8 	cmpgeui	zero,r2,16934
101088dc:	10108c50 	cmplti	zero,r2,16945
101088e0:	1010915c 	xori	zero,r2,16965
101088e4:	1010901c 	xori	zero,r2,16960
101088e8:	1010915c 	xori	zero,r2,16965
101088ec:	10109068 	cmpgeui	zero,r2,16961
101088f0:	1010915c 	xori	zero,r2,16965
101088f4:	1010915c 	xori	zero,r2,16965
101088f8:	10108d2c 	andhi	zero,r2,16948
101088fc:	42000204 	addi	r8,r8,8
10108900:	d8c02417 	ldw	r3,144(sp)
10108904:	1c07883a 	add	r3,r3,r16
10108908:	d8c02415 	stw	r3,144(sp)
1010890c:	003f8c06 	br	10108740 <__alt_data_end+0xfffe8740>
10108910:	d9402017 	ldw	r5,128(sp)
10108914:	d9002117 	ldw	r4,132(sp)
10108918:	01033040 	call	10103304 <__swsetup_r>
1010891c:	1003c11e 	bne	r2,zero,10109824 <___vfiprintf_internal_r+0x1224>
10108920:	d9402017 	ldw	r5,128(sp)
10108924:	00c00284 	movi	r3,10
10108928:	2880030b 	ldhu	r2,12(r5)
1010892c:	1080068c 	andi	r2,r2,26
10108930:	10ff581e 	bne	r2,r3,10108694 <__alt_data_end+0xfffe8694>
10108934:	d8c02017 	ldw	r3,128(sp)
10108938:	1880038f 	ldh	r2,14(r3)
1010893c:	103f5516 	blt	r2,zero,10108694 <__alt_data_end+0xfffe8694>
10108940:	d9c02217 	ldw	r7,136(sp)
10108944:	d9002117 	ldw	r4,132(sp)
10108948:	a80d883a 	mov	r6,r21
1010894c:	180b883a 	mov	r5,r3
10108950:	0109b280 	call	10109b28 <__sbprintf>
10108954:	dfc03517 	ldw	ra,212(sp)
10108958:	df003417 	ldw	fp,208(sp)
1010895c:	ddc03317 	ldw	r23,204(sp)
10108960:	dd803217 	ldw	r22,200(sp)
10108964:	dd403117 	ldw	r21,196(sp)
10108968:	dd003017 	ldw	r20,192(sp)
1010896c:	dcc02f17 	ldw	r19,188(sp)
10108970:	dc802e17 	ldw	r18,184(sp)
10108974:	dc402d17 	ldw	r17,180(sp)
10108978:	dc002c17 	ldw	r16,176(sp)
1010897c:	dec03604 	addi	sp,sp,216
10108980:	f800283a 	ret
10108984:	01053100 	call	10105310 <__sinit>
10108988:	003f2f06 	br	10108648 <__alt_data_end+0xfffe8648>
1010898c:	d8c02517 	ldw	r3,148(sp)
10108990:	d8802215 	stw	r2,136(sp)
10108994:	00c7c83a 	sub	r3,zero,r3
10108998:	d8c02515 	stw	r3,148(sp)
1010899c:	8c400114 	ori	r17,r17,4
101089a0:	b0c00007 	ldb	r3,0(r22)
101089a4:	003f7306 	br	10108774 <__alt_data_end+0xfffe8774>
101089a8:	00800c04 	movi	r2,48
101089ac:	d9402217 	ldw	r5,136(sp)
101089b0:	d8801d05 	stb	r2,116(sp)
101089b4:	00801e04 	movi	r2,120
101089b8:	d8801d45 	stb	r2,117(sp)
101089bc:	d8001d85 	stb	zero,118(sp)
101089c0:	b811883a 	mov	r8,r23
101089c4:	28c00104 	addi	r3,r5,4
101089c8:	2cc00017 	ldw	r19,0(r5)
101089cc:	0029883a 	mov	r20,zero
101089d0:	88800094 	ori	r2,r17,2
101089d4:	80032516 	blt	r16,zero,1010966c <___vfiprintf_internal_r+0x106c>
101089d8:	00bfdfc4 	movi	r2,-129
101089dc:	88a2703a 	and	r17,r17,r2
101089e0:	d8c02215 	stw	r3,136(sp)
101089e4:	8c400094 	ori	r17,r17,2
101089e8:	98032a1e 	bne	r19,zero,10109694 <___vfiprintf_internal_r+0x1094>
101089ec:	00840474 	movhi	r2,4113
101089f0:	10806104 	addi	r2,r2,388
101089f4:	d8802615 	stw	r2,152(sp)
101089f8:	002b883a 	mov	r21,zero
101089fc:	8001741e 	bne	r16,zero,10108fd0 <___vfiprintf_internal_r+0x9d0>
10108a00:	0021883a 	mov	r16,zero
10108a04:	0029883a 	mov	r20,zero
10108a08:	ddc01a04 	addi	r23,sp,104
10108a0c:	8027883a 	mov	r19,r16
10108a10:	8500010e 	bge	r16,r20,10108a18 <___vfiprintf_internal_r+0x418>
10108a14:	a027883a 	mov	r19,r20
10108a18:	ad403fcc 	andi	r21,r21,255
10108a1c:	ad40201c 	xori	r21,r21,128
10108a20:	ad7fe004 	addi	r21,r21,-128
10108a24:	a8000126 	beq	r21,zero,10108a2c <___vfiprintf_internal_r+0x42c>
10108a28:	9cc00044 	addi	r19,r19,1
10108a2c:	89c0008c 	andi	r7,r17,2
10108a30:	38000126 	beq	r7,zero,10108a38 <___vfiprintf_internal_r+0x438>
10108a34:	9cc00084 	addi	r19,r19,2
10108a38:	88c0210c 	andi	r3,r17,132
10108a3c:	1801dd1e 	bne	r3,zero,101091b4 <___vfiprintf_internal_r+0xbb4>
10108a40:	d9402517 	ldw	r5,148(sp)
10108a44:	2cebc83a 	sub	r21,r5,r19
10108a48:	0541da0e 	bge	zero,r21,101091b4 <___vfiprintf_internal_r+0xbb4>
10108a4c:	07000404 	movi	fp,16
10108a50:	d8801c17 	ldw	r2,112(sp)
10108a54:	e543be0e 	bge	fp,r21,10109950 <___vfiprintf_internal_r+0x1350>
10108a58:	01440474 	movhi	r5,4113
10108a5c:	2940c604 	addi	r5,r5,792
10108a60:	dc002715 	stw	r16,156(sp)
10108a64:	d9801b17 	ldw	r6,108(sp)
10108a68:	a821883a 	mov	r16,r21
10108a6c:	d9402315 	stw	r5,140(sp)
10108a70:	028001c4 	movi	r10,7
10108a74:	d9c02915 	stw	r7,164(sp)
10108a78:	182b883a 	mov	r21,r3
10108a7c:	00000506 	br	10108a94 <___vfiprintf_internal_r+0x494>
10108a80:	31000084 	addi	r4,r6,2
10108a84:	42000204 	addi	r8,r8,8
10108a88:	180d883a 	mov	r6,r3
10108a8c:	843ffc04 	addi	r16,r16,-16
10108a90:	e4000f0e 	bge	fp,r16,10108ad0 <___vfiprintf_internal_r+0x4d0>
10108a94:	01040474 	movhi	r4,4113
10108a98:	10800404 	addi	r2,r2,16
10108a9c:	30c00044 	addi	r3,r6,1
10108aa0:	2100c604 	addi	r4,r4,792
10108aa4:	41000015 	stw	r4,0(r8)
10108aa8:	47000115 	stw	fp,4(r8)
10108aac:	d8801c15 	stw	r2,112(sp)
10108ab0:	d8c01b15 	stw	r3,108(sp)
10108ab4:	50fff20e 	bge	r10,r3,10108a80 <__alt_data_end+0xfffe8a80>
10108ab8:	1001b21e 	bne	r2,zero,10109184 <___vfiprintf_internal_r+0xb84>
10108abc:	843ffc04 	addi	r16,r16,-16
10108ac0:	000d883a 	mov	r6,zero
10108ac4:	01000044 	movi	r4,1
10108ac8:	d811883a 	mov	r8,sp
10108acc:	e43ff116 	blt	fp,r16,10108a94 <__alt_data_end+0xfffe8a94>
10108ad0:	a807883a 	mov	r3,r21
10108ad4:	d9c02917 	ldw	r7,164(sp)
10108ad8:	802b883a 	mov	r21,r16
10108adc:	dc002717 	ldw	r16,156(sp)
10108ae0:	d9402317 	ldw	r5,140(sp)
10108ae4:	a885883a 	add	r2,r21,r2
10108ae8:	45400115 	stw	r21,4(r8)
10108aec:	41400015 	stw	r5,0(r8)
10108af0:	d8801c15 	stw	r2,112(sp)
10108af4:	d9001b15 	stw	r4,108(sp)
10108af8:	014001c4 	movi	r5,7
10108afc:	29026216 	blt	r5,r4,10109488 <___vfiprintf_internal_r+0xe88>
10108b00:	d9801d87 	ldb	r6,118(sp)
10108b04:	42000204 	addi	r8,r8,8
10108b08:	21400044 	addi	r5,r4,1
10108b0c:	3001ae1e 	bne	r6,zero,101091c8 <___vfiprintf_internal_r+0xbc8>
10108b10:	3801bb26 	beq	r7,zero,10109200 <___vfiprintf_internal_r+0xc00>
10108b14:	d9001d04 	addi	r4,sp,116
10108b18:	10800084 	addi	r2,r2,2
10108b1c:	41000015 	stw	r4,0(r8)
10108b20:	01000084 	movi	r4,2
10108b24:	41000115 	stw	r4,4(r8)
10108b28:	d8801c15 	stw	r2,112(sp)
10108b2c:	d9401b15 	stw	r5,108(sp)
10108b30:	010001c4 	movi	r4,7
10108b34:	2142680e 	bge	r4,r5,101094d8 <___vfiprintf_internal_r+0xed8>
10108b38:	1002b11e 	bne	r2,zero,10109600 <___vfiprintf_internal_r+0x1000>
10108b3c:	01802004 	movi	r6,128
10108b40:	01400044 	movi	r5,1
10108b44:	0009883a 	mov	r4,zero
10108b48:	d811883a 	mov	r8,sp
10108b4c:	1981ae1e 	bne	r3,r6,10109208 <___vfiprintf_internal_r+0xc08>
10108b50:	d8c02517 	ldw	r3,148(sp)
10108b54:	1cf9c83a 	sub	fp,r3,r19
10108b58:	0701ab0e 	bge	zero,fp,10109208 <___vfiprintf_internal_r+0xc08>
10108b5c:	05400404 	movi	r21,16
10108b60:	af03a90e 	bge	r21,fp,10109a08 <___vfiprintf_internal_r+0x1408>
10108b64:	01440474 	movhi	r5,4113
10108b68:	2940c204 	addi	r5,r5,776
10108b6c:	d9402315 	stw	r5,140(sp)
10108b70:	01c001c4 	movi	r7,7
10108b74:	00000506 	br	10108b8c <___vfiprintf_internal_r+0x58c>
10108b78:	21800084 	addi	r6,r4,2
10108b7c:	42000204 	addi	r8,r8,8
10108b80:	1809883a 	mov	r4,r3
10108b84:	e73ffc04 	addi	fp,fp,-16
10108b88:	af000d0e 	bge	r21,fp,10108bc0 <___vfiprintf_internal_r+0x5c0>
10108b8c:	10800404 	addi	r2,r2,16
10108b90:	20c00044 	addi	r3,r4,1
10108b94:	44800015 	stw	r18,0(r8)
10108b98:	45400115 	stw	r21,4(r8)
10108b9c:	d8801c15 	stw	r2,112(sp)
10108ba0:	d8c01b15 	stw	r3,108(sp)
10108ba4:	38fff40e 	bge	r7,r3,10108b78 <__alt_data_end+0xfffe8b78>
10108ba8:	10022b1e 	bne	r2,zero,10109458 <___vfiprintf_internal_r+0xe58>
10108bac:	e73ffc04 	addi	fp,fp,-16
10108bb0:	01800044 	movi	r6,1
10108bb4:	0009883a 	mov	r4,zero
10108bb8:	d811883a 	mov	r8,sp
10108bbc:	af3ff316 	blt	r21,fp,10108b8c <__alt_data_end+0xfffe8b8c>
10108bc0:	d8c02317 	ldw	r3,140(sp)
10108bc4:	1705883a 	add	r2,r2,fp
10108bc8:	47000115 	stw	fp,4(r8)
10108bcc:	40c00015 	stw	r3,0(r8)
10108bd0:	d8801c15 	stw	r2,112(sp)
10108bd4:	d9801b15 	stw	r6,108(sp)
10108bd8:	00c001c4 	movi	r3,7
10108bdc:	19829416 	blt	r3,r6,10109630 <___vfiprintf_internal_r+0x1030>
10108be0:	8521c83a 	sub	r16,r16,r20
10108be4:	42000204 	addi	r8,r8,8
10108be8:	31400044 	addi	r5,r6,1
10108bec:	3009883a 	mov	r4,r6
10108bf0:	04018716 	blt	zero,r16,10109210 <___vfiprintf_internal_r+0xc10>
10108bf4:	a085883a 	add	r2,r20,r2
10108bf8:	45c00015 	stw	r23,0(r8)
10108bfc:	45000115 	stw	r20,4(r8)
10108c00:	d8801c15 	stw	r2,112(sp)
10108c04:	d9401b15 	stw	r5,108(sp)
10108c08:	00c001c4 	movi	r3,7
10108c0c:	1941c20e 	bge	r3,r5,10109318 <___vfiprintf_internal_r+0xd18>
10108c10:	1002531e 	bne	r2,zero,10109560 <___vfiprintf_internal_r+0xf60>
10108c14:	d8001b15 	stw	zero,108(sp)
10108c18:	8c40010c 	andi	r17,r17,4
10108c1c:	88023226 	beq	r17,zero,101094e8 <___vfiprintf_internal_r+0xee8>
10108c20:	d9002517 	ldw	r4,148(sp)
10108c24:	24e3c83a 	sub	r17,r4,r19
10108c28:	04432916 	blt	zero,r17,101098d0 <___vfiprintf_internal_r+0x12d0>
10108c2c:	d8802517 	ldw	r2,148(sp)
10108c30:	14c0010e 	bge	r2,r19,10108c38 <___vfiprintf_internal_r+0x638>
10108c34:	9805883a 	mov	r2,r19
10108c38:	d8c02417 	ldw	r3,144(sp)
10108c3c:	1887883a 	add	r3,r3,r2
10108c40:	d8c02415 	stw	r3,144(sp)
10108c44:	d8001b15 	stw	zero,108(sp)
10108c48:	d811883a 	mov	r8,sp
10108c4c:	003ea006 	br	101086d0 <__alt_data_end+0xfffe86d0>
10108c50:	8c400814 	ori	r17,r17,32
10108c54:	b0c00007 	ldb	r3,0(r22)
10108c58:	003ec606 	br	10108774 <__alt_data_end+0xfffe8774>
10108c5c:	b0c00007 	ldb	r3,0(r22)
10108c60:	00801b04 	movi	r2,108
10108c64:	18832026 	beq	r3,r2,101098e8 <___vfiprintf_internal_r+0x12e8>
10108c68:	8c400414 	ori	r17,r17,16
10108c6c:	003ec106 	br	10108774 <__alt_data_end+0xfffe8774>
10108c70:	9cc03fcc 	andi	r19,r19,255
10108c74:	b811883a 	mov	r8,r23
10108c78:	9803981e 	bne	r19,zero,10109adc <___vfiprintf_internal_r+0x14dc>
10108c7c:	8880080c 	andi	r2,r17,32
10108c80:	1002be26 	beq	r2,zero,1010977c <___vfiprintf_internal_r+0x117c>
10108c84:	d9002217 	ldw	r4,136(sp)
10108c88:	d9402417 	ldw	r5,144(sp)
10108c8c:	20800017 	ldw	r2,0(r4)
10108c90:	2807d7fa 	srai	r3,r5,31
10108c94:	21000104 	addi	r4,r4,4
10108c98:	d9002215 	stw	r4,136(sp)
10108c9c:	11400015 	stw	r5,0(r2)
10108ca0:	10c00115 	stw	r3,4(r2)
10108ca4:	003e8a06 	br	101086d0 <__alt_data_end+0xfffe86d0>
10108ca8:	9cc03fcc 	andi	r19,r19,255
10108cac:	b811883a 	mov	r8,r23
10108cb0:	9803871e 	bne	r19,zero,10109ad0 <___vfiprintf_internal_r+0x14d0>
10108cb4:	8880080c 	andi	r2,r17,32
10108cb8:	10009a26 	beq	r2,zero,10108f24 <___vfiprintf_internal_r+0x924>
10108cbc:	d9002217 	ldw	r4,136(sp)
10108cc0:	d8001d85 	stb	zero,118(sp)
10108cc4:	20800204 	addi	r2,r4,8
10108cc8:	24c00017 	ldw	r19,0(r4)
10108ccc:	25000117 	ldw	r20,4(r4)
10108cd0:	8002a416 	blt	r16,zero,10109764 <___vfiprintf_internal_r+0x1164>
10108cd4:	013fdfc4 	movi	r4,-129
10108cd8:	9d06b03a 	or	r3,r19,r20
10108cdc:	d8802215 	stw	r2,136(sp)
10108ce0:	8922703a 	and	r17,r17,r4
10108ce4:	18009b26 	beq	r3,zero,10108f54 <___vfiprintf_internal_r+0x954>
10108ce8:	002b883a 	mov	r21,zero
10108cec:	ddc01a04 	addi	r23,sp,104
10108cf0:	9806d0fa 	srli	r3,r19,3
10108cf4:	a008977a 	slli	r4,r20,29
10108cf8:	a028d0fa 	srli	r20,r20,3
10108cfc:	9cc001cc 	andi	r19,r19,7
10108d00:	98800c04 	addi	r2,r19,48
10108d04:	bdffffc4 	addi	r23,r23,-1
10108d08:	20e6b03a 	or	r19,r4,r3
10108d0c:	b8800005 	stb	r2,0(r23)
10108d10:	9d06b03a 	or	r3,r19,r20
10108d14:	183ff61e 	bne	r3,zero,10108cf0 <__alt_data_end+0xfffe8cf0>
10108d18:	88c0004c 	andi	r3,r17,1
10108d1c:	18021f1e 	bne	r3,zero,1010959c <___vfiprintf_internal_r+0xf9c>
10108d20:	d9401e17 	ldw	r5,120(sp)
10108d24:	2de9c83a 	sub	r20,r5,r23
10108d28:	003f3806 	br	10108a0c <__alt_data_end+0xfffe8a0c>
10108d2c:	9cc03fcc 	andi	r19,r19,255
10108d30:	b811883a 	mov	r8,r23
10108d34:	98034f1e 	bne	r19,zero,10109a74 <___vfiprintf_internal_r+0x1474>
10108d38:	00840474 	movhi	r2,4113
10108d3c:	10806104 	addi	r2,r2,388
10108d40:	d8802615 	stw	r2,152(sp)
10108d44:	8880080c 	andi	r2,r17,32
10108d48:	1000ac26 	beq	r2,zero,10108ffc <___vfiprintf_internal_r+0x9fc>
10108d4c:	d9002217 	ldw	r4,136(sp)
10108d50:	24c00017 	ldw	r19,0(r4)
10108d54:	25000117 	ldw	r20,4(r4)
10108d58:	21000204 	addi	r4,r4,8
10108d5c:	d9002215 	stw	r4,136(sp)
10108d60:	8880004c 	andi	r2,r17,1
10108d64:	1001e726 	beq	r2,zero,10109504 <___vfiprintf_internal_r+0xf04>
10108d68:	9d04b03a 	or	r2,r19,r20
10108d6c:	10025c1e 	bne	r2,zero,101096e0 <___vfiprintf_internal_r+0x10e0>
10108d70:	d8001d85 	stb	zero,118(sp)
10108d74:	80024416 	blt	r16,zero,10109688 <___vfiprintf_internal_r+0x1088>
10108d78:	00bfdfc4 	movi	r2,-129
10108d7c:	88a2703a 	and	r17,r17,r2
10108d80:	003f1d06 	br	101089f8 <__alt_data_end+0xfffe89f8>
10108d84:	d8c02217 	ldw	r3,136(sp)
10108d88:	04c00044 	movi	r19,1
10108d8c:	b811883a 	mov	r8,r23
10108d90:	18800017 	ldw	r2,0(r3)
10108d94:	18c00104 	addi	r3,r3,4
10108d98:	d8001d85 	stb	zero,118(sp)
10108d9c:	d8801005 	stb	r2,64(sp)
10108da0:	d8c02215 	stw	r3,136(sp)
10108da4:	9829883a 	mov	r20,r19
10108da8:	ddc01004 	addi	r23,sp,64
10108dac:	0021883a 	mov	r16,zero
10108db0:	003f1e06 	br	10108a2c <__alt_data_end+0xfffe8a2c>
10108db4:	9cc03fcc 	andi	r19,r19,255
10108db8:	b811883a 	mov	r8,r23
10108dbc:	9803331e 	bne	r19,zero,10109a8c <___vfiprintf_internal_r+0x148c>
10108dc0:	8880080c 	andi	r2,r17,32
10108dc4:	10004826 	beq	r2,zero,10108ee8 <___vfiprintf_internal_r+0x8e8>
10108dc8:	d9002217 	ldw	r4,136(sp)
10108dcc:	20800117 	ldw	r2,4(r4)
10108dd0:	24c00017 	ldw	r19,0(r4)
10108dd4:	21000204 	addi	r4,r4,8
10108dd8:	d9002215 	stw	r4,136(sp)
10108ddc:	1029883a 	mov	r20,r2
10108de0:	10024c16 	blt	r2,zero,10109714 <___vfiprintf_internal_r+0x1114>
10108de4:	dd401d83 	ldbu	r21,118(sp)
10108de8:	80007116 	blt	r16,zero,10108fb0 <___vfiprintf_internal_r+0x9b0>
10108dec:	00ffdfc4 	movi	r3,-129
10108df0:	9d04b03a 	or	r2,r19,r20
10108df4:	88e2703a 	and	r17,r17,r3
10108df8:	1000d126 	beq	r2,zero,10109140 <___vfiprintf_internal_r+0xb40>
10108dfc:	a0023526 	beq	r20,zero,101096d4 <___vfiprintf_internal_r+0x10d4>
10108e00:	ddc01a04 	addi	r23,sp,104
10108e04:	4039883a 	mov	fp,r8
10108e08:	9809883a 	mov	r4,r19
10108e0c:	a00b883a 	mov	r5,r20
10108e10:	01800284 	movi	r6,10
10108e14:	000f883a 	mov	r7,zero
10108e18:	010ab2c0 	call	1010ab2c <__umoddi3>
10108e1c:	10800c04 	addi	r2,r2,48
10108e20:	bdffffc4 	addi	r23,r23,-1
10108e24:	9809883a 	mov	r4,r19
10108e28:	a00b883a 	mov	r5,r20
10108e2c:	b8800005 	stb	r2,0(r23)
10108e30:	01800284 	movi	r6,10
10108e34:	000f883a 	mov	r7,zero
10108e38:	010a5300 	call	1010a530 <__udivdi3>
10108e3c:	1027883a 	mov	r19,r2
10108e40:	10c4b03a 	or	r2,r2,r3
10108e44:	1829883a 	mov	r20,r3
10108e48:	103fef1e 	bne	r2,zero,10108e08 <__alt_data_end+0xfffe8e08>
10108e4c:	d9001e17 	ldw	r4,120(sp)
10108e50:	e011883a 	mov	r8,fp
10108e54:	25e9c83a 	sub	r20,r4,r23
10108e58:	003eec06 	br	10108a0c <__alt_data_end+0xfffe8a0c>
10108e5c:	d8802307 	ldb	r2,140(sp)
10108e60:	1002361e 	bne	r2,zero,1010973c <___vfiprintf_internal_r+0x113c>
10108e64:	00c00804 	movi	r3,32
10108e68:	d8c02305 	stb	r3,140(sp)
10108e6c:	04c00044 	movi	r19,1
10108e70:	b0c00007 	ldb	r3,0(r22)
10108e74:	003e3f06 	br	10108774 <__alt_data_end+0xfffe8774>
10108e78:	8c400054 	ori	r17,r17,1
10108e7c:	b0c00007 	ldb	r3,0(r22)
10108e80:	003e3c06 	br	10108774 <__alt_data_end+0xfffe8774>
10108e84:	8c402014 	ori	r17,r17,128
10108e88:	b0c00007 	ldb	r3,0(r22)
10108e8c:	003e3906 	br	10108774 <__alt_data_end+0xfffe8774>
10108e90:	dc002715 	stw	r16,156(sp)
10108e94:	d8002515 	stw	zero,148(sp)
10108e98:	1f3ff404 	addi	fp,r3,-48
10108e9c:	0009883a 	mov	r4,zero
10108ea0:	b021883a 	mov	r16,r22
10108ea4:	01400284 	movi	r5,10
10108ea8:	0100c080 	call	10100c08 <__mulsi3>
10108eac:	80c00007 	ldb	r3,0(r16)
10108eb0:	e089883a 	add	r4,fp,r2
10108eb4:	b5800044 	addi	r22,r22,1
10108eb8:	1f3ff404 	addi	fp,r3,-48
10108ebc:	b021883a 	mov	r16,r22
10108ec0:	af3ff82e 	bgeu	r21,fp,10108ea4 <__alt_data_end+0xfffe8ea4>
10108ec4:	d9002515 	stw	r4,148(sp)
10108ec8:	dc002717 	ldw	r16,156(sp)
10108ecc:	003e2a06 	br	10108778 <__alt_data_end+0xfffe8778>
10108ed0:	9cc03fcc 	andi	r19,r19,255
10108ed4:	b811883a 	mov	r8,r23
10108ed8:	9802e91e 	bne	r19,zero,10109a80 <___vfiprintf_internal_r+0x1480>
10108edc:	8c400414 	ori	r17,r17,16
10108ee0:	8880080c 	andi	r2,r17,32
10108ee4:	103fb81e 	bne	r2,zero,10108dc8 <__alt_data_end+0xfffe8dc8>
10108ee8:	8880040c 	andi	r2,r17,16
10108eec:	10022e26 	beq	r2,zero,101097a8 <___vfiprintf_internal_r+0x11a8>
10108ef0:	d9402217 	ldw	r5,136(sp)
10108ef4:	2cc00017 	ldw	r19,0(r5)
10108ef8:	29400104 	addi	r5,r5,4
10108efc:	d9402215 	stw	r5,136(sp)
10108f00:	9829d7fa 	srai	r20,r19,31
10108f04:	a005883a 	mov	r2,r20
10108f08:	003fb506 	br	10108de0 <__alt_data_end+0xfffe8de0>
10108f0c:	9cc03fcc 	andi	r19,r19,255
10108f10:	b811883a 	mov	r8,r23
10108f14:	9802fa1e 	bne	r19,zero,10109b00 <___vfiprintf_internal_r+0x1500>
10108f18:	8c400414 	ori	r17,r17,16
10108f1c:	8880080c 	andi	r2,r17,32
10108f20:	103f661e 	bne	r2,zero,10108cbc <__alt_data_end+0xfffe8cbc>
10108f24:	8880040c 	andi	r2,r17,16
10108f28:	10020626 	beq	r2,zero,10109744 <___vfiprintf_internal_r+0x1144>
10108f2c:	d9402217 	ldw	r5,136(sp)
10108f30:	d8001d85 	stb	zero,118(sp)
10108f34:	0029883a 	mov	r20,zero
10108f38:	28800104 	addi	r2,r5,4
10108f3c:	2cc00017 	ldw	r19,0(r5)
10108f40:	80020816 	blt	r16,zero,10109764 <___vfiprintf_internal_r+0x1164>
10108f44:	00ffdfc4 	movi	r3,-129
10108f48:	d8802215 	stw	r2,136(sp)
10108f4c:	88e2703a 	and	r17,r17,r3
10108f50:	983f651e 	bne	r19,zero,10108ce8 <__alt_data_end+0xfffe8ce8>
10108f54:	002b883a 	mov	r21,zero
10108f58:	8002cf26 	beq	r16,zero,10109a98 <___vfiprintf_internal_r+0x1498>
10108f5c:	0027883a 	mov	r19,zero
10108f60:	0029883a 	mov	r20,zero
10108f64:	003f6106 	br	10108cec <__alt_data_end+0xfffe8cec>
10108f68:	9cc03fcc 	andi	r19,r19,255
10108f6c:	b811883a 	mov	r8,r23
10108f70:	9802e01e 	bne	r19,zero,10109af4 <___vfiprintf_internal_r+0x14f4>
10108f74:	8c400414 	ori	r17,r17,16
10108f78:	8880080c 	andi	r2,r17,32
10108f7c:	1000641e 	bne	r2,zero,10109110 <___vfiprintf_internal_r+0xb10>
10108f80:	8880040c 	andi	r2,r17,16
10108f84:	1001c81e 	bne	r2,zero,101096a8 <___vfiprintf_internal_r+0x10a8>
10108f88:	8880100c 	andi	r2,r17,64
10108f8c:	d8001d85 	stb	zero,118(sp)
10108f90:	1002281e 	bne	r2,zero,10109834 <___vfiprintf_internal_r+0x1234>
10108f94:	d9002217 	ldw	r4,136(sp)
10108f98:	0029883a 	mov	r20,zero
10108f9c:	20800104 	addi	r2,r4,4
10108fa0:	24c00017 	ldw	r19,0(r4)
10108fa4:	8001c60e 	bge	r16,zero,101096c0 <___vfiprintf_internal_r+0x10c0>
10108fa8:	d8802215 	stw	r2,136(sp)
10108fac:	002b883a 	mov	r21,zero
10108fb0:	9d04b03a 	or	r2,r19,r20
10108fb4:	103f911e 	bne	r2,zero,10108dfc <__alt_data_end+0xfffe8dfc>
10108fb8:	00800044 	movi	r2,1
10108fbc:	10803fcc 	andi	r2,r2,255
10108fc0:	00c00044 	movi	r3,1
10108fc4:	10c05f26 	beq	r2,r3,10109144 <___vfiprintf_internal_r+0xb44>
10108fc8:	00c00084 	movi	r3,2
10108fcc:	10ffe31e 	bne	r2,r3,10108f5c <__alt_data_end+0xfffe8f5c>
10108fd0:	0027883a 	mov	r19,zero
10108fd4:	0029883a 	mov	r20,zero
10108fd8:	00015106 	br	10109520 <___vfiprintf_internal_r+0xf20>
10108fdc:	9cc03fcc 	andi	r19,r19,255
10108fe0:	b811883a 	mov	r8,r23
10108fe4:	9802c01e 	bne	r19,zero,10109ae8 <___vfiprintf_internal_r+0x14e8>
10108fe8:	01440474 	movhi	r5,4113
10108fec:	29405c04 	addi	r5,r5,368
10108ff0:	d9402615 	stw	r5,152(sp)
10108ff4:	8880080c 	andi	r2,r17,32
10108ff8:	103f541e 	bne	r2,zero,10108d4c <__alt_data_end+0xfffe8d4c>
10108ffc:	8880040c 	andi	r2,r17,16
10109000:	1001f226 	beq	r2,zero,101097cc <___vfiprintf_internal_r+0x11cc>
10109004:	d9402217 	ldw	r5,136(sp)
10109008:	0029883a 	mov	r20,zero
1010900c:	2cc00017 	ldw	r19,0(r5)
10109010:	29400104 	addi	r5,r5,4
10109014:	d9402215 	stw	r5,136(sp)
10109018:	003f5106 	br	10108d60 <__alt_data_end+0xfffe8d60>
1010901c:	d8c02217 	ldw	r3,136(sp)
10109020:	b811883a 	mov	r8,r23
10109024:	d8001d85 	stb	zero,118(sp)
10109028:	1dc00017 	ldw	r23,0(r3)
1010902c:	1f000104 	addi	fp,r3,4
10109030:	b8025926 	beq	r23,zero,10109998 <___vfiprintf_internal_r+0x1398>
10109034:	80023316 	blt	r16,zero,10109904 <___vfiprintf_internal_r+0x1304>
10109038:	800d883a 	mov	r6,r16
1010903c:	000b883a 	mov	r5,zero
10109040:	b809883a 	mov	r4,r23
10109044:	da002a15 	stw	r8,168(sp)
10109048:	01068880 	call	10106888 <memchr>
1010904c:	da002a17 	ldw	r8,168(sp)
10109050:	10026826 	beq	r2,zero,101099f4 <___vfiprintf_internal_r+0x13f4>
10109054:	15e9c83a 	sub	r20,r2,r23
10109058:	dd401d83 	ldbu	r21,118(sp)
1010905c:	df002215 	stw	fp,136(sp)
10109060:	0021883a 	mov	r16,zero
10109064:	003e6906 	br	10108a0c <__alt_data_end+0xfffe8a0c>
10109068:	9cc03fcc 	andi	r19,r19,255
1010906c:	b811883a 	mov	r8,r23
10109070:	983fc126 	beq	r19,zero,10108f78 <__alt_data_end+0xfffe8f78>
10109074:	d8c02303 	ldbu	r3,140(sp)
10109078:	d8c01d85 	stb	r3,118(sp)
1010907c:	003fbe06 	br	10108f78 <__alt_data_end+0xfffe8f78>
10109080:	d9002217 	ldw	r4,136(sp)
10109084:	d9402217 	ldw	r5,136(sp)
10109088:	21000017 	ldw	r4,0(r4)
1010908c:	28800104 	addi	r2,r5,4
10109090:	d9002515 	stw	r4,148(sp)
10109094:	203e3d16 	blt	r4,zero,1010898c <__alt_data_end+0xfffe898c>
10109098:	d8802215 	stw	r2,136(sp)
1010909c:	b0c00007 	ldb	r3,0(r22)
101090a0:	003db406 	br	10108774 <__alt_data_end+0xfffe8774>
101090a4:	00c00ac4 	movi	r3,43
101090a8:	d8c02305 	stb	r3,140(sp)
101090ac:	04c00044 	movi	r19,1
101090b0:	b0c00007 	ldb	r3,0(r22)
101090b4:	003daf06 	br	10108774 <__alt_data_end+0xfffe8774>
101090b8:	b0c00007 	ldb	r3,0(r22)
101090bc:	01000a84 	movi	r4,42
101090c0:	b4000044 	addi	r16,r22,1
101090c4:	19025e26 	beq	r3,r4,10109a40 <___vfiprintf_internal_r+0x1440>
101090c8:	1f3ff404 	addi	fp,r3,-48
101090cc:	0009883a 	mov	r4,zero
101090d0:	af025236 	bltu	r21,fp,10109a1c <___vfiprintf_internal_r+0x141c>
101090d4:	01400284 	movi	r5,10
101090d8:	0100c080 	call	10100c08 <__mulsi3>
101090dc:	80c00007 	ldb	r3,0(r16)
101090e0:	1709883a 	add	r4,r2,fp
101090e4:	85800044 	addi	r22,r16,1
101090e8:	1f3ff404 	addi	fp,r3,-48
101090ec:	b021883a 	mov	r16,r22
101090f0:	af3ff82e 	bgeu	r21,fp,101090d4 <__alt_data_end+0xfffe90d4>
101090f4:	2021883a 	mov	r16,r4
101090f8:	203d9f0e 	bge	r4,zero,10108778 <__alt_data_end+0xfffe8778>
101090fc:	043fffc4 	movi	r16,-1
10109100:	003d9d06 	br	10108778 <__alt_data_end+0xfffe8778>
10109104:	8c401014 	ori	r17,r17,64
10109108:	b0c00007 	ldb	r3,0(r22)
1010910c:	003d9906 	br	10108774 <__alt_data_end+0xfffe8774>
10109110:	d9002217 	ldw	r4,136(sp)
10109114:	d8001d85 	stb	zero,118(sp)
10109118:	20c00204 	addi	r3,r4,8
1010911c:	24c00017 	ldw	r19,0(r4)
10109120:	25000117 	ldw	r20,4(r4)
10109124:	8001e716 	blt	r16,zero,101098c4 <___vfiprintf_internal_r+0x12c4>
10109128:	013fdfc4 	movi	r4,-129
1010912c:	9d04b03a 	or	r2,r19,r20
10109130:	d8c02215 	stw	r3,136(sp)
10109134:	8922703a 	and	r17,r17,r4
10109138:	002b883a 	mov	r21,zero
1010913c:	103f2f1e 	bne	r2,zero,10108dfc <__alt_data_end+0xfffe8dfc>
10109140:	803e2f26 	beq	r16,zero,10108a00 <__alt_data_end+0xfffe8a00>
10109144:	0027883a 	mov	r19,zero
10109148:	9cc00c04 	addi	r19,r19,48
1010914c:	dcc019c5 	stb	r19,103(sp)
10109150:	dd002817 	ldw	r20,160(sp)
10109154:	ddc019c4 	addi	r23,sp,103
10109158:	003e2c06 	br	10108a0c <__alt_data_end+0xfffe8a0c>
1010915c:	9cc03fcc 	andi	r19,r19,255
10109160:	b811883a 	mov	r8,r23
10109164:	9802571e 	bne	r19,zero,10109ac4 <___vfiprintf_internal_r+0x14c4>
10109168:	18005726 	beq	r3,zero,101092c8 <___vfiprintf_internal_r+0xcc8>
1010916c:	04c00044 	movi	r19,1
10109170:	d8c01005 	stb	r3,64(sp)
10109174:	d8001d85 	stb	zero,118(sp)
10109178:	9829883a 	mov	r20,r19
1010917c:	ddc01004 	addi	r23,sp,64
10109180:	003f0a06 	br	10108dac <__alt_data_end+0xfffe8dac>
10109184:	d9402017 	ldw	r5,128(sp)
10109188:	d9002117 	ldw	r4,132(sp)
1010918c:	d9801a04 	addi	r6,sp,104
10109190:	da802a15 	stw	r10,168(sp)
10109194:	01084ec0 	call	101084ec <__sprint_r.part.0>
10109198:	da802a17 	ldw	r10,168(sp)
1010919c:	1000501e 	bne	r2,zero,101092e0 <___vfiprintf_internal_r+0xce0>
101091a0:	d9801b17 	ldw	r6,108(sp)
101091a4:	d8801c17 	ldw	r2,112(sp)
101091a8:	d811883a 	mov	r8,sp
101091ac:	31000044 	addi	r4,r6,1
101091b0:	003e3606 	br	10108a8c <__alt_data_end+0xfffe8a8c>
101091b4:	d9001b17 	ldw	r4,108(sp)
101091b8:	d8801c17 	ldw	r2,112(sp)
101091bc:	21400044 	addi	r5,r4,1
101091c0:	d9801d87 	ldb	r6,118(sp)
101091c4:	303e5226 	beq	r6,zero,10108b10 <__alt_data_end+0xfffe8b10>
101091c8:	01800044 	movi	r6,1
101091cc:	d9001d84 	addi	r4,sp,118
101091d0:	1185883a 	add	r2,r2,r6
101091d4:	41000015 	stw	r4,0(r8)
101091d8:	41800115 	stw	r6,4(r8)
101091dc:	d8801c15 	stw	r2,112(sp)
101091e0:	d9401b15 	stw	r5,108(sp)
101091e4:	010001c4 	movi	r4,7
101091e8:	2140b00e 	bge	r4,r5,101094ac <___vfiprintf_internal_r+0xeac>
101091ec:	1000f61e 	bne	r2,zero,101095c8 <___vfiprintf_internal_r+0xfc8>
101091f0:	3800b31e 	bne	r7,zero,101094c0 <___vfiprintf_internal_r+0xec0>
101091f4:	0009883a 	mov	r4,zero
101091f8:	300b883a 	mov	r5,r6
101091fc:	d811883a 	mov	r8,sp
10109200:	01802004 	movi	r6,128
10109204:	19be5226 	beq	r3,r6,10108b50 <__alt_data_end+0xfffe8b50>
10109208:	8521c83a 	sub	r16,r16,r20
1010920c:	043e790e 	bge	zero,r16,10108bf4 <__alt_data_end+0xfffe8bf4>
10109210:	05400404 	movi	r21,16
10109214:	ac01b00e 	bge	r21,r16,101098d8 <___vfiprintf_internal_r+0x12d8>
10109218:	01440474 	movhi	r5,4113
1010921c:	2940c204 	addi	r5,r5,776
10109220:	d9402315 	stw	r5,140(sp)
10109224:	070001c4 	movi	fp,7
10109228:	00000506 	br	10109240 <___vfiprintf_internal_r+0xc40>
1010922c:	21400084 	addi	r5,r4,2
10109230:	42000204 	addi	r8,r8,8
10109234:	1809883a 	mov	r4,r3
10109238:	843ffc04 	addi	r16,r16,-16
1010923c:	ac000d0e 	bge	r21,r16,10109274 <___vfiprintf_internal_r+0xc74>
10109240:	10800404 	addi	r2,r2,16
10109244:	20c00044 	addi	r3,r4,1
10109248:	44800015 	stw	r18,0(r8)
1010924c:	45400115 	stw	r21,4(r8)
10109250:	d8801c15 	stw	r2,112(sp)
10109254:	d8c01b15 	stw	r3,108(sp)
10109258:	e0fff40e 	bge	fp,r3,1010922c <__alt_data_end+0xfffe922c>
1010925c:	1000101e 	bne	r2,zero,101092a0 <___vfiprintf_internal_r+0xca0>
10109260:	843ffc04 	addi	r16,r16,-16
10109264:	01400044 	movi	r5,1
10109268:	0009883a 	mov	r4,zero
1010926c:	d811883a 	mov	r8,sp
10109270:	ac3ff316 	blt	r21,r16,10109240 <__alt_data_end+0xfffe9240>
10109274:	d8c02317 	ldw	r3,140(sp)
10109278:	1405883a 	add	r2,r2,r16
1010927c:	44000115 	stw	r16,4(r8)
10109280:	40c00015 	stw	r3,0(r8)
10109284:	d8801c15 	stw	r2,112(sp)
10109288:	d9401b15 	stw	r5,108(sp)
1010928c:	00c001c4 	movi	r3,7
10109290:	19401916 	blt	r3,r5,101092f8 <___vfiprintf_internal_r+0xcf8>
10109294:	42000204 	addi	r8,r8,8
10109298:	29400044 	addi	r5,r5,1
1010929c:	003e5506 	br	10108bf4 <__alt_data_end+0xfffe8bf4>
101092a0:	d9402017 	ldw	r5,128(sp)
101092a4:	d9002117 	ldw	r4,132(sp)
101092a8:	d9801a04 	addi	r6,sp,104
101092ac:	01084ec0 	call	101084ec <__sprint_r.part.0>
101092b0:	10000b1e 	bne	r2,zero,101092e0 <___vfiprintf_internal_r+0xce0>
101092b4:	d9001b17 	ldw	r4,108(sp)
101092b8:	d8801c17 	ldw	r2,112(sp)
101092bc:	d811883a 	mov	r8,sp
101092c0:	21400044 	addi	r5,r4,1
101092c4:	003fdc06 	br	10109238 <__alt_data_end+0xfffe9238>
101092c8:	d8801c17 	ldw	r2,112(sp)
101092cc:	10000426 	beq	r2,zero,101092e0 <___vfiprintf_internal_r+0xce0>
101092d0:	d9402017 	ldw	r5,128(sp)
101092d4:	d9002117 	ldw	r4,132(sp)
101092d8:	d9801a04 	addi	r6,sp,104
101092dc:	01084ec0 	call	101084ec <__sprint_r.part.0>
101092e0:	d9402017 	ldw	r5,128(sp)
101092e4:	2880030b 	ldhu	r2,12(r5)
101092e8:	1080100c 	andi	r2,r2,64
101092ec:	10014d1e 	bne	r2,zero,10109824 <___vfiprintf_internal_r+0x1224>
101092f0:	d8802417 	ldw	r2,144(sp)
101092f4:	003d9706 	br	10108954 <__alt_data_end+0xfffe8954>
101092f8:	1000d21e 	bne	r2,zero,10109644 <___vfiprintf_internal_r+0x1044>
101092fc:	00c00044 	movi	r3,1
10109300:	a005883a 	mov	r2,r20
10109304:	ddc00015 	stw	r23,0(sp)
10109308:	dd000115 	stw	r20,4(sp)
1010930c:	dd001c15 	stw	r20,112(sp)
10109310:	d8c01b15 	stw	r3,108(sp)
10109314:	d811883a 	mov	r8,sp
10109318:	42000204 	addi	r8,r8,8
1010931c:	8c40010c 	andi	r17,r17,4
10109320:	88004026 	beq	r17,zero,10109424 <___vfiprintf_internal_r+0xe24>
10109324:	d9002517 	ldw	r4,148(sp)
10109328:	24e3c83a 	sub	r17,r4,r19
1010932c:	04403d0e 	bge	zero,r17,10109424 <___vfiprintf_internal_r+0xe24>
10109330:	04000404 	movi	r16,16
10109334:	8441a90e 	bge	r16,r17,101099dc <___vfiprintf_internal_r+0x13dc>
10109338:	00c40474 	movhi	r3,4113
1010933c:	18c0c604 	addi	r3,r3,792
10109340:	d9001b17 	ldw	r4,108(sp)
10109344:	d8c02315 	stw	r3,140(sp)
10109348:	050001c4 	movi	r20,7
1010934c:	dd402117 	ldw	r21,132(sp)
10109350:	ddc02017 	ldw	r23,128(sp)
10109354:	00000506 	br	1010936c <___vfiprintf_internal_r+0xd6c>
10109358:	21400084 	addi	r5,r4,2
1010935c:	42000204 	addi	r8,r8,8
10109360:	1809883a 	mov	r4,r3
10109364:	8c7ffc04 	addi	r17,r17,-16
10109368:	84400f0e 	bge	r16,r17,101093a8 <___vfiprintf_internal_r+0xda8>
1010936c:	01440474 	movhi	r5,4113
10109370:	10800404 	addi	r2,r2,16
10109374:	20c00044 	addi	r3,r4,1
10109378:	2940c604 	addi	r5,r5,792
1010937c:	41400015 	stw	r5,0(r8)
10109380:	44000115 	stw	r16,4(r8)
10109384:	d8801c15 	stw	r2,112(sp)
10109388:	d8c01b15 	stw	r3,108(sp)
1010938c:	a0fff20e 	bge	r20,r3,10109358 <__alt_data_end+0xfffe9358>
10109390:	1000141e 	bne	r2,zero,101093e4 <___vfiprintf_internal_r+0xde4>
10109394:	8c7ffc04 	addi	r17,r17,-16
10109398:	01400044 	movi	r5,1
1010939c:	0009883a 	mov	r4,zero
101093a0:	d811883a 	mov	r8,sp
101093a4:	847ff116 	blt	r16,r17,1010936c <__alt_data_end+0xfffe936c>
101093a8:	d8c02317 	ldw	r3,140(sp)
101093ac:	1445883a 	add	r2,r2,r17
101093b0:	44400115 	stw	r17,4(r8)
101093b4:	40c00015 	stw	r3,0(r8)
101093b8:	d8801c15 	stw	r2,112(sp)
101093bc:	d9401b15 	stw	r5,108(sp)
101093c0:	00c001c4 	movi	r3,7
101093c4:	1940170e 	bge	r3,r5,10109424 <___vfiprintf_internal_r+0xe24>
101093c8:	1000101e 	bne	r2,zero,1010940c <___vfiprintf_internal_r+0xe0c>
101093cc:	d8802517 	ldw	r2,148(sp)
101093d0:	14c11616 	blt	r2,r19,1010982c <___vfiprintf_internal_r+0x122c>
101093d4:	d9002417 	ldw	r4,144(sp)
101093d8:	2089883a 	add	r4,r4,r2
101093dc:	d9002415 	stw	r4,144(sp)
101093e0:	003e1806 	br	10108c44 <__alt_data_end+0xfffe8c44>
101093e4:	d9801a04 	addi	r6,sp,104
101093e8:	b80b883a 	mov	r5,r23
101093ec:	a809883a 	mov	r4,r21
101093f0:	01084ec0 	call	101084ec <__sprint_r.part.0>
101093f4:	103fba1e 	bne	r2,zero,101092e0 <__alt_data_end+0xfffe92e0>
101093f8:	d9001b17 	ldw	r4,108(sp)
101093fc:	d8801c17 	ldw	r2,112(sp)
10109400:	d811883a 	mov	r8,sp
10109404:	21400044 	addi	r5,r4,1
10109408:	003fd606 	br	10109364 <__alt_data_end+0xfffe9364>
1010940c:	d9402017 	ldw	r5,128(sp)
10109410:	d9002117 	ldw	r4,132(sp)
10109414:	d9801a04 	addi	r6,sp,104
10109418:	01084ec0 	call	101084ec <__sprint_r.part.0>
1010941c:	103fb01e 	bne	r2,zero,101092e0 <__alt_data_end+0xfffe92e0>
10109420:	d8801c17 	ldw	r2,112(sp)
10109424:	d8c02517 	ldw	r3,148(sp)
10109428:	1cc0010e 	bge	r3,r19,10109430 <___vfiprintf_internal_r+0xe30>
1010942c:	9807883a 	mov	r3,r19
10109430:	d9002417 	ldw	r4,144(sp)
10109434:	20c9883a 	add	r4,r4,r3
10109438:	d9002415 	stw	r4,144(sp)
1010943c:	103e0126 	beq	r2,zero,10108c44 <__alt_data_end+0xfffe8c44>
10109440:	d9402017 	ldw	r5,128(sp)
10109444:	d9002117 	ldw	r4,132(sp)
10109448:	d9801a04 	addi	r6,sp,104
1010944c:	01084ec0 	call	101084ec <__sprint_r.part.0>
10109450:	103dfc26 	beq	r2,zero,10108c44 <__alt_data_end+0xfffe8c44>
10109454:	003fa206 	br	101092e0 <__alt_data_end+0xfffe92e0>
10109458:	d9402017 	ldw	r5,128(sp)
1010945c:	d9002117 	ldw	r4,132(sp)
10109460:	d9801a04 	addi	r6,sp,104
10109464:	d9c02b15 	stw	r7,172(sp)
10109468:	01084ec0 	call	101084ec <__sprint_r.part.0>
1010946c:	d9c02b17 	ldw	r7,172(sp)
10109470:	103f9b1e 	bne	r2,zero,101092e0 <__alt_data_end+0xfffe92e0>
10109474:	d9001b17 	ldw	r4,108(sp)
10109478:	d8801c17 	ldw	r2,112(sp)
1010947c:	d811883a 	mov	r8,sp
10109480:	21800044 	addi	r6,r4,1
10109484:	003dbf06 	br	10108b84 <__alt_data_end+0xfffe8b84>
10109488:	1000d81e 	bne	r2,zero,101097ec <___vfiprintf_internal_r+0x11ec>
1010948c:	d9001d87 	ldb	r4,118(sp)
10109490:	20000a26 	beq	r4,zero,101094bc <___vfiprintf_internal_r+0xebc>
10109494:	00800044 	movi	r2,1
10109498:	d9001d84 	addi	r4,sp,118
1010949c:	100b883a 	mov	r5,r2
101094a0:	d9000015 	stw	r4,0(sp)
101094a4:	d8800115 	stw	r2,4(sp)
101094a8:	d811883a 	mov	r8,sp
101094ac:	2809883a 	mov	r4,r5
101094b0:	42000204 	addi	r8,r8,8
101094b4:	29400044 	addi	r5,r5,1
101094b8:	003d9506 	br	10108b10 <__alt_data_end+0xfffe8b10>
101094bc:	3800fd26 	beq	r7,zero,101098b4 <___vfiprintf_internal_r+0x12b4>
101094c0:	00800084 	movi	r2,2
101094c4:	d9001d04 	addi	r4,sp,116
101094c8:	d9000015 	stw	r4,0(sp)
101094cc:	d8800115 	stw	r2,4(sp)
101094d0:	01400044 	movi	r5,1
101094d4:	d811883a 	mov	r8,sp
101094d8:	2809883a 	mov	r4,r5
101094dc:	42000204 	addi	r8,r8,8
101094e0:	29400044 	addi	r5,r5,1
101094e4:	003f4606 	br	10109200 <__alt_data_end+0xfffe9200>
101094e8:	d8802517 	ldw	r2,148(sp)
101094ec:	14c0010e 	bge	r2,r19,101094f4 <___vfiprintf_internal_r+0xef4>
101094f0:	9805883a 	mov	r2,r19
101094f4:	d9402417 	ldw	r5,144(sp)
101094f8:	288b883a 	add	r5,r5,r2
101094fc:	d9402415 	stw	r5,144(sp)
10109500:	003dd006 	br	10108c44 <__alt_data_end+0xfffe8c44>
10109504:	d8001d85 	stb	zero,118(sp)
10109508:	80005d16 	blt	r16,zero,10109680 <___vfiprintf_internal_r+0x1080>
1010950c:	00ffdfc4 	movi	r3,-129
10109510:	9d04b03a 	or	r2,r19,r20
10109514:	88e2703a 	and	r17,r17,r3
10109518:	103d3726 	beq	r2,zero,101089f8 <__alt_data_end+0xfffe89f8>
1010951c:	002b883a 	mov	r21,zero
10109520:	d9002617 	ldw	r4,152(sp)
10109524:	ddc01a04 	addi	r23,sp,104
10109528:	988003cc 	andi	r2,r19,15
1010952c:	a006973a 	slli	r3,r20,28
10109530:	2085883a 	add	r2,r4,r2
10109534:	9826d13a 	srli	r19,r19,4
10109538:	10800003 	ldbu	r2,0(r2)
1010953c:	a028d13a 	srli	r20,r20,4
10109540:	bdffffc4 	addi	r23,r23,-1
10109544:	1ce6b03a 	or	r19,r3,r19
10109548:	b8800005 	stb	r2,0(r23)
1010954c:	9d04b03a 	or	r2,r19,r20
10109550:	103ff51e 	bne	r2,zero,10109528 <__alt_data_end+0xfffe9528>
10109554:	d8801e17 	ldw	r2,120(sp)
10109558:	15e9c83a 	sub	r20,r2,r23
1010955c:	003d2b06 	br	10108a0c <__alt_data_end+0xfffe8a0c>
10109560:	d9402017 	ldw	r5,128(sp)
10109564:	d9002117 	ldw	r4,132(sp)
10109568:	d9801a04 	addi	r6,sp,104
1010956c:	01084ec0 	call	101084ec <__sprint_r.part.0>
10109570:	103f5b1e 	bne	r2,zero,101092e0 <__alt_data_end+0xfffe92e0>
10109574:	d8801c17 	ldw	r2,112(sp)
10109578:	d811883a 	mov	r8,sp
1010957c:	003f6706 	br	1010931c <__alt_data_end+0xfffe931c>
10109580:	d9402017 	ldw	r5,128(sp)
10109584:	d9002117 	ldw	r4,132(sp)
10109588:	d9801a04 	addi	r6,sp,104
1010958c:	01084ec0 	call	101084ec <__sprint_r.part.0>
10109590:	103f531e 	bne	r2,zero,101092e0 <__alt_data_end+0xfffe92e0>
10109594:	d811883a 	mov	r8,sp
10109598:	003cd906 	br	10108900 <__alt_data_end+0xfffe8900>
1010959c:	10803fcc 	andi	r2,r2,255
101095a0:	1080201c 	xori	r2,r2,128
101095a4:	10bfe004 	addi	r2,r2,-128
101095a8:	00c00c04 	movi	r3,48
101095ac:	10ffe926 	beq	r2,r3,10109554 <__alt_data_end+0xfffe9554>
101095b0:	b8ffffc5 	stb	r3,-1(r23)
101095b4:	d8c01e17 	ldw	r3,120(sp)
101095b8:	b8bfffc4 	addi	r2,r23,-1
101095bc:	102f883a 	mov	r23,r2
101095c0:	18a9c83a 	sub	r20,r3,r2
101095c4:	003d1106 	br	10108a0c <__alt_data_end+0xfffe8a0c>
101095c8:	d9402017 	ldw	r5,128(sp)
101095cc:	d9002117 	ldw	r4,132(sp)
101095d0:	d9801a04 	addi	r6,sp,104
101095d4:	d8c02a15 	stw	r3,168(sp)
101095d8:	d9c02b15 	stw	r7,172(sp)
101095dc:	01084ec0 	call	101084ec <__sprint_r.part.0>
101095e0:	d8c02a17 	ldw	r3,168(sp)
101095e4:	d9c02b17 	ldw	r7,172(sp)
101095e8:	103f3d1e 	bne	r2,zero,101092e0 <__alt_data_end+0xfffe92e0>
101095ec:	d9001b17 	ldw	r4,108(sp)
101095f0:	d8801c17 	ldw	r2,112(sp)
101095f4:	d811883a 	mov	r8,sp
101095f8:	21400044 	addi	r5,r4,1
101095fc:	003d4406 	br	10108b10 <__alt_data_end+0xfffe8b10>
10109600:	d9402017 	ldw	r5,128(sp)
10109604:	d9002117 	ldw	r4,132(sp)
10109608:	d9801a04 	addi	r6,sp,104
1010960c:	d8c02a15 	stw	r3,168(sp)
10109610:	01084ec0 	call	101084ec <__sprint_r.part.0>
10109614:	d8c02a17 	ldw	r3,168(sp)
10109618:	103f311e 	bne	r2,zero,101092e0 <__alt_data_end+0xfffe92e0>
1010961c:	d9001b17 	ldw	r4,108(sp)
10109620:	d8801c17 	ldw	r2,112(sp)
10109624:	d811883a 	mov	r8,sp
10109628:	21400044 	addi	r5,r4,1
1010962c:	003ef406 	br	10109200 <__alt_data_end+0xfffe9200>
10109630:	1000bd1e 	bne	r2,zero,10109928 <___vfiprintf_internal_r+0x1328>
10109634:	01400044 	movi	r5,1
10109638:	0009883a 	mov	r4,zero
1010963c:	d811883a 	mov	r8,sp
10109640:	003ef106 	br	10109208 <__alt_data_end+0xfffe9208>
10109644:	d9402017 	ldw	r5,128(sp)
10109648:	d9002117 	ldw	r4,132(sp)
1010964c:	d9801a04 	addi	r6,sp,104
10109650:	01084ec0 	call	101084ec <__sprint_r.part.0>
10109654:	103f221e 	bne	r2,zero,101092e0 <__alt_data_end+0xfffe92e0>
10109658:	d9401b17 	ldw	r5,108(sp)
1010965c:	d8801c17 	ldw	r2,112(sp)
10109660:	d811883a 	mov	r8,sp
10109664:	29400044 	addi	r5,r5,1
10109668:	003d6206 	br	10108bf4 <__alt_data_end+0xfffe8bf4>
1010966c:	01440474 	movhi	r5,4113
10109670:	29406104 	addi	r5,r5,388
10109674:	d9402615 	stw	r5,152(sp)
10109678:	d8c02215 	stw	r3,136(sp)
1010967c:	1023883a 	mov	r17,r2
10109680:	9d04b03a 	or	r2,r19,r20
10109684:	103fa51e 	bne	r2,zero,1010951c <__alt_data_end+0xfffe951c>
10109688:	002b883a 	mov	r21,zero
1010968c:	00800084 	movi	r2,2
10109690:	003e4a06 	br	10108fbc <__alt_data_end+0xfffe8fbc>
10109694:	01440474 	movhi	r5,4113
10109698:	29406104 	addi	r5,r5,388
1010969c:	002b883a 	mov	r21,zero
101096a0:	d9402615 	stw	r5,152(sp)
101096a4:	003f9e06 	br	10109520 <__alt_data_end+0xfffe9520>
101096a8:	d9402217 	ldw	r5,136(sp)
101096ac:	d8001d85 	stb	zero,118(sp)
101096b0:	0029883a 	mov	r20,zero
101096b4:	28800104 	addi	r2,r5,4
101096b8:	2cc00017 	ldw	r19,0(r5)
101096bc:	803e3a16 	blt	r16,zero,10108fa8 <__alt_data_end+0xfffe8fa8>
101096c0:	00ffdfc4 	movi	r3,-129
101096c4:	d8802215 	stw	r2,136(sp)
101096c8:	88e2703a 	and	r17,r17,r3
101096cc:	002b883a 	mov	r21,zero
101096d0:	983e9b26 	beq	r19,zero,10109140 <__alt_data_end+0xfffe9140>
101096d4:	00800244 	movi	r2,9
101096d8:	14fdc936 	bltu	r2,r19,10108e00 <__alt_data_end+0xfffe8e00>
101096dc:	003e9a06 	br	10109148 <__alt_data_end+0xfffe9148>
101096e0:	00800c04 	movi	r2,48
101096e4:	d8c01d45 	stb	r3,117(sp)
101096e8:	d8801d05 	stb	r2,116(sp)
101096ec:	d8001d85 	stb	zero,118(sp)
101096f0:	88c00094 	ori	r3,r17,2
101096f4:	80009c16 	blt	r16,zero,10109968 <___vfiprintf_internal_r+0x1368>
101096f8:	00bfdfc4 	movi	r2,-129
101096fc:	88a2703a 	and	r17,r17,r2
10109700:	8c400094 	ori	r17,r17,2
10109704:	002b883a 	mov	r21,zero
10109708:	003f8506 	br	10109520 <__alt_data_end+0xfffe9520>
1010970c:	b029883a 	mov	r20,r22
10109710:	003c0b06 	br	10108740 <__alt_data_end+0xfffe8740>
10109714:	04e7c83a 	sub	r19,zero,r19
10109718:	05400b44 	movi	r21,45
1010971c:	9804c03a 	cmpne	r2,r19,zero
10109720:	0529c83a 	sub	r20,zero,r20
10109724:	dd401d85 	stb	r21,118(sp)
10109728:	a0a9c83a 	sub	r20,r20,r2
1010972c:	80009716 	blt	r16,zero,1010998c <___vfiprintf_internal_r+0x138c>
10109730:	00bfdfc4 	movi	r2,-129
10109734:	88a2703a 	and	r17,r17,r2
10109738:	003db006 	br	10108dfc <__alt_data_end+0xfffe8dfc>
1010973c:	b0c00007 	ldb	r3,0(r22)
10109740:	003c0c06 	br	10108774 <__alt_data_end+0xfffe8774>
10109744:	8880100c 	andi	r2,r17,64
10109748:	d8001d85 	stb	zero,118(sp)
1010974c:	1000461e 	bne	r2,zero,10109868 <___vfiprintf_internal_r+0x1268>
10109750:	d9002217 	ldw	r4,136(sp)
10109754:	0029883a 	mov	r20,zero
10109758:	20800104 	addi	r2,r4,4
1010975c:	24c00017 	ldw	r19,0(r4)
10109760:	803df80e 	bge	r16,zero,10108f44 <__alt_data_end+0xfffe8f44>
10109764:	9d06b03a 	or	r3,r19,r20
10109768:	d8802215 	stw	r2,136(sp)
1010976c:	183d5e1e 	bne	r3,zero,10108ce8 <__alt_data_end+0xfffe8ce8>
10109770:	002b883a 	mov	r21,zero
10109774:	0005883a 	mov	r2,zero
10109778:	003e1006 	br	10108fbc <__alt_data_end+0xfffe8fbc>
1010977c:	8880040c 	andi	r2,r17,16
10109780:	1000321e 	bne	r2,zero,1010984c <___vfiprintf_internal_r+0x124c>
10109784:	8c40100c 	andi	r17,r17,64
10109788:	88008d26 	beq	r17,zero,101099c0 <___vfiprintf_internal_r+0x13c0>
1010978c:	d9402217 	ldw	r5,136(sp)
10109790:	d8c02417 	ldw	r3,144(sp)
10109794:	28800017 	ldw	r2,0(r5)
10109798:	29400104 	addi	r5,r5,4
1010979c:	d9402215 	stw	r5,136(sp)
101097a0:	10c0000d 	sth	r3,0(r2)
101097a4:	003bca06 	br	101086d0 <__alt_data_end+0xfffe86d0>
101097a8:	8880100c 	andi	r2,r17,64
101097ac:	10003a26 	beq	r2,zero,10109898 <___vfiprintf_internal_r+0x1298>
101097b0:	d8802217 	ldw	r2,136(sp)
101097b4:	14c0000f 	ldh	r19,0(r2)
101097b8:	10800104 	addi	r2,r2,4
101097bc:	d8802215 	stw	r2,136(sp)
101097c0:	9829d7fa 	srai	r20,r19,31
101097c4:	a005883a 	mov	r2,r20
101097c8:	003d8506 	br	10108de0 <__alt_data_end+0xfffe8de0>
101097cc:	8880100c 	andi	r2,r17,64
101097d0:	10002b26 	beq	r2,zero,10109880 <___vfiprintf_internal_r+0x1280>
101097d4:	d8802217 	ldw	r2,136(sp)
101097d8:	0029883a 	mov	r20,zero
101097dc:	14c0000b 	ldhu	r19,0(r2)
101097e0:	10800104 	addi	r2,r2,4
101097e4:	d8802215 	stw	r2,136(sp)
101097e8:	003d5d06 	br	10108d60 <__alt_data_end+0xfffe8d60>
101097ec:	d9402017 	ldw	r5,128(sp)
101097f0:	d9002117 	ldw	r4,132(sp)
101097f4:	d9801a04 	addi	r6,sp,104
101097f8:	d8c02a15 	stw	r3,168(sp)
101097fc:	d9c02b15 	stw	r7,172(sp)
10109800:	01084ec0 	call	101084ec <__sprint_r.part.0>
10109804:	d8c02a17 	ldw	r3,168(sp)
10109808:	d9c02b17 	ldw	r7,172(sp)
1010980c:	103eb41e 	bne	r2,zero,101092e0 <__alt_data_end+0xfffe92e0>
10109810:	d9001b17 	ldw	r4,108(sp)
10109814:	d8801c17 	ldw	r2,112(sp)
10109818:	d811883a 	mov	r8,sp
1010981c:	21400044 	addi	r5,r4,1
10109820:	003e6706 	br	101091c0 <__alt_data_end+0xfffe91c0>
10109824:	00bfffc4 	movi	r2,-1
10109828:	003c4a06 	br	10108954 <__alt_data_end+0xfffe8954>
1010982c:	9805883a 	mov	r2,r19
10109830:	003ee806 	br	101093d4 <__alt_data_end+0xfffe93d4>
10109834:	d8c02217 	ldw	r3,136(sp)
10109838:	0029883a 	mov	r20,zero
1010983c:	18800104 	addi	r2,r3,4
10109840:	1cc0000b 	ldhu	r19,0(r3)
10109844:	803f9e0e 	bge	r16,zero,101096c0 <__alt_data_end+0xfffe96c0>
10109848:	003dd706 	br	10108fa8 <__alt_data_end+0xfffe8fa8>
1010984c:	d8c02217 	ldw	r3,136(sp)
10109850:	d9002417 	ldw	r4,144(sp)
10109854:	18800017 	ldw	r2,0(r3)
10109858:	18c00104 	addi	r3,r3,4
1010985c:	d8c02215 	stw	r3,136(sp)
10109860:	11000015 	stw	r4,0(r2)
10109864:	003b9a06 	br	101086d0 <__alt_data_end+0xfffe86d0>
10109868:	d8c02217 	ldw	r3,136(sp)
1010986c:	0029883a 	mov	r20,zero
10109870:	18800104 	addi	r2,r3,4
10109874:	1cc0000b 	ldhu	r19,0(r3)
10109878:	803db20e 	bge	r16,zero,10108f44 <__alt_data_end+0xfffe8f44>
1010987c:	003fb906 	br	10109764 <__alt_data_end+0xfffe9764>
10109880:	d9002217 	ldw	r4,136(sp)
10109884:	0029883a 	mov	r20,zero
10109888:	24c00017 	ldw	r19,0(r4)
1010988c:	21000104 	addi	r4,r4,4
10109890:	d9002215 	stw	r4,136(sp)
10109894:	003d3206 	br	10108d60 <__alt_data_end+0xfffe8d60>
10109898:	d8c02217 	ldw	r3,136(sp)
1010989c:	1cc00017 	ldw	r19,0(r3)
101098a0:	18c00104 	addi	r3,r3,4
101098a4:	d8c02215 	stw	r3,136(sp)
101098a8:	9829d7fa 	srai	r20,r19,31
101098ac:	a005883a 	mov	r2,r20
101098b0:	003d4b06 	br	10108de0 <__alt_data_end+0xfffe8de0>
101098b4:	0009883a 	mov	r4,zero
101098b8:	01400044 	movi	r5,1
101098bc:	d811883a 	mov	r8,sp
101098c0:	003e4f06 	br	10109200 <__alt_data_end+0xfffe9200>
101098c4:	d8c02215 	stw	r3,136(sp)
101098c8:	002b883a 	mov	r21,zero
101098cc:	003db806 	br	10108fb0 <__alt_data_end+0xfffe8fb0>
101098d0:	d811883a 	mov	r8,sp
101098d4:	003e9606 	br	10109330 <__alt_data_end+0xfffe9330>
101098d8:	01040474 	movhi	r4,4113
101098dc:	2100c204 	addi	r4,r4,776
101098e0:	d9002315 	stw	r4,140(sp)
101098e4:	003e6306 	br	10109274 <__alt_data_end+0xfffe9274>
101098e8:	b0c00043 	ldbu	r3,1(r22)
101098ec:	8c400814 	ori	r17,r17,32
101098f0:	b5800044 	addi	r22,r22,1
101098f4:	18c03fcc 	andi	r3,r3,255
101098f8:	18c0201c 	xori	r3,r3,128
101098fc:	18ffe004 	addi	r3,r3,-128
10109900:	003b9c06 	br	10108774 <__alt_data_end+0xfffe8774>
10109904:	b809883a 	mov	r4,r23
10109908:	da002a15 	stw	r8,168(sp)
1010990c:	0100eb80 	call	10100eb8 <strlen>
10109910:	1029883a 	mov	r20,r2
10109914:	dd401d83 	ldbu	r21,118(sp)
10109918:	df002215 	stw	fp,136(sp)
1010991c:	0021883a 	mov	r16,zero
10109920:	da002a17 	ldw	r8,168(sp)
10109924:	003c3906 	br	10108a0c <__alt_data_end+0xfffe8a0c>
10109928:	d9402017 	ldw	r5,128(sp)
1010992c:	d9002117 	ldw	r4,132(sp)
10109930:	d9801a04 	addi	r6,sp,104
10109934:	01084ec0 	call	101084ec <__sprint_r.part.0>
10109938:	103e691e 	bne	r2,zero,101092e0 <__alt_data_end+0xfffe92e0>
1010993c:	d9001b17 	ldw	r4,108(sp)
10109940:	d8801c17 	ldw	r2,112(sp)
10109944:	d811883a 	mov	r8,sp
10109948:	21400044 	addi	r5,r4,1
1010994c:	003e2e06 	br	10109208 <__alt_data_end+0xfffe9208>
10109950:	01040474 	movhi	r4,4113
10109954:	2100c604 	addi	r4,r4,792
10109958:	d9002315 	stw	r4,140(sp)
1010995c:	d9001b17 	ldw	r4,108(sp)
10109960:	21000044 	addi	r4,r4,1
10109964:	003c5e06 	br	10108ae0 <__alt_data_end+0xfffe8ae0>
10109968:	002b883a 	mov	r21,zero
1010996c:	00800084 	movi	r2,2
10109970:	10803fcc 	andi	r2,r2,255
10109974:	01000044 	movi	r4,1
10109978:	11002b26 	beq	r2,r4,10109a28 <___vfiprintf_internal_r+0x1428>
1010997c:	01000084 	movi	r4,2
10109980:	11002b1e 	bne	r2,r4,10109a30 <___vfiprintf_internal_r+0x1430>
10109984:	1823883a 	mov	r17,r3
10109988:	003ee506 	br	10109520 <__alt_data_end+0xfffe9520>
1010998c:	8807883a 	mov	r3,r17
10109990:	00800044 	movi	r2,1
10109994:	003ff606 	br	10109970 <__alt_data_end+0xfffe9970>
10109998:	00800184 	movi	r2,6
1010999c:	1400012e 	bgeu	r2,r16,101099a4 <___vfiprintf_internal_r+0x13a4>
101099a0:	1021883a 	mov	r16,r2
101099a4:	8029883a 	mov	r20,r16
101099a8:	8027883a 	mov	r19,r16
101099ac:	80002216 	blt	r16,zero,10109a38 <___vfiprintf_internal_r+0x1438>
101099b0:	05c40474 	movhi	r23,4113
101099b4:	df002215 	stw	fp,136(sp)
101099b8:	bdc06604 	addi	r23,r23,408
101099bc:	003cfb06 	br	10108dac <__alt_data_end+0xfffe8dac>
101099c0:	d9002217 	ldw	r4,136(sp)
101099c4:	d9402417 	ldw	r5,144(sp)
101099c8:	20800017 	ldw	r2,0(r4)
101099cc:	21000104 	addi	r4,r4,4
101099d0:	d9002215 	stw	r4,136(sp)
101099d4:	11400015 	stw	r5,0(r2)
101099d8:	003b3d06 	br	101086d0 <__alt_data_end+0xfffe86d0>
101099dc:	01440474 	movhi	r5,4113
101099e0:	2940c604 	addi	r5,r5,792
101099e4:	d9402315 	stw	r5,140(sp)
101099e8:	d9401b17 	ldw	r5,108(sp)
101099ec:	29400044 	addi	r5,r5,1
101099f0:	003e6d06 	br	101093a8 <__alt_data_end+0xfffe93a8>
101099f4:	8029883a 	mov	r20,r16
101099f8:	dd401d83 	ldbu	r21,118(sp)
101099fc:	df002215 	stw	fp,136(sp)
10109a00:	0021883a 	mov	r16,zero
10109a04:	003c0106 	br	10108a0c <__alt_data_end+0xfffe8a0c>
10109a08:	00c40474 	movhi	r3,4113
10109a0c:	18c0c204 	addi	r3,r3,776
10109a10:	d8c02315 	stw	r3,140(sp)
10109a14:	280d883a 	mov	r6,r5
10109a18:	003c6906 	br	10108bc0 <__alt_data_end+0xfffe8bc0>
10109a1c:	802d883a 	mov	r22,r16
10109a20:	0021883a 	mov	r16,zero
10109a24:	003b5406 	br	10108778 <__alt_data_end+0xfffe8778>
10109a28:	1823883a 	mov	r17,r3
10109a2c:	003cf306 	br	10108dfc <__alt_data_end+0xfffe8dfc>
10109a30:	1823883a 	mov	r17,r3
10109a34:	003cad06 	br	10108cec <__alt_data_end+0xfffe8cec>
10109a38:	0027883a 	mov	r19,zero
10109a3c:	003fdc06 	br	101099b0 <__alt_data_end+0xfffe99b0>
10109a40:	d9402217 	ldw	r5,136(sp)
10109a44:	8005883a 	mov	r2,r16
10109a48:	b0c00043 	ldbu	r3,1(r22)
10109a4c:	2c000017 	ldw	r16,0(r5)
10109a50:	29000104 	addi	r4,r5,4
10109a54:	d9002215 	stw	r4,136(sp)
10109a58:	102d883a 	mov	r22,r2
10109a5c:	803fa50e 	bge	r16,zero,101098f4 <__alt_data_end+0xfffe98f4>
10109a60:	18c03fcc 	andi	r3,r3,255
10109a64:	18c0201c 	xori	r3,r3,128
10109a68:	043fffc4 	movi	r16,-1
10109a6c:	18ffe004 	addi	r3,r3,-128
10109a70:	003b4006 	br	10108774 <__alt_data_end+0xfffe8774>
10109a74:	d9402303 	ldbu	r5,140(sp)
10109a78:	d9401d85 	stb	r5,118(sp)
10109a7c:	003cae06 	br	10108d38 <__alt_data_end+0xfffe8d38>
10109a80:	d8c02303 	ldbu	r3,140(sp)
10109a84:	d8c01d85 	stb	r3,118(sp)
10109a88:	003d1406 	br	10108edc <__alt_data_end+0xfffe8edc>
10109a8c:	d8c02303 	ldbu	r3,140(sp)
10109a90:	d8c01d85 	stb	r3,118(sp)
10109a94:	003cca06 	br	10108dc0 <__alt_data_end+0xfffe8dc0>
10109a98:	8880004c 	andi	r2,r17,1
10109a9c:	002b883a 	mov	r21,zero
10109aa0:	10000526 	beq	r2,zero,10109ab8 <___vfiprintf_internal_r+0x14b8>
10109aa4:	00800c04 	movi	r2,48
10109aa8:	d88019c5 	stb	r2,103(sp)
10109aac:	dd002817 	ldw	r20,160(sp)
10109ab0:	ddc019c4 	addi	r23,sp,103
10109ab4:	003bd506 	br	10108a0c <__alt_data_end+0xfffe8a0c>
10109ab8:	0029883a 	mov	r20,zero
10109abc:	ddc01a04 	addi	r23,sp,104
10109ac0:	003bd206 	br	10108a0c <__alt_data_end+0xfffe8a0c>
10109ac4:	d9002303 	ldbu	r4,140(sp)
10109ac8:	d9001d85 	stb	r4,118(sp)
10109acc:	003da606 	br	10109168 <__alt_data_end+0xfffe9168>
10109ad0:	d8c02303 	ldbu	r3,140(sp)
10109ad4:	d8c01d85 	stb	r3,118(sp)
10109ad8:	003c7606 	br	10108cb4 <__alt_data_end+0xfffe8cb4>
10109adc:	d8c02303 	ldbu	r3,140(sp)
10109ae0:	d8c01d85 	stb	r3,118(sp)
10109ae4:	003c6506 	br	10108c7c <__alt_data_end+0xfffe8c7c>
10109ae8:	d9002303 	ldbu	r4,140(sp)
10109aec:	d9001d85 	stb	r4,118(sp)
10109af0:	003d3d06 	br	10108fe8 <__alt_data_end+0xfffe8fe8>
10109af4:	d8c02303 	ldbu	r3,140(sp)
10109af8:	d8c01d85 	stb	r3,118(sp)
10109afc:	003d1d06 	br	10108f74 <__alt_data_end+0xfffe8f74>
10109b00:	d8c02303 	ldbu	r3,140(sp)
10109b04:	d8c01d85 	stb	r3,118(sp)
10109b08:	003d0306 	br	10108f18 <__alt_data_end+0xfffe8f18>

10109b0c <__vfiprintf_internal>:
10109b0c:	00840474 	movhi	r2,4113
10109b10:	1087c304 	addi	r2,r2,7948
10109b14:	300f883a 	mov	r7,r6
10109b18:	280d883a 	mov	r6,r5
10109b1c:	200b883a 	mov	r5,r4
10109b20:	11000017 	ldw	r4,0(r2)
10109b24:	01086001 	jmpi	10108600 <___vfiprintf_internal_r>

10109b28 <__sbprintf>:
10109b28:	2880030b 	ldhu	r2,12(r5)
10109b2c:	2ac01917 	ldw	r11,100(r5)
10109b30:	2a80038b 	ldhu	r10,14(r5)
10109b34:	2a400717 	ldw	r9,28(r5)
10109b38:	2a000917 	ldw	r8,36(r5)
10109b3c:	defee204 	addi	sp,sp,-1144
10109b40:	00c10004 	movi	r3,1024
10109b44:	dc011a15 	stw	r16,1128(sp)
10109b48:	10bfff4c 	andi	r2,r2,65533
10109b4c:	2821883a 	mov	r16,r5
10109b50:	d8cb883a 	add	r5,sp,r3
10109b54:	dc811c15 	stw	r18,1136(sp)
10109b58:	dc411b15 	stw	r17,1132(sp)
10109b5c:	dfc11d15 	stw	ra,1140(sp)
10109b60:	2025883a 	mov	r18,r4
10109b64:	d881030d 	sth	r2,1036(sp)
10109b68:	dac11915 	stw	r11,1124(sp)
10109b6c:	da81038d 	sth	r10,1038(sp)
10109b70:	da410715 	stw	r9,1052(sp)
10109b74:	da010915 	stw	r8,1060(sp)
10109b78:	dec10015 	stw	sp,1024(sp)
10109b7c:	dec10415 	stw	sp,1040(sp)
10109b80:	d8c10215 	stw	r3,1032(sp)
10109b84:	d8c10515 	stw	r3,1044(sp)
10109b88:	d8010615 	stw	zero,1048(sp)
10109b8c:	01086000 	call	10108600 <___vfiprintf_internal_r>
10109b90:	1023883a 	mov	r17,r2
10109b94:	10000416 	blt	r2,zero,10109ba8 <__sbprintf+0x80>
10109b98:	d9410004 	addi	r5,sp,1024
10109b9c:	9009883a 	mov	r4,r18
10109ba0:	0104f240 	call	10104f24 <_fflush_r>
10109ba4:	10000d1e 	bne	r2,zero,10109bdc <__sbprintf+0xb4>
10109ba8:	d881030b 	ldhu	r2,1036(sp)
10109bac:	1080100c 	andi	r2,r2,64
10109bb0:	10000326 	beq	r2,zero,10109bc0 <__sbprintf+0x98>
10109bb4:	8080030b 	ldhu	r2,12(r16)
10109bb8:	10801014 	ori	r2,r2,64
10109bbc:	8080030d 	sth	r2,12(r16)
10109bc0:	8805883a 	mov	r2,r17
10109bc4:	dfc11d17 	ldw	ra,1140(sp)
10109bc8:	dc811c17 	ldw	r18,1136(sp)
10109bcc:	dc411b17 	ldw	r17,1132(sp)
10109bd0:	dc011a17 	ldw	r16,1128(sp)
10109bd4:	dec11e04 	addi	sp,sp,1144
10109bd8:	f800283a 	ret
10109bdc:	047fffc4 	movi	r17,-1
10109be0:	003ff106 	br	10109ba8 <__alt_data_end+0xfffe9ba8>

10109be4 <_write_r>:
10109be4:	defffd04 	addi	sp,sp,-12
10109be8:	2805883a 	mov	r2,r5
10109bec:	dc000015 	stw	r16,0(sp)
10109bf0:	04040474 	movhi	r16,4113
10109bf4:	dc400115 	stw	r17,4(sp)
10109bf8:	300b883a 	mov	r5,r6
10109bfc:	840e9304 	addi	r16,r16,14924
10109c00:	2023883a 	mov	r17,r4
10109c04:	380d883a 	mov	r6,r7
10109c08:	1009883a 	mov	r4,r2
10109c0c:	dfc00215 	stw	ra,8(sp)
10109c10:	80000015 	stw	zero,0(r16)
10109c14:	010e2280 	call	1010e228 <write>
10109c18:	00ffffc4 	movi	r3,-1
10109c1c:	10c00526 	beq	r2,r3,10109c34 <_write_r+0x50>
10109c20:	dfc00217 	ldw	ra,8(sp)
10109c24:	dc400117 	ldw	r17,4(sp)
10109c28:	dc000017 	ldw	r16,0(sp)
10109c2c:	dec00304 	addi	sp,sp,12
10109c30:	f800283a 	ret
10109c34:	80c00017 	ldw	r3,0(r16)
10109c38:	183ff926 	beq	r3,zero,10109c20 <__alt_data_end+0xfffe9c20>
10109c3c:	88c00015 	stw	r3,0(r17)
10109c40:	003ff706 	br	10109c20 <__alt_data_end+0xfffe9c20>

10109c44 <_close_r>:
10109c44:	defffd04 	addi	sp,sp,-12
10109c48:	dc000015 	stw	r16,0(sp)
10109c4c:	04040474 	movhi	r16,4113
10109c50:	dc400115 	stw	r17,4(sp)
10109c54:	840e9304 	addi	r16,r16,14924
10109c58:	2023883a 	mov	r17,r4
10109c5c:	2809883a 	mov	r4,r5
10109c60:	dfc00215 	stw	ra,8(sp)
10109c64:	80000015 	stw	zero,0(r16)
10109c68:	010d9d00 	call	1010d9d0 <close>
10109c6c:	00ffffc4 	movi	r3,-1
10109c70:	10c00526 	beq	r2,r3,10109c88 <_close_r+0x44>
10109c74:	dfc00217 	ldw	ra,8(sp)
10109c78:	dc400117 	ldw	r17,4(sp)
10109c7c:	dc000017 	ldw	r16,0(sp)
10109c80:	dec00304 	addi	sp,sp,12
10109c84:	f800283a 	ret
10109c88:	80c00017 	ldw	r3,0(r16)
10109c8c:	183ff926 	beq	r3,zero,10109c74 <__alt_data_end+0xfffe9c74>
10109c90:	88c00015 	stw	r3,0(r17)
10109c94:	003ff706 	br	10109c74 <__alt_data_end+0xfffe9c74>

10109c98 <_calloc_r>:
10109c98:	defffe04 	addi	sp,sp,-8
10109c9c:	2805883a 	mov	r2,r5
10109ca0:	dc000015 	stw	r16,0(sp)
10109ca4:	300b883a 	mov	r5,r6
10109ca8:	2021883a 	mov	r16,r4
10109cac:	1009883a 	mov	r4,r2
10109cb0:	dfc00115 	stw	ra,4(sp)
10109cb4:	0100c080 	call	10100c08 <__mulsi3>
10109cb8:	100b883a 	mov	r5,r2
10109cbc:	8009883a 	mov	r4,r16
10109cc0:	010607c0 	call	1010607c <_malloc_r>
10109cc4:	10002926 	beq	r2,zero,10109d6c <_calloc_r+0xd4>
10109cc8:	11bfff17 	ldw	r6,-4(r2)
10109ccc:	1021883a 	mov	r16,r2
10109cd0:	00bfff04 	movi	r2,-4
10109cd4:	308c703a 	and	r6,r6,r2
10109cd8:	00c00904 	movi	r3,36
10109cdc:	308d883a 	add	r6,r6,r2
10109ce0:	19801636 	bltu	r3,r6,10109d3c <_calloc_r+0xa4>
10109ce4:	008004c4 	movi	r2,19
10109ce8:	11800b2e 	bgeu	r2,r6,10109d18 <_calloc_r+0x80>
10109cec:	80000015 	stw	zero,0(r16)
10109cf0:	80000115 	stw	zero,4(r16)
10109cf4:	008006c4 	movi	r2,27
10109cf8:	11801a2e 	bgeu	r2,r6,10109d64 <_calloc_r+0xcc>
10109cfc:	80000215 	stw	zero,8(r16)
10109d00:	80000315 	stw	zero,12(r16)
10109d04:	30c0151e 	bne	r6,r3,10109d5c <_calloc_r+0xc4>
10109d08:	80000415 	stw	zero,16(r16)
10109d0c:	80800604 	addi	r2,r16,24
10109d10:	80000515 	stw	zero,20(r16)
10109d14:	00000106 	br	10109d1c <_calloc_r+0x84>
10109d18:	8005883a 	mov	r2,r16
10109d1c:	10000015 	stw	zero,0(r2)
10109d20:	10000115 	stw	zero,4(r2)
10109d24:	10000215 	stw	zero,8(r2)
10109d28:	8005883a 	mov	r2,r16
10109d2c:	dfc00117 	ldw	ra,4(sp)
10109d30:	dc000017 	ldw	r16,0(sp)
10109d34:	dec00204 	addi	sp,sp,8
10109d38:	f800283a 	ret
10109d3c:	000b883a 	mov	r5,zero
10109d40:	8009883a 	mov	r4,r16
10109d44:	0106ac80 	call	10106ac8 <memset>
10109d48:	8005883a 	mov	r2,r16
10109d4c:	dfc00117 	ldw	ra,4(sp)
10109d50:	dc000017 	ldw	r16,0(sp)
10109d54:	dec00204 	addi	sp,sp,8
10109d58:	f800283a 	ret
10109d5c:	80800404 	addi	r2,r16,16
10109d60:	003fee06 	br	10109d1c <__alt_data_end+0xfffe9d1c>
10109d64:	80800204 	addi	r2,r16,8
10109d68:	003fec06 	br	10109d1c <__alt_data_end+0xfffe9d1c>
10109d6c:	0005883a 	mov	r2,zero
10109d70:	003fee06 	br	10109d2c <__alt_data_end+0xfffe9d2c>

10109d74 <_fclose_r>:
10109d74:	28003926 	beq	r5,zero,10109e5c <_fclose_r+0xe8>
10109d78:	defffc04 	addi	sp,sp,-16
10109d7c:	dc400115 	stw	r17,4(sp)
10109d80:	dc000015 	stw	r16,0(sp)
10109d84:	dfc00315 	stw	ra,12(sp)
10109d88:	dc800215 	stw	r18,8(sp)
10109d8c:	2023883a 	mov	r17,r4
10109d90:	2821883a 	mov	r16,r5
10109d94:	20000226 	beq	r4,zero,10109da0 <_fclose_r+0x2c>
10109d98:	20800e17 	ldw	r2,56(r4)
10109d9c:	10002726 	beq	r2,zero,10109e3c <_fclose_r+0xc8>
10109da0:	8080030f 	ldh	r2,12(r16)
10109da4:	1000071e 	bne	r2,zero,10109dc4 <_fclose_r+0x50>
10109da8:	0005883a 	mov	r2,zero
10109dac:	dfc00317 	ldw	ra,12(sp)
10109db0:	dc800217 	ldw	r18,8(sp)
10109db4:	dc400117 	ldw	r17,4(sp)
10109db8:	dc000017 	ldw	r16,0(sp)
10109dbc:	dec00404 	addi	sp,sp,16
10109dc0:	f800283a 	ret
10109dc4:	800b883a 	mov	r5,r16
10109dc8:	8809883a 	mov	r4,r17
10109dcc:	0104d080 	call	10104d08 <__sflush_r>
10109dd0:	1025883a 	mov	r18,r2
10109dd4:	80800b17 	ldw	r2,44(r16)
10109dd8:	10000426 	beq	r2,zero,10109dec <_fclose_r+0x78>
10109ddc:	81400717 	ldw	r5,28(r16)
10109de0:	8809883a 	mov	r4,r17
10109de4:	103ee83a 	callr	r2
10109de8:	10001616 	blt	r2,zero,10109e44 <_fclose_r+0xd0>
10109dec:	8080030b 	ldhu	r2,12(r16)
10109df0:	1080200c 	andi	r2,r2,128
10109df4:	1000151e 	bne	r2,zero,10109e4c <_fclose_r+0xd8>
10109df8:	81400c17 	ldw	r5,48(r16)
10109dfc:	28000526 	beq	r5,zero,10109e14 <_fclose_r+0xa0>
10109e00:	80801004 	addi	r2,r16,64
10109e04:	28800226 	beq	r5,r2,10109e10 <_fclose_r+0x9c>
10109e08:	8809883a 	mov	r4,r17
10109e0c:	01054840 	call	10105484 <_free_r>
10109e10:	80000c15 	stw	zero,48(r16)
10109e14:	81401117 	ldw	r5,68(r16)
10109e18:	28000326 	beq	r5,zero,10109e28 <_fclose_r+0xb4>
10109e1c:	8809883a 	mov	r4,r17
10109e20:	01054840 	call	10105484 <_free_r>
10109e24:	80001115 	stw	zero,68(r16)
10109e28:	01053200 	call	10105320 <__sfp_lock_acquire>
10109e2c:	8000030d 	sth	zero,12(r16)
10109e30:	01053240 	call	10105324 <__sfp_lock_release>
10109e34:	9005883a 	mov	r2,r18
10109e38:	003fdc06 	br	10109dac <__alt_data_end+0xfffe9dac>
10109e3c:	01053100 	call	10105310 <__sinit>
10109e40:	003fd706 	br	10109da0 <__alt_data_end+0xfffe9da0>
10109e44:	04bfffc4 	movi	r18,-1
10109e48:	003fe806 	br	10109dec <__alt_data_end+0xfffe9dec>
10109e4c:	81400417 	ldw	r5,16(r16)
10109e50:	8809883a 	mov	r4,r17
10109e54:	01054840 	call	10105484 <_free_r>
10109e58:	003fe706 	br	10109df8 <__alt_data_end+0xfffe9df8>
10109e5c:	0005883a 	mov	r2,zero
10109e60:	f800283a 	ret

10109e64 <fclose>:
10109e64:	00840474 	movhi	r2,4113
10109e68:	1087c304 	addi	r2,r2,7948
10109e6c:	200b883a 	mov	r5,r4
10109e70:	11000017 	ldw	r4,0(r2)
10109e74:	0109d741 	jmpi	10109d74 <_fclose_r>

10109e78 <__fputwc>:
10109e78:	defff804 	addi	sp,sp,-32
10109e7c:	dcc00415 	stw	r19,16(sp)
10109e80:	dc800315 	stw	r18,12(sp)
10109e84:	dc000115 	stw	r16,4(sp)
10109e88:	dfc00715 	stw	ra,28(sp)
10109e8c:	dd400615 	stw	r21,24(sp)
10109e90:	dd000515 	stw	r20,20(sp)
10109e94:	dc400215 	stw	r17,8(sp)
10109e98:	2027883a 	mov	r19,r4
10109e9c:	2825883a 	mov	r18,r5
10109ea0:	3021883a 	mov	r16,r6
10109ea4:	0105e6c0 	call	10105e6c <__locale_mb_cur_max>
10109ea8:	00c00044 	movi	r3,1
10109eac:	10c03e26 	beq	r2,r3,10109fa8 <__fputwc+0x130>
10109eb0:	81c01704 	addi	r7,r16,92
10109eb4:	900d883a 	mov	r6,r18
10109eb8:	d80b883a 	mov	r5,sp
10109ebc:	9809883a 	mov	r4,r19
10109ec0:	010a3480 	call	1010a348 <_wcrtomb_r>
10109ec4:	1029883a 	mov	r20,r2
10109ec8:	00bfffc4 	movi	r2,-1
10109ecc:	a0802026 	beq	r20,r2,10109f50 <__fputwc+0xd8>
10109ed0:	d9400003 	ldbu	r5,0(sp)
10109ed4:	a0001c26 	beq	r20,zero,10109f48 <__fputwc+0xd0>
10109ed8:	0023883a 	mov	r17,zero
10109edc:	05400284 	movi	r21,10
10109ee0:	00000906 	br	10109f08 <__fputwc+0x90>
10109ee4:	80800017 	ldw	r2,0(r16)
10109ee8:	11400005 	stb	r5,0(r2)
10109eec:	80c00017 	ldw	r3,0(r16)
10109ef0:	18c00044 	addi	r3,r3,1
10109ef4:	80c00015 	stw	r3,0(r16)
10109ef8:	8c400044 	addi	r17,r17,1
10109efc:	dc45883a 	add	r2,sp,r17
10109f00:	8d00112e 	bgeu	r17,r20,10109f48 <__fputwc+0xd0>
10109f04:	11400003 	ldbu	r5,0(r2)
10109f08:	80c00217 	ldw	r3,8(r16)
10109f0c:	18ffffc4 	addi	r3,r3,-1
10109f10:	80c00215 	stw	r3,8(r16)
10109f14:	183ff30e 	bge	r3,zero,10109ee4 <__alt_data_end+0xfffe9ee4>
10109f18:	80800617 	ldw	r2,24(r16)
10109f1c:	18801916 	blt	r3,r2,10109f84 <__fputwc+0x10c>
10109f20:	80800017 	ldw	r2,0(r16)
10109f24:	11400005 	stb	r5,0(r2)
10109f28:	80800017 	ldw	r2,0(r16)
10109f2c:	10c00003 	ldbu	r3,0(r2)
10109f30:	10800044 	addi	r2,r2,1
10109f34:	1d402326 	beq	r3,r21,10109fc4 <__fputwc+0x14c>
10109f38:	80800015 	stw	r2,0(r16)
10109f3c:	8c400044 	addi	r17,r17,1
10109f40:	dc45883a 	add	r2,sp,r17
10109f44:	8d3fef36 	bltu	r17,r20,10109f04 <__alt_data_end+0xfffe9f04>
10109f48:	9005883a 	mov	r2,r18
10109f4c:	00000406 	br	10109f60 <__fputwc+0xe8>
10109f50:	80c0030b 	ldhu	r3,12(r16)
10109f54:	a005883a 	mov	r2,r20
10109f58:	18c01014 	ori	r3,r3,64
10109f5c:	80c0030d 	sth	r3,12(r16)
10109f60:	dfc00717 	ldw	ra,28(sp)
10109f64:	dd400617 	ldw	r21,24(sp)
10109f68:	dd000517 	ldw	r20,20(sp)
10109f6c:	dcc00417 	ldw	r19,16(sp)
10109f70:	dc800317 	ldw	r18,12(sp)
10109f74:	dc400217 	ldw	r17,8(sp)
10109f78:	dc000117 	ldw	r16,4(sp)
10109f7c:	dec00804 	addi	sp,sp,32
10109f80:	f800283a 	ret
10109f84:	800d883a 	mov	r6,r16
10109f88:	29403fcc 	andi	r5,r5,255
10109f8c:	9809883a 	mov	r4,r19
10109f90:	010a1f00 	call	1010a1f0 <__swbuf_r>
10109f94:	10bfffe0 	cmpeqi	r2,r2,-1
10109f98:	10803fcc 	andi	r2,r2,255
10109f9c:	103fd626 	beq	r2,zero,10109ef8 <__alt_data_end+0xfffe9ef8>
10109fa0:	00bfffc4 	movi	r2,-1
10109fa4:	003fee06 	br	10109f60 <__alt_data_end+0xfffe9f60>
10109fa8:	90ffffc4 	addi	r3,r18,-1
10109fac:	01003f84 	movi	r4,254
10109fb0:	20ffbf36 	bltu	r4,r3,10109eb0 <__alt_data_end+0xfffe9eb0>
10109fb4:	900b883a 	mov	r5,r18
10109fb8:	dc800005 	stb	r18,0(sp)
10109fbc:	1029883a 	mov	r20,r2
10109fc0:	003fc506 	br	10109ed8 <__alt_data_end+0xfffe9ed8>
10109fc4:	800d883a 	mov	r6,r16
10109fc8:	a80b883a 	mov	r5,r21
10109fcc:	9809883a 	mov	r4,r19
10109fd0:	010a1f00 	call	1010a1f0 <__swbuf_r>
10109fd4:	10bfffe0 	cmpeqi	r2,r2,-1
10109fd8:	003fef06 	br	10109f98 <__alt_data_end+0xfffe9f98>

10109fdc <_fputwc_r>:
10109fdc:	3080030b 	ldhu	r2,12(r6)
10109fe0:	10c8000c 	andi	r3,r2,8192
10109fe4:	1800051e 	bne	r3,zero,10109ffc <_fputwc_r+0x20>
10109fe8:	30c01917 	ldw	r3,100(r6)
10109fec:	10880014 	ori	r2,r2,8192
10109ff0:	3080030d 	sth	r2,12(r6)
10109ff4:	18880014 	ori	r2,r3,8192
10109ff8:	30801915 	stw	r2,100(r6)
10109ffc:	0109e781 	jmpi	10109e78 <__fputwc>

1010a000 <fputwc>:
1010a000:	00840474 	movhi	r2,4113
1010a004:	defffc04 	addi	sp,sp,-16
1010a008:	1087c304 	addi	r2,r2,7948
1010a00c:	dc000115 	stw	r16,4(sp)
1010a010:	14000017 	ldw	r16,0(r2)
1010a014:	dc400215 	stw	r17,8(sp)
1010a018:	dfc00315 	stw	ra,12(sp)
1010a01c:	2023883a 	mov	r17,r4
1010a020:	80000226 	beq	r16,zero,1010a02c <fputwc+0x2c>
1010a024:	80800e17 	ldw	r2,56(r16)
1010a028:	10001026 	beq	r2,zero,1010a06c <fputwc+0x6c>
1010a02c:	2880030b 	ldhu	r2,12(r5)
1010a030:	10c8000c 	andi	r3,r2,8192
1010a034:	1800051e 	bne	r3,zero,1010a04c <fputwc+0x4c>
1010a038:	28c01917 	ldw	r3,100(r5)
1010a03c:	10880014 	ori	r2,r2,8192
1010a040:	2880030d 	sth	r2,12(r5)
1010a044:	18880014 	ori	r2,r3,8192
1010a048:	28801915 	stw	r2,100(r5)
1010a04c:	280d883a 	mov	r6,r5
1010a050:	8009883a 	mov	r4,r16
1010a054:	880b883a 	mov	r5,r17
1010a058:	dfc00317 	ldw	ra,12(sp)
1010a05c:	dc400217 	ldw	r17,8(sp)
1010a060:	dc000117 	ldw	r16,4(sp)
1010a064:	dec00404 	addi	sp,sp,16
1010a068:	0109e781 	jmpi	10109e78 <__fputwc>
1010a06c:	8009883a 	mov	r4,r16
1010a070:	d9400015 	stw	r5,0(sp)
1010a074:	01053100 	call	10105310 <__sinit>
1010a078:	d9400017 	ldw	r5,0(sp)
1010a07c:	003feb06 	br	1010a02c <__alt_data_end+0xfffea02c>

1010a080 <_fstat_r>:
1010a080:	defffd04 	addi	sp,sp,-12
1010a084:	2805883a 	mov	r2,r5
1010a088:	dc000015 	stw	r16,0(sp)
1010a08c:	04040474 	movhi	r16,4113
1010a090:	dc400115 	stw	r17,4(sp)
1010a094:	840e9304 	addi	r16,r16,14924
1010a098:	2023883a 	mov	r17,r4
1010a09c:	300b883a 	mov	r5,r6
1010a0a0:	1009883a 	mov	r4,r2
1010a0a4:	dfc00215 	stw	ra,8(sp)
1010a0a8:	80000015 	stw	zero,0(r16)
1010a0ac:	010db100 	call	1010db10 <fstat>
1010a0b0:	00ffffc4 	movi	r3,-1
1010a0b4:	10c00526 	beq	r2,r3,1010a0cc <_fstat_r+0x4c>
1010a0b8:	dfc00217 	ldw	ra,8(sp)
1010a0bc:	dc400117 	ldw	r17,4(sp)
1010a0c0:	dc000017 	ldw	r16,0(sp)
1010a0c4:	dec00304 	addi	sp,sp,12
1010a0c8:	f800283a 	ret
1010a0cc:	80c00017 	ldw	r3,0(r16)
1010a0d0:	183ff926 	beq	r3,zero,1010a0b8 <__alt_data_end+0xfffea0b8>
1010a0d4:	88c00015 	stw	r3,0(r17)
1010a0d8:	003ff706 	br	1010a0b8 <__alt_data_end+0xfffea0b8>

1010a0dc <_isatty_r>:
1010a0dc:	defffd04 	addi	sp,sp,-12
1010a0e0:	dc000015 	stw	r16,0(sp)
1010a0e4:	04040474 	movhi	r16,4113
1010a0e8:	dc400115 	stw	r17,4(sp)
1010a0ec:	840e9304 	addi	r16,r16,14924
1010a0f0:	2023883a 	mov	r17,r4
1010a0f4:	2809883a 	mov	r4,r5
1010a0f8:	dfc00215 	stw	ra,8(sp)
1010a0fc:	80000015 	stw	zero,0(r16)
1010a100:	010dc040 	call	1010dc04 <isatty>
1010a104:	00ffffc4 	movi	r3,-1
1010a108:	10c00526 	beq	r2,r3,1010a120 <_isatty_r+0x44>
1010a10c:	dfc00217 	ldw	ra,8(sp)
1010a110:	dc400117 	ldw	r17,4(sp)
1010a114:	dc000017 	ldw	r16,0(sp)
1010a118:	dec00304 	addi	sp,sp,12
1010a11c:	f800283a 	ret
1010a120:	80c00017 	ldw	r3,0(r16)
1010a124:	183ff926 	beq	r3,zero,1010a10c <__alt_data_end+0xfffea10c>
1010a128:	88c00015 	stw	r3,0(r17)
1010a12c:	003ff706 	br	1010a10c <__alt_data_end+0xfffea10c>

1010a130 <_lseek_r>:
1010a130:	defffd04 	addi	sp,sp,-12
1010a134:	2805883a 	mov	r2,r5
1010a138:	dc000015 	stw	r16,0(sp)
1010a13c:	04040474 	movhi	r16,4113
1010a140:	dc400115 	stw	r17,4(sp)
1010a144:	300b883a 	mov	r5,r6
1010a148:	840e9304 	addi	r16,r16,14924
1010a14c:	2023883a 	mov	r17,r4
1010a150:	380d883a 	mov	r6,r7
1010a154:	1009883a 	mov	r4,r2
1010a158:	dfc00215 	stw	ra,8(sp)
1010a15c:	80000015 	stw	zero,0(r16)
1010a160:	010ddd80 	call	1010ddd8 <lseek>
1010a164:	00ffffc4 	movi	r3,-1
1010a168:	10c00526 	beq	r2,r3,1010a180 <_lseek_r+0x50>
1010a16c:	dfc00217 	ldw	ra,8(sp)
1010a170:	dc400117 	ldw	r17,4(sp)
1010a174:	dc000017 	ldw	r16,0(sp)
1010a178:	dec00304 	addi	sp,sp,12
1010a17c:	f800283a 	ret
1010a180:	80c00017 	ldw	r3,0(r16)
1010a184:	183ff926 	beq	r3,zero,1010a16c <__alt_data_end+0xfffea16c>
1010a188:	88c00015 	stw	r3,0(r17)
1010a18c:	003ff706 	br	1010a16c <__alt_data_end+0xfffea16c>

1010a190 <_read_r>:
1010a190:	defffd04 	addi	sp,sp,-12
1010a194:	2805883a 	mov	r2,r5
1010a198:	dc000015 	stw	r16,0(sp)
1010a19c:	04040474 	movhi	r16,4113
1010a1a0:	dc400115 	stw	r17,4(sp)
1010a1a4:	300b883a 	mov	r5,r6
1010a1a8:	840e9304 	addi	r16,r16,14924
1010a1ac:	2023883a 	mov	r17,r4
1010a1b0:	380d883a 	mov	r6,r7
1010a1b4:	1009883a 	mov	r4,r2
1010a1b8:	dfc00215 	stw	ra,8(sp)
1010a1bc:	80000015 	stw	zero,0(r16)
1010a1c0:	010dfb40 	call	1010dfb4 <read>
1010a1c4:	00ffffc4 	movi	r3,-1
1010a1c8:	10c00526 	beq	r2,r3,1010a1e0 <_read_r+0x50>
1010a1cc:	dfc00217 	ldw	ra,8(sp)
1010a1d0:	dc400117 	ldw	r17,4(sp)
1010a1d4:	dc000017 	ldw	r16,0(sp)
1010a1d8:	dec00304 	addi	sp,sp,12
1010a1dc:	f800283a 	ret
1010a1e0:	80c00017 	ldw	r3,0(r16)
1010a1e4:	183ff926 	beq	r3,zero,1010a1cc <__alt_data_end+0xfffea1cc>
1010a1e8:	88c00015 	stw	r3,0(r17)
1010a1ec:	003ff706 	br	1010a1cc <__alt_data_end+0xfffea1cc>

1010a1f0 <__swbuf_r>:
1010a1f0:	defffb04 	addi	sp,sp,-20
1010a1f4:	dcc00315 	stw	r19,12(sp)
1010a1f8:	dc800215 	stw	r18,8(sp)
1010a1fc:	dc000015 	stw	r16,0(sp)
1010a200:	dfc00415 	stw	ra,16(sp)
1010a204:	dc400115 	stw	r17,4(sp)
1010a208:	2025883a 	mov	r18,r4
1010a20c:	2827883a 	mov	r19,r5
1010a210:	3021883a 	mov	r16,r6
1010a214:	20000226 	beq	r4,zero,1010a220 <__swbuf_r+0x30>
1010a218:	20800e17 	ldw	r2,56(r4)
1010a21c:	10004226 	beq	r2,zero,1010a328 <__swbuf_r+0x138>
1010a220:	80800617 	ldw	r2,24(r16)
1010a224:	8100030b 	ldhu	r4,12(r16)
1010a228:	80800215 	stw	r2,8(r16)
1010a22c:	2080020c 	andi	r2,r4,8
1010a230:	10003626 	beq	r2,zero,1010a30c <__swbuf_r+0x11c>
1010a234:	80c00417 	ldw	r3,16(r16)
1010a238:	18003426 	beq	r3,zero,1010a30c <__swbuf_r+0x11c>
1010a23c:	2088000c 	andi	r2,r4,8192
1010a240:	9c403fcc 	andi	r17,r19,255
1010a244:	10001a26 	beq	r2,zero,1010a2b0 <__swbuf_r+0xc0>
1010a248:	80800017 	ldw	r2,0(r16)
1010a24c:	81000517 	ldw	r4,20(r16)
1010a250:	10c7c83a 	sub	r3,r2,r3
1010a254:	1900200e 	bge	r3,r4,1010a2d8 <__swbuf_r+0xe8>
1010a258:	18c00044 	addi	r3,r3,1
1010a25c:	81000217 	ldw	r4,8(r16)
1010a260:	11400044 	addi	r5,r2,1
1010a264:	81400015 	stw	r5,0(r16)
1010a268:	213fffc4 	addi	r4,r4,-1
1010a26c:	81000215 	stw	r4,8(r16)
1010a270:	14c00005 	stb	r19,0(r2)
1010a274:	80800517 	ldw	r2,20(r16)
1010a278:	10c01e26 	beq	r2,r3,1010a2f4 <__swbuf_r+0x104>
1010a27c:	8080030b 	ldhu	r2,12(r16)
1010a280:	1080004c 	andi	r2,r2,1
1010a284:	10000226 	beq	r2,zero,1010a290 <__swbuf_r+0xa0>
1010a288:	00800284 	movi	r2,10
1010a28c:	88801926 	beq	r17,r2,1010a2f4 <__swbuf_r+0x104>
1010a290:	8805883a 	mov	r2,r17
1010a294:	dfc00417 	ldw	ra,16(sp)
1010a298:	dcc00317 	ldw	r19,12(sp)
1010a29c:	dc800217 	ldw	r18,8(sp)
1010a2a0:	dc400117 	ldw	r17,4(sp)
1010a2a4:	dc000017 	ldw	r16,0(sp)
1010a2a8:	dec00504 	addi	sp,sp,20
1010a2ac:	f800283a 	ret
1010a2b0:	81401917 	ldw	r5,100(r16)
1010a2b4:	00b7ffc4 	movi	r2,-8193
1010a2b8:	21080014 	ori	r4,r4,8192
1010a2bc:	2884703a 	and	r2,r5,r2
1010a2c0:	80801915 	stw	r2,100(r16)
1010a2c4:	80800017 	ldw	r2,0(r16)
1010a2c8:	8100030d 	sth	r4,12(r16)
1010a2cc:	81000517 	ldw	r4,20(r16)
1010a2d0:	10c7c83a 	sub	r3,r2,r3
1010a2d4:	193fe016 	blt	r3,r4,1010a258 <__alt_data_end+0xfffea258>
1010a2d8:	800b883a 	mov	r5,r16
1010a2dc:	9009883a 	mov	r4,r18
1010a2e0:	0104f240 	call	10104f24 <_fflush_r>
1010a2e4:	1000071e 	bne	r2,zero,1010a304 <__swbuf_r+0x114>
1010a2e8:	80800017 	ldw	r2,0(r16)
1010a2ec:	00c00044 	movi	r3,1
1010a2f0:	003fda06 	br	1010a25c <__alt_data_end+0xfffea25c>
1010a2f4:	800b883a 	mov	r5,r16
1010a2f8:	9009883a 	mov	r4,r18
1010a2fc:	0104f240 	call	10104f24 <_fflush_r>
1010a300:	103fe326 	beq	r2,zero,1010a290 <__alt_data_end+0xfffea290>
1010a304:	00bfffc4 	movi	r2,-1
1010a308:	003fe206 	br	1010a294 <__alt_data_end+0xfffea294>
1010a30c:	800b883a 	mov	r5,r16
1010a310:	9009883a 	mov	r4,r18
1010a314:	01033040 	call	10103304 <__swsetup_r>
1010a318:	103ffa1e 	bne	r2,zero,1010a304 <__alt_data_end+0xfffea304>
1010a31c:	8100030b 	ldhu	r4,12(r16)
1010a320:	80c00417 	ldw	r3,16(r16)
1010a324:	003fc506 	br	1010a23c <__alt_data_end+0xfffea23c>
1010a328:	01053100 	call	10105310 <__sinit>
1010a32c:	003fbc06 	br	1010a220 <__alt_data_end+0xfffea220>

1010a330 <__swbuf>:
1010a330:	00840474 	movhi	r2,4113
1010a334:	1087c304 	addi	r2,r2,7948
1010a338:	280d883a 	mov	r6,r5
1010a33c:	200b883a 	mov	r5,r4
1010a340:	11000017 	ldw	r4,0(r2)
1010a344:	010a1f01 	jmpi	1010a1f0 <__swbuf_r>

1010a348 <_wcrtomb_r>:
1010a348:	defff604 	addi	sp,sp,-40
1010a34c:	00840474 	movhi	r2,4113
1010a350:	dc800815 	stw	r18,32(sp)
1010a354:	dc400715 	stw	r17,28(sp)
1010a358:	dc000615 	stw	r16,24(sp)
1010a35c:	1087c704 	addi	r2,r2,7964
1010a360:	dfc00915 	stw	ra,36(sp)
1010a364:	2021883a 	mov	r16,r4
1010a368:	3823883a 	mov	r17,r7
1010a36c:	14800017 	ldw	r18,0(r2)
1010a370:	28001426 	beq	r5,zero,1010a3c4 <_wcrtomb_r+0x7c>
1010a374:	d9400415 	stw	r5,16(sp)
1010a378:	d9800515 	stw	r6,20(sp)
1010a37c:	0105e600 	call	10105e60 <__locale_charset>
1010a380:	d9800517 	ldw	r6,20(sp)
1010a384:	d9400417 	ldw	r5,16(sp)
1010a388:	100f883a 	mov	r7,r2
1010a38c:	dc400015 	stw	r17,0(sp)
1010a390:	8009883a 	mov	r4,r16
1010a394:	903ee83a 	callr	r18
1010a398:	00ffffc4 	movi	r3,-1
1010a39c:	10c0031e 	bne	r2,r3,1010a3ac <_wcrtomb_r+0x64>
1010a3a0:	88000015 	stw	zero,0(r17)
1010a3a4:	00c02284 	movi	r3,138
1010a3a8:	80c00015 	stw	r3,0(r16)
1010a3ac:	dfc00917 	ldw	ra,36(sp)
1010a3b0:	dc800817 	ldw	r18,32(sp)
1010a3b4:	dc400717 	ldw	r17,28(sp)
1010a3b8:	dc000617 	ldw	r16,24(sp)
1010a3bc:	dec00a04 	addi	sp,sp,40
1010a3c0:	f800283a 	ret
1010a3c4:	0105e600 	call	10105e60 <__locale_charset>
1010a3c8:	100f883a 	mov	r7,r2
1010a3cc:	dc400015 	stw	r17,0(sp)
1010a3d0:	000d883a 	mov	r6,zero
1010a3d4:	d9400104 	addi	r5,sp,4
1010a3d8:	8009883a 	mov	r4,r16
1010a3dc:	903ee83a 	callr	r18
1010a3e0:	003fed06 	br	1010a398 <__alt_data_end+0xfffea398>

1010a3e4 <wcrtomb>:
1010a3e4:	defff604 	addi	sp,sp,-40
1010a3e8:	00840474 	movhi	r2,4113
1010a3ec:	dc800615 	stw	r18,24(sp)
1010a3f0:	dc400515 	stw	r17,20(sp)
1010a3f4:	1087c304 	addi	r2,r2,7948
1010a3f8:	dfc00915 	stw	ra,36(sp)
1010a3fc:	dd000815 	stw	r20,32(sp)
1010a400:	dcc00715 	stw	r19,28(sp)
1010a404:	dc000415 	stw	r16,16(sp)
1010a408:	3025883a 	mov	r18,r6
1010a40c:	14400017 	ldw	r17,0(r2)
1010a410:	20001926 	beq	r4,zero,1010a478 <wcrtomb+0x94>
1010a414:	00840474 	movhi	r2,4113
1010a418:	1087c704 	addi	r2,r2,7964
1010a41c:	15000017 	ldw	r20,0(r2)
1010a420:	2021883a 	mov	r16,r4
1010a424:	2827883a 	mov	r19,r5
1010a428:	0105e600 	call	10105e60 <__locale_charset>
1010a42c:	100f883a 	mov	r7,r2
1010a430:	dc800015 	stw	r18,0(sp)
1010a434:	980d883a 	mov	r6,r19
1010a438:	800b883a 	mov	r5,r16
1010a43c:	8809883a 	mov	r4,r17
1010a440:	a03ee83a 	callr	r20
1010a444:	00ffffc4 	movi	r3,-1
1010a448:	10c0031e 	bne	r2,r3,1010a458 <wcrtomb+0x74>
1010a44c:	90000015 	stw	zero,0(r18)
1010a450:	00c02284 	movi	r3,138
1010a454:	88c00015 	stw	r3,0(r17)
1010a458:	dfc00917 	ldw	ra,36(sp)
1010a45c:	dd000817 	ldw	r20,32(sp)
1010a460:	dcc00717 	ldw	r19,28(sp)
1010a464:	dc800617 	ldw	r18,24(sp)
1010a468:	dc400517 	ldw	r17,20(sp)
1010a46c:	dc000417 	ldw	r16,16(sp)
1010a470:	dec00a04 	addi	sp,sp,40
1010a474:	f800283a 	ret
1010a478:	00840474 	movhi	r2,4113
1010a47c:	1087c704 	addi	r2,r2,7964
1010a480:	14000017 	ldw	r16,0(r2)
1010a484:	0105e600 	call	10105e60 <__locale_charset>
1010a488:	100f883a 	mov	r7,r2
1010a48c:	dc800015 	stw	r18,0(sp)
1010a490:	000d883a 	mov	r6,zero
1010a494:	d9400104 	addi	r5,sp,4
1010a498:	8809883a 	mov	r4,r17
1010a49c:	803ee83a 	callr	r16
1010a4a0:	003fe806 	br	1010a444 <__alt_data_end+0xfffea444>

1010a4a4 <__ascii_wctomb>:
1010a4a4:	28000526 	beq	r5,zero,1010a4bc <__ascii_wctomb+0x18>
1010a4a8:	00803fc4 	movi	r2,255
1010a4ac:	11800536 	bltu	r2,r6,1010a4c4 <__ascii_wctomb+0x20>
1010a4b0:	29800005 	stb	r6,0(r5)
1010a4b4:	00800044 	movi	r2,1
1010a4b8:	f800283a 	ret
1010a4bc:	0005883a 	mov	r2,zero
1010a4c0:	f800283a 	ret
1010a4c4:	00802284 	movi	r2,138
1010a4c8:	20800015 	stw	r2,0(r4)
1010a4cc:	00bfffc4 	movi	r2,-1
1010a4d0:	f800283a 	ret

1010a4d4 <_wctomb_r>:
1010a4d4:	00840474 	movhi	r2,4113
1010a4d8:	defff904 	addi	sp,sp,-28
1010a4dc:	1087c704 	addi	r2,r2,7964
1010a4e0:	dfc00615 	stw	ra,24(sp)
1010a4e4:	dc400515 	stw	r17,20(sp)
1010a4e8:	dc000415 	stw	r16,16(sp)
1010a4ec:	3823883a 	mov	r17,r7
1010a4f0:	14000017 	ldw	r16,0(r2)
1010a4f4:	d9000115 	stw	r4,4(sp)
1010a4f8:	d9400215 	stw	r5,8(sp)
1010a4fc:	d9800315 	stw	r6,12(sp)
1010a500:	0105e600 	call	10105e60 <__locale_charset>
1010a504:	d9800317 	ldw	r6,12(sp)
1010a508:	d9400217 	ldw	r5,8(sp)
1010a50c:	d9000117 	ldw	r4,4(sp)
1010a510:	100f883a 	mov	r7,r2
1010a514:	dc400015 	stw	r17,0(sp)
1010a518:	803ee83a 	callr	r16
1010a51c:	dfc00617 	ldw	ra,24(sp)
1010a520:	dc400517 	ldw	r17,20(sp)
1010a524:	dc000417 	ldw	r16,16(sp)
1010a528:	dec00704 	addi	sp,sp,28
1010a52c:	f800283a 	ret

1010a530 <__udivdi3>:
1010a530:	defff404 	addi	sp,sp,-48
1010a534:	dcc00515 	stw	r19,20(sp)
1010a538:	dc000215 	stw	r16,8(sp)
1010a53c:	dfc00b15 	stw	ra,44(sp)
1010a540:	df000a15 	stw	fp,40(sp)
1010a544:	ddc00915 	stw	r23,36(sp)
1010a548:	dd800815 	stw	r22,32(sp)
1010a54c:	dd400715 	stw	r21,28(sp)
1010a550:	dd000615 	stw	r20,24(sp)
1010a554:	dc800415 	stw	r18,16(sp)
1010a558:	dc400315 	stw	r17,12(sp)
1010a55c:	2027883a 	mov	r19,r4
1010a560:	2821883a 	mov	r16,r5
1010a564:	3800461e 	bne	r7,zero,1010a680 <__udivdi3+0x150>
1010a568:	3023883a 	mov	r17,r6
1010a56c:	2025883a 	mov	r18,r4
1010a570:	2980572e 	bgeu	r5,r6,1010a6d0 <__udivdi3+0x1a0>
1010a574:	00bfffd4 	movui	r2,65535
1010a578:	282d883a 	mov	r22,r5
1010a57c:	1180b236 	bltu	r2,r6,1010a848 <__udivdi3+0x318>
1010a580:	00803fc4 	movi	r2,255
1010a584:	1185803a 	cmpltu	r2,r2,r6
1010a588:	100490fa 	slli	r2,r2,3
1010a58c:	3086d83a 	srl	r3,r6,r2
1010a590:	01040474 	movhi	r4,4113
1010a594:	2100ca04 	addi	r4,r4,808
1010a598:	20c7883a 	add	r3,r4,r3
1010a59c:	18c00003 	ldbu	r3,0(r3)
1010a5a0:	1885883a 	add	r2,r3,r2
1010a5a4:	00c00804 	movi	r3,32
1010a5a8:	1887c83a 	sub	r3,r3,r2
1010a5ac:	18000526 	beq	r3,zero,1010a5c4 <__udivdi3+0x94>
1010a5b0:	80e0983a 	sll	r16,r16,r3
1010a5b4:	9884d83a 	srl	r2,r19,r2
1010a5b8:	30e2983a 	sll	r17,r6,r3
1010a5bc:	98e4983a 	sll	r18,r19,r3
1010a5c0:	142cb03a 	or	r22,r2,r16
1010a5c4:	882ad43a 	srli	r21,r17,16
1010a5c8:	b009883a 	mov	r4,r22
1010a5cc:	8d3fffcc 	andi	r20,r17,65535
1010a5d0:	a80b883a 	mov	r5,r21
1010a5d4:	0100bb00 	call	10100bb0 <__umodsi3>
1010a5d8:	b009883a 	mov	r4,r22
1010a5dc:	a80b883a 	mov	r5,r21
1010a5e0:	1027883a 	mov	r19,r2
1010a5e4:	0100b4c0 	call	10100b4c <__udivsi3>
1010a5e8:	100b883a 	mov	r5,r2
1010a5ec:	a009883a 	mov	r4,r20
1010a5f0:	102d883a 	mov	r22,r2
1010a5f4:	0100c080 	call	10100c08 <__mulsi3>
1010a5f8:	9826943a 	slli	r19,r19,16
1010a5fc:	9006d43a 	srli	r3,r18,16
1010a600:	1cc6b03a 	or	r3,r3,r19
1010a604:	1880052e 	bgeu	r3,r2,1010a61c <__udivdi3+0xec>
1010a608:	1c47883a 	add	r3,r3,r17
1010a60c:	b13fffc4 	addi	r4,r22,-1
1010a610:	1c400136 	bltu	r3,r17,1010a618 <__udivdi3+0xe8>
1010a614:	18814236 	bltu	r3,r2,1010ab20 <__udivdi3+0x5f0>
1010a618:	202d883a 	mov	r22,r4
1010a61c:	18a1c83a 	sub	r16,r3,r2
1010a620:	8009883a 	mov	r4,r16
1010a624:	a80b883a 	mov	r5,r21
1010a628:	0100bb00 	call	10100bb0 <__umodsi3>
1010a62c:	1027883a 	mov	r19,r2
1010a630:	8009883a 	mov	r4,r16
1010a634:	a80b883a 	mov	r5,r21
1010a638:	9826943a 	slli	r19,r19,16
1010a63c:	0100b4c0 	call	10100b4c <__udivsi3>
1010a640:	100b883a 	mov	r5,r2
1010a644:	a009883a 	mov	r4,r20
1010a648:	94bfffcc 	andi	r18,r18,65535
1010a64c:	1021883a 	mov	r16,r2
1010a650:	94e4b03a 	or	r18,r18,r19
1010a654:	0100c080 	call	10100c08 <__mulsi3>
1010a658:	9080052e 	bgeu	r18,r2,1010a670 <__udivdi3+0x140>
1010a65c:	8ca5883a 	add	r18,r17,r18
1010a660:	80ffffc4 	addi	r3,r16,-1
1010a664:	94410c36 	bltu	r18,r17,1010aa98 <__udivdi3+0x568>
1010a668:	90810b2e 	bgeu	r18,r2,1010aa98 <__udivdi3+0x568>
1010a66c:	843fff84 	addi	r16,r16,-2
1010a670:	b004943a 	slli	r2,r22,16
1010a674:	0007883a 	mov	r3,zero
1010a678:	1404b03a 	or	r2,r2,r16
1010a67c:	00005e06 	br	1010a7f8 <__udivdi3+0x2c8>
1010a680:	29c05b36 	bltu	r5,r7,1010a7f0 <__udivdi3+0x2c0>
1010a684:	00bfffd4 	movui	r2,65535
1010a688:	11c0672e 	bgeu	r2,r7,1010a828 <__udivdi3+0x2f8>
1010a68c:	00804034 	movhi	r2,256
1010a690:	10bfffc4 	addi	r2,r2,-1
1010a694:	11c10a36 	bltu	r2,r7,1010aac0 <__udivdi3+0x590>
1010a698:	00800404 	movi	r2,16
1010a69c:	3886d83a 	srl	r3,r7,r2
1010a6a0:	01040474 	movhi	r4,4113
1010a6a4:	2100ca04 	addi	r4,r4,808
1010a6a8:	20c7883a 	add	r3,r4,r3
1010a6ac:	18c00003 	ldbu	r3,0(r3)
1010a6b0:	05c00804 	movi	r23,32
1010a6b4:	1885883a 	add	r2,r3,r2
1010a6b8:	b8afc83a 	sub	r23,r23,r2
1010a6bc:	b800671e 	bne	r23,zero,1010a85c <__udivdi3+0x32c>
1010a6c0:	3c010536 	bltu	r7,r16,1010aad8 <__udivdi3+0x5a8>
1010a6c4:	9985403a 	cmpgeu	r2,r19,r6
1010a6c8:	0007883a 	mov	r3,zero
1010a6cc:	00004a06 	br	1010a7f8 <__udivdi3+0x2c8>
1010a6d0:	3000041e 	bne	r6,zero,1010a6e4 <__udivdi3+0x1b4>
1010a6d4:	000b883a 	mov	r5,zero
1010a6d8:	01000044 	movi	r4,1
1010a6dc:	0100b4c0 	call	10100b4c <__udivsi3>
1010a6e0:	1023883a 	mov	r17,r2
1010a6e4:	00bfffd4 	movui	r2,65535
1010a6e8:	1440532e 	bgeu	r2,r17,1010a838 <__udivdi3+0x308>
1010a6ec:	00804034 	movhi	r2,256
1010a6f0:	10bfffc4 	addi	r2,r2,-1
1010a6f4:	1440f436 	bltu	r2,r17,1010aac8 <__udivdi3+0x598>
1010a6f8:	00800404 	movi	r2,16
1010a6fc:	8886d83a 	srl	r3,r17,r2
1010a700:	01040474 	movhi	r4,4113
1010a704:	2100ca04 	addi	r4,r4,808
1010a708:	20c7883a 	add	r3,r4,r3
1010a70c:	18c00003 	ldbu	r3,0(r3)
1010a710:	1885883a 	add	r2,r3,r2
1010a714:	00c00804 	movi	r3,32
1010a718:	1887c83a 	sub	r3,r3,r2
1010a71c:	1800a51e 	bne	r3,zero,1010a9b4 <__udivdi3+0x484>
1010a720:	882ad43a 	srli	r21,r17,16
1010a724:	8461c83a 	sub	r16,r16,r17
1010a728:	8d3fffcc 	andi	r20,r17,65535
1010a72c:	00c00044 	movi	r3,1
1010a730:	a80b883a 	mov	r5,r21
1010a734:	8009883a 	mov	r4,r16
1010a738:	d8c00115 	stw	r3,4(sp)
1010a73c:	0100bb00 	call	10100bb0 <__umodsi3>
1010a740:	a80b883a 	mov	r5,r21
1010a744:	8009883a 	mov	r4,r16
1010a748:	1027883a 	mov	r19,r2
1010a74c:	0100b4c0 	call	10100b4c <__udivsi3>
1010a750:	a00b883a 	mov	r5,r20
1010a754:	1009883a 	mov	r4,r2
1010a758:	102d883a 	mov	r22,r2
1010a75c:	0100c080 	call	10100c08 <__mulsi3>
1010a760:	9826943a 	slli	r19,r19,16
1010a764:	900ed43a 	srli	r7,r18,16
1010a768:	d8c00117 	ldw	r3,4(sp)
1010a76c:	3cceb03a 	or	r7,r7,r19
1010a770:	3880052e 	bgeu	r7,r2,1010a788 <__udivdi3+0x258>
1010a774:	3c4f883a 	add	r7,r7,r17
1010a778:	b13fffc4 	addi	r4,r22,-1
1010a77c:	3c400136 	bltu	r7,r17,1010a784 <__udivdi3+0x254>
1010a780:	3880e436 	bltu	r7,r2,1010ab14 <__udivdi3+0x5e4>
1010a784:	202d883a 	mov	r22,r4
1010a788:	38a1c83a 	sub	r16,r7,r2
1010a78c:	8009883a 	mov	r4,r16
1010a790:	a80b883a 	mov	r5,r21
1010a794:	d8c00115 	stw	r3,4(sp)
1010a798:	0100bb00 	call	10100bb0 <__umodsi3>
1010a79c:	1027883a 	mov	r19,r2
1010a7a0:	8009883a 	mov	r4,r16
1010a7a4:	a80b883a 	mov	r5,r21
1010a7a8:	9826943a 	slli	r19,r19,16
1010a7ac:	0100b4c0 	call	10100b4c <__udivsi3>
1010a7b0:	a00b883a 	mov	r5,r20
1010a7b4:	1009883a 	mov	r4,r2
1010a7b8:	94bfffcc 	andi	r18,r18,65535
1010a7bc:	1021883a 	mov	r16,r2
1010a7c0:	94e4b03a 	or	r18,r18,r19
1010a7c4:	0100c080 	call	10100c08 <__mulsi3>
1010a7c8:	d8c00117 	ldw	r3,4(sp)
1010a7cc:	9080052e 	bgeu	r18,r2,1010a7e4 <__udivdi3+0x2b4>
1010a7d0:	8ca5883a 	add	r18,r17,r18
1010a7d4:	813fffc4 	addi	r4,r16,-1
1010a7d8:	9440ad36 	bltu	r18,r17,1010aa90 <__udivdi3+0x560>
1010a7dc:	9080ac2e 	bgeu	r18,r2,1010aa90 <__udivdi3+0x560>
1010a7e0:	843fff84 	addi	r16,r16,-2
1010a7e4:	b004943a 	slli	r2,r22,16
1010a7e8:	1404b03a 	or	r2,r2,r16
1010a7ec:	00000206 	br	1010a7f8 <__udivdi3+0x2c8>
1010a7f0:	0007883a 	mov	r3,zero
1010a7f4:	0005883a 	mov	r2,zero
1010a7f8:	dfc00b17 	ldw	ra,44(sp)
1010a7fc:	df000a17 	ldw	fp,40(sp)
1010a800:	ddc00917 	ldw	r23,36(sp)
1010a804:	dd800817 	ldw	r22,32(sp)
1010a808:	dd400717 	ldw	r21,28(sp)
1010a80c:	dd000617 	ldw	r20,24(sp)
1010a810:	dcc00517 	ldw	r19,20(sp)
1010a814:	dc800417 	ldw	r18,16(sp)
1010a818:	dc400317 	ldw	r17,12(sp)
1010a81c:	dc000217 	ldw	r16,8(sp)
1010a820:	dec00c04 	addi	sp,sp,48
1010a824:	f800283a 	ret
1010a828:	00803fc4 	movi	r2,255
1010a82c:	11c5803a 	cmpltu	r2,r2,r7
1010a830:	100490fa 	slli	r2,r2,3
1010a834:	003f9906 	br	1010a69c <__alt_data_end+0xfffea69c>
1010a838:	00803fc4 	movi	r2,255
1010a83c:	1445803a 	cmpltu	r2,r2,r17
1010a840:	100490fa 	slli	r2,r2,3
1010a844:	003fad06 	br	1010a6fc <__alt_data_end+0xfffea6fc>
1010a848:	00804034 	movhi	r2,256
1010a84c:	10bfffc4 	addi	r2,r2,-1
1010a850:	11809f36 	bltu	r2,r6,1010aad0 <__udivdi3+0x5a0>
1010a854:	00800404 	movi	r2,16
1010a858:	003f4c06 	br	1010a58c <__alt_data_end+0xfffea58c>
1010a85c:	3dce983a 	sll	r7,r7,r23
1010a860:	30b8d83a 	srl	fp,r6,r2
1010a864:	80a2d83a 	srl	r17,r16,r2
1010a868:	35cc983a 	sll	r6,r6,r23
1010a86c:	3f38b03a 	or	fp,r7,fp
1010a870:	e024d43a 	srli	r18,fp,16
1010a874:	9884d83a 	srl	r2,r19,r2
1010a878:	85e0983a 	sll	r16,r16,r23
1010a87c:	8809883a 	mov	r4,r17
1010a880:	900b883a 	mov	r5,r18
1010a884:	d9800015 	stw	r6,0(sp)
1010a888:	1420b03a 	or	r16,r2,r16
1010a88c:	0100bb00 	call	10100bb0 <__umodsi3>
1010a890:	900b883a 	mov	r5,r18
1010a894:	8809883a 	mov	r4,r17
1010a898:	1029883a 	mov	r20,r2
1010a89c:	e5bfffcc 	andi	r22,fp,65535
1010a8a0:	0100b4c0 	call	10100b4c <__udivsi3>
1010a8a4:	100b883a 	mov	r5,r2
1010a8a8:	b009883a 	mov	r4,r22
1010a8ac:	102b883a 	mov	r21,r2
1010a8b0:	0100c080 	call	10100c08 <__mulsi3>
1010a8b4:	a028943a 	slli	r20,r20,16
1010a8b8:	8006d43a 	srli	r3,r16,16
1010a8bc:	1d06b03a 	or	r3,r3,r20
1010a8c0:	1880042e 	bgeu	r3,r2,1010a8d4 <__udivdi3+0x3a4>
1010a8c4:	1f07883a 	add	r3,r3,fp
1010a8c8:	a93fffc4 	addi	r4,r21,-1
1010a8cc:	1f00892e 	bgeu	r3,fp,1010aaf4 <__udivdi3+0x5c4>
1010a8d0:	202b883a 	mov	r21,r4
1010a8d4:	18a3c83a 	sub	r17,r3,r2
1010a8d8:	8809883a 	mov	r4,r17
1010a8dc:	900b883a 	mov	r5,r18
1010a8e0:	0100bb00 	call	10100bb0 <__umodsi3>
1010a8e4:	1029883a 	mov	r20,r2
1010a8e8:	8809883a 	mov	r4,r17
1010a8ec:	900b883a 	mov	r5,r18
1010a8f0:	a028943a 	slli	r20,r20,16
1010a8f4:	0100b4c0 	call	10100b4c <__udivsi3>
1010a8f8:	100b883a 	mov	r5,r2
1010a8fc:	b009883a 	mov	r4,r22
1010a900:	843fffcc 	andi	r16,r16,65535
1010a904:	1023883a 	mov	r17,r2
1010a908:	8520b03a 	or	r16,r16,r20
1010a90c:	0100c080 	call	10100c08 <__mulsi3>
1010a910:	8080042e 	bgeu	r16,r2,1010a924 <__udivdi3+0x3f4>
1010a914:	8721883a 	add	r16,r16,fp
1010a918:	88ffffc4 	addi	r3,r17,-1
1010a91c:	8700712e 	bgeu	r16,fp,1010aae4 <__udivdi3+0x5b4>
1010a920:	1823883a 	mov	r17,r3
1010a924:	a80e943a 	slli	r7,r21,16
1010a928:	d8c00017 	ldw	r3,0(sp)
1010a92c:	80a1c83a 	sub	r16,r16,r2
1010a930:	3c64b03a 	or	r18,r7,r17
1010a934:	1d3fffcc 	andi	r20,r3,65535
1010a938:	9022d43a 	srli	r17,r18,16
1010a93c:	95bfffcc 	andi	r22,r18,65535
1010a940:	a00b883a 	mov	r5,r20
1010a944:	b009883a 	mov	r4,r22
1010a948:	182ad43a 	srli	r21,r3,16
1010a94c:	0100c080 	call	10100c08 <__mulsi3>
1010a950:	a00b883a 	mov	r5,r20
1010a954:	8809883a 	mov	r4,r17
1010a958:	1039883a 	mov	fp,r2
1010a95c:	0100c080 	call	10100c08 <__mulsi3>
1010a960:	8809883a 	mov	r4,r17
1010a964:	a80b883a 	mov	r5,r21
1010a968:	1029883a 	mov	r20,r2
1010a96c:	0100c080 	call	10100c08 <__mulsi3>
1010a970:	a80b883a 	mov	r5,r21
1010a974:	b009883a 	mov	r4,r22
1010a978:	1023883a 	mov	r17,r2
1010a97c:	0100c080 	call	10100c08 <__mulsi3>
1010a980:	e006d43a 	srli	r3,fp,16
1010a984:	1505883a 	add	r2,r2,r20
1010a988:	1887883a 	add	r3,r3,r2
1010a98c:	1d00022e 	bgeu	r3,r20,1010a998 <__udivdi3+0x468>
1010a990:	00800074 	movhi	r2,1
1010a994:	88a3883a 	add	r17,r17,r2
1010a998:	1804d43a 	srli	r2,r3,16
1010a99c:	1463883a 	add	r17,r2,r17
1010a9a0:	84404436 	bltu	r16,r17,1010aab4 <__udivdi3+0x584>
1010a9a4:	84403e26 	beq	r16,r17,1010aaa0 <__udivdi3+0x570>
1010a9a8:	9005883a 	mov	r2,r18
1010a9ac:	0007883a 	mov	r3,zero
1010a9b0:	003f9106 	br	1010a7f8 <__alt_data_end+0xfffea7f8>
1010a9b4:	88e2983a 	sll	r17,r17,r3
1010a9b8:	80aed83a 	srl	r23,r16,r2
1010a9bc:	80e0983a 	sll	r16,r16,r3
1010a9c0:	882ad43a 	srli	r21,r17,16
1010a9c4:	9884d83a 	srl	r2,r19,r2
1010a9c8:	b809883a 	mov	r4,r23
1010a9cc:	a80b883a 	mov	r5,r21
1010a9d0:	98e4983a 	sll	r18,r19,r3
1010a9d4:	142cb03a 	or	r22,r2,r16
1010a9d8:	0100bb00 	call	10100bb0 <__umodsi3>
1010a9dc:	b809883a 	mov	r4,r23
1010a9e0:	a80b883a 	mov	r5,r21
1010a9e4:	1027883a 	mov	r19,r2
1010a9e8:	8d3fffcc 	andi	r20,r17,65535
1010a9ec:	0100b4c0 	call	10100b4c <__udivsi3>
1010a9f0:	a009883a 	mov	r4,r20
1010a9f4:	100b883a 	mov	r5,r2
1010a9f8:	102f883a 	mov	r23,r2
1010a9fc:	0100c080 	call	10100c08 <__mulsi3>
1010aa00:	9826943a 	slli	r19,r19,16
1010aa04:	b008d43a 	srli	r4,r22,16
1010aa08:	24c8b03a 	or	r4,r4,r19
1010aa0c:	2080062e 	bgeu	r4,r2,1010aa28 <__udivdi3+0x4f8>
1010aa10:	2449883a 	add	r4,r4,r17
1010aa14:	b8ffffc4 	addi	r3,r23,-1
1010aa18:	24403c36 	bltu	r4,r17,1010ab0c <__udivdi3+0x5dc>
1010aa1c:	20803b2e 	bgeu	r4,r2,1010ab0c <__udivdi3+0x5dc>
1010aa20:	bdffff84 	addi	r23,r23,-2
1010aa24:	2449883a 	add	r4,r4,r17
1010aa28:	20a1c83a 	sub	r16,r4,r2
1010aa2c:	a80b883a 	mov	r5,r21
1010aa30:	8009883a 	mov	r4,r16
1010aa34:	0100bb00 	call	10100bb0 <__umodsi3>
1010aa38:	a80b883a 	mov	r5,r21
1010aa3c:	8009883a 	mov	r4,r16
1010aa40:	1027883a 	mov	r19,r2
1010aa44:	0100b4c0 	call	10100b4c <__udivsi3>
1010aa48:	a009883a 	mov	r4,r20
1010aa4c:	100b883a 	mov	r5,r2
1010aa50:	9826943a 	slli	r19,r19,16
1010aa54:	1039883a 	mov	fp,r2
1010aa58:	0100c080 	call	10100c08 <__mulsi3>
1010aa5c:	b13fffcc 	andi	r4,r22,65535
1010aa60:	24c8b03a 	or	r4,r4,r19
1010aa64:	2080062e 	bgeu	r4,r2,1010aa80 <__udivdi3+0x550>
1010aa68:	2449883a 	add	r4,r4,r17
1010aa6c:	e0ffffc4 	addi	r3,fp,-1
1010aa70:	24402436 	bltu	r4,r17,1010ab04 <__udivdi3+0x5d4>
1010aa74:	2080232e 	bgeu	r4,r2,1010ab04 <__udivdi3+0x5d4>
1010aa78:	e73fff84 	addi	fp,fp,-2
1010aa7c:	2449883a 	add	r4,r4,r17
1010aa80:	b82e943a 	slli	r23,r23,16
1010aa84:	20a1c83a 	sub	r16,r4,r2
1010aa88:	bf06b03a 	or	r3,r23,fp
1010aa8c:	003f2806 	br	1010a730 <__alt_data_end+0xfffea730>
1010aa90:	2021883a 	mov	r16,r4
1010aa94:	003f5306 	br	1010a7e4 <__alt_data_end+0xfffea7e4>
1010aa98:	1821883a 	mov	r16,r3
1010aa9c:	003ef406 	br	1010a670 <__alt_data_end+0xfffea670>
1010aaa0:	1806943a 	slli	r3,r3,16
1010aaa4:	9de6983a 	sll	r19,r19,r23
1010aaa8:	e73fffcc 	andi	fp,fp,65535
1010aaac:	1f07883a 	add	r3,r3,fp
1010aab0:	98ffbd2e 	bgeu	r19,r3,1010a9a8 <__alt_data_end+0xfffea9a8>
1010aab4:	90bfffc4 	addi	r2,r18,-1
1010aab8:	0007883a 	mov	r3,zero
1010aabc:	003f4e06 	br	1010a7f8 <__alt_data_end+0xfffea7f8>
1010aac0:	00800604 	movi	r2,24
1010aac4:	003ef506 	br	1010a69c <__alt_data_end+0xfffea69c>
1010aac8:	00800604 	movi	r2,24
1010aacc:	003f0b06 	br	1010a6fc <__alt_data_end+0xfffea6fc>
1010aad0:	00800604 	movi	r2,24
1010aad4:	003ead06 	br	1010a58c <__alt_data_end+0xfffea58c>
1010aad8:	0007883a 	mov	r3,zero
1010aadc:	00800044 	movi	r2,1
1010aae0:	003f4506 	br	1010a7f8 <__alt_data_end+0xfffea7f8>
1010aae4:	80bf8e2e 	bgeu	r16,r2,1010a920 <__alt_data_end+0xfffea920>
1010aae8:	8c7fff84 	addi	r17,r17,-2
1010aaec:	8721883a 	add	r16,r16,fp
1010aaf0:	003f8c06 	br	1010a924 <__alt_data_end+0xfffea924>
1010aaf4:	18bf762e 	bgeu	r3,r2,1010a8d0 <__alt_data_end+0xfffea8d0>
1010aaf8:	ad7fff84 	addi	r21,r21,-2
1010aafc:	1f07883a 	add	r3,r3,fp
1010ab00:	003f7406 	br	1010a8d4 <__alt_data_end+0xfffea8d4>
1010ab04:	1839883a 	mov	fp,r3
1010ab08:	003fdd06 	br	1010aa80 <__alt_data_end+0xfffeaa80>
1010ab0c:	182f883a 	mov	r23,r3
1010ab10:	003fc506 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010ab14:	b5bfff84 	addi	r22,r22,-2
1010ab18:	3c4f883a 	add	r7,r7,r17
1010ab1c:	003f1a06 	br	1010a788 <__alt_data_end+0xfffea788>
1010ab20:	b5bfff84 	addi	r22,r22,-2
1010ab24:	1c47883a 	add	r3,r3,r17
1010ab28:	003ebc06 	br	1010a61c <__alt_data_end+0xfffea61c>

1010ab2c <__umoddi3>:
1010ab2c:	defff304 	addi	sp,sp,-52
1010ab30:	df000b15 	stw	fp,44(sp)
1010ab34:	dc400415 	stw	r17,16(sp)
1010ab38:	dc000315 	stw	r16,12(sp)
1010ab3c:	dfc00c15 	stw	ra,48(sp)
1010ab40:	ddc00a15 	stw	r23,40(sp)
1010ab44:	dd800915 	stw	r22,36(sp)
1010ab48:	dd400815 	stw	r21,32(sp)
1010ab4c:	dd000715 	stw	r20,28(sp)
1010ab50:	dcc00615 	stw	r19,24(sp)
1010ab54:	dc800515 	stw	r18,20(sp)
1010ab58:	2021883a 	mov	r16,r4
1010ab5c:	2823883a 	mov	r17,r5
1010ab60:	2839883a 	mov	fp,r5
1010ab64:	3800401e 	bne	r7,zero,1010ac68 <__umoddi3+0x13c>
1010ab68:	3027883a 	mov	r19,r6
1010ab6c:	2029883a 	mov	r20,r4
1010ab70:	2980552e 	bgeu	r5,r6,1010acc8 <__umoddi3+0x19c>
1010ab74:	00bfffd4 	movui	r2,65535
1010ab78:	1180a236 	bltu	r2,r6,1010ae04 <__umoddi3+0x2d8>
1010ab7c:	01003fc4 	movi	r4,255
1010ab80:	2189803a 	cmpltu	r4,r4,r6
1010ab84:	200890fa 	slli	r4,r4,3
1010ab88:	3104d83a 	srl	r2,r6,r4
1010ab8c:	00c40474 	movhi	r3,4113
1010ab90:	18c0ca04 	addi	r3,r3,808
1010ab94:	1885883a 	add	r2,r3,r2
1010ab98:	10c00003 	ldbu	r3,0(r2)
1010ab9c:	00800804 	movi	r2,32
1010aba0:	1909883a 	add	r4,r3,r4
1010aba4:	1125c83a 	sub	r18,r2,r4
1010aba8:	90000526 	beq	r18,zero,1010abc0 <__umoddi3+0x94>
1010abac:	8ca2983a 	sll	r17,r17,r18
1010abb0:	8108d83a 	srl	r4,r16,r4
1010abb4:	34a6983a 	sll	r19,r6,r18
1010abb8:	84a8983a 	sll	r20,r16,r18
1010abbc:	2478b03a 	or	fp,r4,r17
1010abc0:	982cd43a 	srli	r22,r19,16
1010abc4:	e009883a 	mov	r4,fp
1010abc8:	9dffffcc 	andi	r23,r19,65535
1010abcc:	b00b883a 	mov	r5,r22
1010abd0:	0100bb00 	call	10100bb0 <__umodsi3>
1010abd4:	b00b883a 	mov	r5,r22
1010abd8:	e009883a 	mov	r4,fp
1010abdc:	102b883a 	mov	r21,r2
1010abe0:	0100b4c0 	call	10100b4c <__udivsi3>
1010abe4:	100b883a 	mov	r5,r2
1010abe8:	b809883a 	mov	r4,r23
1010abec:	0100c080 	call	10100c08 <__mulsi3>
1010abf0:	a82a943a 	slli	r21,r21,16
1010abf4:	a006d43a 	srli	r3,r20,16
1010abf8:	1d46b03a 	or	r3,r3,r21
1010abfc:	1880032e 	bgeu	r3,r2,1010ac0c <__umoddi3+0xe0>
1010ac00:	1cc7883a 	add	r3,r3,r19
1010ac04:	1cc00136 	bltu	r3,r19,1010ac0c <__umoddi3+0xe0>
1010ac08:	18813136 	bltu	r3,r2,1010b0d0 <__umoddi3+0x5a4>
1010ac0c:	18a1c83a 	sub	r16,r3,r2
1010ac10:	b00b883a 	mov	r5,r22
1010ac14:	8009883a 	mov	r4,r16
1010ac18:	0100bb00 	call	10100bb0 <__umodsi3>
1010ac1c:	b00b883a 	mov	r5,r22
1010ac20:	8009883a 	mov	r4,r16
1010ac24:	1023883a 	mov	r17,r2
1010ac28:	0100b4c0 	call	10100b4c <__udivsi3>
1010ac2c:	100b883a 	mov	r5,r2
1010ac30:	b809883a 	mov	r4,r23
1010ac34:	8822943a 	slli	r17,r17,16
1010ac38:	0100c080 	call	10100c08 <__mulsi3>
1010ac3c:	a0ffffcc 	andi	r3,r20,65535
1010ac40:	1c46b03a 	or	r3,r3,r17
1010ac44:	1880042e 	bgeu	r3,r2,1010ac58 <__umoddi3+0x12c>
1010ac48:	1cc7883a 	add	r3,r3,r19
1010ac4c:	1cc00236 	bltu	r3,r19,1010ac58 <__umoddi3+0x12c>
1010ac50:	1880012e 	bgeu	r3,r2,1010ac58 <__umoddi3+0x12c>
1010ac54:	1cc7883a 	add	r3,r3,r19
1010ac58:	1885c83a 	sub	r2,r3,r2
1010ac5c:	1484d83a 	srl	r2,r2,r18
1010ac60:	0007883a 	mov	r3,zero
1010ac64:	00005306 	br	1010adb4 <__umoddi3+0x288>
1010ac68:	29c05036 	bltu	r5,r7,1010adac <__umoddi3+0x280>
1010ac6c:	00bfffd4 	movui	r2,65535
1010ac70:	11c05c2e 	bgeu	r2,r7,1010ade4 <__umoddi3+0x2b8>
1010ac74:	00804034 	movhi	r2,256
1010ac78:	10bfffc4 	addi	r2,r2,-1
1010ac7c:	11c10636 	bltu	r2,r7,1010b098 <__umoddi3+0x56c>
1010ac80:	01000404 	movi	r4,16
1010ac84:	3904d83a 	srl	r2,r7,r4
1010ac88:	00c40474 	movhi	r3,4113
1010ac8c:	18c0ca04 	addi	r3,r3,808
1010ac90:	1885883a 	add	r2,r3,r2
1010ac94:	14c00003 	ldbu	r19,0(r2)
1010ac98:	00c00804 	movi	r3,32
1010ac9c:	9927883a 	add	r19,r19,r4
1010aca0:	1ce9c83a 	sub	r20,r3,r19
1010aca4:	a0005c1e 	bne	r20,zero,1010ae18 <__umoddi3+0x2ec>
1010aca8:	3c400136 	bltu	r7,r17,1010acb0 <__umoddi3+0x184>
1010acac:	81810a36 	bltu	r16,r6,1010b0d8 <__umoddi3+0x5ac>
1010acb0:	8185c83a 	sub	r2,r16,r6
1010acb4:	89e3c83a 	sub	r17,r17,r7
1010acb8:	8089803a 	cmpltu	r4,r16,r2
1010acbc:	8939c83a 	sub	fp,r17,r4
1010acc0:	e007883a 	mov	r3,fp
1010acc4:	00003b06 	br	1010adb4 <__umoddi3+0x288>
1010acc8:	3000041e 	bne	r6,zero,1010acdc <__umoddi3+0x1b0>
1010accc:	000b883a 	mov	r5,zero
1010acd0:	01000044 	movi	r4,1
1010acd4:	0100b4c0 	call	10100b4c <__udivsi3>
1010acd8:	1027883a 	mov	r19,r2
1010acdc:	00bfffd4 	movui	r2,65535
1010ace0:	14c0442e 	bgeu	r2,r19,1010adf4 <__umoddi3+0x2c8>
1010ace4:	00804034 	movhi	r2,256
1010ace8:	10bfffc4 	addi	r2,r2,-1
1010acec:	14c0ec36 	bltu	r2,r19,1010b0a0 <__umoddi3+0x574>
1010acf0:	00800404 	movi	r2,16
1010acf4:	9886d83a 	srl	r3,r19,r2
1010acf8:	01040474 	movhi	r4,4113
1010acfc:	2100ca04 	addi	r4,r4,808
1010ad00:	20c7883a 	add	r3,r4,r3
1010ad04:	18c00003 	ldbu	r3,0(r3)
1010ad08:	1887883a 	add	r3,r3,r2
1010ad0c:	00800804 	movi	r2,32
1010ad10:	10e5c83a 	sub	r18,r2,r3
1010ad14:	9000ab1e 	bne	r18,zero,1010afc4 <__umoddi3+0x498>
1010ad18:	982cd43a 	srli	r22,r19,16
1010ad1c:	8ce3c83a 	sub	r17,r17,r19
1010ad20:	9dffffcc 	andi	r23,r19,65535
1010ad24:	b00b883a 	mov	r5,r22
1010ad28:	8809883a 	mov	r4,r17
1010ad2c:	0100bb00 	call	10100bb0 <__umodsi3>
1010ad30:	b00b883a 	mov	r5,r22
1010ad34:	8809883a 	mov	r4,r17
1010ad38:	102b883a 	mov	r21,r2
1010ad3c:	0100b4c0 	call	10100b4c <__udivsi3>
1010ad40:	b80b883a 	mov	r5,r23
1010ad44:	1009883a 	mov	r4,r2
1010ad48:	0100c080 	call	10100c08 <__mulsi3>
1010ad4c:	a82a943a 	slli	r21,r21,16
1010ad50:	a006d43a 	srli	r3,r20,16
1010ad54:	1d46b03a 	or	r3,r3,r21
1010ad58:	1880042e 	bgeu	r3,r2,1010ad6c <__umoddi3+0x240>
1010ad5c:	1cc7883a 	add	r3,r3,r19
1010ad60:	1cc00236 	bltu	r3,r19,1010ad6c <__umoddi3+0x240>
1010ad64:	1880012e 	bgeu	r3,r2,1010ad6c <__umoddi3+0x240>
1010ad68:	1cc7883a 	add	r3,r3,r19
1010ad6c:	18a1c83a 	sub	r16,r3,r2
1010ad70:	b00b883a 	mov	r5,r22
1010ad74:	8009883a 	mov	r4,r16
1010ad78:	0100bb00 	call	10100bb0 <__umodsi3>
1010ad7c:	1023883a 	mov	r17,r2
1010ad80:	b00b883a 	mov	r5,r22
1010ad84:	8009883a 	mov	r4,r16
1010ad88:	0100b4c0 	call	10100b4c <__udivsi3>
1010ad8c:	8822943a 	slli	r17,r17,16
1010ad90:	b80b883a 	mov	r5,r23
1010ad94:	1009883a 	mov	r4,r2
1010ad98:	0100c080 	call	10100c08 <__mulsi3>
1010ad9c:	a53fffcc 	andi	r20,r20,65535
1010ada0:	a446b03a 	or	r3,r20,r17
1010ada4:	18bfac2e 	bgeu	r3,r2,1010ac58 <__alt_data_end+0xfffeac58>
1010ada8:	003fa706 	br	1010ac48 <__alt_data_end+0xfffeac48>
1010adac:	2005883a 	mov	r2,r4
1010adb0:	2807883a 	mov	r3,r5
1010adb4:	dfc00c17 	ldw	ra,48(sp)
1010adb8:	df000b17 	ldw	fp,44(sp)
1010adbc:	ddc00a17 	ldw	r23,40(sp)
1010adc0:	dd800917 	ldw	r22,36(sp)
1010adc4:	dd400817 	ldw	r21,32(sp)
1010adc8:	dd000717 	ldw	r20,28(sp)
1010adcc:	dcc00617 	ldw	r19,24(sp)
1010add0:	dc800517 	ldw	r18,20(sp)
1010add4:	dc400417 	ldw	r17,16(sp)
1010add8:	dc000317 	ldw	r16,12(sp)
1010addc:	dec00d04 	addi	sp,sp,52
1010ade0:	f800283a 	ret
1010ade4:	04c03fc4 	movi	r19,255
1010ade8:	99c9803a 	cmpltu	r4,r19,r7
1010adec:	200890fa 	slli	r4,r4,3
1010adf0:	003fa406 	br	1010ac84 <__alt_data_end+0xfffeac84>
1010adf4:	00803fc4 	movi	r2,255
1010adf8:	14c5803a 	cmpltu	r2,r2,r19
1010adfc:	100490fa 	slli	r2,r2,3
1010ae00:	003fbc06 	br	1010acf4 <__alt_data_end+0xfffeacf4>
1010ae04:	00804034 	movhi	r2,256
1010ae08:	10bfffc4 	addi	r2,r2,-1
1010ae0c:	1180a636 	bltu	r2,r6,1010b0a8 <__umoddi3+0x57c>
1010ae10:	01000404 	movi	r4,16
1010ae14:	003f5c06 	br	1010ab88 <__alt_data_end+0xfffeab88>
1010ae18:	3d0e983a 	sll	r7,r7,r20
1010ae1c:	34ead83a 	srl	r21,r6,r19
1010ae20:	8cc6d83a 	srl	r3,r17,r19
1010ae24:	8d10983a 	sll	r8,r17,r20
1010ae28:	3d6ab03a 	or	r21,r7,r21
1010ae2c:	a82cd43a 	srli	r22,r21,16
1010ae30:	84e2d83a 	srl	r17,r16,r19
1010ae34:	1809883a 	mov	r4,r3
1010ae38:	b00b883a 	mov	r5,r22
1010ae3c:	8a22b03a 	or	r17,r17,r8
1010ae40:	3524983a 	sll	r18,r6,r20
1010ae44:	dc400015 	stw	r17,0(sp)
1010ae48:	d8c00115 	stw	r3,4(sp)
1010ae4c:	0100bb00 	call	10100bb0 <__umodsi3>
1010ae50:	d8c00117 	ldw	r3,4(sp)
1010ae54:	b00b883a 	mov	r5,r22
1010ae58:	1039883a 	mov	fp,r2
1010ae5c:	1809883a 	mov	r4,r3
1010ae60:	0100b4c0 	call	10100b4c <__udivsi3>
1010ae64:	adffffcc 	andi	r23,r21,65535
1010ae68:	100b883a 	mov	r5,r2
1010ae6c:	b809883a 	mov	r4,r23
1010ae70:	1023883a 	mov	r17,r2
1010ae74:	0100c080 	call	10100c08 <__mulsi3>
1010ae78:	d9400017 	ldw	r5,0(sp)
1010ae7c:	e008943a 	slli	r4,fp,16
1010ae80:	8520983a 	sll	r16,r16,r20
1010ae84:	2806d43a 	srli	r3,r5,16
1010ae88:	1906b03a 	or	r3,r3,r4
1010ae8c:	1880042e 	bgeu	r3,r2,1010aea0 <__umoddi3+0x374>
1010ae90:	1d47883a 	add	r3,r3,r21
1010ae94:	893fffc4 	addi	r4,r17,-1
1010ae98:	1d40892e 	bgeu	r3,r21,1010b0c0 <__umoddi3+0x594>
1010ae9c:	2023883a 	mov	r17,r4
1010aea0:	18b9c83a 	sub	fp,r3,r2
1010aea4:	b00b883a 	mov	r5,r22
1010aea8:	e009883a 	mov	r4,fp
1010aeac:	0100bb00 	call	10100bb0 <__umodsi3>
1010aeb0:	b00b883a 	mov	r5,r22
1010aeb4:	e009883a 	mov	r4,fp
1010aeb8:	d8800215 	stw	r2,8(sp)
1010aebc:	0100b4c0 	call	10100b4c <__udivsi3>
1010aec0:	100b883a 	mov	r5,r2
1010aec4:	b809883a 	mov	r4,r23
1010aec8:	102d883a 	mov	r22,r2
1010aecc:	0100c080 	call	10100c08 <__mulsi3>
1010aed0:	d9800217 	ldw	r6,8(sp)
1010aed4:	d8c00017 	ldw	r3,0(sp)
1010aed8:	300c943a 	slli	r6,r6,16
1010aedc:	1a3fffcc 	andi	r8,r3,65535
1010aee0:	4190b03a 	or	r8,r8,r6
1010aee4:	4080042e 	bgeu	r8,r2,1010aef8 <__umoddi3+0x3cc>
1010aee8:	4551883a 	add	r8,r8,r21
1010aeec:	b0ffffc4 	addi	r3,r22,-1
1010aef0:	45406f2e 	bgeu	r8,r21,1010b0b0 <__umoddi3+0x584>
1010aef4:	182d883a 	mov	r22,r3
1010aef8:	880e943a 	slli	r7,r17,16
1010aefc:	9006d43a 	srli	r3,r18,16
1010af00:	91bfffcc 	andi	r6,r18,65535
1010af04:	3dacb03a 	or	r22,r7,r22
1010af08:	b02ed43a 	srli	r23,r22,16
1010af0c:	b5bfffcc 	andi	r22,r22,65535
1010af10:	300b883a 	mov	r5,r6
1010af14:	b009883a 	mov	r4,r22
1010af18:	40a3c83a 	sub	r17,r8,r2
1010af1c:	d8c00115 	stw	r3,4(sp)
1010af20:	d9800215 	stw	r6,8(sp)
1010af24:	0100c080 	call	10100c08 <__mulsi3>
1010af28:	d9800217 	ldw	r6,8(sp)
1010af2c:	b809883a 	mov	r4,r23
1010af30:	1039883a 	mov	fp,r2
1010af34:	300b883a 	mov	r5,r6
1010af38:	0100c080 	call	10100c08 <__mulsi3>
1010af3c:	d8c00117 	ldw	r3,4(sp)
1010af40:	b809883a 	mov	r4,r23
1010af44:	d8800215 	stw	r2,8(sp)
1010af48:	180b883a 	mov	r5,r3
1010af4c:	0100c080 	call	10100c08 <__mulsi3>
1010af50:	d8c00117 	ldw	r3,4(sp)
1010af54:	b009883a 	mov	r4,r22
1010af58:	102f883a 	mov	r23,r2
1010af5c:	180b883a 	mov	r5,r3
1010af60:	0100c080 	call	10100c08 <__mulsi3>
1010af64:	d9800217 	ldw	r6,8(sp)
1010af68:	e006d43a 	srli	r3,fp,16
1010af6c:	1185883a 	add	r2,r2,r6
1010af70:	1885883a 	add	r2,r3,r2
1010af74:	1180022e 	bgeu	r2,r6,1010af80 <__umoddi3+0x454>
1010af78:	00c00074 	movhi	r3,1
1010af7c:	b8ef883a 	add	r23,r23,r3
1010af80:	1006d43a 	srli	r3,r2,16
1010af84:	1004943a 	slli	r2,r2,16
1010af88:	e73fffcc 	andi	fp,fp,65535
1010af8c:	1dc7883a 	add	r3,r3,r23
1010af90:	1739883a 	add	fp,r2,fp
1010af94:	88c03a36 	bltu	r17,r3,1010b080 <__umoddi3+0x554>
1010af98:	88c05126 	beq	r17,r3,1010b0e0 <__umoddi3+0x5b4>
1010af9c:	88c9c83a 	sub	r4,r17,r3
1010afa0:	e00f883a 	mov	r7,fp
1010afa4:	81cfc83a 	sub	r7,r16,r7
1010afa8:	81c7803a 	cmpltu	r3,r16,r7
1010afac:	20c7c83a 	sub	r3,r4,r3
1010afb0:	1cc4983a 	sll	r2,r3,r19
1010afb4:	3d0ed83a 	srl	r7,r7,r20
1010afb8:	1d06d83a 	srl	r3,r3,r20
1010afbc:	11c4b03a 	or	r2,r2,r7
1010afc0:	003f7c06 	br	1010adb4 <__alt_data_end+0xfffeadb4>
1010afc4:	9ca6983a 	sll	r19,r19,r18
1010afc8:	88f8d83a 	srl	fp,r17,r3
1010afcc:	80c4d83a 	srl	r2,r16,r3
1010afd0:	982cd43a 	srli	r22,r19,16
1010afd4:	8ca2983a 	sll	r17,r17,r18
1010afd8:	e009883a 	mov	r4,fp
1010afdc:	b00b883a 	mov	r5,r22
1010afe0:	146ab03a 	or	r21,r2,r17
1010afe4:	0100bb00 	call	10100bb0 <__umodsi3>
1010afe8:	b00b883a 	mov	r5,r22
1010afec:	e009883a 	mov	r4,fp
1010aff0:	1029883a 	mov	r20,r2
1010aff4:	9dffffcc 	andi	r23,r19,65535
1010aff8:	0100b4c0 	call	10100b4c <__udivsi3>
1010affc:	b809883a 	mov	r4,r23
1010b000:	100b883a 	mov	r5,r2
1010b004:	0100c080 	call	10100c08 <__mulsi3>
1010b008:	a008943a 	slli	r4,r20,16
1010b00c:	a806d43a 	srli	r3,r21,16
1010b010:	84a8983a 	sll	r20,r16,r18
1010b014:	1906b03a 	or	r3,r3,r4
1010b018:	1880042e 	bgeu	r3,r2,1010b02c <__umoddi3+0x500>
1010b01c:	1cc7883a 	add	r3,r3,r19
1010b020:	1cc00236 	bltu	r3,r19,1010b02c <__umoddi3+0x500>
1010b024:	1880012e 	bgeu	r3,r2,1010b02c <__umoddi3+0x500>
1010b028:	1cc7883a 	add	r3,r3,r19
1010b02c:	18a3c83a 	sub	r17,r3,r2
1010b030:	b00b883a 	mov	r5,r22
1010b034:	8809883a 	mov	r4,r17
1010b038:	0100bb00 	call	10100bb0 <__umodsi3>
1010b03c:	b00b883a 	mov	r5,r22
1010b040:	8809883a 	mov	r4,r17
1010b044:	1021883a 	mov	r16,r2
1010b048:	0100b4c0 	call	10100b4c <__udivsi3>
1010b04c:	100b883a 	mov	r5,r2
1010b050:	b809883a 	mov	r4,r23
1010b054:	8020943a 	slli	r16,r16,16
1010b058:	0100c080 	call	10100c08 <__mulsi3>
1010b05c:	a8ffffcc 	andi	r3,r21,65535
1010b060:	1c06b03a 	or	r3,r3,r16
1010b064:	1880042e 	bgeu	r3,r2,1010b078 <__umoddi3+0x54c>
1010b068:	1cc7883a 	add	r3,r3,r19
1010b06c:	1cc00236 	bltu	r3,r19,1010b078 <__umoddi3+0x54c>
1010b070:	1880012e 	bgeu	r3,r2,1010b078 <__umoddi3+0x54c>
1010b074:	1cc7883a 	add	r3,r3,r19
1010b078:	18a3c83a 	sub	r17,r3,r2
1010b07c:	003f2906 	br	1010ad24 <__alt_data_end+0xfffead24>
1010b080:	e48fc83a 	sub	r7,fp,r18
1010b084:	1d49c83a 	sub	r4,r3,r21
1010b088:	e1f9803a 	cmpltu	fp,fp,r7
1010b08c:	2739c83a 	sub	fp,r4,fp
1010b090:	8f09c83a 	sub	r4,r17,fp
1010b094:	003fc306 	br	1010afa4 <__alt_data_end+0xfffeafa4>
1010b098:	01000604 	movi	r4,24
1010b09c:	003ef906 	br	1010ac84 <__alt_data_end+0xfffeac84>
1010b0a0:	00800604 	movi	r2,24
1010b0a4:	003f1306 	br	1010acf4 <__alt_data_end+0xfffeacf4>
1010b0a8:	01000604 	movi	r4,24
1010b0ac:	003eb606 	br	1010ab88 <__alt_data_end+0xfffeab88>
1010b0b0:	40bf902e 	bgeu	r8,r2,1010aef4 <__alt_data_end+0xfffeaef4>
1010b0b4:	b5bfff84 	addi	r22,r22,-2
1010b0b8:	4551883a 	add	r8,r8,r21
1010b0bc:	003f8e06 	br	1010aef8 <__alt_data_end+0xfffeaef8>
1010b0c0:	18bf762e 	bgeu	r3,r2,1010ae9c <__alt_data_end+0xfffeae9c>
1010b0c4:	8c7fff84 	addi	r17,r17,-2
1010b0c8:	1d47883a 	add	r3,r3,r21
1010b0cc:	003f7406 	br	1010aea0 <__alt_data_end+0xfffeaea0>
1010b0d0:	1cc7883a 	add	r3,r3,r19
1010b0d4:	003ecd06 	br	1010ac0c <__alt_data_end+0xfffeac0c>
1010b0d8:	8005883a 	mov	r2,r16
1010b0dc:	003ef806 	br	1010acc0 <__alt_data_end+0xfffeacc0>
1010b0e0:	873fe736 	bltu	r16,fp,1010b080 <__alt_data_end+0xfffeb080>
1010b0e4:	e00f883a 	mov	r7,fp
1010b0e8:	0009883a 	mov	r4,zero
1010b0ec:	003fad06 	br	1010afa4 <__alt_data_end+0xfffeafa4>

1010b0f0 <__adddf3>:
1010b0f0:	02c00434 	movhi	r11,16
1010b0f4:	5affffc4 	addi	r11,r11,-1
1010b0f8:	2806d7fa 	srli	r3,r5,31
1010b0fc:	2ad4703a 	and	r10,r5,r11
1010b100:	3ad2703a 	and	r9,r7,r11
1010b104:	3804d53a 	srli	r2,r7,20
1010b108:	3018d77a 	srli	r12,r6,29
1010b10c:	280ad53a 	srli	r5,r5,20
1010b110:	501490fa 	slli	r10,r10,3
1010b114:	2010d77a 	srli	r8,r4,29
1010b118:	481290fa 	slli	r9,r9,3
1010b11c:	380ed7fa 	srli	r7,r7,31
1010b120:	defffb04 	addi	sp,sp,-20
1010b124:	dc800215 	stw	r18,8(sp)
1010b128:	dc400115 	stw	r17,4(sp)
1010b12c:	dc000015 	stw	r16,0(sp)
1010b130:	dfc00415 	stw	ra,16(sp)
1010b134:	dcc00315 	stw	r19,12(sp)
1010b138:	1c803fcc 	andi	r18,r3,255
1010b13c:	2c01ffcc 	andi	r16,r5,2047
1010b140:	5210b03a 	or	r8,r10,r8
1010b144:	202290fa 	slli	r17,r4,3
1010b148:	1081ffcc 	andi	r2,r2,2047
1010b14c:	4b12b03a 	or	r9,r9,r12
1010b150:	300c90fa 	slli	r6,r6,3
1010b154:	91c07526 	beq	r18,r7,1010b32c <__adddf3+0x23c>
1010b158:	8087c83a 	sub	r3,r16,r2
1010b15c:	00c0ab0e 	bge	zero,r3,1010b40c <__adddf3+0x31c>
1010b160:	10002a1e 	bne	r2,zero,1010b20c <__adddf3+0x11c>
1010b164:	4984b03a 	or	r2,r9,r6
1010b168:	1000961e 	bne	r2,zero,1010b3c4 <__adddf3+0x2d4>
1010b16c:	888001cc 	andi	r2,r17,7
1010b170:	10000726 	beq	r2,zero,1010b190 <__adddf3+0xa0>
1010b174:	888003cc 	andi	r2,r17,15
1010b178:	00c00104 	movi	r3,4
1010b17c:	10c00426 	beq	r2,r3,1010b190 <__adddf3+0xa0>
1010b180:	88c7883a 	add	r3,r17,r3
1010b184:	1c63803a 	cmpltu	r17,r3,r17
1010b188:	4451883a 	add	r8,r8,r17
1010b18c:	1823883a 	mov	r17,r3
1010b190:	4080202c 	andhi	r2,r8,128
1010b194:	10005926 	beq	r2,zero,1010b2fc <__adddf3+0x20c>
1010b198:	84000044 	addi	r16,r16,1
1010b19c:	0081ffc4 	movi	r2,2047
1010b1a0:	8080ba26 	beq	r16,r2,1010b48c <__adddf3+0x39c>
1010b1a4:	00bfe034 	movhi	r2,65408
1010b1a8:	10bfffc4 	addi	r2,r2,-1
1010b1ac:	4090703a 	and	r8,r8,r2
1010b1b0:	4004977a 	slli	r2,r8,29
1010b1b4:	4010927a 	slli	r8,r8,9
1010b1b8:	8822d0fa 	srli	r17,r17,3
1010b1bc:	8401ffcc 	andi	r16,r16,2047
1010b1c0:	4010d33a 	srli	r8,r8,12
1010b1c4:	9007883a 	mov	r3,r18
1010b1c8:	1444b03a 	or	r2,r2,r17
1010b1cc:	8401ffcc 	andi	r16,r16,2047
1010b1d0:	8020953a 	slli	r16,r16,20
1010b1d4:	18c03fcc 	andi	r3,r3,255
1010b1d8:	01000434 	movhi	r4,16
1010b1dc:	213fffc4 	addi	r4,r4,-1
1010b1e0:	180697fa 	slli	r3,r3,31
1010b1e4:	4110703a 	and	r8,r8,r4
1010b1e8:	4410b03a 	or	r8,r8,r16
1010b1ec:	40c6b03a 	or	r3,r8,r3
1010b1f0:	dfc00417 	ldw	ra,16(sp)
1010b1f4:	dcc00317 	ldw	r19,12(sp)
1010b1f8:	dc800217 	ldw	r18,8(sp)
1010b1fc:	dc400117 	ldw	r17,4(sp)
1010b200:	dc000017 	ldw	r16,0(sp)
1010b204:	dec00504 	addi	sp,sp,20
1010b208:	f800283a 	ret
1010b20c:	0081ffc4 	movi	r2,2047
1010b210:	80bfd626 	beq	r16,r2,1010b16c <__alt_data_end+0xfffeb16c>
1010b214:	4a402034 	orhi	r9,r9,128
1010b218:	00800e04 	movi	r2,56
1010b21c:	10c09f16 	blt	r2,r3,1010b49c <__adddf3+0x3ac>
1010b220:	008007c4 	movi	r2,31
1010b224:	10c0c216 	blt	r2,r3,1010b530 <__adddf3+0x440>
1010b228:	00800804 	movi	r2,32
1010b22c:	10c5c83a 	sub	r2,r2,r3
1010b230:	488a983a 	sll	r5,r9,r2
1010b234:	30c8d83a 	srl	r4,r6,r3
1010b238:	3084983a 	sll	r2,r6,r2
1010b23c:	48c6d83a 	srl	r3,r9,r3
1010b240:	290cb03a 	or	r6,r5,r4
1010b244:	1004c03a 	cmpne	r2,r2,zero
1010b248:	308cb03a 	or	r6,r6,r2
1010b24c:	898dc83a 	sub	r6,r17,r6
1010b250:	89a3803a 	cmpltu	r17,r17,r6
1010b254:	40d1c83a 	sub	r8,r8,r3
1010b258:	4451c83a 	sub	r8,r8,r17
1010b25c:	3023883a 	mov	r17,r6
1010b260:	4080202c 	andhi	r2,r8,128
1010b264:	10002326 	beq	r2,zero,1010b2f4 <__adddf3+0x204>
1010b268:	04c02034 	movhi	r19,128
1010b26c:	9cffffc4 	addi	r19,r19,-1
1010b270:	44e6703a 	and	r19,r8,r19
1010b274:	98007626 	beq	r19,zero,1010b450 <__adddf3+0x360>
1010b278:	9809883a 	mov	r4,r19
1010b27c:	010d9300 	call	1010d930 <__clzsi2>
1010b280:	10fffe04 	addi	r3,r2,-8
1010b284:	010007c4 	movi	r4,31
1010b288:	20c07716 	blt	r4,r3,1010b468 <__adddf3+0x378>
1010b28c:	00800804 	movi	r2,32
1010b290:	10c5c83a 	sub	r2,r2,r3
1010b294:	8884d83a 	srl	r2,r17,r2
1010b298:	98d0983a 	sll	r8,r19,r3
1010b29c:	88e2983a 	sll	r17,r17,r3
1010b2a0:	1204b03a 	or	r2,r2,r8
1010b2a4:	1c007416 	blt	r3,r16,1010b478 <__adddf3+0x388>
1010b2a8:	1c21c83a 	sub	r16,r3,r16
1010b2ac:	82000044 	addi	r8,r16,1
1010b2b0:	00c007c4 	movi	r3,31
1010b2b4:	1a009116 	blt	r3,r8,1010b4fc <__adddf3+0x40c>
1010b2b8:	00c00804 	movi	r3,32
1010b2bc:	1a07c83a 	sub	r3,r3,r8
1010b2c0:	8a08d83a 	srl	r4,r17,r8
1010b2c4:	88e2983a 	sll	r17,r17,r3
1010b2c8:	10c6983a 	sll	r3,r2,r3
1010b2cc:	1210d83a 	srl	r8,r2,r8
1010b2d0:	8804c03a 	cmpne	r2,r17,zero
1010b2d4:	1906b03a 	or	r3,r3,r4
1010b2d8:	18a2b03a 	or	r17,r3,r2
1010b2dc:	0021883a 	mov	r16,zero
1010b2e0:	003fa206 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b2e4:	1890b03a 	or	r8,r3,r2
1010b2e8:	40017d26 	beq	r8,zero,1010b8e0 <__adddf3+0x7f0>
1010b2ec:	1011883a 	mov	r8,r2
1010b2f0:	1823883a 	mov	r17,r3
1010b2f4:	888001cc 	andi	r2,r17,7
1010b2f8:	103f9e1e 	bne	r2,zero,1010b174 <__alt_data_end+0xfffeb174>
1010b2fc:	4004977a 	slli	r2,r8,29
1010b300:	8822d0fa 	srli	r17,r17,3
1010b304:	4010d0fa 	srli	r8,r8,3
1010b308:	9007883a 	mov	r3,r18
1010b30c:	1444b03a 	or	r2,r2,r17
1010b310:	0101ffc4 	movi	r4,2047
1010b314:	81002426 	beq	r16,r4,1010b3a8 <__adddf3+0x2b8>
1010b318:	8120703a 	and	r16,r16,r4
1010b31c:	01000434 	movhi	r4,16
1010b320:	213fffc4 	addi	r4,r4,-1
1010b324:	4110703a 	and	r8,r8,r4
1010b328:	003fa806 	br	1010b1cc <__alt_data_end+0xfffeb1cc>
1010b32c:	8089c83a 	sub	r4,r16,r2
1010b330:	01005e0e 	bge	zero,r4,1010b4ac <__adddf3+0x3bc>
1010b334:	10002b26 	beq	r2,zero,1010b3e4 <__adddf3+0x2f4>
1010b338:	0081ffc4 	movi	r2,2047
1010b33c:	80bf8b26 	beq	r16,r2,1010b16c <__alt_data_end+0xfffeb16c>
1010b340:	4a402034 	orhi	r9,r9,128
1010b344:	00800e04 	movi	r2,56
1010b348:	1100a40e 	bge	r2,r4,1010b5dc <__adddf3+0x4ec>
1010b34c:	498cb03a 	or	r6,r9,r6
1010b350:	300ac03a 	cmpne	r5,r6,zero
1010b354:	0013883a 	mov	r9,zero
1010b358:	2c4b883a 	add	r5,r5,r17
1010b35c:	2c63803a 	cmpltu	r17,r5,r17
1010b360:	4a11883a 	add	r8,r9,r8
1010b364:	8a11883a 	add	r8,r17,r8
1010b368:	2823883a 	mov	r17,r5
1010b36c:	4080202c 	andhi	r2,r8,128
1010b370:	103fe026 	beq	r2,zero,1010b2f4 <__alt_data_end+0xfffeb2f4>
1010b374:	84000044 	addi	r16,r16,1
1010b378:	0081ffc4 	movi	r2,2047
1010b37c:	8080d226 	beq	r16,r2,1010b6c8 <__adddf3+0x5d8>
1010b380:	00bfe034 	movhi	r2,65408
1010b384:	10bfffc4 	addi	r2,r2,-1
1010b388:	4090703a 	and	r8,r8,r2
1010b38c:	880ad07a 	srli	r5,r17,1
1010b390:	400897fa 	slli	r4,r8,31
1010b394:	88c0004c 	andi	r3,r17,1
1010b398:	28e2b03a 	or	r17,r5,r3
1010b39c:	4010d07a 	srli	r8,r8,1
1010b3a0:	2462b03a 	or	r17,r4,r17
1010b3a4:	003f7106 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b3a8:	4088b03a 	or	r4,r8,r2
1010b3ac:	20014526 	beq	r4,zero,1010b8c4 <__adddf3+0x7d4>
1010b3b0:	01000434 	movhi	r4,16
1010b3b4:	42000234 	orhi	r8,r8,8
1010b3b8:	213fffc4 	addi	r4,r4,-1
1010b3bc:	4110703a 	and	r8,r8,r4
1010b3c0:	003f8206 	br	1010b1cc <__alt_data_end+0xfffeb1cc>
1010b3c4:	18ffffc4 	addi	r3,r3,-1
1010b3c8:	1800491e 	bne	r3,zero,1010b4f0 <__adddf3+0x400>
1010b3cc:	898bc83a 	sub	r5,r17,r6
1010b3d0:	8963803a 	cmpltu	r17,r17,r5
1010b3d4:	4251c83a 	sub	r8,r8,r9
1010b3d8:	4451c83a 	sub	r8,r8,r17
1010b3dc:	2823883a 	mov	r17,r5
1010b3e0:	003f9f06 	br	1010b260 <__alt_data_end+0xfffeb260>
1010b3e4:	4984b03a 	or	r2,r9,r6
1010b3e8:	103f6026 	beq	r2,zero,1010b16c <__alt_data_end+0xfffeb16c>
1010b3ec:	213fffc4 	addi	r4,r4,-1
1010b3f0:	2000931e 	bne	r4,zero,1010b640 <__adddf3+0x550>
1010b3f4:	898d883a 	add	r6,r17,r6
1010b3f8:	3463803a 	cmpltu	r17,r6,r17
1010b3fc:	4251883a 	add	r8,r8,r9
1010b400:	8a11883a 	add	r8,r17,r8
1010b404:	3023883a 	mov	r17,r6
1010b408:	003fd806 	br	1010b36c <__alt_data_end+0xfffeb36c>
1010b40c:	1800541e 	bne	r3,zero,1010b560 <__adddf3+0x470>
1010b410:	80800044 	addi	r2,r16,1
1010b414:	1081ffcc 	andi	r2,r2,2047
1010b418:	00c00044 	movi	r3,1
1010b41c:	1880a00e 	bge	r3,r2,1010b6a0 <__adddf3+0x5b0>
1010b420:	8989c83a 	sub	r4,r17,r6
1010b424:	8905803a 	cmpltu	r2,r17,r4
1010b428:	4267c83a 	sub	r19,r8,r9
1010b42c:	98a7c83a 	sub	r19,r19,r2
1010b430:	9880202c 	andhi	r2,r19,128
1010b434:	10006326 	beq	r2,zero,1010b5c4 <__adddf3+0x4d4>
1010b438:	3463c83a 	sub	r17,r6,r17
1010b43c:	4a07c83a 	sub	r3,r9,r8
1010b440:	344d803a 	cmpltu	r6,r6,r17
1010b444:	19a7c83a 	sub	r19,r3,r6
1010b448:	3825883a 	mov	r18,r7
1010b44c:	983f8a1e 	bne	r19,zero,1010b278 <__alt_data_end+0xfffeb278>
1010b450:	8809883a 	mov	r4,r17
1010b454:	010d9300 	call	1010d930 <__clzsi2>
1010b458:	10800804 	addi	r2,r2,32
1010b45c:	10fffe04 	addi	r3,r2,-8
1010b460:	010007c4 	movi	r4,31
1010b464:	20ff890e 	bge	r4,r3,1010b28c <__alt_data_end+0xfffeb28c>
1010b468:	10bff604 	addi	r2,r2,-40
1010b46c:	8884983a 	sll	r2,r17,r2
1010b470:	0023883a 	mov	r17,zero
1010b474:	1c3f8c0e 	bge	r3,r16,1010b2a8 <__alt_data_end+0xfffeb2a8>
1010b478:	023fe034 	movhi	r8,65408
1010b47c:	423fffc4 	addi	r8,r8,-1
1010b480:	80e1c83a 	sub	r16,r16,r3
1010b484:	1210703a 	and	r8,r2,r8
1010b488:	003f3806 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b48c:	9007883a 	mov	r3,r18
1010b490:	0011883a 	mov	r8,zero
1010b494:	0005883a 	mov	r2,zero
1010b498:	003f4c06 	br	1010b1cc <__alt_data_end+0xfffeb1cc>
1010b49c:	498cb03a 	or	r6,r9,r6
1010b4a0:	300cc03a 	cmpne	r6,r6,zero
1010b4a4:	0007883a 	mov	r3,zero
1010b4a8:	003f6806 	br	1010b24c <__alt_data_end+0xfffeb24c>
1010b4ac:	20009c1e 	bne	r4,zero,1010b720 <__adddf3+0x630>
1010b4b0:	80800044 	addi	r2,r16,1
1010b4b4:	1141ffcc 	andi	r5,r2,2047
1010b4b8:	01000044 	movi	r4,1
1010b4bc:	2140670e 	bge	r4,r5,1010b65c <__adddf3+0x56c>
1010b4c0:	0101ffc4 	movi	r4,2047
1010b4c4:	11007f26 	beq	r2,r4,1010b6c4 <__adddf3+0x5d4>
1010b4c8:	898d883a 	add	r6,r17,r6
1010b4cc:	4247883a 	add	r3,r8,r9
1010b4d0:	3451803a 	cmpltu	r8,r6,r17
1010b4d4:	40d1883a 	add	r8,r8,r3
1010b4d8:	402297fa 	slli	r17,r8,31
1010b4dc:	300cd07a 	srli	r6,r6,1
1010b4e0:	4010d07a 	srli	r8,r8,1
1010b4e4:	1021883a 	mov	r16,r2
1010b4e8:	89a2b03a 	or	r17,r17,r6
1010b4ec:	003f1f06 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b4f0:	0081ffc4 	movi	r2,2047
1010b4f4:	80bf481e 	bne	r16,r2,1010b218 <__alt_data_end+0xfffeb218>
1010b4f8:	003f1c06 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b4fc:	843ff844 	addi	r16,r16,-31
1010b500:	01000804 	movi	r4,32
1010b504:	1406d83a 	srl	r3,r2,r16
1010b508:	41005026 	beq	r8,r4,1010b64c <__adddf3+0x55c>
1010b50c:	01001004 	movi	r4,64
1010b510:	2211c83a 	sub	r8,r4,r8
1010b514:	1204983a 	sll	r2,r2,r8
1010b518:	88a2b03a 	or	r17,r17,r2
1010b51c:	8822c03a 	cmpne	r17,r17,zero
1010b520:	1c62b03a 	or	r17,r3,r17
1010b524:	0011883a 	mov	r8,zero
1010b528:	0021883a 	mov	r16,zero
1010b52c:	003f7106 	br	1010b2f4 <__alt_data_end+0xfffeb2f4>
1010b530:	193ff804 	addi	r4,r3,-32
1010b534:	00800804 	movi	r2,32
1010b538:	4908d83a 	srl	r4,r9,r4
1010b53c:	18804526 	beq	r3,r2,1010b654 <__adddf3+0x564>
1010b540:	00801004 	movi	r2,64
1010b544:	10c5c83a 	sub	r2,r2,r3
1010b548:	4886983a 	sll	r3,r9,r2
1010b54c:	198cb03a 	or	r6,r3,r6
1010b550:	300cc03a 	cmpne	r6,r6,zero
1010b554:	218cb03a 	or	r6,r4,r6
1010b558:	0007883a 	mov	r3,zero
1010b55c:	003f3b06 	br	1010b24c <__alt_data_end+0xfffeb24c>
1010b560:	80002a26 	beq	r16,zero,1010b60c <__adddf3+0x51c>
1010b564:	0101ffc4 	movi	r4,2047
1010b568:	11006826 	beq	r2,r4,1010b70c <__adddf3+0x61c>
1010b56c:	00c7c83a 	sub	r3,zero,r3
1010b570:	42002034 	orhi	r8,r8,128
1010b574:	01000e04 	movi	r4,56
1010b578:	20c07c16 	blt	r4,r3,1010b76c <__adddf3+0x67c>
1010b57c:	010007c4 	movi	r4,31
1010b580:	20c0da16 	blt	r4,r3,1010b8ec <__adddf3+0x7fc>
1010b584:	01000804 	movi	r4,32
1010b588:	20c9c83a 	sub	r4,r4,r3
1010b58c:	4114983a 	sll	r10,r8,r4
1010b590:	88cad83a 	srl	r5,r17,r3
1010b594:	8908983a 	sll	r4,r17,r4
1010b598:	40c6d83a 	srl	r3,r8,r3
1010b59c:	5162b03a 	or	r17,r10,r5
1010b5a0:	2008c03a 	cmpne	r4,r4,zero
1010b5a4:	8922b03a 	or	r17,r17,r4
1010b5a8:	3463c83a 	sub	r17,r6,r17
1010b5ac:	48c7c83a 	sub	r3,r9,r3
1010b5b0:	344d803a 	cmpltu	r6,r6,r17
1010b5b4:	1991c83a 	sub	r8,r3,r6
1010b5b8:	1021883a 	mov	r16,r2
1010b5bc:	3825883a 	mov	r18,r7
1010b5c0:	003f2706 	br	1010b260 <__alt_data_end+0xfffeb260>
1010b5c4:	24d0b03a 	or	r8,r4,r19
1010b5c8:	40001b1e 	bne	r8,zero,1010b638 <__adddf3+0x548>
1010b5cc:	0005883a 	mov	r2,zero
1010b5d0:	0007883a 	mov	r3,zero
1010b5d4:	0021883a 	mov	r16,zero
1010b5d8:	003f4d06 	br	1010b310 <__alt_data_end+0xfffeb310>
1010b5dc:	008007c4 	movi	r2,31
1010b5e0:	11003c16 	blt	r2,r4,1010b6d4 <__adddf3+0x5e4>
1010b5e4:	00800804 	movi	r2,32
1010b5e8:	1105c83a 	sub	r2,r2,r4
1010b5ec:	488e983a 	sll	r7,r9,r2
1010b5f0:	310ad83a 	srl	r5,r6,r4
1010b5f4:	3084983a 	sll	r2,r6,r2
1010b5f8:	4912d83a 	srl	r9,r9,r4
1010b5fc:	394ab03a 	or	r5,r7,r5
1010b600:	1004c03a 	cmpne	r2,r2,zero
1010b604:	288ab03a 	or	r5,r5,r2
1010b608:	003f5306 	br	1010b358 <__alt_data_end+0xfffeb358>
1010b60c:	4448b03a 	or	r4,r8,r17
1010b610:	20003e26 	beq	r4,zero,1010b70c <__adddf3+0x61c>
1010b614:	00c6303a 	nor	r3,zero,r3
1010b618:	18003a1e 	bne	r3,zero,1010b704 <__adddf3+0x614>
1010b61c:	3463c83a 	sub	r17,r6,r17
1010b620:	4a07c83a 	sub	r3,r9,r8
1010b624:	344d803a 	cmpltu	r6,r6,r17
1010b628:	1991c83a 	sub	r8,r3,r6
1010b62c:	1021883a 	mov	r16,r2
1010b630:	3825883a 	mov	r18,r7
1010b634:	003f0a06 	br	1010b260 <__alt_data_end+0xfffeb260>
1010b638:	2023883a 	mov	r17,r4
1010b63c:	003f0d06 	br	1010b274 <__alt_data_end+0xfffeb274>
1010b640:	0081ffc4 	movi	r2,2047
1010b644:	80bf3f1e 	bne	r16,r2,1010b344 <__alt_data_end+0xfffeb344>
1010b648:	003ec806 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b64c:	0005883a 	mov	r2,zero
1010b650:	003fb106 	br	1010b518 <__alt_data_end+0xfffeb518>
1010b654:	0007883a 	mov	r3,zero
1010b658:	003fbc06 	br	1010b54c <__alt_data_end+0xfffeb54c>
1010b65c:	4444b03a 	or	r2,r8,r17
1010b660:	8000871e 	bne	r16,zero,1010b880 <__adddf3+0x790>
1010b664:	1000ba26 	beq	r2,zero,1010b950 <__adddf3+0x860>
1010b668:	4984b03a 	or	r2,r9,r6
1010b66c:	103ebf26 	beq	r2,zero,1010b16c <__alt_data_end+0xfffeb16c>
1010b670:	8985883a 	add	r2,r17,r6
1010b674:	4247883a 	add	r3,r8,r9
1010b678:	1451803a 	cmpltu	r8,r2,r17
1010b67c:	40d1883a 	add	r8,r8,r3
1010b680:	40c0202c 	andhi	r3,r8,128
1010b684:	1023883a 	mov	r17,r2
1010b688:	183f1a26 	beq	r3,zero,1010b2f4 <__alt_data_end+0xfffeb2f4>
1010b68c:	00bfe034 	movhi	r2,65408
1010b690:	10bfffc4 	addi	r2,r2,-1
1010b694:	2021883a 	mov	r16,r4
1010b698:	4090703a 	and	r8,r8,r2
1010b69c:	003eb306 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b6a0:	4444b03a 	or	r2,r8,r17
1010b6a4:	8000291e 	bne	r16,zero,1010b74c <__adddf3+0x65c>
1010b6a8:	10004b1e 	bne	r2,zero,1010b7d8 <__adddf3+0x6e8>
1010b6ac:	4990b03a 	or	r8,r9,r6
1010b6b0:	40008b26 	beq	r8,zero,1010b8e0 <__adddf3+0x7f0>
1010b6b4:	4811883a 	mov	r8,r9
1010b6b8:	3023883a 	mov	r17,r6
1010b6bc:	3825883a 	mov	r18,r7
1010b6c0:	003eaa06 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b6c4:	1021883a 	mov	r16,r2
1010b6c8:	0011883a 	mov	r8,zero
1010b6cc:	0005883a 	mov	r2,zero
1010b6d0:	003f0f06 	br	1010b310 <__alt_data_end+0xfffeb310>
1010b6d4:	217ff804 	addi	r5,r4,-32
1010b6d8:	00800804 	movi	r2,32
1010b6dc:	494ad83a 	srl	r5,r9,r5
1010b6e0:	20807d26 	beq	r4,r2,1010b8d8 <__adddf3+0x7e8>
1010b6e4:	00801004 	movi	r2,64
1010b6e8:	1109c83a 	sub	r4,r2,r4
1010b6ec:	4912983a 	sll	r9,r9,r4
1010b6f0:	498cb03a 	or	r6,r9,r6
1010b6f4:	300cc03a 	cmpne	r6,r6,zero
1010b6f8:	298ab03a 	or	r5,r5,r6
1010b6fc:	0013883a 	mov	r9,zero
1010b700:	003f1506 	br	1010b358 <__alt_data_end+0xfffeb358>
1010b704:	0101ffc4 	movi	r4,2047
1010b708:	113f9a1e 	bne	r2,r4,1010b574 <__alt_data_end+0xfffeb574>
1010b70c:	4811883a 	mov	r8,r9
1010b710:	3023883a 	mov	r17,r6
1010b714:	1021883a 	mov	r16,r2
1010b718:	3825883a 	mov	r18,r7
1010b71c:	003e9306 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b720:	8000161e 	bne	r16,zero,1010b77c <__adddf3+0x68c>
1010b724:	444ab03a 	or	r5,r8,r17
1010b728:	28005126 	beq	r5,zero,1010b870 <__adddf3+0x780>
1010b72c:	0108303a 	nor	r4,zero,r4
1010b730:	20004d1e 	bne	r4,zero,1010b868 <__adddf3+0x778>
1010b734:	89a3883a 	add	r17,r17,r6
1010b738:	4253883a 	add	r9,r8,r9
1010b73c:	898d803a 	cmpltu	r6,r17,r6
1010b740:	3251883a 	add	r8,r6,r9
1010b744:	1021883a 	mov	r16,r2
1010b748:	003f0806 	br	1010b36c <__alt_data_end+0xfffeb36c>
1010b74c:	1000301e 	bne	r2,zero,1010b810 <__adddf3+0x720>
1010b750:	4984b03a 	or	r2,r9,r6
1010b754:	10007126 	beq	r2,zero,1010b91c <__adddf3+0x82c>
1010b758:	4811883a 	mov	r8,r9
1010b75c:	3023883a 	mov	r17,r6
1010b760:	3825883a 	mov	r18,r7
1010b764:	0401ffc4 	movi	r16,2047
1010b768:	003e8006 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b76c:	4462b03a 	or	r17,r8,r17
1010b770:	8822c03a 	cmpne	r17,r17,zero
1010b774:	0007883a 	mov	r3,zero
1010b778:	003f8b06 	br	1010b5a8 <__alt_data_end+0xfffeb5a8>
1010b77c:	0141ffc4 	movi	r5,2047
1010b780:	11403b26 	beq	r2,r5,1010b870 <__adddf3+0x780>
1010b784:	0109c83a 	sub	r4,zero,r4
1010b788:	42002034 	orhi	r8,r8,128
1010b78c:	01400e04 	movi	r5,56
1010b790:	29006716 	blt	r5,r4,1010b930 <__adddf3+0x840>
1010b794:	014007c4 	movi	r5,31
1010b798:	29007016 	blt	r5,r4,1010b95c <__adddf3+0x86c>
1010b79c:	01400804 	movi	r5,32
1010b7a0:	290bc83a 	sub	r5,r5,r4
1010b7a4:	4154983a 	sll	r10,r8,r5
1010b7a8:	890ed83a 	srl	r7,r17,r4
1010b7ac:	894a983a 	sll	r5,r17,r5
1010b7b0:	4108d83a 	srl	r4,r8,r4
1010b7b4:	51e2b03a 	or	r17,r10,r7
1010b7b8:	280ac03a 	cmpne	r5,r5,zero
1010b7bc:	8962b03a 	or	r17,r17,r5
1010b7c0:	89a3883a 	add	r17,r17,r6
1010b7c4:	2253883a 	add	r9,r4,r9
1010b7c8:	898d803a 	cmpltu	r6,r17,r6
1010b7cc:	3251883a 	add	r8,r6,r9
1010b7d0:	1021883a 	mov	r16,r2
1010b7d4:	003ee506 	br	1010b36c <__alt_data_end+0xfffeb36c>
1010b7d8:	4984b03a 	or	r2,r9,r6
1010b7dc:	103e6326 	beq	r2,zero,1010b16c <__alt_data_end+0xfffeb16c>
1010b7e0:	8987c83a 	sub	r3,r17,r6
1010b7e4:	88c9803a 	cmpltu	r4,r17,r3
1010b7e8:	4245c83a 	sub	r2,r8,r9
1010b7ec:	1105c83a 	sub	r2,r2,r4
1010b7f0:	1100202c 	andhi	r4,r2,128
1010b7f4:	203ebb26 	beq	r4,zero,1010b2e4 <__alt_data_end+0xfffeb2e4>
1010b7f8:	3463c83a 	sub	r17,r6,r17
1010b7fc:	4a07c83a 	sub	r3,r9,r8
1010b800:	344d803a 	cmpltu	r6,r6,r17
1010b804:	1991c83a 	sub	r8,r3,r6
1010b808:	3825883a 	mov	r18,r7
1010b80c:	003e5706 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b810:	4984b03a 	or	r2,r9,r6
1010b814:	10002e26 	beq	r2,zero,1010b8d0 <__adddf3+0x7e0>
1010b818:	4004d0fa 	srli	r2,r8,3
1010b81c:	8822d0fa 	srli	r17,r17,3
1010b820:	4010977a 	slli	r8,r8,29
1010b824:	10c0022c 	andhi	r3,r2,8
1010b828:	4462b03a 	or	r17,r8,r17
1010b82c:	18000826 	beq	r3,zero,1010b850 <__adddf3+0x760>
1010b830:	4808d0fa 	srli	r4,r9,3
1010b834:	20c0022c 	andhi	r3,r4,8
1010b838:	1800051e 	bne	r3,zero,1010b850 <__adddf3+0x760>
1010b83c:	300cd0fa 	srli	r6,r6,3
1010b840:	4806977a 	slli	r3,r9,29
1010b844:	2005883a 	mov	r2,r4
1010b848:	3825883a 	mov	r18,r7
1010b84c:	19a2b03a 	or	r17,r3,r6
1010b850:	8810d77a 	srli	r8,r17,29
1010b854:	100490fa 	slli	r2,r2,3
1010b858:	882290fa 	slli	r17,r17,3
1010b85c:	0401ffc4 	movi	r16,2047
1010b860:	4090b03a 	or	r8,r8,r2
1010b864:	003e4106 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b868:	0141ffc4 	movi	r5,2047
1010b86c:	117fc71e 	bne	r2,r5,1010b78c <__alt_data_end+0xfffeb78c>
1010b870:	4811883a 	mov	r8,r9
1010b874:	3023883a 	mov	r17,r6
1010b878:	1021883a 	mov	r16,r2
1010b87c:	003e3b06 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b880:	10002f26 	beq	r2,zero,1010b940 <__adddf3+0x850>
1010b884:	4984b03a 	or	r2,r9,r6
1010b888:	10001126 	beq	r2,zero,1010b8d0 <__adddf3+0x7e0>
1010b88c:	4004d0fa 	srli	r2,r8,3
1010b890:	8822d0fa 	srli	r17,r17,3
1010b894:	4010977a 	slli	r8,r8,29
1010b898:	10c0022c 	andhi	r3,r2,8
1010b89c:	4462b03a 	or	r17,r8,r17
1010b8a0:	183feb26 	beq	r3,zero,1010b850 <__alt_data_end+0xfffeb850>
1010b8a4:	4808d0fa 	srli	r4,r9,3
1010b8a8:	20c0022c 	andhi	r3,r4,8
1010b8ac:	183fe81e 	bne	r3,zero,1010b850 <__alt_data_end+0xfffeb850>
1010b8b0:	300cd0fa 	srli	r6,r6,3
1010b8b4:	4806977a 	slli	r3,r9,29
1010b8b8:	2005883a 	mov	r2,r4
1010b8bc:	19a2b03a 	or	r17,r3,r6
1010b8c0:	003fe306 	br	1010b850 <__alt_data_end+0xfffeb850>
1010b8c4:	0011883a 	mov	r8,zero
1010b8c8:	0005883a 	mov	r2,zero
1010b8cc:	003e3f06 	br	1010b1cc <__alt_data_end+0xfffeb1cc>
1010b8d0:	0401ffc4 	movi	r16,2047
1010b8d4:	003e2506 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b8d8:	0013883a 	mov	r9,zero
1010b8dc:	003f8406 	br	1010b6f0 <__alt_data_end+0xfffeb6f0>
1010b8e0:	0005883a 	mov	r2,zero
1010b8e4:	0007883a 	mov	r3,zero
1010b8e8:	003e8906 	br	1010b310 <__alt_data_end+0xfffeb310>
1010b8ec:	197ff804 	addi	r5,r3,-32
1010b8f0:	01000804 	movi	r4,32
1010b8f4:	414ad83a 	srl	r5,r8,r5
1010b8f8:	19002426 	beq	r3,r4,1010b98c <__adddf3+0x89c>
1010b8fc:	01001004 	movi	r4,64
1010b900:	20c7c83a 	sub	r3,r4,r3
1010b904:	40c6983a 	sll	r3,r8,r3
1010b908:	1c46b03a 	or	r3,r3,r17
1010b90c:	1806c03a 	cmpne	r3,r3,zero
1010b910:	28e2b03a 	or	r17,r5,r3
1010b914:	0007883a 	mov	r3,zero
1010b918:	003f2306 	br	1010b5a8 <__alt_data_end+0xfffeb5a8>
1010b91c:	0007883a 	mov	r3,zero
1010b920:	5811883a 	mov	r8,r11
1010b924:	00bfffc4 	movi	r2,-1
1010b928:	0401ffc4 	movi	r16,2047
1010b92c:	003e7806 	br	1010b310 <__alt_data_end+0xfffeb310>
1010b930:	4462b03a 	or	r17,r8,r17
1010b934:	8822c03a 	cmpne	r17,r17,zero
1010b938:	0009883a 	mov	r4,zero
1010b93c:	003fa006 	br	1010b7c0 <__alt_data_end+0xfffeb7c0>
1010b940:	4811883a 	mov	r8,r9
1010b944:	3023883a 	mov	r17,r6
1010b948:	0401ffc4 	movi	r16,2047
1010b94c:	003e0706 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b950:	4811883a 	mov	r8,r9
1010b954:	3023883a 	mov	r17,r6
1010b958:	003e0406 	br	1010b16c <__alt_data_end+0xfffeb16c>
1010b95c:	21fff804 	addi	r7,r4,-32
1010b960:	01400804 	movi	r5,32
1010b964:	41ced83a 	srl	r7,r8,r7
1010b968:	21400a26 	beq	r4,r5,1010b994 <__adddf3+0x8a4>
1010b96c:	01401004 	movi	r5,64
1010b970:	2909c83a 	sub	r4,r5,r4
1010b974:	4108983a 	sll	r4,r8,r4
1010b978:	2448b03a 	or	r4,r4,r17
1010b97c:	2008c03a 	cmpne	r4,r4,zero
1010b980:	3922b03a 	or	r17,r7,r4
1010b984:	0009883a 	mov	r4,zero
1010b988:	003f8d06 	br	1010b7c0 <__alt_data_end+0xfffeb7c0>
1010b98c:	0007883a 	mov	r3,zero
1010b990:	003fdd06 	br	1010b908 <__alt_data_end+0xfffeb908>
1010b994:	0009883a 	mov	r4,zero
1010b998:	003ff706 	br	1010b978 <__alt_data_end+0xfffeb978>

1010b99c <__divdf3>:
1010b99c:	defff004 	addi	sp,sp,-64
1010b9a0:	dc800815 	stw	r18,32(sp)
1010b9a4:	2824d53a 	srli	r18,r5,20
1010b9a8:	dd800c15 	stw	r22,48(sp)
1010b9ac:	282cd7fa 	srli	r22,r5,31
1010b9b0:	dc000615 	stw	r16,24(sp)
1010b9b4:	04000434 	movhi	r16,16
1010b9b8:	843fffc4 	addi	r16,r16,-1
1010b9bc:	dfc00f15 	stw	ra,60(sp)
1010b9c0:	df000e15 	stw	fp,56(sp)
1010b9c4:	ddc00d15 	stw	r23,52(sp)
1010b9c8:	dd400b15 	stw	r21,44(sp)
1010b9cc:	dd000a15 	stw	r20,40(sp)
1010b9d0:	dcc00915 	stw	r19,36(sp)
1010b9d4:	dc400715 	stw	r17,28(sp)
1010b9d8:	9481ffcc 	andi	r18,r18,2047
1010b9dc:	2c20703a 	and	r16,r5,r16
1010b9e0:	b2003fcc 	andi	r8,r22,255
1010b9e4:	90006126 	beq	r18,zero,1010bb6c <__divdf3+0x1d0>
1010b9e8:	0081ffc4 	movi	r2,2047
1010b9ec:	202b883a 	mov	r21,r4
1010b9f0:	90803726 	beq	r18,r2,1010bad0 <__divdf3+0x134>
1010b9f4:	80800434 	orhi	r2,r16,16
1010b9f8:	100490fa 	slli	r2,r2,3
1010b9fc:	2020d77a 	srli	r16,r4,29
1010ba00:	202a90fa 	slli	r21,r4,3
1010ba04:	94bf0044 	addi	r18,r18,-1023
1010ba08:	80a0b03a 	or	r16,r16,r2
1010ba0c:	0013883a 	mov	r9,zero
1010ba10:	000b883a 	mov	r5,zero
1010ba14:	3806d53a 	srli	r3,r7,20
1010ba18:	382ed7fa 	srli	r23,r7,31
1010ba1c:	04400434 	movhi	r17,16
1010ba20:	8c7fffc4 	addi	r17,r17,-1
1010ba24:	18c1ffcc 	andi	r3,r3,2047
1010ba28:	3029883a 	mov	r20,r6
1010ba2c:	3c62703a 	and	r17,r7,r17
1010ba30:	bf003fcc 	andi	fp,r23,255
1010ba34:	18006e26 	beq	r3,zero,1010bbf0 <__divdf3+0x254>
1010ba38:	0081ffc4 	movi	r2,2047
1010ba3c:	18806626 	beq	r3,r2,1010bbd8 <__divdf3+0x23c>
1010ba40:	88800434 	orhi	r2,r17,16
1010ba44:	100490fa 	slli	r2,r2,3
1010ba48:	3022d77a 	srli	r17,r6,29
1010ba4c:	302890fa 	slli	r20,r6,3
1010ba50:	18ff0044 	addi	r3,r3,-1023
1010ba54:	88a2b03a 	or	r17,r17,r2
1010ba58:	000f883a 	mov	r7,zero
1010ba5c:	b5e6f03a 	xor	r19,r22,r23
1010ba60:	3a4cb03a 	or	r6,r7,r9
1010ba64:	008003c4 	movi	r2,15
1010ba68:	9809883a 	mov	r4,r19
1010ba6c:	90c7c83a 	sub	r3,r18,r3
1010ba70:	9cc03fcc 	andi	r19,r19,255
1010ba74:	11809636 	bltu	r2,r6,1010bcd0 <__divdf3+0x334>
1010ba78:	300c90ba 	slli	r6,r6,2
1010ba7c:	00840474 	movhi	r2,4113
1010ba80:	10aea404 	addi	r2,r2,-17776
1010ba84:	308d883a 	add	r6,r6,r2
1010ba88:	30800017 	ldw	r2,0(r6)
1010ba8c:	1000683a 	jmp	r2
1010ba90:	1010bcd0 	cmplti	zero,r2,17139
1010ba94:	1010bb08 	cmpgei	zero,r2,17132
1010ba98:	1010bcc0 	call	11010bcc <__alt_data_end+0xef0bcc>
1010ba9c:	1010bafc 	xorhi	zero,r2,17131
1010baa0:	1010bcc0 	call	11010bcc <__alt_data_end+0xef0bcc>
1010baa4:	1010bc94 	ori	zero,r2,17138
1010baa8:	1010bcc0 	call	11010bcc <__alt_data_end+0xef0bcc>
1010baac:	1010bafc 	xorhi	zero,r2,17131
1010bab0:	1010bb08 	cmpgei	zero,r2,17132
1010bab4:	1010bb08 	cmpgei	zero,r2,17132
1010bab8:	1010bc94 	ori	zero,r2,17138
1010babc:	1010bafc 	xorhi	zero,r2,17131
1010bac0:	1010baec 	andhi	zero,r2,17131
1010bac4:	1010baec 	andhi	zero,r2,17131
1010bac8:	1010baec 	andhi	zero,r2,17131
1010bacc:	1010c058 	cmpnei	zero,r2,17153
1010bad0:	2404b03a 	or	r2,r4,r16
1010bad4:	10006c1e 	bne	r2,zero,1010bc88 <__divdf3+0x2ec>
1010bad8:	02400204 	movi	r9,8
1010badc:	0021883a 	mov	r16,zero
1010bae0:	002b883a 	mov	r21,zero
1010bae4:	01400084 	movi	r5,2
1010bae8:	003fca06 	br	1010ba14 <__alt_data_end+0xfffeba14>
1010baec:	8023883a 	mov	r17,r16
1010baf0:	a829883a 	mov	r20,r21
1010baf4:	4039883a 	mov	fp,r8
1010baf8:	280f883a 	mov	r7,r5
1010bafc:	00800084 	movi	r2,2
1010bb00:	3881601e 	bne	r7,r2,1010c084 <__divdf3+0x6e8>
1010bb04:	e027883a 	mov	r19,fp
1010bb08:	9900004c 	andi	r4,r19,1
1010bb0c:	0081ffc4 	movi	r2,2047
1010bb10:	0021883a 	mov	r16,zero
1010bb14:	002b883a 	mov	r21,zero
1010bb18:	1004953a 	slli	r2,r2,20
1010bb1c:	20c03fcc 	andi	r3,r4,255
1010bb20:	01400434 	movhi	r5,16
1010bb24:	297fffc4 	addi	r5,r5,-1
1010bb28:	180697fa 	slli	r3,r3,31
1010bb2c:	8160703a 	and	r16,r16,r5
1010bb30:	80a0b03a 	or	r16,r16,r2
1010bb34:	80c6b03a 	or	r3,r16,r3
1010bb38:	a805883a 	mov	r2,r21
1010bb3c:	dfc00f17 	ldw	ra,60(sp)
1010bb40:	df000e17 	ldw	fp,56(sp)
1010bb44:	ddc00d17 	ldw	r23,52(sp)
1010bb48:	dd800c17 	ldw	r22,48(sp)
1010bb4c:	dd400b17 	ldw	r21,44(sp)
1010bb50:	dd000a17 	ldw	r20,40(sp)
1010bb54:	dcc00917 	ldw	r19,36(sp)
1010bb58:	dc800817 	ldw	r18,32(sp)
1010bb5c:	dc400717 	ldw	r17,28(sp)
1010bb60:	dc000617 	ldw	r16,24(sp)
1010bb64:	dec01004 	addi	sp,sp,64
1010bb68:	f800283a 	ret
1010bb6c:	2404b03a 	or	r2,r4,r16
1010bb70:	2023883a 	mov	r17,r4
1010bb74:	10003f26 	beq	r2,zero,1010bc74 <__divdf3+0x2d8>
1010bb78:	80015e26 	beq	r16,zero,1010c0f4 <__divdf3+0x758>
1010bb7c:	8009883a 	mov	r4,r16
1010bb80:	d9800215 	stw	r6,8(sp)
1010bb84:	d9c00515 	stw	r7,20(sp)
1010bb88:	da000415 	stw	r8,16(sp)
1010bb8c:	010d9300 	call	1010d930 <__clzsi2>
1010bb90:	d9800217 	ldw	r6,8(sp)
1010bb94:	d9c00517 	ldw	r7,20(sp)
1010bb98:	da000417 	ldw	r8,16(sp)
1010bb9c:	113ffd44 	addi	r4,r2,-11
1010bba0:	00c00704 	movi	r3,28
1010bba4:	19014f16 	blt	r3,r4,1010c0e4 <__divdf3+0x748>
1010bba8:	00c00744 	movi	r3,29
1010bbac:	157ffe04 	addi	r21,r2,-8
1010bbb0:	1907c83a 	sub	r3,r3,r4
1010bbb4:	8560983a 	sll	r16,r16,r21
1010bbb8:	88c6d83a 	srl	r3,r17,r3
1010bbbc:	8d6a983a 	sll	r21,r17,r21
1010bbc0:	1c20b03a 	or	r16,r3,r16
1010bbc4:	1080fcc4 	addi	r2,r2,1011
1010bbc8:	00a5c83a 	sub	r18,zero,r2
1010bbcc:	0013883a 	mov	r9,zero
1010bbd0:	000b883a 	mov	r5,zero
1010bbd4:	003f8f06 	br	1010ba14 <__alt_data_end+0xfffeba14>
1010bbd8:	3444b03a 	or	r2,r6,r17
1010bbdc:	1000231e 	bne	r2,zero,1010bc6c <__divdf3+0x2d0>
1010bbe0:	0023883a 	mov	r17,zero
1010bbe4:	0029883a 	mov	r20,zero
1010bbe8:	01c00084 	movi	r7,2
1010bbec:	003f9b06 	br	1010ba5c <__alt_data_end+0xfffeba5c>
1010bbf0:	3444b03a 	or	r2,r6,r17
1010bbf4:	10001926 	beq	r2,zero,1010bc5c <__divdf3+0x2c0>
1010bbf8:	88014b26 	beq	r17,zero,1010c128 <__divdf3+0x78c>
1010bbfc:	8809883a 	mov	r4,r17
1010bc00:	d9400115 	stw	r5,4(sp)
1010bc04:	d9800215 	stw	r6,8(sp)
1010bc08:	da000415 	stw	r8,16(sp)
1010bc0c:	da400315 	stw	r9,12(sp)
1010bc10:	010d9300 	call	1010d930 <__clzsi2>
1010bc14:	d9400117 	ldw	r5,4(sp)
1010bc18:	d9800217 	ldw	r6,8(sp)
1010bc1c:	da000417 	ldw	r8,16(sp)
1010bc20:	da400317 	ldw	r9,12(sp)
1010bc24:	113ffd44 	addi	r4,r2,-11
1010bc28:	00c00704 	movi	r3,28
1010bc2c:	19013a16 	blt	r3,r4,1010c118 <__divdf3+0x77c>
1010bc30:	00c00744 	movi	r3,29
1010bc34:	153ffe04 	addi	r20,r2,-8
1010bc38:	1907c83a 	sub	r3,r3,r4
1010bc3c:	8d22983a 	sll	r17,r17,r20
1010bc40:	30c6d83a 	srl	r3,r6,r3
1010bc44:	3528983a 	sll	r20,r6,r20
1010bc48:	1c62b03a 	or	r17,r3,r17
1010bc4c:	1080fcc4 	addi	r2,r2,1011
1010bc50:	0087c83a 	sub	r3,zero,r2
1010bc54:	000f883a 	mov	r7,zero
1010bc58:	003f8006 	br	1010ba5c <__alt_data_end+0xfffeba5c>
1010bc5c:	0023883a 	mov	r17,zero
1010bc60:	0029883a 	mov	r20,zero
1010bc64:	01c00044 	movi	r7,1
1010bc68:	003f7c06 	br	1010ba5c <__alt_data_end+0xfffeba5c>
1010bc6c:	01c000c4 	movi	r7,3
1010bc70:	003f7a06 	br	1010ba5c <__alt_data_end+0xfffeba5c>
1010bc74:	02400104 	movi	r9,4
1010bc78:	0021883a 	mov	r16,zero
1010bc7c:	002b883a 	mov	r21,zero
1010bc80:	01400044 	movi	r5,1
1010bc84:	003f6306 	br	1010ba14 <__alt_data_end+0xfffeba14>
1010bc88:	02400304 	movi	r9,12
1010bc8c:	014000c4 	movi	r5,3
1010bc90:	003f6006 	br	1010ba14 <__alt_data_end+0xfffeba14>
1010bc94:	04000434 	movhi	r16,16
1010bc98:	0009883a 	mov	r4,zero
1010bc9c:	843fffc4 	addi	r16,r16,-1
1010bca0:	057fffc4 	movi	r21,-1
1010bca4:	0081ffc4 	movi	r2,2047
1010bca8:	003f9b06 	br	1010bb18 <__alt_data_end+0xfffebb18>
1010bcac:	00c00044 	movi	r3,1
1010bcb0:	1887c83a 	sub	r3,r3,r2
1010bcb4:	01000e04 	movi	r4,56
1010bcb8:	20c1530e 	bge	r4,r3,1010c208 <__divdf3+0x86c>
1010bcbc:	9900004c 	andi	r4,r19,1
1010bcc0:	0005883a 	mov	r2,zero
1010bcc4:	0021883a 	mov	r16,zero
1010bcc8:	002b883a 	mov	r21,zero
1010bccc:	003f9206 	br	1010bb18 <__alt_data_end+0xfffebb18>
1010bcd0:	8c012e36 	bltu	r17,r16,1010c18c <__divdf3+0x7f0>
1010bcd4:	84412c26 	beq	r16,r17,1010c188 <__divdf3+0x7ec>
1010bcd8:	a82f883a 	mov	r23,r21
1010bcdc:	18ffffc4 	addi	r3,r3,-1
1010bce0:	002b883a 	mov	r21,zero
1010bce4:	a004d63a 	srli	r2,r20,24
1010bce8:	8822923a 	slli	r17,r17,8
1010bcec:	a028923a 	slli	r20,r20,8
1010bcf0:	8009883a 	mov	r4,r16
1010bcf4:	88acb03a 	or	r22,r17,r2
1010bcf8:	dd000015 	stw	r20,0(sp)
1010bcfc:	b028d43a 	srli	r20,r22,16
1010bd00:	d8c00215 	stw	r3,8(sp)
1010bd04:	b4bfffcc 	andi	r18,r22,65535
1010bd08:	a00b883a 	mov	r5,r20
1010bd0c:	0100b4c0 	call	10100b4c <__udivsi3>
1010bd10:	100b883a 	mov	r5,r2
1010bd14:	9009883a 	mov	r4,r18
1010bd18:	1023883a 	mov	r17,r2
1010bd1c:	0100c080 	call	10100c08 <__mulsi3>
1010bd20:	8009883a 	mov	r4,r16
1010bd24:	a00b883a 	mov	r5,r20
1010bd28:	1039883a 	mov	fp,r2
1010bd2c:	0100bb00 	call	10100bb0 <__umodsi3>
1010bd30:	1004943a 	slli	r2,r2,16
1010bd34:	b808d43a 	srli	r4,r23,16
1010bd38:	d8c00217 	ldw	r3,8(sp)
1010bd3c:	2084b03a 	or	r2,r4,r2
1010bd40:	1700062e 	bgeu	r2,fp,1010bd5c <__divdf3+0x3c0>
1010bd44:	1585883a 	add	r2,r2,r22
1010bd48:	893fffc4 	addi	r4,r17,-1
1010bd4c:	15811d36 	bltu	r2,r22,1010c1c4 <__divdf3+0x828>
1010bd50:	17011c2e 	bgeu	r2,fp,1010c1c4 <__divdf3+0x828>
1010bd54:	8c7fff84 	addi	r17,r17,-2
1010bd58:	1585883a 	add	r2,r2,r22
1010bd5c:	1739c83a 	sub	fp,r2,fp
1010bd60:	a00b883a 	mov	r5,r20
1010bd64:	e009883a 	mov	r4,fp
1010bd68:	d8c00215 	stw	r3,8(sp)
1010bd6c:	0100b4c0 	call	10100b4c <__udivsi3>
1010bd70:	100b883a 	mov	r5,r2
1010bd74:	9009883a 	mov	r4,r18
1010bd78:	1021883a 	mov	r16,r2
1010bd7c:	0100c080 	call	10100c08 <__mulsi3>
1010bd80:	a00b883a 	mov	r5,r20
1010bd84:	e009883a 	mov	r4,fp
1010bd88:	d8800415 	stw	r2,16(sp)
1010bd8c:	0100bb00 	call	10100bb0 <__umodsi3>
1010bd90:	1004943a 	slli	r2,r2,16
1010bd94:	da000417 	ldw	r8,16(sp)
1010bd98:	bdffffcc 	andi	r23,r23,65535
1010bd9c:	b884b03a 	or	r2,r23,r2
1010bda0:	d8c00217 	ldw	r3,8(sp)
1010bda4:	1200062e 	bgeu	r2,r8,1010bdc0 <__divdf3+0x424>
1010bda8:	1585883a 	add	r2,r2,r22
1010bdac:	813fffc4 	addi	r4,r16,-1
1010bdb0:	15810236 	bltu	r2,r22,1010c1bc <__divdf3+0x820>
1010bdb4:	1201012e 	bgeu	r2,r8,1010c1bc <__divdf3+0x820>
1010bdb8:	843fff84 	addi	r16,r16,-2
1010bdbc:	1585883a 	add	r2,r2,r22
1010bdc0:	8822943a 	slli	r17,r17,16
1010bdc4:	d9800017 	ldw	r6,0(sp)
1010bdc8:	1211c83a 	sub	r8,r2,r8
1010bdcc:	8c22b03a 	or	r17,r17,r16
1010bdd0:	373fffcc 	andi	fp,r6,65535
1010bdd4:	8abfffcc 	andi	r10,r17,65535
1010bdd8:	8820d43a 	srli	r16,r17,16
1010bddc:	5009883a 	mov	r4,r10
1010bde0:	e00b883a 	mov	r5,fp
1010bde4:	302ed43a 	srli	r23,r6,16
1010bde8:	d8c00215 	stw	r3,8(sp)
1010bdec:	da000415 	stw	r8,16(sp)
1010bdf0:	da800115 	stw	r10,4(sp)
1010bdf4:	0100c080 	call	10100c08 <__mulsi3>
1010bdf8:	800b883a 	mov	r5,r16
1010bdfc:	e009883a 	mov	r4,fp
1010be00:	d8800515 	stw	r2,20(sp)
1010be04:	0100c080 	call	10100c08 <__mulsi3>
1010be08:	8009883a 	mov	r4,r16
1010be0c:	b80b883a 	mov	r5,r23
1010be10:	d8800315 	stw	r2,12(sp)
1010be14:	0100c080 	call	10100c08 <__mulsi3>
1010be18:	da800117 	ldw	r10,4(sp)
1010be1c:	b80b883a 	mov	r5,r23
1010be20:	1021883a 	mov	r16,r2
1010be24:	5009883a 	mov	r4,r10
1010be28:	0100c080 	call	10100c08 <__mulsi3>
1010be2c:	d9c00517 	ldw	r7,20(sp)
1010be30:	da400317 	ldw	r9,12(sp)
1010be34:	d8c00217 	ldw	r3,8(sp)
1010be38:	3808d43a 	srli	r4,r7,16
1010be3c:	1245883a 	add	r2,r2,r9
1010be40:	da000417 	ldw	r8,16(sp)
1010be44:	2085883a 	add	r2,r4,r2
1010be48:	1240022e 	bgeu	r2,r9,1010be54 <__divdf3+0x4b8>
1010be4c:	01000074 	movhi	r4,1
1010be50:	8121883a 	add	r16,r16,r4
1010be54:	1008d43a 	srli	r4,r2,16
1010be58:	1004943a 	slli	r2,r2,16
1010be5c:	39ffffcc 	andi	r7,r7,65535
1010be60:	2409883a 	add	r4,r4,r16
1010be64:	11c5883a 	add	r2,r2,r7
1010be68:	4100bb36 	bltu	r8,r4,1010c158 <__divdf3+0x7bc>
1010be6c:	4100d726 	beq	r8,r4,1010c1cc <__divdf3+0x830>
1010be70:	4109c83a 	sub	r4,r8,r4
1010be74:	a8a1c83a 	sub	r16,r21,r2
1010be78:	ac2b803a 	cmpltu	r21,r21,r16
1010be7c:	256bc83a 	sub	r21,r4,r21
1010be80:	b540d926 	beq	r22,r21,1010c1e8 <__divdf3+0x84c>
1010be84:	a00b883a 	mov	r5,r20
1010be88:	a809883a 	mov	r4,r21
1010be8c:	d8c00215 	stw	r3,8(sp)
1010be90:	0100b4c0 	call	10100b4c <__udivsi3>
1010be94:	100b883a 	mov	r5,r2
1010be98:	9009883a 	mov	r4,r18
1010be9c:	d8800515 	stw	r2,20(sp)
1010bea0:	0100c080 	call	10100c08 <__mulsi3>
1010bea4:	a809883a 	mov	r4,r21
1010bea8:	a00b883a 	mov	r5,r20
1010beac:	d8800415 	stw	r2,16(sp)
1010beb0:	0100bb00 	call	10100bb0 <__umodsi3>
1010beb4:	1004943a 	slli	r2,r2,16
1010beb8:	8008d43a 	srli	r4,r16,16
1010bebc:	da000417 	ldw	r8,16(sp)
1010bec0:	d8c00217 	ldw	r3,8(sp)
1010bec4:	2084b03a 	or	r2,r4,r2
1010bec8:	d9c00517 	ldw	r7,20(sp)
1010becc:	1200062e 	bgeu	r2,r8,1010bee8 <__divdf3+0x54c>
1010bed0:	1585883a 	add	r2,r2,r22
1010bed4:	393fffc4 	addi	r4,r7,-1
1010bed8:	1580c536 	bltu	r2,r22,1010c1f0 <__divdf3+0x854>
1010bedc:	1200c42e 	bgeu	r2,r8,1010c1f0 <__divdf3+0x854>
1010bee0:	39ffff84 	addi	r7,r7,-2
1010bee4:	1585883a 	add	r2,r2,r22
1010bee8:	122bc83a 	sub	r21,r2,r8
1010beec:	a00b883a 	mov	r5,r20
1010bef0:	a809883a 	mov	r4,r21
1010bef4:	d8c00215 	stw	r3,8(sp)
1010bef8:	d9c00515 	stw	r7,20(sp)
1010befc:	0100b4c0 	call	10100b4c <__udivsi3>
1010bf00:	9009883a 	mov	r4,r18
1010bf04:	100b883a 	mov	r5,r2
1010bf08:	d8800415 	stw	r2,16(sp)
1010bf0c:	0100c080 	call	10100c08 <__mulsi3>
1010bf10:	a809883a 	mov	r4,r21
1010bf14:	a00b883a 	mov	r5,r20
1010bf18:	1025883a 	mov	r18,r2
1010bf1c:	0100bb00 	call	10100bb0 <__umodsi3>
1010bf20:	1004943a 	slli	r2,r2,16
1010bf24:	813fffcc 	andi	r4,r16,65535
1010bf28:	d8c00217 	ldw	r3,8(sp)
1010bf2c:	20a0b03a 	or	r16,r4,r2
1010bf30:	d9c00517 	ldw	r7,20(sp)
1010bf34:	da000417 	ldw	r8,16(sp)
1010bf38:	8480062e 	bgeu	r16,r18,1010bf54 <__divdf3+0x5b8>
1010bf3c:	85a1883a 	add	r16,r16,r22
1010bf40:	40bfffc4 	addi	r2,r8,-1
1010bf44:	8580ac36 	bltu	r16,r22,1010c1f8 <__divdf3+0x85c>
1010bf48:	8480ab2e 	bgeu	r16,r18,1010c1f8 <__divdf3+0x85c>
1010bf4c:	423fff84 	addi	r8,r8,-2
1010bf50:	85a1883a 	add	r16,r16,r22
1010bf54:	3804943a 	slli	r2,r7,16
1010bf58:	84a1c83a 	sub	r16,r16,r18
1010bf5c:	e009883a 	mov	r4,fp
1010bf60:	1228b03a 	or	r20,r2,r8
1010bf64:	a1ffffcc 	andi	r7,r20,65535
1010bf68:	a024d43a 	srli	r18,r20,16
1010bf6c:	380b883a 	mov	r5,r7
1010bf70:	d8c00215 	stw	r3,8(sp)
1010bf74:	d9c00515 	stw	r7,20(sp)
1010bf78:	0100c080 	call	10100c08 <__mulsi3>
1010bf7c:	900b883a 	mov	r5,r18
1010bf80:	e009883a 	mov	r4,fp
1010bf84:	102b883a 	mov	r21,r2
1010bf88:	0100c080 	call	10100c08 <__mulsi3>
1010bf8c:	900b883a 	mov	r5,r18
1010bf90:	b809883a 	mov	r4,r23
1010bf94:	1039883a 	mov	fp,r2
1010bf98:	0100c080 	call	10100c08 <__mulsi3>
1010bf9c:	d9c00517 	ldw	r7,20(sp)
1010bfa0:	b80b883a 	mov	r5,r23
1010bfa4:	1025883a 	mov	r18,r2
1010bfa8:	3809883a 	mov	r4,r7
1010bfac:	0100c080 	call	10100c08 <__mulsi3>
1010bfb0:	a808d43a 	srli	r4,r21,16
1010bfb4:	1705883a 	add	r2,r2,fp
1010bfb8:	d8c00217 	ldw	r3,8(sp)
1010bfbc:	2085883a 	add	r2,r4,r2
1010bfc0:	1700022e 	bgeu	r2,fp,1010bfcc <__divdf3+0x630>
1010bfc4:	01000074 	movhi	r4,1
1010bfc8:	9125883a 	add	r18,r18,r4
1010bfcc:	1008d43a 	srli	r4,r2,16
1010bfd0:	1004943a 	slli	r2,r2,16
1010bfd4:	ad7fffcc 	andi	r21,r21,65535
1010bfd8:	2489883a 	add	r4,r4,r18
1010bfdc:	1545883a 	add	r2,r2,r21
1010bfe0:	81003836 	bltu	r16,r4,1010c0c4 <__divdf3+0x728>
1010bfe4:	81003626 	beq	r16,r4,1010c0c0 <__divdf3+0x724>
1010bfe8:	a5000054 	ori	r20,r20,1
1010bfec:	1880ffc4 	addi	r2,r3,1023
1010bff0:	00bf2e0e 	bge	zero,r2,1010bcac <__alt_data_end+0xfffebcac>
1010bff4:	a10001cc 	andi	r4,r20,7
1010bff8:	20000726 	beq	r4,zero,1010c018 <__divdf3+0x67c>
1010bffc:	a10003cc 	andi	r4,r20,15
1010c000:	01400104 	movi	r5,4
1010c004:	21400426 	beq	r4,r5,1010c018 <__divdf3+0x67c>
1010c008:	a149883a 	add	r4,r20,r5
1010c00c:	2529803a 	cmpltu	r20,r4,r20
1010c010:	8d23883a 	add	r17,r17,r20
1010c014:	2029883a 	mov	r20,r4
1010c018:	8900402c 	andhi	r4,r17,256
1010c01c:	20000426 	beq	r4,zero,1010c030 <__divdf3+0x694>
1010c020:	18810004 	addi	r2,r3,1024
1010c024:	00ffc034 	movhi	r3,65280
1010c028:	18ffffc4 	addi	r3,r3,-1
1010c02c:	88e2703a 	and	r17,r17,r3
1010c030:	00c1ff84 	movi	r3,2046
1010c034:	18beb416 	blt	r3,r2,1010bb08 <__alt_data_end+0xfffebb08>
1010c038:	a028d0fa 	srli	r20,r20,3
1010c03c:	882a977a 	slli	r21,r17,29
1010c040:	8820927a 	slli	r16,r17,9
1010c044:	1081ffcc 	andi	r2,r2,2047
1010c048:	ad2ab03a 	or	r21,r21,r20
1010c04c:	8020d33a 	srli	r16,r16,12
1010c050:	9900004c 	andi	r4,r19,1
1010c054:	003eb006 	br	1010bb18 <__alt_data_end+0xfffebb18>
1010c058:	8080022c 	andhi	r2,r16,8
1010c05c:	10001226 	beq	r2,zero,1010c0a8 <__divdf3+0x70c>
1010c060:	8880022c 	andhi	r2,r17,8
1010c064:	1000101e 	bne	r2,zero,1010c0a8 <__divdf3+0x70c>
1010c068:	00800434 	movhi	r2,16
1010c06c:	8c000234 	orhi	r16,r17,8
1010c070:	10bfffc4 	addi	r2,r2,-1
1010c074:	b809883a 	mov	r4,r23
1010c078:	80a0703a 	and	r16,r16,r2
1010c07c:	a02b883a 	mov	r21,r20
1010c080:	003f0806 	br	1010bca4 <__alt_data_end+0xfffebca4>
1010c084:	008000c4 	movi	r2,3
1010c088:	3880b126 	beq	r7,r2,1010c350 <__divdf3+0x9b4>
1010c08c:	00800044 	movi	r2,1
1010c090:	38805b1e 	bne	r7,r2,1010c200 <__divdf3+0x864>
1010c094:	e009883a 	mov	r4,fp
1010c098:	0005883a 	mov	r2,zero
1010c09c:	0021883a 	mov	r16,zero
1010c0a0:	002b883a 	mov	r21,zero
1010c0a4:	003e9c06 	br	1010bb18 <__alt_data_end+0xfffebb18>
1010c0a8:	00800434 	movhi	r2,16
1010c0ac:	84000234 	orhi	r16,r16,8
1010c0b0:	10bfffc4 	addi	r2,r2,-1
1010c0b4:	b009883a 	mov	r4,r22
1010c0b8:	80a0703a 	and	r16,r16,r2
1010c0bc:	003ef906 	br	1010bca4 <__alt_data_end+0xfffebca4>
1010c0c0:	103fca26 	beq	r2,zero,1010bfec <__alt_data_end+0xfffebfec>
1010c0c4:	b421883a 	add	r16,r22,r16
1010c0c8:	a17fffc4 	addi	r5,r20,-1
1010c0cc:	8580422e 	bgeu	r16,r22,1010c1d8 <__divdf3+0x83c>
1010c0d0:	2829883a 	mov	r20,r5
1010c0d4:	813fc41e 	bne	r16,r4,1010bfe8 <__alt_data_end+0xfffebfe8>
1010c0d8:	d9800017 	ldw	r6,0(sp)
1010c0dc:	30bfc21e 	bne	r6,r2,1010bfe8 <__alt_data_end+0xfffebfe8>
1010c0e0:	003fc206 	br	1010bfec <__alt_data_end+0xfffebfec>
1010c0e4:	143ff604 	addi	r16,r2,-40
1010c0e8:	8c20983a 	sll	r16,r17,r16
1010c0ec:	002b883a 	mov	r21,zero
1010c0f0:	003eb406 	br	1010bbc4 <__alt_data_end+0xfffebbc4>
1010c0f4:	d9800215 	stw	r6,8(sp)
1010c0f8:	d9c00515 	stw	r7,20(sp)
1010c0fc:	da000415 	stw	r8,16(sp)
1010c100:	010d9300 	call	1010d930 <__clzsi2>
1010c104:	10800804 	addi	r2,r2,32
1010c108:	da000417 	ldw	r8,16(sp)
1010c10c:	d9c00517 	ldw	r7,20(sp)
1010c110:	d9800217 	ldw	r6,8(sp)
1010c114:	003ea106 	br	1010bb9c <__alt_data_end+0xfffebb9c>
1010c118:	147ff604 	addi	r17,r2,-40
1010c11c:	3462983a 	sll	r17,r6,r17
1010c120:	0029883a 	mov	r20,zero
1010c124:	003ec906 	br	1010bc4c <__alt_data_end+0xfffebc4c>
1010c128:	3009883a 	mov	r4,r6
1010c12c:	d9400115 	stw	r5,4(sp)
1010c130:	d9800215 	stw	r6,8(sp)
1010c134:	da000415 	stw	r8,16(sp)
1010c138:	da400315 	stw	r9,12(sp)
1010c13c:	010d9300 	call	1010d930 <__clzsi2>
1010c140:	10800804 	addi	r2,r2,32
1010c144:	da400317 	ldw	r9,12(sp)
1010c148:	da000417 	ldw	r8,16(sp)
1010c14c:	d9800217 	ldw	r6,8(sp)
1010c150:	d9400117 	ldw	r5,4(sp)
1010c154:	003eb306 	br	1010bc24 <__alt_data_end+0xfffebc24>
1010c158:	d9800017 	ldw	r6,0(sp)
1010c15c:	a9ab883a 	add	r21,r21,r6
1010c160:	a98b803a 	cmpltu	r5,r21,r6
1010c164:	2d8b883a 	add	r5,r5,r22
1010c168:	2a11883a 	add	r8,r5,r8
1010c16c:	897fffc4 	addi	r5,r17,-1
1010c170:	b2000c2e 	bgeu	r22,r8,1010c1a4 <__divdf3+0x808>
1010c174:	41003f36 	bltu	r8,r4,1010c274 <__divdf3+0x8d8>
1010c178:	22006c26 	beq	r4,r8,1010c32c <__divdf3+0x990>
1010c17c:	4109c83a 	sub	r4,r8,r4
1010c180:	2823883a 	mov	r17,r5
1010c184:	003f3b06 	br	1010be74 <__alt_data_end+0xfffebe74>
1010c188:	ad3ed336 	bltu	r21,r20,1010bcd8 <__alt_data_end+0xfffebcd8>
1010c18c:	a804d07a 	srli	r2,r21,1
1010c190:	802e97fa 	slli	r23,r16,31
1010c194:	a82a97fa 	slli	r21,r21,31
1010c198:	8020d07a 	srli	r16,r16,1
1010c19c:	b8aeb03a 	or	r23,r23,r2
1010c1a0:	003ed006 	br	1010bce4 <__alt_data_end+0xfffebce4>
1010c1a4:	b23ff51e 	bne	r22,r8,1010c17c <__alt_data_end+0xfffec17c>
1010c1a8:	d9800017 	ldw	r6,0(sp)
1010c1ac:	a9bff12e 	bgeu	r21,r6,1010c174 <__alt_data_end+0xfffec174>
1010c1b0:	b109c83a 	sub	r4,r22,r4
1010c1b4:	2823883a 	mov	r17,r5
1010c1b8:	003f2e06 	br	1010be74 <__alt_data_end+0xfffebe74>
1010c1bc:	2021883a 	mov	r16,r4
1010c1c0:	003eff06 	br	1010bdc0 <__alt_data_end+0xfffebdc0>
1010c1c4:	2023883a 	mov	r17,r4
1010c1c8:	003ee406 	br	1010bd5c <__alt_data_end+0xfffebd5c>
1010c1cc:	a8bfe236 	bltu	r21,r2,1010c158 <__alt_data_end+0xfffec158>
1010c1d0:	0009883a 	mov	r4,zero
1010c1d4:	003f2706 	br	1010be74 <__alt_data_end+0xfffebe74>
1010c1d8:	81002d36 	bltu	r16,r4,1010c290 <__divdf3+0x8f4>
1010c1dc:	24005626 	beq	r4,r16,1010c338 <__divdf3+0x99c>
1010c1e0:	2829883a 	mov	r20,r5
1010c1e4:	003f8006 	br	1010bfe8 <__alt_data_end+0xfffebfe8>
1010c1e8:	053fffc4 	movi	r20,-1
1010c1ec:	003f7f06 	br	1010bfec <__alt_data_end+0xfffebfec>
1010c1f0:	200f883a 	mov	r7,r4
1010c1f4:	003f3c06 	br	1010bee8 <__alt_data_end+0xfffebee8>
1010c1f8:	1011883a 	mov	r8,r2
1010c1fc:	003f5506 	br	1010bf54 <__alt_data_end+0xfffebf54>
1010c200:	e027883a 	mov	r19,fp
1010c204:	003f7906 	br	1010bfec <__alt_data_end+0xfffebfec>
1010c208:	010007c4 	movi	r4,31
1010c20c:	20c02816 	blt	r4,r3,1010c2b0 <__divdf3+0x914>
1010c210:	00800804 	movi	r2,32
1010c214:	10c5c83a 	sub	r2,r2,r3
1010c218:	888a983a 	sll	r5,r17,r2
1010c21c:	a0c8d83a 	srl	r4,r20,r3
1010c220:	a084983a 	sll	r2,r20,r2
1010c224:	88e2d83a 	srl	r17,r17,r3
1010c228:	2906b03a 	or	r3,r5,r4
1010c22c:	1004c03a 	cmpne	r2,r2,zero
1010c230:	1886b03a 	or	r3,r3,r2
1010c234:	188001cc 	andi	r2,r3,7
1010c238:	10000726 	beq	r2,zero,1010c258 <__divdf3+0x8bc>
1010c23c:	188003cc 	andi	r2,r3,15
1010c240:	01000104 	movi	r4,4
1010c244:	11000426 	beq	r2,r4,1010c258 <__divdf3+0x8bc>
1010c248:	1805883a 	mov	r2,r3
1010c24c:	10c00104 	addi	r3,r2,4
1010c250:	1885803a 	cmpltu	r2,r3,r2
1010c254:	88a3883a 	add	r17,r17,r2
1010c258:	8880202c 	andhi	r2,r17,128
1010c25c:	10002926 	beq	r2,zero,1010c304 <__divdf3+0x968>
1010c260:	9900004c 	andi	r4,r19,1
1010c264:	00800044 	movi	r2,1
1010c268:	0021883a 	mov	r16,zero
1010c26c:	002b883a 	mov	r21,zero
1010c270:	003e2906 	br	1010bb18 <__alt_data_end+0xfffebb18>
1010c274:	d9800017 	ldw	r6,0(sp)
1010c278:	8c7fff84 	addi	r17,r17,-2
1010c27c:	a9ab883a 	add	r21,r21,r6
1010c280:	a98b803a 	cmpltu	r5,r21,r6
1010c284:	2d8b883a 	add	r5,r5,r22
1010c288:	2a11883a 	add	r8,r5,r8
1010c28c:	003ef806 	br	1010be70 <__alt_data_end+0xfffebe70>
1010c290:	d9800017 	ldw	r6,0(sp)
1010c294:	318f883a 	add	r7,r6,r6
1010c298:	398b803a 	cmpltu	r5,r7,r6
1010c29c:	2d8d883a 	add	r6,r5,r22
1010c2a0:	81a1883a 	add	r16,r16,r6
1010c2a4:	a17fff84 	addi	r5,r20,-2
1010c2a8:	d9c00015 	stw	r7,0(sp)
1010c2ac:	003f8806 	br	1010c0d0 <__alt_data_end+0xfffec0d0>
1010c2b0:	013ff844 	movi	r4,-31
1010c2b4:	2085c83a 	sub	r2,r4,r2
1010c2b8:	8888d83a 	srl	r4,r17,r2
1010c2bc:	00800804 	movi	r2,32
1010c2c0:	18802126 	beq	r3,r2,1010c348 <__divdf3+0x9ac>
1010c2c4:	04001004 	movi	r16,64
1010c2c8:	80c7c83a 	sub	r3,r16,r3
1010c2cc:	88e0983a 	sll	r16,r17,r3
1010c2d0:	8504b03a 	or	r2,r16,r20
1010c2d4:	1004c03a 	cmpne	r2,r2,zero
1010c2d8:	2084b03a 	or	r2,r4,r2
1010c2dc:	144001cc 	andi	r17,r2,7
1010c2e0:	88000d1e 	bne	r17,zero,1010c318 <__divdf3+0x97c>
1010c2e4:	0021883a 	mov	r16,zero
1010c2e8:	102ad0fa 	srli	r21,r2,3
1010c2ec:	9900004c 	andi	r4,r19,1
1010c2f0:	0005883a 	mov	r2,zero
1010c2f4:	ac6ab03a 	or	r21,r21,r17
1010c2f8:	003e0706 	br	1010bb18 <__alt_data_end+0xfffebb18>
1010c2fc:	1007883a 	mov	r3,r2
1010c300:	0023883a 	mov	r17,zero
1010c304:	8820927a 	slli	r16,r17,9
1010c308:	1805883a 	mov	r2,r3
1010c30c:	8822977a 	slli	r17,r17,29
1010c310:	8020d33a 	srli	r16,r16,12
1010c314:	003ff406 	br	1010c2e8 <__alt_data_end+0xfffec2e8>
1010c318:	10c003cc 	andi	r3,r2,15
1010c31c:	01000104 	movi	r4,4
1010c320:	193ff626 	beq	r3,r4,1010c2fc <__alt_data_end+0xfffec2fc>
1010c324:	0023883a 	mov	r17,zero
1010c328:	003fc806 	br	1010c24c <__alt_data_end+0xfffec24c>
1010c32c:	a8bfd136 	bltu	r21,r2,1010c274 <__alt_data_end+0xfffec274>
1010c330:	2823883a 	mov	r17,r5
1010c334:	003fa606 	br	1010c1d0 <__alt_data_end+0xfffec1d0>
1010c338:	d9800017 	ldw	r6,0(sp)
1010c33c:	30bfd436 	bltu	r6,r2,1010c290 <__alt_data_end+0xfffec290>
1010c340:	2829883a 	mov	r20,r5
1010c344:	003f6406 	br	1010c0d8 <__alt_data_end+0xfffec0d8>
1010c348:	0021883a 	mov	r16,zero
1010c34c:	003fe006 	br	1010c2d0 <__alt_data_end+0xfffec2d0>
1010c350:	00800434 	movhi	r2,16
1010c354:	8c000234 	orhi	r16,r17,8
1010c358:	10bfffc4 	addi	r2,r2,-1
1010c35c:	e009883a 	mov	r4,fp
1010c360:	80a0703a 	and	r16,r16,r2
1010c364:	a02b883a 	mov	r21,r20
1010c368:	003e4e06 	br	1010bca4 <__alt_data_end+0xfffebca4>

1010c36c <__eqdf2>:
1010c36c:	2804d53a 	srli	r2,r5,20
1010c370:	3806d53a 	srli	r3,r7,20
1010c374:	02000434 	movhi	r8,16
1010c378:	423fffc4 	addi	r8,r8,-1
1010c37c:	1081ffcc 	andi	r2,r2,2047
1010c380:	0281ffc4 	movi	r10,2047
1010c384:	2a12703a 	and	r9,r5,r8
1010c388:	18c1ffcc 	andi	r3,r3,2047
1010c38c:	3a10703a 	and	r8,r7,r8
1010c390:	280ad7fa 	srli	r5,r5,31
1010c394:	380ed7fa 	srli	r7,r7,31
1010c398:	12801026 	beq	r2,r10,1010c3dc <__eqdf2+0x70>
1010c39c:	0281ffc4 	movi	r10,2047
1010c3a0:	1a800a26 	beq	r3,r10,1010c3cc <__eqdf2+0x60>
1010c3a4:	10c00226 	beq	r2,r3,1010c3b0 <__eqdf2+0x44>
1010c3a8:	00800044 	movi	r2,1
1010c3ac:	f800283a 	ret
1010c3b0:	4a3ffd1e 	bne	r9,r8,1010c3a8 <__alt_data_end+0xfffec3a8>
1010c3b4:	21bffc1e 	bne	r4,r6,1010c3a8 <__alt_data_end+0xfffec3a8>
1010c3b8:	29c00c26 	beq	r5,r7,1010c3ec <__eqdf2+0x80>
1010c3bc:	103ffa1e 	bne	r2,zero,1010c3a8 <__alt_data_end+0xfffec3a8>
1010c3c0:	2244b03a 	or	r2,r4,r9
1010c3c4:	1004c03a 	cmpne	r2,r2,zero
1010c3c8:	f800283a 	ret
1010c3cc:	3214b03a 	or	r10,r6,r8
1010c3d0:	503ff426 	beq	r10,zero,1010c3a4 <__alt_data_end+0xfffec3a4>
1010c3d4:	00800044 	movi	r2,1
1010c3d8:	f800283a 	ret
1010c3dc:	2254b03a 	or	r10,r4,r9
1010c3e0:	503fee26 	beq	r10,zero,1010c39c <__alt_data_end+0xfffec39c>
1010c3e4:	00800044 	movi	r2,1
1010c3e8:	f800283a 	ret
1010c3ec:	0005883a 	mov	r2,zero
1010c3f0:	f800283a 	ret

1010c3f4 <__gedf2>:
1010c3f4:	2804d53a 	srli	r2,r5,20
1010c3f8:	3806d53a 	srli	r3,r7,20
1010c3fc:	02000434 	movhi	r8,16
1010c400:	423fffc4 	addi	r8,r8,-1
1010c404:	1081ffcc 	andi	r2,r2,2047
1010c408:	0241ffc4 	movi	r9,2047
1010c40c:	2a14703a 	and	r10,r5,r8
1010c410:	18c1ffcc 	andi	r3,r3,2047
1010c414:	3a10703a 	and	r8,r7,r8
1010c418:	280ad7fa 	srli	r5,r5,31
1010c41c:	380ed7fa 	srli	r7,r7,31
1010c420:	12401d26 	beq	r2,r9,1010c498 <__gedf2+0xa4>
1010c424:	0241ffc4 	movi	r9,2047
1010c428:	1a401226 	beq	r3,r9,1010c474 <__gedf2+0x80>
1010c42c:	1000081e 	bne	r2,zero,1010c450 <__gedf2+0x5c>
1010c430:	2296b03a 	or	r11,r4,r10
1010c434:	5813003a 	cmpeq	r9,r11,zero
1010c438:	1800091e 	bne	r3,zero,1010c460 <__gedf2+0x6c>
1010c43c:	3218b03a 	or	r12,r6,r8
1010c440:	6000071e 	bne	r12,zero,1010c460 <__gedf2+0x6c>
1010c444:	0005883a 	mov	r2,zero
1010c448:	5800101e 	bne	r11,zero,1010c48c <__gedf2+0x98>
1010c44c:	f800283a 	ret
1010c450:	18000c1e 	bne	r3,zero,1010c484 <__gedf2+0x90>
1010c454:	3212b03a 	or	r9,r6,r8
1010c458:	48000c26 	beq	r9,zero,1010c48c <__gedf2+0x98>
1010c45c:	0013883a 	mov	r9,zero
1010c460:	39c03fcc 	andi	r7,r7,255
1010c464:	48000826 	beq	r9,zero,1010c488 <__gedf2+0x94>
1010c468:	38000926 	beq	r7,zero,1010c490 <__gedf2+0x9c>
1010c46c:	00800044 	movi	r2,1
1010c470:	f800283a 	ret
1010c474:	3212b03a 	or	r9,r6,r8
1010c478:	483fec26 	beq	r9,zero,1010c42c <__alt_data_end+0xfffec42c>
1010c47c:	00bfff84 	movi	r2,-2
1010c480:	f800283a 	ret
1010c484:	39c03fcc 	andi	r7,r7,255
1010c488:	29c00626 	beq	r5,r7,1010c4a4 <__gedf2+0xb0>
1010c48c:	283ff726 	beq	r5,zero,1010c46c <__alt_data_end+0xfffec46c>
1010c490:	00bfffc4 	movi	r2,-1
1010c494:	f800283a 	ret
1010c498:	2292b03a 	or	r9,r4,r10
1010c49c:	483fe126 	beq	r9,zero,1010c424 <__alt_data_end+0xfffec424>
1010c4a0:	003ff606 	br	1010c47c <__alt_data_end+0xfffec47c>
1010c4a4:	18bff916 	blt	r3,r2,1010c48c <__alt_data_end+0xfffec48c>
1010c4a8:	10c00316 	blt	r2,r3,1010c4b8 <__gedf2+0xc4>
1010c4ac:	42bff736 	bltu	r8,r10,1010c48c <__alt_data_end+0xfffec48c>
1010c4b0:	52000326 	beq	r10,r8,1010c4c0 <__gedf2+0xcc>
1010c4b4:	5200042e 	bgeu	r10,r8,1010c4c8 <__gedf2+0xd4>
1010c4b8:	283fec1e 	bne	r5,zero,1010c46c <__alt_data_end+0xfffec46c>
1010c4bc:	003ff406 	br	1010c490 <__alt_data_end+0xfffec490>
1010c4c0:	313ff236 	bltu	r6,r4,1010c48c <__alt_data_end+0xfffec48c>
1010c4c4:	21bffc36 	bltu	r4,r6,1010c4b8 <__alt_data_end+0xfffec4b8>
1010c4c8:	0005883a 	mov	r2,zero
1010c4cc:	f800283a 	ret

1010c4d0 <__ledf2>:
1010c4d0:	2804d53a 	srli	r2,r5,20
1010c4d4:	3810d53a 	srli	r8,r7,20
1010c4d8:	00c00434 	movhi	r3,16
1010c4dc:	18ffffc4 	addi	r3,r3,-1
1010c4e0:	1081ffcc 	andi	r2,r2,2047
1010c4e4:	0241ffc4 	movi	r9,2047
1010c4e8:	28d4703a 	and	r10,r5,r3
1010c4ec:	4201ffcc 	andi	r8,r8,2047
1010c4f0:	38c6703a 	and	r3,r7,r3
1010c4f4:	280ad7fa 	srli	r5,r5,31
1010c4f8:	380ed7fa 	srli	r7,r7,31
1010c4fc:	12401f26 	beq	r2,r9,1010c57c <__ledf2+0xac>
1010c500:	0241ffc4 	movi	r9,2047
1010c504:	42401426 	beq	r8,r9,1010c558 <__ledf2+0x88>
1010c508:	1000091e 	bne	r2,zero,1010c530 <__ledf2+0x60>
1010c50c:	2296b03a 	or	r11,r4,r10
1010c510:	5813003a 	cmpeq	r9,r11,zero
1010c514:	29403fcc 	andi	r5,r5,255
1010c518:	40000a1e 	bne	r8,zero,1010c544 <__ledf2+0x74>
1010c51c:	30d8b03a 	or	r12,r6,r3
1010c520:	6000081e 	bne	r12,zero,1010c544 <__ledf2+0x74>
1010c524:	0005883a 	mov	r2,zero
1010c528:	5800111e 	bne	r11,zero,1010c570 <__ledf2+0xa0>
1010c52c:	f800283a 	ret
1010c530:	29403fcc 	andi	r5,r5,255
1010c534:	40000c1e 	bne	r8,zero,1010c568 <__ledf2+0x98>
1010c538:	30d2b03a 	or	r9,r6,r3
1010c53c:	48000c26 	beq	r9,zero,1010c570 <__ledf2+0xa0>
1010c540:	0013883a 	mov	r9,zero
1010c544:	39c03fcc 	andi	r7,r7,255
1010c548:	48000826 	beq	r9,zero,1010c56c <__ledf2+0x9c>
1010c54c:	38001126 	beq	r7,zero,1010c594 <__ledf2+0xc4>
1010c550:	00800044 	movi	r2,1
1010c554:	f800283a 	ret
1010c558:	30d2b03a 	or	r9,r6,r3
1010c55c:	483fea26 	beq	r9,zero,1010c508 <__alt_data_end+0xfffec508>
1010c560:	00800084 	movi	r2,2
1010c564:	f800283a 	ret
1010c568:	39c03fcc 	andi	r7,r7,255
1010c56c:	39400726 	beq	r7,r5,1010c58c <__ledf2+0xbc>
1010c570:	2800081e 	bne	r5,zero,1010c594 <__ledf2+0xc4>
1010c574:	00800044 	movi	r2,1
1010c578:	f800283a 	ret
1010c57c:	2292b03a 	or	r9,r4,r10
1010c580:	483fdf26 	beq	r9,zero,1010c500 <__alt_data_end+0xfffec500>
1010c584:	00800084 	movi	r2,2
1010c588:	f800283a 	ret
1010c58c:	4080030e 	bge	r8,r2,1010c59c <__ledf2+0xcc>
1010c590:	383fef26 	beq	r7,zero,1010c550 <__alt_data_end+0xfffec550>
1010c594:	00bfffc4 	movi	r2,-1
1010c598:	f800283a 	ret
1010c59c:	123feb16 	blt	r2,r8,1010c54c <__alt_data_end+0xfffec54c>
1010c5a0:	1abff336 	bltu	r3,r10,1010c570 <__alt_data_end+0xfffec570>
1010c5a4:	50c00326 	beq	r10,r3,1010c5b4 <__ledf2+0xe4>
1010c5a8:	50c0042e 	bgeu	r10,r3,1010c5bc <__ledf2+0xec>
1010c5ac:	283fe81e 	bne	r5,zero,1010c550 <__alt_data_end+0xfffec550>
1010c5b0:	003ff806 	br	1010c594 <__alt_data_end+0xfffec594>
1010c5b4:	313fee36 	bltu	r6,r4,1010c570 <__alt_data_end+0xfffec570>
1010c5b8:	21bffc36 	bltu	r4,r6,1010c5ac <__alt_data_end+0xfffec5ac>
1010c5bc:	0005883a 	mov	r2,zero
1010c5c0:	f800283a 	ret

1010c5c4 <__muldf3>:
1010c5c4:	deffee04 	addi	sp,sp,-72
1010c5c8:	dd000c15 	stw	r20,48(sp)
1010c5cc:	2828d53a 	srli	r20,r5,20
1010c5d0:	ddc00f15 	stw	r23,60(sp)
1010c5d4:	282ed7fa 	srli	r23,r5,31
1010c5d8:	dc000815 	stw	r16,32(sp)
1010c5dc:	04000434 	movhi	r16,16
1010c5e0:	dcc00b15 	stw	r19,44(sp)
1010c5e4:	843fffc4 	addi	r16,r16,-1
1010c5e8:	dfc01115 	stw	ra,68(sp)
1010c5ec:	df001015 	stw	fp,64(sp)
1010c5f0:	dd800e15 	stw	r22,56(sp)
1010c5f4:	dd400d15 	stw	r21,52(sp)
1010c5f8:	dc800a15 	stw	r18,40(sp)
1010c5fc:	dc400915 	stw	r17,36(sp)
1010c600:	a501ffcc 	andi	r20,r20,2047
1010c604:	2c20703a 	and	r16,r5,r16
1010c608:	b827883a 	mov	r19,r23
1010c60c:	ba403fcc 	andi	r9,r23,255
1010c610:	a0006026 	beq	r20,zero,1010c794 <__muldf3+0x1d0>
1010c614:	0081ffc4 	movi	r2,2047
1010c618:	202d883a 	mov	r22,r4
1010c61c:	a0803626 	beq	r20,r2,1010c6f8 <__muldf3+0x134>
1010c620:	84000434 	orhi	r16,r16,16
1010c624:	200ad77a 	srli	r5,r4,29
1010c628:	800490fa 	slli	r2,r16,3
1010c62c:	202c90fa 	slli	r22,r4,3
1010c630:	a53f0044 	addi	r20,r20,-1023
1010c634:	28a0b03a 	or	r16,r5,r2
1010c638:	002b883a 	mov	r21,zero
1010c63c:	000b883a 	mov	r5,zero
1010c640:	3804d53a 	srli	r2,r7,20
1010c644:	3838d7fa 	srli	fp,r7,31
1010c648:	04400434 	movhi	r17,16
1010c64c:	8c7fffc4 	addi	r17,r17,-1
1010c650:	1081ffcc 	andi	r2,r2,2047
1010c654:	3025883a 	mov	r18,r6
1010c658:	3c62703a 	and	r17,r7,r17
1010c65c:	e2803fcc 	andi	r10,fp,255
1010c660:	10006d26 	beq	r2,zero,1010c818 <__muldf3+0x254>
1010c664:	00c1ffc4 	movi	r3,2047
1010c668:	10c06526 	beq	r2,r3,1010c800 <__muldf3+0x23c>
1010c66c:	8c400434 	orhi	r17,r17,16
1010c670:	300ed77a 	srli	r7,r6,29
1010c674:	880690fa 	slli	r3,r17,3
1010c678:	302490fa 	slli	r18,r6,3
1010c67c:	10bf0044 	addi	r2,r2,-1023
1010c680:	38e2b03a 	or	r17,r7,r3
1010c684:	000f883a 	mov	r7,zero
1010c688:	a087883a 	add	r3,r20,r2
1010c68c:	010003c4 	movi	r4,15
1010c690:	3d44b03a 	or	r2,r7,r21
1010c694:	e5ccf03a 	xor	r6,fp,r23
1010c698:	1a000044 	addi	r8,r3,1
1010c69c:	20809b36 	bltu	r4,r2,1010c90c <__muldf3+0x348>
1010c6a0:	100490ba 	slli	r2,r2,2
1010c6a4:	01040474 	movhi	r4,4113
1010c6a8:	2131ae04 	addi	r4,r4,-14664
1010c6ac:	1105883a 	add	r2,r2,r4
1010c6b0:	10800017 	ldw	r2,0(r2)
1010c6b4:	1000683a 	jmp	r2
1010c6b8:	1010c90c 	andi	zero,r2,17188
1010c6bc:	1010c718 	cmpnei	zero,r2,17180
1010c6c0:	1010c718 	cmpnei	zero,r2,17180
1010c6c4:	1010c714 	ori	zero,r2,17180
1010c6c8:	1010c8e8 	cmpgeui	zero,r2,17187
1010c6cc:	1010c8e8 	cmpgeui	zero,r2,17187
1010c6d0:	1010c8d0 	cmplti	zero,r2,17187
1010c6d4:	1010c714 	ori	zero,r2,17180
1010c6d8:	1010c8e8 	cmpgeui	zero,r2,17187
1010c6dc:	1010c8d0 	cmplti	zero,r2,17187
1010c6e0:	1010c8e8 	cmpgeui	zero,r2,17187
1010c6e4:	1010c714 	ori	zero,r2,17180
1010c6e8:	1010c8f8 	rdprs	zero,r2,17187
1010c6ec:	1010c8f8 	rdprs	zero,r2,17187
1010c6f0:	1010c8f8 	rdprs	zero,r2,17187
1010c6f4:	1010cc58 	cmpnei	zero,r2,17201
1010c6f8:	2404b03a 	or	r2,r4,r16
1010c6fc:	1000711e 	bne	r2,zero,1010c8c4 <__muldf3+0x300>
1010c700:	05400204 	movi	r21,8
1010c704:	0021883a 	mov	r16,zero
1010c708:	002d883a 	mov	r22,zero
1010c70c:	01400084 	movi	r5,2
1010c710:	003fcb06 	br	1010c640 <__alt_data_end+0xfffec640>
1010c714:	500d883a 	mov	r6,r10
1010c718:	00800084 	movi	r2,2
1010c71c:	38805926 	beq	r7,r2,1010c884 <__muldf3+0x2c0>
1010c720:	008000c4 	movi	r2,3
1010c724:	3881bb26 	beq	r7,r2,1010ce14 <__muldf3+0x850>
1010c728:	00800044 	movi	r2,1
1010c72c:	3881961e 	bne	r7,r2,1010cd88 <__muldf3+0x7c4>
1010c730:	3027883a 	mov	r19,r6
1010c734:	0005883a 	mov	r2,zero
1010c738:	0021883a 	mov	r16,zero
1010c73c:	002d883a 	mov	r22,zero
1010c740:	1004953a 	slli	r2,r2,20
1010c744:	98c03fcc 	andi	r3,r19,255
1010c748:	04400434 	movhi	r17,16
1010c74c:	8c7fffc4 	addi	r17,r17,-1
1010c750:	180697fa 	slli	r3,r3,31
1010c754:	8460703a 	and	r16,r16,r17
1010c758:	80a0b03a 	or	r16,r16,r2
1010c75c:	80c6b03a 	or	r3,r16,r3
1010c760:	b005883a 	mov	r2,r22
1010c764:	dfc01117 	ldw	ra,68(sp)
1010c768:	df001017 	ldw	fp,64(sp)
1010c76c:	ddc00f17 	ldw	r23,60(sp)
1010c770:	dd800e17 	ldw	r22,56(sp)
1010c774:	dd400d17 	ldw	r21,52(sp)
1010c778:	dd000c17 	ldw	r20,48(sp)
1010c77c:	dcc00b17 	ldw	r19,44(sp)
1010c780:	dc800a17 	ldw	r18,40(sp)
1010c784:	dc400917 	ldw	r17,36(sp)
1010c788:	dc000817 	ldw	r16,32(sp)
1010c78c:	dec01204 	addi	sp,sp,72
1010c790:	f800283a 	ret
1010c794:	2404b03a 	or	r2,r4,r16
1010c798:	202b883a 	mov	r21,r4
1010c79c:	10004426 	beq	r2,zero,1010c8b0 <__muldf3+0x2ec>
1010c7a0:	80015126 	beq	r16,zero,1010cce8 <__muldf3+0x724>
1010c7a4:	8009883a 	mov	r4,r16
1010c7a8:	d9800715 	stw	r6,28(sp)
1010c7ac:	d9c00215 	stw	r7,8(sp)
1010c7b0:	da400415 	stw	r9,16(sp)
1010c7b4:	010d9300 	call	1010d930 <__clzsi2>
1010c7b8:	d9800717 	ldw	r6,28(sp)
1010c7bc:	d9c00217 	ldw	r7,8(sp)
1010c7c0:	da400417 	ldw	r9,16(sp)
1010c7c4:	113ffd44 	addi	r4,r2,-11
1010c7c8:	00c00704 	movi	r3,28
1010c7cc:	19014216 	blt	r3,r4,1010ccd8 <__muldf3+0x714>
1010c7d0:	00c00744 	movi	r3,29
1010c7d4:	15bffe04 	addi	r22,r2,-8
1010c7d8:	1907c83a 	sub	r3,r3,r4
1010c7dc:	85a0983a 	sll	r16,r16,r22
1010c7e0:	a8c6d83a 	srl	r3,r21,r3
1010c7e4:	adac983a 	sll	r22,r21,r22
1010c7e8:	1c20b03a 	or	r16,r3,r16
1010c7ec:	1080fcc4 	addi	r2,r2,1011
1010c7f0:	00a9c83a 	sub	r20,zero,r2
1010c7f4:	002b883a 	mov	r21,zero
1010c7f8:	000b883a 	mov	r5,zero
1010c7fc:	003f9006 	br	1010c640 <__alt_data_end+0xfffec640>
1010c800:	3446b03a 	or	r3,r6,r17
1010c804:	1800281e 	bne	r3,zero,1010c8a8 <__muldf3+0x2e4>
1010c808:	0023883a 	mov	r17,zero
1010c80c:	0025883a 	mov	r18,zero
1010c810:	01c00084 	movi	r7,2
1010c814:	003f9c06 	br	1010c688 <__alt_data_end+0xfffec688>
1010c818:	3446b03a 	or	r3,r6,r17
1010c81c:	18001e26 	beq	r3,zero,1010c898 <__muldf3+0x2d4>
1010c820:	88012126 	beq	r17,zero,1010cca8 <__muldf3+0x6e4>
1010c824:	8809883a 	mov	r4,r17
1010c828:	d9400215 	stw	r5,8(sp)
1010c82c:	d9800715 	stw	r6,28(sp)
1010c830:	da400415 	stw	r9,16(sp)
1010c834:	da800315 	stw	r10,12(sp)
1010c838:	010d9300 	call	1010d930 <__clzsi2>
1010c83c:	d9400217 	ldw	r5,8(sp)
1010c840:	d9800717 	ldw	r6,28(sp)
1010c844:	da400417 	ldw	r9,16(sp)
1010c848:	da800317 	ldw	r10,12(sp)
1010c84c:	113ffd44 	addi	r4,r2,-11
1010c850:	00c00704 	movi	r3,28
1010c854:	19011016 	blt	r3,r4,1010cc98 <__muldf3+0x6d4>
1010c858:	00c00744 	movi	r3,29
1010c85c:	14bffe04 	addi	r18,r2,-8
1010c860:	1907c83a 	sub	r3,r3,r4
1010c864:	8ca2983a 	sll	r17,r17,r18
1010c868:	30c6d83a 	srl	r3,r6,r3
1010c86c:	34a4983a 	sll	r18,r6,r18
1010c870:	1c62b03a 	or	r17,r3,r17
1010c874:	1080fcc4 	addi	r2,r2,1011
1010c878:	0085c83a 	sub	r2,zero,r2
1010c87c:	000f883a 	mov	r7,zero
1010c880:	003f8106 	br	1010c688 <__alt_data_end+0xfffec688>
1010c884:	3027883a 	mov	r19,r6
1010c888:	0081ffc4 	movi	r2,2047
1010c88c:	0021883a 	mov	r16,zero
1010c890:	002d883a 	mov	r22,zero
1010c894:	003faa06 	br	1010c740 <__alt_data_end+0xfffec740>
1010c898:	0023883a 	mov	r17,zero
1010c89c:	0025883a 	mov	r18,zero
1010c8a0:	01c00044 	movi	r7,1
1010c8a4:	003f7806 	br	1010c688 <__alt_data_end+0xfffec688>
1010c8a8:	01c000c4 	movi	r7,3
1010c8ac:	003f7606 	br	1010c688 <__alt_data_end+0xfffec688>
1010c8b0:	05400104 	movi	r21,4
1010c8b4:	0021883a 	mov	r16,zero
1010c8b8:	002d883a 	mov	r22,zero
1010c8bc:	01400044 	movi	r5,1
1010c8c0:	003f5f06 	br	1010c640 <__alt_data_end+0xfffec640>
1010c8c4:	05400304 	movi	r21,12
1010c8c8:	014000c4 	movi	r5,3
1010c8cc:	003f5c06 	br	1010c640 <__alt_data_end+0xfffec640>
1010c8d0:	04000434 	movhi	r16,16
1010c8d4:	0027883a 	mov	r19,zero
1010c8d8:	843fffc4 	addi	r16,r16,-1
1010c8dc:	05bfffc4 	movi	r22,-1
1010c8e0:	0081ffc4 	movi	r2,2047
1010c8e4:	003f9606 	br	1010c740 <__alt_data_end+0xfffec740>
1010c8e8:	8023883a 	mov	r17,r16
1010c8ec:	b025883a 	mov	r18,r22
1010c8f0:	280f883a 	mov	r7,r5
1010c8f4:	003f8806 	br	1010c718 <__alt_data_end+0xfffec718>
1010c8f8:	8023883a 	mov	r17,r16
1010c8fc:	b025883a 	mov	r18,r22
1010c900:	480d883a 	mov	r6,r9
1010c904:	280f883a 	mov	r7,r5
1010c908:	003f8306 	br	1010c718 <__alt_data_end+0xfffec718>
1010c90c:	b026d43a 	srli	r19,r22,16
1010c910:	902ed43a 	srli	r23,r18,16
1010c914:	b5bfffcc 	andi	r22,r22,65535
1010c918:	94bfffcc 	andi	r18,r18,65535
1010c91c:	b00b883a 	mov	r5,r22
1010c920:	9009883a 	mov	r4,r18
1010c924:	d8c00515 	stw	r3,20(sp)
1010c928:	d9800715 	stw	r6,28(sp)
1010c92c:	da000615 	stw	r8,24(sp)
1010c930:	0100c080 	call	10100c08 <__mulsi3>
1010c934:	980b883a 	mov	r5,r19
1010c938:	9009883a 	mov	r4,r18
1010c93c:	1029883a 	mov	r20,r2
1010c940:	0100c080 	call	10100c08 <__mulsi3>
1010c944:	b80b883a 	mov	r5,r23
1010c948:	9809883a 	mov	r4,r19
1010c94c:	102b883a 	mov	r21,r2
1010c950:	0100c080 	call	10100c08 <__mulsi3>
1010c954:	b809883a 	mov	r4,r23
1010c958:	b00b883a 	mov	r5,r22
1010c95c:	1039883a 	mov	fp,r2
1010c960:	0100c080 	call	10100c08 <__mulsi3>
1010c964:	a008d43a 	srli	r4,r20,16
1010c968:	1545883a 	add	r2,r2,r21
1010c96c:	d8c00517 	ldw	r3,20(sp)
1010c970:	2085883a 	add	r2,r4,r2
1010c974:	d9800717 	ldw	r6,28(sp)
1010c978:	da000617 	ldw	r8,24(sp)
1010c97c:	1540022e 	bgeu	r2,r21,1010c988 <__muldf3+0x3c4>
1010c980:	01000074 	movhi	r4,1
1010c984:	e139883a 	add	fp,fp,r4
1010c988:	100e943a 	slli	r7,r2,16
1010c98c:	1004d43a 	srli	r2,r2,16
1010c990:	882ad43a 	srli	r21,r17,16
1010c994:	a53fffcc 	andi	r20,r20,65535
1010c998:	8c7fffcc 	andi	r17,r17,65535
1010c99c:	3d29883a 	add	r20,r7,r20
1010c9a0:	b00b883a 	mov	r5,r22
1010c9a4:	8809883a 	mov	r4,r17
1010c9a8:	d8c00515 	stw	r3,20(sp)
1010c9ac:	d9800715 	stw	r6,28(sp)
1010c9b0:	da000615 	stw	r8,24(sp)
1010c9b4:	dd000115 	stw	r20,4(sp)
1010c9b8:	d8800015 	stw	r2,0(sp)
1010c9bc:	0100c080 	call	10100c08 <__mulsi3>
1010c9c0:	980b883a 	mov	r5,r19
1010c9c4:	8809883a 	mov	r4,r17
1010c9c8:	d8800215 	stw	r2,8(sp)
1010c9cc:	0100c080 	call	10100c08 <__mulsi3>
1010c9d0:	9809883a 	mov	r4,r19
1010c9d4:	a80b883a 	mov	r5,r21
1010c9d8:	1029883a 	mov	r20,r2
1010c9dc:	0100c080 	call	10100c08 <__mulsi3>
1010c9e0:	b00b883a 	mov	r5,r22
1010c9e4:	a809883a 	mov	r4,r21
1010c9e8:	d8800415 	stw	r2,16(sp)
1010c9ec:	0100c080 	call	10100c08 <__mulsi3>
1010c9f0:	d9c00217 	ldw	r7,8(sp)
1010c9f4:	1505883a 	add	r2,r2,r20
1010c9f8:	d8c00517 	ldw	r3,20(sp)
1010c9fc:	3826d43a 	srli	r19,r7,16
1010ca00:	d9800717 	ldw	r6,28(sp)
1010ca04:	da000617 	ldw	r8,24(sp)
1010ca08:	9885883a 	add	r2,r19,r2
1010ca0c:	da400417 	ldw	r9,16(sp)
1010ca10:	1500022e 	bgeu	r2,r20,1010ca1c <__muldf3+0x458>
1010ca14:	01000074 	movhi	r4,1
1010ca18:	4913883a 	add	r9,r9,r4
1010ca1c:	1028d43a 	srli	r20,r2,16
1010ca20:	1004943a 	slli	r2,r2,16
1010ca24:	802cd43a 	srli	r22,r16,16
1010ca28:	843fffcc 	andi	r16,r16,65535
1010ca2c:	3cffffcc 	andi	r19,r7,65535
1010ca30:	9009883a 	mov	r4,r18
1010ca34:	800b883a 	mov	r5,r16
1010ca38:	a269883a 	add	r20,r20,r9
1010ca3c:	d8c00515 	stw	r3,20(sp)
1010ca40:	d9800715 	stw	r6,28(sp)
1010ca44:	da000615 	stw	r8,24(sp)
1010ca48:	14e7883a 	add	r19,r2,r19
1010ca4c:	0100c080 	call	10100c08 <__mulsi3>
1010ca50:	9009883a 	mov	r4,r18
1010ca54:	b00b883a 	mov	r5,r22
1010ca58:	d8800315 	stw	r2,12(sp)
1010ca5c:	0100c080 	call	10100c08 <__mulsi3>
1010ca60:	b809883a 	mov	r4,r23
1010ca64:	b00b883a 	mov	r5,r22
1010ca68:	d8800215 	stw	r2,8(sp)
1010ca6c:	0100c080 	call	10100c08 <__mulsi3>
1010ca70:	b80b883a 	mov	r5,r23
1010ca74:	8009883a 	mov	r4,r16
1010ca78:	d8800415 	stw	r2,16(sp)
1010ca7c:	0100c080 	call	10100c08 <__mulsi3>
1010ca80:	da800317 	ldw	r10,12(sp)
1010ca84:	d9c00217 	ldw	r7,8(sp)
1010ca88:	d9000017 	ldw	r4,0(sp)
1010ca8c:	502ed43a 	srli	r23,r10,16
1010ca90:	11c5883a 	add	r2,r2,r7
1010ca94:	24e5883a 	add	r18,r4,r19
1010ca98:	b885883a 	add	r2,r23,r2
1010ca9c:	d8c00517 	ldw	r3,20(sp)
1010caa0:	d9800717 	ldw	r6,28(sp)
1010caa4:	da000617 	ldw	r8,24(sp)
1010caa8:	da400417 	ldw	r9,16(sp)
1010caac:	11c0022e 	bgeu	r2,r7,1010cab8 <__muldf3+0x4f4>
1010cab0:	01000074 	movhi	r4,1
1010cab4:	4913883a 	add	r9,r9,r4
1010cab8:	100ed43a 	srli	r7,r2,16
1010cabc:	1004943a 	slli	r2,r2,16
1010cac0:	55ffffcc 	andi	r23,r10,65535
1010cac4:	3a53883a 	add	r9,r7,r9
1010cac8:	8809883a 	mov	r4,r17
1010cacc:	800b883a 	mov	r5,r16
1010cad0:	d8c00515 	stw	r3,20(sp)
1010cad4:	d9800715 	stw	r6,28(sp)
1010cad8:	da000615 	stw	r8,24(sp)
1010cadc:	da400415 	stw	r9,16(sp)
1010cae0:	15ef883a 	add	r23,r2,r23
1010cae4:	0100c080 	call	10100c08 <__mulsi3>
1010cae8:	8809883a 	mov	r4,r17
1010caec:	b00b883a 	mov	r5,r22
1010caf0:	d8800215 	stw	r2,8(sp)
1010caf4:	0100c080 	call	10100c08 <__mulsi3>
1010caf8:	b00b883a 	mov	r5,r22
1010cafc:	a809883a 	mov	r4,r21
1010cb00:	d8800315 	stw	r2,12(sp)
1010cb04:	0100c080 	call	10100c08 <__mulsi3>
1010cb08:	8009883a 	mov	r4,r16
1010cb0c:	a80b883a 	mov	r5,r21
1010cb10:	1023883a 	mov	r17,r2
1010cb14:	0100c080 	call	10100c08 <__mulsi3>
1010cb18:	d9c00217 	ldw	r7,8(sp)
1010cb1c:	da800317 	ldw	r10,12(sp)
1010cb20:	d8c00517 	ldw	r3,20(sp)
1010cb24:	3808d43a 	srli	r4,r7,16
1010cb28:	1285883a 	add	r2,r2,r10
1010cb2c:	d9800717 	ldw	r6,28(sp)
1010cb30:	2085883a 	add	r2,r4,r2
1010cb34:	da000617 	ldw	r8,24(sp)
1010cb38:	da400417 	ldw	r9,16(sp)
1010cb3c:	1280022e 	bgeu	r2,r10,1010cb48 <__muldf3+0x584>
1010cb40:	01000074 	movhi	r4,1
1010cb44:	8923883a 	add	r17,r17,r4
1010cb48:	1008943a 	slli	r4,r2,16
1010cb4c:	39ffffcc 	andi	r7,r7,65535
1010cb50:	e4b9883a 	add	fp,fp,r18
1010cb54:	21cf883a 	add	r7,r4,r7
1010cb58:	e4e7803a 	cmpltu	r19,fp,r19
1010cb5c:	3d0f883a 	add	r7,r7,r20
1010cb60:	bf39883a 	add	fp,r23,fp
1010cb64:	99c9883a 	add	r4,r19,r7
1010cb68:	e5ef803a 	cmpltu	r23,fp,r23
1010cb6c:	490b883a 	add	r5,r9,r4
1010cb70:	1004d43a 	srli	r2,r2,16
1010cb74:	b965883a 	add	r18,r23,r5
1010cb78:	24c9803a 	cmpltu	r4,r4,r19
1010cb7c:	3d29803a 	cmpltu	r20,r7,r20
1010cb80:	a128b03a 	or	r20,r20,r4
1010cb84:	95ef803a 	cmpltu	r23,r18,r23
1010cb88:	2a53803a 	cmpltu	r9,r5,r9
1010cb8c:	a0a9883a 	add	r20,r20,r2
1010cb90:	4deeb03a 	or	r23,r9,r23
1010cb94:	a5ef883a 	add	r23,r20,r23
1010cb98:	bc63883a 	add	r17,r23,r17
1010cb9c:	e004927a 	slli	r2,fp,9
1010cba0:	d9000117 	ldw	r4,4(sp)
1010cba4:	882e927a 	slli	r23,r17,9
1010cba8:	9022d5fa 	srli	r17,r18,23
1010cbac:	e038d5fa 	srli	fp,fp,23
1010cbb0:	1104b03a 	or	r2,r2,r4
1010cbb4:	9024927a 	slli	r18,r18,9
1010cbb8:	1004c03a 	cmpne	r2,r2,zero
1010cbbc:	bc62b03a 	or	r17,r23,r17
1010cbc0:	1738b03a 	or	fp,r2,fp
1010cbc4:	8880402c 	andhi	r2,r17,256
1010cbc8:	e4a4b03a 	or	r18,fp,r18
1010cbcc:	10000726 	beq	r2,zero,1010cbec <__muldf3+0x628>
1010cbd0:	9006d07a 	srli	r3,r18,1
1010cbd4:	880497fa 	slli	r2,r17,31
1010cbd8:	9480004c 	andi	r18,r18,1
1010cbdc:	8822d07a 	srli	r17,r17,1
1010cbe0:	1ca4b03a 	or	r18,r3,r18
1010cbe4:	14a4b03a 	or	r18,r2,r18
1010cbe8:	4007883a 	mov	r3,r8
1010cbec:	1880ffc4 	addi	r2,r3,1023
1010cbf0:	0080460e 	bge	zero,r2,1010cd0c <__muldf3+0x748>
1010cbf4:	910001cc 	andi	r4,r18,7
1010cbf8:	20000726 	beq	r4,zero,1010cc18 <__muldf3+0x654>
1010cbfc:	910003cc 	andi	r4,r18,15
1010cc00:	01400104 	movi	r5,4
1010cc04:	21400426 	beq	r4,r5,1010cc18 <__muldf3+0x654>
1010cc08:	9149883a 	add	r4,r18,r5
1010cc0c:	24a5803a 	cmpltu	r18,r4,r18
1010cc10:	8ca3883a 	add	r17,r17,r18
1010cc14:	2025883a 	mov	r18,r4
1010cc18:	8900402c 	andhi	r4,r17,256
1010cc1c:	20000426 	beq	r4,zero,1010cc30 <__muldf3+0x66c>
1010cc20:	18810004 	addi	r2,r3,1024
1010cc24:	00ffc034 	movhi	r3,65280
1010cc28:	18ffffc4 	addi	r3,r3,-1
1010cc2c:	88e2703a 	and	r17,r17,r3
1010cc30:	00c1ff84 	movi	r3,2046
1010cc34:	18bf1316 	blt	r3,r2,1010c884 <__alt_data_end+0xfffec884>
1010cc38:	882c977a 	slli	r22,r17,29
1010cc3c:	9024d0fa 	srli	r18,r18,3
1010cc40:	8822927a 	slli	r17,r17,9
1010cc44:	1081ffcc 	andi	r2,r2,2047
1010cc48:	b4acb03a 	or	r22,r22,r18
1010cc4c:	8820d33a 	srli	r16,r17,12
1010cc50:	3027883a 	mov	r19,r6
1010cc54:	003eba06 	br	1010c740 <__alt_data_end+0xfffec740>
1010cc58:	8080022c 	andhi	r2,r16,8
1010cc5c:	10000926 	beq	r2,zero,1010cc84 <__muldf3+0x6c0>
1010cc60:	8880022c 	andhi	r2,r17,8
1010cc64:	1000071e 	bne	r2,zero,1010cc84 <__muldf3+0x6c0>
1010cc68:	00800434 	movhi	r2,16
1010cc6c:	8c000234 	orhi	r16,r17,8
1010cc70:	10bfffc4 	addi	r2,r2,-1
1010cc74:	e027883a 	mov	r19,fp
1010cc78:	80a0703a 	and	r16,r16,r2
1010cc7c:	902d883a 	mov	r22,r18
1010cc80:	003f1706 	br	1010c8e0 <__alt_data_end+0xfffec8e0>
1010cc84:	00800434 	movhi	r2,16
1010cc88:	84000234 	orhi	r16,r16,8
1010cc8c:	10bfffc4 	addi	r2,r2,-1
1010cc90:	80a0703a 	and	r16,r16,r2
1010cc94:	003f1206 	br	1010c8e0 <__alt_data_end+0xfffec8e0>
1010cc98:	147ff604 	addi	r17,r2,-40
1010cc9c:	3462983a 	sll	r17,r6,r17
1010cca0:	0025883a 	mov	r18,zero
1010cca4:	003ef306 	br	1010c874 <__alt_data_end+0xfffec874>
1010cca8:	3009883a 	mov	r4,r6
1010ccac:	d9400215 	stw	r5,8(sp)
1010ccb0:	d9800715 	stw	r6,28(sp)
1010ccb4:	da400415 	stw	r9,16(sp)
1010ccb8:	da800315 	stw	r10,12(sp)
1010ccbc:	010d9300 	call	1010d930 <__clzsi2>
1010ccc0:	10800804 	addi	r2,r2,32
1010ccc4:	da800317 	ldw	r10,12(sp)
1010ccc8:	da400417 	ldw	r9,16(sp)
1010cccc:	d9800717 	ldw	r6,28(sp)
1010ccd0:	d9400217 	ldw	r5,8(sp)
1010ccd4:	003edd06 	br	1010c84c <__alt_data_end+0xfffec84c>
1010ccd8:	143ff604 	addi	r16,r2,-40
1010ccdc:	ac20983a 	sll	r16,r21,r16
1010cce0:	002d883a 	mov	r22,zero
1010cce4:	003ec106 	br	1010c7ec <__alt_data_end+0xfffec7ec>
1010cce8:	d9800715 	stw	r6,28(sp)
1010ccec:	d9c00215 	stw	r7,8(sp)
1010ccf0:	da400415 	stw	r9,16(sp)
1010ccf4:	010d9300 	call	1010d930 <__clzsi2>
1010ccf8:	10800804 	addi	r2,r2,32
1010ccfc:	da400417 	ldw	r9,16(sp)
1010cd00:	d9c00217 	ldw	r7,8(sp)
1010cd04:	d9800717 	ldw	r6,28(sp)
1010cd08:	003eae06 	br	1010c7c4 <__alt_data_end+0xfffec7c4>
1010cd0c:	00c00044 	movi	r3,1
1010cd10:	1887c83a 	sub	r3,r3,r2
1010cd14:	01000e04 	movi	r4,56
1010cd18:	20fe8516 	blt	r4,r3,1010c730 <__alt_data_end+0xfffec730>
1010cd1c:	010007c4 	movi	r4,31
1010cd20:	20c01b16 	blt	r4,r3,1010cd90 <__muldf3+0x7cc>
1010cd24:	00800804 	movi	r2,32
1010cd28:	10c5c83a 	sub	r2,r2,r3
1010cd2c:	888a983a 	sll	r5,r17,r2
1010cd30:	90c8d83a 	srl	r4,r18,r3
1010cd34:	9084983a 	sll	r2,r18,r2
1010cd38:	88e2d83a 	srl	r17,r17,r3
1010cd3c:	2906b03a 	or	r3,r5,r4
1010cd40:	1004c03a 	cmpne	r2,r2,zero
1010cd44:	1886b03a 	or	r3,r3,r2
1010cd48:	188001cc 	andi	r2,r3,7
1010cd4c:	10000726 	beq	r2,zero,1010cd6c <__muldf3+0x7a8>
1010cd50:	188003cc 	andi	r2,r3,15
1010cd54:	01000104 	movi	r4,4
1010cd58:	11000426 	beq	r2,r4,1010cd6c <__muldf3+0x7a8>
1010cd5c:	1805883a 	mov	r2,r3
1010cd60:	10c00104 	addi	r3,r2,4
1010cd64:	1885803a 	cmpltu	r2,r3,r2
1010cd68:	88a3883a 	add	r17,r17,r2
1010cd6c:	8880202c 	andhi	r2,r17,128
1010cd70:	10001c26 	beq	r2,zero,1010cde4 <__muldf3+0x820>
1010cd74:	3027883a 	mov	r19,r6
1010cd78:	00800044 	movi	r2,1
1010cd7c:	0021883a 	mov	r16,zero
1010cd80:	002d883a 	mov	r22,zero
1010cd84:	003e6e06 	br	1010c740 <__alt_data_end+0xfffec740>
1010cd88:	4007883a 	mov	r3,r8
1010cd8c:	003f9706 	br	1010cbec <__alt_data_end+0xfffecbec>
1010cd90:	017ff844 	movi	r5,-31
1010cd94:	2885c83a 	sub	r2,r5,r2
1010cd98:	888ad83a 	srl	r5,r17,r2
1010cd9c:	00800804 	movi	r2,32
1010cda0:	18801a26 	beq	r3,r2,1010ce0c <__muldf3+0x848>
1010cda4:	01001004 	movi	r4,64
1010cda8:	20c7c83a 	sub	r3,r4,r3
1010cdac:	88e2983a 	sll	r17,r17,r3
1010cdb0:	8ca4b03a 	or	r18,r17,r18
1010cdb4:	9004c03a 	cmpne	r2,r18,zero
1010cdb8:	2884b03a 	or	r2,r5,r2
1010cdbc:	144001cc 	andi	r17,r2,7
1010cdc0:	88000d1e 	bne	r17,zero,1010cdf8 <__muldf3+0x834>
1010cdc4:	0021883a 	mov	r16,zero
1010cdc8:	102cd0fa 	srli	r22,r2,3
1010cdcc:	3027883a 	mov	r19,r6
1010cdd0:	0005883a 	mov	r2,zero
1010cdd4:	b46cb03a 	or	r22,r22,r17
1010cdd8:	003e5906 	br	1010c740 <__alt_data_end+0xfffec740>
1010cddc:	1007883a 	mov	r3,r2
1010cde0:	0023883a 	mov	r17,zero
1010cde4:	8820927a 	slli	r16,r17,9
1010cde8:	1805883a 	mov	r2,r3
1010cdec:	8822977a 	slli	r17,r17,29
1010cdf0:	8020d33a 	srli	r16,r16,12
1010cdf4:	003ff406 	br	1010cdc8 <__alt_data_end+0xfffecdc8>
1010cdf8:	10c003cc 	andi	r3,r2,15
1010cdfc:	01000104 	movi	r4,4
1010ce00:	193ff626 	beq	r3,r4,1010cddc <__alt_data_end+0xfffecddc>
1010ce04:	0023883a 	mov	r17,zero
1010ce08:	003fd506 	br	1010cd60 <__alt_data_end+0xfffecd60>
1010ce0c:	0023883a 	mov	r17,zero
1010ce10:	003fe706 	br	1010cdb0 <__alt_data_end+0xfffecdb0>
1010ce14:	00800434 	movhi	r2,16
1010ce18:	8c000234 	orhi	r16,r17,8
1010ce1c:	10bfffc4 	addi	r2,r2,-1
1010ce20:	3027883a 	mov	r19,r6
1010ce24:	80a0703a 	and	r16,r16,r2
1010ce28:	902d883a 	mov	r22,r18
1010ce2c:	003eac06 	br	1010c8e0 <__alt_data_end+0xfffec8e0>

1010ce30 <__subdf3>:
1010ce30:	02000434 	movhi	r8,16
1010ce34:	423fffc4 	addi	r8,r8,-1
1010ce38:	defffb04 	addi	sp,sp,-20
1010ce3c:	2a14703a 	and	r10,r5,r8
1010ce40:	3812d53a 	srli	r9,r7,20
1010ce44:	3a10703a 	and	r8,r7,r8
1010ce48:	2006d77a 	srli	r3,r4,29
1010ce4c:	3004d77a 	srli	r2,r6,29
1010ce50:	dc000015 	stw	r16,0(sp)
1010ce54:	501490fa 	slli	r10,r10,3
1010ce58:	2820d53a 	srli	r16,r5,20
1010ce5c:	401090fa 	slli	r8,r8,3
1010ce60:	dc800215 	stw	r18,8(sp)
1010ce64:	dc400115 	stw	r17,4(sp)
1010ce68:	dfc00415 	stw	ra,16(sp)
1010ce6c:	202290fa 	slli	r17,r4,3
1010ce70:	dcc00315 	stw	r19,12(sp)
1010ce74:	4a41ffcc 	andi	r9,r9,2047
1010ce78:	0101ffc4 	movi	r4,2047
1010ce7c:	2824d7fa 	srli	r18,r5,31
1010ce80:	8401ffcc 	andi	r16,r16,2047
1010ce84:	50c6b03a 	or	r3,r10,r3
1010ce88:	380ed7fa 	srli	r7,r7,31
1010ce8c:	408ab03a 	or	r5,r8,r2
1010ce90:	300c90fa 	slli	r6,r6,3
1010ce94:	49009626 	beq	r9,r4,1010d0f0 <__subdf3+0x2c0>
1010ce98:	39c0005c 	xori	r7,r7,1
1010ce9c:	8245c83a 	sub	r2,r16,r9
1010cea0:	3c807426 	beq	r7,r18,1010d074 <__subdf3+0x244>
1010cea4:	0080af0e 	bge	zero,r2,1010d164 <__subdf3+0x334>
1010cea8:	48002a1e 	bne	r9,zero,1010cf54 <__subdf3+0x124>
1010ceac:	2988b03a 	or	r4,r5,r6
1010ceb0:	20009a1e 	bne	r4,zero,1010d11c <__subdf3+0x2ec>
1010ceb4:	888001cc 	andi	r2,r17,7
1010ceb8:	10000726 	beq	r2,zero,1010ced8 <__subdf3+0xa8>
1010cebc:	888003cc 	andi	r2,r17,15
1010cec0:	01000104 	movi	r4,4
1010cec4:	11000426 	beq	r2,r4,1010ced8 <__subdf3+0xa8>
1010cec8:	890b883a 	add	r5,r17,r4
1010cecc:	2c63803a 	cmpltu	r17,r5,r17
1010ced0:	1c47883a 	add	r3,r3,r17
1010ced4:	2823883a 	mov	r17,r5
1010ced8:	1880202c 	andhi	r2,r3,128
1010cedc:	10005926 	beq	r2,zero,1010d044 <__subdf3+0x214>
1010cee0:	84000044 	addi	r16,r16,1
1010cee4:	0081ffc4 	movi	r2,2047
1010cee8:	8080be26 	beq	r16,r2,1010d1e4 <__subdf3+0x3b4>
1010ceec:	017fe034 	movhi	r5,65408
1010cef0:	297fffc4 	addi	r5,r5,-1
1010cef4:	1946703a 	and	r3,r3,r5
1010cef8:	1804977a 	slli	r2,r3,29
1010cefc:	1806927a 	slli	r3,r3,9
1010cf00:	8822d0fa 	srli	r17,r17,3
1010cf04:	8401ffcc 	andi	r16,r16,2047
1010cf08:	180ad33a 	srli	r5,r3,12
1010cf0c:	9100004c 	andi	r4,r18,1
1010cf10:	1444b03a 	or	r2,r2,r17
1010cf14:	80c1ffcc 	andi	r3,r16,2047
1010cf18:	1820953a 	slli	r16,r3,20
1010cf1c:	20c03fcc 	andi	r3,r4,255
1010cf20:	180897fa 	slli	r4,r3,31
1010cf24:	00c00434 	movhi	r3,16
1010cf28:	18ffffc4 	addi	r3,r3,-1
1010cf2c:	28c6703a 	and	r3,r5,r3
1010cf30:	1c06b03a 	or	r3,r3,r16
1010cf34:	1906b03a 	or	r3,r3,r4
1010cf38:	dfc00417 	ldw	ra,16(sp)
1010cf3c:	dcc00317 	ldw	r19,12(sp)
1010cf40:	dc800217 	ldw	r18,8(sp)
1010cf44:	dc400117 	ldw	r17,4(sp)
1010cf48:	dc000017 	ldw	r16,0(sp)
1010cf4c:	dec00504 	addi	sp,sp,20
1010cf50:	f800283a 	ret
1010cf54:	0101ffc4 	movi	r4,2047
1010cf58:	813fd626 	beq	r16,r4,1010ceb4 <__alt_data_end+0xfffeceb4>
1010cf5c:	29402034 	orhi	r5,r5,128
1010cf60:	01000e04 	movi	r4,56
1010cf64:	2080a316 	blt	r4,r2,1010d1f4 <__subdf3+0x3c4>
1010cf68:	010007c4 	movi	r4,31
1010cf6c:	2080c616 	blt	r4,r2,1010d288 <__subdf3+0x458>
1010cf70:	01000804 	movi	r4,32
1010cf74:	2089c83a 	sub	r4,r4,r2
1010cf78:	2910983a 	sll	r8,r5,r4
1010cf7c:	308ed83a 	srl	r7,r6,r2
1010cf80:	3108983a 	sll	r4,r6,r4
1010cf84:	2884d83a 	srl	r2,r5,r2
1010cf88:	41ccb03a 	or	r6,r8,r7
1010cf8c:	2008c03a 	cmpne	r4,r4,zero
1010cf90:	310cb03a 	or	r6,r6,r4
1010cf94:	898dc83a 	sub	r6,r17,r6
1010cf98:	89a3803a 	cmpltu	r17,r17,r6
1010cf9c:	1887c83a 	sub	r3,r3,r2
1010cfa0:	1c47c83a 	sub	r3,r3,r17
1010cfa4:	3023883a 	mov	r17,r6
1010cfa8:	1880202c 	andhi	r2,r3,128
1010cfac:	10002326 	beq	r2,zero,1010d03c <__subdf3+0x20c>
1010cfb0:	04c02034 	movhi	r19,128
1010cfb4:	9cffffc4 	addi	r19,r19,-1
1010cfb8:	1ce6703a 	and	r19,r3,r19
1010cfbc:	98007a26 	beq	r19,zero,1010d1a8 <__subdf3+0x378>
1010cfc0:	9809883a 	mov	r4,r19
1010cfc4:	010d9300 	call	1010d930 <__clzsi2>
1010cfc8:	113ffe04 	addi	r4,r2,-8
1010cfcc:	00c007c4 	movi	r3,31
1010cfd0:	19007b16 	blt	r3,r4,1010d1c0 <__subdf3+0x390>
1010cfd4:	00800804 	movi	r2,32
1010cfd8:	1105c83a 	sub	r2,r2,r4
1010cfdc:	8884d83a 	srl	r2,r17,r2
1010cfe0:	9906983a 	sll	r3,r19,r4
1010cfe4:	8922983a 	sll	r17,r17,r4
1010cfe8:	10c4b03a 	or	r2,r2,r3
1010cfec:	24007816 	blt	r4,r16,1010d1d0 <__subdf3+0x3a0>
1010cff0:	2421c83a 	sub	r16,r4,r16
1010cff4:	80c00044 	addi	r3,r16,1
1010cff8:	010007c4 	movi	r4,31
1010cffc:	20c09516 	blt	r4,r3,1010d254 <__subdf3+0x424>
1010d000:	01400804 	movi	r5,32
1010d004:	28cbc83a 	sub	r5,r5,r3
1010d008:	88c8d83a 	srl	r4,r17,r3
1010d00c:	8962983a 	sll	r17,r17,r5
1010d010:	114a983a 	sll	r5,r2,r5
1010d014:	10c6d83a 	srl	r3,r2,r3
1010d018:	8804c03a 	cmpne	r2,r17,zero
1010d01c:	290ab03a 	or	r5,r5,r4
1010d020:	28a2b03a 	or	r17,r5,r2
1010d024:	0021883a 	mov	r16,zero
1010d028:	003fa206 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d02c:	2090b03a 	or	r8,r4,r2
1010d030:	40018e26 	beq	r8,zero,1010d66c <__subdf3+0x83c>
1010d034:	1007883a 	mov	r3,r2
1010d038:	2023883a 	mov	r17,r4
1010d03c:	888001cc 	andi	r2,r17,7
1010d040:	103f9e1e 	bne	r2,zero,1010cebc <__alt_data_end+0xfffecebc>
1010d044:	1804977a 	slli	r2,r3,29
1010d048:	8822d0fa 	srli	r17,r17,3
1010d04c:	1810d0fa 	srli	r8,r3,3
1010d050:	9100004c 	andi	r4,r18,1
1010d054:	1444b03a 	or	r2,r2,r17
1010d058:	00c1ffc4 	movi	r3,2047
1010d05c:	80c02826 	beq	r16,r3,1010d100 <__subdf3+0x2d0>
1010d060:	01400434 	movhi	r5,16
1010d064:	297fffc4 	addi	r5,r5,-1
1010d068:	80e0703a 	and	r16,r16,r3
1010d06c:	414a703a 	and	r5,r8,r5
1010d070:	003fa806 	br	1010cf14 <__alt_data_end+0xfffecf14>
1010d074:	0080630e 	bge	zero,r2,1010d204 <__subdf3+0x3d4>
1010d078:	48003026 	beq	r9,zero,1010d13c <__subdf3+0x30c>
1010d07c:	0101ffc4 	movi	r4,2047
1010d080:	813f8c26 	beq	r16,r4,1010ceb4 <__alt_data_end+0xfffeceb4>
1010d084:	29402034 	orhi	r5,r5,128
1010d088:	01000e04 	movi	r4,56
1010d08c:	2080a90e 	bge	r4,r2,1010d334 <__subdf3+0x504>
1010d090:	298cb03a 	or	r6,r5,r6
1010d094:	3012c03a 	cmpne	r9,r6,zero
1010d098:	0005883a 	mov	r2,zero
1010d09c:	4c53883a 	add	r9,r9,r17
1010d0a0:	4c63803a 	cmpltu	r17,r9,r17
1010d0a4:	10c7883a 	add	r3,r2,r3
1010d0a8:	88c7883a 	add	r3,r17,r3
1010d0ac:	4823883a 	mov	r17,r9
1010d0b0:	1880202c 	andhi	r2,r3,128
1010d0b4:	1000d026 	beq	r2,zero,1010d3f8 <__subdf3+0x5c8>
1010d0b8:	84000044 	addi	r16,r16,1
1010d0bc:	0081ffc4 	movi	r2,2047
1010d0c0:	8080fe26 	beq	r16,r2,1010d4bc <__subdf3+0x68c>
1010d0c4:	00bfe034 	movhi	r2,65408
1010d0c8:	10bfffc4 	addi	r2,r2,-1
1010d0cc:	1886703a 	and	r3,r3,r2
1010d0d0:	880ad07a 	srli	r5,r17,1
1010d0d4:	180497fa 	slli	r2,r3,31
1010d0d8:	8900004c 	andi	r4,r17,1
1010d0dc:	2922b03a 	or	r17,r5,r4
1010d0e0:	1806d07a 	srli	r3,r3,1
1010d0e4:	1462b03a 	or	r17,r2,r17
1010d0e8:	3825883a 	mov	r18,r7
1010d0ec:	003f7106 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d0f0:	2984b03a 	or	r2,r5,r6
1010d0f4:	103f6826 	beq	r2,zero,1010ce98 <__alt_data_end+0xfffece98>
1010d0f8:	39c03fcc 	andi	r7,r7,255
1010d0fc:	003f6706 	br	1010ce9c <__alt_data_end+0xfffece9c>
1010d100:	4086b03a 	or	r3,r8,r2
1010d104:	18015226 	beq	r3,zero,1010d650 <__subdf3+0x820>
1010d108:	00c00434 	movhi	r3,16
1010d10c:	41400234 	orhi	r5,r8,8
1010d110:	18ffffc4 	addi	r3,r3,-1
1010d114:	28ca703a 	and	r5,r5,r3
1010d118:	003f7e06 	br	1010cf14 <__alt_data_end+0xfffecf14>
1010d11c:	10bfffc4 	addi	r2,r2,-1
1010d120:	1000491e 	bne	r2,zero,1010d248 <__subdf3+0x418>
1010d124:	898fc83a 	sub	r7,r17,r6
1010d128:	89e3803a 	cmpltu	r17,r17,r7
1010d12c:	1947c83a 	sub	r3,r3,r5
1010d130:	1c47c83a 	sub	r3,r3,r17
1010d134:	3823883a 	mov	r17,r7
1010d138:	003f9b06 	br	1010cfa8 <__alt_data_end+0xfffecfa8>
1010d13c:	2988b03a 	or	r4,r5,r6
1010d140:	203f5c26 	beq	r4,zero,1010ceb4 <__alt_data_end+0xfffeceb4>
1010d144:	10bfffc4 	addi	r2,r2,-1
1010d148:	1000931e 	bne	r2,zero,1010d398 <__subdf3+0x568>
1010d14c:	898d883a 	add	r6,r17,r6
1010d150:	3463803a 	cmpltu	r17,r6,r17
1010d154:	1947883a 	add	r3,r3,r5
1010d158:	88c7883a 	add	r3,r17,r3
1010d15c:	3023883a 	mov	r17,r6
1010d160:	003fd306 	br	1010d0b0 <__alt_data_end+0xfffed0b0>
1010d164:	1000541e 	bne	r2,zero,1010d2b8 <__subdf3+0x488>
1010d168:	80800044 	addi	r2,r16,1
1010d16c:	1081ffcc 	andi	r2,r2,2047
1010d170:	01000044 	movi	r4,1
1010d174:	2080a20e 	bge	r4,r2,1010d400 <__subdf3+0x5d0>
1010d178:	8989c83a 	sub	r4,r17,r6
1010d17c:	8905803a 	cmpltu	r2,r17,r4
1010d180:	1967c83a 	sub	r19,r3,r5
1010d184:	98a7c83a 	sub	r19,r19,r2
1010d188:	9880202c 	andhi	r2,r19,128
1010d18c:	10006326 	beq	r2,zero,1010d31c <__subdf3+0x4ec>
1010d190:	3463c83a 	sub	r17,r6,r17
1010d194:	28c7c83a 	sub	r3,r5,r3
1010d198:	344d803a 	cmpltu	r6,r6,r17
1010d19c:	19a7c83a 	sub	r19,r3,r6
1010d1a0:	3825883a 	mov	r18,r7
1010d1a4:	983f861e 	bne	r19,zero,1010cfc0 <__alt_data_end+0xfffecfc0>
1010d1a8:	8809883a 	mov	r4,r17
1010d1ac:	010d9300 	call	1010d930 <__clzsi2>
1010d1b0:	10800804 	addi	r2,r2,32
1010d1b4:	113ffe04 	addi	r4,r2,-8
1010d1b8:	00c007c4 	movi	r3,31
1010d1bc:	193f850e 	bge	r3,r4,1010cfd4 <__alt_data_end+0xfffecfd4>
1010d1c0:	10bff604 	addi	r2,r2,-40
1010d1c4:	8884983a 	sll	r2,r17,r2
1010d1c8:	0023883a 	mov	r17,zero
1010d1cc:	243f880e 	bge	r4,r16,1010cff0 <__alt_data_end+0xfffecff0>
1010d1d0:	00ffe034 	movhi	r3,65408
1010d1d4:	18ffffc4 	addi	r3,r3,-1
1010d1d8:	8121c83a 	sub	r16,r16,r4
1010d1dc:	10c6703a 	and	r3,r2,r3
1010d1e0:	003f3406 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d1e4:	9100004c 	andi	r4,r18,1
1010d1e8:	000b883a 	mov	r5,zero
1010d1ec:	0005883a 	mov	r2,zero
1010d1f0:	003f4806 	br	1010cf14 <__alt_data_end+0xfffecf14>
1010d1f4:	298cb03a 	or	r6,r5,r6
1010d1f8:	300cc03a 	cmpne	r6,r6,zero
1010d1fc:	0005883a 	mov	r2,zero
1010d200:	003f6406 	br	1010cf94 <__alt_data_end+0xfffecf94>
1010d204:	10009a1e 	bne	r2,zero,1010d470 <__subdf3+0x640>
1010d208:	82400044 	addi	r9,r16,1
1010d20c:	4881ffcc 	andi	r2,r9,2047
1010d210:	02800044 	movi	r10,1
1010d214:	5080670e 	bge	r10,r2,1010d3b4 <__subdf3+0x584>
1010d218:	0081ffc4 	movi	r2,2047
1010d21c:	4880af26 	beq	r9,r2,1010d4dc <__subdf3+0x6ac>
1010d220:	898d883a 	add	r6,r17,r6
1010d224:	1945883a 	add	r2,r3,r5
1010d228:	3447803a 	cmpltu	r3,r6,r17
1010d22c:	1887883a 	add	r3,r3,r2
1010d230:	182297fa 	slli	r17,r3,31
1010d234:	300cd07a 	srli	r6,r6,1
1010d238:	1806d07a 	srli	r3,r3,1
1010d23c:	4821883a 	mov	r16,r9
1010d240:	89a2b03a 	or	r17,r17,r6
1010d244:	003f1b06 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d248:	0101ffc4 	movi	r4,2047
1010d24c:	813f441e 	bne	r16,r4,1010cf60 <__alt_data_end+0xfffecf60>
1010d250:	003f1806 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d254:	843ff844 	addi	r16,r16,-31
1010d258:	01400804 	movi	r5,32
1010d25c:	1408d83a 	srl	r4,r2,r16
1010d260:	19405026 	beq	r3,r5,1010d3a4 <__subdf3+0x574>
1010d264:	01401004 	movi	r5,64
1010d268:	28c7c83a 	sub	r3,r5,r3
1010d26c:	10c4983a 	sll	r2,r2,r3
1010d270:	88a2b03a 	or	r17,r17,r2
1010d274:	8822c03a 	cmpne	r17,r17,zero
1010d278:	2462b03a 	or	r17,r4,r17
1010d27c:	0007883a 	mov	r3,zero
1010d280:	0021883a 	mov	r16,zero
1010d284:	003f6d06 	br	1010d03c <__alt_data_end+0xfffed03c>
1010d288:	11fff804 	addi	r7,r2,-32
1010d28c:	01000804 	movi	r4,32
1010d290:	29ced83a 	srl	r7,r5,r7
1010d294:	11004526 	beq	r2,r4,1010d3ac <__subdf3+0x57c>
1010d298:	01001004 	movi	r4,64
1010d29c:	2089c83a 	sub	r4,r4,r2
1010d2a0:	2904983a 	sll	r2,r5,r4
1010d2a4:	118cb03a 	or	r6,r2,r6
1010d2a8:	300cc03a 	cmpne	r6,r6,zero
1010d2ac:	398cb03a 	or	r6,r7,r6
1010d2b0:	0005883a 	mov	r2,zero
1010d2b4:	003f3706 	br	1010cf94 <__alt_data_end+0xfffecf94>
1010d2b8:	80002a26 	beq	r16,zero,1010d364 <__subdf3+0x534>
1010d2bc:	0101ffc4 	movi	r4,2047
1010d2c0:	49006626 	beq	r9,r4,1010d45c <__subdf3+0x62c>
1010d2c4:	0085c83a 	sub	r2,zero,r2
1010d2c8:	18c02034 	orhi	r3,r3,128
1010d2cc:	01000e04 	movi	r4,56
1010d2d0:	20807e16 	blt	r4,r2,1010d4cc <__subdf3+0x69c>
1010d2d4:	010007c4 	movi	r4,31
1010d2d8:	2080e716 	blt	r4,r2,1010d678 <__subdf3+0x848>
1010d2dc:	01000804 	movi	r4,32
1010d2e0:	2089c83a 	sub	r4,r4,r2
1010d2e4:	1914983a 	sll	r10,r3,r4
1010d2e8:	8890d83a 	srl	r8,r17,r2
1010d2ec:	8908983a 	sll	r4,r17,r4
1010d2f0:	1884d83a 	srl	r2,r3,r2
1010d2f4:	5222b03a 	or	r17,r10,r8
1010d2f8:	2006c03a 	cmpne	r3,r4,zero
1010d2fc:	88e2b03a 	or	r17,r17,r3
1010d300:	3463c83a 	sub	r17,r6,r17
1010d304:	2885c83a 	sub	r2,r5,r2
1010d308:	344d803a 	cmpltu	r6,r6,r17
1010d30c:	1187c83a 	sub	r3,r2,r6
1010d310:	4821883a 	mov	r16,r9
1010d314:	3825883a 	mov	r18,r7
1010d318:	003f2306 	br	1010cfa8 <__alt_data_end+0xfffecfa8>
1010d31c:	24d0b03a 	or	r8,r4,r19
1010d320:	40001b1e 	bne	r8,zero,1010d390 <__subdf3+0x560>
1010d324:	0005883a 	mov	r2,zero
1010d328:	0009883a 	mov	r4,zero
1010d32c:	0021883a 	mov	r16,zero
1010d330:	003f4906 	br	1010d058 <__alt_data_end+0xfffed058>
1010d334:	010007c4 	movi	r4,31
1010d338:	20803a16 	blt	r4,r2,1010d424 <__subdf3+0x5f4>
1010d33c:	01000804 	movi	r4,32
1010d340:	2089c83a 	sub	r4,r4,r2
1010d344:	2912983a 	sll	r9,r5,r4
1010d348:	3090d83a 	srl	r8,r6,r2
1010d34c:	3108983a 	sll	r4,r6,r4
1010d350:	2884d83a 	srl	r2,r5,r2
1010d354:	4a12b03a 	or	r9,r9,r8
1010d358:	2008c03a 	cmpne	r4,r4,zero
1010d35c:	4912b03a 	or	r9,r9,r4
1010d360:	003f4e06 	br	1010d09c <__alt_data_end+0xfffed09c>
1010d364:	1c48b03a 	or	r4,r3,r17
1010d368:	20003c26 	beq	r4,zero,1010d45c <__subdf3+0x62c>
1010d36c:	0084303a 	nor	r2,zero,r2
1010d370:	1000381e 	bne	r2,zero,1010d454 <__subdf3+0x624>
1010d374:	3463c83a 	sub	r17,r6,r17
1010d378:	28c5c83a 	sub	r2,r5,r3
1010d37c:	344d803a 	cmpltu	r6,r6,r17
1010d380:	1187c83a 	sub	r3,r2,r6
1010d384:	4821883a 	mov	r16,r9
1010d388:	3825883a 	mov	r18,r7
1010d38c:	003f0606 	br	1010cfa8 <__alt_data_end+0xfffecfa8>
1010d390:	2023883a 	mov	r17,r4
1010d394:	003f0906 	br	1010cfbc <__alt_data_end+0xfffecfbc>
1010d398:	0101ffc4 	movi	r4,2047
1010d39c:	813f3a1e 	bne	r16,r4,1010d088 <__alt_data_end+0xfffed088>
1010d3a0:	003ec406 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d3a4:	0005883a 	mov	r2,zero
1010d3a8:	003fb106 	br	1010d270 <__alt_data_end+0xfffed270>
1010d3ac:	0005883a 	mov	r2,zero
1010d3b0:	003fbc06 	br	1010d2a4 <__alt_data_end+0xfffed2a4>
1010d3b4:	1c44b03a 	or	r2,r3,r17
1010d3b8:	80008e1e 	bne	r16,zero,1010d5f4 <__subdf3+0x7c4>
1010d3bc:	1000c826 	beq	r2,zero,1010d6e0 <__subdf3+0x8b0>
1010d3c0:	2984b03a 	or	r2,r5,r6
1010d3c4:	103ebb26 	beq	r2,zero,1010ceb4 <__alt_data_end+0xfffeceb4>
1010d3c8:	8989883a 	add	r4,r17,r6
1010d3cc:	1945883a 	add	r2,r3,r5
1010d3d0:	2447803a 	cmpltu	r3,r4,r17
1010d3d4:	1887883a 	add	r3,r3,r2
1010d3d8:	1880202c 	andhi	r2,r3,128
1010d3dc:	2023883a 	mov	r17,r4
1010d3e0:	103f1626 	beq	r2,zero,1010d03c <__alt_data_end+0xfffed03c>
1010d3e4:	00bfe034 	movhi	r2,65408
1010d3e8:	10bfffc4 	addi	r2,r2,-1
1010d3ec:	5021883a 	mov	r16,r10
1010d3f0:	1886703a 	and	r3,r3,r2
1010d3f4:	003eaf06 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d3f8:	3825883a 	mov	r18,r7
1010d3fc:	003f0f06 	br	1010d03c <__alt_data_end+0xfffed03c>
1010d400:	1c44b03a 	or	r2,r3,r17
1010d404:	8000251e 	bne	r16,zero,1010d49c <__subdf3+0x66c>
1010d408:	1000661e 	bne	r2,zero,1010d5a4 <__subdf3+0x774>
1010d40c:	2990b03a 	or	r8,r5,r6
1010d410:	40009626 	beq	r8,zero,1010d66c <__subdf3+0x83c>
1010d414:	2807883a 	mov	r3,r5
1010d418:	3023883a 	mov	r17,r6
1010d41c:	3825883a 	mov	r18,r7
1010d420:	003ea406 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d424:	127ff804 	addi	r9,r2,-32
1010d428:	01000804 	movi	r4,32
1010d42c:	2a52d83a 	srl	r9,r5,r9
1010d430:	11008c26 	beq	r2,r4,1010d664 <__subdf3+0x834>
1010d434:	01001004 	movi	r4,64
1010d438:	2085c83a 	sub	r2,r4,r2
1010d43c:	2884983a 	sll	r2,r5,r2
1010d440:	118cb03a 	or	r6,r2,r6
1010d444:	300cc03a 	cmpne	r6,r6,zero
1010d448:	4992b03a 	or	r9,r9,r6
1010d44c:	0005883a 	mov	r2,zero
1010d450:	003f1206 	br	1010d09c <__alt_data_end+0xfffed09c>
1010d454:	0101ffc4 	movi	r4,2047
1010d458:	493f9c1e 	bne	r9,r4,1010d2cc <__alt_data_end+0xfffed2cc>
1010d45c:	2807883a 	mov	r3,r5
1010d460:	3023883a 	mov	r17,r6
1010d464:	4821883a 	mov	r16,r9
1010d468:	3825883a 	mov	r18,r7
1010d46c:	003e9106 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d470:	80001f1e 	bne	r16,zero,1010d4f0 <__subdf3+0x6c0>
1010d474:	1c48b03a 	or	r4,r3,r17
1010d478:	20005a26 	beq	r4,zero,1010d5e4 <__subdf3+0x7b4>
1010d47c:	0084303a 	nor	r2,zero,r2
1010d480:	1000561e 	bne	r2,zero,1010d5dc <__subdf3+0x7ac>
1010d484:	89a3883a 	add	r17,r17,r6
1010d488:	1945883a 	add	r2,r3,r5
1010d48c:	898d803a 	cmpltu	r6,r17,r6
1010d490:	3087883a 	add	r3,r6,r2
1010d494:	4821883a 	mov	r16,r9
1010d498:	003f0506 	br	1010d0b0 <__alt_data_end+0xfffed0b0>
1010d49c:	10002b1e 	bne	r2,zero,1010d54c <__subdf3+0x71c>
1010d4a0:	2984b03a 	or	r2,r5,r6
1010d4a4:	10008026 	beq	r2,zero,1010d6a8 <__subdf3+0x878>
1010d4a8:	2807883a 	mov	r3,r5
1010d4ac:	3023883a 	mov	r17,r6
1010d4b0:	3825883a 	mov	r18,r7
1010d4b4:	0401ffc4 	movi	r16,2047
1010d4b8:	003e7e06 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d4bc:	3809883a 	mov	r4,r7
1010d4c0:	0011883a 	mov	r8,zero
1010d4c4:	0005883a 	mov	r2,zero
1010d4c8:	003ee306 	br	1010d058 <__alt_data_end+0xfffed058>
1010d4cc:	1c62b03a 	or	r17,r3,r17
1010d4d0:	8822c03a 	cmpne	r17,r17,zero
1010d4d4:	0005883a 	mov	r2,zero
1010d4d8:	003f8906 	br	1010d300 <__alt_data_end+0xfffed300>
1010d4dc:	3809883a 	mov	r4,r7
1010d4e0:	4821883a 	mov	r16,r9
1010d4e4:	0011883a 	mov	r8,zero
1010d4e8:	0005883a 	mov	r2,zero
1010d4ec:	003eda06 	br	1010d058 <__alt_data_end+0xfffed058>
1010d4f0:	0101ffc4 	movi	r4,2047
1010d4f4:	49003b26 	beq	r9,r4,1010d5e4 <__subdf3+0x7b4>
1010d4f8:	0085c83a 	sub	r2,zero,r2
1010d4fc:	18c02034 	orhi	r3,r3,128
1010d500:	01000e04 	movi	r4,56
1010d504:	20806e16 	blt	r4,r2,1010d6c0 <__subdf3+0x890>
1010d508:	010007c4 	movi	r4,31
1010d50c:	20807716 	blt	r4,r2,1010d6ec <__subdf3+0x8bc>
1010d510:	01000804 	movi	r4,32
1010d514:	2089c83a 	sub	r4,r4,r2
1010d518:	1914983a 	sll	r10,r3,r4
1010d51c:	8890d83a 	srl	r8,r17,r2
1010d520:	8908983a 	sll	r4,r17,r4
1010d524:	1884d83a 	srl	r2,r3,r2
1010d528:	5222b03a 	or	r17,r10,r8
1010d52c:	2006c03a 	cmpne	r3,r4,zero
1010d530:	88e2b03a 	or	r17,r17,r3
1010d534:	89a3883a 	add	r17,r17,r6
1010d538:	1145883a 	add	r2,r2,r5
1010d53c:	898d803a 	cmpltu	r6,r17,r6
1010d540:	3087883a 	add	r3,r6,r2
1010d544:	4821883a 	mov	r16,r9
1010d548:	003ed906 	br	1010d0b0 <__alt_data_end+0xfffed0b0>
1010d54c:	2984b03a 	or	r2,r5,r6
1010d550:	10004226 	beq	r2,zero,1010d65c <__subdf3+0x82c>
1010d554:	1808d0fa 	srli	r4,r3,3
1010d558:	8822d0fa 	srli	r17,r17,3
1010d55c:	1806977a 	slli	r3,r3,29
1010d560:	2080022c 	andhi	r2,r4,8
1010d564:	1c62b03a 	or	r17,r3,r17
1010d568:	10000826 	beq	r2,zero,1010d58c <__subdf3+0x75c>
1010d56c:	2812d0fa 	srli	r9,r5,3
1010d570:	4880022c 	andhi	r2,r9,8
1010d574:	1000051e 	bne	r2,zero,1010d58c <__subdf3+0x75c>
1010d578:	300cd0fa 	srli	r6,r6,3
1010d57c:	2804977a 	slli	r2,r5,29
1010d580:	4809883a 	mov	r4,r9
1010d584:	3825883a 	mov	r18,r7
1010d588:	11a2b03a 	or	r17,r2,r6
1010d58c:	8806d77a 	srli	r3,r17,29
1010d590:	200890fa 	slli	r4,r4,3
1010d594:	882290fa 	slli	r17,r17,3
1010d598:	0401ffc4 	movi	r16,2047
1010d59c:	1906b03a 	or	r3,r3,r4
1010d5a0:	003e4406 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d5a4:	2984b03a 	or	r2,r5,r6
1010d5a8:	103e4226 	beq	r2,zero,1010ceb4 <__alt_data_end+0xfffeceb4>
1010d5ac:	8989c83a 	sub	r4,r17,r6
1010d5b0:	8911803a 	cmpltu	r8,r17,r4
1010d5b4:	1945c83a 	sub	r2,r3,r5
1010d5b8:	1205c83a 	sub	r2,r2,r8
1010d5bc:	1200202c 	andhi	r8,r2,128
1010d5c0:	403e9a26 	beq	r8,zero,1010d02c <__alt_data_end+0xfffed02c>
1010d5c4:	3463c83a 	sub	r17,r6,r17
1010d5c8:	28c5c83a 	sub	r2,r5,r3
1010d5cc:	344d803a 	cmpltu	r6,r6,r17
1010d5d0:	1187c83a 	sub	r3,r2,r6
1010d5d4:	3825883a 	mov	r18,r7
1010d5d8:	003e3606 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d5dc:	0101ffc4 	movi	r4,2047
1010d5e0:	493fc71e 	bne	r9,r4,1010d500 <__alt_data_end+0xfffed500>
1010d5e4:	2807883a 	mov	r3,r5
1010d5e8:	3023883a 	mov	r17,r6
1010d5ec:	4821883a 	mov	r16,r9
1010d5f0:	003e3006 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d5f4:	10003626 	beq	r2,zero,1010d6d0 <__subdf3+0x8a0>
1010d5f8:	2984b03a 	or	r2,r5,r6
1010d5fc:	10001726 	beq	r2,zero,1010d65c <__subdf3+0x82c>
1010d600:	1808d0fa 	srli	r4,r3,3
1010d604:	8822d0fa 	srli	r17,r17,3
1010d608:	1806977a 	slli	r3,r3,29
1010d60c:	2080022c 	andhi	r2,r4,8
1010d610:	1c62b03a 	or	r17,r3,r17
1010d614:	10000726 	beq	r2,zero,1010d634 <__subdf3+0x804>
1010d618:	2812d0fa 	srli	r9,r5,3
1010d61c:	4880022c 	andhi	r2,r9,8
1010d620:	1000041e 	bne	r2,zero,1010d634 <__subdf3+0x804>
1010d624:	300cd0fa 	srli	r6,r6,3
1010d628:	2804977a 	slli	r2,r5,29
1010d62c:	4809883a 	mov	r4,r9
1010d630:	11a2b03a 	or	r17,r2,r6
1010d634:	8806d77a 	srli	r3,r17,29
1010d638:	200890fa 	slli	r4,r4,3
1010d63c:	882290fa 	slli	r17,r17,3
1010d640:	3825883a 	mov	r18,r7
1010d644:	1906b03a 	or	r3,r3,r4
1010d648:	0401ffc4 	movi	r16,2047
1010d64c:	003e1906 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d650:	000b883a 	mov	r5,zero
1010d654:	0005883a 	mov	r2,zero
1010d658:	003e2e06 	br	1010cf14 <__alt_data_end+0xfffecf14>
1010d65c:	0401ffc4 	movi	r16,2047
1010d660:	003e1406 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d664:	0005883a 	mov	r2,zero
1010d668:	003f7506 	br	1010d440 <__alt_data_end+0xfffed440>
1010d66c:	0005883a 	mov	r2,zero
1010d670:	0009883a 	mov	r4,zero
1010d674:	003e7806 	br	1010d058 <__alt_data_end+0xfffed058>
1010d678:	123ff804 	addi	r8,r2,-32
1010d67c:	01000804 	movi	r4,32
1010d680:	1a10d83a 	srl	r8,r3,r8
1010d684:	11002526 	beq	r2,r4,1010d71c <__subdf3+0x8ec>
1010d688:	01001004 	movi	r4,64
1010d68c:	2085c83a 	sub	r2,r4,r2
1010d690:	1884983a 	sll	r2,r3,r2
1010d694:	1444b03a 	or	r2,r2,r17
1010d698:	1004c03a 	cmpne	r2,r2,zero
1010d69c:	40a2b03a 	or	r17,r8,r2
1010d6a0:	0005883a 	mov	r2,zero
1010d6a4:	003f1606 	br	1010d300 <__alt_data_end+0xfffed300>
1010d6a8:	02000434 	movhi	r8,16
1010d6ac:	0009883a 	mov	r4,zero
1010d6b0:	423fffc4 	addi	r8,r8,-1
1010d6b4:	00bfffc4 	movi	r2,-1
1010d6b8:	0401ffc4 	movi	r16,2047
1010d6bc:	003e6606 	br	1010d058 <__alt_data_end+0xfffed058>
1010d6c0:	1c62b03a 	or	r17,r3,r17
1010d6c4:	8822c03a 	cmpne	r17,r17,zero
1010d6c8:	0005883a 	mov	r2,zero
1010d6cc:	003f9906 	br	1010d534 <__alt_data_end+0xfffed534>
1010d6d0:	2807883a 	mov	r3,r5
1010d6d4:	3023883a 	mov	r17,r6
1010d6d8:	0401ffc4 	movi	r16,2047
1010d6dc:	003df506 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d6e0:	2807883a 	mov	r3,r5
1010d6e4:	3023883a 	mov	r17,r6
1010d6e8:	003df206 	br	1010ceb4 <__alt_data_end+0xfffeceb4>
1010d6ec:	123ff804 	addi	r8,r2,-32
1010d6f0:	01000804 	movi	r4,32
1010d6f4:	1a10d83a 	srl	r8,r3,r8
1010d6f8:	11000a26 	beq	r2,r4,1010d724 <__subdf3+0x8f4>
1010d6fc:	01001004 	movi	r4,64
1010d700:	2085c83a 	sub	r2,r4,r2
1010d704:	1884983a 	sll	r2,r3,r2
1010d708:	1444b03a 	or	r2,r2,r17
1010d70c:	1004c03a 	cmpne	r2,r2,zero
1010d710:	40a2b03a 	or	r17,r8,r2
1010d714:	0005883a 	mov	r2,zero
1010d718:	003f8606 	br	1010d534 <__alt_data_end+0xfffed534>
1010d71c:	0005883a 	mov	r2,zero
1010d720:	003fdc06 	br	1010d694 <__alt_data_end+0xfffed694>
1010d724:	0005883a 	mov	r2,zero
1010d728:	003ff706 	br	1010d708 <__alt_data_end+0xfffed708>

1010d72c <__fixdfsi>:
1010d72c:	280cd53a 	srli	r6,r5,20
1010d730:	00c00434 	movhi	r3,16
1010d734:	18ffffc4 	addi	r3,r3,-1
1010d738:	3181ffcc 	andi	r6,r6,2047
1010d73c:	01c0ff84 	movi	r7,1022
1010d740:	28c6703a 	and	r3,r5,r3
1010d744:	280ad7fa 	srli	r5,r5,31
1010d748:	3980120e 	bge	r7,r6,1010d794 <__fixdfsi+0x68>
1010d74c:	00810744 	movi	r2,1053
1010d750:	11800c16 	blt	r2,r6,1010d784 <__fixdfsi+0x58>
1010d754:	00810cc4 	movi	r2,1075
1010d758:	1185c83a 	sub	r2,r2,r6
1010d75c:	01c007c4 	movi	r7,31
1010d760:	18c00434 	orhi	r3,r3,16
1010d764:	38800d16 	blt	r7,r2,1010d79c <__fixdfsi+0x70>
1010d768:	31befb44 	addi	r6,r6,-1043
1010d76c:	2084d83a 	srl	r2,r4,r2
1010d770:	1986983a 	sll	r3,r3,r6
1010d774:	1884b03a 	or	r2,r3,r2
1010d778:	28000726 	beq	r5,zero,1010d798 <__fixdfsi+0x6c>
1010d77c:	0085c83a 	sub	r2,zero,r2
1010d780:	f800283a 	ret
1010d784:	00a00034 	movhi	r2,32768
1010d788:	10bfffc4 	addi	r2,r2,-1
1010d78c:	2885883a 	add	r2,r5,r2
1010d790:	f800283a 	ret
1010d794:	0005883a 	mov	r2,zero
1010d798:	f800283a 	ret
1010d79c:	008104c4 	movi	r2,1043
1010d7a0:	1185c83a 	sub	r2,r2,r6
1010d7a4:	1884d83a 	srl	r2,r3,r2
1010d7a8:	003ff306 	br	1010d778 <__alt_data_end+0xfffed778>

1010d7ac <__floatsidf>:
1010d7ac:	defffd04 	addi	sp,sp,-12
1010d7b0:	dfc00215 	stw	ra,8(sp)
1010d7b4:	dc400115 	stw	r17,4(sp)
1010d7b8:	dc000015 	stw	r16,0(sp)
1010d7bc:	20002b26 	beq	r4,zero,1010d86c <__floatsidf+0xc0>
1010d7c0:	2023883a 	mov	r17,r4
1010d7c4:	2020d7fa 	srli	r16,r4,31
1010d7c8:	20002d16 	blt	r4,zero,1010d880 <__floatsidf+0xd4>
1010d7cc:	8809883a 	mov	r4,r17
1010d7d0:	010d9300 	call	1010d930 <__clzsi2>
1010d7d4:	01410784 	movi	r5,1054
1010d7d8:	288bc83a 	sub	r5,r5,r2
1010d7dc:	01010cc4 	movi	r4,1075
1010d7e0:	2149c83a 	sub	r4,r4,r5
1010d7e4:	00c007c4 	movi	r3,31
1010d7e8:	1900160e 	bge	r3,r4,1010d844 <__floatsidf+0x98>
1010d7ec:	00c104c4 	movi	r3,1043
1010d7f0:	1947c83a 	sub	r3,r3,r5
1010d7f4:	88c6983a 	sll	r3,r17,r3
1010d7f8:	00800434 	movhi	r2,16
1010d7fc:	10bfffc4 	addi	r2,r2,-1
1010d800:	1886703a 	and	r3,r3,r2
1010d804:	2941ffcc 	andi	r5,r5,2047
1010d808:	800d883a 	mov	r6,r16
1010d80c:	0005883a 	mov	r2,zero
1010d810:	280a953a 	slli	r5,r5,20
1010d814:	31803fcc 	andi	r6,r6,255
1010d818:	01000434 	movhi	r4,16
1010d81c:	300c97fa 	slli	r6,r6,31
1010d820:	213fffc4 	addi	r4,r4,-1
1010d824:	1906703a 	and	r3,r3,r4
1010d828:	1946b03a 	or	r3,r3,r5
1010d82c:	1986b03a 	or	r3,r3,r6
1010d830:	dfc00217 	ldw	ra,8(sp)
1010d834:	dc400117 	ldw	r17,4(sp)
1010d838:	dc000017 	ldw	r16,0(sp)
1010d83c:	dec00304 	addi	sp,sp,12
1010d840:	f800283a 	ret
1010d844:	00c002c4 	movi	r3,11
1010d848:	1887c83a 	sub	r3,r3,r2
1010d84c:	88c6d83a 	srl	r3,r17,r3
1010d850:	8904983a 	sll	r2,r17,r4
1010d854:	01000434 	movhi	r4,16
1010d858:	213fffc4 	addi	r4,r4,-1
1010d85c:	2941ffcc 	andi	r5,r5,2047
1010d860:	1906703a 	and	r3,r3,r4
1010d864:	800d883a 	mov	r6,r16
1010d868:	003fe906 	br	1010d810 <__alt_data_end+0xfffed810>
1010d86c:	000d883a 	mov	r6,zero
1010d870:	000b883a 	mov	r5,zero
1010d874:	0007883a 	mov	r3,zero
1010d878:	0005883a 	mov	r2,zero
1010d87c:	003fe406 	br	1010d810 <__alt_data_end+0xfffed810>
1010d880:	0123c83a 	sub	r17,zero,r4
1010d884:	003fd106 	br	1010d7cc <__alt_data_end+0xfffed7cc>

1010d888 <__floatunsidf>:
1010d888:	defffe04 	addi	sp,sp,-8
1010d88c:	dc000015 	stw	r16,0(sp)
1010d890:	dfc00115 	stw	ra,4(sp)
1010d894:	2021883a 	mov	r16,r4
1010d898:	20002226 	beq	r4,zero,1010d924 <__floatunsidf+0x9c>
1010d89c:	010d9300 	call	1010d930 <__clzsi2>
1010d8a0:	01010784 	movi	r4,1054
1010d8a4:	2089c83a 	sub	r4,r4,r2
1010d8a8:	01810cc4 	movi	r6,1075
1010d8ac:	310dc83a 	sub	r6,r6,r4
1010d8b0:	00c007c4 	movi	r3,31
1010d8b4:	1980120e 	bge	r3,r6,1010d900 <__floatunsidf+0x78>
1010d8b8:	00c104c4 	movi	r3,1043
1010d8bc:	1907c83a 	sub	r3,r3,r4
1010d8c0:	80ca983a 	sll	r5,r16,r3
1010d8c4:	00800434 	movhi	r2,16
1010d8c8:	10bfffc4 	addi	r2,r2,-1
1010d8cc:	2101ffcc 	andi	r4,r4,2047
1010d8d0:	0021883a 	mov	r16,zero
1010d8d4:	288a703a 	and	r5,r5,r2
1010d8d8:	2008953a 	slli	r4,r4,20
1010d8dc:	00c00434 	movhi	r3,16
1010d8e0:	18ffffc4 	addi	r3,r3,-1
1010d8e4:	28c6703a 	and	r3,r5,r3
1010d8e8:	8005883a 	mov	r2,r16
1010d8ec:	1906b03a 	or	r3,r3,r4
1010d8f0:	dfc00117 	ldw	ra,4(sp)
1010d8f4:	dc000017 	ldw	r16,0(sp)
1010d8f8:	dec00204 	addi	sp,sp,8
1010d8fc:	f800283a 	ret
1010d900:	00c002c4 	movi	r3,11
1010d904:	188bc83a 	sub	r5,r3,r2
1010d908:	814ad83a 	srl	r5,r16,r5
1010d90c:	00c00434 	movhi	r3,16
1010d910:	18ffffc4 	addi	r3,r3,-1
1010d914:	81a0983a 	sll	r16,r16,r6
1010d918:	2101ffcc 	andi	r4,r4,2047
1010d91c:	28ca703a 	and	r5,r5,r3
1010d920:	003fed06 	br	1010d8d8 <__alt_data_end+0xfffed8d8>
1010d924:	0009883a 	mov	r4,zero
1010d928:	000b883a 	mov	r5,zero
1010d92c:	003fea06 	br	1010d8d8 <__alt_data_end+0xfffed8d8>

1010d930 <__clzsi2>:
1010d930:	00bfffd4 	movui	r2,65535
1010d934:	11000536 	bltu	r2,r4,1010d94c <__clzsi2+0x1c>
1010d938:	00803fc4 	movi	r2,255
1010d93c:	11000f36 	bltu	r2,r4,1010d97c <__clzsi2+0x4c>
1010d940:	00800804 	movi	r2,32
1010d944:	0007883a 	mov	r3,zero
1010d948:	00000506 	br	1010d960 <__clzsi2+0x30>
1010d94c:	00804034 	movhi	r2,256
1010d950:	10bfffc4 	addi	r2,r2,-1
1010d954:	11000c2e 	bgeu	r2,r4,1010d988 <__clzsi2+0x58>
1010d958:	00800204 	movi	r2,8
1010d95c:	00c00604 	movi	r3,24
1010d960:	20c8d83a 	srl	r4,r4,r3
1010d964:	00c40474 	movhi	r3,4113
1010d968:	18c0ca04 	addi	r3,r3,808
1010d96c:	1909883a 	add	r4,r3,r4
1010d970:	20c00003 	ldbu	r3,0(r4)
1010d974:	10c5c83a 	sub	r2,r2,r3
1010d978:	f800283a 	ret
1010d97c:	00800604 	movi	r2,24
1010d980:	00c00204 	movi	r3,8
1010d984:	003ff606 	br	1010d960 <__alt_data_end+0xfffed960>
1010d988:	00800404 	movi	r2,16
1010d98c:	1007883a 	mov	r3,r2
1010d990:	003ff306 	br	1010d960 <__alt_data_end+0xfffed960>

1010d994 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d994:	defffe04 	addi	sp,sp,-8
1010d998:	dfc00115 	stw	ra,4(sp)
1010d99c:	df000015 	stw	fp,0(sp)
1010d9a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d9a4:	d0a00b17 	ldw	r2,-32724(gp)
1010d9a8:	10000326 	beq	r2,zero,1010d9b8 <alt_get_errno+0x24>
1010d9ac:	d0a00b17 	ldw	r2,-32724(gp)
1010d9b0:	103ee83a 	callr	r2
1010d9b4:	00000106 	br	1010d9bc <alt_get_errno+0x28>
1010d9b8:	d0a6d104 	addi	r2,gp,-25788
}
1010d9bc:	e037883a 	mov	sp,fp
1010d9c0:	dfc00117 	ldw	ra,4(sp)
1010d9c4:	df000017 	ldw	fp,0(sp)
1010d9c8:	dec00204 	addi	sp,sp,8
1010d9cc:	f800283a 	ret

1010d9d0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1010d9d0:	defffb04 	addi	sp,sp,-20
1010d9d4:	dfc00415 	stw	ra,16(sp)
1010d9d8:	df000315 	stw	fp,12(sp)
1010d9dc:	df000304 	addi	fp,sp,12
1010d9e0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1010d9e4:	e0bfff17 	ldw	r2,-4(fp)
1010d9e8:	10000816 	blt	r2,zero,1010da0c <close+0x3c>
1010d9ec:	01400304 	movi	r5,12
1010d9f0:	e13fff17 	ldw	r4,-4(fp)
1010d9f4:	0100c080 	call	10100c08 <__mulsi3>
1010d9f8:	1007883a 	mov	r3,r2
1010d9fc:	00840474 	movhi	r2,4113
1010da00:	10834a04 	addi	r2,r2,3368
1010da04:	1885883a 	add	r2,r3,r2
1010da08:	00000106 	br	1010da10 <close+0x40>
1010da0c:	0005883a 	mov	r2,zero
1010da10:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1010da14:	e0bffd17 	ldw	r2,-12(fp)
1010da18:	10001926 	beq	r2,zero,1010da80 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1010da1c:	e0bffd17 	ldw	r2,-12(fp)
1010da20:	10800017 	ldw	r2,0(r2)
1010da24:	10800417 	ldw	r2,16(r2)
1010da28:	10000626 	beq	r2,zero,1010da44 <close+0x74>
1010da2c:	e0bffd17 	ldw	r2,-12(fp)
1010da30:	10800017 	ldw	r2,0(r2)
1010da34:	10800417 	ldw	r2,16(r2)
1010da38:	e13ffd17 	ldw	r4,-12(fp)
1010da3c:	103ee83a 	callr	r2
1010da40:	00000106 	br	1010da48 <close+0x78>
1010da44:	0005883a 	mov	r2,zero
1010da48:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1010da4c:	e13fff17 	ldw	r4,-4(fp)
1010da50:	010e0b80 	call	1010e0b8 <alt_release_fd>
    if (rval < 0)
1010da54:	e0bffe17 	ldw	r2,-8(fp)
1010da58:	1000070e 	bge	r2,zero,1010da78 <close+0xa8>
    {
      ALT_ERRNO = -rval;
1010da5c:	010d9940 	call	1010d994 <alt_get_errno>
1010da60:	1007883a 	mov	r3,r2
1010da64:	e0bffe17 	ldw	r2,-8(fp)
1010da68:	0085c83a 	sub	r2,zero,r2
1010da6c:	18800015 	stw	r2,0(r3)
      return -1;
1010da70:	00bfffc4 	movi	r2,-1
1010da74:	00000706 	br	1010da94 <close+0xc4>
    }
    return 0;
1010da78:	0005883a 	mov	r2,zero
1010da7c:	00000506 	br	1010da94 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010da80:	010d9940 	call	1010d994 <alt_get_errno>
1010da84:	1007883a 	mov	r3,r2
1010da88:	00801444 	movi	r2,81
1010da8c:	18800015 	stw	r2,0(r3)
    return -1;
1010da90:	00bfffc4 	movi	r2,-1
  }
}
1010da94:	e037883a 	mov	sp,fp
1010da98:	dfc00117 	ldw	ra,4(sp)
1010da9c:	df000017 	ldw	fp,0(sp)
1010daa0:	dec00204 	addi	sp,sp,8
1010daa4:	f800283a 	ret

1010daa8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1010daa8:	defffc04 	addi	sp,sp,-16
1010daac:	df000315 	stw	fp,12(sp)
1010dab0:	df000304 	addi	fp,sp,12
1010dab4:	e13ffd15 	stw	r4,-12(fp)
1010dab8:	e17ffe15 	stw	r5,-8(fp)
1010dabc:	e1bfff15 	stw	r6,-4(fp)
  return len;
1010dac0:	e0bfff17 	ldw	r2,-4(fp)
}
1010dac4:	e037883a 	mov	sp,fp
1010dac8:	df000017 	ldw	fp,0(sp)
1010dacc:	dec00104 	addi	sp,sp,4
1010dad0:	f800283a 	ret

1010dad4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010dad4:	defffe04 	addi	sp,sp,-8
1010dad8:	dfc00115 	stw	ra,4(sp)
1010dadc:	df000015 	stw	fp,0(sp)
1010dae0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010dae4:	d0a00b17 	ldw	r2,-32724(gp)
1010dae8:	10000326 	beq	r2,zero,1010daf8 <alt_get_errno+0x24>
1010daec:	d0a00b17 	ldw	r2,-32724(gp)
1010daf0:	103ee83a 	callr	r2
1010daf4:	00000106 	br	1010dafc <alt_get_errno+0x28>
1010daf8:	d0a6d104 	addi	r2,gp,-25788
}
1010dafc:	e037883a 	mov	sp,fp
1010db00:	dfc00117 	ldw	ra,4(sp)
1010db04:	df000017 	ldw	fp,0(sp)
1010db08:	dec00204 	addi	sp,sp,8
1010db0c:	f800283a 	ret

1010db10 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1010db10:	defffb04 	addi	sp,sp,-20
1010db14:	dfc00415 	stw	ra,16(sp)
1010db18:	df000315 	stw	fp,12(sp)
1010db1c:	df000304 	addi	fp,sp,12
1010db20:	e13ffe15 	stw	r4,-8(fp)
1010db24:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010db28:	e0bffe17 	ldw	r2,-8(fp)
1010db2c:	10000816 	blt	r2,zero,1010db50 <fstat+0x40>
1010db30:	01400304 	movi	r5,12
1010db34:	e13ffe17 	ldw	r4,-8(fp)
1010db38:	0100c080 	call	10100c08 <__mulsi3>
1010db3c:	1007883a 	mov	r3,r2
1010db40:	00840474 	movhi	r2,4113
1010db44:	10834a04 	addi	r2,r2,3368
1010db48:	1885883a 	add	r2,r3,r2
1010db4c:	00000106 	br	1010db54 <fstat+0x44>
1010db50:	0005883a 	mov	r2,zero
1010db54:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1010db58:	e0bffd17 	ldw	r2,-12(fp)
1010db5c:	10001026 	beq	r2,zero,1010dba0 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1010db60:	e0bffd17 	ldw	r2,-12(fp)
1010db64:	10800017 	ldw	r2,0(r2)
1010db68:	10800817 	ldw	r2,32(r2)
1010db6c:	10000726 	beq	r2,zero,1010db8c <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
1010db70:	e0bffd17 	ldw	r2,-12(fp)
1010db74:	10800017 	ldw	r2,0(r2)
1010db78:	10800817 	ldw	r2,32(r2)
1010db7c:	e17fff17 	ldw	r5,-4(fp)
1010db80:	e13ffd17 	ldw	r4,-12(fp)
1010db84:	103ee83a 	callr	r2
1010db88:	00000a06 	br	1010dbb4 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1010db8c:	e0bfff17 	ldw	r2,-4(fp)
1010db90:	00c80004 	movi	r3,8192
1010db94:	10c00115 	stw	r3,4(r2)
      return 0;
1010db98:	0005883a 	mov	r2,zero
1010db9c:	00000506 	br	1010dbb4 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010dba0:	010dad40 	call	1010dad4 <alt_get_errno>
1010dba4:	1007883a 	mov	r3,r2
1010dba8:	00801444 	movi	r2,81
1010dbac:	18800015 	stw	r2,0(r3)
    return -1;
1010dbb0:	00bfffc4 	movi	r2,-1
  }
}
1010dbb4:	e037883a 	mov	sp,fp
1010dbb8:	dfc00117 	ldw	ra,4(sp)
1010dbbc:	df000017 	ldw	fp,0(sp)
1010dbc0:	dec00204 	addi	sp,sp,8
1010dbc4:	f800283a 	ret

1010dbc8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010dbc8:	defffe04 	addi	sp,sp,-8
1010dbcc:	dfc00115 	stw	ra,4(sp)
1010dbd0:	df000015 	stw	fp,0(sp)
1010dbd4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010dbd8:	d0a00b17 	ldw	r2,-32724(gp)
1010dbdc:	10000326 	beq	r2,zero,1010dbec <alt_get_errno+0x24>
1010dbe0:	d0a00b17 	ldw	r2,-32724(gp)
1010dbe4:	103ee83a 	callr	r2
1010dbe8:	00000106 	br	1010dbf0 <alt_get_errno+0x28>
1010dbec:	d0a6d104 	addi	r2,gp,-25788
}
1010dbf0:	e037883a 	mov	sp,fp
1010dbf4:	dfc00117 	ldw	ra,4(sp)
1010dbf8:	df000017 	ldw	fp,0(sp)
1010dbfc:	dec00204 	addi	sp,sp,8
1010dc00:	f800283a 	ret

1010dc04 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1010dc04:	deffed04 	addi	sp,sp,-76
1010dc08:	dfc01215 	stw	ra,72(sp)
1010dc0c:	df001115 	stw	fp,68(sp)
1010dc10:	df001104 	addi	fp,sp,68
1010dc14:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010dc18:	e0bfff17 	ldw	r2,-4(fp)
1010dc1c:	10000816 	blt	r2,zero,1010dc40 <isatty+0x3c>
1010dc20:	01400304 	movi	r5,12
1010dc24:	e13fff17 	ldw	r4,-4(fp)
1010dc28:	0100c080 	call	10100c08 <__mulsi3>
1010dc2c:	1007883a 	mov	r3,r2
1010dc30:	00840474 	movhi	r2,4113
1010dc34:	10834a04 	addi	r2,r2,3368
1010dc38:	1885883a 	add	r2,r3,r2
1010dc3c:	00000106 	br	1010dc44 <isatty+0x40>
1010dc40:	0005883a 	mov	r2,zero
1010dc44:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1010dc48:	e0bfef17 	ldw	r2,-68(fp)
1010dc4c:	10000e26 	beq	r2,zero,1010dc88 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1010dc50:	e0bfef17 	ldw	r2,-68(fp)
1010dc54:	10800017 	ldw	r2,0(r2)
1010dc58:	10800817 	ldw	r2,32(r2)
1010dc5c:	1000021e 	bne	r2,zero,1010dc68 <isatty+0x64>
    {
      return 1;
1010dc60:	00800044 	movi	r2,1
1010dc64:	00000d06 	br	1010dc9c <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1010dc68:	e0bff004 	addi	r2,fp,-64
1010dc6c:	100b883a 	mov	r5,r2
1010dc70:	e13fff17 	ldw	r4,-4(fp)
1010dc74:	010db100 	call	1010db10 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1010dc78:	e0bff117 	ldw	r2,-60(fp)
1010dc7c:	10880020 	cmpeqi	r2,r2,8192
1010dc80:	10803fcc 	andi	r2,r2,255
1010dc84:	00000506 	br	1010dc9c <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010dc88:	010dbc80 	call	1010dbc8 <alt_get_errno>
1010dc8c:	1007883a 	mov	r3,r2
1010dc90:	00801444 	movi	r2,81
1010dc94:	18800015 	stw	r2,0(r3)
    return 0;
1010dc98:	0005883a 	mov	r2,zero
  }
}
1010dc9c:	e037883a 	mov	sp,fp
1010dca0:	dfc00117 	ldw	ra,4(sp)
1010dca4:	df000017 	ldw	fp,0(sp)
1010dca8:	dec00204 	addi	sp,sp,8
1010dcac:	f800283a 	ret

1010dcb0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1010dcb0:	defffc04 	addi	sp,sp,-16
1010dcb4:	df000315 	stw	fp,12(sp)
1010dcb8:	df000304 	addi	fp,sp,12
1010dcbc:	e13ffd15 	stw	r4,-12(fp)
1010dcc0:	e17ffe15 	stw	r5,-8(fp)
1010dcc4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1010dcc8:	e0fffe17 	ldw	r3,-8(fp)
1010dccc:	e0bffd17 	ldw	r2,-12(fp)
1010dcd0:	18800c26 	beq	r3,r2,1010dd04 <alt_load_section+0x54>
  {
    while( to != end )
1010dcd4:	00000806 	br	1010dcf8 <alt_load_section+0x48>
    {
      *to++ = *from++;
1010dcd8:	e0bffe17 	ldw	r2,-8(fp)
1010dcdc:	10c00104 	addi	r3,r2,4
1010dce0:	e0fffe15 	stw	r3,-8(fp)
1010dce4:	e0fffd17 	ldw	r3,-12(fp)
1010dce8:	19000104 	addi	r4,r3,4
1010dcec:	e13ffd15 	stw	r4,-12(fp)
1010dcf0:	18c00017 	ldw	r3,0(r3)
1010dcf4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1010dcf8:	e0fffe17 	ldw	r3,-8(fp)
1010dcfc:	e0bfff17 	ldw	r2,-4(fp)
1010dd00:	18bff51e 	bne	r3,r2,1010dcd8 <__alt_data_end+0xfffedcd8>
    {
      *to++ = *from++;
    }
  }
}
1010dd04:	0001883a 	nop
1010dd08:	e037883a 	mov	sp,fp
1010dd0c:	df000017 	ldw	fp,0(sp)
1010dd10:	dec00104 	addi	sp,sp,4
1010dd14:	f800283a 	ret

1010dd18 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1010dd18:	defffe04 	addi	sp,sp,-8
1010dd1c:	dfc00115 	stw	ra,4(sp)
1010dd20:	df000015 	stw	fp,0(sp)
1010dd24:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1010dd28:	01840474 	movhi	r6,4113
1010dd2c:	3187d204 	addi	r6,r6,8008
1010dd30:	01440474 	movhi	r5,4113
1010dd34:	29411704 	addi	r5,r5,1116
1010dd38:	01040474 	movhi	r4,4113
1010dd3c:	2107d204 	addi	r4,r4,8008
1010dd40:	010dcb00 	call	1010dcb0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1010dd44:	01840434 	movhi	r6,4112
1010dd48:	31808c04 	addi	r6,r6,560
1010dd4c:	01440434 	movhi	r5,4112
1010dd50:	29400804 	addi	r5,r5,32
1010dd54:	01040434 	movhi	r4,4112
1010dd58:	21000804 	addi	r4,r4,32
1010dd5c:	010dcb00 	call	1010dcb0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1010dd60:	01840474 	movhi	r6,4113
1010dd64:	31811704 	addi	r6,r6,1116
1010dd68:	01440474 	movhi	r5,4113
1010dd6c:	29400a04 	addi	r5,r5,40
1010dd70:	01040474 	movhi	r4,4113
1010dd74:	21000a04 	addi	r4,r4,40
1010dd78:	010dcb00 	call	1010dcb0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1010dd7c:	010ef700 	call	1010ef70 <alt_dcache_flush_all>
  alt_icache_flush_all();
1010dd80:	010f1300 	call	1010f130 <alt_icache_flush_all>
}
1010dd84:	0001883a 	nop
1010dd88:	e037883a 	mov	sp,fp
1010dd8c:	dfc00117 	ldw	ra,4(sp)
1010dd90:	df000017 	ldw	fp,0(sp)
1010dd94:	dec00204 	addi	sp,sp,8
1010dd98:	f800283a 	ret

1010dd9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010dd9c:	defffe04 	addi	sp,sp,-8
1010dda0:	dfc00115 	stw	ra,4(sp)
1010dda4:	df000015 	stw	fp,0(sp)
1010dda8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010ddac:	d0a00b17 	ldw	r2,-32724(gp)
1010ddb0:	10000326 	beq	r2,zero,1010ddc0 <alt_get_errno+0x24>
1010ddb4:	d0a00b17 	ldw	r2,-32724(gp)
1010ddb8:	103ee83a 	callr	r2
1010ddbc:	00000106 	br	1010ddc4 <alt_get_errno+0x28>
1010ddc0:	d0a6d104 	addi	r2,gp,-25788
}
1010ddc4:	e037883a 	mov	sp,fp
1010ddc8:	dfc00117 	ldw	ra,4(sp)
1010ddcc:	df000017 	ldw	fp,0(sp)
1010ddd0:	dec00204 	addi	sp,sp,8
1010ddd4:	f800283a 	ret

1010ddd8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1010ddd8:	defff904 	addi	sp,sp,-28
1010dddc:	dfc00615 	stw	ra,24(sp)
1010dde0:	df000515 	stw	fp,20(sp)
1010dde4:	df000504 	addi	fp,sp,20
1010dde8:	e13ffd15 	stw	r4,-12(fp)
1010ddec:	e17ffe15 	stw	r5,-8(fp)
1010ddf0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1010ddf4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010ddf8:	e0bffd17 	ldw	r2,-12(fp)
1010ddfc:	10000816 	blt	r2,zero,1010de20 <lseek+0x48>
1010de00:	01400304 	movi	r5,12
1010de04:	e13ffd17 	ldw	r4,-12(fp)
1010de08:	0100c080 	call	10100c08 <__mulsi3>
1010de0c:	1007883a 	mov	r3,r2
1010de10:	00840474 	movhi	r2,4113
1010de14:	10834a04 	addi	r2,r2,3368
1010de18:	1885883a 	add	r2,r3,r2
1010de1c:	00000106 	br	1010de24 <lseek+0x4c>
1010de20:	0005883a 	mov	r2,zero
1010de24:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1010de28:	e0bffc17 	ldw	r2,-16(fp)
1010de2c:	10001026 	beq	r2,zero,1010de70 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1010de30:	e0bffc17 	ldw	r2,-16(fp)
1010de34:	10800017 	ldw	r2,0(r2)
1010de38:	10800717 	ldw	r2,28(r2)
1010de3c:	10000926 	beq	r2,zero,1010de64 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1010de40:	e0bffc17 	ldw	r2,-16(fp)
1010de44:	10800017 	ldw	r2,0(r2)
1010de48:	10800717 	ldw	r2,28(r2)
1010de4c:	e1bfff17 	ldw	r6,-4(fp)
1010de50:	e17ffe17 	ldw	r5,-8(fp)
1010de54:	e13ffc17 	ldw	r4,-16(fp)
1010de58:	103ee83a 	callr	r2
1010de5c:	e0bffb15 	stw	r2,-20(fp)
1010de60:	00000506 	br	1010de78 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1010de64:	00bfde84 	movi	r2,-134
1010de68:	e0bffb15 	stw	r2,-20(fp)
1010de6c:	00000206 	br	1010de78 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
1010de70:	00bfebc4 	movi	r2,-81
1010de74:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1010de78:	e0bffb17 	ldw	r2,-20(fp)
1010de7c:	1000070e 	bge	r2,zero,1010de9c <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
1010de80:	010dd9c0 	call	1010dd9c <alt_get_errno>
1010de84:	1007883a 	mov	r3,r2
1010de88:	e0bffb17 	ldw	r2,-20(fp)
1010de8c:	0085c83a 	sub	r2,zero,r2
1010de90:	18800015 	stw	r2,0(r3)
    rc = -1;
1010de94:	00bfffc4 	movi	r2,-1
1010de98:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1010de9c:	e0bffb17 	ldw	r2,-20(fp)
}
1010dea0:	e037883a 	mov	sp,fp
1010dea4:	dfc00117 	ldw	ra,4(sp)
1010dea8:	df000017 	ldw	fp,0(sp)
1010deac:	dec00204 	addi	sp,sp,8
1010deb0:	f800283a 	ret

1010deb4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1010deb4:	defffd04 	addi	sp,sp,-12
1010deb8:	dfc00215 	stw	ra,8(sp)
1010debc:	df000115 	stw	fp,4(sp)
1010dec0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1010dec4:	0009883a 	mov	r4,zero
1010dec8:	010e35c0 	call	1010e35c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1010decc:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1010ded0:	010e3940 	call	1010e394 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1010ded4:	01840474 	movhi	r6,4113
1010ded8:	31810d04 	addi	r6,r6,1076
1010dedc:	01440474 	movhi	r5,4113
1010dee0:	29410d04 	addi	r5,r5,1076
1010dee4:	01040474 	movhi	r4,4113
1010dee8:	21010d04 	addi	r4,r4,1076
1010deec:	010f4d40 	call	1010f4d4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1010def0:	010f0700 	call	1010f070 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1010def4:	01040474 	movhi	r4,4113
1010def8:	213c3404 	addi	r4,r4,-3888
1010defc:	010fc940 	call	1010fc94 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1010df00:	d0a6d217 	ldw	r2,-25784(gp)
1010df04:	d0e6d317 	ldw	r3,-25780(gp)
1010df08:	d126d417 	ldw	r4,-25776(gp)
1010df0c:	200d883a 	mov	r6,r4
1010df10:	180b883a 	mov	r5,r3
1010df14:	1009883a 	mov	r4,r2
1010df18:	01009a00 	call	101009a0 <main>
1010df1c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1010df20:	01000044 	movi	r4,1
1010df24:	010d9d00 	call	1010d9d0 <close>
  exit (result);
1010df28:	e13fff17 	ldw	r4,-4(fp)
1010df2c:	010fca80 	call	1010fca8 <exit>

1010df30 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1010df30:	defffe04 	addi	sp,sp,-8
1010df34:	df000115 	stw	fp,4(sp)
1010df38:	df000104 	addi	fp,sp,4
1010df3c:	e13fff15 	stw	r4,-4(fp)
}
1010df40:	0001883a 	nop
1010df44:	e037883a 	mov	sp,fp
1010df48:	df000017 	ldw	fp,0(sp)
1010df4c:	dec00104 	addi	sp,sp,4
1010df50:	f800283a 	ret

1010df54 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1010df54:	defffe04 	addi	sp,sp,-8
1010df58:	df000115 	stw	fp,4(sp)
1010df5c:	df000104 	addi	fp,sp,4
1010df60:	e13fff15 	stw	r4,-4(fp)
}
1010df64:	0001883a 	nop
1010df68:	e037883a 	mov	sp,fp
1010df6c:	df000017 	ldw	fp,0(sp)
1010df70:	dec00104 	addi	sp,sp,4
1010df74:	f800283a 	ret

1010df78 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010df78:	defffe04 	addi	sp,sp,-8
1010df7c:	dfc00115 	stw	ra,4(sp)
1010df80:	df000015 	stw	fp,0(sp)
1010df84:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010df88:	d0a00b17 	ldw	r2,-32724(gp)
1010df8c:	10000326 	beq	r2,zero,1010df9c <alt_get_errno+0x24>
1010df90:	d0a00b17 	ldw	r2,-32724(gp)
1010df94:	103ee83a 	callr	r2
1010df98:	00000106 	br	1010dfa0 <alt_get_errno+0x28>
1010df9c:	d0a6d104 	addi	r2,gp,-25788
}
1010dfa0:	e037883a 	mov	sp,fp
1010dfa4:	dfc00117 	ldw	ra,4(sp)
1010dfa8:	df000017 	ldw	fp,0(sp)
1010dfac:	dec00204 	addi	sp,sp,8
1010dfb0:	f800283a 	ret

1010dfb4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1010dfb4:	defff904 	addi	sp,sp,-28
1010dfb8:	dfc00615 	stw	ra,24(sp)
1010dfbc:	df000515 	stw	fp,20(sp)
1010dfc0:	df000504 	addi	fp,sp,20
1010dfc4:	e13ffd15 	stw	r4,-12(fp)
1010dfc8:	e17ffe15 	stw	r5,-8(fp)
1010dfcc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010dfd0:	e0bffd17 	ldw	r2,-12(fp)
1010dfd4:	10000816 	blt	r2,zero,1010dff8 <read+0x44>
1010dfd8:	01400304 	movi	r5,12
1010dfdc:	e13ffd17 	ldw	r4,-12(fp)
1010dfe0:	0100c080 	call	10100c08 <__mulsi3>
1010dfe4:	1007883a 	mov	r3,r2
1010dfe8:	00840474 	movhi	r2,4113
1010dfec:	10834a04 	addi	r2,r2,3368
1010dff0:	1885883a 	add	r2,r3,r2
1010dff4:	00000106 	br	1010dffc <read+0x48>
1010dff8:	0005883a 	mov	r2,zero
1010dffc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010e000:	e0bffb17 	ldw	r2,-20(fp)
1010e004:	10002226 	beq	r2,zero,1010e090 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010e008:	e0bffb17 	ldw	r2,-20(fp)
1010e00c:	10800217 	ldw	r2,8(r2)
1010e010:	108000cc 	andi	r2,r2,3
1010e014:	10800060 	cmpeqi	r2,r2,1
1010e018:	1000181e 	bne	r2,zero,1010e07c <read+0xc8>
        (fd->dev->read))
1010e01c:	e0bffb17 	ldw	r2,-20(fp)
1010e020:	10800017 	ldw	r2,0(r2)
1010e024:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010e028:	10001426 	beq	r2,zero,1010e07c <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1010e02c:	e0bffb17 	ldw	r2,-20(fp)
1010e030:	10800017 	ldw	r2,0(r2)
1010e034:	10800517 	ldw	r2,20(r2)
1010e038:	e0ffff17 	ldw	r3,-4(fp)
1010e03c:	180d883a 	mov	r6,r3
1010e040:	e17ffe17 	ldw	r5,-8(fp)
1010e044:	e13ffb17 	ldw	r4,-20(fp)
1010e048:	103ee83a 	callr	r2
1010e04c:	e0bffc15 	stw	r2,-16(fp)
1010e050:	e0bffc17 	ldw	r2,-16(fp)
1010e054:	1000070e 	bge	r2,zero,1010e074 <read+0xc0>
        {
          ALT_ERRNO = -rval;
1010e058:	010df780 	call	1010df78 <alt_get_errno>
1010e05c:	1007883a 	mov	r3,r2
1010e060:	e0bffc17 	ldw	r2,-16(fp)
1010e064:	0085c83a 	sub	r2,zero,r2
1010e068:	18800015 	stw	r2,0(r3)
          return -1;
1010e06c:	00bfffc4 	movi	r2,-1
1010e070:	00000c06 	br	1010e0a4 <read+0xf0>
        }
        return rval;
1010e074:	e0bffc17 	ldw	r2,-16(fp)
1010e078:	00000a06 	br	1010e0a4 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
1010e07c:	010df780 	call	1010df78 <alt_get_errno>
1010e080:	1007883a 	mov	r3,r2
1010e084:	00800344 	movi	r2,13
1010e088:	18800015 	stw	r2,0(r3)
1010e08c:	00000406 	br	1010e0a0 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1010e090:	010df780 	call	1010df78 <alt_get_errno>
1010e094:	1007883a 	mov	r3,r2
1010e098:	00801444 	movi	r2,81
1010e09c:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010e0a0:	00bfffc4 	movi	r2,-1
}
1010e0a4:	e037883a 	mov	sp,fp
1010e0a8:	dfc00117 	ldw	ra,4(sp)
1010e0ac:	df000017 	ldw	fp,0(sp)
1010e0b0:	dec00204 	addi	sp,sp,8
1010e0b4:	f800283a 	ret

1010e0b8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1010e0b8:	defffc04 	addi	sp,sp,-16
1010e0bc:	dfc00315 	stw	ra,12(sp)
1010e0c0:	df000215 	stw	fp,8(sp)
1010e0c4:	dc000115 	stw	r16,4(sp)
1010e0c8:	df000204 	addi	fp,sp,8
1010e0cc:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
1010e0d0:	e0bffe17 	ldw	r2,-8(fp)
1010e0d4:	108000d0 	cmplti	r2,r2,3
1010e0d8:	1000111e 	bne	r2,zero,1010e120 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
1010e0dc:	04040474 	movhi	r16,4113
1010e0e0:	84034a04 	addi	r16,r16,3368
1010e0e4:	e0bffe17 	ldw	r2,-8(fp)
1010e0e8:	01400304 	movi	r5,12
1010e0ec:	1009883a 	mov	r4,r2
1010e0f0:	0100c080 	call	10100c08 <__mulsi3>
1010e0f4:	8085883a 	add	r2,r16,r2
1010e0f8:	10800204 	addi	r2,r2,8
1010e0fc:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1010e100:	04040474 	movhi	r16,4113
1010e104:	84034a04 	addi	r16,r16,3368
1010e108:	e0bffe17 	ldw	r2,-8(fp)
1010e10c:	01400304 	movi	r5,12
1010e110:	1009883a 	mov	r4,r2
1010e114:	0100c080 	call	10100c08 <__mulsi3>
1010e118:	8085883a 	add	r2,r16,r2
1010e11c:	10000015 	stw	zero,0(r2)
  }
}
1010e120:	0001883a 	nop
1010e124:	e6ffff04 	addi	sp,fp,-4
1010e128:	dfc00217 	ldw	ra,8(sp)
1010e12c:	df000117 	ldw	fp,4(sp)
1010e130:	dc000017 	ldw	r16,0(sp)
1010e134:	dec00304 	addi	sp,sp,12
1010e138:	f800283a 	ret

1010e13c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1010e13c:	defff904 	addi	sp,sp,-28
1010e140:	df000615 	stw	fp,24(sp)
1010e144:	df000604 	addi	fp,sp,24
1010e148:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e14c:	0005303a 	rdctl	r2,status
1010e150:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e154:	e0fffe17 	ldw	r3,-8(fp)
1010e158:	00bfff84 	movi	r2,-2
1010e15c:	1884703a 	and	r2,r3,r2
1010e160:	1001703a 	wrctl	status,r2
  
  return context;
1010e164:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1010e168:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1010e16c:	d0a00c17 	ldw	r2,-32720(gp)
1010e170:	10c000c4 	addi	r3,r2,3
1010e174:	00bfff04 	movi	r2,-4
1010e178:	1884703a 	and	r2,r3,r2
1010e17c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1010e180:	d0e00c17 	ldw	r3,-32720(gp)
1010e184:	e0bfff17 	ldw	r2,-4(fp)
1010e188:	1887883a 	add	r3,r3,r2
1010e18c:	008404b4 	movhi	r2,4114
1010e190:	10800004 	addi	r2,r2,0
1010e194:	10c0062e 	bgeu	r2,r3,1010e1b0 <sbrk+0x74>
1010e198:	e0bffb17 	ldw	r2,-20(fp)
1010e19c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e1a0:	e0bffa17 	ldw	r2,-24(fp)
1010e1a4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1010e1a8:	00bfffc4 	movi	r2,-1
1010e1ac:	00000b06 	br	1010e1dc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1010e1b0:	d0a00c17 	ldw	r2,-32720(gp)
1010e1b4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
1010e1b8:	d0e00c17 	ldw	r3,-32720(gp)
1010e1bc:	e0bfff17 	ldw	r2,-4(fp)
1010e1c0:	1885883a 	add	r2,r3,r2
1010e1c4:	d0a00c15 	stw	r2,-32720(gp)
1010e1c8:	e0bffb17 	ldw	r2,-20(fp)
1010e1cc:	e0bffc15 	stw	r2,-16(fp)
1010e1d0:	e0bffc17 	ldw	r2,-16(fp)
1010e1d4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1010e1d8:	e0bffd17 	ldw	r2,-12(fp)
} 
1010e1dc:	e037883a 	mov	sp,fp
1010e1e0:	df000017 	ldw	fp,0(sp)
1010e1e4:	dec00104 	addi	sp,sp,4
1010e1e8:	f800283a 	ret

1010e1ec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e1ec:	defffe04 	addi	sp,sp,-8
1010e1f0:	dfc00115 	stw	ra,4(sp)
1010e1f4:	df000015 	stw	fp,0(sp)
1010e1f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e1fc:	d0a00b17 	ldw	r2,-32724(gp)
1010e200:	10000326 	beq	r2,zero,1010e210 <alt_get_errno+0x24>
1010e204:	d0a00b17 	ldw	r2,-32724(gp)
1010e208:	103ee83a 	callr	r2
1010e20c:	00000106 	br	1010e214 <alt_get_errno+0x28>
1010e210:	d0a6d104 	addi	r2,gp,-25788
}
1010e214:	e037883a 	mov	sp,fp
1010e218:	dfc00117 	ldw	ra,4(sp)
1010e21c:	df000017 	ldw	fp,0(sp)
1010e220:	dec00204 	addi	sp,sp,8
1010e224:	f800283a 	ret

1010e228 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1010e228:	defff904 	addi	sp,sp,-28
1010e22c:	dfc00615 	stw	ra,24(sp)
1010e230:	df000515 	stw	fp,20(sp)
1010e234:	df000504 	addi	fp,sp,20
1010e238:	e13ffd15 	stw	r4,-12(fp)
1010e23c:	e17ffe15 	stw	r5,-8(fp)
1010e240:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010e244:	e0bffd17 	ldw	r2,-12(fp)
1010e248:	10000816 	blt	r2,zero,1010e26c <write+0x44>
1010e24c:	01400304 	movi	r5,12
1010e250:	e13ffd17 	ldw	r4,-12(fp)
1010e254:	0100c080 	call	10100c08 <__mulsi3>
1010e258:	1007883a 	mov	r3,r2
1010e25c:	00840474 	movhi	r2,4113
1010e260:	10834a04 	addi	r2,r2,3368
1010e264:	1885883a 	add	r2,r3,r2
1010e268:	00000106 	br	1010e270 <write+0x48>
1010e26c:	0005883a 	mov	r2,zero
1010e270:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010e274:	e0bffb17 	ldw	r2,-20(fp)
1010e278:	10002126 	beq	r2,zero,1010e300 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1010e27c:	e0bffb17 	ldw	r2,-20(fp)
1010e280:	10800217 	ldw	r2,8(r2)
1010e284:	108000cc 	andi	r2,r2,3
1010e288:	10001826 	beq	r2,zero,1010e2ec <write+0xc4>
1010e28c:	e0bffb17 	ldw	r2,-20(fp)
1010e290:	10800017 	ldw	r2,0(r2)
1010e294:	10800617 	ldw	r2,24(r2)
1010e298:	10001426 	beq	r2,zero,1010e2ec <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1010e29c:	e0bffb17 	ldw	r2,-20(fp)
1010e2a0:	10800017 	ldw	r2,0(r2)
1010e2a4:	10800617 	ldw	r2,24(r2)
1010e2a8:	e0ffff17 	ldw	r3,-4(fp)
1010e2ac:	180d883a 	mov	r6,r3
1010e2b0:	e17ffe17 	ldw	r5,-8(fp)
1010e2b4:	e13ffb17 	ldw	r4,-20(fp)
1010e2b8:	103ee83a 	callr	r2
1010e2bc:	e0bffc15 	stw	r2,-16(fp)
1010e2c0:	e0bffc17 	ldw	r2,-16(fp)
1010e2c4:	1000070e 	bge	r2,zero,1010e2e4 <write+0xbc>
      {
        ALT_ERRNO = -rval;
1010e2c8:	010e1ec0 	call	1010e1ec <alt_get_errno>
1010e2cc:	1007883a 	mov	r3,r2
1010e2d0:	e0bffc17 	ldw	r2,-16(fp)
1010e2d4:	0085c83a 	sub	r2,zero,r2
1010e2d8:	18800015 	stw	r2,0(r3)
        return -1;
1010e2dc:	00bfffc4 	movi	r2,-1
1010e2e0:	00000c06 	br	1010e314 <write+0xec>
      }
      return rval;
1010e2e4:	e0bffc17 	ldw	r2,-16(fp)
1010e2e8:	00000a06 	br	1010e314 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
1010e2ec:	010e1ec0 	call	1010e1ec <alt_get_errno>
1010e2f0:	1007883a 	mov	r3,r2
1010e2f4:	00800344 	movi	r2,13
1010e2f8:	18800015 	stw	r2,0(r3)
1010e2fc:	00000406 	br	1010e310 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1010e300:	010e1ec0 	call	1010e1ec <alt_get_errno>
1010e304:	1007883a 	mov	r3,r2
1010e308:	00801444 	movi	r2,81
1010e30c:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010e310:	00bfffc4 	movi	r2,-1
}
1010e314:	e037883a 	mov	sp,fp
1010e318:	dfc00117 	ldw	ra,4(sp)
1010e31c:	df000017 	ldw	fp,0(sp)
1010e320:	dec00204 	addi	sp,sp,8
1010e324:	f800283a 	ret

1010e328 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1010e328:	defffd04 	addi	sp,sp,-12
1010e32c:	dfc00215 	stw	ra,8(sp)
1010e330:	df000115 	stw	fp,4(sp)
1010e334:	df000104 	addi	fp,sp,4
1010e338:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1010e33c:	d1600804 	addi	r5,gp,-32736
1010e340:	e13fff17 	ldw	r4,-4(fp)
1010e344:	010efcc0 	call	1010efcc <alt_dev_llist_insert>
}
1010e348:	e037883a 	mov	sp,fp
1010e34c:	dfc00117 	ldw	ra,4(sp)
1010e350:	df000017 	ldw	fp,0(sp)
1010e354:	dec00204 	addi	sp,sp,8
1010e358:	f800283a 	ret

1010e35c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1010e35c:	defffd04 	addi	sp,sp,-12
1010e360:	dfc00215 	stw	ra,8(sp)
1010e364:	df000115 	stw	fp,4(sp)
1010e368:	df000104 	addi	fp,sp,4
1010e36c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1010e370:	010f9780 	call	1010f978 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1010e374:	00800044 	movi	r2,1
1010e378:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1010e37c:	0001883a 	nop
1010e380:	e037883a 	mov	sp,fp
1010e384:	dfc00117 	ldw	ra,4(sp)
1010e388:	df000017 	ldw	fp,0(sp)
1010e38c:	dec00204 	addi	sp,sp,8
1010e390:	f800283a 	ret

1010e394 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1010e394:	defffe04 	addi	sp,sp,-8
1010e398:	dfc00115 	stw	ra,4(sp)
1010e39c:	df000015 	stw	fp,0(sp)
1010e3a0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1010e3a4:	000d883a 	mov	r6,zero
1010e3a8:	000b883a 	mov	r5,zero
1010e3ac:	01040474 	movhi	r4,4113
1010e3b0:	2103b404 	addi	r4,r4,3792
1010e3b4:	010e5400 	call	1010e540 <altera_avalon_jtag_uart_init>
1010e3b8:	01040474 	movhi	r4,4113
1010e3bc:	2103aa04 	addi	r4,r4,3752
1010e3c0:	010e3280 	call	1010e328 <alt_dev_reg>
}
1010e3c4:	0001883a 	nop
1010e3c8:	e037883a 	mov	sp,fp
1010e3cc:	dfc00117 	ldw	ra,4(sp)
1010e3d0:	df000017 	ldw	fp,0(sp)
1010e3d4:	dec00204 	addi	sp,sp,8
1010e3d8:	f800283a 	ret

1010e3dc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1010e3dc:	defffa04 	addi	sp,sp,-24
1010e3e0:	dfc00515 	stw	ra,20(sp)
1010e3e4:	df000415 	stw	fp,16(sp)
1010e3e8:	df000404 	addi	fp,sp,16
1010e3ec:	e13ffd15 	stw	r4,-12(fp)
1010e3f0:	e17ffe15 	stw	r5,-8(fp)
1010e3f4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e3f8:	e0bffd17 	ldw	r2,-12(fp)
1010e3fc:	10800017 	ldw	r2,0(r2)
1010e400:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1010e404:	e0bffc17 	ldw	r2,-16(fp)
1010e408:	10c00a04 	addi	r3,r2,40
1010e40c:	e0bffd17 	ldw	r2,-12(fp)
1010e410:	10800217 	ldw	r2,8(r2)
1010e414:	100f883a 	mov	r7,r2
1010e418:	e1bfff17 	ldw	r6,-4(fp)
1010e41c:	e17ffe17 	ldw	r5,-8(fp)
1010e420:	1809883a 	mov	r4,r3
1010e424:	010ea040 	call	1010ea04 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1010e428:	e037883a 	mov	sp,fp
1010e42c:	dfc00117 	ldw	ra,4(sp)
1010e430:	df000017 	ldw	fp,0(sp)
1010e434:	dec00204 	addi	sp,sp,8
1010e438:	f800283a 	ret

1010e43c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1010e43c:	defffa04 	addi	sp,sp,-24
1010e440:	dfc00515 	stw	ra,20(sp)
1010e444:	df000415 	stw	fp,16(sp)
1010e448:	df000404 	addi	fp,sp,16
1010e44c:	e13ffd15 	stw	r4,-12(fp)
1010e450:	e17ffe15 	stw	r5,-8(fp)
1010e454:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e458:	e0bffd17 	ldw	r2,-12(fp)
1010e45c:	10800017 	ldw	r2,0(r2)
1010e460:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1010e464:	e0bffc17 	ldw	r2,-16(fp)
1010e468:	10c00a04 	addi	r3,r2,40
1010e46c:	e0bffd17 	ldw	r2,-12(fp)
1010e470:	10800217 	ldw	r2,8(r2)
1010e474:	100f883a 	mov	r7,r2
1010e478:	e1bfff17 	ldw	r6,-4(fp)
1010e47c:	e17ffe17 	ldw	r5,-8(fp)
1010e480:	1809883a 	mov	r4,r3
1010e484:	010ec200 	call	1010ec20 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1010e488:	e037883a 	mov	sp,fp
1010e48c:	dfc00117 	ldw	ra,4(sp)
1010e490:	df000017 	ldw	fp,0(sp)
1010e494:	dec00204 	addi	sp,sp,8
1010e498:	f800283a 	ret

1010e49c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1010e49c:	defffc04 	addi	sp,sp,-16
1010e4a0:	dfc00315 	stw	ra,12(sp)
1010e4a4:	df000215 	stw	fp,8(sp)
1010e4a8:	df000204 	addi	fp,sp,8
1010e4ac:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e4b0:	e0bfff17 	ldw	r2,-4(fp)
1010e4b4:	10800017 	ldw	r2,0(r2)
1010e4b8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1010e4bc:	e0bffe17 	ldw	r2,-8(fp)
1010e4c0:	10c00a04 	addi	r3,r2,40
1010e4c4:	e0bfff17 	ldw	r2,-4(fp)
1010e4c8:	10800217 	ldw	r2,8(r2)
1010e4cc:	100b883a 	mov	r5,r2
1010e4d0:	1809883a 	mov	r4,r3
1010e4d4:	010e8ac0 	call	1010e8ac <altera_avalon_jtag_uart_close>
}
1010e4d8:	e037883a 	mov	sp,fp
1010e4dc:	dfc00117 	ldw	ra,4(sp)
1010e4e0:	df000017 	ldw	fp,0(sp)
1010e4e4:	dec00204 	addi	sp,sp,8
1010e4e8:	f800283a 	ret

1010e4ec <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1010e4ec:	defffa04 	addi	sp,sp,-24
1010e4f0:	dfc00515 	stw	ra,20(sp)
1010e4f4:	df000415 	stw	fp,16(sp)
1010e4f8:	df000404 	addi	fp,sp,16
1010e4fc:	e13ffd15 	stw	r4,-12(fp)
1010e500:	e17ffe15 	stw	r5,-8(fp)
1010e504:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1010e508:	e0bffd17 	ldw	r2,-12(fp)
1010e50c:	10800017 	ldw	r2,0(r2)
1010e510:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1010e514:	e0bffc17 	ldw	r2,-16(fp)
1010e518:	10800a04 	addi	r2,r2,40
1010e51c:	e1bfff17 	ldw	r6,-4(fp)
1010e520:	e17ffe17 	ldw	r5,-8(fp)
1010e524:	1009883a 	mov	r4,r2
1010e528:	010e9140 	call	1010e914 <altera_avalon_jtag_uart_ioctl>
}
1010e52c:	e037883a 	mov	sp,fp
1010e530:	dfc00117 	ldw	ra,4(sp)
1010e534:	df000017 	ldw	fp,0(sp)
1010e538:	dec00204 	addi	sp,sp,8
1010e53c:	f800283a 	ret

1010e540 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1010e540:	defffa04 	addi	sp,sp,-24
1010e544:	dfc00515 	stw	ra,20(sp)
1010e548:	df000415 	stw	fp,16(sp)
1010e54c:	df000404 	addi	fp,sp,16
1010e550:	e13ffd15 	stw	r4,-12(fp)
1010e554:	e17ffe15 	stw	r5,-8(fp)
1010e558:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e55c:	e0bffd17 	ldw	r2,-12(fp)
1010e560:	00c00044 	movi	r3,1
1010e564:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1010e568:	e0bffd17 	ldw	r2,-12(fp)
1010e56c:	10800017 	ldw	r2,0(r2)
1010e570:	10800104 	addi	r2,r2,4
1010e574:	1007883a 	mov	r3,r2
1010e578:	e0bffd17 	ldw	r2,-12(fp)
1010e57c:	10800817 	ldw	r2,32(r2)
1010e580:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1010e584:	e0bffe17 	ldw	r2,-8(fp)
1010e588:	e0ffff17 	ldw	r3,-4(fp)
1010e58c:	d8000015 	stw	zero,0(sp)
1010e590:	e1fffd17 	ldw	r7,-12(fp)
1010e594:	01840474 	movhi	r6,4113
1010e598:	31b98004 	addi	r6,r6,-6656
1010e59c:	180b883a 	mov	r5,r3
1010e5a0:	1009883a 	mov	r4,r2
1010e5a4:	010f1500 	call	1010f150 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1010e5a8:	e0bffd17 	ldw	r2,-12(fp)
1010e5ac:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1010e5b0:	e0bffd17 	ldw	r2,-12(fp)
1010e5b4:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1010e5b8:	d0e6d617 	ldw	r3,-25768(gp)
1010e5bc:	e1fffd17 	ldw	r7,-12(fp)
1010e5c0:	01840474 	movhi	r6,4113
1010e5c4:	31ba0304 	addi	r6,r6,-6132
1010e5c8:	180b883a 	mov	r5,r3
1010e5cc:	1009883a 	mov	r4,r2
1010e5d0:	010ee440 	call	1010ee44 <alt_alarm_start>
1010e5d4:	1000040e 	bge	r2,zero,1010e5e8 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1010e5d8:	e0fffd17 	ldw	r3,-12(fp)
1010e5dc:	00a00034 	movhi	r2,32768
1010e5e0:	10bfffc4 	addi	r2,r2,-1
1010e5e4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1010e5e8:	0001883a 	nop
1010e5ec:	e037883a 	mov	sp,fp
1010e5f0:	dfc00117 	ldw	ra,4(sp)
1010e5f4:	df000017 	ldw	fp,0(sp)
1010e5f8:	dec00204 	addi	sp,sp,8
1010e5fc:	f800283a 	ret

1010e600 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1010e600:	defff804 	addi	sp,sp,-32
1010e604:	df000715 	stw	fp,28(sp)
1010e608:	df000704 	addi	fp,sp,28
1010e60c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1010e610:	e0bfff17 	ldw	r2,-4(fp)
1010e614:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1010e618:	e0bffb17 	ldw	r2,-20(fp)
1010e61c:	10800017 	ldw	r2,0(r2)
1010e620:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e624:	e0bffc17 	ldw	r2,-16(fp)
1010e628:	10800104 	addi	r2,r2,4
1010e62c:	10800037 	ldwio	r2,0(r2)
1010e630:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1010e634:	e0bffd17 	ldw	r2,-12(fp)
1010e638:	1080c00c 	andi	r2,r2,768
1010e63c:	10006d26 	beq	r2,zero,1010e7f4 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1010e640:	e0bffd17 	ldw	r2,-12(fp)
1010e644:	1080400c 	andi	r2,r2,256
1010e648:	10003526 	beq	r2,zero,1010e720 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1010e64c:	00800074 	movhi	r2,1
1010e650:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e654:	e0bffb17 	ldw	r2,-20(fp)
1010e658:	10800a17 	ldw	r2,40(r2)
1010e65c:	10800044 	addi	r2,r2,1
1010e660:	1081ffcc 	andi	r2,r2,2047
1010e664:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1010e668:	e0bffb17 	ldw	r2,-20(fp)
1010e66c:	10c00b17 	ldw	r3,44(r2)
1010e670:	e0bffe17 	ldw	r2,-8(fp)
1010e674:	18801526 	beq	r3,r2,1010e6cc <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1010e678:	e0bffc17 	ldw	r2,-16(fp)
1010e67c:	10800037 	ldwio	r2,0(r2)
1010e680:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1010e684:	e0bff917 	ldw	r2,-28(fp)
1010e688:	10a0000c 	andi	r2,r2,32768
1010e68c:	10001126 	beq	r2,zero,1010e6d4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1010e690:	e0bffb17 	ldw	r2,-20(fp)
1010e694:	10800a17 	ldw	r2,40(r2)
1010e698:	e0fff917 	ldw	r3,-28(fp)
1010e69c:	1809883a 	mov	r4,r3
1010e6a0:	e0fffb17 	ldw	r3,-20(fp)
1010e6a4:	1885883a 	add	r2,r3,r2
1010e6a8:	10800e04 	addi	r2,r2,56
1010e6ac:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e6b0:	e0bffb17 	ldw	r2,-20(fp)
1010e6b4:	10800a17 	ldw	r2,40(r2)
1010e6b8:	10800044 	addi	r2,r2,1
1010e6bc:	10c1ffcc 	andi	r3,r2,2047
1010e6c0:	e0bffb17 	ldw	r2,-20(fp)
1010e6c4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1010e6c8:	003fe206 	br	1010e654 <__alt_data_end+0xfffee654>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1010e6cc:	0001883a 	nop
1010e6d0:	00000106 	br	1010e6d8 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1010e6d4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1010e6d8:	e0bff917 	ldw	r2,-28(fp)
1010e6dc:	10bfffec 	andhi	r2,r2,65535
1010e6e0:	10000f26 	beq	r2,zero,1010e720 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e6e4:	e0bffb17 	ldw	r2,-20(fp)
1010e6e8:	10c00817 	ldw	r3,32(r2)
1010e6ec:	00bfff84 	movi	r2,-2
1010e6f0:	1886703a 	and	r3,r3,r2
1010e6f4:	e0bffb17 	ldw	r2,-20(fp)
1010e6f8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1010e6fc:	e0bffc17 	ldw	r2,-16(fp)
1010e700:	10800104 	addi	r2,r2,4
1010e704:	1007883a 	mov	r3,r2
1010e708:	e0bffb17 	ldw	r2,-20(fp)
1010e70c:	10800817 	ldw	r2,32(r2)
1010e710:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e714:	e0bffc17 	ldw	r2,-16(fp)
1010e718:	10800104 	addi	r2,r2,4
1010e71c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1010e720:	e0bffd17 	ldw	r2,-12(fp)
1010e724:	1080800c 	andi	r2,r2,512
1010e728:	103fbe26 	beq	r2,zero,1010e624 <__alt_data_end+0xfffee624>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1010e72c:	e0bffd17 	ldw	r2,-12(fp)
1010e730:	1004d43a 	srli	r2,r2,16
1010e734:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1010e738:	00001406 	br	1010e78c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1010e73c:	e0bffc17 	ldw	r2,-16(fp)
1010e740:	e0fffb17 	ldw	r3,-20(fp)
1010e744:	18c00d17 	ldw	r3,52(r3)
1010e748:	e13ffb17 	ldw	r4,-20(fp)
1010e74c:	20c7883a 	add	r3,r4,r3
1010e750:	18c20e04 	addi	r3,r3,2104
1010e754:	18c00003 	ldbu	r3,0(r3)
1010e758:	18c03fcc 	andi	r3,r3,255
1010e75c:	18c0201c 	xori	r3,r3,128
1010e760:	18ffe004 	addi	r3,r3,-128
1010e764:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e768:	e0bffb17 	ldw	r2,-20(fp)
1010e76c:	10800d17 	ldw	r2,52(r2)
1010e770:	10800044 	addi	r2,r2,1
1010e774:	10c1ffcc 	andi	r3,r2,2047
1010e778:	e0bffb17 	ldw	r2,-20(fp)
1010e77c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1010e780:	e0bffa17 	ldw	r2,-24(fp)
1010e784:	10bfffc4 	addi	r2,r2,-1
1010e788:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1010e78c:	e0bffa17 	ldw	r2,-24(fp)
1010e790:	10000526 	beq	r2,zero,1010e7a8 <altera_avalon_jtag_uart_irq+0x1a8>
1010e794:	e0bffb17 	ldw	r2,-20(fp)
1010e798:	10c00d17 	ldw	r3,52(r2)
1010e79c:	e0bffb17 	ldw	r2,-20(fp)
1010e7a0:	10800c17 	ldw	r2,48(r2)
1010e7a4:	18bfe51e 	bne	r3,r2,1010e73c <__alt_data_end+0xfffee73c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1010e7a8:	e0bffa17 	ldw	r2,-24(fp)
1010e7ac:	103f9d26 	beq	r2,zero,1010e624 <__alt_data_end+0xfffee624>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010e7b0:	e0bffb17 	ldw	r2,-20(fp)
1010e7b4:	10c00817 	ldw	r3,32(r2)
1010e7b8:	00bfff44 	movi	r2,-3
1010e7bc:	1886703a 	and	r3,r3,r2
1010e7c0:	e0bffb17 	ldw	r2,-20(fp)
1010e7c4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e7c8:	e0bffb17 	ldw	r2,-20(fp)
1010e7cc:	10800017 	ldw	r2,0(r2)
1010e7d0:	10800104 	addi	r2,r2,4
1010e7d4:	1007883a 	mov	r3,r2
1010e7d8:	e0bffb17 	ldw	r2,-20(fp)
1010e7dc:	10800817 	ldw	r2,32(r2)
1010e7e0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e7e4:	e0bffc17 	ldw	r2,-16(fp)
1010e7e8:	10800104 	addi	r2,r2,4
1010e7ec:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1010e7f0:	003f8c06 	br	1010e624 <__alt_data_end+0xfffee624>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1010e7f4:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1010e7f8:	0001883a 	nop
1010e7fc:	e037883a 	mov	sp,fp
1010e800:	df000017 	ldw	fp,0(sp)
1010e804:	dec00104 	addi	sp,sp,4
1010e808:	f800283a 	ret

1010e80c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1010e80c:	defff804 	addi	sp,sp,-32
1010e810:	df000715 	stw	fp,28(sp)
1010e814:	df000704 	addi	fp,sp,28
1010e818:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1010e81c:	e0bffb17 	ldw	r2,-20(fp)
1010e820:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1010e824:	e0bff917 	ldw	r2,-28(fp)
1010e828:	10800017 	ldw	r2,0(r2)
1010e82c:	10800104 	addi	r2,r2,4
1010e830:	10800037 	ldwio	r2,0(r2)
1010e834:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1010e838:	e0bffa17 	ldw	r2,-24(fp)
1010e83c:	1081000c 	andi	r2,r2,1024
1010e840:	10000b26 	beq	r2,zero,1010e870 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1010e844:	e0bff917 	ldw	r2,-28(fp)
1010e848:	10800017 	ldw	r2,0(r2)
1010e84c:	10800104 	addi	r2,r2,4
1010e850:	1007883a 	mov	r3,r2
1010e854:	e0bff917 	ldw	r2,-28(fp)
1010e858:	10800817 	ldw	r2,32(r2)
1010e85c:	10810014 	ori	r2,r2,1024
1010e860:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1010e864:	e0bff917 	ldw	r2,-28(fp)
1010e868:	10000915 	stw	zero,36(r2)
1010e86c:	00000a06 	br	1010e898 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1010e870:	e0bff917 	ldw	r2,-28(fp)
1010e874:	10c00917 	ldw	r3,36(r2)
1010e878:	00a00034 	movhi	r2,32768
1010e87c:	10bfff04 	addi	r2,r2,-4
1010e880:	10c00536 	bltu	r2,r3,1010e898 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1010e884:	e0bff917 	ldw	r2,-28(fp)
1010e888:	10800917 	ldw	r2,36(r2)
1010e88c:	10c00044 	addi	r3,r2,1
1010e890:	e0bff917 	ldw	r2,-28(fp)
1010e894:	10c00915 	stw	r3,36(r2)
1010e898:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1010e89c:	e037883a 	mov	sp,fp
1010e8a0:	df000017 	ldw	fp,0(sp)
1010e8a4:	dec00104 	addi	sp,sp,4
1010e8a8:	f800283a 	ret

1010e8ac <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1010e8ac:	defffd04 	addi	sp,sp,-12
1010e8b0:	df000215 	stw	fp,8(sp)
1010e8b4:	df000204 	addi	fp,sp,8
1010e8b8:	e13ffe15 	stw	r4,-8(fp)
1010e8bc:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010e8c0:	00000506 	br	1010e8d8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1010e8c4:	e0bfff17 	ldw	r2,-4(fp)
1010e8c8:	1090000c 	andi	r2,r2,16384
1010e8cc:	10000226 	beq	r2,zero,1010e8d8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1010e8d0:	00bffd44 	movi	r2,-11
1010e8d4:	00000b06 	br	1010e904 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010e8d8:	e0bffe17 	ldw	r2,-8(fp)
1010e8dc:	10c00d17 	ldw	r3,52(r2)
1010e8e0:	e0bffe17 	ldw	r2,-8(fp)
1010e8e4:	10800c17 	ldw	r2,48(r2)
1010e8e8:	18800526 	beq	r3,r2,1010e900 <altera_avalon_jtag_uart_close+0x54>
1010e8ec:	e0bffe17 	ldw	r2,-8(fp)
1010e8f0:	10c00917 	ldw	r3,36(r2)
1010e8f4:	e0bffe17 	ldw	r2,-8(fp)
1010e8f8:	10800117 	ldw	r2,4(r2)
1010e8fc:	18bff136 	bltu	r3,r2,1010e8c4 <__alt_data_end+0xfffee8c4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1010e900:	0005883a 	mov	r2,zero
}
1010e904:	e037883a 	mov	sp,fp
1010e908:	df000017 	ldw	fp,0(sp)
1010e90c:	dec00104 	addi	sp,sp,4
1010e910:	f800283a 	ret

1010e914 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1010e914:	defffa04 	addi	sp,sp,-24
1010e918:	df000515 	stw	fp,20(sp)
1010e91c:	df000504 	addi	fp,sp,20
1010e920:	e13ffd15 	stw	r4,-12(fp)
1010e924:	e17ffe15 	stw	r5,-8(fp)
1010e928:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1010e92c:	00bff9c4 	movi	r2,-25
1010e930:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1010e934:	e0bffe17 	ldw	r2,-8(fp)
1010e938:	10da8060 	cmpeqi	r3,r2,27137
1010e93c:	1800031e 	bne	r3,zero,1010e94c <altera_avalon_jtag_uart_ioctl+0x38>
1010e940:	109a80a0 	cmpeqi	r2,r2,27138
1010e944:	1000181e 	bne	r2,zero,1010e9a8 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1010e948:	00002906 	br	1010e9f0 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1010e94c:	e0bffd17 	ldw	r2,-12(fp)
1010e950:	10c00117 	ldw	r3,4(r2)
1010e954:	00a00034 	movhi	r2,32768
1010e958:	10bfffc4 	addi	r2,r2,-1
1010e95c:	18802126 	beq	r3,r2,1010e9e4 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1010e960:	e0bfff17 	ldw	r2,-4(fp)
1010e964:	10800017 	ldw	r2,0(r2)
1010e968:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1010e96c:	e0bffc17 	ldw	r2,-16(fp)
1010e970:	10800090 	cmplti	r2,r2,2
1010e974:	1000061e 	bne	r2,zero,1010e990 <altera_avalon_jtag_uart_ioctl+0x7c>
1010e978:	e0fffc17 	ldw	r3,-16(fp)
1010e97c:	00a00034 	movhi	r2,32768
1010e980:	10bfffc4 	addi	r2,r2,-1
1010e984:	18800226 	beq	r3,r2,1010e990 <altera_avalon_jtag_uart_ioctl+0x7c>
1010e988:	e0bffc17 	ldw	r2,-16(fp)
1010e98c:	00000206 	br	1010e998 <altera_avalon_jtag_uart_ioctl+0x84>
1010e990:	00a00034 	movhi	r2,32768
1010e994:	10bfff84 	addi	r2,r2,-2
1010e998:	e0fffd17 	ldw	r3,-12(fp)
1010e99c:	18800115 	stw	r2,4(r3)
      rc = 0;
1010e9a0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010e9a4:	00000f06 	br	1010e9e4 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1010e9a8:	e0bffd17 	ldw	r2,-12(fp)
1010e9ac:	10c00117 	ldw	r3,4(r2)
1010e9b0:	00a00034 	movhi	r2,32768
1010e9b4:	10bfffc4 	addi	r2,r2,-1
1010e9b8:	18800c26 	beq	r3,r2,1010e9ec <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1010e9bc:	e0bffd17 	ldw	r2,-12(fp)
1010e9c0:	10c00917 	ldw	r3,36(r2)
1010e9c4:	e0bffd17 	ldw	r2,-12(fp)
1010e9c8:	10800117 	ldw	r2,4(r2)
1010e9cc:	1885803a 	cmpltu	r2,r3,r2
1010e9d0:	10c03fcc 	andi	r3,r2,255
1010e9d4:	e0bfff17 	ldw	r2,-4(fp)
1010e9d8:	10c00015 	stw	r3,0(r2)
      rc = 0;
1010e9dc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010e9e0:	00000206 	br	1010e9ec <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1010e9e4:	0001883a 	nop
1010e9e8:	00000106 	br	1010e9f0 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1010e9ec:	0001883a 	nop

  default:
    break;
  }

  return rc;
1010e9f0:	e0bffb17 	ldw	r2,-20(fp)
}
1010e9f4:	e037883a 	mov	sp,fp
1010e9f8:	df000017 	ldw	fp,0(sp)
1010e9fc:	dec00104 	addi	sp,sp,4
1010ea00:	f800283a 	ret

1010ea04 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1010ea04:	defff304 	addi	sp,sp,-52
1010ea08:	dfc00c15 	stw	ra,48(sp)
1010ea0c:	df000b15 	stw	fp,44(sp)
1010ea10:	df000b04 	addi	fp,sp,44
1010ea14:	e13ffc15 	stw	r4,-16(fp)
1010ea18:	e17ffd15 	stw	r5,-12(fp)
1010ea1c:	e1bffe15 	stw	r6,-8(fp)
1010ea20:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1010ea24:	e0bffd17 	ldw	r2,-12(fp)
1010ea28:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010ea2c:	00004706 	br	1010eb4c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1010ea30:	e0bffc17 	ldw	r2,-16(fp)
1010ea34:	10800a17 	ldw	r2,40(r2)
1010ea38:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1010ea3c:	e0bffc17 	ldw	r2,-16(fp)
1010ea40:	10800b17 	ldw	r2,44(r2)
1010ea44:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1010ea48:	e0fff717 	ldw	r3,-36(fp)
1010ea4c:	e0bff817 	ldw	r2,-32(fp)
1010ea50:	18800536 	bltu	r3,r2,1010ea68 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1010ea54:	e0fff717 	ldw	r3,-36(fp)
1010ea58:	e0bff817 	ldw	r2,-32(fp)
1010ea5c:	1885c83a 	sub	r2,r3,r2
1010ea60:	e0bff615 	stw	r2,-40(fp)
1010ea64:	00000406 	br	1010ea78 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1010ea68:	00c20004 	movi	r3,2048
1010ea6c:	e0bff817 	ldw	r2,-32(fp)
1010ea70:	1885c83a 	sub	r2,r3,r2
1010ea74:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010ea78:	e0bff617 	ldw	r2,-40(fp)
1010ea7c:	10001e26 	beq	r2,zero,1010eaf8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1010ea80:	e0fffe17 	ldw	r3,-8(fp)
1010ea84:	e0bff617 	ldw	r2,-40(fp)
1010ea88:	1880022e 	bgeu	r3,r2,1010ea94 <altera_avalon_jtag_uart_read+0x90>
        n = space;
1010ea8c:	e0bffe17 	ldw	r2,-8(fp)
1010ea90:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1010ea94:	e0bffc17 	ldw	r2,-16(fp)
1010ea98:	10c00e04 	addi	r3,r2,56
1010ea9c:	e0bff817 	ldw	r2,-32(fp)
1010eaa0:	1885883a 	add	r2,r3,r2
1010eaa4:	e1bff617 	ldw	r6,-40(fp)
1010eaa8:	100b883a 	mov	r5,r2
1010eaac:	e13ff517 	ldw	r4,-44(fp)
1010eab0:	0100c300 	call	10100c30 <memcpy>
      ptr   += n;
1010eab4:	e0fff517 	ldw	r3,-44(fp)
1010eab8:	e0bff617 	ldw	r2,-40(fp)
1010eabc:	1885883a 	add	r2,r3,r2
1010eac0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1010eac4:	e0fffe17 	ldw	r3,-8(fp)
1010eac8:	e0bff617 	ldw	r2,-40(fp)
1010eacc:	1885c83a 	sub	r2,r3,r2
1010ead0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010ead4:	e0fff817 	ldw	r3,-32(fp)
1010ead8:	e0bff617 	ldw	r2,-40(fp)
1010eadc:	1885883a 	add	r2,r3,r2
1010eae0:	10c1ffcc 	andi	r3,r2,2047
1010eae4:	e0bffc17 	ldw	r2,-16(fp)
1010eae8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1010eaec:	e0bffe17 	ldw	r2,-8(fp)
1010eaf0:	00bfcf16 	blt	zero,r2,1010ea30 <__alt_data_end+0xfffeea30>
1010eaf4:	00000106 	br	1010eafc <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1010eaf8:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1010eafc:	e0fff517 	ldw	r3,-44(fp)
1010eb00:	e0bffd17 	ldw	r2,-12(fp)
1010eb04:	1880141e 	bne	r3,r2,1010eb58 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1010eb08:	e0bfff17 	ldw	r2,-4(fp)
1010eb0c:	1090000c 	andi	r2,r2,16384
1010eb10:	1000131e 	bne	r2,zero,1010eb60 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1010eb14:	0001883a 	nop
1010eb18:	e0bffc17 	ldw	r2,-16(fp)
1010eb1c:	10c00a17 	ldw	r3,40(r2)
1010eb20:	e0bff717 	ldw	r2,-36(fp)
1010eb24:	1880051e 	bne	r3,r2,1010eb3c <altera_avalon_jtag_uart_read+0x138>
1010eb28:	e0bffc17 	ldw	r2,-16(fp)
1010eb2c:	10c00917 	ldw	r3,36(r2)
1010eb30:	e0bffc17 	ldw	r2,-16(fp)
1010eb34:	10800117 	ldw	r2,4(r2)
1010eb38:	18bff736 	bltu	r3,r2,1010eb18 <__alt_data_end+0xfffeeb18>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1010eb3c:	e0bffc17 	ldw	r2,-16(fp)
1010eb40:	10c00a17 	ldw	r3,40(r2)
1010eb44:	e0bff717 	ldw	r2,-36(fp)
1010eb48:	18800726 	beq	r3,r2,1010eb68 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010eb4c:	e0bffe17 	ldw	r2,-8(fp)
1010eb50:	00bfb716 	blt	zero,r2,1010ea30 <__alt_data_end+0xfffeea30>
1010eb54:	00000506 	br	1010eb6c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1010eb58:	0001883a 	nop
1010eb5c:	00000306 	br	1010eb6c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1010eb60:	0001883a 	nop
1010eb64:	00000106 	br	1010eb6c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1010eb68:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1010eb6c:	e0fff517 	ldw	r3,-44(fp)
1010eb70:	e0bffd17 	ldw	r2,-12(fp)
1010eb74:	18801826 	beq	r3,r2,1010ebd8 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010eb78:	0005303a 	rdctl	r2,status
1010eb7c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010eb80:	e0fffb17 	ldw	r3,-20(fp)
1010eb84:	00bfff84 	movi	r2,-2
1010eb88:	1884703a 	and	r2,r3,r2
1010eb8c:	1001703a 	wrctl	status,r2
  
  return context;
1010eb90:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1010eb94:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010eb98:	e0bffc17 	ldw	r2,-16(fp)
1010eb9c:	10800817 	ldw	r2,32(r2)
1010eba0:	10c00054 	ori	r3,r2,1
1010eba4:	e0bffc17 	ldw	r2,-16(fp)
1010eba8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010ebac:	e0bffc17 	ldw	r2,-16(fp)
1010ebb0:	10800017 	ldw	r2,0(r2)
1010ebb4:	10800104 	addi	r2,r2,4
1010ebb8:	1007883a 	mov	r3,r2
1010ebbc:	e0bffc17 	ldw	r2,-16(fp)
1010ebc0:	10800817 	ldw	r2,32(r2)
1010ebc4:	18800035 	stwio	r2,0(r3)
1010ebc8:	e0bffa17 	ldw	r2,-24(fp)
1010ebcc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ebd0:	e0bff917 	ldw	r2,-28(fp)
1010ebd4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1010ebd8:	e0fff517 	ldw	r3,-44(fp)
1010ebdc:	e0bffd17 	ldw	r2,-12(fp)
1010ebe0:	18800426 	beq	r3,r2,1010ebf4 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1010ebe4:	e0fff517 	ldw	r3,-44(fp)
1010ebe8:	e0bffd17 	ldw	r2,-12(fp)
1010ebec:	1885c83a 	sub	r2,r3,r2
1010ebf0:	00000606 	br	1010ec0c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1010ebf4:	e0bfff17 	ldw	r2,-4(fp)
1010ebf8:	1090000c 	andi	r2,r2,16384
1010ebfc:	10000226 	beq	r2,zero,1010ec08 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1010ec00:	00bffd44 	movi	r2,-11
1010ec04:	00000106 	br	1010ec0c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1010ec08:	00bffec4 	movi	r2,-5
}
1010ec0c:	e037883a 	mov	sp,fp
1010ec10:	dfc00117 	ldw	ra,4(sp)
1010ec14:	df000017 	ldw	fp,0(sp)
1010ec18:	dec00204 	addi	sp,sp,8
1010ec1c:	f800283a 	ret

1010ec20 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1010ec20:	defff304 	addi	sp,sp,-52
1010ec24:	dfc00c15 	stw	ra,48(sp)
1010ec28:	df000b15 	stw	fp,44(sp)
1010ec2c:	df000b04 	addi	fp,sp,44
1010ec30:	e13ffc15 	stw	r4,-16(fp)
1010ec34:	e17ffd15 	stw	r5,-12(fp)
1010ec38:	e1bffe15 	stw	r6,-8(fp)
1010ec3c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1010ec40:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1010ec44:	e0bffd17 	ldw	r2,-12(fp)
1010ec48:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010ec4c:	00003706 	br	1010ed2c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1010ec50:	e0bffc17 	ldw	r2,-16(fp)
1010ec54:	10800c17 	ldw	r2,48(r2)
1010ec58:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1010ec5c:	e0bffc17 	ldw	r2,-16(fp)
1010ec60:	10800d17 	ldw	r2,52(r2)
1010ec64:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1010ec68:	e0fff917 	ldw	r3,-28(fp)
1010ec6c:	e0bff517 	ldw	r2,-44(fp)
1010ec70:	1880062e 	bgeu	r3,r2,1010ec8c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1010ec74:	e0fff517 	ldw	r3,-44(fp)
1010ec78:	e0bff917 	ldw	r2,-28(fp)
1010ec7c:	1885c83a 	sub	r2,r3,r2
1010ec80:	10bfffc4 	addi	r2,r2,-1
1010ec84:	e0bff615 	stw	r2,-40(fp)
1010ec88:	00000b06 	br	1010ecb8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1010ec8c:	e0bff517 	ldw	r2,-44(fp)
1010ec90:	10000526 	beq	r2,zero,1010eca8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1010ec94:	00c20004 	movi	r3,2048
1010ec98:	e0bff917 	ldw	r2,-28(fp)
1010ec9c:	1885c83a 	sub	r2,r3,r2
1010eca0:	e0bff615 	stw	r2,-40(fp)
1010eca4:	00000406 	br	1010ecb8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1010eca8:	00c1ffc4 	movi	r3,2047
1010ecac:	e0bff917 	ldw	r2,-28(fp)
1010ecb0:	1885c83a 	sub	r2,r3,r2
1010ecb4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010ecb8:	e0bff617 	ldw	r2,-40(fp)
1010ecbc:	10001e26 	beq	r2,zero,1010ed38 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1010ecc0:	e0fffe17 	ldw	r3,-8(fp)
1010ecc4:	e0bff617 	ldw	r2,-40(fp)
1010ecc8:	1880022e 	bgeu	r3,r2,1010ecd4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1010eccc:	e0bffe17 	ldw	r2,-8(fp)
1010ecd0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1010ecd4:	e0bffc17 	ldw	r2,-16(fp)
1010ecd8:	10c20e04 	addi	r3,r2,2104
1010ecdc:	e0bff917 	ldw	r2,-28(fp)
1010ece0:	1885883a 	add	r2,r3,r2
1010ece4:	e1bff617 	ldw	r6,-40(fp)
1010ece8:	e17ffd17 	ldw	r5,-12(fp)
1010ecec:	1009883a 	mov	r4,r2
1010ecf0:	0100c300 	call	10100c30 <memcpy>
      ptr   += n;
1010ecf4:	e0fffd17 	ldw	r3,-12(fp)
1010ecf8:	e0bff617 	ldw	r2,-40(fp)
1010ecfc:	1885883a 	add	r2,r3,r2
1010ed00:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1010ed04:	e0fffe17 	ldw	r3,-8(fp)
1010ed08:	e0bff617 	ldw	r2,-40(fp)
1010ed0c:	1885c83a 	sub	r2,r3,r2
1010ed10:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010ed14:	e0fff917 	ldw	r3,-28(fp)
1010ed18:	e0bff617 	ldw	r2,-40(fp)
1010ed1c:	1885883a 	add	r2,r3,r2
1010ed20:	10c1ffcc 	andi	r3,r2,2047
1010ed24:	e0bffc17 	ldw	r2,-16(fp)
1010ed28:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010ed2c:	e0bffe17 	ldw	r2,-8(fp)
1010ed30:	00bfc716 	blt	zero,r2,1010ec50 <__alt_data_end+0xfffeec50>
1010ed34:	00000106 	br	1010ed3c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1010ed38:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010ed3c:	0005303a 	rdctl	r2,status
1010ed40:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ed44:	e0fffb17 	ldw	r3,-20(fp)
1010ed48:	00bfff84 	movi	r2,-2
1010ed4c:	1884703a 	and	r2,r3,r2
1010ed50:	1001703a 	wrctl	status,r2
  
  return context;
1010ed54:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1010ed58:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010ed5c:	e0bffc17 	ldw	r2,-16(fp)
1010ed60:	10800817 	ldw	r2,32(r2)
1010ed64:	10c00094 	ori	r3,r2,2
1010ed68:	e0bffc17 	ldw	r2,-16(fp)
1010ed6c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010ed70:	e0bffc17 	ldw	r2,-16(fp)
1010ed74:	10800017 	ldw	r2,0(r2)
1010ed78:	10800104 	addi	r2,r2,4
1010ed7c:	1007883a 	mov	r3,r2
1010ed80:	e0bffc17 	ldw	r2,-16(fp)
1010ed84:	10800817 	ldw	r2,32(r2)
1010ed88:	18800035 	stwio	r2,0(r3)
1010ed8c:	e0bffa17 	ldw	r2,-24(fp)
1010ed90:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ed94:	e0bff817 	ldw	r2,-32(fp)
1010ed98:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1010ed9c:	e0bffe17 	ldw	r2,-8(fp)
1010eda0:	0080100e 	bge	zero,r2,1010ede4 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1010eda4:	e0bfff17 	ldw	r2,-4(fp)
1010eda8:	1090000c 	andi	r2,r2,16384
1010edac:	1000101e 	bne	r2,zero,1010edf0 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1010edb0:	0001883a 	nop
1010edb4:	e0bffc17 	ldw	r2,-16(fp)
1010edb8:	10c00d17 	ldw	r3,52(r2)
1010edbc:	e0bff517 	ldw	r2,-44(fp)
1010edc0:	1880051e 	bne	r3,r2,1010edd8 <altera_avalon_jtag_uart_write+0x1b8>
1010edc4:	e0bffc17 	ldw	r2,-16(fp)
1010edc8:	10c00917 	ldw	r3,36(r2)
1010edcc:	e0bffc17 	ldw	r2,-16(fp)
1010edd0:	10800117 	ldw	r2,4(r2)
1010edd4:	18bff736 	bltu	r3,r2,1010edb4 <__alt_data_end+0xfffeedb4>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1010edd8:	e0bffc17 	ldw	r2,-16(fp)
1010eddc:	10800917 	ldw	r2,36(r2)
1010ede0:	1000051e 	bne	r2,zero,1010edf8 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1010ede4:	e0bffe17 	ldw	r2,-8(fp)
1010ede8:	00bfd016 	blt	zero,r2,1010ed2c <__alt_data_end+0xfffeed2c>
1010edec:	00000306 	br	1010edfc <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1010edf0:	0001883a 	nop
1010edf4:	00000106 	br	1010edfc <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1010edf8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1010edfc:	e0fffd17 	ldw	r3,-12(fp)
1010ee00:	e0bff717 	ldw	r2,-36(fp)
1010ee04:	18800426 	beq	r3,r2,1010ee18 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1010ee08:	e0fffd17 	ldw	r3,-12(fp)
1010ee0c:	e0bff717 	ldw	r2,-36(fp)
1010ee10:	1885c83a 	sub	r2,r3,r2
1010ee14:	00000606 	br	1010ee30 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1010ee18:	e0bfff17 	ldw	r2,-4(fp)
1010ee1c:	1090000c 	andi	r2,r2,16384
1010ee20:	10000226 	beq	r2,zero,1010ee2c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1010ee24:	00bffd44 	movi	r2,-11
1010ee28:	00000106 	br	1010ee30 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1010ee2c:	00bffec4 	movi	r2,-5
}
1010ee30:	e037883a 	mov	sp,fp
1010ee34:	dfc00117 	ldw	ra,4(sp)
1010ee38:	df000017 	ldw	fp,0(sp)
1010ee3c:	dec00204 	addi	sp,sp,8
1010ee40:	f800283a 	ret

1010ee44 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1010ee44:	defff504 	addi	sp,sp,-44
1010ee48:	df000a15 	stw	fp,40(sp)
1010ee4c:	df000a04 	addi	fp,sp,40
1010ee50:	e13ffc15 	stw	r4,-16(fp)
1010ee54:	e17ffd15 	stw	r5,-12(fp)
1010ee58:	e1bffe15 	stw	r6,-8(fp)
1010ee5c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1010ee60:	e03ff615 	stw	zero,-40(fp)
1010ee64:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
1010ee68:	10003c26 	beq	r2,zero,1010ef5c <alt_alarm_start+0x118>
  {
    if (alarm)
1010ee6c:	e0bffc17 	ldw	r2,-16(fp)
1010ee70:	10003826 	beq	r2,zero,1010ef54 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
1010ee74:	e0bffc17 	ldw	r2,-16(fp)
1010ee78:	e0fffe17 	ldw	r3,-8(fp)
1010ee7c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1010ee80:	e0bffc17 	ldw	r2,-16(fp)
1010ee84:	e0ffff17 	ldw	r3,-4(fp)
1010ee88:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010ee8c:	0005303a 	rdctl	r2,status
1010ee90:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ee94:	e0fff917 	ldw	r3,-28(fp)
1010ee98:	00bfff84 	movi	r2,-2
1010ee9c:	1884703a 	and	r2,r3,r2
1010eea0:	1001703a 	wrctl	status,r2
  
  return context;
1010eea4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1010eea8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1010eeac:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
1010eeb0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1010eeb4:	e0fffd17 	ldw	r3,-12(fp)
1010eeb8:	e0bff617 	ldw	r2,-40(fp)
1010eebc:	1885883a 	add	r2,r3,r2
1010eec0:	10c00044 	addi	r3,r2,1
1010eec4:	e0bffc17 	ldw	r2,-16(fp)
1010eec8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1010eecc:	e0bffc17 	ldw	r2,-16(fp)
1010eed0:	10c00217 	ldw	r3,8(r2)
1010eed4:	e0bff617 	ldw	r2,-40(fp)
1010eed8:	1880042e 	bgeu	r3,r2,1010eeec <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
1010eedc:	e0bffc17 	ldw	r2,-16(fp)
1010eee0:	00c00044 	movi	r3,1
1010eee4:	10c00405 	stb	r3,16(r2)
1010eee8:	00000206 	br	1010eef4 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
1010eeec:	e0bffc17 	ldw	r2,-16(fp)
1010eef0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1010eef4:	e0bffc17 	ldw	r2,-16(fp)
1010eef8:	d0e00e04 	addi	r3,gp,-32712
1010eefc:	e0fffa15 	stw	r3,-24(fp)
1010ef00:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010ef04:	e0bffb17 	ldw	r2,-20(fp)
1010ef08:	e0fffa17 	ldw	r3,-24(fp)
1010ef0c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010ef10:	e0bffa17 	ldw	r2,-24(fp)
1010ef14:	10c00017 	ldw	r3,0(r2)
1010ef18:	e0bffb17 	ldw	r2,-20(fp)
1010ef1c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010ef20:	e0bffa17 	ldw	r2,-24(fp)
1010ef24:	10800017 	ldw	r2,0(r2)
1010ef28:	e0fffb17 	ldw	r3,-20(fp)
1010ef2c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010ef30:	e0bffa17 	ldw	r2,-24(fp)
1010ef34:	e0fffb17 	ldw	r3,-20(fp)
1010ef38:	10c00015 	stw	r3,0(r2)
1010ef3c:	e0bff817 	ldw	r2,-32(fp)
1010ef40:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ef44:	e0bff717 	ldw	r2,-36(fp)
1010ef48:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1010ef4c:	0005883a 	mov	r2,zero
1010ef50:	00000306 	br	1010ef60 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
1010ef54:	00bffa84 	movi	r2,-22
1010ef58:	00000106 	br	1010ef60 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
1010ef5c:	00bfde84 	movi	r2,-134
  }
}
1010ef60:	e037883a 	mov	sp,fp
1010ef64:	df000017 	ldw	fp,0(sp)
1010ef68:	dec00104 	addi	sp,sp,4
1010ef6c:	f800283a 	ret

1010ef70 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1010ef70:	deffff04 	addi	sp,sp,-4
1010ef74:	df000015 	stw	fp,0(sp)
1010ef78:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1010ef7c:	0001883a 	nop
1010ef80:	e037883a 	mov	sp,fp
1010ef84:	df000017 	ldw	fp,0(sp)
1010ef88:	dec00104 	addi	sp,sp,4
1010ef8c:	f800283a 	ret

1010ef90 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010ef90:	defffe04 	addi	sp,sp,-8
1010ef94:	dfc00115 	stw	ra,4(sp)
1010ef98:	df000015 	stw	fp,0(sp)
1010ef9c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010efa0:	d0a00b17 	ldw	r2,-32724(gp)
1010efa4:	10000326 	beq	r2,zero,1010efb4 <alt_get_errno+0x24>
1010efa8:	d0a00b17 	ldw	r2,-32724(gp)
1010efac:	103ee83a 	callr	r2
1010efb0:	00000106 	br	1010efb8 <alt_get_errno+0x28>
1010efb4:	d0a6d104 	addi	r2,gp,-25788
}
1010efb8:	e037883a 	mov	sp,fp
1010efbc:	dfc00117 	ldw	ra,4(sp)
1010efc0:	df000017 	ldw	fp,0(sp)
1010efc4:	dec00204 	addi	sp,sp,8
1010efc8:	f800283a 	ret

1010efcc <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1010efcc:	defffa04 	addi	sp,sp,-24
1010efd0:	dfc00515 	stw	ra,20(sp)
1010efd4:	df000415 	stw	fp,16(sp)
1010efd8:	df000404 	addi	fp,sp,16
1010efdc:	e13ffe15 	stw	r4,-8(fp)
1010efe0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1010efe4:	e0bffe17 	ldw	r2,-8(fp)
1010efe8:	10000326 	beq	r2,zero,1010eff8 <alt_dev_llist_insert+0x2c>
1010efec:	e0bffe17 	ldw	r2,-8(fp)
1010eff0:	10800217 	ldw	r2,8(r2)
1010eff4:	1000061e 	bne	r2,zero,1010f010 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1010eff8:	010ef900 	call	1010ef90 <alt_get_errno>
1010effc:	1007883a 	mov	r3,r2
1010f000:	00800584 	movi	r2,22
1010f004:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1010f008:	00bffa84 	movi	r2,-22
1010f00c:	00001306 	br	1010f05c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1010f010:	e0bffe17 	ldw	r2,-8(fp)
1010f014:	e0ffff17 	ldw	r3,-4(fp)
1010f018:	e0fffc15 	stw	r3,-16(fp)
1010f01c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010f020:	e0bffd17 	ldw	r2,-12(fp)
1010f024:	e0fffc17 	ldw	r3,-16(fp)
1010f028:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010f02c:	e0bffc17 	ldw	r2,-16(fp)
1010f030:	10c00017 	ldw	r3,0(r2)
1010f034:	e0bffd17 	ldw	r2,-12(fp)
1010f038:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010f03c:	e0bffc17 	ldw	r2,-16(fp)
1010f040:	10800017 	ldw	r2,0(r2)
1010f044:	e0fffd17 	ldw	r3,-12(fp)
1010f048:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010f04c:	e0bffc17 	ldw	r2,-16(fp)
1010f050:	e0fffd17 	ldw	r3,-12(fp)
1010f054:	10c00015 	stw	r3,0(r2)

  return 0;  
1010f058:	0005883a 	mov	r2,zero
}
1010f05c:	e037883a 	mov	sp,fp
1010f060:	dfc00117 	ldw	ra,4(sp)
1010f064:	df000017 	ldw	fp,0(sp)
1010f068:	dec00204 	addi	sp,sp,8
1010f06c:	f800283a 	ret

1010f070 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1010f070:	defffd04 	addi	sp,sp,-12
1010f074:	dfc00215 	stw	ra,8(sp)
1010f078:	df000115 	stw	fp,4(sp)
1010f07c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010f080:	00840474 	movhi	r2,4113
1010f084:	10800904 	addi	r2,r2,36
1010f088:	e0bfff15 	stw	r2,-4(fp)
1010f08c:	00000606 	br	1010f0a8 <_do_ctors+0x38>
        (*ctor) (); 
1010f090:	e0bfff17 	ldw	r2,-4(fp)
1010f094:	10800017 	ldw	r2,0(r2)
1010f098:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010f09c:	e0bfff17 	ldw	r2,-4(fp)
1010f0a0:	10bfff04 	addi	r2,r2,-4
1010f0a4:	e0bfff15 	stw	r2,-4(fp)
1010f0a8:	e0ffff17 	ldw	r3,-4(fp)
1010f0ac:	00840474 	movhi	r2,4113
1010f0b0:	10800a04 	addi	r2,r2,40
1010f0b4:	18bff62e 	bgeu	r3,r2,1010f090 <__alt_data_end+0xfffef090>
        (*ctor) (); 
}
1010f0b8:	0001883a 	nop
1010f0bc:	e037883a 	mov	sp,fp
1010f0c0:	dfc00117 	ldw	ra,4(sp)
1010f0c4:	df000017 	ldw	fp,0(sp)
1010f0c8:	dec00204 	addi	sp,sp,8
1010f0cc:	f800283a 	ret

1010f0d0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1010f0d0:	defffd04 	addi	sp,sp,-12
1010f0d4:	dfc00215 	stw	ra,8(sp)
1010f0d8:	df000115 	stw	fp,4(sp)
1010f0dc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010f0e0:	00840474 	movhi	r2,4113
1010f0e4:	10800904 	addi	r2,r2,36
1010f0e8:	e0bfff15 	stw	r2,-4(fp)
1010f0ec:	00000606 	br	1010f108 <_do_dtors+0x38>
        (*dtor) (); 
1010f0f0:	e0bfff17 	ldw	r2,-4(fp)
1010f0f4:	10800017 	ldw	r2,0(r2)
1010f0f8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010f0fc:	e0bfff17 	ldw	r2,-4(fp)
1010f100:	10bfff04 	addi	r2,r2,-4
1010f104:	e0bfff15 	stw	r2,-4(fp)
1010f108:	e0ffff17 	ldw	r3,-4(fp)
1010f10c:	00840474 	movhi	r2,4113
1010f110:	10800a04 	addi	r2,r2,40
1010f114:	18bff62e 	bgeu	r3,r2,1010f0f0 <__alt_data_end+0xfffef0f0>
        (*dtor) (); 
}
1010f118:	0001883a 	nop
1010f11c:	e037883a 	mov	sp,fp
1010f120:	dfc00117 	ldw	ra,4(sp)
1010f124:	df000017 	ldw	fp,0(sp)
1010f128:	dec00204 	addi	sp,sp,8
1010f12c:	f800283a 	ret

1010f130 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1010f130:	deffff04 	addi	sp,sp,-4
1010f134:	df000015 	stw	fp,0(sp)
1010f138:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
1010f13c:	0001883a 	nop
1010f140:	e037883a 	mov	sp,fp
1010f144:	df000017 	ldw	fp,0(sp)
1010f148:	dec00104 	addi	sp,sp,4
1010f14c:	f800283a 	ret

1010f150 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010f150:	defff904 	addi	sp,sp,-28
1010f154:	dfc00615 	stw	ra,24(sp)
1010f158:	df000515 	stw	fp,20(sp)
1010f15c:	df000504 	addi	fp,sp,20
1010f160:	e13ffc15 	stw	r4,-16(fp)
1010f164:	e17ffd15 	stw	r5,-12(fp)
1010f168:	e1bffe15 	stw	r6,-8(fp)
1010f16c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1010f170:	e0800217 	ldw	r2,8(fp)
1010f174:	d8800015 	stw	r2,0(sp)
1010f178:	e1ffff17 	ldw	r7,-4(fp)
1010f17c:	e1bffe17 	ldw	r6,-8(fp)
1010f180:	e17ffd17 	ldw	r5,-12(fp)
1010f184:	e13ffc17 	ldw	r4,-16(fp)
1010f188:	010f3000 	call	1010f300 <alt_iic_isr_register>
}  
1010f18c:	e037883a 	mov	sp,fp
1010f190:	dfc00117 	ldw	ra,4(sp)
1010f194:	df000017 	ldw	fp,0(sp)
1010f198:	dec00204 	addi	sp,sp,8
1010f19c:	f800283a 	ret

1010f1a0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1010f1a0:	defff904 	addi	sp,sp,-28
1010f1a4:	df000615 	stw	fp,24(sp)
1010f1a8:	df000604 	addi	fp,sp,24
1010f1ac:	e13ffe15 	stw	r4,-8(fp)
1010f1b0:	e17fff15 	stw	r5,-4(fp)
1010f1b4:	e0bfff17 	ldw	r2,-4(fp)
1010f1b8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f1bc:	0005303a 	rdctl	r2,status
1010f1c0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f1c4:	e0fffb17 	ldw	r3,-20(fp)
1010f1c8:	00bfff84 	movi	r2,-2
1010f1cc:	1884703a 	and	r2,r3,r2
1010f1d0:	1001703a 	wrctl	status,r2
  
  return context;
1010f1d4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010f1d8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1010f1dc:	00c00044 	movi	r3,1
1010f1e0:	e0bffa17 	ldw	r2,-24(fp)
1010f1e4:	1884983a 	sll	r2,r3,r2
1010f1e8:	1007883a 	mov	r3,r2
1010f1ec:	d0a6d517 	ldw	r2,-25772(gp)
1010f1f0:	1884b03a 	or	r2,r3,r2
1010f1f4:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010f1f8:	d0a6d517 	ldw	r2,-25772(gp)
1010f1fc:	100170fa 	wrctl	ienable,r2
1010f200:	e0bffc17 	ldw	r2,-16(fp)
1010f204:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f208:	e0bffd17 	ldw	r2,-12(fp)
1010f20c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010f210:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1010f214:	0001883a 	nop
}
1010f218:	e037883a 	mov	sp,fp
1010f21c:	df000017 	ldw	fp,0(sp)
1010f220:	dec00104 	addi	sp,sp,4
1010f224:	f800283a 	ret

1010f228 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1010f228:	defff904 	addi	sp,sp,-28
1010f22c:	df000615 	stw	fp,24(sp)
1010f230:	df000604 	addi	fp,sp,24
1010f234:	e13ffe15 	stw	r4,-8(fp)
1010f238:	e17fff15 	stw	r5,-4(fp)
1010f23c:	e0bfff17 	ldw	r2,-4(fp)
1010f240:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f244:	0005303a 	rdctl	r2,status
1010f248:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f24c:	e0fffb17 	ldw	r3,-20(fp)
1010f250:	00bfff84 	movi	r2,-2
1010f254:	1884703a 	and	r2,r3,r2
1010f258:	1001703a 	wrctl	status,r2
  
  return context;
1010f25c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010f260:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1010f264:	00c00044 	movi	r3,1
1010f268:	e0bffa17 	ldw	r2,-24(fp)
1010f26c:	1884983a 	sll	r2,r3,r2
1010f270:	0084303a 	nor	r2,zero,r2
1010f274:	1007883a 	mov	r3,r2
1010f278:	d0a6d517 	ldw	r2,-25772(gp)
1010f27c:	1884703a 	and	r2,r3,r2
1010f280:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010f284:	d0a6d517 	ldw	r2,-25772(gp)
1010f288:	100170fa 	wrctl	ienable,r2
1010f28c:	e0bffc17 	ldw	r2,-16(fp)
1010f290:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f294:	e0bffd17 	ldw	r2,-12(fp)
1010f298:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010f29c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1010f2a0:	0001883a 	nop
}
1010f2a4:	e037883a 	mov	sp,fp
1010f2a8:	df000017 	ldw	fp,0(sp)
1010f2ac:	dec00104 	addi	sp,sp,4
1010f2b0:	f800283a 	ret

1010f2b4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1010f2b4:	defffc04 	addi	sp,sp,-16
1010f2b8:	df000315 	stw	fp,12(sp)
1010f2bc:	df000304 	addi	fp,sp,12
1010f2c0:	e13ffe15 	stw	r4,-8(fp)
1010f2c4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1010f2c8:	000530fa 	rdctl	r2,ienable
1010f2cc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1010f2d0:	00c00044 	movi	r3,1
1010f2d4:	e0bfff17 	ldw	r2,-4(fp)
1010f2d8:	1884983a 	sll	r2,r3,r2
1010f2dc:	1007883a 	mov	r3,r2
1010f2e0:	e0bffd17 	ldw	r2,-12(fp)
1010f2e4:	1884703a 	and	r2,r3,r2
1010f2e8:	1004c03a 	cmpne	r2,r2,zero
1010f2ec:	10803fcc 	andi	r2,r2,255
}
1010f2f0:	e037883a 	mov	sp,fp
1010f2f4:	df000017 	ldw	fp,0(sp)
1010f2f8:	dec00104 	addi	sp,sp,4
1010f2fc:	f800283a 	ret

1010f300 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010f300:	defff504 	addi	sp,sp,-44
1010f304:	dfc00a15 	stw	ra,40(sp)
1010f308:	df000915 	stw	fp,36(sp)
1010f30c:	df000904 	addi	fp,sp,36
1010f310:	e13ffc15 	stw	r4,-16(fp)
1010f314:	e17ffd15 	stw	r5,-12(fp)
1010f318:	e1bffe15 	stw	r6,-8(fp)
1010f31c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1010f320:	00bffa84 	movi	r2,-22
1010f324:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1010f328:	e0bffd17 	ldw	r2,-12(fp)
1010f32c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1010f330:	e0bff817 	ldw	r2,-32(fp)
1010f334:	10800808 	cmpgei	r2,r2,32
1010f338:	1000271e 	bne	r2,zero,1010f3d8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f33c:	0005303a 	rdctl	r2,status
1010f340:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f344:	e0fffb17 	ldw	r3,-20(fp)
1010f348:	00bfff84 	movi	r2,-2
1010f34c:	1884703a 	and	r2,r3,r2
1010f350:	1001703a 	wrctl	status,r2
  
  return context;
1010f354:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1010f358:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1010f35c:	00840474 	movhi	r2,4113
1010f360:	108ea504 	addi	r2,r2,14996
1010f364:	e0fff817 	ldw	r3,-32(fp)
1010f368:	180690fa 	slli	r3,r3,3
1010f36c:	10c5883a 	add	r2,r2,r3
1010f370:	e0fffe17 	ldw	r3,-8(fp)
1010f374:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1010f378:	00840474 	movhi	r2,4113
1010f37c:	108ea504 	addi	r2,r2,14996
1010f380:	e0fff817 	ldw	r3,-32(fp)
1010f384:	180690fa 	slli	r3,r3,3
1010f388:	10c5883a 	add	r2,r2,r3
1010f38c:	10800104 	addi	r2,r2,4
1010f390:	e0ffff17 	ldw	r3,-4(fp)
1010f394:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1010f398:	e0bffe17 	ldw	r2,-8(fp)
1010f39c:	10000526 	beq	r2,zero,1010f3b4 <alt_iic_isr_register+0xb4>
1010f3a0:	e0bff817 	ldw	r2,-32(fp)
1010f3a4:	100b883a 	mov	r5,r2
1010f3a8:	e13ffc17 	ldw	r4,-16(fp)
1010f3ac:	010f1a00 	call	1010f1a0 <alt_ic_irq_enable>
1010f3b0:	00000406 	br	1010f3c4 <alt_iic_isr_register+0xc4>
1010f3b4:	e0bff817 	ldw	r2,-32(fp)
1010f3b8:	100b883a 	mov	r5,r2
1010f3bc:	e13ffc17 	ldw	r4,-16(fp)
1010f3c0:	010f2280 	call	1010f228 <alt_ic_irq_disable>
1010f3c4:	e0bff715 	stw	r2,-36(fp)
1010f3c8:	e0bffa17 	ldw	r2,-24(fp)
1010f3cc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f3d0:	e0bff917 	ldw	r2,-28(fp)
1010f3d4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1010f3d8:	e0bff717 	ldw	r2,-36(fp)
}
1010f3dc:	e037883a 	mov	sp,fp
1010f3e0:	dfc00117 	ldw	ra,4(sp)
1010f3e4:	df000017 	ldw	fp,0(sp)
1010f3e8:	dec00204 	addi	sp,sp,8
1010f3ec:	f800283a 	ret

1010f3f0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1010f3f0:	defff804 	addi	sp,sp,-32
1010f3f4:	dfc00715 	stw	ra,28(sp)
1010f3f8:	df000615 	stw	fp,24(sp)
1010f3fc:	dc000515 	stw	r16,20(sp)
1010f400:	df000604 	addi	fp,sp,24
1010f404:	e13ffb15 	stw	r4,-20(fp)
1010f408:	e17ffc15 	stw	r5,-16(fp)
1010f40c:	e1bffd15 	stw	r6,-12(fp)
1010f410:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
1010f414:	e1bffe17 	ldw	r6,-8(fp)
1010f418:	e17ffd17 	ldw	r5,-12(fp)
1010f41c:	e13ffc17 	ldw	r4,-16(fp)
1010f420:	010f6780 	call	1010f678 <open>
1010f424:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
1010f428:	e0bffa17 	ldw	r2,-24(fp)
1010f42c:	10002216 	blt	r2,zero,1010f4b8 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
1010f430:	04040474 	movhi	r16,4113
1010f434:	84034a04 	addi	r16,r16,3368
1010f438:	e0bffa17 	ldw	r2,-24(fp)
1010f43c:	01400304 	movi	r5,12
1010f440:	1009883a 	mov	r4,r2
1010f444:	0100c080 	call	10100c08 <__mulsi3>
1010f448:	8085883a 	add	r2,r16,r2
1010f44c:	10c00017 	ldw	r3,0(r2)
1010f450:	e0bffb17 	ldw	r2,-20(fp)
1010f454:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1010f458:	04040474 	movhi	r16,4113
1010f45c:	84034a04 	addi	r16,r16,3368
1010f460:	e0bffa17 	ldw	r2,-24(fp)
1010f464:	01400304 	movi	r5,12
1010f468:	1009883a 	mov	r4,r2
1010f46c:	0100c080 	call	10100c08 <__mulsi3>
1010f470:	8085883a 	add	r2,r16,r2
1010f474:	10800104 	addi	r2,r2,4
1010f478:	10c00017 	ldw	r3,0(r2)
1010f47c:	e0bffb17 	ldw	r2,-20(fp)
1010f480:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1010f484:	04040474 	movhi	r16,4113
1010f488:	84034a04 	addi	r16,r16,3368
1010f48c:	e0bffa17 	ldw	r2,-24(fp)
1010f490:	01400304 	movi	r5,12
1010f494:	1009883a 	mov	r4,r2
1010f498:	0100c080 	call	10100c08 <__mulsi3>
1010f49c:	8085883a 	add	r2,r16,r2
1010f4a0:	10800204 	addi	r2,r2,8
1010f4a4:	10c00017 	ldw	r3,0(r2)
1010f4a8:	e0bffb17 	ldw	r2,-20(fp)
1010f4ac:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1010f4b0:	e13ffa17 	ldw	r4,-24(fp)
1010f4b4:	010e0b80 	call	1010e0b8 <alt_release_fd>
  }
} 
1010f4b8:	0001883a 	nop
1010f4bc:	e6ffff04 	addi	sp,fp,-4
1010f4c0:	dfc00217 	ldw	ra,8(sp)
1010f4c4:	df000117 	ldw	fp,4(sp)
1010f4c8:	dc000017 	ldw	r16,0(sp)
1010f4cc:	dec00304 	addi	sp,sp,12
1010f4d0:	f800283a 	ret

1010f4d4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1010f4d4:	defffb04 	addi	sp,sp,-20
1010f4d8:	dfc00415 	stw	ra,16(sp)
1010f4dc:	df000315 	stw	fp,12(sp)
1010f4e0:	df000304 	addi	fp,sp,12
1010f4e4:	e13ffd15 	stw	r4,-12(fp)
1010f4e8:	e17ffe15 	stw	r5,-8(fp)
1010f4ec:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1010f4f0:	01c07fc4 	movi	r7,511
1010f4f4:	01800044 	movi	r6,1
1010f4f8:	e17ffd17 	ldw	r5,-12(fp)
1010f4fc:	01040474 	movhi	r4,4113
1010f500:	21034d04 	addi	r4,r4,3380
1010f504:	010f3f00 	call	1010f3f0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1010f508:	01c07fc4 	movi	r7,511
1010f50c:	000d883a 	mov	r6,zero
1010f510:	e17ffe17 	ldw	r5,-8(fp)
1010f514:	01040474 	movhi	r4,4113
1010f518:	21034a04 	addi	r4,r4,3368
1010f51c:	010f3f00 	call	1010f3f0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1010f520:	01c07fc4 	movi	r7,511
1010f524:	01800044 	movi	r6,1
1010f528:	e17fff17 	ldw	r5,-4(fp)
1010f52c:	01040474 	movhi	r4,4113
1010f530:	21035004 	addi	r4,r4,3392
1010f534:	010f3f00 	call	1010f3f0 <alt_open_fd>
}  
1010f538:	0001883a 	nop
1010f53c:	e037883a 	mov	sp,fp
1010f540:	dfc00117 	ldw	ra,4(sp)
1010f544:	df000017 	ldw	fp,0(sp)
1010f548:	dec00204 	addi	sp,sp,8
1010f54c:	f800283a 	ret

1010f550 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010f550:	defffe04 	addi	sp,sp,-8
1010f554:	dfc00115 	stw	ra,4(sp)
1010f558:	df000015 	stw	fp,0(sp)
1010f55c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010f560:	d0a00b17 	ldw	r2,-32724(gp)
1010f564:	10000326 	beq	r2,zero,1010f574 <alt_get_errno+0x24>
1010f568:	d0a00b17 	ldw	r2,-32724(gp)
1010f56c:	103ee83a 	callr	r2
1010f570:	00000106 	br	1010f578 <alt_get_errno+0x28>
1010f574:	d0a6d104 	addi	r2,gp,-25788
}
1010f578:	e037883a 	mov	sp,fp
1010f57c:	dfc00117 	ldw	ra,4(sp)
1010f580:	df000017 	ldw	fp,0(sp)
1010f584:	dec00204 	addi	sp,sp,8
1010f588:	f800283a 	ret

1010f58c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1010f58c:	defffb04 	addi	sp,sp,-20
1010f590:	dfc00415 	stw	ra,16(sp)
1010f594:	df000315 	stw	fp,12(sp)
1010f598:	dc000215 	stw	r16,8(sp)
1010f59c:	df000304 	addi	fp,sp,12
1010f5a0:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1010f5a4:	e0bffe17 	ldw	r2,-8(fp)
1010f5a8:	10800217 	ldw	r2,8(r2)
1010f5ac:	10d00034 	orhi	r3,r2,16384
1010f5b0:	e0bffe17 	ldw	r2,-8(fp)
1010f5b4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010f5b8:	e03ffd15 	stw	zero,-12(fp)
1010f5bc:	00002306 	br	1010f64c <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010f5c0:	04040474 	movhi	r16,4113
1010f5c4:	84034a04 	addi	r16,r16,3368
1010f5c8:	e0bffd17 	ldw	r2,-12(fp)
1010f5cc:	01400304 	movi	r5,12
1010f5d0:	1009883a 	mov	r4,r2
1010f5d4:	0100c080 	call	10100c08 <__mulsi3>
1010f5d8:	8085883a 	add	r2,r16,r2
1010f5dc:	10c00017 	ldw	r3,0(r2)
1010f5e0:	e0bffe17 	ldw	r2,-8(fp)
1010f5e4:	10800017 	ldw	r2,0(r2)
1010f5e8:	1880151e 	bne	r3,r2,1010f640 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010f5ec:	04040474 	movhi	r16,4113
1010f5f0:	84034a04 	addi	r16,r16,3368
1010f5f4:	e0bffd17 	ldw	r2,-12(fp)
1010f5f8:	01400304 	movi	r5,12
1010f5fc:	1009883a 	mov	r4,r2
1010f600:	0100c080 	call	10100c08 <__mulsi3>
1010f604:	8085883a 	add	r2,r16,r2
1010f608:	10800204 	addi	r2,r2,8
1010f60c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010f610:	10000b0e 	bge	r2,zero,1010f640 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1010f614:	01400304 	movi	r5,12
1010f618:	e13ffd17 	ldw	r4,-12(fp)
1010f61c:	0100c080 	call	10100c08 <__mulsi3>
1010f620:	1007883a 	mov	r3,r2
1010f624:	00840474 	movhi	r2,4113
1010f628:	10834a04 	addi	r2,r2,3368
1010f62c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010f630:	e0bffe17 	ldw	r2,-8(fp)
1010f634:	18800226 	beq	r3,r2,1010f640 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1010f638:	00bffcc4 	movi	r2,-13
1010f63c:	00000806 	br	1010f660 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010f640:	e0bffd17 	ldw	r2,-12(fp)
1010f644:	10800044 	addi	r2,r2,1
1010f648:	e0bffd15 	stw	r2,-12(fp)
1010f64c:	d0a00a17 	ldw	r2,-32728(gp)
1010f650:	1007883a 	mov	r3,r2
1010f654:	e0bffd17 	ldw	r2,-12(fp)
1010f658:	18bfd92e 	bgeu	r3,r2,1010f5c0 <__alt_data_end+0xfffef5c0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1010f65c:	0005883a 	mov	r2,zero
}
1010f660:	e6ffff04 	addi	sp,fp,-4
1010f664:	dfc00217 	ldw	ra,8(sp)
1010f668:	df000117 	ldw	fp,4(sp)
1010f66c:	dc000017 	ldw	r16,0(sp)
1010f670:	dec00304 	addi	sp,sp,12
1010f674:	f800283a 	ret

1010f678 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1010f678:	defff604 	addi	sp,sp,-40
1010f67c:	dfc00915 	stw	ra,36(sp)
1010f680:	df000815 	stw	fp,32(sp)
1010f684:	df000804 	addi	fp,sp,32
1010f688:	e13ffd15 	stw	r4,-12(fp)
1010f68c:	e17ffe15 	stw	r5,-8(fp)
1010f690:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1010f694:	00bfffc4 	movi	r2,-1
1010f698:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1010f69c:	00bffb44 	movi	r2,-19
1010f6a0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1010f6a4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1010f6a8:	d1600804 	addi	r5,gp,-32736
1010f6ac:	e13ffd17 	ldw	r4,-12(fp)
1010f6b0:	010f99c0 	call	1010f99c <alt_find_dev>
1010f6b4:	e0bff815 	stw	r2,-32(fp)
1010f6b8:	e0bff817 	ldw	r2,-32(fp)
1010f6bc:	1000051e 	bne	r2,zero,1010f6d4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1010f6c0:	e13ffd17 	ldw	r4,-12(fp)
1010f6c4:	010fa2c0 	call	1010fa2c <alt_find_file>
1010f6c8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1010f6cc:	00800044 	movi	r2,1
1010f6d0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1010f6d4:	e0bff817 	ldw	r2,-32(fp)
1010f6d8:	10002b26 	beq	r2,zero,1010f788 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
1010f6dc:	e13ff817 	ldw	r4,-32(fp)
1010f6e0:	010fb340 	call	1010fb34 <alt_get_fd>
1010f6e4:	e0bff915 	stw	r2,-28(fp)
1010f6e8:	e0bff917 	ldw	r2,-28(fp)
1010f6ec:	1000030e 	bge	r2,zero,1010f6fc <open+0x84>
    {
      status = index;
1010f6f0:	e0bff917 	ldw	r2,-28(fp)
1010f6f4:	e0bffa15 	stw	r2,-24(fp)
1010f6f8:	00002506 	br	1010f790 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
1010f6fc:	01400304 	movi	r5,12
1010f700:	e13ff917 	ldw	r4,-28(fp)
1010f704:	0100c080 	call	10100c08 <__mulsi3>
1010f708:	1007883a 	mov	r3,r2
1010f70c:	00840474 	movhi	r2,4113
1010f710:	10834a04 	addi	r2,r2,3368
1010f714:	1885883a 	add	r2,r3,r2
1010f718:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1010f71c:	e0fffe17 	ldw	r3,-8(fp)
1010f720:	00900034 	movhi	r2,16384
1010f724:	10bfffc4 	addi	r2,r2,-1
1010f728:	1886703a 	and	r3,r3,r2
1010f72c:	e0bffc17 	ldw	r2,-16(fp)
1010f730:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1010f734:	e0bffb17 	ldw	r2,-20(fp)
1010f738:	1000051e 	bne	r2,zero,1010f750 <open+0xd8>
1010f73c:	e13ffc17 	ldw	r4,-16(fp)
1010f740:	010f58c0 	call	1010f58c <alt_file_locked>
1010f744:	e0bffa15 	stw	r2,-24(fp)
1010f748:	e0bffa17 	ldw	r2,-24(fp)
1010f74c:	10001016 	blt	r2,zero,1010f790 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1010f750:	e0bff817 	ldw	r2,-32(fp)
1010f754:	10800317 	ldw	r2,12(r2)
1010f758:	10000826 	beq	r2,zero,1010f77c <open+0x104>
1010f75c:	e0bff817 	ldw	r2,-32(fp)
1010f760:	10800317 	ldw	r2,12(r2)
1010f764:	e1ffff17 	ldw	r7,-4(fp)
1010f768:	e1bffe17 	ldw	r6,-8(fp)
1010f76c:	e17ffd17 	ldw	r5,-12(fp)
1010f770:	e13ffc17 	ldw	r4,-16(fp)
1010f774:	103ee83a 	callr	r2
1010f778:	00000106 	br	1010f780 <open+0x108>
1010f77c:	0005883a 	mov	r2,zero
1010f780:	e0bffa15 	stw	r2,-24(fp)
1010f784:	00000206 	br	1010f790 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
1010f788:	00bffb44 	movi	r2,-19
1010f78c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1010f790:	e0bffa17 	ldw	r2,-24(fp)
1010f794:	1000090e 	bge	r2,zero,1010f7bc <open+0x144>
  {
    alt_release_fd (index);  
1010f798:	e13ff917 	ldw	r4,-28(fp)
1010f79c:	010e0b80 	call	1010e0b8 <alt_release_fd>
    ALT_ERRNO = -status;
1010f7a0:	010f5500 	call	1010f550 <alt_get_errno>
1010f7a4:	1007883a 	mov	r3,r2
1010f7a8:	e0bffa17 	ldw	r2,-24(fp)
1010f7ac:	0085c83a 	sub	r2,zero,r2
1010f7b0:	18800015 	stw	r2,0(r3)
    return -1;
1010f7b4:	00bfffc4 	movi	r2,-1
1010f7b8:	00000106 	br	1010f7c0 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
1010f7bc:	e0bff917 	ldw	r2,-28(fp)
}
1010f7c0:	e037883a 	mov	sp,fp
1010f7c4:	dfc00117 	ldw	ra,4(sp)
1010f7c8:	df000017 	ldw	fp,0(sp)
1010f7cc:	dec00204 	addi	sp,sp,8
1010f7d0:	f800283a 	ret

1010f7d4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1010f7d4:	defffa04 	addi	sp,sp,-24
1010f7d8:	df000515 	stw	fp,20(sp)
1010f7dc:	df000504 	addi	fp,sp,20
1010f7e0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f7e4:	0005303a 	rdctl	r2,status
1010f7e8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f7ec:	e0fffc17 	ldw	r3,-16(fp)
1010f7f0:	00bfff84 	movi	r2,-2
1010f7f4:	1884703a 	and	r2,r3,r2
1010f7f8:	1001703a 	wrctl	status,r2
  
  return context;
1010f7fc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1010f800:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1010f804:	e0bfff17 	ldw	r2,-4(fp)
1010f808:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1010f80c:	e0bffd17 	ldw	r2,-12(fp)
1010f810:	10800017 	ldw	r2,0(r2)
1010f814:	e0fffd17 	ldw	r3,-12(fp)
1010f818:	18c00117 	ldw	r3,4(r3)
1010f81c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1010f820:	e0bffd17 	ldw	r2,-12(fp)
1010f824:	10800117 	ldw	r2,4(r2)
1010f828:	e0fffd17 	ldw	r3,-12(fp)
1010f82c:	18c00017 	ldw	r3,0(r3)
1010f830:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1010f834:	e0bffd17 	ldw	r2,-12(fp)
1010f838:	e0fffd17 	ldw	r3,-12(fp)
1010f83c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1010f840:	e0bffd17 	ldw	r2,-12(fp)
1010f844:	e0fffd17 	ldw	r3,-12(fp)
1010f848:	10c00015 	stw	r3,0(r2)
1010f84c:	e0bffb17 	ldw	r2,-20(fp)
1010f850:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f854:	e0bffe17 	ldw	r2,-8(fp)
1010f858:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1010f85c:	0001883a 	nop
1010f860:	e037883a 	mov	sp,fp
1010f864:	df000017 	ldw	fp,0(sp)
1010f868:	dec00104 	addi	sp,sp,4
1010f86c:	f800283a 	ret

1010f870 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1010f870:	defffb04 	addi	sp,sp,-20
1010f874:	dfc00415 	stw	ra,16(sp)
1010f878:	df000315 	stw	fp,12(sp)
1010f87c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1010f880:	d0a00e17 	ldw	r2,-32712(gp)
1010f884:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1010f888:	d0a6d717 	ldw	r2,-25764(gp)
1010f88c:	10800044 	addi	r2,r2,1
1010f890:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010f894:	00002e06 	br	1010f950 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1010f898:	e0bffd17 	ldw	r2,-12(fp)
1010f89c:	10800017 	ldw	r2,0(r2)
1010f8a0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1010f8a4:	e0bffd17 	ldw	r2,-12(fp)
1010f8a8:	10800403 	ldbu	r2,16(r2)
1010f8ac:	10803fcc 	andi	r2,r2,255
1010f8b0:	10000426 	beq	r2,zero,1010f8c4 <alt_tick+0x54>
1010f8b4:	d0a6d717 	ldw	r2,-25764(gp)
1010f8b8:	1000021e 	bne	r2,zero,1010f8c4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1010f8bc:	e0bffd17 	ldw	r2,-12(fp)
1010f8c0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1010f8c4:	e0bffd17 	ldw	r2,-12(fp)
1010f8c8:	10800217 	ldw	r2,8(r2)
1010f8cc:	d0e6d717 	ldw	r3,-25764(gp)
1010f8d0:	18801d36 	bltu	r3,r2,1010f948 <alt_tick+0xd8>
1010f8d4:	e0bffd17 	ldw	r2,-12(fp)
1010f8d8:	10800403 	ldbu	r2,16(r2)
1010f8dc:	10803fcc 	andi	r2,r2,255
1010f8e0:	1000191e 	bne	r2,zero,1010f948 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1010f8e4:	e0bffd17 	ldw	r2,-12(fp)
1010f8e8:	10800317 	ldw	r2,12(r2)
1010f8ec:	e0fffd17 	ldw	r3,-12(fp)
1010f8f0:	18c00517 	ldw	r3,20(r3)
1010f8f4:	1809883a 	mov	r4,r3
1010f8f8:	103ee83a 	callr	r2
1010f8fc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1010f900:	e0bfff17 	ldw	r2,-4(fp)
1010f904:	1000031e 	bne	r2,zero,1010f914 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1010f908:	e13ffd17 	ldw	r4,-12(fp)
1010f90c:	010f7d40 	call	1010f7d4 <alt_alarm_stop>
1010f910:	00000d06 	br	1010f948 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1010f914:	e0bffd17 	ldw	r2,-12(fp)
1010f918:	10c00217 	ldw	r3,8(r2)
1010f91c:	e0bfff17 	ldw	r2,-4(fp)
1010f920:	1887883a 	add	r3,r3,r2
1010f924:	e0bffd17 	ldw	r2,-12(fp)
1010f928:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1010f92c:	e0bffd17 	ldw	r2,-12(fp)
1010f930:	10c00217 	ldw	r3,8(r2)
1010f934:	d0a6d717 	ldw	r2,-25764(gp)
1010f938:	1880032e 	bgeu	r3,r2,1010f948 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1010f93c:	e0bffd17 	ldw	r2,-12(fp)
1010f940:	00c00044 	movi	r3,1
1010f944:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1010f948:	e0bffe17 	ldw	r2,-8(fp)
1010f94c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010f950:	e0fffd17 	ldw	r3,-12(fp)
1010f954:	d0a00e04 	addi	r2,gp,-32712
1010f958:	18bfcf1e 	bne	r3,r2,1010f898 <__alt_data_end+0xfffef898>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1010f95c:	0001883a 	nop
}
1010f960:	0001883a 	nop
1010f964:	e037883a 	mov	sp,fp
1010f968:	dfc00117 	ldw	ra,4(sp)
1010f96c:	df000017 	ldw	fp,0(sp)
1010f970:	dec00204 	addi	sp,sp,8
1010f974:	f800283a 	ret

1010f978 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1010f978:	deffff04 	addi	sp,sp,-4
1010f97c:	df000015 	stw	fp,0(sp)
1010f980:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1010f984:	000170fa 	wrctl	ienable,zero
}
1010f988:	0001883a 	nop
1010f98c:	e037883a 	mov	sp,fp
1010f990:	df000017 	ldw	fp,0(sp)
1010f994:	dec00104 	addi	sp,sp,4
1010f998:	f800283a 	ret

1010f99c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1010f99c:	defffa04 	addi	sp,sp,-24
1010f9a0:	dfc00515 	stw	ra,20(sp)
1010f9a4:	df000415 	stw	fp,16(sp)
1010f9a8:	df000404 	addi	fp,sp,16
1010f9ac:	e13ffe15 	stw	r4,-8(fp)
1010f9b0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1010f9b4:	e0bfff17 	ldw	r2,-4(fp)
1010f9b8:	10800017 	ldw	r2,0(r2)
1010f9bc:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1010f9c0:	e13ffe17 	ldw	r4,-8(fp)
1010f9c4:	0100eb80 	call	10100eb8 <strlen>
1010f9c8:	10800044 	addi	r2,r2,1
1010f9cc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010f9d0:	00000d06 	br	1010fa08 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1010f9d4:	e0bffc17 	ldw	r2,-16(fp)
1010f9d8:	10800217 	ldw	r2,8(r2)
1010f9dc:	e0fffd17 	ldw	r3,-12(fp)
1010f9e0:	180d883a 	mov	r6,r3
1010f9e4:	e17ffe17 	ldw	r5,-8(fp)
1010f9e8:	1009883a 	mov	r4,r2
1010f9ec:	010fce00 	call	1010fce0 <memcmp>
1010f9f0:	1000021e 	bne	r2,zero,1010f9fc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1010f9f4:	e0bffc17 	ldw	r2,-16(fp)
1010f9f8:	00000706 	br	1010fa18 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1010f9fc:	e0bffc17 	ldw	r2,-16(fp)
1010fa00:	10800017 	ldw	r2,0(r2)
1010fa04:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010fa08:	e0fffc17 	ldw	r3,-16(fp)
1010fa0c:	e0bfff17 	ldw	r2,-4(fp)
1010fa10:	18bff01e 	bne	r3,r2,1010f9d4 <__alt_data_end+0xfffef9d4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1010fa14:	0005883a 	mov	r2,zero
}
1010fa18:	e037883a 	mov	sp,fp
1010fa1c:	dfc00117 	ldw	ra,4(sp)
1010fa20:	df000017 	ldw	fp,0(sp)
1010fa24:	dec00204 	addi	sp,sp,8
1010fa28:	f800283a 	ret

1010fa2c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1010fa2c:	defffb04 	addi	sp,sp,-20
1010fa30:	dfc00415 	stw	ra,16(sp)
1010fa34:	df000315 	stw	fp,12(sp)
1010fa38:	df000304 	addi	fp,sp,12
1010fa3c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1010fa40:	d0a00617 	ldw	r2,-32744(gp)
1010fa44:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010fa48:	00003106 	br	1010fb10 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
1010fa4c:	e0bffd17 	ldw	r2,-12(fp)
1010fa50:	10800217 	ldw	r2,8(r2)
1010fa54:	1009883a 	mov	r4,r2
1010fa58:	0100eb80 	call	10100eb8 <strlen>
1010fa5c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1010fa60:	e0bffd17 	ldw	r2,-12(fp)
1010fa64:	10c00217 	ldw	r3,8(r2)
1010fa68:	e0bffe17 	ldw	r2,-8(fp)
1010fa6c:	10bfffc4 	addi	r2,r2,-1
1010fa70:	1885883a 	add	r2,r3,r2
1010fa74:	10800003 	ldbu	r2,0(r2)
1010fa78:	10803fcc 	andi	r2,r2,255
1010fa7c:	1080201c 	xori	r2,r2,128
1010fa80:	10bfe004 	addi	r2,r2,-128
1010fa84:	10800bd8 	cmpnei	r2,r2,47
1010fa88:	1000031e 	bne	r2,zero,1010fa98 <alt_find_file+0x6c>
    {
      len -= 1;
1010fa8c:	e0bffe17 	ldw	r2,-8(fp)
1010fa90:	10bfffc4 	addi	r2,r2,-1
1010fa94:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010fa98:	e0bffe17 	ldw	r2,-8(fp)
1010fa9c:	e0ffff17 	ldw	r3,-4(fp)
1010faa0:	1885883a 	add	r2,r3,r2
1010faa4:	10800003 	ldbu	r2,0(r2)
1010faa8:	10803fcc 	andi	r2,r2,255
1010faac:	1080201c 	xori	r2,r2,128
1010fab0:	10bfe004 	addi	r2,r2,-128
1010fab4:	10800be0 	cmpeqi	r2,r2,47
1010fab8:	1000081e 	bne	r2,zero,1010fadc <alt_find_file+0xb0>
1010fabc:	e0bffe17 	ldw	r2,-8(fp)
1010fac0:	e0ffff17 	ldw	r3,-4(fp)
1010fac4:	1885883a 	add	r2,r3,r2
1010fac8:	10800003 	ldbu	r2,0(r2)
1010facc:	10803fcc 	andi	r2,r2,255
1010fad0:	1080201c 	xori	r2,r2,128
1010fad4:	10bfe004 	addi	r2,r2,-128
1010fad8:	10000a1e 	bne	r2,zero,1010fb04 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
1010fadc:	e0bffd17 	ldw	r2,-12(fp)
1010fae0:	10800217 	ldw	r2,8(r2)
1010fae4:	e0fffe17 	ldw	r3,-8(fp)
1010fae8:	180d883a 	mov	r6,r3
1010faec:	e17fff17 	ldw	r5,-4(fp)
1010faf0:	1009883a 	mov	r4,r2
1010faf4:	010fce00 	call	1010fce0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010faf8:	1000021e 	bne	r2,zero,1010fb04 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1010fafc:	e0bffd17 	ldw	r2,-12(fp)
1010fb00:	00000706 	br	1010fb20 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
1010fb04:	e0bffd17 	ldw	r2,-12(fp)
1010fb08:	10800017 	ldw	r2,0(r2)
1010fb0c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010fb10:	e0fffd17 	ldw	r3,-12(fp)
1010fb14:	d0a00604 	addi	r2,gp,-32744
1010fb18:	18bfcc1e 	bne	r3,r2,1010fa4c <__alt_data_end+0xfffefa4c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
1010fb1c:	0005883a 	mov	r2,zero
}
1010fb20:	e037883a 	mov	sp,fp
1010fb24:	dfc00117 	ldw	ra,4(sp)
1010fb28:	df000017 	ldw	fp,0(sp)
1010fb2c:	dec00204 	addi	sp,sp,8
1010fb30:	f800283a 	ret

1010fb34 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
1010fb34:	defffa04 	addi	sp,sp,-24
1010fb38:	dfc00515 	stw	ra,20(sp)
1010fb3c:	df000415 	stw	fp,16(sp)
1010fb40:	dc000315 	stw	r16,12(sp)
1010fb44:	df000404 	addi	fp,sp,16
1010fb48:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
1010fb4c:	00bffa04 	movi	r2,-24
1010fb50:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010fb54:	e03ffc15 	stw	zero,-16(fp)
1010fb58:	00001d06 	br	1010fbd0 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
1010fb5c:	04040474 	movhi	r16,4113
1010fb60:	84034a04 	addi	r16,r16,3368
1010fb64:	e0bffc17 	ldw	r2,-16(fp)
1010fb68:	01400304 	movi	r5,12
1010fb6c:	1009883a 	mov	r4,r2
1010fb70:	0100c080 	call	10100c08 <__mulsi3>
1010fb74:	8085883a 	add	r2,r16,r2
1010fb78:	10800017 	ldw	r2,0(r2)
1010fb7c:	1000111e 	bne	r2,zero,1010fbc4 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
1010fb80:	04040474 	movhi	r16,4113
1010fb84:	84034a04 	addi	r16,r16,3368
1010fb88:	e0bffc17 	ldw	r2,-16(fp)
1010fb8c:	01400304 	movi	r5,12
1010fb90:	1009883a 	mov	r4,r2
1010fb94:	0100c080 	call	10100c08 <__mulsi3>
1010fb98:	8085883a 	add	r2,r16,r2
1010fb9c:	e0fffe17 	ldw	r3,-8(fp)
1010fba0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
1010fba4:	d0e00a17 	ldw	r3,-32728(gp)
1010fba8:	e0bffc17 	ldw	r2,-16(fp)
1010fbac:	1880020e 	bge	r3,r2,1010fbb8 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
1010fbb0:	e0bffc17 	ldw	r2,-16(fp)
1010fbb4:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
1010fbb8:	e0bffc17 	ldw	r2,-16(fp)
1010fbbc:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
1010fbc0:	00000606 	br	1010fbdc <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010fbc4:	e0bffc17 	ldw	r2,-16(fp)
1010fbc8:	10800044 	addi	r2,r2,1
1010fbcc:	e0bffc15 	stw	r2,-16(fp)
1010fbd0:	e0bffc17 	ldw	r2,-16(fp)
1010fbd4:	10800810 	cmplti	r2,r2,32
1010fbd8:	103fe01e 	bne	r2,zero,1010fb5c <__alt_data_end+0xfffefb5c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1010fbdc:	e0bffd17 	ldw	r2,-12(fp)
}
1010fbe0:	e6ffff04 	addi	sp,fp,-4
1010fbe4:	dfc00217 	ldw	ra,8(sp)
1010fbe8:	df000117 	ldw	fp,4(sp)
1010fbec:	dc000017 	ldw	r16,0(sp)
1010fbf0:	dec00304 	addi	sp,sp,12
1010fbf4:	f800283a 	ret

1010fbf8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1010fbf8:	defffe04 	addi	sp,sp,-8
1010fbfc:	df000115 	stw	fp,4(sp)
1010fc00:	df000104 	addi	fp,sp,4
1010fc04:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1010fc08:	e0bfff17 	ldw	r2,-4(fp)
1010fc0c:	10bffe84 	addi	r2,r2,-6
1010fc10:	10c00428 	cmpgeui	r3,r2,16
1010fc14:	18001a1e 	bne	r3,zero,1010fc80 <alt_exception_cause_generated_bad_addr+0x88>
1010fc18:	100690ba 	slli	r3,r2,2
1010fc1c:	00840474 	movhi	r2,4113
1010fc20:	10bf0c04 	addi	r2,r2,-976
1010fc24:	1885883a 	add	r2,r3,r2
1010fc28:	10800017 	ldw	r2,0(r2)
1010fc2c:	1000683a 	jmp	r2
1010fc30:	1010fc70 	cmpltui	zero,r2,17393
1010fc34:	1010fc70 	cmpltui	zero,r2,17393
1010fc38:	1010fc80 	call	11010fc8 <__alt_data_end+0xef0fc8>
1010fc3c:	1010fc80 	call	11010fc8 <__alt_data_end+0xef0fc8>
1010fc40:	1010fc80 	call	11010fc8 <__alt_data_end+0xef0fc8>
1010fc44:	1010fc70 	cmpltui	zero,r2,17393
1010fc48:	1010fc78 	rdprs	zero,r2,17393
1010fc4c:	1010fc80 	call	11010fc8 <__alt_data_end+0xef0fc8>
1010fc50:	1010fc70 	cmpltui	zero,r2,17393
1010fc54:	1010fc70 	cmpltui	zero,r2,17393
1010fc58:	1010fc80 	call	11010fc8 <__alt_data_end+0xef0fc8>
1010fc5c:	1010fc70 	cmpltui	zero,r2,17393
1010fc60:	1010fc78 	rdprs	zero,r2,17393
1010fc64:	1010fc80 	call	11010fc8 <__alt_data_end+0xef0fc8>
1010fc68:	1010fc80 	call	11010fc8 <__alt_data_end+0xef0fc8>
1010fc6c:	1010fc70 	cmpltui	zero,r2,17393
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1010fc70:	00800044 	movi	r2,1
1010fc74:	00000306 	br	1010fc84 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1010fc78:	0005883a 	mov	r2,zero
1010fc7c:	00000106 	br	1010fc84 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1010fc80:	0005883a 	mov	r2,zero
  }
}
1010fc84:	e037883a 	mov	sp,fp
1010fc88:	df000017 	ldw	fp,0(sp)
1010fc8c:	dec00104 	addi	sp,sp,4
1010fc90:	f800283a 	ret

1010fc94 <atexit>:
1010fc94:	200b883a 	mov	r5,r4
1010fc98:	000f883a 	mov	r7,zero
1010fc9c:	000d883a 	mov	r6,zero
1010fca0:	0009883a 	mov	r4,zero
1010fca4:	010fd5c1 	jmpi	1010fd5c <__register_exitproc>

1010fca8 <exit>:
1010fca8:	defffe04 	addi	sp,sp,-8
1010fcac:	000b883a 	mov	r5,zero
1010fcb0:	dc000015 	stw	r16,0(sp)
1010fcb4:	dfc00115 	stw	ra,4(sp)
1010fcb8:	2021883a 	mov	r16,r4
1010fcbc:	010fe740 	call	1010fe74 <__call_exitprocs>
1010fcc0:	00840474 	movhi	r2,4113
1010fcc4:	1087c204 	addi	r2,r2,7944
1010fcc8:	11000017 	ldw	r4,0(r2)
1010fccc:	20800f17 	ldw	r2,60(r4)
1010fcd0:	10000126 	beq	r2,zero,1010fcd8 <exit+0x30>
1010fcd4:	103ee83a 	callr	r2
1010fcd8:	8009883a 	mov	r4,r16
1010fcdc:	010fff40 	call	1010fff4 <_exit>

1010fce0 <memcmp>:
1010fce0:	01c000c4 	movi	r7,3
1010fce4:	3980192e 	bgeu	r7,r6,1010fd4c <memcmp+0x6c>
1010fce8:	2144b03a 	or	r2,r4,r5
1010fcec:	11c4703a 	and	r2,r2,r7
1010fcf0:	10000f26 	beq	r2,zero,1010fd30 <memcmp+0x50>
1010fcf4:	20800003 	ldbu	r2,0(r4)
1010fcf8:	28c00003 	ldbu	r3,0(r5)
1010fcfc:	10c0151e 	bne	r2,r3,1010fd54 <memcmp+0x74>
1010fd00:	31bfff84 	addi	r6,r6,-2
1010fd04:	01ffffc4 	movi	r7,-1
1010fd08:	00000406 	br	1010fd1c <memcmp+0x3c>
1010fd0c:	20800003 	ldbu	r2,0(r4)
1010fd10:	28c00003 	ldbu	r3,0(r5)
1010fd14:	31bfffc4 	addi	r6,r6,-1
1010fd18:	10c00e1e 	bne	r2,r3,1010fd54 <memcmp+0x74>
1010fd1c:	21000044 	addi	r4,r4,1
1010fd20:	29400044 	addi	r5,r5,1
1010fd24:	31fff91e 	bne	r6,r7,1010fd0c <__alt_data_end+0xfffefd0c>
1010fd28:	0005883a 	mov	r2,zero
1010fd2c:	f800283a 	ret
1010fd30:	20c00017 	ldw	r3,0(r4)
1010fd34:	28800017 	ldw	r2,0(r5)
1010fd38:	18bfee1e 	bne	r3,r2,1010fcf4 <__alt_data_end+0xfffefcf4>
1010fd3c:	31bfff04 	addi	r6,r6,-4
1010fd40:	21000104 	addi	r4,r4,4
1010fd44:	29400104 	addi	r5,r5,4
1010fd48:	39bff936 	bltu	r7,r6,1010fd30 <__alt_data_end+0xfffefd30>
1010fd4c:	303fe91e 	bne	r6,zero,1010fcf4 <__alt_data_end+0xfffefcf4>
1010fd50:	003ff506 	br	1010fd28 <__alt_data_end+0xfffefd28>
1010fd54:	10c5c83a 	sub	r2,r2,r3
1010fd58:	f800283a 	ret

1010fd5c <__register_exitproc>:
1010fd5c:	defffa04 	addi	sp,sp,-24
1010fd60:	dc000315 	stw	r16,12(sp)
1010fd64:	04040474 	movhi	r16,4113
1010fd68:	8407c204 	addi	r16,r16,7944
1010fd6c:	80c00017 	ldw	r3,0(r16)
1010fd70:	dc400415 	stw	r17,16(sp)
1010fd74:	dfc00515 	stw	ra,20(sp)
1010fd78:	18805217 	ldw	r2,328(r3)
1010fd7c:	2023883a 	mov	r17,r4
1010fd80:	10003726 	beq	r2,zero,1010fe60 <__register_exitproc+0x104>
1010fd84:	10c00117 	ldw	r3,4(r2)
1010fd88:	010007c4 	movi	r4,31
1010fd8c:	20c00e16 	blt	r4,r3,1010fdc8 <__register_exitproc+0x6c>
1010fd90:	1a000044 	addi	r8,r3,1
1010fd94:	8800221e 	bne	r17,zero,1010fe20 <__register_exitproc+0xc4>
1010fd98:	18c00084 	addi	r3,r3,2
1010fd9c:	18c7883a 	add	r3,r3,r3
1010fda0:	18c7883a 	add	r3,r3,r3
1010fda4:	12000115 	stw	r8,4(r2)
1010fda8:	10c7883a 	add	r3,r2,r3
1010fdac:	19400015 	stw	r5,0(r3)
1010fdb0:	0005883a 	mov	r2,zero
1010fdb4:	dfc00517 	ldw	ra,20(sp)
1010fdb8:	dc400417 	ldw	r17,16(sp)
1010fdbc:	dc000317 	ldw	r16,12(sp)
1010fdc0:	dec00604 	addi	sp,sp,24
1010fdc4:	f800283a 	ret
1010fdc8:	00800034 	movhi	r2,0
1010fdcc:	10800004 	addi	r2,r2,0
1010fdd0:	10002626 	beq	r2,zero,1010fe6c <__register_exitproc+0x110>
1010fdd4:	01006404 	movi	r4,400
1010fdd8:	d9400015 	stw	r5,0(sp)
1010fddc:	d9800115 	stw	r6,4(sp)
1010fde0:	d9c00215 	stw	r7,8(sp)
1010fde4:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1010fde8:	d9400017 	ldw	r5,0(sp)
1010fdec:	d9800117 	ldw	r6,4(sp)
1010fdf0:	d9c00217 	ldw	r7,8(sp)
1010fdf4:	10001d26 	beq	r2,zero,1010fe6c <__register_exitproc+0x110>
1010fdf8:	81000017 	ldw	r4,0(r16)
1010fdfc:	10000115 	stw	zero,4(r2)
1010fe00:	02000044 	movi	r8,1
1010fe04:	22405217 	ldw	r9,328(r4)
1010fe08:	0007883a 	mov	r3,zero
1010fe0c:	12400015 	stw	r9,0(r2)
1010fe10:	20805215 	stw	r2,328(r4)
1010fe14:	10006215 	stw	zero,392(r2)
1010fe18:	10006315 	stw	zero,396(r2)
1010fe1c:	883fde26 	beq	r17,zero,1010fd98 <__alt_data_end+0xfffefd98>
1010fe20:	18c9883a 	add	r4,r3,r3
1010fe24:	2109883a 	add	r4,r4,r4
1010fe28:	1109883a 	add	r4,r2,r4
1010fe2c:	21802215 	stw	r6,136(r4)
1010fe30:	01800044 	movi	r6,1
1010fe34:	12406217 	ldw	r9,392(r2)
1010fe38:	30cc983a 	sll	r6,r6,r3
1010fe3c:	4992b03a 	or	r9,r9,r6
1010fe40:	12406215 	stw	r9,392(r2)
1010fe44:	21c04215 	stw	r7,264(r4)
1010fe48:	01000084 	movi	r4,2
1010fe4c:	893fd21e 	bne	r17,r4,1010fd98 <__alt_data_end+0xfffefd98>
1010fe50:	11006317 	ldw	r4,396(r2)
1010fe54:	218cb03a 	or	r6,r4,r6
1010fe58:	11806315 	stw	r6,396(r2)
1010fe5c:	003fce06 	br	1010fd98 <__alt_data_end+0xfffefd98>
1010fe60:	18805304 	addi	r2,r3,332
1010fe64:	18805215 	stw	r2,328(r3)
1010fe68:	003fc606 	br	1010fd84 <__alt_data_end+0xfffefd84>
1010fe6c:	00bfffc4 	movi	r2,-1
1010fe70:	003fd006 	br	1010fdb4 <__alt_data_end+0xfffefdb4>

1010fe74 <__call_exitprocs>:
1010fe74:	defff504 	addi	sp,sp,-44
1010fe78:	df000915 	stw	fp,36(sp)
1010fe7c:	dd400615 	stw	r21,24(sp)
1010fe80:	dc800315 	stw	r18,12(sp)
1010fe84:	dfc00a15 	stw	ra,40(sp)
1010fe88:	ddc00815 	stw	r23,32(sp)
1010fe8c:	dd800715 	stw	r22,28(sp)
1010fe90:	dd000515 	stw	r20,20(sp)
1010fe94:	dcc00415 	stw	r19,16(sp)
1010fe98:	dc400215 	stw	r17,8(sp)
1010fe9c:	dc000115 	stw	r16,4(sp)
1010fea0:	d9000015 	stw	r4,0(sp)
1010fea4:	2839883a 	mov	fp,r5
1010fea8:	04800044 	movi	r18,1
1010feac:	057fffc4 	movi	r21,-1
1010feb0:	00840474 	movhi	r2,4113
1010feb4:	1087c204 	addi	r2,r2,7944
1010feb8:	12000017 	ldw	r8,0(r2)
1010febc:	45005217 	ldw	r20,328(r8)
1010fec0:	44c05204 	addi	r19,r8,328
1010fec4:	a0001c26 	beq	r20,zero,1010ff38 <__call_exitprocs+0xc4>
1010fec8:	a0800117 	ldw	r2,4(r20)
1010fecc:	15ffffc4 	addi	r23,r2,-1
1010fed0:	b8000d16 	blt	r23,zero,1010ff08 <__call_exitprocs+0x94>
1010fed4:	14000044 	addi	r16,r2,1
1010fed8:	8421883a 	add	r16,r16,r16
1010fedc:	8421883a 	add	r16,r16,r16
1010fee0:	84402004 	addi	r17,r16,128
1010fee4:	a463883a 	add	r17,r20,r17
1010fee8:	a421883a 	add	r16,r20,r16
1010feec:	e0001e26 	beq	fp,zero,1010ff68 <__call_exitprocs+0xf4>
1010fef0:	80804017 	ldw	r2,256(r16)
1010fef4:	e0801c26 	beq	fp,r2,1010ff68 <__call_exitprocs+0xf4>
1010fef8:	bdffffc4 	addi	r23,r23,-1
1010fefc:	843fff04 	addi	r16,r16,-4
1010ff00:	8c7fff04 	addi	r17,r17,-4
1010ff04:	bd7ff91e 	bne	r23,r21,1010feec <__alt_data_end+0xfffefeec>
1010ff08:	00800034 	movhi	r2,0
1010ff0c:	10800004 	addi	r2,r2,0
1010ff10:	10000926 	beq	r2,zero,1010ff38 <__call_exitprocs+0xc4>
1010ff14:	a0800117 	ldw	r2,4(r20)
1010ff18:	1000301e 	bne	r2,zero,1010ffdc <__call_exitprocs+0x168>
1010ff1c:	a0800017 	ldw	r2,0(r20)
1010ff20:	10003226 	beq	r2,zero,1010ffec <__call_exitprocs+0x178>
1010ff24:	a009883a 	mov	r4,r20
1010ff28:	98800015 	stw	r2,0(r19)
1010ff2c:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1010ff30:	9d000017 	ldw	r20,0(r19)
1010ff34:	a03fe41e 	bne	r20,zero,1010fec8 <__alt_data_end+0xfffefec8>
1010ff38:	dfc00a17 	ldw	ra,40(sp)
1010ff3c:	df000917 	ldw	fp,36(sp)
1010ff40:	ddc00817 	ldw	r23,32(sp)
1010ff44:	dd800717 	ldw	r22,28(sp)
1010ff48:	dd400617 	ldw	r21,24(sp)
1010ff4c:	dd000517 	ldw	r20,20(sp)
1010ff50:	dcc00417 	ldw	r19,16(sp)
1010ff54:	dc800317 	ldw	r18,12(sp)
1010ff58:	dc400217 	ldw	r17,8(sp)
1010ff5c:	dc000117 	ldw	r16,4(sp)
1010ff60:	dec00b04 	addi	sp,sp,44
1010ff64:	f800283a 	ret
1010ff68:	a0800117 	ldw	r2,4(r20)
1010ff6c:	80c00017 	ldw	r3,0(r16)
1010ff70:	10bfffc4 	addi	r2,r2,-1
1010ff74:	15c01426 	beq	r2,r23,1010ffc8 <__call_exitprocs+0x154>
1010ff78:	80000015 	stw	zero,0(r16)
1010ff7c:	183fde26 	beq	r3,zero,1010fef8 <__alt_data_end+0xfffefef8>
1010ff80:	95c8983a 	sll	r4,r18,r23
1010ff84:	a0806217 	ldw	r2,392(r20)
1010ff88:	a5800117 	ldw	r22,4(r20)
1010ff8c:	2084703a 	and	r2,r4,r2
1010ff90:	10000b26 	beq	r2,zero,1010ffc0 <__call_exitprocs+0x14c>
1010ff94:	a0806317 	ldw	r2,396(r20)
1010ff98:	2088703a 	and	r4,r4,r2
1010ff9c:	20000c1e 	bne	r4,zero,1010ffd0 <__call_exitprocs+0x15c>
1010ffa0:	89400017 	ldw	r5,0(r17)
1010ffa4:	d9000017 	ldw	r4,0(sp)
1010ffa8:	183ee83a 	callr	r3
1010ffac:	a0800117 	ldw	r2,4(r20)
1010ffb0:	15bfbf1e 	bne	r2,r22,1010feb0 <__alt_data_end+0xfffefeb0>
1010ffb4:	98800017 	ldw	r2,0(r19)
1010ffb8:	153fcf26 	beq	r2,r20,1010fef8 <__alt_data_end+0xfffefef8>
1010ffbc:	003fbc06 	br	1010feb0 <__alt_data_end+0xfffefeb0>
1010ffc0:	183ee83a 	callr	r3
1010ffc4:	003ff906 	br	1010ffac <__alt_data_end+0xfffeffac>
1010ffc8:	a5c00115 	stw	r23,4(r20)
1010ffcc:	003feb06 	br	1010ff7c <__alt_data_end+0xfffeff7c>
1010ffd0:	89000017 	ldw	r4,0(r17)
1010ffd4:	183ee83a 	callr	r3
1010ffd8:	003ff406 	br	1010ffac <__alt_data_end+0xfffeffac>
1010ffdc:	a0800017 	ldw	r2,0(r20)
1010ffe0:	a027883a 	mov	r19,r20
1010ffe4:	1029883a 	mov	r20,r2
1010ffe8:	003fb606 	br	1010fec4 <__alt_data_end+0xfffefec4>
1010ffec:	0005883a 	mov	r2,zero
1010fff0:	003ffb06 	br	1010ffe0 <__alt_data_end+0xfffeffe0>

1010fff4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
1010fff4:	defffd04 	addi	sp,sp,-12
1010fff8:	df000215 	stw	fp,8(sp)
1010fffc:	df000204 	addi	fp,sp,8
10110000:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
10110004:	0001883a 	nop
10110008:	e0bfff17 	ldw	r2,-4(fp)
1011000c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
10110010:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
10110014:	10000226 	beq	r2,zero,10110020 <_exit+0x2c>
    ALT_SIM_FAIL();
10110018:	002af070 	cmpltui	zero,zero,43969
1011001c:	00000106 	br	10110024 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
10110020:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
10110024:	003fff06 	br	10110024 <__alt_data_end+0xffff0024>
